<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="47ff881ef8c31eeb59610f39f2445d0b2043980e" translate="yes" xml:space="preserve">
          <source>Qt Quick States</source>
          <target state="translated">Qt快速状态</target>
        </trans-unit>
        <trans-unit id="914eff968adf8c8f2ffdab69ed57057b2520a747" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates 2</source>
          <target state="translated">Qt快速模板2</target>
        </trans-unit>
        <trans-unit id="c474593a2f2b7299ed98d437cd18f3065a6ddb31" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates 2 QML Types</source>
          <target state="translated">Qt快速模板2 QML类型</target>
        </trans-unit>
        <trans-unit id="e14914fea80240755381f8b809b4df7755004425" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates are the foundations of &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt;. Templates are non-visual implementations of controls' logic and behavior. They offer an interface to visualize the controls in QML using &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb1aba735f26d79be46d91844fe4e9998e38148" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates are the foundations of &lt;a href=&quot;qtquickcontrols-index#&quot;&gt;Qt Quick Controls 2&lt;/a&gt;. Templates are non-visual implementations of controls' logic and behavior. They offer an interface to visualize the controls in QML using &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;.</source>
          <target state="translated">Qt快速模板是&lt;a href=&quot;qtquickcontrols-index#&quot;&gt;Qt快速控件2&lt;/a&gt;的基础。模板是控件的逻辑和行为的非可视实现。它们提供了一个界面，可以使用&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;可视化QML中的控件。</target>
        </trans-unit>
        <trans-unit id="0d7580cf404ee422d22047c9e18b0ce42a4a9920" translate="yes" xml:space="preserve">
          <source>Qt Quick Test</source>
          <target state="translated">Qt快速测试</target>
        </trans-unit>
        <trans-unit id="5aef98f6abde99385f2b8177281f030108b26731" translate="yes" xml:space="preserve">
          <source>Qt Quick Test C++ API</source>
          <target state="translated">Qt快速测试C++API</target>
        </trans-unit>
        <trans-unit id="4af4e5e5daf9c5940ebe96cd443539415ef17bff" translate="yes" xml:space="preserve">
          <source>Qt Quick Test QML Types</source>
          <target state="translated">Qt快速测试 QML类型</target>
        </trans-unit>
        <trans-unit id="4d8aa04af68282a2291d5b972062d309b7788fee" translate="yes" xml:space="preserve">
          <source>Qt Quick Test: QML Unit Testing Framework</source>
          <target state="translated">Qt快速测试。QML单元测试框架</target>
        </trans-unit>
        <trans-unit id="772e1499c4c22c8c6653664d363522d8f1357fdf" translate="yes" xml:space="preserve">
          <source>Qt Quick Tests is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt快速测试可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;获得商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fba1b25ac30ab832113257b02107d0f177a02263" translate="yes" xml:space="preserve">
          <source>Qt Quick Tests is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444108602926bd6a6132267b48389c48b615c042" translate="yes" xml:space="preserve">
          <source>Qt Quick Tests is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c360f7b0484bfe3cfc1b007809a9e476da8148dd" translate="yes" xml:space="preserve">
          <source>Qt Quick Text Editor</source>
          <target state="translated">Qt快速文本编辑器</target>
        </trans-unit>
        <trans-unit id="6afff9f1b931bece13a3ecd77efa536cf102baec" translate="yes" xml:space="preserve">
          <source>Qt Quick Timeline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c209c2b68533185c3779c747358eb2d036cd88ca" translate="yes" xml:space="preserve">
          <source>Qt Quick Tools and Utilities</source>
          <target state="translated">Qt快速工具和实用程序</target>
        </trans-unit>
        <trans-unit id="1622275b87a26d07c2d455ad9fc291a3085cc608" translate="yes" xml:space="preserve">
          <source>Qt Quick WebGL</source>
          <target state="translated">Qt快速WebGL</target>
        </trans-unit>
        <trans-unit id="2ced90f26293050120394253dc0f410aebbcc8fb" translate="yes" xml:space="preserve">
          <source>Qt Quick WebGL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4fd5d7c756eb189a4dbb85eede7a926c41fbd4" translate="yes" xml:space="preserve">
          <source>Qt Quick WebGL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/#&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html#&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quick WebGL可以从&lt;a href=&quot;http://www.qt.io/about-us/#&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。另外，它可以在&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html#&quot;&gt;GNU通用公共许可证版本3下获得&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c550a373baae53f1e518515a09b6f5c2ed066570" translate="yes" xml:space="preserve">
          <source>Qt Quick Widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d42017afd29dab17f2266aefc53b93f162c4410" translate="yes" xml:space="preserve">
          <source>Qt Quick also provides access to &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt; in QML through &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt global object&lt;/a&gt; as &lt;code&gt;Qt.inputMethod&lt;/code&gt; property.</source>
          <target state="translated">Qt Quick还通过&lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt全局对象&lt;/a&gt;作为 &lt;code&gt;Qt.inputMethod&lt;/code&gt; 属性提供对QML中的&lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod的&lt;/a&gt;访问。</target>
        </trans-unit>
        <trans-unit id="fc4b1bb23fa9ff571c7f26447010de121fc9e73c" translate="yes" xml:space="preserve">
          <source>Qt Quick also provides access to QInputMethod in QML through &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt global object&lt;/a&gt; as &lt;code&gt;Qt.inputMethod&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61acb0efba7f7a83d050915411a594722f1512e6" translate="yes" xml:space="preserve">
          <source>Qt Quick and Qt Quick 3D are now fully unified in this regard. Any configuration setting related to the RHI, for example, which graphics API to choose to render with, are applicable to both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de04cca2985a4010b580389be431eeaa43fdd4ee" translate="yes" xml:space="preserve">
          <source>Qt Quick applications use the same underlying localization system as Qt C++ applications (lupdate, lrelease and .ts files). You use the same tools as described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html&quot;&gt;Qt Linguist Manual&lt;/a&gt;. You can even have user interface strings in C++ and QML source in the same application. The system will create a single combined translation file and the strings are accessible from QML and C++.</source>
          <target state="translated">Qt Quick应用程序使用与Qt C ++应用程序相同的基础本地化系统（lupdate，lrelease和.ts文件）。您可以使用《&lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html&quot;&gt;Qt语言学家手册》中&lt;/a&gt;所述的相同工具。您甚至可以在同一应用程序中使用C ++和QML源代码提供用户界面字符串。系统将创建一个单独的组合翻译文件，并且可以从QML和C ++访问这些字符串。</target>
        </trans-unit>
        <trans-unit id="5ea1a335d6a01640e9d53f5522b67d20d0cd9196" translate="yes" xml:space="preserve">
          <source>Qt Quick applications use the same underlying localization system as Qt C++ applications (lupdate, lrelease and .ts files). You use the same tools as described in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/linguist-manager.html&quot;&gt;Qt Linguist Manual&lt;/a&gt;. You can even have user interface strings in C++ and QML source in the same application. The system will create a single combined translation file and the strings are accessible from QML and C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd708b88c9278b458ef5153f9476ee3b4f31b0a0" translate="yes" xml:space="preserve">
          <source>Qt Quick applications use the same underlying localization system as Qt C++ applications (lupdate, lrelease and .ts files). You use the same tools as described in the &lt;a href=&quot;https://doc.qt.io/qt-6.0/linguist-manager.html&quot;&gt;Qt Linguist Manual&lt;/a&gt;. You can even have user interface strings in C++ and QML source in the same application. The system will create a single combined translation file and the strings are accessible from QML and C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113441e7d7b51142a1e9ed9ec4dbc7a1ecf40918" translate="yes" xml:space="preserve">
          <source>Qt Quick content used as a texture map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3762fb5611ff668e712aa0d87fb6235eb0dabc" translate="yes" xml:space="preserve">
          <source>Qt Quick is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quick可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;获得商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc7e225ac80147e8332bb4e84d0b0704e65e8d0e" translate="yes" xml:space="preserve">
          <source>Qt Quick is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98b2ace2e62b6409c828d2aaadb70ae94e6abd5" translate="yes" xml:space="preserve">
          <source>Qt Quick is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00dc9e1bbaba5d36a1e01de873bcb4b83745bdb" translate="yes" xml:space="preserve">
          <source>Qt Quick is designed for developing animated, fluid user interfaces. When mirroring your application, remember to test that the animations and transitions continue to work as expected. If you do not have the resources to add right-to-left support for your application, it may be better to just keep the application layouts left aligned and just make sure that text is translated and aligned properly.</source>
          <target state="translated">Qt Quick是为开发动画、流畅的用户界面而设计的。当镜像您的应用程序时,请记住测试动画和转换是否继续按照预期工作。如果你没有资源为你的应用程序添加从右到左的支持,最好是保持应用程序布局左对齐,并确保文本被正确翻译和对齐。</target>
        </trans-unit>
        <trans-unit id="9f7b724af361b510951a9514b2977f32bfddf6e1" translate="yes" xml:space="preserve">
          <source>Qt Quick is the standard library of QML types and functionality for QML. It includes visual types, interactive types, animations, models and views, particle effects and shader effects. A QML application developer can get access to all of that functionality with a single import statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7291c43f982b3179d91b01991f3a8848413e585" translate="yes" xml:space="preserve">
          <source>Qt Quick is the standard library of types and functionality for QML. It includes visual types, interactive types, animations, models and views, particle effects and shader effects. A QML application developer can get access to all of that functionality with a single import statement.</source>
          <target state="translated">Qt Quick是QML的标准类型库和功能库,包括可视化类型、交互式类型、动画、模型和视图、粒子效果和着色器效果。它包括可视化类型、交互式类型、动画、模型和视图、粒子效果和着色器效果。一个QML应用程序开发人员可以通过一个单一的导入语句来获得所有这些功能。</target>
        </trans-unit>
        <trans-unit id="daf7ec96b5d6f67aa31b6148609fff5805becb0a" translate="yes" xml:space="preserve">
          <source>Qt Quick items in the 3D scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21509dc7b7eeb5b18fbe51eb9ec8ee814b3fcebc" translate="yes" xml:space="preserve">
          <source>Qt Quick items use a recursive drawing algorithm for determining which items are drawn on top in case of collisions. In general items are drawn on top of their parent items, in the order they were created (or specified in the QML file). So in the following example, the blue rectangle will be drawn on top of the green rectangle:</source>
          <target state="translated">Qt Quick items使用递归绘制算法来决定在发生碰撞的情况下哪些项目被绘制在顶部。一般来说,项目会按照创建的顺序(或在QML文件中指定的顺序)被画在它们的父项目的顶部,所以在下面的例子中,蓝色的矩形会被画在绿色的矩形的顶部。所以在下面的例子中,蓝色矩形将被画在绿色矩形的顶部。</target>
        </trans-unit>
        <trans-unit id="ed4171457d1aecf0e8a63a8cced9f97bbacffaef" translate="yes" xml:space="preserve">
          <source>Qt Quick only provides basic visual types and much of Qt's functionality is exposed to QML through other modules. If you require the functionality of those modules, you should browse their QML documentation.</source>
          <target state="translated">Qt Quick只提供了基本的可视化类型,Qt的大部分功能都是通过其他模块暴露给QML的。如果你需要这些模块的功能,你应该浏览它们的QML文档。</target>
        </trans-unit>
        <trans-unit id="94845d3ec8c87cc7c2dcce22ee1754b545f31de4" translate="yes" xml:space="preserve">
          <source>Qt Quick provides everything needed to create a rich application with a fluid and dynamic user interface. It enables user interfaces to be built around the behavior of user interface components and how they connect with one another, and it provides a visual canvas with its own coordinate system and rendering engine. Animation and transition effects are a first class concept in Qt Quick, and visual effects can be supplemented through specialized components for particle and shader effects.</source>
          <target state="translated">Qt Quick提供了创建一个具有流畅和动态用户界面的丰富应用程序所需的一切。它可以围绕用户界面组件的行为以及它们之间的连接方式来构建用户界面,它提供了一个具有自己坐标系统和渲染引擎的视觉画布。动画和过渡效果是Qt Quick中的一流概念,视觉效果可以通过专门的组件来补充粒子和着色器效果。</target>
        </trans-unit>
        <trans-unit id="dbbb6ff5c8b9651b5f75e6a27d1f004138f42c37" translate="yes" xml:space="preserve">
          <source>Qt Quick provides the &lt;a href=&quot;qml-qtquick-anchorchanges&quot;&gt;AnchorChanges&lt;/a&gt; type for specifying the anchors in a state.</source>
          <target state="translated">Qt Quick提供了&lt;a href=&quot;qml-qtquick-anchorchanges&quot;&gt;AnchorChanges&lt;/a&gt;类型，用于指定状态下的锚点。</target>
        </trans-unit>
        <trans-unit id="4436cf7aa6cbc08ada7dbbfa424bdaafd6478b1c" translate="yes" xml:space="preserve">
          <source>Qt Quick specifics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bdda53415e0a0eab1797311625747bfdc32bdd" translate="yes" xml:space="preserve">
          <source>Qt Quick-based Wayland compositors can use this type to display a client's contents on an output device. It passes user input to the client.</source>
          <target state="translated">基于Qt Quick的Wayland合成器可以使用这种类型在输出设备上显示客户端的内容。它将用户输入传递给客户端。</target>
        </trans-unit>
        <trans-unit id="622ccdf7689216b4552c32938a50ea81e2f86fb1" translate="yes" xml:space="preserve">
          <source>Qt Reference Documentation: Getting Started</source>
          <target state="translated">Qt参考文档。入门</target>
        </trans-unit>
        <trans-unit id="43902e35dc92b222b7d6470de6b0b4fcc933c510" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects</source>
          <target state="translated">Qt远程对象</target>
        </trans-unit>
        <trans-unit id="d4410b1f837c1168b55ce84040cd107c51cbe8fc" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects (QtRO) is an Inter-Process Communication (IPC) module developed for Qt. This module extends Qt's existing functionalities to enable information exchange between processes or computers, easily.</source>
          <target state="translated">Qt Remote Objects (QtRO)是一个为Qt开发的进程间通信(IPC)模块。该模块扩展了Qt现有的功能,使进程间或计算机间的信息交换变得容易。</target>
        </trans-unit>
        <trans-unit id="2d14461b1f9ad39d9d883475aeb7f1f0ff07fdcd" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects - External QIODevices</source>
          <target state="translated">Qt远程对象--外部QIODevices。</target>
        </trans-unit>
        <trans-unit id="13fa59fcd553d592a52e33b15ccb9075e5d5845e" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects C++ Classes</source>
          <target state="translated">Qt远程对象C++类</target>
        </trans-unit>
        <trans-unit id="ae0300e27d0655ed426791746f54c95994b7422d" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Compiler</source>
          <target state="translated">Qt远程对象编译器</target>
        </trans-unit>
        <trans-unit id="23bc0a2f425b4c03583e0bfec6da4a3fd82cf3fc" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Nodes</source>
          <target state="translated">Qt远程对象节点</target>
        </trans-unit>
        <trans-unit id="c9e0aaead114ca9d3a4c2d8f3a1ca5faefcb917e" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Protocol Versioning</source>
          <target state="translated">Qt远程对象协议版本控制</target>
        </trans-unit>
        <trans-unit id="24e674ba81d8af613b20f4b06c10d8d8cf216a0c" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects QML Types</source>
          <target state="translated">Qt远程对象 QML类型</target>
        </trans-unit>
        <trans-unit id="3189a4538079fff9d6aeb935be4dbbff74056edd" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Registry</source>
          <target state="translated">Qt远程对象注册表</target>
        </trans-unit>
        <trans-unit id="62638b0c21a6fb5379798c382f87f66a172092f8" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Replica</source>
          <target state="translated">Qt Remote Objects Replica</target>
        </trans-unit>
        <trans-unit id="8c96e15cd1c878b7837bea93e613a397223cb8fa" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Replica Objects</source>
          <target state="translated">Qt 远程对象 复制对象</target>
        </trans-unit>
        <trans-unit id="f817d5404ce77c6a389bb771101ff90e76c4c33b" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Source</source>
          <target state="translated">Qt远程对象源码</target>
        </trans-unit>
        <trans-unit id="8a48f59b40bf769069420c4fba8f7854cf577b36" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Source Objects</source>
          <target state="translated">Qt远程对象源对象</target>
        </trans-unit>
        <trans-unit id="6ee3364ce0f0f5af160a60c47e89195244fbeba6" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects also allows &quot;External Schemas&quot; to be used with the registry, which helps with connection setup. On the &lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; side, the user must set the hostUrl with the desired schema.</source>
          <target state="translated">Qt Remote Objects还允许将&amp;ldquo;外部架构&amp;rdquo;与注册表一起使用，这有助于建立连接。在&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt;端，用户必须使用所需的架构设置hostUrl。</target>
        </trans-unit>
        <trans-unit id="5571fdfb7958f372443691b1711d3bf84645c236" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Remote Objects可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。另外，它可以在&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2下使用&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfdb4d9dc0aff208deb886acc537162040840a2a" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b992904e52342c2e1bd1128396dbeeb4214006d" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects supports several communications channels out-of-the-box, such as the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; and &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; pair. Given the desired &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; for tcp, or the desired name (for the &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; and &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; pair), the code needed to listen and connect are boilerplate and handled internally by Qt. Qt Remote Objects supports other types of &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as well, and the &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; classes provide additional methods to support cases where custom code is needed.</source>
          <target state="translated">Qt Remote Objects支持多种现成的通信通道，例如&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;和&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;对。给定所需的tcp &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;或所需的名称（对于&lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt;和&lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt;对），侦听和连接所需的代码是样板，由Qt在内部处理。 Qt远程对象也支持其他类型的&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;，&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt;类提供了其他方法来支持需要自定义代码的情况。</target>
        </trans-unit>
        <trans-unit id="6784753072513712a6dbae7355c6f193bfbd95b8" translate="yes" xml:space="preserve">
          <source>Qt Resource files. Expressing it as an empty scheme, :/..., is not supported.</source>
          <target state="translated">Qt资源文件。不支持将其表达为空方案,:/...。</target>
        </trans-unit>
        <trans-unit id="8cb6b0a95ac74bd3ba835a341a28d19405815de4" translate="yes" xml:space="preserve">
          <source>Qt Role</source>
          <target state="translated">Qt角色</target>
        </trans-unit>
        <trans-unit id="c019a6a5b4b7e3ca4d61e924b0085b41009c341b" translate="yes" xml:space="preserve">
          <source>Qt Runtime Location</source>
          <target state="translated">Qt运行时位置</target>
        </trans-unit>
        <trans-unit id="5e1f50dc0e955a4a1554b0e4f8ef5050a56725ce" translate="yes" xml:space="preserve">
          <source>Qt Runtime Target Requirements</source>
          <target state="translated">Qt Runtime目标要求</target>
        </trans-unit>
        <trans-unit id="2fc4da54f39782a8890fd47f066461b56d28876d" translate="yes" xml:space="preserve">
          <source>Qt SCXML</source>
          <target state="translated">Qt SCXML</target>
        </trans-unit>
        <trans-unit id="575b03839fd0e4f07a4bae543b77b3a8667c697d" translate="yes" xml:space="preserve">
          <source>Qt SCXML Examples</source>
          <target state="translated">Qt SCXML示例</target>
        </trans-unit>
        <trans-unit id="0c39316240387951bb8705c78847267f7fda169c" translate="yes" xml:space="preserve">
          <source>Qt SCXML Extensions</source>
          <target state="translated">Qt SCXML扩展</target>
        </trans-unit>
        <trans-unit id="040f3b5d97e8445ca54a51945d075bd9c4749316" translate="yes" xml:space="preserve">
          <source>Qt SCXML Overview</source>
          <target state="translated">Qt SCXML概述</target>
        </trans-unit>
        <trans-unit id="182419cb26f1226a74004b692c7a2a2818e1f407" translate="yes" xml:space="preserve">
          <source>Qt SCXML supports the following data models:</source>
          <target state="translated">Qt SCXML支持以下数据模型。</target>
        </trans-unit>
        <trans-unit id="5b18215179bcfdd8a7bd85776e3927622d2dab13" translate="yes" xml:space="preserve">
          <source>Qt SQL</source>
          <target state="translated">Qt SQL</target>
        </trans-unit>
        <trans-unit id="b61d3f69833ddcf185c6163c6bb5ef01730fe933" translate="yes" xml:space="preserve">
          <source>Qt SQL is an essential module which provides support for SQL databases. Qt SQL's APIs are divided into different layers:</source>
          <target state="translated">Qt SQL是一个必不可少的模块,它提供了对SQL数据库的支持。Qt SQL的API分为不同的层次。</target>
        </trans-unit>
        <trans-unit id="67719c9af309dd8cc46b865ef163b529f2be2217" translate="yes" xml:space="preserve">
          <source>Qt SQL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt SQL已获得&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company的&lt;/a&gt;商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="852688385e685c0ebfc682aa88a5e60717fc4d3e" translate="yes" xml:space="preserve">
          <source>Qt SQL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924c2b24c067a5ef6fb12d2f20abe60a5bef01af" translate="yes" xml:space="preserve">
          <source>Qt SQL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses: The &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e153428c38e0527dd743880670988076f3b4b37" translate="yes" xml:space="preserve">
          <source>Qt SVG</source>
          <target state="translated">Qt SVG</target>
        </trans-unit>
        <trans-unit id="521f2d5148735aba3f955e1c864f64a7093e8618" translate="yes" xml:space="preserve">
          <source>Qt SVG C++ Classes</source>
          <target state="translated">Qt SVG C++类</target>
        </trans-unit>
        <trans-unit id="79c41702bcf778192a587ba687dc4b677d750f7a" translate="yes" xml:space="preserve">
          <source>Qt SVG Widgets C++ Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcebf876d16fd5c43dd930a36f54baf7b40cd61" translate="yes" xml:space="preserve">
          <source>Qt SVG comes with the following examples:</source>
          <target state="translated">Qt SVG自带的例子如下。</target>
        </trans-unit>
        <trans-unit id="2dd2f3f5dbc6b7c0772f72193ec004d27e718e1c" translate="yes" xml:space="preserve">
          <source>Qt SVG is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt SVG可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;获得商业许可。另外，它可以在&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2下使用&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cd6e25d122ede09aedc79143c0d0432ccca0c55" translate="yes" xml:space="preserve">
          <source>Qt SVG is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24554dca8cf948e5605b051366d1745d71f2cd6c" translate="yes" xml:space="preserve">
          <source>Qt SVG is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932c6449b7f4e03944efd7012be13cb7de21c48f" translate="yes" xml:space="preserve">
          <source>Qt SVG provides classes for rendering SVG files. To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">Qt SVG提供了用于渲染SVG文件的类。要包含模块类的定义,请使用以下指令。</target>
        </trans-unit>
        <trans-unit id="3bdec155cb080bee537fdfcea853eeaa3cd27305" translate="yes" xml:space="preserve">
          <source>Qt Script</source>
          <target state="translated">Qt脚本</target>
        </trans-unit>
        <trans-unit id="82dd9b92c9f5b07bb2b70d945fce99ced63b3fb8" translate="yes" xml:space="preserve">
          <source>Qt Sensors</source>
          <target state="translated">Qt传感器</target>
        </trans-unit>
        <trans-unit id="5639af73aa84461edad1bcc6e1a734f1916163b6" translate="yes" xml:space="preserve">
          <source>Qt Sensors - Grue Sensor Example</source>
          <target state="translated">Qt传感器-Grue传感器示例</target>
        </trans-unit>
        <trans-unit id="72c5017b0668c5b368d056f41d2529427e45815f" translate="yes" xml:space="preserve">
          <source>Qt Sensors 5.0 (the initial release) is generally expected to be source compatible with QtMobility Sensors 1.2.</source>
          <target state="translated">Qt Sensors 5.0(初始版本)一般预计将与QtMobility Sensors 1.2兼容。</target>
        </trans-unit>
        <trans-unit id="998d3964f7848c5872cb96f8e02c7002166605b8" translate="yes" xml:space="preserve">
          <source>Qt Sensors C++ Overview</source>
          <target state="translated">Qt Sensors C++概述</target>
        </trans-unit>
        <trans-unit id="be3b04930a5ffb272be6f61238ce0bb13f4e5cb5" translate="yes" xml:space="preserve">
          <source>Qt Sensors Examples</source>
          <target state="translated">Qt传感器示例</target>
        </trans-unit>
        <trans-unit id="9e8f104236aba7a9c79e638107ce7c21bc1d469b" translate="yes" xml:space="preserve">
          <source>Qt Sensors QML Types</source>
          <target state="translated">Qt传感器 QML类型</target>
        </trans-unit>
        <trans-unit id="76663452a39bad266dfa7ac77c53286aba763999" translate="yes" xml:space="preserve">
          <source>Qt Serial Bus</source>
          <target state="translated">Qt 串行总线</target>
        </trans-unit>
        <trans-unit id="2b083b4dccf1405b7792845ea420c014133138d4" translate="yes" xml:space="preserve">
          <source>Qt Serial Port</source>
          <target state="translated">Qt串口</target>
        </trans-unit>
        <trans-unit id="611561eef6bcda9a24a98e6a558d683382d31d52" translate="yes" xml:space="preserve">
          <source>Qt Serial Port provides the basic functionality, which includes configuring, I/O operations, getting and setting the control signals of the RS-232 pinouts.</source>
          <target state="translated">Qt串口提供了基本功能,包括配置、I/O操作、获取和设置RS-232引脚的控制信号。</target>
        </trans-unit>
        <trans-unit id="efd7c1d3c152a89cd7f82ab3ff37c88697fc758e" translate="yes" xml:space="preserve">
          <source>Qt Shader Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681dfff0dcb7334f1eaac3c720c76f0da8b65f73" translate="yes" xml:space="preserve">
          <source>Qt Shader Tools Build System Integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1f6f7c11434767f94e49c911d09089e3abb9fb" translate="yes" xml:space="preserve">
          <source>Qt Shader Tools C++ Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b4dedd42e16832704159591f36fdf70fadc941" translate="yes" xml:space="preserve">
          <source>Qt Speech</source>
          <target state="translated">Qt语音</target>
        </trans-unit>
        <trans-unit id="b8be06a70031ad36ff5bec3af70a15c7a2481376" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet is generally case insensitive (i.e., &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt;, &lt;code&gt;COLOR&lt;/code&gt;, and &lt;code&gt;cOloR&lt;/code&gt; refer to the same property). The only exceptions are class names, &lt;a href=&quot;qobject#objectName-prop&quot;&gt;object names&lt;/a&gt;, and Qt property names, which are case sensitive.</source>
          <target state="translated">Qt样式表通常不区分大小写（即 &lt;code&gt;color&lt;/code&gt; ， &lt;code&gt;Color&lt;/code&gt; ， &lt;code&gt;COLOR&lt;/code&gt; 和 &lt;code&gt;cOloR&lt;/code&gt; 指代相同的属性）。唯一的例外是类名，&lt;a href=&quot;qobject#objectName-prop&quot;&gt;对象名&lt;/a&gt;和Qt属性名，它们区分大小写。</target>
        </trans-unit>
        <trans-unit id="6277b9de9d7f29f6d768f309c505038830f71608" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet terminology and syntactic rules are almost identical to those of HTML CSS. If you already know CSS, you can probably skim quickly through this section.</source>
          <target state="translated">Qt Style Sheet的术语和语法规则与HTML CSS几乎完全相同。如果你已经了解CSS,你可能会很快地浏览这一部分。</target>
        </trans-unit>
        <trans-unit id="35b0b2d893bcc1877a72d0b1af73ee6f326dd636" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet uses QObject::className() of the widget to determine when to apply the Type Selector. When custom widgets are inside namespaces, the QObject::className() returns &amp;lt;namespace&amp;gt;::&amp;lt;classname&amp;gt;. This conflicts with the syntax for &lt;a href=&quot;#sub-controls&quot;&gt;Sub-Controls&lt;/a&gt;. To overcome this problem, when using the Type Selector for widgets inside namespaces, we must replace the &quot;::&quot; with &quot;--&quot;. For example,</source>
          <target state="translated">Qt样式表使用小部件的QObject :: className（）来确定何时应用类型选择器。当自定义窗口小部件位于名称空间中时，QObject :: className（）返回&amp;lt;namespace&amp;gt; :: &amp;lt;classname&amp;gt;。这与&lt;a href=&quot;#sub-controls&quot;&gt;Sub-Controls&lt;/a&gt;的语法冲突。为了克服这个问题，当在名称空间内的窗口小部件中使用类型选择器时，必须将&amp;ldquo; ::&amp;rdquo;替换为&amp;ldquo;-&amp;rdquo;。例如，</target>
        </trans-unit>
        <trans-unit id="e62bd2be542518110b507d6fb88eda13f0c72f4f" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet uses QObject::className() of the widget to determine when to apply the Type Selector. When custom widgets are inside namespaces, the QObject::className() returns &amp;lt;namespace&amp;gt;&lt;a href=&quot;qromancalendar&quot;&gt;::&lt;/a&gt;&amp;lt;classname&amp;gt;. This conflicts with the syntax for &lt;a href=&quot;stylesheet-syntax#sub-controls&quot;&gt;Sub-Controls&lt;/a&gt;. To overcome this problem, when using the Type Selector for widgets inside namespaces, we must replace the &quot;&lt;a href=&quot;qromancalendar&quot;&gt;::&lt;/a&gt;&quot; with &quot;--&quot;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b010ed82273cc6489fd72e2c5bacaf9bc4ea30" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets</source>
          <target state="translated">Qt样式表</target>
        </trans-unit>
        <trans-unit id="05401036b5c3a12c588d30b1490170750f31fbf8" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets Examples</source>
          <target state="translated">Qt样式表示例</target>
        </trans-unit>
        <trans-unit id="0b85d43060c7b530d4cf888979d1fa574c63cac2" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets Reference</source>
          <target state="translated">Qt样式表参考</target>
        </trans-unit>
        <trans-unit id="2d2e8b0891b59cf9647f94ca1d68d5ff6183fa85" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets are a powerful mechanism that allows you to customize the appearance of widgets, in addition to what is already possible by subclassing &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. The concepts, terminology, and syntax of Qt Style Sheets are heavily inspired by HTML &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;Cascading Style Sheets (CSS)&lt;/a&gt; but adapted to the world of widgets.</source>
          <target state="translated">Qt样式表是一种强大的机制，除了可以通过子类化&lt;a href=&quot;qstyle&quot;&gt;QStyle来&lt;/a&gt;实现之外，还可以自定义小部件的外观。Qt样式表的概念，术语和语法在很大程度上受HTML &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;级联样式表（CSS）的&lt;/a&gt;启发，但适用于小部件的世界。</target>
        </trans-unit>
        <trans-unit id="b41a519beea5f6081ed19f25a4698e9c6f13b1d4" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets support various properties, pseudo-states, and subcontrols that make it possible to customize the look of widgets.</source>
          <target state="translated">Qt Style Sheets支持各种属性、伪状态和子控件,使其能够自定义widgets的外观。</target>
        </trans-unit>
        <trans-unit id="ba56eefabf803b75e2674bb29b2037736c03cba9" translate="yes" xml:space="preserve">
          <source>Qt Test</source>
          <target state="translated">Qt测试</target>
        </trans-unit>
        <trans-unit id="2f53cf61b5ecd2be5c37fc6b6fcdc3304ce4463e" translate="yes" xml:space="preserve">
          <source>Qt Test Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b26355b82c0c663a3031e76eae0ba50015a711a" translate="yes" xml:space="preserve">
          <source>Qt Test C++ Classes</source>
          <target state="translated">Qt测试C++类</target>
        </trans-unit>
        <trans-unit id="1fd4acfc27c007bb23c82c9507f33066926a1ac4" translate="yes" xml:space="preserve">
          <source>Qt Test Overview</source>
          <target state="translated">Qt测试概述</target>
        </trans-unit>
        <trans-unit id="a6fef081a783547c35b359449e44b7f8e4c4aee5" translate="yes" xml:space="preserve">
          <source>Qt Test Tutorial</source>
          <target state="translated">Qt测试教程</target>
        </trans-unit>
        <trans-unit id="6ba80da1e594a45819a46708d8a1d905d0d338e4" translate="yes" xml:space="preserve">
          <source>Qt Test is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt测试可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;获得商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b2436bdac10eda08ef46c469fa45bb199996188" translate="yes" xml:space="preserve">
          <source>Qt Test is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7988715e3b502bac66b3cfe61fdebea085105dac" translate="yes" xml:space="preserve">
          <source>Qt Test is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses: The &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f48a85c1de473942a0b38e45a93071ecb77db2" translate="yes" xml:space="preserve">
          <source>Qt Test provides classes for unit testing Qt applications and libraries. All public methods are in the &lt;a href=&quot;qtest&quot;&gt;QTest&lt;/a&gt; namespace. In addition, the &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; class provides easy introspection for Qt's signals and slots, and the &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; allows for non-destructive testing of item models.</source>
          <target state="translated">Qt Test提供用于对Qt应用程序和库进行单元测试的类。所有公共方法都在&lt;a href=&quot;qtest&quot;&gt;QTest&lt;/a&gt;命名空间中。此外，&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;类为Qt的信号和插槽提供了自省功能，而&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt;允许对项目模型进行非破坏性测试。</target>
        </trans-unit>
        <trans-unit id="d9a7cbf4b3213be3d383e0f738f44f3529705123" translate="yes" xml:space="preserve">
          <source>Qt Training</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a89319fb6b333cd0d0950774523084e599c72e8" translate="yes" xml:space="preserve">
          <source>Qt Type</source>
          <target state="translated">Qt类型</target>
        </trans-unit>
        <trans-unit id="7f97296c2902d1de8d52e422b27265af2a75ead3" translate="yes" xml:space="preserve">
          <source>Qt UI Tools</source>
          <target state="translated">Qt UI工具</target>
        </trans-unit>
        <trans-unit id="d2fa31b976eb7e43d90aa076b873130ff435771b" translate="yes" xml:space="preserve">
          <source>Qt UI Tools Examples</source>
          <target state="translated">Qt UI工具示例</target>
        </trans-unit>
        <trans-unit id="8d30304658818f55ab2da6fdbfb982d17e77934a" translate="yes" xml:space="preserve">
          <source>Qt UI Tools is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 6.0, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e209f0e294d49d23de15233213c00240709f296a" translate="yes" xml:space="preserve">
          <source>Qt UI Tools is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. Since Qt 5.11, it is also available under the BSD 3-Clause &quot;New&quot; or &quot;Revised&quot; License:</source>
          <target state="translated">Qt UI工具可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;获得商业许可。从Qt 5.11开始，在BSD 3条款&amp;ldquo;新&amp;rdquo;或&amp;ldquo;修订&amp;rdquo;许可证下也可以使用它：</target>
        </trans-unit>
        <trans-unit id="e5a1565060edcdd318bd23a0cda72a58702aca11" translate="yes" xml:space="preserve">
          <source>Qt USA</source>
          <target state="translated">Qt美国</target>
        </trans-unit>
        <trans-unit id="b137daab1cc4ef355146bc1e2a19790a7e4e0bc7" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard</source>
          <target state="translated">Qt虚拟键盘</target>
        </trans-unit>
        <trans-unit id="772dac683ad3f374c8d390407015fd221e99d868" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard Examples</source>
          <target state="translated">Qt虚拟键盘示例</target>
        </trans-unit>
        <trans-unit id="7e64ca8461c1abe52c5eb06c9ffae1f5ebb8009c" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard Layouts</source>
          <target state="translated">Qt虚拟键盘布局</target>
        </trans-unit>
        <trans-unit id="6550b5de08a99cbc003eb1acc7b1cba467458a32" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt虚拟键盘可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt公司&lt;/a&gt;获得商业许可。另外，它可以在&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU通用公共许可证版本3下获得&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b400e15424c01c43a38dbe49050342717d670db1" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10531c87dfdbefbca34a58a18a2f7ca24538a5a3" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard supports handwriting recognition through open source and commercially-licensed engines.</source>
          <target state="translated">Qt虚拟键盘通过开源和商业授权的引擎支持手写识别。</target>
        </trans-unit>
        <trans-unit id="46a1be7d167391f2896456803496b1c22306b0f8" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor</source>
          <target state="translated">Qt Wayland Compositor</target>
        </trans-unit>
        <trans-unit id="aa74a7a68fd6d6ade09e119f0cbc5d718eb96b8a" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor C++ Classes</source>
          <target state="translated">Qt Wayland Compositor C++类</target>
        </trans-unit>
        <trans-unit id="04e4c92037017449400409effec14eb36533e55c" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor QML Types</source>
          <target state="translated">Qt Wayland Compositor QML类型</target>
        </trans-unit>
        <trans-unit id="c153cf2ebe9cb82f99cdef40f4f15f40b9227d96" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin are available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416e6b990a995055661c672deead095be9faed48" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin are available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, they are available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Wayland Compositor和Qt Wayland集成插件可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。另外，它们可以在&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2下使用&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbc26b69983fd0cef01ea0eeec1be26a69d692a1" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin are available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, they are available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89949d78528e4fd6fe961b56723d584e4492a38a" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin use protocol definitions under following permissive licenses:</source>
          <target state="translated">Qt Wayland Compositor 和 Qt Wayland 集成插件在以下许可下使用协议定义。</target>
        </trans-unit>
        <trans-unit id="2cd52c988abe390ff44a76341c5c160c4171e646" translate="yes" xml:space="preserve">
          <source>Qt Wayland provides a &lt;code&gt;wayland&lt;/code&gt; platform plugin that allows Qt applications to connect to a Wayland compositor.</source>
          <target state="translated">Qt的韦兰提供了 &lt;code&gt;wayland&lt;/code&gt; 平台的插件，允许Qt应用程序连接到Wayland的合成。</target>
        </trans-unit>
        <trans-unit id="af161ad5a31d9acf881adfcbb3de35c43f32d884" translate="yes" xml:space="preserve">
          <source>Qt WebAssembly Platform Notes</source>
          <target state="translated">Qt WebAssembly平台注意事项</target>
        </trans-unit>
        <trans-unit id="7c85004129e110e3b5c335211a461fbd89e7aa22" translate="yes" xml:space="preserve">
          <source>Qt WebChannel</source>
          <target state="translated">Qt WebChannel</target>
        </trans-unit>
        <trans-unit id="fbe78370fd7220a0639ba5a314d05c8f3decca32" translate="yes" xml:space="preserve">
          <source>Qt WebChannel JavaScript API</source>
          <target state="translated">Qt WebChannel JavaScript API</target>
        </trans-unit>
        <trans-unit id="92ebe479a380217133b845c53504cdefc595b532" translate="yes" xml:space="preserve">
          <source>Qt WebChannel enables peer-to-peer communication between a server (QML/C++ application) and a client (HTML/JavaScript or QML application). It is supported out of the box by &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;. In addition it can work on all browsers that support &lt;a href=&quot;qtwebsockets-index&quot;&gt;WebSockets&lt;/a&gt;, enabling Qt WebChannel clients to run in any JavaScript environment (including QML). This requires the implementation of a custom transport based on Qt WebSockets.</source>
          <target state="translated">Qt WebChannel支持在服务器（QML / C ++应用程序）和客户端（HTML / JavaScript或QML应用程序）之间进行对等通信。&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;提供了开箱即用的支持。此外，它可以在所有支持&lt;a href=&quot;qtwebsockets-index&quot;&gt;WebSockets的&lt;/a&gt;浏览器上运行，从而使Qt WebChannel客户端可以在任何JavaScript环境（包括QML）中运行。这需要基于Qt WebSockets的自定义传输的实现。</target>
        </trans-unit>
        <trans-unit id="e26a09fac78c32074842b257de376b9714a2b6d8" translate="yes" xml:space="preserve">
          <source>Qt WebChannel is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. These free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebChannel已获得&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company的&lt;/a&gt;商业许可。此外，它可在免费软件许可下获得。这些免费软件许可为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共通用许可版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共通用许可版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b978cbc99ac029ab317a0369f3135507d92f13b4" translate="yes" xml:space="preserve">
          <source>Qt WebChannel is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. These free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79a75950264d15d0800b4377afe55d42e4722a4" translate="yes" xml:space="preserve">
          <source>Qt WebEngine</source>
          <target state="translated">Qt WebEngine</target>
        </trans-unit>
        <trans-unit id="55d0e192a99e7183141bf51614d718958dc9b048" translate="yes" xml:space="preserve">
          <source>Qt WebEngine C++ Classes and Namespaces</source>
          <target state="translated">Qt WebEngine的C++类和命名空间</target>
        </trans-unit>
        <trans-unit id="c4f3f7670a4af1b48a4e8ef25f36823a008a14ff" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Core C++ Classes</source>
          <target state="translated">Qt WebEngine核心C++类</target>
        </trans-unit>
        <trans-unit id="380827fe34b68ae46ebd0fddd652dc43c2cb393d" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Debugging and Profiling</source>
          <target state="translated">Qt WebEngine 调试和剖析</target>
        </trans-unit>
        <trans-unit id="ac1b6639a5220e96d20a27dbfae7f294c66ed956" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Dependencies</source>
          <target state="translated">Qt WebEngine Dependencies</target>
        </trans-unit>
        <trans-unit id="9bd4ba6a258cdbf846bd126e4d35ac64f47ff446" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Developer Tools</source>
          <target state="translated">Qt WebEngine开发工具</target>
        </trans-unit>
        <trans-unit id="babf18abfd0220f6e412ed56187837f72a67c97b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Examples</source>
          <target state="translated">Qt WebEngine示例</target>
        </trans-unit>
        <trans-unit id="7fbd83f5b4772ec0044ecab6ea8cecc73dd54a5c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Features</source>
          <target state="translated">Qt WebEngine功能</target>
        </trans-unit>
        <trans-unit id="f0eba50874eab4803a283c9c5f6ff42325df45fa" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Licensing</source>
          <target state="translated">Qt WebEngine授权</target>
        </trans-unit>
        <trans-unit id="e2ea2fd6eecc3a400a03f772db970046cad60af9" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Overview</source>
          <target state="translated">Qt WebEngine概述</target>
        </trans-unit>
        <trans-unit id="439ea3561c1ed0f5b3a8d6780cc6fb126b83d168" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Platform Notes</source>
          <target state="translated">Qt WebEngine平台说明</target>
        </trans-unit>
        <trans-unit id="aa81a2db04e282b97c349e0e96c914236baa1ec1" translate="yes" xml:space="preserve">
          <source>Qt WebEngine QML Types</source>
          <target state="translated">Qt WebEngine QML类型</target>
        </trans-unit>
        <trans-unit id="7789a5c8e1dbcb709616c6eca3423d1869648947" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets C++ Classes</source>
          <target state="translated">Qt WebEngine Widgets C++Classes</target>
        </trans-unit>
        <trans-unit id="c198872fc0a925e5604fc882914ab824967c0a82" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets Examples</source>
          <target state="translated">Qt WebEngine Widgets 示例</target>
        </trans-unit>
        <trans-unit id="687fd8aa0335cf77a4376f06bfae4c112a3bdebd" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets dialogs can be customized by reimplementing the &lt;a href=&quot;qwebenginepage#chooseFiles&quot;&gt;QWebEnginePage::chooseFiles&lt;/a&gt;(), &lt;a href=&quot;qwebenginepage#javaScriptAlert&quot;&gt;QWebEnginePage::javaScriptAlert&lt;/a&gt;(), &lt;a href=&quot;qwebenginepage#javaScriptConfirm&quot;&gt;QWebEnginePage::javaScriptConfirm&lt;/a&gt;(), and &lt;a href=&quot;qwebenginepage#javaScriptPrompt&quot;&gt;QWebEnginePage::javaScriptPrompt&lt;/a&gt;() functions.</source>
          <target state="translated">通过重新实现&lt;a href=&quot;qwebenginepage#chooseFiles&quot;&gt;QWebEnginePage :: chooseFiles&lt;/a&gt;（），&lt;a href=&quot;qwebenginepage#javaScriptAlert&quot;&gt;QWebEnginePage :: javaScriptAlert&lt;/a&gt;（），&lt;a href=&quot;qwebenginepage#javaScriptConfirm&quot;&gt;QWebEnginePage :: javaScriptConfirm&lt;/a&gt;（）和&lt;a href=&quot;qwebenginepage#javaScriptPrompt&quot;&gt;QWebEnginePage :: javaScriptPrompt&lt;/a&gt;（）函数，可以自定义Qt WebEngine窗口小部件对话框。</target>
        </trans-unit>
        <trans-unit id="08c362ad69eb44f62cf4a916182c51c143d03e2f" translate="yes" xml:space="preserve">
          <source>Qt WebEngine can only be built on 64-bit Windows, with a x64-bit toolchain. For building Qt WebEngine for x86 applications, you need to configure and compile Qt with the Visual Studio 2017 x64 to x86 cross-compile toolchain. This toolchain can be set up on the command line by running &lt;code&gt;vcvarsall.bat amd64_x86&lt;/code&gt;.</source>
          <target state="translated">Qt WebEngine只能在带有x64位工具链的64位Windows上构建。为了构建用于x86应用程序的Qt WebEngine，您需要使用Visual Studio 2017 x64到x86交叉编译工具链来配置和编译Qt。可通过运行 &lt;code&gt;vcvarsall.bat amd64_x86&lt;/code&gt; 在命令行上设置此工具链。</target>
        </trans-unit>
        <trans-unit id="e7abf8b1ea737c5ad69ad8ad94719843acf07e0c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine enables accessibility support for web pages when the following conditions are met:</source>
          <target state="translated">当满足以下条件时,Qt WebEngine可以实现对网页的可访问性支持。</target>
        </trans-unit>
        <trans-unit id="aaecf9afcc24ba1d0a559e27e895f692910263da" translate="yes" xml:space="preserve">
          <source>Qt WebEngine makes it possible for the application to define its own custom URL schemes with specialized security policies and transport mechanisms.</source>
          <target state="translated">Qt WebEngine使得应用程序可以通过专门的安全策略和传输机制来定义自己的自定义URL方案。</target>
        </trans-unit>
        <trans-unit id="52fbad059d6592f090e275c8a6709832fa5e2329" translate="yes" xml:space="preserve">
          <source>Qt WebEngine on startup looks for the &lt;a href=&quot;http://www.widevine.com&quot;&gt;Widevine CDM&lt;/a&gt; plugin in well know locations, like default Google Chrome installation directory or Linux distro specific paths. However, plugin location can be also passed with &lt;code&gt;QTWEBENGINE_CHROMIUM_FLAGS&lt;/code&gt; using &lt;code&gt;widevine-path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e3b8ee62668fdbf04e068ce4eb53a129bba3c0" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides functionality for rendering regions of dynamic web content.</source>
          <target state="translated">Qt WebEngine提供了渲染动态网页内容区域的功能。</target>
        </trans-unit>
        <trans-unit id="19331325924fb86d95a0b4a94a399dfc1761885d" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides out-of-the-box sandboxing support for Chromium render processes on Linux and &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;. Sandboxing is currently not supported on Windows due to a limitation in how the sandbox is set up and how it interacts with the host process provided by the Qt WebEngine libraries.</source>
          <target state="translated">Qt WebEngine为Linux和&lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;上的Chromium渲染过程提供了开箱即用的沙箱支持。由于沙箱的设置方式以及沙箱与Qt WebEngine库提供的宿主进程之间的交互方式受到限制，当前Windows上不支持沙箱。</target>
        </trans-unit>
        <trans-unit id="376be3ebf3908b5cd2b4f4e7a54f34a314706776" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides out-of-the-box sandboxing support for Chromium render processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e9558572362ee031559dcdbd2abba9cb6bc3d8" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides standard dialogs for these functions. In widget-based applications, the standard dialogs are based on &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, whereas in Qt Quick applications, they can be based either on Qt Quick Controls 1 or Qt Quick Controls 2 (since Qt 5.8). The latter are used only on &lt;code&gt;eglfs&lt;/code&gt; platforms.</source>
          <target state="translated">Qt WebEngine为这些功能提供标准对话框。在基于窗口小部件的应用程序中，标准对话框基于&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;，而在Qt Quick应用程序中，它们可以基于Qt Quick Controls 1或Qt Quick Controls 2（自Qt 5.8起）。后者仅在 &lt;code&gt;eglfs&lt;/code&gt; 平台上使用。</target>
        </trans-unit>
        <trans-unit id="0efe122c40a3871f082e5ef2baceca873cac9f31" translate="yes" xml:space="preserve">
          <source>Qt WebEngine requires &lt;code&gt;pkg-config&lt;/code&gt; to detect most of its dependencies. The following &lt;code&gt;pkg-config&lt;/code&gt; files are required:</source>
          <target state="translated">Qt WebEngine需要 &lt;code&gt;pkg-config&lt;/code&gt; 来检测其大多数依赖项。需要以下 &lt;code&gt;pkg-config&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="12a8716afb08a6f6b464d7189f88192a7c1aeedb" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports HTML5 drag and drop.</source>
          <target state="translated">Qt WebEngine支持HTML5拖拽。</target>
        </trans-unit>
        <trans-unit id="54b4847b59b17764bd7643416bc40af7fc47e35c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports JavaScript Geolocation API with &lt;a href=&quot;qtlocation-index&quot;&gt;Qt Location&lt;/a&gt; as a backend. The application has to explicitly allow the feature by using &lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage::Geolocation&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Feature&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngine支持以&lt;a href=&quot;qtlocation-index&quot;&gt;Qt Location&lt;/a&gt;为后端的JavaScript Geolocation API 。应用程序必须使用&lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage :: Geolocation&lt;/a&gt;或&lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Feature&lt;/a&gt;明确允许该功能。</target>
        </trans-unit>
        <trans-unit id="58cf09abe4ac4bd78201e0e345e91fb9367de36b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports integrating spellchecking support into HTML forms to enable users to submit spellchecked messages. When the user clicks on an underlined misspelled word, the default context menu displays up to four suggestions. Selecting one will replace the misspelled word.</source>
          <target state="translated">Qt WebEngine支持将拼写检查支持集成到HTML表单中,使用户能够提交拼写检查的消息。当用户点击一个有下划线的拼写错误的单词时,默认的上下文菜单会显示最多四个建议。选择其中一个将替换拼写错误的单词。</target>
        </trans-unit>
        <trans-unit id="98427b396d9db3d5ea964d32130ff63dea74c701" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports loading Pepper Plugin API (PPAPI) plugins if &lt;a href=&quot;qml-qtwebengine-webenginesettings#pluginsEnabled-prop&quot;&gt;WebEngineSettings::pluginsEnabled&lt;/a&gt; or &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::PluginsEnabled&lt;/a&gt; is set.</source>
          <target state="translated">如果设置了&lt;a href=&quot;qml-qtwebengine-webenginesettings#pluginsEnabled-prop&quot;&gt;WebEngineSettings :: pluginsEnabled&lt;/a&gt;或&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: &lt;/a&gt;PluginsEnabled，则Qt WebEngine支持加载Pepper插件API（PPAPI）插件。</target>
        </trans-unit>
        <trans-unit id="a97f63520994bb38fbaef47a73260ae975e469b1" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports printing a web page to a PDF file. For more information, see &lt;a href=&quot;qwebenginepage#printToPdf&quot;&gt;QWebEnginePage::printToPdf&lt;/a&gt;() and &lt;a href=&quot;qml-qtwebengine-webengineview#printToPdf-method&quot;&gt;WebEngineView.printToPdf&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngine支持将网页打印为PDF文件。有关更多信息，请参见&lt;a href=&quot;qwebenginepage#printToPdf&quot;&gt;QWebEnginePage :: printToPdf&lt;/a&gt;（）和&lt;a href=&quot;qml-qtwebengine-webengineview#printToPdf-method&quot;&gt;WebEngineView.printToPdf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7b794964a11ab48870f2dfce531232f8eeb37b1" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the &lt;a href=&quot;https://wicg.github.io/page-lifecycle/spec.html&quot;&gt;Page Lifecycle API specification&lt;/a&gt;, a work-in-progress extension to the HTML standard for allowing user agents to reduce their resource consumption by freezing or discarding background pages. The feature is exposed both in the Widgets and QML APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f62cfaf035d6dac07052533674cdf9f0edafa2" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the Chromium implementation of the &lt;a href=&quot;https://http2.github.io/&quot;&gt;HTTP/2&lt;/a&gt; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957dfef8f8e55bbd835f159ae4b8f5c3282a9cfe" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the Chromium implementation of the &lt;a href=&quot;https://http2.github.io/#&quot;&gt;HTTP/2&lt;/a&gt; protocol.</source>
          <target state="translated">Qt WebEngine支持&lt;a href=&quot;https://http2.github.io/#&quot;&gt;HTTP / 2&lt;/a&gt;协议的Chromium实现。</target>
        </trans-unit>
        <trans-unit id="854b2abb390cda48bbe6648ebdcc86041b3fe98a" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the MPEG-4 Part 14 (MP4) file format only if the required proprietary audio and video codecs, such as H.264 and MPEG layer-3 (MP3), have been enabled. Proprietary codecs can be enabled by passing the following option to the &lt;code&gt;configure&lt;/code&gt; tool when configuring Qt:</source>
          <target state="translated">仅当启用了必需的专有音频和视频编解码器（例如H.264和MPEG layer-3（MP3））时，Qt WebEngine才支持MPEG-4 Part 14（MP4）文件格式。可以在配置Qt时通过将以下选项传递给 &lt;code&gt;configure&lt;/code&gt; 工具来启用专有编解码器：</target>
        </trans-unit>
        <trans-unit id="3bb2489b0bf734b0d144fe41c137a710e070848b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the following features:</source>
          <target state="translated">Qt WebEngine支持以下功能。</target>
        </trans-unit>
        <trans-unit id="13a8e5c6fb156cf5e4f5082a5eb5d0ee61ce31af" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports touch devices for navigating and interacting with web pages.</source>
          <target state="translated">Qt WebEngine支持触摸设备浏览和与网页交互。</target>
        </trans-unit>
        <trans-unit id="f0eb809070f78731adfae5503e9efc83901b594a" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing DRM protected videos if the &lt;a href=&quot;http://www.widevine.com&quot;&gt;Widevine CDM&lt;/a&gt; plugin has been installed. CDM plugin is a replacement of Flash based plugins for displaying DRM-protected content. It comes only in a binary format, so it can hide DRM decryption implementation details. It can be obtained from a third party or from a Google Chrome installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49790f88a8fb31b272dbd37e68b3b9ef8d95f78" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing DRM protected videos if the &lt;a href=&quot;http://www.widevine.com/wv_drm.html#&quot;&gt;Widevine DRM&lt;/a&gt; plugin has been installed.</source>
          <target state="translated">如果已安装&lt;a href=&quot;http://www.widevine.com/wv_drm.html#&quot;&gt;Widevine DRM&lt;/a&gt;插件，则Qt WebEngine支持查看受DRM保护的视频。</target>
        </trans-unit>
        <trans-unit id="91c00477f678ad7b325d38db145f8bd2318c8881" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing PDF documents by navigating to them. This feature uses the Chromium extensions API and PDF viewer plugin to display the PDF documents. It can be tested in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webenginewidgets-simplebrowser-example.html#&quot;&gt;Simple Browser&lt;/a&gt; or &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;Nano Browser&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngine支持通过导航到PDF文档来查看它们。此功能使用Chromium扩展API和PDF查看器插件来显示PDF文档。可以在&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webenginewidgets-simplebrowser-example.html#&quot;&gt;简单浏览器&lt;/a&gt;或&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;Nano浏览器中&lt;/a&gt;对其进行测试。</target>
        </trans-unit>
        <trans-unit id="aadf76b5f56b7354bb6c60fdca7e0ccab633cfdd" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing PDF documents by navigating to them. This feature uses the Chromium extensions API and PDF viewer plugin to display the PDF documents. It can be tested in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webenginewidgets-simplebrowser-example.html&quot;&gt;Simple Browser&lt;/a&gt; or &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-quicknanobrowser-example.html&quot;&gt;Nano Browser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059adec88a8d178a167e7d6ed6f3c2e81c188e88" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing the HTML source of a web page.</source>
          <target state="translated">Qt WebEngine支持查看网页的HTML源代码。</target>
        </trans-unit>
        <trans-unit id="41cb4e4dbaf4aba570938a10248d30be48b464d5" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing web content in fullscreen mode. For more information, see &lt;a href=&quot;qml-qtwebengine-webenginesettings#fullscreenSupportEnabled-prop&quot;&gt;WebEngineSettings.fullscreenSupportEnabled&lt;/a&gt;, &lt;a href=&quot;qml-qtwebengine-webengineview#fullScreenRequested-signal&quot;&gt;WebEngineView.fullScreenRequested&lt;/a&gt;, &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt;, and &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngine支持以全屏模式查看Web内容。有关更多信息，请参见&lt;a href=&quot;qml-qtwebengine-webenginesettings#fullscreenSupportEnabled-prop&quot;&gt;WebEngineSettings.fullscreenSupportEnabled&lt;/a&gt;，&lt;a href=&quot;qml-qtwebengine-webengineview#fullScreenRequested-signal&quot;&gt;WebEngineView.fullScreenRequested&lt;/a&gt;，&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: FullScreenSupportEnabled&lt;/a&gt;和&lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequested&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d337a97655e277c3aada9fbef93ee419a10768bb" translate="yes" xml:space="preserve">
          <source>Qt WebEngine uses multiple OS processes to isolate web sites from each other and from the client application, improving security and robustness. The following process models, or ways to divide web sites between OS processes, are supported:</source>
          <target state="translated">Qt WebEngine使用多个OS进程来隔离网站之间和客户端应用程序,提高了安全性和健壮性。支持以下进程模型,或在操作系统进程之间划分网站的方法。</target>
        </trans-unit>
        <trans-unit id="5f38f0078e0b5dd6b6ce1351142ca8b553d8af05" translate="yes" xml:space="preserve">
          <source>Qt WebSockets</source>
          <target state="translated">Qt WebSockets</target>
        </trans-unit>
        <trans-unit id="c80d5942849bfbe8d17a5e40748b894ef97993b0" translate="yes" xml:space="preserve">
          <source>Qt WebSockets is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebSockets可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cab7c81fe2e5cd0f94b3a56d9941acf1b580931" translate="yes" xml:space="preserve">
          <source>Qt WebSockets is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae7bb6a69e818ab90716286d9c45d65559b8d9b" translate="yes" xml:space="preserve">
          <source>Qt WebView</source>
          <target state="translated">Qt WebView</target>
        </trans-unit>
        <trans-unit id="6eccd951d187fde026f0eea29db049928e259c83" translate="yes" xml:space="preserve">
          <source>Qt WebView C++ Classes and Namespaces</source>
          <target state="translated">Qt WebView C++类和命名空间</target>
        </trans-unit>
        <trans-unit id="9e2bf6dc43ad14b833e7b436f17efdc478c68dc7" translate="yes" xml:space="preserve">
          <source>Qt WebView QML Types</source>
          <target state="translated">Qt WebView QML类型</target>
        </trans-unit>
        <trans-unit id="b1a28b9c6ff356ec2363738912031e1e5a9f4b5f" translate="yes" xml:space="preserve">
          <source>Qt WebView is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebView可以从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。另外，它可以在&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2下使用&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="131c34ff698e7fcb1c304dfe26ff169177f1d587" translate="yes" xml:space="preserve">
          <source>Qt WebView is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9816314da67cb0195ee07f105b4d124472b708" translate="yes" xml:space="preserve">
          <source>Qt WebView provides a way to display web content in a QML application without necessarily including a full web browser stack by using native APIs where it makes sense.</source>
          <target state="translated">Qt WebView提供了一种在QML应用程序中显示web内容的方法,而不需要通过在有意义的地方使用本地API来包含一个完整的web浏览器栈。</target>
        </trans-unit>
        <trans-unit id="13bbf0edd027e44eb7b2e748d1b83f1ea336a622" translate="yes" xml:space="preserve">
          <source>Qt Widget Gallery</source>
          <target state="translated">Qt Widget库</target>
        </trans-unit>
        <trans-unit id="55b093947afff79b9d0b042d427368451af311c5" translate="yes" xml:space="preserve">
          <source>Qt Widget Projects</source>
          <target state="translated">Qt Widget项目</target>
        </trans-unit>
        <trans-unit id="5e3d0ba1e51ec23b4d6ba2d288ba3759106f7b4e" translate="yes" xml:space="preserve">
          <source>Qt Widgets</source>
          <target state="translated">Qt Widgets</target>
        </trans-unit>
        <trans-unit id="8d6700f429130758154bd084751db38d39c85807" translate="yes" xml:space="preserve">
          <source>Qt Widgets C++ Classes</source>
          <target state="translated">Qt Widgets C++类</target>
        </trans-unit>
        <trans-unit id="c5d83e121853ff4315e7bb4fa39e5a93a6e404ff" translate="yes" xml:space="preserve">
          <source>Qt Widgets Examples</source>
          <target state="translated">Qt Widgets 示例</target>
        </trans-unit>
        <trans-unit id="547630dd273c5d713df2cfd02d81632d25b6dce1" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras</source>
          <target state="translated">Qt Windows Extras</target>
        </trans-unit>
        <trans-unit id="7ef6a7060423087be0627586026af3b5c93d61e5" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras Examples</source>
          <target state="translated">Qt Windows Extras 示例</target>
        </trans-unit>
        <trans-unit id="350ab9181d1a713fffc9e578173c424e84cab258" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras Overview</source>
          <target state="translated">Qt Windows Extras概述</target>
        </trans-unit>
        <trans-unit id="4dfbf783957e174ada9771d37a1488b8de6b9639" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras provide classes and functions that enable you to use miscellaneous Windows-specific functions. For example, you can convert Qt objects to Windows object handles and manipulate DWM glass frames.</source>
          <target state="translated">Qt Windows Extras提供了一些类和函数,使你能够使用各种Windows特有的功能。例如,你可以将Qt对象转换为Windows对象句柄,并操作DWM玻璃框架。</target>
        </trans-unit>
        <trans-unit id="30cb03f22d45ed064b0e85415dbdc06196a610a9" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras</source>
          <target state="translated">Qt X11 Extras</target>
        </trans-unit>
        <trans-unit id="13b2b4e6b0266cf832549f825670c72f55eac8cf" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras enables the Qt programmer to write applications for the Linux/X11 platform. Applications developed with Qt can also be deployed across several other desktop and embedded operating systems without having to rewrite the source code.</source>
          <target state="translated">Qt X11 Extras使Qt程序员能够为Linux/X11平台编写应用程序。使用Qt开发的应用程序也可以部署在其他几个桌面和嵌入式操作系统上,而无需重写源代码。</target>
        </trans-unit>
        <trans-unit id="b6973d30da56319c14051322db652eac03345466" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt X11 Extras可从&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;Qt Company&lt;/a&gt;获得商业许可。此外，它可在免费软件许可下获得。从Qt 5.4开始，这些免费软件许可证为&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU通用公共许可证版本3&lt;/a&gt;或&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5aa9c8520ec170f38da9bb333e96e8159bc560e0" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e12a0224a11154f2280fb5e03a36dcbfa2cd71" translate="yes" xml:space="preserve">
          <source>Qt XML</source>
          <target state="translated">Qt XML</target>
        </trans-unit>
        <trans-unit id="338c1d7a56737286caec7e779cd76a37a8b6f8ea" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns</source>
          <target state="translated">Qt XML模式</target>
        </trans-unit>
        <trans-unit id="37de7c3bd27363b200cc073bac5d1570b13909c4" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns Examples</source>
          <target state="translated">Qt XML模式示例</target>
        </trans-unit>
        <trans-unit id="2a76dcc4af6a220b663aaf3f4a089e58887d7b97" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns aims at being a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-xquery-conformance&quot;&gt;conformant XQuery processor&lt;/a&gt;. It adheres to &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-minimal-conformance&quot;&gt;Minimal Conformance&lt;/a&gt; and supports the &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-serialization-feature&quot;&gt;Serialization Feature&lt;/a&gt; and the &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-full-axis-feature&quot;&gt;Full Axis Feature&lt;/a&gt;. Qt XML Patterns currently passes 97% of the tests in the &lt;a href=&quot;http://www.w3.org/XML/Query/test-suite&quot;&gt;XML Query Test Suite&lt;/a&gt;. Areas where conformance may be questionable and where behavior may be changed in future releases include:</source>
          <target state="translated">Qt XML模式旨在成为一个&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-xquery-conformance&quot;&gt;合格的XQuery处理器&lt;/a&gt;。它遵循&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-minimal-conformance&quot;&gt;最小一致性要求，&lt;/a&gt;并支持&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-serialization-feature&quot;&gt;序列化功能&lt;/a&gt;和&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-full-axis-feature&quot;&gt;全轴功能&lt;/a&gt;。Qt XML模式目前通过了&lt;a href=&quot;http://www.w3.org/XML/Query/test-suite&quot;&gt;XML Query Test Suite中&lt;/a&gt; 97％的测试。在将来的版本中，一致性可能会受到质疑并且行为可能会发生变化的领域包括：</target>
        </trans-unit>
        <trans-unit id="981b27895afae4b49d7e4bdc7fbbd97df51ea37e" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns calls the URI resolver for all URIs it encounters, except for namespaces. Specifically, all builtin functions that deal with URIs (&lt;code&gt;fn:doc()&lt;/code&gt;, and &lt;code&gt;fn:doc-available()&lt;/code&gt;).</source>
          <target state="translated">Qt XML模式会为遇到的所有URI（名称空间除外）调用URI解析器。具体来说，所有处理URI的内置函数（ &lt;code&gt;fn:doc()&lt;/code&gt; 和 &lt;code&gt;fn:doc-available()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="532a1ffedc202f88a2d2cab378ced466b98d3a7a" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns can be used out of the box to perform this query, provided</source>
          <target state="translated">Qt XML Patterns可以在开箱即用的情况下执行这个查询,条件是</target>
        </trans-unit>
        <trans-unit id="ab57f564981f7a2aea4b839f9b16ae2ba1e70adf" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns supports the following node tests. The tests that have a &lt;code&gt;name&lt;/code&gt; parameter test the node's name in addition to its</source>
          <target state="translated">Qt XML模式支持以下节点测试。具有 &lt;code&gt;name&lt;/code&gt; 参数的测试除了测试节点的名称外，还测试节点的名称</target>
        </trans-unit>
        <trans-unit id="e9d6a993debb107d2f78a168eb574df514894710" translate="yes" xml:space="preserve">
          <source>Qt adds these features to C++:</source>
          <target state="translated">Qt在C++的基础上增加了这些功能。</target>
        </trans-unit>
        <trans-unit id="8b68405975d80ed61b909377cb5843bc113744e8" translate="yes" xml:space="preserve">
          <source>Qt allows custom text objects to be inserted into a document by registering a custom &lt;a href=&quot;qtextformat#objectType&quot;&gt;object type&lt;/a&gt; with &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt;. A &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt; must also be implemented for this type and be &lt;a href=&quot;qabstracttextdocumentlayout#registerHandler&quot;&gt;registered&lt;/a&gt; with the &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; of the document. When the object type is encountered while rendering a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, the &lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;intrinsicSize&lt;/a&gt;() and &lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;drawObject&lt;/a&gt;() functions of the interface are called.</source>
          <target state="translated">通过向&lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt;注册自定义&lt;a href=&quot;qtextformat#objectType&quot;&gt;对象类型&lt;/a&gt;，Qt允许将自定义文本对象插入文档。一个&lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt;还必须为这种类型的实现，并可以&lt;a href=&quot;qabstracttextdocumentlayout#registerHandler&quot;&gt;注册&lt;/a&gt;与&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;的文件。当在呈现遇到对象类型&lt;a href=&quot;qtextdocument&quot;&gt;另外，QTextDocument&lt;/a&gt;，所述&lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;intrinsicSize&lt;/a&gt;（）和&lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;drawObject&lt;/a&gt;（）的接口的功能被调用。</target>
        </trans-unit>
        <trans-unit id="05c167f981b06bc70e6b643b1b0877d2c107eef5" translate="yes" xml:space="preserve">
          <source>Qt allows custom text objects to be inserted into a document by registering a custom &lt;a href=&quot;qtextformat#objectType&quot;&gt;object type&lt;/a&gt; with &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt;. A QTextObjectInterface must also be implemented for this type and be &lt;a href=&quot;qabstracttextdocumentlayout#registerHandler&quot;&gt;registered&lt;/a&gt; with the &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; of the document. When the object type is encountered while rendering a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, the &lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;intrinsicSize&lt;/a&gt;() and &lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;drawObject&lt;/a&gt;() functions of the interface are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a84026fe0a6415aaee21c84da073f3b2dfeba" translate="yes" xml:space="preserve">
          <source>Qt already implements accessibility for its own widgets. We therefore recommend that you use Qt widgets where possible.</source>
          <target state="translated">Qt已经为自己的小部件实现了可访问性。因此,我们建议您尽可能地使用 Qt 小组件。</target>
        </trans-unit>
        <trans-unit id="f5d708c0d734ada53fbfc2805858c82ba5cd2902" translate="yes" xml:space="preserve">
          <source>Qt also includes two convenience classes, &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; and &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;, that inherit from &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and provide the lowest common denominator of metadata (e.g., widget geometry, window title, basic help text). You can use them as base classes when wrapping your custom &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses.</source>
          <target state="translated">Qt还包括两个便捷类&lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt;和&lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;，它们从&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;继承并提供元数据的最低公分母（例如，小部件几何形状，窗口标题，基本帮助文本）。包装自定义&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;或&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;子类时，可以将它们用作基类。</target>
        </trans-unit>
        <trans-unit id="dab365c8c3aa8d978bc6f51e6d77c93c44420ad7" translate="yes" xml:space="preserve">
          <source>Qt also includes two convenience classes, &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; and &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;, that inherit from &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and provide the lowest common denominator of metadata (e.g., widget geometry, window title, basic help text). You can use them as base classes when wrapping your custom &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8a12b8d51d4593376a1b982c205a96b4811e2f" translate="yes" xml:space="preserve">
          <source>Qt also offers a &lt;a href=&quot;#foreach&quot;&gt;foreach&lt;/a&gt; keyword that make it very easy to iterate over all the items stored in a container.</source>
          <target state="translated">Qt还提供了一个&lt;a href=&quot;#foreach&quot;&gt;foreach&lt;/a&gt;关键字，使访问容器中存储的所有项目变得非常容易。</target>
        </trans-unit>
        <trans-unit id="562967ae5e2427e5d5d7157945ba092a2cd439e2" translate="yes" xml:space="preserve">
          <source>Qt also offers a &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; keyword that make it very easy to iterate over all the items stored in a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760f465a9f1fbf6d45846eff38c5af93299fbf60" translate="yes" xml:space="preserve">
          <source>Qt also provides &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;, an implementation of a reference-counted shared pointer object, which can be used to maintain a collection of references to an individual pointer.</source>
          <target state="translated">Qt还提供了&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;，它是对引用计数的共享指针对象的实现，可用于维护对单个指针的引用的集合。</target>
        </trans-unit>
        <trans-unit id="b07c1b8847adf11b4cb0d15006b52cc9cc510907" translate="yes" xml:space="preserve">
          <source>Qt also provides specific support for some XML dialects. For instance, the Qt SVG module provides the QSvgRenderer and QSvgGenerator classes to read and write a subset of SVG, an XML-based file format. Qt also provides helper functions that may be useful to those working with XML and XHTML: see Qt::escape() and Qt::convertFromPlainText().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a47c91fc94d3babb3061db5be4ae6dd3c3db7f" translate="yes" xml:space="preserve">
          <source>Qt also provides the &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; convenience class, inheriting &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; guarantees monochrome (1-bit depth) pixmaps, and is mainly used for creating custom &lt;a href=&quot;gui-changes-qt6#qcursor&quot;&gt;QCursor&lt;/a&gt; and &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; objects, constructing &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e453f6cc1435775fd0f49d30d277794c0423f2a2" translate="yes" xml:space="preserve">
          <source>Qt also provides the &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; convenience class, inheriting &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; guarantees monochrome (1-bit depth) pixmaps, and is mainly used for creating custom &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; and &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; objects, constructing &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; objects.</source>
          <target state="translated">Qt还提供了&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;便利类，继承了&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;。&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;保证单色（1位深度）像素图，并且主要用于创建自定义&lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt;和&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;对象，构造&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bafdbeeefe3894e372b92470c467305fb222c9df" translate="yes" xml:space="preserve">
          <source>Qt also provides these associative containers: &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. The &quot;Multi&quot; containers conveniently support multiple values associated with a single key. The &quot;Hash&quot; containers provide faster lookup by using a hash function instead of a binary search on a sorted set.</source>
          <target state="translated">Qt还提供了以下关联容器：&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;，&lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;，&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;，&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;和&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;。&amp;ldquo;多&amp;rdquo;容器方便地支持与单个键关联的多个值。&amp;ldquo;哈希&amp;rdquo;容器通过使用哈希函数而不是对排序集进行二进制搜索来提供更快的查找。</target>
        </trans-unit>
        <trans-unit id="23dcc1c4d8d1aeb39985206f4f761530a346807b" translate="yes" xml:space="preserve">
          <source>Qt also provides two other pointer wrapper classes: &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; and &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;. They are incompatible with one another, since each has its very different use case.</source>
          <target state="translated">Qt还提供了另外两个指针包装器类：&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;和&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;。它们彼此不兼容，因为它们每个都有其非常不同的用例。</target>
        </trans-unit>
        <trans-unit id="9b61485e2ab4df9bab0e9dbd1bace4d6f4de54d7" translate="yes" xml:space="preserve">
          <source>Qt also tries to speed up painting by merging multiple paint events into one. When &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() is called several times or the window system sends several paint events, Qt merges these events into one event with a larger region (see &lt;a href=&quot;qregion#united&quot;&gt;QRegion::united&lt;/a&gt;()). The &lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;() function does not permit this optimization, so we suggest using &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() whenever possible.</source>
          <target state="translated">Qt还尝试通过将多个绘画事件合并为一个来加快绘画速度。当多次调用&lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;（）或窗口系统发送多个绘制事件时，Qt会将这些事件合并为一个具有较大区域的事件（请参阅&lt;a href=&quot;qregion#united&quot;&gt;QRegion :: united&lt;/a&gt;（））。该&lt;a href=&quot;qwidget#repaint&quot;&gt;重绘&lt;/a&gt;（）函数不允许这种优化，所以我们建议您使用&lt;a href=&quot;qwidget#update&quot;&gt;更新&lt;/a&gt;（）只要有可能。</target>
        </trans-unit>
        <trans-unit id="e6c62ffa457fc18d5d59b6eeeb71c6c2e43abc53" translate="yes" xml:space="preserve">
          <source>Qt also uses this delay internally, e.g. in &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; and &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, for starting a drag.</source>
          <target state="translated">Qt还在内部（例如在&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;和&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit中）&lt;/a&gt;使用此延迟来开始拖动。</target>
        </trans-unit>
        <trans-unit id="d8cbce4c735ffa98c46ebadb6b764ecd7db768ea" translate="yes" xml:space="preserve">
          <source>Qt and Qt applications do not link to any Vulkan libraries by default. Instead, all functions are resolved dynamically at run time. Each &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; provides a &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; object retrievable via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;QVulkanInstance::functions&lt;/a&gt;(). This does not contain device level functions in order to avoid the potential overhead of an internal dispatching. Instead, functions that rely on a device, or a dispatchable child object of a device, are exposed via &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance::deviceFunctions&lt;/a&gt;(). &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; together provides access to the full core Vulkan API, excluding any extensions.</source>
          <target state="translated">Qt和Qt应用程序默认情况下不链接到任何Vulkan库。而是在运行时动态解析所有功能。每个&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;提供一个&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;对象，可通过&lt;a href=&quot;qvulkaninstance#functions&quot;&gt;QVulkanInstance :: functions&lt;/a&gt;（）进行检索。它不包含设备级别的功能，以避免内部调度的潜在开销。而是通过&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;和&lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance :: deviceFunctions&lt;/a&gt;（）公开依赖于设备或设备的可调度子对象的函数。&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;和&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;一起提供对完整核心Vulkan API（不包括任何扩展名）的访问。</target>
        </trans-unit>
        <trans-unit id="aff62ce651bb58db338384148c6ccd35d2eb652d" translate="yes" xml:space="preserve">
          <source>Qt and Qt applications do not link to any Vulkan libraries by default. Instead, all functions are resolved dynamically at run time. Each &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; provides a &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; object retrievable via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;QVulkanInstance::functions&lt;/a&gt;(). This does not contain device level functions in order to avoid the potential overhead of an internal dispatching. Instead, functions that rely on a device, or a dispatchable child object of a device, are exposed via QVulkanDeviceFunctions and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance::deviceFunctions&lt;/a&gt;(). &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and QVulkanDeviceFunctions together provides access to the full core Vulkan API, excluding any extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac11aed9e144505477d79e353104c90062d9ffa" translate="yes" xml:space="preserve">
          <source>Qt and Qt applications do not link to any Vulkan libraries by default. Instead, all functions are resolved dynamically at run time. Each &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; provides a QVulkanFunctions object retrievable via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;QVulkanInstance::functions&lt;/a&gt;(). This does not contain device level functions in order to avoid the potential overhead of an internal dispatching. Instead, functions that rely on a device, or a dispatchable child object of a device, are exposed via &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance::deviceFunctions&lt;/a&gt;(). QVulkanFunctions and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; together provides access to the full core Vulkan API, excluding any extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a014900df4664929bf25655ac7f7422421d0e8a" translate="yes" xml:space="preserve">
          <source>Qt and WebAssembly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba30073304f1cb912992b420bf2cf364d79bca1" translate="yes" xml:space="preserve">
          <source>Qt and the STL Algorithms</source>
          <target state="translated">Qt和STL算法</target>
        </trans-unit>
        <trans-unit id="06ce10ddea694e6f5db71a774f719535231d87c6" translate="yes" xml:space="preserve">
          <source>Qt and the operating system could not determine whether this address should be published or not. The application may need to apply further heuristics if it cannot find any eligible addresses.</source>
          <target state="translated">Qt和操作系统无法确定是否应该公布这个地址。如果找不到任何符合条件的地址,该应用程序可能需要采用进一步的启发式方法。</target>
        </trans-unit>
        <trans-unit id="9d626b3940cf715385f00861e3253b0a6ab1cedc" translate="yes" xml:space="preserve">
          <source>Qt applications automatically know which plugins are available, because plugins are stored in the standard plugin subdirectories. Because of this applications don't require any code to find and load plugins, since Qt handles them automatically.</source>
          <target state="translated">Qt应用程序自动知道哪些插件是可用的,因为插件存储在标准的插件子目录中。正因为如此,应用程序不需要任何代码来寻找和加载插件,因为Qt会自动处理它们。</target>
        </trans-unit>
        <trans-unit id="e206013035083595ccc928c5c1660863e0230249" translate="yes" xml:space="preserve">
          <source>Qt applications behave well in the user's desktop environment, but certain integrations require additional, and sometimes platform specific, techniques.</source>
          <target state="translated">Qt应用程序在用户的桌面环境中表现良好,但某些集成需要额外的,有时是特定平台的技术。</target>
        </trans-unit>
        <trans-unit id="bcb121215594e7881b5a41217ce4c0ec66345ec8" translate="yes" xml:space="preserve">
          <source>Qt applications by default are</source>
          <target state="translated">Qt应用程序默认为</target>
        </trans-unit>
        <trans-unit id="cc8f4e184ab1337a4034e15dcc1b0ee523a73faa" translate="yes" xml:space="preserve">
          <source>Qt applications typically make use of the &lt;a href=&quot;moc&quot;&gt;Meta-Object Compiler (moc)&lt;/a&gt;, &lt;a href=&quot;rcc&quot;&gt;Resource Compiler (rcc)&lt;/a&gt;, and &lt;a href=&quot;uic&quot;&gt;User Interface Compiler (uic)&lt;/a&gt; that come with Qt. Setting the &lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;, &lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;, and &lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt; variables to &lt;code&gt;ON&lt;/code&gt; will let CMake automatically set up rules so that the respective compilers are called transparently, when required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0ea58c762275119b2ce77e6624164cd7ed6a5a" translate="yes" xml:space="preserve">
          <source>Qt automatically grabs the mouse when a mouse button is pressed inside a widget; the widget will continue to receive mouse events until the last mouse button is released.</source>
          <target state="translated">当鼠标按钮在widget内被按下时,Qt会自动抓取鼠标;widget会继续接收鼠标事件,直到最后一个鼠标按钮被释放。</target>
        </trans-unit>
        <trans-unit id="cfbe39216c7348b4b4d3aec14449d35b55bfaf48" translate="yes" xml:space="preserve">
          <source>Qt automatically takes a copy of the container when it enters a &lt;code&gt;foreach&lt;/code&gt; loop. If you modify the container as you are iterating, that won't affect the loop. (If you do not modify the container, the copy still takes place, but thanks to &lt;a href=&quot;implicit-sharing&quot;&gt;implicit sharing&lt;/a&gt; copying a container is very fast.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5a25297bd8c8da9220c5627ef3d6506264f294" translate="yes" xml:space="preserve">
          <source>Qt automatically takes a copy of the container when it enters a &lt;code&gt;foreach&lt;/code&gt; loop. If you modify the container as you are iterating, that won't affect the loop. (If you do not modify the container, the copy still takes place, but thanks to &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; copying a container is very fast.)</source>
          <target state="translated">当Qt进入 &lt;code&gt;foreach&lt;/code&gt; 循环时，它会自动获取该容器的副本。如果在迭代时修改容器，则不会影响循环。 （如果不修改容器，则仍会进行复制，但是由于&lt;a href=&quot;implicit-sharing#&quot;&gt;隐式共享，&lt;/a&gt;复制容器非常快。）</target>
        </trans-unit>
        <trans-unit id="e9c236ff33f3c2a6c9fb0a90ac74f5a196576ff1" translate="yes" xml:space="preserve">
          <source>Qt binary installers include the OpenSSL libraries used by &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-module.html&quot;&gt;QtNetwork&lt;/a&gt;. However, those are not automatically deployed with applications that are built with Qt. Import and export restrictions apply for some types of software, and for some parts of the world. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</source>
          <target state="translated">Qt二进制安装程序包括&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-module.html&quot;&gt;QtNetwork&lt;/a&gt;使用的OpenSSL库。但是，这些不会自动与使用Qt构建的应用程序一起部署。进出口限制适用于某些类型的软件以及世界上的某些地区。希望在已部署的应用程序中使用SSL通信的开发人员应确保其用户安装了适当的库，或者应咨询具有适当资格的法律专家，以确保使用OpenSSL项目中的代码的应用程序已正确认证可在相关应用程序中导入和导出世界各地。</target>
        </trans-unit>
        <trans-unit id="ef2fb58f409ac0040bc56f9415f3f5be3e878821" translate="yes" xml:space="preserve">
          <source>Qt binary installers include the OpenSSL libraries used by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtnetwork-module.html&quot;&gt;QtNetwork&lt;/a&gt;. However, those are not automatically deployed with applications that are built with Qt. Import and export restrictions apply for some types of software, and for some parts of the world. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9b35a4ed922cfbfe9c6c27364fd6743c648831" translate="yes" xml:space="preserve">
          <source>Qt binary installers include the OpenSSL libraries used by &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtnetwork-module.html&quot;&gt;QtNetwork&lt;/a&gt;. However, those are not automatically deployed with applications that are built with Qt. Import and export restrictions apply for some types of software, and for some parts of the world. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22f0edede4e7a2cca324fb841da0ef8336c1253" translate="yes" xml:space="preserve">
          <source>Qt can be built with Visual Studio 2015 (Update 2), Visual Studio 2017, Visual Studio 2019 and Build Tools for Visual Studio 2017 and 2019 (see also &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa54bb2aa0cbca6747cdfa57a782a5257d27cfca" translate="yes" xml:space="preserve">
          <source>Qt can be compiled with the Intel C++ compile for Linux, though, this configuration is not tested on a regular basis.</source>
          <target state="translated">Qt可以用英特尔C++编译Linux,不过,这个配置不定期测试。</target>
        </trans-unit>
        <trans-unit id="1a410a28542dc597a9adac7601cca33f0f217ebf" translate="yes" xml:space="preserve">
          <source>Qt can be configured to use OpenSSL in three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6432272cc467291c35b40333495e77d329871a0b" translate="yes" xml:space="preserve">
          <source>Qt can load and save images using the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; classes. By default, Qt supports the most common image formats including JPEG and PNG among others. Users can add support for additional formats via the &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; class. For more information, see &lt;a href=&quot;paintsystem-images&quot;&gt;Reading and Writing Image Files&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd83e7e6131034e6fc94ee95675547e5ba2729f" translate="yes" xml:space="preserve">
          <source>Qt can load and save images using the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; classes. By default, Qt supports the most common image formats including JPEG and PNG among others. Users can add support for additional formats via the &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; class. For more information, see &lt;a href=&quot;paintsystem-images#&quot;&gt;Reading and Writing Image Files&lt;/a&gt;</source>
          <target state="translated">Qt可以使用&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;和&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;类加载和保存图像。默认情况下，Qt支持最常见的图像格式，包括JPEG和PNG。用户可以通过&lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;类添加对其他格式的支持。有关更多信息，请参见&lt;a href=&quot;paintsystem-images#&quot;&gt;读取和写入图像文件。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d2476d38ccc66b1a6030db4666c662801ad7752" translate="yes" xml:space="preserve">
          <source>Qt comes with a default list that contains the Internet top-level domains that have published support for Internationalized Domain Names (IDNs) and rules to guarantee that no deception can happen between similarly-looking characters (such as the Latin lowercase letter &lt;code&gt;'a'&lt;/code&gt; and the Cyrillic equivalent, which in most fonts are visually identical).</source>
          <target state="translated">Qt带有一个默认列表，该列表包含已发布对国际化域名（IDN）的支持的Internet顶级域，并提供规则以确保外观相似的字符（例如拉丁小写字母 &lt;code&gt;'a'&lt;/code&gt; 和&amp;ldquo;西里尔文字，在大多数字体上在视觉上都是相同的）。</target>
        </trans-unit>
        <trans-unit id="150eb794e3e3bbf5e208223c5859162c77c3e6c7" translate="yes" xml:space="preserve">
          <source>Qt comes with a selection of built-in styles. Certain styles are only available on specific platforms. Custom styles are made available as plugins or by creating an instance of a specific style class with &lt;a href=&quot;qstylefactory#create&quot;&gt;QStyleFactory::create&lt;/a&gt;() and setting it with &lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication::setStyle&lt;/a&gt;().</source>
          <target state="translated">Qt带有一系列内置样式。某些样式仅在特定平台上可用。自定义样式可以作为插件使用，也可以通过使用&lt;a href=&quot;qstylefactory#create&quot;&gt;QStyleFactory :: create&lt;/a&gt;（）创建特定样式类的实例并使用&lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication :: setStyle&lt;/a&gt;（）进行设置来提供。</target>
        </trans-unit>
        <trans-unit id="4eb85746f9e370252471fc980234f4fa455b54bd" translate="yes" xml:space="preserve">
          <source>Qt comes with plugins for Windows (WinMM and WASAPI), Linux (ALSA and PulseAudio), &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; / iOS (CoreAudio), Android (OpenSL ES) and QNX.</source>
          <target state="translated">Qt随附适用于Windows（WinMM和WASAPI），Linux（ALSA和PulseAudio），&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; / iOS（CoreAudio），Android（OpenSL ES）和QNX的插件。</target>
        </trans-unit>
        <trans-unit id="8e196140258238bf871d3647f77f88e29b718af9" translate="yes" xml:space="preserve">
          <source>Qt comes with plugins for Windows (WinMM and WASAPI), Linux (ALSA and PulseAudio), macOS / iOS (CoreAudio), Android (OpenSL ES) and QNX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecec1b3f688ed0b19c12a22b708771d736b9eb1c" translate="yes" xml:space="preserve">
          <source>Qt comes with the cross-platform &lt;a href=&quot;qt-embedded-makeqpf&quot;&gt;makeqpf&lt;/a&gt; tool, included in the &lt;code&gt;tools&lt;/code&gt; directory, which allows generation of QPF2 files from system fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59a0b11b671cccc55bc83a90fea0faaa156d2c" translate="yes" xml:space="preserve">
          <source>Qt comes with the cross-platform &lt;a href=&quot;qt-embedded-makeqpf#&quot;&gt;makeqpf&lt;/a&gt; tool, included in the &lt;code&gt;tools&lt;/code&gt; directory, which allows generation of QPF2 files from system fonts.</source>
          <target state="translated">Qt附带了跨平台的&lt;a href=&quot;qt-embedded-makeqpf#&quot;&gt;makeqpf&lt;/a&gt;工具，该 &lt;code&gt;tools&lt;/code&gt; 包含在tools目录中，该工具允许从系统字体生成QPF2文件。</target>
        </trans-unit>
        <trans-unit id="17df3ac9fe7379640024991b4dcd9923100480e6" translate="yes" xml:space="preserve">
          <source>Qt consists of different &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;modules&lt;/a&gt; whose sources can be found in different directories inside the top-level source directory. Users can explicitly exclude specific top-level directories to limit build times. Furthermore, each Qt module might have features that can also be explicitly enabled or disabled.</source>
          <target state="translated">Qt由不同的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;模块&lt;/a&gt;组成，这些模块的源可以在顶级源目录的不同目录中找到。用户可以明确排除特定的顶级目录以限制构建时间。此外，每个Qt模块可能具有可以显式启用或禁用的功能。</target>
        </trans-unit>
        <trans-unit id="cf792e40da28078f9916f67e50a9f171349cbf41" translate="yes" xml:space="preserve">
          <source>Qt consists of different &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtmodules.html&quot;&gt;modules&lt;/a&gt; whose sources can be found in different directories inside the top-level source directory. Users can explicitly exclude specific top-level directories to limit build times. Furthermore, each Qt module might have features that can also be explicitly enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a5b13a0a5fd6e45ff24f130e16bce8c1ab3d4d" translate="yes" xml:space="preserve">
          <source>Qt consists of different &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtmodules.html&quot;&gt;modules&lt;/a&gt; whose sources can be found in different directories inside the top-level source directory. Users can explicitly exclude specific top-level directories to limit build times. Furthermore, each Qt module might have features that can also be explicitly enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcaaecf4bfd8c456efd1c14664237f6e20542b5" translate="yes" xml:space="preserve">
          <source>Qt containers can use optimized code paths if the stored elements are relocatable or even primitive. However, whether types are primitive or relocatable cannot be detected in all cases. You can declare your types to be primitive or relocatable by using the &lt;a href=&quot;qtglobal#Q_DECLARE_TYPEINFO&quot;&gt;Q_DECLARE_TYPEINFO&lt;/a&gt; macro with the Q_PRIMITIVE_TYPE flag or the Q_RELOCATABLE_TYPE flag. See the documentation of &lt;a href=&quot;qtglobal#Q_DECLARE_TYPEINFO&quot;&gt;Q_DECLARE_TYPEINFO&lt;/a&gt; for further details and usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9267d54d094589b0b6e29dc0d72dd8d9bd57f8" translate="yes" xml:space="preserve">
          <source>Qt contains a set of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; subclasses that emulate the styles of the different platforms supported by Qt (QWindowsStyle, QMacStyle etc.). By default, these styles are built into the Qt GUI module. Styles can also be made available as plugins.</source>
          <target state="translated">Qt包含一组&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;子类，这些子类可模拟Qt支持的不同平台的样式（QWindowsStyle，QMacStyle等）。默认情况下，这些样式内置在Qt GUI模块中。样式也可以作为插件使用。</target>
        </trans-unit>
        <trans-unit id="a2bc8a199a61284be5d76c6e0d2fa26a18446961" translate="yes" xml:space="preserve">
          <source>Qt contains a set of QStyle subclasses that emulate the styles of the different platforms supported by Qt (QWindowsStyle, QMacStyle etc.). By default, these styles are built into the Qt GUI module. Styles can also be made available as plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73006fb6e9c76a29b4e33423286533241bae378" translate="yes" xml:space="preserve">
          <source>Qt contains a set of item view classes that use a model/view architecture to manage the relationship between data and the way it is presented to the user. The separation of functionality introduced by this architecture gives developers greater flexibility to customize the presentation of items, and provides a standard model interface to allow a wide range of data sources to be used with existing item views. In this document, we give a brief introduction to the model/view paradigm, outline the concepts involved, and describe the architecture of the item view system. Each of the components in the architecture is explained, and examples are given that show how to use the classes provided.</source>
          <target state="translated">Qt包含了一组项目视图类,这些类使用模型/视图架构来管理数据之间的关系以及向用户展示数据的方式。这种架构所引入的功能分离为开发人员提供了更大的灵活性来定制项的展示方式,并提供了一个标准的模型接口,允许广泛的数据源与现有的项视图一起使用。在本文档中,我们简要介绍了模型/视图范式,概述了所涉及的概念,并描述了项目视图系统的架构。架构中的每一个组件都得到了解释,并给出了一些例子来说明如何使用所提供的类。</target>
        </trans-unit>
        <trans-unit id="6836d030abc414d99a63b9f19f47cc02c167b091" translate="yes" xml:space="preserve">
          <source>Qt currently supports three types of gradient fills:</source>
          <target state="translated">Qt目前支持三种类型的渐变填充。</target>
        </trans-unit>
        <trans-unit id="ccac7e6202c221ab23d0f07f1785999854861171" translate="yes" xml:space="preserve">
          <source>Qt currently supports three types of gradient fills: Linear gradients interpolate colors between start and end points, radial gradients interpolate colors between a focal point and end points on a circle surrounding it, and conical gradients interpolate colors around a center point.</source>
          <target state="translated">Qt目前支持三种类型的渐变填充。线性渐变在起点和终点之间插值,径向渐变在焦点和周围圆上的终点之间插值,锥形渐变在中心点周围插值。</target>
        </trans-unit>
        <trans-unit id="20b1f9e249b2a9942a80a00a63801e53042e08e2" translate="yes" xml:space="preserve">
          <source>Qt data type</source>
          <target state="translated">Qt数据类型</target>
        </trans-unit>
        <trans-unit id="b8e0b402fc247c89c9ada3677b2b34e4f690b8de" translate="yes" xml:space="preserve">
          <source>Qt defines only one role for the &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;:</source>
          <target state="translated">Qt仅为&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;定义一个角色：</target>
        </trans-unit>
        <trans-unit id="80edd902aa5906a9e5170dafcfed9ffc5badb394" translate="yes" xml:space="preserve">
          <source>Qt detects menu bars and turns them into Mac native menu bars. Fitting this into existing Qt applications is normally automatic. However, if you have special needs, the Qt implementation currently selects a menu bar by starting at the active window (for example, &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;()) and applying the following tests:</source>
          <target state="translated">Qt会检测菜单栏并将其变成Mac本机菜单栏。将其安装到现有的Qt应用程序中通常是自动的。但是，如果您有特殊需要，则Qt实现当前会通过从活动窗口（例如&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt;（））开始并选择以下测试来选择菜单栏：</target>
        </trans-unit>
        <trans-unit id="1002f68cb9b4335b7400af87fb57c3b199f0af3f" translate="yes" xml:space="preserve">
          <source>Qt does not entirely interact with the development environment (for example plugins to set a file to &quot;mocable&quot; from within the Xcode user interface).</source>
          <target state="translated">Qt并不能完全与开发环境进行交互(例如在Xcode用户界面中设置文件为 &quot;mocable &quot;的插件)。</target>
        </trans-unit>
        <trans-unit id="c48ec9f398cc78b19638893321dd2ff0138e0b70" translate="yes" xml:space="preserve">
          <source>Qt does not impose restrictions on how the check box is drawn; the Java style draws it with &lt;code&gt;CE_IndicatorCheckBox&lt;/code&gt;. See &lt;a href=&quot;#check-and-radio-buttons&quot;&gt;Check and Radio Buttons&lt;/a&gt; for the complete tree.</source>
          <target state="translated">Qt并未对复选框的绘制方式施加任何限制；Java样式使用 &lt;code&gt;CE_IndicatorCheckBox&lt;/code&gt; 进行绘制。有关完整的树，请参见&lt;a href=&quot;#check-and-radio-buttons&quot;&gt;检查和单选按钮&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ef0f03aac5bdb05f7715900b86c007d605f2c38" translate="yes" xml:space="preserve">
          <source>Qt does not impose restrictions on how the check box is drawn; the Java style draws it with &lt;code&gt;CE_IndicatorCheckBox&lt;/code&gt;. See &lt;a href=&quot;style-reference#check-and-radio-buttons&quot;&gt;Check and Radio Buttons&lt;/a&gt; for the complete tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f09f1b71a8ad17c4c2eb3aecba7727ad7d64c6" translate="yes" xml:space="preserve">
          <source>Qt does not limit the size of files that are used for text processing. In most cases, this will not present a problem. For especially large files, however, you might experience that your application will become unresponsive or that you will run out of memory. The size of the files you can load depends on your hardware and on Qt's and your own application's implementation.</source>
          <target state="translated">Qt不限制用于文本处理的文件大小。在大多数情况下,这不会带来问题。但是,对于特别大的文件,你可能会遇到你的应用程序变得不响应或者内存耗尽的情况。你可以加载的文件大小取决于你的硬件以及Qt和你自己的应用程序的实现。</target>
        </trans-unit>
        <trans-unit id="68d34305c679207ca7fe3d7c4ae0dbb5d3260b17" translate="yes" xml:space="preserve">
          <source>Qt does not make direct use of operating system features and it makes no difference if, for example, FireFox runs on Windows or macOS. Qt does use some operating system adaptations, for example for ctrl/cmd key handling on macOS.</source>
          <target state="translated">Qt 并不直接使用操作系统的功能,例如,FireFox 在 Windows 或 macOS 上运行并无区别。Qt确实使用了一些操作系统的适应性,例如在macOS上的ctrl/cmd键处理。</target>
        </trans-unit>
        <trans-unit id="836c0d89b914a9168214f9814a464964e4f18ba0" translate="yes" xml:space="preserve">
          <source>Qt does not support style hints on X11 since this information is not provided by the window system.</source>
          <target state="translated">Qt不支持X11上的样式提示,因为这些信息不是由窗口系统提供的。</target>
        </trans-unit>
        <trans-unit id="46adc65b4f1bbe2af9ac0e0c92a62854aa39b585" translate="yes" xml:space="preserve">
          <source>Qt does not support the requested image format.</source>
          <target state="translated">Qt不支持要求的图像格式。</target>
        </trans-unit>
        <trans-unit id="2d75f85e07d543542102b9718ffea9692e4f4b37" translate="yes" xml:space="preserve">
          <source>Qt does not use this feature for storing data; it is provided solely for the convenience of the user.</source>
          <target state="translated">Qt并没有使用这个功能来存储数据,它的提供只是为了方便用户。</target>
        </trans-unit>
        <trans-unit id="90bb3a5af99085508998552a20b8f47ecadb77f1" translate="yes" xml:space="preserve">
          <source>Qt expresses the deployment target via the &lt;code&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; qmake variable, which has a default value set via the makespec for macOS. You should not need to change this default, but if needed you can increase it in your project file:</source>
          <target state="translated">Qt通过 &lt;code&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; qmake变量表示部署目标，该变量通过macOS的makespec设置了默认值。您不需要更改此默认值，但是如果需要，可以在项目文件中增加它：</target>
        </trans-unit>
        <trans-unit id="d81636b7bf42a763151490a2ff798a40bb615cef" translate="yes" xml:space="preserve">
          <source>Qt facilitates the creation of unit tests to test interfaces such as classes, functions, or whole libraries.</source>
          <target state="translated">Qt便于创建单元测试来测试接口,如类、函数或整个库。</target>
        </trans-unit>
        <trans-unit id="9e02d5fb1b40084b7975a494c2cd6a369a5b23e4" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; also provides a menu bar merging feature to make &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; conform more closely to accepted &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; menu bar layout. The merging functionality is based on string matching the title of a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; entry. These strings are translated (using &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()) in the &quot;&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;&quot; context. If an entry is moved its slots will still fire as if it was in the original place. The table below outlines the strings looked for and where the entry is placed if matched:</source>
          <target state="translated">Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;还提供了菜单栏合并功能，以使&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;更符合已接受的&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;菜单栏布局。合并功能基于与&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;条目的标题匹配的字符串。这些字符串在&amp;ldquo; &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; &amp;rdquo;上下文中转换（使用&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（））。如果移动了某个条目，则其插槽仍会像原始位置一样触发。下表概述了要查找的字符串以及匹配后条目的放置位置：</target>
        </trans-unit>
        <trans-unit id="97291aed260a20e0f96ea5c4456bc01503767d5c" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; allows you to run Qt applications on devices supporting the Windows Store App APIs. This covers Modern UI applications on Windows 10, Windows 10 Mobile and Windows 10 IoT.</source>
          <target state="translated">Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;允许您在支持Windows Store App API的设备上运行Qt应用程序。这涵盖了Windows 10，Windows 10移动版和Windows 10 IoT上的现代UI应用程序。</target>
        </trans-unit>
        <trans-unit id="641dd2e4fc8bc4de9332df7409965d2b514ebad6" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; is always built as a cross-build, because tools, such as qmake, are built as desktop applications. For compiling those, a desktop development environment is required. If you have installed Visual Studio 2013 for Windows, this will only create binaries for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;. You will need Visual Studio for Windows Desktop as well to create those desktop tools.</source>
          <target state="translated">用于&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT的&lt;/a&gt; Qt 始终构建为交叉构建，因为诸如qmake之类的工具被构建为桌面应用程序。为了进行编译，需要桌面开发环境。如果您已安装Windows的Visual Studio 2013，则只会为&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;创建二进制文件。您还将需要Windows Studio的Visual Studio来创建这些桌面工具。</target>
        </trans-unit>
        <trans-unit id="7a4dafd63be2c6caebaf394220644cdbdbca6fb0" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt; is available only under a commercial license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354a8e4ccc2daa81abd537f0f77ff8f0995ceb84" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt; is delivered via the &lt;a href=&quot;https://account.qt.io/&quot;&gt;Qt Account&lt;/a&gt;, under the name &lt;b&gt;Qt 5.5.1&lt;/b&gt; &amp;gt; &lt;b&gt;Qt &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt; Platform Source Package&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1690ad7d6804cd054d70e4e6136e89b7ffb01d5e" translate="yes" xml:space="preserve">
          <source>Qt for Android</source>
          <target state="translated">Qt for Android</target>
        </trans-unit>
        <trans-unit id="460f925ec969ae5605f2d0e20fbf38202d640cb2" translate="yes" xml:space="preserve">
          <source>Qt for Android - Building from Source</source>
          <target state="translated">Qt for Android-从源头开始构建</target>
        </trans-unit>
        <trans-unit id="3827ef677af1e792621c94b5fdeeca20ecaa81b8" translate="yes" xml:space="preserve">
          <source>Qt for Android currently has binaries for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c8ed03028de9530b6d140e2fc617ce9c3fabb7" translate="yes" xml:space="preserve">
          <source>Qt for Android currently has binaries for ARMv7 and x86. Make sure you select the correct architecture for the device or emulator you are targeting, otherwise your application will crash. The MIPS archictecture is currently not supported by Qt.</source>
          <target state="translated">Qt for Android 目前有 ARMv7 和 x86 的二进制文件。确保你为你的目标设备或模拟器选择正确的架构,否则你的应用程序会崩溃。Qt目前不支持MIPS架构。</target>
        </trans-unit>
        <trans-unit id="44e39891f0d20859fae108b76d67d31cdd3cb012" translate="yes" xml:space="preserve">
          <source>Qt for Android enables you to run Qt 5 applications on Android devices. All Qt modules (essentials and add-ons) are supported except the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb89e936d92d6df9b179ef82bebd0c71b98d38" translate="yes" xml:space="preserve">
          <source>Qt for Android enables you to run Qt 5 applications on devices with Android v4.1 (API level 16) or later. All Qt modules (essential and add-on) are supported except Qt WebEngine, Qt Serial Port, and the platform-specific ones (Qt Mac Extras, Qt Windows Extras, and Qt X11 Extras).</source>
          <target state="translated">Qt for Android 可以让你在 Android v4.1 (API level 16)或更高版本的设备上运行 Qt 5 应用程序。除了 Qt WebEngine、Qt Serial Port 和特定平台(Qt Mac Extras、Qt Windows Extras 和 Qt X11 Extras)之外,所有 Qt 模块(基本模块和附加模块)都支持。</target>
        </trans-unit>
        <trans-unit id="6bc3fcbce7f5d529e56620fac4aa1733976cee36" translate="yes" xml:space="preserve">
          <source>Qt for Android enables you to run Qt applications on Android devices. The following configurations are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96c341e42367cd3dc297ba8377a85762e2ffcda" translate="yes" xml:space="preserve">
          <source>Qt for Android offers a variety of inter-process communication (IPC) methods to communicate with Android Services. Depending on the structure of your project, you can use either native C++ calls from Java Service or Android BroadcastReceiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318cd75626943c788d9cd6545a9ff3c5ba2d2dca" translate="yes" xml:space="preserve">
          <source>Qt for Android provides a special, virtual file system which is based on the</source>
          <target state="translated">Qt for Android提供了一个特殊的虚拟文件系统,它基于</target>
        </trans-unit>
        <trans-unit id="b8542ba96eab468ed2b293b169bdc2764de13605" translate="yes" xml:space="preserve">
          <source>Qt for Android provides a special, virtual file system which is based on the &lt;a href=&quot;https://developer.android.com/guide/topics/resources/providing-resources#OriginalFiles&quot;&gt;Android Assets mechanism&lt;/a&gt;. Files that are put under the directory (&lt;a href=&quot;qmake-variable-reference#android-package-source-dir&quot;&gt;ANDROID_PACKAGE_SOURCE_DIR&lt;/a&gt;/assets/) are packaged as part of your application package. These can be accessed in Qt by prefixing the paths with &lt;code&gt;assets:/&lt;/code&gt;. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/porting-to-android.html&quot;&gt;Porting Qt applications to Android&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509465870f51e9845bccaa9ec81c5c67af9440d8" translate="yes" xml:space="preserve">
          <source>Qt for Android provides a special, virtual file system which is based on the &lt;a href=&quot;https://developer.android.com/guide/topics/resources/providing-resources#OriginalFiles&quot;&gt;Android Assets mechanism&lt;/a&gt;. Files that are put under the directory (&lt;a href=&quot;qmake-variable-reference#android-package-source-dir&quot;&gt;ANDROID_PACKAGE_SOURCE_DIR&lt;/a&gt;/assets/) are packaged as part of your application package. These can be accessed in Qt by prefixing the paths with &lt;code&gt;assets:/&lt;/code&gt;. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/porting-to-android.html&quot;&gt;Porting Qt applications to Android&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429225aae03be41d09d1d9aa8d2706732b68b834" translate="yes" xml:space="preserve">
          <source>Qt for Application Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0540f222fdde9fc958135ec909f35d190a8a2766" translate="yes" xml:space="preserve">
          <source>Qt for Device Creation</source>
          <target state="translated">设备创建的Qt</target>
        </trans-unit>
        <trans-unit id="230f4fef605c41440a2dc61457c7a6d601d8e1aa" translate="yes" xml:space="preserve">
          <source>Qt for Embedded Linux</source>
          <target state="translated">Qt for Embedded Linux</target>
        </trans-unit>
        <trans-unit id="89258626bddef7836f882c87fa732b461479bed6" translate="yes" xml:space="preserve">
          <source>Qt for Embedded Linux Fonts</source>
          <target state="translated">Qt for Embedded Linux Fonts</target>
        </trans-unit>
        <trans-unit id="0f68d9a7fe1671dc53a582c6b5f5a2749f3c4257" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY</source>
          <target state="translated">Qt for INTEGRITY</target>
        </trans-unit>
        <trans-unit id="36d5865c7f9a1f0d71d102bbb1d52edd58f81411" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY can be built on the following hosts:</source>
          <target state="translated">Qt for INTEGRITY可以在以下主机上构建。</target>
        </trans-unit>
        <trans-unit id="6e08c7961bdff2b3a82f393acf7eb12404ec2dde" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY has a tutorial that helps you learn how to:</source>
          <target state="translated">Qt for INTEGRITY有一个教程,帮助你学习如何。</target>
        </trans-unit>
        <trans-unit id="0a9fc8e90d92445df65db6a2a453561429968942" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY has been tested to support the following Qt modules: Qt Core, Qt Network, Qt GUI, Qt Quick, Qt QML, Qt Quick Controls 2, Qt 3D, Qt Widgets, Qt Image Formats, Qt XML Patterns, Qt SVG.</source>
          <target state="translated">Qt for INTEGRITY已经过测试,支持以下Qt模块:Qt Core,Qt Network,Qt GUI,Qt Quick,Qt QML,Qt Quick Controls 2,Qt 3D,Qt Widgets,Qt Image Formats,Qt XML Patterns:Qt Core,Qt Network,Qt GUI,Qt Quick,Qt QML,Qt Quick Controls 2,Qt 3D,Qt Widgets,Qt Image Formats,Qt XML Patterns,Qt SVG.</target>
        </trans-unit>
        <trans-unit id="d015fc3da93c1018f79faa46cd24ca866fae9abd" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY supports building and developing applications for the following development boards:</source>
          <target state="translated">Qt for INTEGRITY支持为以下开发板构建和开发应用程序。</target>
        </trans-unit>
        <trans-unit id="31250f37a0f4046c7a34f3fdb1409b4a01c68949" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11</source>
          <target state="translated">Qt for Linux/X11</target>
        </trans-unit>
        <trans-unit id="800dc2b98427d0206a623c38cea533d6eb97703d" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Building from Source</source>
          <target state="translated">Qt for Linux/X11-从源码开始构建</target>
        </trans-unit>
        <trans-unit id="87ba8d65f9c311a736114492370b08bac501d4a2" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Deployment</source>
          <target state="translated">Qt for Linux/X11-部署。</target>
        </trans-unit>
        <trans-unit id="daddb93787dcd3738e5ad9cd56bed61aceff6b8e" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Specific Issues</source>
          <target state="translated">Qt for Linux/X11-特定问题</target>
        </trans-unit>
        <trans-unit id="8ead2eec9336947e16531335cce7360889eb034f" translate="yes" xml:space="preserve">
          <source>Qt for QNX</source>
          <target state="translated">QNX 的 Qt</target>
        </trans-unit>
        <trans-unit id="706b19e2354de0c07dd223b53c3598e2c2a2b84b" translate="yes" xml:space="preserve">
          <source>Qt for QNX SDP 6.6</source>
          <target state="translated">Qt for QNX SDP 6.6</target>
        </trans-unit>
        <trans-unit id="f31c0c62bf4bbc37c0bc2b274ea7fac1c65d027c" translate="yes" xml:space="preserve">
          <source>Qt for UWP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7ef4ba24d4bbaa85037d3d18f441c7b4e7b52b" translate="yes" xml:space="preserve">
          <source>Qt for UWP - Building from Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c467047aa149819d537c86b4f0b5216cb49176c" translate="yes" xml:space="preserve">
          <source>Qt for UWP allows you to run Qt applications on devices supporting the Universal Windows Platform (UWP). Microsoft Windows 10 introduced UWP, which provides a common application platform on every device that runs Windows 10, as a successor to Windows Runtime (WinRT) introduced by Windows 8. The UWP core APIs are the same on all Windows devices, and therefore applications that only use the core APIs will run on any Windows 10 device, such as a desktop PC, or Xbox One.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17639ae836d9a6f1c9d98638e7ea5669edcc24ad" translate="yes" xml:space="preserve">
          <source>Qt for UWP is always built as a cross-build, because tools, such as qmake, are built as desktop applications. For compiling those, a desktop development environment is required. If you have installed Visual Studio for Windows, this will only create binaries for UWP. You will need Visual Studio for Windows Desktop as well to create those desktop tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190e5bfba22348d0b848e9dee22e94609c1fa70b" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks</source>
          <target state="translated">Qt for VxWorks</target>
        </trans-unit>
        <trans-unit id="135c44d5cb85448f30ce6fa7c394fcdb144c746f" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks Source Package</source>
          <target state="translated">Qt for VxWorks源码包</target>
        </trans-unit>
        <trans-unit id="cbb5429041c553ce37ecab9843b96ab0e7f01eb1" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks is available only under a commercial license.</source>
          <target state="translated">Qt for VxWorks仅在商业许可下提供。</target>
        </trans-unit>
        <trans-unit id="a3f5af225fbc13651f5a093f939b34a1cfa533ff" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks is delivered via the &lt;a href=&quot;https://account.qt.io/#&quot;&gt;Qt Account&lt;/a&gt;, under the name &lt;b&gt;Qt 5.5.1&lt;/b&gt; &amp;gt; &lt;b&gt;Qt VxWorks Platform Source Package&lt;/b&gt;.</source>
          <target state="translated">Qt for VxWorks通过&lt;a href=&quot;https://account.qt.io/#&quot;&gt;Qt帐户&lt;/a&gt;交付，名称为&lt;b&gt;Qt 5.5.1&lt;/b&gt; &amp;gt; &lt;b&gt;Qt VxWorks Platform Source Package&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="f22924cb6754dd6bf0b62255baf872eb5c334050" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9e33f9285959dd0cd91208b421f56d006b9281" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly Technology Preview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761b79eb50a95725e11b17dc3d7ee7726236dd6" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly is a &lt;a href=&quot;qpa&quot;&gt;platform plugin&lt;/a&gt; that lets you build Qt applications, which can be integrated into your web pages. It doesn't require any client-side installations and reduces the server-side resource usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d2d6d0525d5b71af17d0a6091fe27ae585e473" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.15/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94597762392a62cd93a35ac7bda5ee5122e1c946" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly supports a subset of the Qt modules. The list below lists the currently tested modules. The list can be pasted as arguments to &lt;code&gt;make&lt;/code&gt;.</source>
          <target state="translated">用于WebAssembly的Qt支持Qt模块的子集。下面的列表列出了当前已测试的模块。该列表可以粘贴为 &lt;code&gt;make&lt;/code&gt; 的参数。</target>
        </trans-unit>
        <trans-unit id="e9f5a36d17334eb940c2543c8b0581e38de8eccb" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly wiki</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae63323ac7dd62172408f2ef87af87cdbca41db" translate="yes" xml:space="preserve">
          <source>Qt for WinRT</source>
          <target state="translated">Qt for WinRT</target>
        </trans-unit>
        <trans-unit id="2377d04623168caaf88f95f227d998dcb36bf480" translate="yes" xml:space="preserve">
          <source>Qt for WinRT - Building from Source</source>
          <target state="translated">Qt for WinRT-从源头开始构建</target>
        </trans-unit>
        <trans-unit id="7c4d733adfeaf83ead286173000e50cf6fa9d7fe" translate="yes" xml:space="preserve">
          <source>Qt for Windows</source>
          <target state="translated">Qt for Windows</target>
        </trans-unit>
        <trans-unit id="380c3a38ba6f1a182468d43ad6706cd2b8fab83c" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Building from Source</source>
          <target state="translated">Qt for Windows-从源头开始构建</target>
        </trans-unit>
        <trans-unit id="26d1e7bae42209c3455cedbae650c1bdd338c409" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Deployment</source>
          <target state="translated">Qt for Windows-部署</target>
        </trans-unit>
        <trans-unit id="3fce4f6b470253b407f7133fb694cceafc4cba3b" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Requirements</source>
          <target state="translated">Qt for Windows-要求</target>
        </trans-unit>
        <trans-unit id="82a152eebb746e5ce85f395d8df1830e7cc247fc" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Specific Issues</source>
          <target state="translated">Qt for Windows-具体问题</target>
        </trans-unit>
        <trans-unit id="322f681d5705f9388867fe370fc7758f401979e4" translate="yes" xml:space="preserve">
          <source>Qt for X11 Requirements</source>
          <target state="translated">Qt for X11需求</target>
        </trans-unit>
        <trans-unit id="3c1f21ba15bab26a0fe56f06cd17f42dc31ac901" translate="yes" xml:space="preserve">
          <source>Qt for iOS</source>
          <target state="translated">Qt for iOS</target>
        </trans-unit>
        <trans-unit id="5b4cf7c90e79a650d00cf7e32f75003ceec20638" translate="yes" xml:space="preserve">
          <source>Qt for iOS - Building from Source</source>
          <target state="translated">Qt for iOS-从源头开始构建</target>
        </trans-unit>
        <trans-unit id="cdaf73757ca10c633b777ca4dff9d014710530c3" translate="yes" xml:space="preserve">
          <source>Qt for macOS</source>
          <target state="translated">Qt for macOS</target>
        </trans-unit>
        <trans-unit id="fe6dafc55d2f14bccde59a38f0629e7625f97e99" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Building from Source</source>
          <target state="translated">Qt for macOS-从源头开始构建</target>
        </trans-unit>
        <trans-unit id="1822552b68a73c63eeb2b95d30210ed23b89f5c7" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Deployment</source>
          <target state="translated">Qt for macOS-部署</target>
        </trans-unit>
        <trans-unit id="0f73e966014a92695c79d0902d18c5b478dcceba" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Specific Issues</source>
          <target state="translated">Qt for macOS-具体问题</target>
        </trans-unit>
        <trans-unit id="d611923d8905c12af835610d2fa9370cf127fe74" translate="yes" xml:space="preserve">
          <source>Qt for macOS also provides a menu bar merging feature to make QMenuBar conform more closely to accepted macOS menu bar layout. The merging functionality is based on string matching the title of a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; entry. These strings are translated (using &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()) in the &quot;QMenuBar&quot; context. If an entry is moved its slots will still fire as if it was in the original place. The table below outlines the strings looked for and where the entry is placed if matched:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ae69c3a7ea39291ac604680d78dfa1aad1910f" translate="yes" xml:space="preserve">
          <source>Qt function</source>
          <target state="translated">Qt函数</target>
        </trans-unit>
        <trans-unit id="57acc9790615c54a8e232cd233dd55171405c075" translate="yes" xml:space="preserve">
          <source>Qt function index</source>
          <target state="translated">Qt函数索引</target>
        </trans-unit>
        <trans-unit id="72dc09b4da59bd934d21922a39369e491392422a" translate="yes" xml:space="preserve">
          <source>Qt has a number of standard cursor shapes, but you can also make custom cursor shapes based on a &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt;, a mask and a hotspot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74abb3119a1b5d3043a128d359e2f5e739daa2b" translate="yes" xml:space="preserve">
          <source>Qt has a number of standard cursor shapes, but you can also make custom cursor shapes based on a &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;, a mask and a hotspot.</source>
          <target state="translated">Qt有许多标准的光标形状，但是您也可以基于&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;，遮罩和热点来制作自定义光标形状。</target>
        </trans-unit>
        <trans-unit id="af7aa6efe0663dccda73a8b2f701219001ec1a5e" translate="yes" xml:space="preserve">
          <source>Qt has been tested successfully with Clang 3.8(llvm svn rev. 256453 and clang svn rev. 256453). Visual Studio 2015 Update 1 was used to build clang. Mkspec is using the clang-cl tool to build Qt. Clang 3.8 does not support precompiled headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd6d808e0958a42f311c754e0b3c113e872b8ba" translate="yes" xml:space="preserve">
          <source>Qt has been tested successfully with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664e8d34cf723b5115c896a9dcd455da192495cd" translate="yes" xml:space="preserve">
          <source>Qt has predefined support for the following UTIs:</source>
          <target state="translated">Qt已经预先定义了对以下UTI的支持。</target>
        </trans-unit>
        <trans-unit id="62b55e10e1821fc922eae9ac4ac72aac65c2e3c0" translate="yes" xml:space="preserve">
          <source>Qt has predefined support for the following Windows Clipboard formats:</source>
          <target state="translated">Qt已经预先定义了对以下Windows剪贴板格式的支持。</target>
        </trans-unit>
        <trans-unit id="49e54281cb43b9e04359f5457778d3e44eee0c05" translate="yes" xml:space="preserve">
          <source>Qt has some predefined &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects.</source>
          <target state="translated">Qt有一些预定义的&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="75bd4c2c2d2b05d96699a07df931fe037d161c9a" translate="yes" xml:space="preserve">
          <source>Qt has support for sheets, represented by the window flag, &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;.</source>
          <target state="translated">Qt支持工作表，由窗口标志&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet表示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4fb01f8657ae809e005fda46ee7da147a420fb4" translate="yes" xml:space="preserve">
          <source>Qt implements menus in &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; and &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; keeps them in a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s are added to the menus, which display them as menu items.</source>
          <target state="translated">Qt在&lt;a href=&quot;qmenu&quot;&gt;QMenu中&lt;/a&gt;实现菜单，而&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;将其保留在&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar中&lt;/a&gt;。&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;被添加到菜单中，这些菜单将它们显示为菜单项。</target>
        </trans-unit>
        <trans-unit id="d1498b917c708f502016a309d7db8f7a9bed13dc" translate="yes" xml:space="preserve">
          <source>Qt implements menus in &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; and QMainWindow keeps them in a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s are added to the menus, which display them as menu items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0fe68b460d3fcc3bff79409c0d44f9fee233ac" translate="yes" xml:space="preserve">
          <source>Qt in Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f146bc2e1892c10c144cc45be08dfb64b54b2b03" translate="yes" xml:space="preserve">
          <source>Qt in source code form (needed only if you want to build the framework and tools yourself)</source>
          <target state="translated">源代码形式的Qt(只有当你想自己构建框架和工具时才需要)</target>
        </trans-unit>
        <trans-unit id="8795100cdb5c10027e73b578e20a2f3dbc95913e" translate="yes" xml:space="preserve">
          <source>Qt includes &lt;code&gt;qmlscene&lt;/code&gt;, a utility that loads and displays QML documents even before the application is complete. This utility also provides the following additional features that are useful while developing QML applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3315e1a174c7101112608feae6c18704dc51155" translate="yes" xml:space="preserve">
          <source>Qt includes a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; class that inherits &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; and adds a few convenience functions, such as &lt;a href=&quot;qstringlist#join&quot;&gt;QStringList::join&lt;/a&gt;() and &lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList::filter&lt;/a&gt;(). &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() creates QStringLists from strings.</source>
          <target state="translated">Qt包含一个&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;类，该类继承了&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt;并添加了一些便利功能，例如&lt;a href=&quot;qstringlist#join&quot;&gt;QStringList :: join&lt;/a&gt;（）和&lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList :: filter&lt;/a&gt;（）。&lt;a href=&quot;qstring#split&quot;&gt;QString :: split&lt;/a&gt;（）从字符串创建QStringLists。</target>
        </trans-unit>
        <trans-unit id="f74cc0b2e87252e109c7e4632b7051131edeacf6" translate="yes" xml:space="preserve">
          <source>Qt includes a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; class that inherits QList&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; and adds a few convenience functions, such as &lt;a href=&quot;qstringlist#join&quot;&gt;QStringList::join&lt;/a&gt;() and &lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList::filter&lt;/a&gt;(). &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() creates QStringLists from strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7297bef3a9112617df557becff168533a9a6a01e" translate="yes" xml:space="preserve">
          <source>Qt includes a set of layout management classes that are used to describe how widgets are laid out in an application's user interface. These layouts automatically position and resize widgets when the amount of space available for them changes, ensuring that they are consistently arranged and that the user interface as a whole remains usable.</source>
          <target state="translated">Qt包含一组布局管理类,用于描述如何在应用程序的用户界面中布置小组件。当可用空间发生变化时,这些布局会自动定位和调整widget的大小,以确保它们的排列一致,并确保用户界面作为一个整体保持可用。</target>
        </trans-unit>
        <trans-unit id="654c1e2e4b6db5eabfbfeced385e522ced569a51" translate="yes" xml:space="preserve">
          <source>Qt includes global macros for writing out warning and debug text. You can use them for the following purposes:</source>
          <target state="translated">Qt包含全局宏,用于写出警告和调试文本。你可以将它们用于以下目的。</target>
        </trans-unit>
        <trans-unit id="2da5557109212fce52b19b921f5a131a770b2687" translate="yes" xml:space="preserve">
          <source>Qt includes other template classes that resemble containers in some respects. These classes don't provide iterators and cannot be used with the &lt;code&gt;foreach&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4539a23d73a4c2abdae441c11e86fd6f6b43142" translate="yes" xml:space="preserve">
          <source>Qt includes three template classes that resemble containers in some respects. These classes don't provide iterators and cannot be used with the &lt;code&gt;foreach&lt;/code&gt; keyword.</source>
          <target state="translated">Qt包括三个在某些方面类似于容器的模板类。这些类不提供迭代器，因此不能与 &lt;code&gt;foreach&lt;/code&gt; 关键字一起使用。</target>
        </trans-unit>
        <trans-unit id="a7330c0a98f90281d7ac3a2500264ff2d65f7e2d" translate="yes" xml:space="preserve">
          <source>Qt indexes each translatable string by the</source>
          <target state="translated">Qt对每一个可翻译的字符串都以</target>
        </trans-unit>
        <trans-unit id="cfe1affbf4b08b7e793e55fed360e0d54f3186dc" translate="yes" xml:space="preserve">
          <source>Qt is a C++ library and is compiled into traditional, native binaries that make full use of the performance provided by the runtime environment.</source>
          <target state="translated">Qt是一个C++库,并被编译成传统的、原生的二进制文件,充分利用运行时环境提供的性能。</target>
        </trans-unit>
        <trans-unit id="2922aabeefbebaa7aede3557b5409ae01b07ab4f" translate="yes" xml:space="preserve">
          <source>Qt is a C++ toolkit for cross-platform GUI application development.</source>
          <target state="translated">Qt是一个跨平台GUI应用开发的C++工具包。</target>
        </trans-unit>
        <trans-unit id="829547a64b6d474791c2aa2d42b7f5151805e46e" translate="yes" xml:space="preserve">
          <source>Qt is a commercial and open source licensed cross-platform application and UI framework. It is developed by The Qt Company, together with the Qt Project Community under an open source governance model.</source>
          <target state="translated">Qt是一个商业和开源的跨平台应用程序和用户界面框架。它是由Qt公司与Qt项目社区一起在开源管理模式下开发的。</target>
        </trans-unit>
        <trans-unit id="1b4cd817b223956ef5abd8122594dc446c1d2a8e" translate="yes" xml:space="preserve">
          <source>Qt is a cross-platform application and UI framework. Using Qt, you can write web-enabled applications once and deploy them across desktop, mobile and embedded operating systems without rewriting the source code.</source>
          <target state="translated">Qt是一个跨平台的应用程序和UI框架。使用Qt,您可以一次性编写web应用程序,并在桌面、移动和嵌入式操作系统上进行部署,而无需重写源代码。</target>
        </trans-unit>
        <trans-unit id="fb7db49d4cdfb8e60d5632754123e4c3b0b6fde5" translate="yes" xml:space="preserve">
          <source>Qt is a full development framework with tools designed to streamline the creation of applications and user interfaces for desktop, embedded, and mobile platforms.</source>
          <target state="translated">Qt是一个完整的开发框架,其设计的工具可以简化桌面、嵌入式和移动平台的应用程序和用户界面的创建。</target>
        </trans-unit>
        <trans-unit id="aae4b38403a448d7aa513107eaed79277e427d9b" translate="yes" xml:space="preserve">
          <source>Qt is cross-platform and you can deploy onto different devices and platforms. &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; has built-in project templates and kits for different platforms and devices. In addition, you can port Qt and create custom targets with &lt;a href=&quot;qpa&quot;&gt;Qt Platform Abstraction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6f0ace43b8ec57a2a6df72e58d52541f201013" translate="yes" xml:space="preserve">
          <source>Qt is not an appropriate solution for setuid programs due to its large attack surface. However some applications may be required to run in this manner for historical reasons. This flag will prevent Qt from aborting the application when this is detected, and must be set before a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instance is created.</source>
          <target state="translated">由于Qt受攻击面较大，因此它不是setuid程序的适当解决方案。但是，出于历史原因，可能需要某些应用程序以这种方式运行。当检测到此标志时，此标志将防止Qt中止应用程序，并且必须在创建&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;实例之前将其设置。</target>
        </trans-unit>
        <trans-unit id="498975ca34a4a7d8fbf1df412d93cab17db430f5" translate="yes" xml:space="preserve">
          <source>Qt is supported on a variety of 32-bit and 64-bit platforms, and can usually be built on each platform with GCC, a vendor-supplied compiler, or a third party compiler as indicated in the overview below.</source>
          <target state="translated">Qt被支持在各种32位和64位平台上,通常可以在每个平台上使用GCC、厂商提供的编译器或第三方编译器来构建,如下文概述所示。</target>
        </trans-unit>
        <trans-unit id="11e6edf71b20883502cc52ed147cb48b4230e5d6" translate="yes" xml:space="preserve">
          <source>Qt itself contains several thousands of strings that will also need to be translated into the languages that you are targeting. You will find a number of translation files in the qttranslations repository. Before you start translating Qt, read the wiki page &lt;a href=&quot;http://wiki.qt.io/Qt_Localization&quot;&gt;Translating Qt Into Other Languages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31ae0a1a761177b5dbcce6b9a8cf19c6d7518b2" translate="yes" xml:space="preserve">
          <source>Qt itself contains several thousands of strings that will also need to be translated into the languages that you are targeting. You will find a number of translation files in the qttranslations repository. Before you start translating Qt, read the wiki page &lt;a href=&quot;http://wiki.qt.io/Qt_Localization#&quot;&gt;Translating Qt Into Other Languages&lt;/a&gt;.</source>
          <target state="translated">Qt本身包含数千个字符串，这些字符串也需要翻译成您要定位的语言。您可以在qttranslations存储库中找到许多翻译文件。开始翻译Qt之前，请阅读Wiki页面&lt;a href=&quot;http://wiki.qt.io/Qt_Localization#&quot;&gt;将Qt转换成其他语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="254e8240275fd05167fc860314324e979412a8f5" translate="yes" xml:space="preserve">
          <source>Qt itself has a significant number of unit tests written with the Qt Test and Qt Quick Test frameworks (</source>
          <target state="translated">Qt本身有大量的单元测试是用Qt Test和Qt Quick Test框架编写的(</target>
        </trans-unit>
        <trans-unit id="cff96e1b527b00dc0bbccd71d388b533cbe002c8" translate="yes" xml:space="preserve">
          <source>Qt libraries, prebuilt for a particular development platform (operating system and compiler)</source>
          <target state="translated">Qt库,为特定的开发平台(操作系统和编译器)预先构建的库。</target>
        </trans-unit>
        <trans-unit id="bcc674586800a801dedf28073bdfa0167ab5eb27" translate="yes" xml:space="preserve">
          <source>Qt loads the &lt;code&gt;.so&lt;/code&gt; file defined in &lt;code&gt;android.app.lib_name&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;, and calls the &lt;code&gt;main()&lt;/code&gt; function with all the arguments set in &lt;code&gt;android.app.arguments&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;. When running in a separate process, you can start the service using either the same lib file as the main activity or a separate lib file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d336333bd1f734dad729438159b3728122df43f" translate="yes" xml:space="preserve">
          <source>Qt loads the &lt;code&gt;.so&lt;/code&gt; file defined in &lt;code&gt;android.app.lib_name&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;, and calls the &lt;code&gt;main&lt;/code&gt; function with all the arguments set in &lt;code&gt;android.app.arguments&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;.</source>
          <target state="translated">Qt加载 &lt;code&gt;android.app.lib_name&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 定义的 &lt;code&gt;.so&lt;/code&gt; 文件，并使用 &lt;code&gt;android.app.arguments&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 设置的所有参数调用 &lt;code&gt;main&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="6deba9ade28c55bfdfdf88b73236eb3d3b1cb6ce" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null bit arrays and empty bit arrays for historical reasons. For most applications, what matters is whether or not a bit array contains any data, and this can be determined using &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;().</source>
          <target state="translated">由于历史原因，Qt区分空位数组和空位数组。对于大多数应用程序，重要的是位数组是否包含任何数据，这可以使用&lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）确定。</target>
        </trans-unit>
        <trans-unit id="06ffa696f8232ead655f8a08a7deb7a44d7c84b6" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null byte arrays and empty byte arrays for historical reasons. For most applications, what matters is whether or not a byte array contains any data, and this can be determined using &lt;a href=&quot;qbytearray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;().</source>
          <target state="translated">由于历史原因，Qt区分空字节数组和空字节数组。对于大多数应用程序，重要的是字节数组是否包含任何数据，这可以使用&lt;a href=&quot;qbytearray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）确定。</target>
        </trans-unit>
        <trans-unit id="080bd151795e13b333d428f6d0052bf4209fcb1e" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null strings and empty strings for historical reasons. For most applications, what matters is whether or not a string contains any data, and this can be determined using the &lt;a href=&quot;qstring#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() function.</source>
          <target state="translated">由于历史原因，Qt区分空字符串和空字符串。对于大多数应用程序，重要的是字符串是否包含任何数据，这可以使用&lt;a href=&quot;qstring#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）函数确定。</target>
        </trans-unit>
        <trans-unit id="7dee2d6abac8dd712cc795b1022328d7d892bed8" translate="yes" xml:space="preserve">
          <source>Qt minor releases usually follow the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases, while Qt patch releases follow &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; patch releases. Patch releases are therefore both backward and forward compatible.</source>
          <target state="translated">Qt次要版本通常跟随&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;次要版本，而Qt补丁版本跟随&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;补丁版本。因此，修补程序版本向后和向前兼容。</target>
        </trans-unit>
        <trans-unit id="3e74018052b754d891987ff9c8789c9c4e116ea1" translate="yes" xml:space="preserve">
          <source>Qt minor releases usually follow the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases, while Qt patch releases follow &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; patch releases. Patch releases are therefore both backward and forward compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba98234131c3b1537f53b2e333f370ccbcd9569b" translate="yes" xml:space="preserve">
          <source>Qt minor releases usually follow the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases, while Qt patch releases follow &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; patch releases. Patch releases are therefore both backward and forward compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2898d044ffe5d553af220f03b52e697a30640884" translate="yes" xml:space="preserve">
          <source>Qt modules loaded with &lt;code&gt;find_package&lt;/code&gt; set various variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ac5c3b45757b572d5225054b71f5662eab4ae3" translate="yes" xml:space="preserve">
          <source>Qt needs information about the physical dimensions of the attached display to determine DPI values and thus set correct font sizes. Usually, this information is provided by the Screen. In some cases you may see an invalid screen size such as 0mmx0mm. In such a case Qt requires an environment variable &lt;code&gt;QQNX_PHYSICAL_SCREEN_SIZE&lt;/code&gt; set to according values to get the required information. If Qt applications exit with an error message saying that the physical screen size couldn't be determined, set the variable like this before starting the Qt application:</source>
          <target state="translated">Qt需要有关所连接显示器的物理尺寸的信息，以确定DPI值，从而设置正确的字体大小。通常，此信息由屏幕提供。在某些情况下，您可能会看到无效的屏幕尺寸，例如0mmx0mm。在这种情况下，Qt需要根据值将环境变量 &lt;code&gt;QQNX_PHYSICAL_SCREEN_SIZE&lt;/code&gt; 设置为以获得所需的信息。如果Qt应用程序退出并显示错误消息，提示无法确定物理屏幕尺寸，请在启动Qt应用程序之前像这样设置变量：</target>
        </trans-unit>
        <trans-unit id="e4dbb8aed7a5351c88e084deb297f360a51b5140" translate="yes" xml:space="preserve">
          <source>Qt normally erases the widget's area before the &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() call. If the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt; widget attribute is set, the widget is responsible for painting all its pixels with an opaque color.</source>
          <target state="translated">Qt通常会在&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）调用之前擦除小部件的区域。如果设置了&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_OpaquePaintEvent&lt;/a&gt;小部件属性，则该小部件负责用不透明的颜色绘制其所有像素。</target>
        </trans-unit>
        <trans-unit id="db2e2efe41460eb77e441e039bf686e8127fd06b" translate="yes" xml:space="preserve">
          <source>Qt normally uses &lt;code&gt;fontconfig&lt;/code&gt; to provide access to system fonts. If &lt;code&gt;fontconfig&lt;/code&gt; is not available, Qt will fall back to using &lt;code&gt;QBasicFontDatabase&lt;/code&gt;. In this case, Qt applications will look for fonts in Qt's &lt;code&gt;lib/fonts&lt;/code&gt; directory. Qt will automatically detect pre-rendered fonts and TrueType fonts. This directory can be overridden by setting the &lt;code&gt;QT_QPA_FONTDIR&lt;/code&gt; environment variable.</source>
          <target state="translated">Qt通常使用 &lt;code&gt;fontconfig&lt;/code&gt; 提供对系统字体的访问。如果 &lt;code&gt;fontconfig&lt;/code&gt; 不可用，则Qt将退回到使用 &lt;code&gt;QBasicFontDatabase&lt;/code&gt; 。在这种情况下，Qt应用程序将在Qt的 &lt;code&gt;lib/fonts&lt;/code&gt; 目录中查找字体。 Qt将自动检测预渲染的字体和TrueType字体。可以通过设置 &lt;code&gt;QT_QPA_FONTDIR&lt;/code&gt; 环境变量来覆盖此目录。</target>
        </trans-unit>
        <trans-unit id="aaeeac97ee362e1784217036bbe5320fad374f2d" translate="yes" xml:space="preserve">
          <source>Qt normally uses &lt;code&gt;fontconfig&lt;/code&gt; to provide access to system fonts. If &lt;code&gt;fontconfig&lt;/code&gt; is not available, e.g. in dedicated embedded systems where space is at a premium, Qt will fall back to using &lt;code&gt;QBasicFontDatabase&lt;/code&gt;. In this case, Qt applications will look for fonts in Qt's &lt;code&gt;lib/fonts/&lt;/code&gt; directory. Qt will automatically detect prerendered fonts and TrueType fonts.</source>
          <target state="translated">Qt通常使用 &lt;code&gt;fontconfig&lt;/code&gt; 提供对系统字体的访问。如果 &lt;code&gt;fontconfig&lt;/code&gt; 不可用，例如在空间有限的专用嵌入式系统中，Qt将退回到使用 &lt;code&gt;QBasicFontDatabase&lt;/code&gt; 。在这种情况下，Qt应用程序将在Qt的 &lt;code&gt;lib/fonts/&lt;/code&gt; 目录中查找字体。Qt将自动检测预渲染的字体和TrueType字体。</target>
        </trans-unit>
        <trans-unit id="00621a561fad374b4010fb23e9ea2ac50f598835" translate="yes" xml:space="preserve">
          <source>Qt notifies applications if the user interface language changes by sending an event of the type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LanguageChange&lt;/a&gt;. To call the member function &lt;code&gt;retranslateUi()&lt;/code&gt; of the user interface object, we reimplement &lt;code&gt;QWidget::changeEvent()&lt;/code&gt; in the form class, as follows:</source>
          <target state="translated">Qt通过发送&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: LanguageChange&lt;/a&gt;类型的事件来通知应用程序用户界面语言是否更改。要调用用户界面对象的成员函数 &lt;code&gt;retranslateUi()&lt;/code&gt; ，我们在表单类中重新实现 &lt;code&gt;QWidget::changeEvent()&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="db4a4c9cfa2ed2a668bbec94f50b02e2b8dfa4a5" translate="yes" xml:space="preserve">
          <source>Qt now provides a family of classes which all inherit from &lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt; which expose every core OpenGL function by way of a corresponding member function. There is a class for every valid combination of OpenGL version and profile. Each class follows the naming convention:</source>
          <target state="translated">Qt现在提供了一个全都从&lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt;继承的类家族，它们通过相应的成员函数公开了每个核心OpenGL函数。OpenGL版本和配置文件的每个有效组合都有一个类。每个类都遵循命名约定：</target>
        </trans-unit>
        <trans-unit id="e3e529db91c96dd5bacad535790f9aeecd3ad2d1" translate="yes" xml:space="preserve">
          <source>Qt now provides a family of classes which all inherit from QAbstractOpenGLFunctions which expose every core OpenGL function by way of a corresponding member function. There is a class for every valid combination of OpenGL version and profile. Each class follows the naming convention:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b5e2be55607869c98610c2d5f2f3e459098495" translate="yes" xml:space="preserve">
          <source>Qt offers Qt Quick Layouts to arrange Qt Quick items visually in a layout. Unlike its alternative, the item positioners, the Qt Quick Layouts can also resize its children on window resize. Although Qt Quick Layouts are often the desired choice for most use cases, the following</source>
          <target state="translated">Qt提供了Qt Quick Layouts来在布局中可视化地安排Qt Quick项目。与它的替代品--项目定位器不同,Qt Quick Layouts还可以在窗口调整时调整其子项目的大小。尽管Qt Quick Layouts通常是大多数使用情况下的理想选择,但下列情况下,Qt Quick Layouts是一个很好的选择</target>
        </trans-unit>
        <trans-unit id="dd1be8ba084fd99501ffdb560f868cae42d1abcf" translate="yes" xml:space="preserve">
          <source>Qt offers a better solution to this problem and recommends the application developers to follow these tips:</source>
          <target state="translated">对于这个问题,Qt提供了一个比较好的解决方案,建议应用开发者遵循这些技巧。</target>
        </trans-unit>
        <trans-unit id="fe06eaae8129a7c2a556f63b5073be2931f913cc" translate="yes" xml:space="preserve">
          <source>Qt offers many classes and functions for working with threads. Below are four different approaches that Qt programmers can use to implement multithreaded applications.</source>
          <target state="translated">Qt提供了许多用于处理线程的类和函数。下面是Qt程序员可以用来实现多线程应用程序的四种不同方法。</target>
        </trans-unit>
        <trans-unit id="933607e2e07333ffac1e434f766ff78ad0d55767" translate="yes" xml:space="preserve">
          <source>Qt offers several tools and utilities to enable a rich developer experience, especially for Qt Quick developers. The following sections provide a brief introduction to those tools and utilities, and provide links to further information about them.</source>
          <target state="translated">Qt提供了一些工具和实用程序来实现丰富的开发者体验,特别是对于Qt Quick开发者来说。下面的章节将对这些工具和实用程序进行简要介绍,并提供链接以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="1dd725f91594eab32b75bfb45eff255bf56caa73" translate="yes" xml:space="preserve">
          <source>Qt offers two UI frameworks for developers: &lt;b&gt;Qt Widgets&lt;/b&gt; and &lt;b&gt;Qt Quick&lt;/b&gt;. &lt;a href=&quot;qtwidgets-index&quot;&gt;Qt Widgets&lt;/a&gt; is cross-platform and tightly integrates with desktop look and feel. &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; UIs are dynamic with fluid animations and are optimal for touch interfaces. You can implement widget UIs in C++ and you can implement Qt Quick UIs declaratively with QML and JavaScript. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-ui.html&quot;&gt;User Interfaces&lt;/a&gt; page compares both Qt Quick and Qt Widgets UIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc057726d6e021c571859d7606e53577d7aded2" translate="yes" xml:space="preserve">
          <source>Qt offers various approaches to integrate QML and C++ code in an application. A typical use case is displaying a list of data in a user interface. If the data set is static, simple, and/or small, a model written in QML can be sufficient.</source>
          <target state="translated">Qt提供了各种方法来整合应用程序中的QML和C++代码。一个典型的用例是在用户界面中显示一个数据列表。如果数据集是静态的、简单的和/或小的,用QML编写的模型就足够了。</target>
        </trans-unit>
        <trans-unit id="ff4c589debde91ae9e625d43a4a33d934f272052" translate="yes" xml:space="preserve">
          <source>Qt or C++ type</source>
          <target state="translated">Qt或C++类型</target>
        </trans-unit>
        <trans-unit id="ce14258c22a023000718cf3eb4314fd32dfe9903" translate="yes" xml:space="preserve">
          <source>Qt pictures use a proprietary binary format. Unlike native picture (meta-file) formats on many window systems, Qt pictures have no limitations regarding their contents. Everything that can be painted on a widget or pixmap (e.g., fonts, pixmaps, regions, transformed graphics, etc.) can also be stored in a picture.</source>
          <target state="translated">Qt图片使用专有的二进制格式。与许多窗口系统的原生图片(元文件)格式不同,Qt图片在内容上没有限制。一切可以画在widget或pixmap上的内容(如字体、pixmaps、区域、变换的图形等)也可以存储在图片中。</target>
        </trans-unit>
        <trans-unit id="8fc021dec8a5de5c61ab7031bc6dcb3d55cc65e1" translate="yes" xml:space="preserve">
          <source>Qt property</source>
          <target state="translated">Qt属性</target>
        </trans-unit>
        <trans-unit id="a70cf674e26b16812745f19729f41d17a1c013ed" translate="yes" xml:space="preserve">
          <source>Qt provides &lt;a href=&quot;http://download.qt.io/development_releases/prebuilt/libclang/qt&quot;&gt;prebuilt Clang packages&lt;/a&gt; that are also used for the Qt binaries in the online installer. They allow to link LLVM/clang libraries statically, but only support Release builds on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f94e320bc40830cf6299d10ead3d324a6424b1" translate="yes" xml:space="preserve">
          <source>Qt provides &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; for writing XML.</source>
          <target state="translated">Qt提供&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;来编写XML。</target>
        </trans-unit>
        <trans-unit id="2e059dd17c54e09b3c7fac357e3fd840b1f96aa7" translate="yes" xml:space="preserve">
          <source>Qt provides C++ classes that support SQL data models. These classes work transparently on the underlying SQL data, reducing the need to run SQL queries for basic SQL operations such as create, insert, or update. For more details about these classes, see &lt;a href=&quot;sql-model&quot;&gt;Using the SQL Model Classes&lt;/a&gt;.</source>
          <target state="translated">Qt提供了支持SQL数据模型的C ++类。这些类在基础SQL数据上透明地工作，从而减少了对基本SQL操作（例如创建，插入或更新）运行SQL查询的需要。有关这些类的更多详细信息，请参见《&lt;a href=&quot;sql-model&quot;&gt;使用SQL模型类》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98580f7890d21d86a5850e9242275efb62ce8ac3" translate="yes" xml:space="preserve">
          <source>Qt provides a &lt;code&gt;qmlprofiler&lt;/code&gt; command line tool to capture profiling data in a file. To run this tool, enter the following command:</source>
          <target state="translated">Qt提供了 &lt;code&gt;qmlprofiler&lt;/code&gt; 命令行工具来捕获文件中的分析数据。要运行此工具，请输入以下命令：</target>
        </trans-unit>
        <trans-unit id="5f5d28a76813f4640f8fae4ba48da2825709372d" translate="yes" xml:space="preserve">
          <source>Qt provides a deploy tool, &lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqt&lt;/a&gt;, to simplify the deployment process. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#&quot;&gt;Qt for macOS - Deployment&lt;/a&gt; article covers the deployment process in more detail.</source>
          <target state="translated">Qt提供了一个部署工具&lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqt&lt;/a&gt;来简化部署过程。在&lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#&quot;&gt;Qt的适用于MacOS -部署&lt;/a&gt;的文章涵盖了更详细的部署过程。</target>
        </trans-unit>
        <trans-unit id="7d8326b6c81d58f3b8bea80c76aa687664f4f09b" translate="yes" xml:space="preserve">
          <source>Qt provides a deploy tool, &lt;a href=&quot;https://doc.qt.io/qt-5.15/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqt&lt;/a&gt;, to simplify the deployment process. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/macos-deployment.html&quot;&gt;Qt for macOS - Deployment&lt;/a&gt; article covers the deployment process in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53589324a33a263bf7daa1d4ff32c9e909b4598a" translate="yes" xml:space="preserve">
          <source>Qt provides a deploy tool, &lt;a href=&quot;https://doc.qt.io/qt-6.0/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqt&lt;/a&gt;, to simplify the deployment process. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/macos-deployment.html&quot;&gt;Qt for macOS - Deployment&lt;/a&gt; article covers the deployment process in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64edb3f1e781f37d05916d406c36c5525c91178f" translate="yes" xml:space="preserve">
          <source>Qt provides a number of built-in &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; classes, that is, classes that know how to translate between Unicode and legacy encodings to support programs that must talk to other programs or read/write files in legacy file formats.</source>
          <target state="translated">Qt提供了许多内置的&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;类，即知道如何在Unicode和传统编码之间进行转换以支持必须与其他程序对话或以传统文件格式读取/写入文件的程序的类。</target>
        </trans-unit>
        <trans-unit id="d25482163257cfa29a055f7e0c93e2244bb9eec3" translate="yes" xml:space="preserve">
          <source>Qt provides a number of global template functions in &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; that work on containers and perform small tasks to make life easier, such as &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;(), which invokes &lt;code&gt;operator delete&lt;/code&gt; on all items in a given container or in a given range. You can use these algorithms with any &lt;a href=&quot;containers&quot;&gt;container class&lt;/a&gt; that provides STL-style iterators, including Qt's &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f0fb73f3be3562b09062b282051ba6224cc8cd" translate="yes" xml:space="preserve">
          <source>Qt provides a number of global template functions in &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; that work on containers and perform small tasks to make life easier, such as &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;(), which invokes &lt;code&gt;operator delete&lt;/code&gt; on all items in a given container or in a given range. You can use these algorithms with any &lt;a href=&quot;containers&quot;&gt;container class&lt;/a&gt; that provides STL-style iterators, including Qt's &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, QLinkedList, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebb0fc8e4b5aa641d0125df1dc05902f0268828" translate="yes" xml:space="preserve">
          <source>Qt provides a number of global template functions in &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; that work on containers and perform small tasks to make life easier, such as &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;(), which invokes &lt;code&gt;operator delete&lt;/code&gt; on all items in a given container or in a given range. You can use these algorithms with any &lt;a href=&quot;containers#&quot;&gt;container class&lt;/a&gt; that provides STL-style iterators, including Qt's &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; classes.</source>
          <target state="translated">Qt在 &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; 中提供了许多全局模板函数，这些函数可在容器上工作并执行一些小任务以&lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;简化工作&lt;/a&gt;，例如qDeleteAll（），可在给定容器或给定范围内的所有项目上调用 &lt;code&gt;operator delete&lt;/code&gt; 。您可以将这些算法与任何提供STL样式迭代器的&lt;a href=&quot;containers#&quot;&gt;容器类&lt;/a&gt;一起使用，包括Qt的&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;，&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;，&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;，&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;和&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="3346c7b6a942ed6f07dfa001e04aa9c3f833e558" translate="yes" xml:space="preserve">
          <source>Qt provides a resource system for organizing application files and assets, a set of containers, and classes for receiving input and printing output.</source>
          <target state="translated">Qt提供了一个用于组织应用程序文件和资产的资源系统,一组容器,以及用于接收输入和打印输出的类。</target>
        </trans-unit>
        <trans-unit id="85858e3548f6ddf4e0a5330f8d5cc57937c09933" translate="yes" xml:space="preserve">
          <source>Qt provides a set of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; subclasses that emulate the native look of the different platforms supported by Qt (QWindowsStyle, QMacStyle, etc.). These styles are built into the Qt GUI module, other styles can be made available using Qt's plugin mechansim.</source>
          <target state="translated">Qt提供了一组&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;子类，这些子类可模拟Qt支持的不同平台（QWindowsStyle，QMacStyle等）的本机外观。这些样式内置在Qt GUI模块中，可以使用Qt的插件机制mechansim来提供其他样式。</target>
        </trans-unit>
        <trans-unit id="69c7a02976d799b68728387c289937ed07b905e3" translate="yes" xml:space="preserve">
          <source>Qt provides a set of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; classes to help with converting non-Unicode formats to and from Unicode. You can also create your own codec classes.</source>
          <target state="translated">Qt提供了一组&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;类，以帮助将非Unicode格式与Unicode相互转换。您也可以创建自己的编解码器类。</target>
        </trans-unit>
        <trans-unit id="ed75e58e5b0da600420a2e84b9094136feea5721" translate="yes" xml:space="preserve">
          <source>Qt provides a set of QTextCodec classes to help with converting non-Unicode formats to and from Unicode. You can also create your own codec classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442594ba1625b23c9a62cc5b4c5639ad452b1fc5" translate="yes" xml:space="preserve">
          <source>Qt provides a set of ready-made dialogs for file, font, color-selection and more.</source>
          <target state="translated">Qt提供了一套现成的对话框,用于文件、字体、颜色选择等。</target>
        </trans-unit>
        <trans-unit id="231325f7c5f334278d9999ddf840f878f79069de" translate="yes" xml:space="preserve">
          <source>Qt provides a sophisticated property system similar to the ones supplied by some compiler vendors. However, as a compiler- and platform-independent library, Qt does not rely on non-standard compiler features like &lt;code&gt;__property&lt;/code&gt; or &lt;code&gt;[property]&lt;/code&gt;. The Qt solution works with</source>
          <target state="translated">Qt提供了一个复杂的属性系统，类似于某些编译器供应商提供的属性系统。但是，作为与编译器和平台无关的库，Qt不依赖 &lt;code&gt;__property&lt;/code&gt; 或 &lt;code&gt;[property]&lt;/code&gt; 之类的非标准编译器功能。Qt解决方案适用于</target>
        </trans-unit>
        <trans-unit id="166ab04b878a106458763254fc0d105f8ecacbc8" translate="yes" xml:space="preserve">
          <source>Qt provides accessible interfaces for its widgets and for Qt Quick Controls. Interfaces for any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass can be requested through QAccessible::queryInterface(). A default implementation is provided if a more specialized interface is not defined. An AT-Client cannot acquire an interface for accessible objects that do not have an equivalent &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, e.g., scroll bar handles, but they appear as normal objects through interfaces of parent accessible objects, e.g., you can query their relationships with &lt;a href=&quot;qaccessibleinterface#relations&quot;&gt;QAccessibleInterface::relations&lt;/a&gt;().</source>
          <target state="translated">Qt为其小部件和Qt Quick Controls提供了可访问的界面。可以通过QAccessible :: queryInterface（）请求任何&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类的接口。如果未定义更专门的接口，则提供默认实现。 AT-Client无法为没有等效&lt;a href=&quot;qobject&quot;&gt;QObject的&lt;/a&gt;可访问对象获取接口，例如，滚动条手柄，但是它们通过父级可访问对象的接口显示为普通对象，例如，您可以使用&lt;a href=&quot;qaccessibleinterface#relations&quot;&gt;QAccessibleInterface :: relations&lt;/a&gt;查询它们的关系。（）。</target>
        </trans-unit>
        <trans-unit id="7901d03663cd3e7afb4aa0a36247269d34542071" translate="yes" xml:space="preserve">
          <source>Qt provides an extensive collection of classes for parsing, rendering manipulating and editing rich text.</source>
          <target state="translated">Qt提供了一个广泛的类集合,用于解析、渲染、操作和编辑丰富的文本。</target>
        </trans-unit>
        <trans-unit id="30e1c7defbcb1b69f91cc5e90b043a1d161194ea" translate="yes" xml:space="preserve">
          <source>Qt provides classes for all version and Core and Compatibility profile combinations. The classes for OpenGL versions 3.1 through to 4.3 are:</source>
          <target state="translated">Qt为所有版本、核心和兼容性配置文件组合提供了类。适用于OpenGL 3.1至4.3版本的类有:1:</target>
        </trans-unit>
        <trans-unit id="dafcc43ba81943faaf87c1a7931d6a660d25a30d" translate="yes" xml:space="preserve">
          <source>Qt provides default library paths, but they can also be set using a &lt;a href=&quot;qt-conf&quot;&gt;qt.conf&lt;/a&gt; file. Paths specified in this file will override default values. Note that if the qt.conf file is in the directory of the application executable, it may not be found until a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; is created. If it is not found when calling this function, the default library paths will be used.</source>
          <target state="translated">Qt提供了默认的库路径，但也可以使用&lt;a href=&quot;qt-conf&quot;&gt;qt.conf&lt;/a&gt;文件进行设置。在此文件中指定的路径将覆盖默认值。请注意，如果qt.conf文件位于应用程序可执行文件的目录中，则在创建&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;之前可能找不到该文件。如果在调用此函数时未找到它，则将使用默认库路径。</target>
        </trans-unit>
        <trans-unit id="25b73a1458d4fb3fbb10047b073b79f1b29e0e60" translate="yes" xml:space="preserve">
          <source>Qt provides different solutions:</source>
          <target state="translated">Qt提供了不同的解决方案。</target>
        </trans-unit>
        <trans-unit id="eb3249c74afe6b26b977cd9870e40d0a6d8f0afa" translate="yes" xml:space="preserve">
          <source>Qt provides excellent support for translating Qt C++ and Qt Quick applications into local languages. Release managers, translators, and developers can use the Qt translation tools to accomplish their tasks.</source>
          <target state="translated">Qt为将Qt C++和Qt Quick应用程序翻译成本地语言提供了出色的支持。发布经理、翻译人员和开发人员可以使用Qt翻译工具来完成他们的任务。</target>
        </trans-unit>
        <trans-unit id="37f492c87274560c06c898bde25312c453186f1e" translate="yes" xml:space="preserve">
          <source>Qt provides extensive cross-platform support for printing. Using the printing systems on each platform, Qt applications can print to attached printers and across networks to remote printers. Qt's printing system also supports PDF file generation, providing the foundation for basic report generation facilities.</source>
          <target state="translated">Qt为打印提供了广泛的跨平台支持。利用每个平台上的打印系统,Qt应用程序可以打印到连接的打印机上,也可以跨网络打印到远程打印机上。Qt的打印系统还支持PDF文件的生成,为基本的报表生成设施提供了基础。</target>
        </trans-unit>
        <trans-unit id="6c4479267b244987ab6ba5713901e5acbfabdf57" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="translated">Qt提供了四个用于处理图像数据的类：&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;，&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;，&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;和&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;。&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;是为I / O设计的，并针对直接像素访问和操纵进行了优化，而&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;是为在屏幕上显示图像而设计和优化的。&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;只是继承&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;（确保深度为1）的&lt;a href=&quot;qpicture&quot;&gt;便捷&lt;/a&gt;类。最后，QPicture类是一种绘画设备，用于记录和重放&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="b994fea97688c825475aae74000bf222736f7393" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. The &lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;() function returns &lt;code&gt;true&lt;/code&gt; if a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object is really a bitmap, otherwise returns &lt;code&gt;false&lt;/code&gt;. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="translated">Qt提供了四个用于处理图像数据的类：&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;，&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;，&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;和&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;。&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;是为I / O设计的，并针对直接像素访问和操纵进行了优化，而&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;是为在屏幕上显示图像而设计和优化的。&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;只是继承&lt;a href=&quot;qpixmap&quot;&gt;QPixmap并&lt;/a&gt;确保深度为1的便捷类。如果&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;对象确实是位图，则&lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;（）函数将返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。最后，&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;类是一种绘画设备，可以记录和重放&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="e2964d14e22bd6811710fb2243081be58401304e" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, QPixmap, &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while QPixmap is designed and optimized for showing images on screen. &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits QPixmap, ensuring a depth of 1. The &lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;() function returns &lt;code&gt;true&lt;/code&gt; if a QPixmap object is really a bitmap, otherwise returns &lt;code&gt;false&lt;/code&gt;. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35eaca484719321c1159e80667dee94216b5f27" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, QPixmap, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while QPixmap is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits QPixmap, ensuring a depth of 1. The &lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;() function returns &lt;code&gt;true&lt;/code&gt; if a QPixmap object is really a bitmap, otherwise returns &lt;code&gt;false&lt;/code&gt;. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2b4dd38e700b5ab04feaff7d08a95fff846979" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: QImage, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. QImage is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;gui-changes-qt6#qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4c580989e975e5684389438cb015c58025d790" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: QImage, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. QImage is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14a5680e99e1a944658ee836fbab84198f74686" translate="yes" xml:space="preserve">
          <source>Qt provides full Unicode support, including input methods, fonts, clipboard, drag-and-drop and file names.</source>
          <target state="translated">Qt提供了完整的Unicode支持,包括输入法、字体、剪贴板、拖放和文件名。</target>
        </trans-unit>
        <trans-unit id="6ab2967c3110cccf765f0e5aa141f835c8bb8576" translate="yes" xml:space="preserve">
          <source>Qt provides full Unicode support, including input methods, fonts, clipboard, drag-and-drop.</source>
          <target state="translated">Qt 提供了完整的 Unicode 支持,包括输入法、字体、剪贴板、拖放。</target>
        </trans-unit>
        <trans-unit id="6013721d7b22a6f2a4d2e51671befea99c124926" translate="yes" xml:space="preserve">
          <source>Qt provides low-level primitives as well as high-level mechanisms for synchronizing threads.</source>
          <target state="translated">Qt提供了低级别的基元以及高级别的线程同步机制。</target>
        </trans-unit>
        <trans-unit id="b7a4e2c6a1146ebd368eb67b4c64380e08d4b31b" translate="yes" xml:space="preserve">
          <source>Qt provides plugin types such as &lt;code&gt;imageformats&lt;/code&gt;, &lt;code&gt;platforms&lt;/code&gt;, and &lt;code&gt;sqldrivers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63186183d912be997bde447edd6d402d72d98fd" translate="yes" xml:space="preserve">
          <source>Qt provides several built-in styles represented by the &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt; enum:</source>
          <target state="translated">Qt提供了以&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;枚举表示的几种内置样式：</target>
        </trans-unit>
        <trans-unit id="8990aa7342e67095758b3aab20deb4995cbe8127" translate="yes" xml:space="preserve">
          <source>Qt provides several premade implementations of &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; for the different painter backends we support. The primary paint engine provided is the raster paint engine, which contains a software rasterizer which supports the full feature set on all supported platforms. This is the default for painting on &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based classes in e.g. on Windows, X11 and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is the backend for painting on &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and it is used as a fallback for paint engines that do not support a certain capability. In addition we provide &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; implementations for &lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;OpenGL&lt;/a&gt; (accessible through QGLWidget) and printing (which allows using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to draw on a QPrinter object).</source>
          <target state="translated">Qt为我们支持的不同painter后端提供了&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine的&lt;/a&gt;几种预制实现。提供的主要绘制引擎是光栅绘制引擎，它包含一个软件光栅化程序，该光栅化程序支持所有受支持平台上的全部功能集。这是在Windows，X11和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;等基于&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;的类上进行绘画的默认设置，它是在&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;上进行绘画的后端，并且用作不支持某些功能的绘画引擎的备用。此外，我们为&lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;OpenGL&lt;/a&gt;（可通过QGLWidget访问）和打印（允许使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;绘制QPrinter对象）提供&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="b96f5a9bb3d6c1366bcac21280c893812444ae4e" translate="yes" xml:space="preserve">
          <source>Qt provides several premade implementations of QPaintEngine for the different painter backends we support. The primary paint engine provided is the raster paint engine, which contains a software rasterizer which supports the full feature set on all supported platforms. This is the default for painting on &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based classes in e.g. on Windows, X11 and macOS, it is the backend for painting on &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and it is used as a fallback for paint engines that do not support a certain capability. In addition we provide QPaintEngine implementations for OpenGL (accessible through &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;) and printing (which allows using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to draw on a QPrinter object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a818a15b879730085547624376ec5b0381668c6" translate="yes" xml:space="preserve">
          <source>Qt provides several premade implementations of QPaintEngine for the different painter backends we support. The primary paint engine provided is the raster paint engine, which contains a software rasterizer which supports the full feature set on all supported platforms. This is the default for painting on &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;-based classes in e.g. on Windows, X11 and macOS, it is the backend for painting on &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and it is used as a fallback for paint engines that do not support a certain capability. In addition we provide QPaintEngine implementations for OpenGL (accessible through &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;) and printing (which allows using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to draw on a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8564d259226a3d5989df23cbfbb8212612a74f" translate="yes" xml:space="preserve">
          <source>Qt provides several ways to implement Inter-Process Communication (IPC) in Qt applications.</source>
          <target state="translated">Qt提供了几种在Qt应用程序中实现进程间通信(IPC)的方法。</target>
        </trans-unit>
        <trans-unit id="de9cb718a3b3a5c565ab0cd54ddc9c74c0a9b149" translate="yes" xml:space="preserve">
          <source>Qt provides single-source portability across Microsoft Windows, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, Linux, and all major commercial Unix variants. It is also available for embedded devices.</source>
          <target state="translated">Qt提供了跨Microsoft Windows，&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;，Linux和所有主要商业Unix变体的单源可移植性。它也可用于嵌入式设备。</target>
        </trans-unit>
        <trans-unit id="495b577693a421aea6b60e4ef6ae3b031d9dea69" translate="yes" xml:space="preserve">
          <source>Qt provides single-source portability across Microsoft Windows, macOS, Linux, and all major commercial Unix variants. It is also available for embedded devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94928b6390ee1ade63778e31065bf1b0ab7aaeeb" translate="yes" xml:space="preserve">
          <source>Qt provides some ready-made models that can be used to handle items of data:</source>
          <target state="translated">Qt提供了一些现成的模型,可以用来处理数据项。</target>
        </trans-unit>
        <trans-unit id="0dbf898bade78887d4d180cb6793559809bfc1e8" translate="yes" xml:space="preserve">
          <source>Qt provides support for application scripting with JavaScript. The following guides and references cover aspects of programming with JavaScript and Qt.</source>
          <target state="translated">Qt提供了对使用JavaScript编写应用程序脚本的支持。以下指南和参考资料涵盖了使用JavaScript和Qt编程的各个方面。</target>
        </trans-unit>
        <trans-unit id="3de5e4631357b1acb99e5edea85a30b0585964bd" translate="yes" xml:space="preserve">
          <source>Qt provides support for dealing with JSON data. JSON is a format to encode object data derived from Javascript, but now widely used as a data exchange format on the internet.</source>
          <target state="translated">Qt提供了对处理JSON数据的支持。JSON是一种从Javascript中衍生出来的对象数据编码格式,但现在被广泛用于互联网上的数据交换格式。</target>
        </trans-unit>
        <trans-unit id="1672125b1c73ef6f3ca16c0459cad60a5f673687" translate="yes" xml:space="preserve">
          <source>Qt provides support for macOS structures such as Frameworks and bundles. It is important to be aware of these structure as they directly affect the deployment of applications.</source>
          <target state="translated">Qt提供了对macOS结构的支持,如Frameworks和bundles。了解这些结构很重要,因为它们直接影响到应用程序的部署。</target>
        </trans-unit>
        <trans-unit id="a5352b98d3aa40382c76ecab574f55a2bf3d0e4b" translate="yes" xml:space="preserve">
          <source>Qt provides support for the Global Menu Bar with &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. macOS users expect to have a menu bar at the top of the screen and Qt honors this.</source>
          <target state="translated">Qt通过&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;为全局菜单栏提供支持。macOS用户希望在屏幕顶部有一个菜单栏，而Qt对此表示赞赏。</target>
        </trans-unit>
        <trans-unit id="addb3010519452720d8fecf88940be415e8db7e8" translate="yes" xml:space="preserve">
          <source>Qt provides support for the legacy QPF format for compatibility reasons. QPF is based on the internal font engine data structure of Qt/Embedded versions 2 and 3.</source>
          <target state="translated">出于兼容性的原因,Qt提供了对传统的QPF格式的支持,QPF是基于Qt/Embedded 2和3版本的内部字体引擎数据结构。QPF是基于Qt/Embedded 2和3版本的内部字体引擎数据结构。</target>
        </trans-unit>
        <trans-unit id="3dc26704da55c340d6e2a532711482f07da9a792" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Paths Example&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformation example&lt;/a&gt; which are located in Qt's example directory.</source>
          <target state="translated">Qt提供了&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Paths示例&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformation示例&lt;/a&gt;，它们位于Qt的示例目录中。</target>
        </trans-unit>
        <trans-unit id="3dbc8c671e209138e6abb395fa7245f407fd9834" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Paths Example&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformation example&lt;/a&gt; which are located in Qt's example directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4200cf1999c3ef9c9bcb234e437dfeb851ee19f3" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Paths Example&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformation example&lt;/a&gt; which are located in Qt's example directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a288cc31c6f5d263331d29b88d11e06e233b629f" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;qpicture#load&quot;&gt;QPicture::load&lt;/a&gt;() and &lt;a href=&quot;qpicture#save&quot;&gt;QPicture::save&lt;/a&gt;() functions as well as streaming operators for loading and saving pictures.</source>
          <target state="translated">Qt提供了&lt;a href=&quot;qpicture#load&quot;&gt;QPicture :: load&lt;/a&gt;（）和&lt;a href=&quot;qpicture#save&quot;&gt;QPicture :: save&lt;/a&gt;（）函数以及用于加载和保存图片的流运算符。</target>
        </trans-unit>
        <trans-unit id="31ceb736be4a5d57240ae7b1218baac3f202f85c" translate="yes" xml:space="preserve">
          <source>Qt provides the following classes for managing main windows and associated user interface components:</source>
          <target state="translated">Qt提供了以下类来管理主窗口和相关的用户界面组件。</target>
        </trans-unit>
        <trans-unit id="09bdb289cbadfecb02fcab837d46e832df09cd93" translate="yes" xml:space="preserve">
          <source>Qt provides the following sequential containers: &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For most applications, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the best type to use. Although it is implemented as an array-list, it provides very fast prepends and appends. If you really need a linked-list, use &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;; if you want your items to occupy consecutive memory locations, use &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; are convenience classes that provide LIFO and FIFO semantics.</source>
          <target state="translated">Qt提供以下顺序容器：&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;，&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;，&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;，&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;和&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;。对于大多数应用程序，&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;是最适合使用的类型。尽管它是作为数组列表实现的，但它提供了非常快速的前置和追加。如果您确实需要一个链表，请使用&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;；如果希望项目占据连续的内存位置，请使用&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;。&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;和&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;是提供LIFO和FIFO语义的便捷类。</target>
        </trans-unit>
        <trans-unit id="fff43af57b9706c594127a5ef539ba926e6b4634" translate="yes" xml:space="preserve">
          <source>Qt provides the following sequential containers: &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For most applications, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the best type to use. It provides very fast appends. If you really need a linked-list, use std::list. &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; are convenience classes that provide LIFO and FIFO semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60447446be13ad1a2897e6d37a6e90b817bd489a" translate="yes" xml:space="preserve">
          <source>Qt provides the following sequential containers: &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, QLinkedList, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For most applications, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the best type to use. Although it is implemented as an array-list, it provides very fast prepends and appends. If you really need a linked-list, use QLinkedList; if you want your items to occupy consecutive memory locations, use &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; are convenience classes that provide LIFO and FIFO semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5806dcc48e65528f5b89f6b41e80a9d40de826d" translate="yes" xml:space="preserve">
          <source>Qt provides the following standard effects:</source>
          <target state="translated">Qt提供了以下标准效果。</target>
        </trans-unit>
        <trans-unit id="dfb49d2068b6ac23e44233e4a1b3fed93c2a5cae" translate="yes" xml:space="preserve">
          <source>Qt provides the following ways for you to handle high DPI support in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d26901d87b20f4695baad10a5f58ad41f798a8f" translate="yes" xml:space="preserve">
          <source>Qt provides the most commonly required audio operation in GUI applications: asynchronously playing a sound file. This is most easily accomplished using the static &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() function:</source>
          <target state="translated">Qt在GUI应用程序中提供了最常见的音频操作：异步播放声音文件。使用static &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;（）函数最容易实现：</target>
        </trans-unit>
        <trans-unit id="16e14b8bf9925cba42ae320c4d31e49a39306cc2" translate="yes" xml:space="preserve">
          <source>Qt provides thread support in the form of platform-independent &lt;a href=&quot;thread&quot;&gt;threading classes&lt;/a&gt;, a thread-safe way of posting events, and signal-slot connections across threads. Multithreaded programming is also a useful paradigm for performing time-consuming operations without freezing the user interface of an application.</source>
          <target state="translated">Qt以平台无关的&lt;a href=&quot;thread&quot;&gt;线程类&lt;/a&gt;，线程安全的事件发布方式以及跨线程的信号插槽连接的形式提供线程支持。多线程编程也是执行耗时的操作而不冻结应用程序用户界面的有用范例。</target>
        </trans-unit>
        <trans-unit id="0e5c476ed0956bf5b0cb7c652e14d9e296c32a04" translate="yes" xml:space="preserve">
          <source>Qt provides thread support in the form of platform-independent threading classes, a thread-safe way of posting events, and signal-slot connections across threads. This makes it easy to develop portable multithreaded Qt applications and take advantage of multiprocessor machines. Multithreaded programming is also a useful paradigm for performing time-consuming operations without freezing the user interface of an application.</source>
          <target state="translated">Qt以独立于平台的线程类的形式提供了线程支持,一种线程安全的事件发布方式,以及跨线程的信号槽连接。这使得开发可移植的多线程Qt应用程序和利用多处理器机器的优势变得容易。多线程编程也是一种有用的范式,可以在不冻结应用程序的用户界面的情况下执行耗时的操作。</target>
        </trans-unit>
        <trans-unit id="c3a02e6ec1c01b479f407735836c4990f5c9cfd4" translate="yes" xml:space="preserve">
          <source>Qt provides three ready-to-use view classes that present data from models in ways that are familiar to most users. &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; can display items from a model as a simple list, or in the form of a classic icon view. &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; displays items from a model as a hierarchy of lists, allowing deeply nested structures to be represented in a compact way. &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; presents items from a model in the form of a table, much like the layout of a spreadsheet application.</source>
          <target state="translated">Qt提供了三种现成的视图类，它们以大多数用户熟悉的方式显示来自模型的数据。&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;可以将模型中的项目显示为简单列表，也可以经典图标视图的形式显示。&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;将模型中的项目显示为列表的层次结构，从而允许以紧凑的方式表示深层嵌套的结构。&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;以表格的形式显示来自模型的项目，非常类似于电子表格应用程序的布局。</target>
        </trans-unit>
        <trans-unit id="a41a3f45636a2783fda283b7b6b146ac91c6da6c" translate="yes" xml:space="preserve">
          <source>Qt provides two APIs for creating plugins:</source>
          <target state="translated">Qt为创建插件提供了两个API。</target>
        </trans-unit>
        <trans-unit id="9e0c70a4843d83717fa9ab49069457b0895a8f8e" translate="yes" xml:space="preserve">
          <source>Qt provides two classes for reading and writing XML through a simple streaming API: &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; and &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c637be7f16f7cd8ddbc69ab7e009cb14b5c2246c" translate="yes" xml:space="preserve">
          <source>Qt provides two general-purpose sets of APIs to read and write well-formed XML: &lt;a href=&quot;xml-streaming&quot;&gt;stream based&lt;/a&gt; and &lt;a href=&quot;xml-dom-tml&quot;&gt;DOM based&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4ed8efe219455830b613d66907864ce140ef79" translate="yes" xml:space="preserve">
          <source>Qt provides various functionality to help you develop high quality code. There are features that assist in debugging to track down bugs, and testing facilities that help to keep the bugs out.</source>
          <target state="translated">Qt提供了各种功能来帮助你开发高质量的代码。有一些功能可以协助调试以追踪错误,还有测试设施可以帮助将错误排除。</target>
        </trans-unit>
        <trans-unit id="30c4ea8b8103e2e248a7ddacd9f4bc60957d6433" translate="yes" xml:space="preserve">
          <source>Qt receives the key action and generates a key event.</source>
          <target state="translated">Qt接收到关键动作并生成一个关键事件。</target>
        </trans-unit>
        <trans-unit id="b9eaeaa3484c3400e004061d0f8d83c9f08eea20" translate="yes" xml:space="preserve">
          <source>Qt renders application content to a canvas element, and does not use (other) native DOM elements. This means accessibility (screen readers) are not supported and that text inputs won't trigger virtual keyboards.</source>
          <target state="translated">Qt将应用程序的内容渲染到一个画布元素上,而不使用(其他)原生DOM元素。这意味着不支持可访问性(屏幕阅读器),文本输入不会触发虚拟键盘。</target>
        </trans-unit>
        <trans-unit id="3f8939a301efd180fa0885c0032bdafdc2af870e" translate="yes" xml:space="preserve">
          <source>Qt requires &lt;code&gt;/dev/random&lt;/code&gt; to be present and functional. Start it before starting any Qt application or during the system startup:</source>
          <target state="translated">Qt要求 &lt;code&gt;/dev/random&lt;/code&gt; 存在并起作用。在启动任何Qt应用程序之前或在系统启动过程中启动它：</target>
        </trans-unit>
        <trans-unit id="161fe5584c0b40235a419ff4cd6e2b0e24254004" translate="yes" xml:space="preserve">
          <source>Qt resource files are never passed as is. If the service supports &lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint::StreamPlayback&lt;/a&gt;, a</source>
          <target state="translated">Qt资源文件永远不会按原样传递。如果服务支持&lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint :: StreamPlayback&lt;/a&gt;，则</target>
        </trans-unit>
        <trans-unit id="024ff4c702a4e3ac2d5a6200acbdc106d03b3b3b" translate="yes" xml:space="preserve">
          <source>Qt returns a hue value of -1 for achromatic colors. If you pass a hue value that is too large, Qt forces it into range. Hue 360 or 720 is treated as 0; hue 540 is treated as 180.</source>
          <target state="translated">Qt 为消色差颜色返回一个-1 的色调值。如果你传递的色相值过大,Qt会将其强制纳入范围。色调360或720被视为0;色调540被视为180。</target>
        </trans-unit>
        <trans-unit id="4e626796a6a6fc36e9f25df8bbcced5dcc06a70a" translate="yes" xml:space="preserve">
          <source>Qt rich-text document</source>
          <target state="translated">Qt富文本文档</target>
        </trans-unit>
        <trans-unit id="6a189d4a2866895114dd819c493376e6147da1a3" translate="yes" xml:space="preserve">
          <source>Qt sources</source>
          <target state="translated">Qt资源</target>
        </trans-unit>
        <trans-unit id="d95c6f8889a36cf8005cf2dda3e632f1506c22d0" translate="yes" xml:space="preserve">
          <source>Qt supports Microsoft Active Accessibility (MSAA), &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Accessibility, and the Unix/X11 AT-SPI standard. Other backends can be supported using QAccessibleBridge.</source>
          <target state="translated">Qt支持Microsoft Active Accessibility（MSAA），&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Accessibility和Unix / X11 AT-SPI标准。使用QAccessibleBridge可以支持其他后端。</target>
        </trans-unit>
        <trans-unit id="c9a41376fe2f2d0e48c6586f3c5e1e0000af1270" translate="yes" xml:space="preserve">
          <source>Qt supports Microsoft Active Accessibility (MSAA), macOS Accessibility, and the Unix/X11 AT-SPI standard. Other backends can be supported using QAccessibleBridge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960ecb4cc1eea9dd75bc8d7d40c68f08a168da47" translate="yes" xml:space="preserve">
          <source>Qt supports UWP apps running on any variant of Windows 10 or later on the desktop PC, IoT, Xbox One, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152be40e8b418f4a4487ce549b7c52604d3238f5" translate="yes" xml:space="preserve">
          <source>Qt supports a high DPI mode where the main coordinate system is virtualized and made independent from the display pixel density. Some operating systems, like macOS and iOS implement this mode. Additionally, if an operating system doesn't support this mode, Qt has an implementation to fallback on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4aa6b6be7010b1182fee6fe883ada6b7c644bf" translate="yes" xml:space="preserve">
          <source>Qt supports a high DPI mode where the main coordinate system is virtualized and made independent of the display pixel density. This mode is implemented by some operating systems (macOS, iOS). In addition, Qt contains an implementation which may be used where operating system support is missing.</source>
          <target state="translated">Qt支持高DPI模式,在这种模式下,主坐标系统是虚拟化的,与显示像素密度无关。一些操作系统(macOS、iOS)实现了这种模式。此外,Qt还包含了一个实现,它可以用于缺少操作系统支持的地方。</target>
        </trans-unit>
        <trans-unit id="d449be4e56685740a5447bc6de2dfcd5f06b2add" translate="yes" xml:space="preserve">
          <source>Qt supports both simple and extended radial gradients.</source>
          <target state="translated">Qt支持简单和扩展的径向梯度。</target>
        </trans-unit>
        <trans-unit id="8cfcba40928c0c41c8bc6e338a5c416c77e93ef4" translate="yes" xml:space="preserve">
          <source>Qt supports choosing and loading the OpenGL implementation at runtime. This mode is the default, and can be explicitly requested by passing &lt;code&gt;-opengl dynamic&lt;/code&gt; to the configure script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2059ea5bbb18f745b79872a22f7dd5a9c5d8438" translate="yes" xml:space="preserve">
          <source>Qt supports development and deployment of mobile applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d088d36194027e449a17755f70bf631223b9af" translate="yes" xml:space="preserve">
          <source>Qt supports most languages in use today, in particular:</source>
          <target state="translated">Qt支持目前使用的大多数语言,特别是。</target>
        </trans-unit>
        <trans-unit id="64fdcd7b767207e01067845ad3146d1019367518" translate="yes" xml:space="preserve">
          <source>Qt supports most of the more frequently used encodings natively. For a complete list of supported encodings see the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; documentation.</source>
          <target state="translated">Qt本机支持大多数更常用的编码。有关受支持的编码的完整列表，请参见&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="60739b6dcf22af03385aa4d997fe3aefeff36e6b" translate="yes" xml:space="preserve">
          <source>Qt supports rendering text in most languages written in the world. The detailed list of supported writing systems depends a bit on operating system support and font availability on the target system.</source>
          <target state="translated">Qt支持用世界上大多数语言编写的文本渲染。支持的书写系统的详细列表有点取决于操作系统的支持和目标系统的字体可用性。</target>
        </trans-unit>
        <trans-unit id="8a4192693596c77ed160fe8cd68868324e96e9fe" translate="yes" xml:space="preserve">
          <source>Qt supports the &lt;a href=&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static&quot;&gt;static features&lt;/a&gt; of &lt;a href=&quot;http://www.w3.org/TR/SVGMobile12&quot;&gt;SVG 1.2 Tiny&lt;/a&gt;. ECMA scripts and DOM manipulation are currently not supported.</source>
          <target state="translated">Qt支持的&lt;a href=&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static&quot;&gt;静态特征&lt;/a&gt;的&lt;a href=&quot;http://www.w3.org/TR/SVGMobile12&quot;&gt;SVG 1.2微小&lt;/a&gt;。目前不支持ECMA脚本和DOM操作。</target>
        </trans-unit>
        <trans-unit id="29cb16da3bb91a5d46913d7fe6bddb4b10c2b9df" translate="yes" xml:space="preserve">
          <source>Qt supports these signal-slot connection types:</source>
          <target state="translated">Qt支持这些信号槽连接类型。</target>
        </trans-unit>
        <trans-unit id="d3326e9daf4456edfb106023867028e554d2b361" translate="yes" xml:space="preserve">
          <source>Qt tries to make internationalization as painless as possible for developers. All input controls and text drawing methods in Qt offer built-in support for all supported languages. The built-in font engine is capable of correctly and attractively rendering text that contains characters from a variety of different writing systems at the same time.</source>
          <target state="translated">Qt 试图让开发人员尽可能地减少国际化的痛苦。Qt中的所有输入控件和文本绘制方法都对所有支持的语言提供内置支持。内建的字体引擎能够正确而吸引地同时渲染包含各种不同书写系统的字符的文本。</target>
        </trans-unit>
        <trans-unit id="8214ceaf5e24c79804af013cf25938bfa9a057c3" translate="yes" xml:space="preserve">
          <source>Qt tries to take care of all the special features listed above. You usually don't have to worry about these features so long as you use Qt's input controls (e.g. &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and derived classes or the Quick &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; item) and Qt's display controls (e.g. &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and Qt Quick's Text item).</source>
          <target state="translated">Qt尝试照顾上面列出的所有特殊功能。只要使用Qt的输入控件（例如&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;，&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;和派生类或Quick &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;项）和Qt的显示控件（例如&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;和Qt Quick的Text项），通常就不必担心这些功能。</target>
        </trans-unit>
        <trans-unit id="713d8283f6fbabc1e77a9a9a0e7a08062601486b" translate="yes" xml:space="preserve">
          <source>Qt type</source>
          <target state="translated">Qt型</target>
        </trans-unit>
        <trans-unit id="fb06adec99d1dcc4b5b845f7e86f105b0ab99ac5" translate="yes" xml:space="preserve">
          <source>Qt uses &quot;/&quot; as a universal directory separator in the same way that &quot;/&quot; is used as a path separator in URLs. If you always use &quot;/&quot; as a directory separator, Qt will translate your paths to conform to the underlying operating system.</source>
          <target state="translated">Qt使用&quot;/&quot;作为通用的目录分隔符,就像URL中使用&quot;/&quot;作为路径分隔符一样。如果你总是使用&quot;/&quot;作为目录分隔符,Qt将翻译你的路径以符合底层操作系统。</target>
        </trans-unit>
        <trans-unit id="cdd9bbaadc1973cb40e4ea49cdf7b9307de862b0" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; to provide type safety. For example, the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; type is simply a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt;&amp;gt;. &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;QLabel::setAlignment&lt;/a&gt;() takes a &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; parameter, which means that any combination of &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; values, or 0, is legal:</source>
          <target state="translated">Qt使用&lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;提供类型安全性。例如，&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;类型只是&lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; &amp;lt; &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: AlignmentFlag&lt;/a&gt; &amp;gt; 的typedef 。&lt;a href=&quot;qlabel#alignment-prop&quot;&gt;QLabel :: setAlignment&lt;/a&gt;（）带有&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;参数，这意味着&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: AlignmentFlag&lt;/a&gt;值的任何组合（或0）都是合法的：</target>
        </trans-unit>
        <trans-unit id="d9e404a81cc00854c393b79b4adc3478ffd56a6e" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to provide layout functionality in the &lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt;, but in the future its use may spread throughout Qt itself.</source>
          <target state="translated">Qt使用&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;在&lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework中&lt;/a&gt;提供布局功能，但是将来它的使用可能会遍及Qt本身。</target>
        </trans-unit>
        <trans-unit id="0673bc496c928ba0690c7a710bfcc033a15493e8" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; for reading and writing images through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;. You can also derive from this class to write your own image format handler using Qt's plugin mechanism.</source>
          <target state="translated">Qt使用&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt;通过&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;和&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;读写图像。您也可以从此类派生，以使用Qt的插件机制编写自己的图像格式处理程序。</target>
        </trans-unit>
        <trans-unit id="385707ff1df226f0827b7d4c53ce2c6d37e5529b" translate="yes" xml:space="preserve">
          <source>Qt uses QDoc to generate its documentation set into HTML and DITA XML formats. QDoc uses a set of configuration files to generate documentation from QDoc comments. The comments have types called &lt;a href=&quot;qdoc-guide-writing#writing-topic-commands&quot;&gt;topics&lt;/a&gt; that determine whether a comment is a class documentation or a property documentation. A comment may also have &lt;a href=&quot;qdoc-guide-writing#writing-markup&quot;&gt;mark up&lt;/a&gt; to enhance the layout and formatting of the final output.</source>
          <target state="translated">Qt使用QDoc将其文档集生成为HTML和DITA XML格式。QDoc使用一组配置文件从QDoc注释生成文档。注释具有称为&lt;a href=&quot;qdoc-guide-writing#writing-topic-commands&quot;&gt;主题的&lt;/a&gt;类型，用于确定注释是类文档还是属性文档。注释也可能带有&lt;a href=&quot;qdoc-guide-writing#writing-markup&quot;&gt;标记，&lt;/a&gt;以增强最终输出的布局和格式。</target>
        </trans-unit>
        <trans-unit id="8abe9e7f0bf42f528f651ea6fcd43a151e34acc8" translate="yes" xml:space="preserve">
          <source>Qt uses QFlags to provide type safety. For example, the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; type is simply a typedef for QFlags&amp;lt;&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt;&amp;gt;. &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;QLabel::setAlignment&lt;/a&gt;() takes a &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; parameter, which means that any combination of &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; values, or &lt;code&gt;{ }&lt;/code&gt;, is legal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b13efeba0968a7ab030862413ceadf9e53fa414" translate="yes" xml:space="preserve">
          <source>Qt uses QGraphicsLayoutItem to provide layout functionality in the &lt;a href=&quot;graphicsview&quot;&gt;Graphics View Framework&lt;/a&gt;, but in the future its use may spread throughout Qt itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27af6f1916a1dd1722910869a8a528b9bce16012" translate="yes" xml:space="preserve">
          <source>Qt uses QImageIOHandler for reading and writing images through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;. You can also derive from this class to write your own image format handler using Qt's plugin mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025a37fc936a66add1930b880872553cf8873164" translate="yes" xml:space="preserve">
          <source>Qt uses UTF-16 to store, draw and manipulate strings. In many situations you may wish to deal with data that uses a different encoding. Most text data transferred over files and network connections is encoded in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17455e07513963dcf36337558f342cd9a6f00ead" translate="yes" xml:space="preserve">
          <source>Qt uses Unicode to store, draw and manipulate strings. In many situations you may wish to deal with data that uses a different encoding. For example, most Japanese documents are still stored in Shift-JIS or ISO 2022-JP, while Russian users often have their documents in KOI8-R or Windows-1251.</source>
          <target state="translated">Qt 使用 Unicode 来存储、绘制和操作字符串。在许多情况下,你可能希望处理使用不同编码的数据。例如,大多数日本文档仍然以Shift-JIS或ISO 2022-JP存储,而俄罗斯用户的文档通常以KOI8-R或Windows-1251存储。</target>
        </trans-unit>
        <trans-unit id="95d84a766fbfafee8d3c00b237cd672614b21831" translate="yes" xml:space="preserve">
          <source>Qt uses a very similar mechanism in its &lt;a href=&quot;plugins-howto&quot;&gt;Plugin system&lt;/a&gt;: Base classes in C++ are associated with a unique identifier by way of the &lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro.</source>
          <target state="translated">Qt在其&lt;a href=&quot;plugins-howto&quot;&gt;插件系统中&lt;/a&gt;使用了非常类似的机制：C ++中的基类通过&lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;（）宏与唯一标识符关联。</target>
        </trans-unit>
        <trans-unit id="d1243962fe868edccbcfec4b476157054d565bc2" translate="yes" xml:space="preserve">
          <source>Qt uses a very similar mechanism in its &lt;a href=&quot;plugins-howto&quot;&gt;Plugin system&lt;/a&gt;: Base classes in C++ are associated with a unique identifier by way of the &lt;a href=&quot;qtplugin#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d182ec0775ec5f7b131929e82565781a6a85d9c" translate="yes" xml:space="preserve">
          <source>Qt uses a weighting scale from 0 to 99 similar to, but not the same as, the scales used in Windows or CSS. A weight of 0 will be thin, whilst 99 will be extremely black.</source>
          <target state="translated">Qt 使用了一个从 0 到 99 的权重刻度,类似于 Windows 或 CSS 中使用的刻度,但不一样。权重为0的地方会很薄,而权重为99的地方会非常黑。</target>
        </trans-unit>
        <trans-unit id="a9840362c02d1eaca146d21f1aee80b2f0601612" translate="yes" xml:space="preserve">
          <source>Qt uses a weighting scale from 1 to 1000 compatible with OpenType. A weight of 1 will be thin, whilst 1000 will be extremely black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22151cab96c6fb03668126e4dc2c009e1856c07" translate="yes" xml:space="preserve">
          <source>Qt uses normalized signatures to decide whether two given signals and slots are compatible. Normalization reduces whitespace to a minimum, moves 'const' to the front where appropriate, removes 'const' from value types and replaces const references with values.</source>
          <target state="translated">Qt 使用归一化签名来决定两个给定的信号和插槽是否兼容。归一化将空白空间减少到最小,在适当的地方将 &quot;const &quot;移到前面,从值类型中删除 &quot;const&quot;,并将const引用替换为值。</target>
        </trans-unit>
        <trans-unit id="dcf1f67e0413144a44d6bed3dcdd8706cfdd6728" translate="yes" xml:space="preserve">
          <source>Qt uses the &lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt; font engine to produce font output. The formats supported depends on the locally installed version of the &lt;a href=&quot;#freetype&quot;&gt;FreeType&lt;/a&gt; library. When using QBasicFontDatabase, Qt also supports the Qt Prerendered Font format (&lt;a href=&quot;#qpf2&quot;&gt;QPF2&lt;/a&gt;), a light-weight non-scalable font formats. QPF2 is the native format of Qt for Embedded Linux 4.x.</source>
          <target state="translated">Qt使用&lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt;字体引擎来生成字体输出。支持的格式取决于&lt;a href=&quot;#freetype&quot;&gt;FreeType&lt;/a&gt;库的本地安装版本。使用QBasicFontDatabase时，Qt还支持Qt &lt;a href=&quot;#qpf2&quot;&gt;Prerendered&lt;/a&gt;字体格式（QPF2），这是一种轻量级的不可缩放字体格式。QPF2是用于嵌入式Linux 4.x的Qt的本机格式。</target>
        </trans-unit>
        <trans-unit id="8895bba9cde08887a00240ee774a1ac86e66e47f" translate="yes" xml:space="preserve">
          <source>Qt uses the &lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt; font engine to produce font output. The formats supported depends on the locally installed version of the &lt;a href=&quot;qt-embedded-fonts#freetype&quot;&gt;FreeType&lt;/a&gt; library. When using QBasicFontDatabase, Qt also supports the Qt Prerendered Font format (&lt;a href=&quot;qt-embedded-fonts#qpf2&quot;&gt;QPF2&lt;/a&gt;), a light-weight non-scalable font formats. QPF2 is the native format of Qt for Embedded Linux 4.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b67b1607c17f682988ebdade1626e480e551049" translate="yes" xml:space="preserve">
          <source>Qt uses the default debug key to sign your application to enable running the application on a device. Same key cannot be used to sign the Application Package (APK) that is meant to be published on Google Play.</source>
          <target state="translated">Qt 使用默认的调试密钥来签署你的应用程序,以便在设备上运行该应用程序。同样的密钥不能用于签署要在Google Play上发布的应用程序包(APK)。</target>
        </trans-unit>
        <trans-unit id="8b9eec78abd8862875d2ed50d945976055a1fe54" translate="yes" xml:space="preserve">
          <source>Qt uses this search path to locate files with a known prefix. The search path entries are tested in order, starting with the first entry.</source>
          <target state="translated">Qt 使用这个搜索路径来定位具有已知前缀的文件。搜索路径条目按顺序测试,从第一个条目开始。</target>
        </trans-unit>
        <trans-unit id="205346a5ff72861212644e89e94d2307cd7f66b7" translate="yes" xml:space="preserve">
          <source>Qt uses this value internally, e.g. in &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">Qt在内部使用此值，例如在&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c044e8a3b388993e0d36e1972d29dd1eeea8b97d" translate="yes" xml:space="preserve">
          <source>Qt version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee65f024570e892a500bcb148a221449d63286" translate="yes" xml:space="preserve">
          <source>Qt vs. .NET</source>
          <target state="translated">Qt与.NET的比较</target>
        </trans-unit>
        <trans-unit id="61e31259f4a662d7a8ec782037b779096effb27f" translate="yes" xml:space="preserve">
          <source>Qt will detect OpenGL support as OpenGL ES. In reality the browser will be providing WebGL. WebGL is based on ES and is very similar, but there are some incompatibilities. See WebGL and OpenGL Differences.</source>
          <target state="translated">Qt会将OpenGL支持检测为OpenGL ES。实际上,浏览器将提供WebGL。WebGL是基于ES的,非常相似,但也有一些不兼容之处。参见WebGL和OpenGL的区别。</target>
        </trans-unit>
        <trans-unit id="6636633a649667981c00698a8b5b06a419c9543c" translate="yes" xml:space="preserve">
          <source>Qt will try to detect the class of a type using &lt;a href=&quot;https://en.cppreference.com/w/cpp/types/is_trivial&quot;&gt;std::is_trivial_v&amp;lt;T&amp;gt;&lt;/a&gt; to indentify primitive types and it will require both &lt;a href=&quot;https://en.cppreference.com/w/cpp/types/is_trivially_copyable&quot;&gt;std::is_trivially_copyable_v&amp;lt;T&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://en.cppreference.com/w/cpp/types/is_destructible&quot;&gt;std::is_trivially_destructible_v&amp;lt;T&amp;gt;&lt;/a&gt; to identify relocatable types. Use this macro to tune the behavior. For instance many types would be candidates for Q_RELOCATABLE_TYPE despite not being trivially-copyable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3995e0e173846b75e91a8872c01da00e3be0b278" translate="yes" xml:space="preserve">
          <source>Qt will try to detect the class of a type using std::is_trivial or std::is_trivially_copyable. Use this macro to tune the behavior. For instance many types would be candidates for Q_MOVABLE_TYPE despite not being trivially-copyable. For binary compatibility reasons, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; optimizations are only enabled if there is an explicit Q_DECLARE_TYPEINFO even for trivially-copyable types.</source>
          <target state="translated">Qt将尝试使用std :: is_trivial或std :: is_trivially_copyable检测类型的类。使用此宏可以调整行为。例如，许多类型将成为Q_MOVABLE_TYPE的候选者，尽管它们并非微不足道地可复制。出于二进制兼容性的原因，仅在存在显式Q_DECLARE_TYPEINFO的情况下才启用&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;优化，即使对于普通复制类型也是如此。</target>
        </trans-unit>
        <trans-unit id="7aa08a496a821b0d8d3ad367bb7aa6212f91f510" translate="yes" xml:space="preserve">
          <source>Qt!</source>
          <target state="translated">Qt!</target>
        </trans-unit>
        <trans-unit id="eaa9340bf303dcf8db3c2162f1e21e8d480d93d3" translate="yes" xml:space="preserve">
          <source>Qt's &lt;a href=&quot;eventsandfilters&quot;&gt;event system&lt;/a&gt; is very useful for inter-thread communication. Every thread may have its own event loop. To call a slot (or any &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;invokable&lt;/a&gt; method) in another thread, place that call in the target thread's event loop. This lets the target thread finish its current task before the slot starts running, while the original thread continues running in parallel.</source>
          <target state="translated">Qt的&lt;a href=&quot;eventsandfilters&quot;&gt;事件系统&lt;/a&gt;对于线程间通信非常有用。每个线程可能都有自己的事件循环。要在另一个线程中&lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;调用&lt;/a&gt;插槽（或任何可调用的方法），请将该调用置于目标线程的事件循环中。这样，目标线程可以在插槽开始运行之前完成其当前任务，而原始线程则可以继续并行运行。</target>
        </trans-unit>
        <trans-unit id="d6db67f9b053e72f04155113d6a7e388f2e0cb98" translate="yes" xml:space="preserve">
          <source>Qt's &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; for example has its accessibility support implemented in QAccessibleLineEdit.</source>
          <target state="translated">例如，Qt的&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;在QAccessibleLineEdit中实现了其可访问性支持。</target>
        </trans-unit>
        <trans-unit id="cb29b86de2cf66dc954e71cf9cce64208d7c634d" translate="yes" xml:space="preserve">
          <source>Qt's &lt;code&gt;moc&lt;/code&gt; (Meta Object Compiler) provides a clean way to go beyond the compiled language's facilities. It does so by generating additional C++ code which can be compiled by any standard C++ compiler. The &lt;code&gt;moc&lt;/code&gt; reads C++ source files. If it finds one or more class declarations that contain the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro, it produces another C++ source file which contains the meta object code for those classes. The C++ source file generated by the &lt;code&gt;moc&lt;/code&gt; must be compiled and linked with the implementation of the class (or it can be &lt;code&gt;#included&lt;/code&gt; into the class's source file). Typically &lt;code&gt;moc&lt;/code&gt; is not called manually, but automatically by the build system, so it requires no additional effort by the programmer.</source>
          <target state="translated">Qt的 &lt;code&gt;moc&lt;/code&gt; （元对象编译器）提供了一种超越编译语言功能的干净方法。它通过生成可以由任何标准C ++编译器编译的其他C ++代码来实现。的 &lt;code&gt;moc&lt;/code&gt; 读取C ++源文件。如果找到包含&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;宏的一个或多个类声明，它将生成另一个C ++源文件，其中包含这些类的元对象代码。必须编译由 &lt;code&gt;moc&lt;/code&gt; 生成的C ++源文件，并与该类的实现链接（或者可以 &lt;code&gt;#included&lt;/code&gt; 到该类的源文件中）。通常， &lt;code&gt;moc&lt;/code&gt; 不是手动调用的，而是由构建系统自动调用的，因此程序员不需要额外的努力。</target>
        </trans-unit>
        <trans-unit id="3d2da0ef5886eb9137f41cda66663641e7b71150" translate="yes" xml:space="preserve">
          <source>Qt's ActiveX and COM support allows Qt for Windows developers to:</source>
          <target state="translated">Qt的ActiveX和COM支持允许Qt for Windows的开发者。</target>
        </trans-unit>
        <trans-unit id="76e1344868dac3d009da6e86641e4fc8678d1ccb" translate="yes" xml:space="preserve">
          <source>Qt's Classes for Network Programming</source>
          <target state="translated">Qt的网络编程类</target>
        </trans-unit>
        <trans-unit id="ef72728f4f372a24da616b9840a92cc69d8ecd93" translate="yes" xml:space="preserve">
          <source>Qt's Classes for Working with Strings</source>
          <target state="translated">Qt的字符串处理类</target>
        </trans-unit>
        <trans-unit id="2f19f2184b31bd68954b02b559731228f2c150bd" translate="yes" xml:space="preserve">
          <source>Qt's Layout Classes</source>
          <target state="translated">Qt的布局类</target>
        </trans-unit>
        <trans-unit id="d70dc7198a10174bcf62b84cce23378b42f32f4d" translate="yes" xml:space="preserve">
          <source>Qt's Undo Framework is an implementation of the Command pattern, for implementing undo/redo functionality in applications.</source>
          <target state="translated">Qt的Undo框架是Command模式的实现,用于在应用程序中实现撤销/重做功能。</target>
        </trans-unit>
        <trans-unit id="d87d7664b24c34ff3d3779cd07c2593f1b647c90" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; in nine different styles.</source>
          <target state="translated">Qt的内置窗口小部件使用&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;来执行几乎所有的绘图，从而确保它们看起来完全等同于等效的本机窗口小部件。下图显示了九种不同样式的&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f51a680df87f694cd4a03f727bf3c4415134cf8" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use QStyle to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; in nine different styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1e08db4638b442ccc1713712db2c77a3b040f" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use QStyle to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a &lt;a href=&quot;widgets-changes-qt6#qcombobox&quot;&gt;QComboBox&lt;/a&gt; in nine different styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8595fd8d8b08c1830343a0bda53fc292f43841" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class to perform nearly all of their drawing. &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; is an abstract base class that encapsulates the look and feel of a GUI, and can be used to make the widgets look exactly like the equivalent native widgets or to give the widgets a custom look.</source>
          <target state="translated">Qt的内置小部件使用&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;类来执行几乎所有的绘制。&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;是一个抽象基类，它封装了GUI的外观，可用于使小部件看起来完全等效于等效的本机小部件，或为小部件提供自定义外观。</target>
        </trans-unit>
        <trans-unit id="2697b0d5b77491d7f322a4c27ce463c64e58471b" translate="yes" xml:space="preserve">
          <source>Qt's containers provide operator&amp;lt;&amp;lt;() and operator&amp;gt;&amp;gt;() so that they can easily be read and written using a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;. This means that the data types stored in the container must also support operator&amp;lt;&amp;lt;() and operator&amp;gt;&amp;gt;(). Providing such support is straightforward; here's how we could do it for the Movie struct above:</source>
          <target state="translated">Qt的容器提供operator &amp;lt;&amp;lt;（）和operator &amp;gt;&amp;gt;（），以便可以使用&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;轻松读取和写入它们。这意味着存储在容器中的数据类型还必须支持operator &amp;lt;&amp;lt;（）和operator &amp;gt;&amp;gt;（）。提供这种支持很简单；这是我们如何对上面的Movie结构执行此操作：</target>
        </trans-unit>
        <trans-unit id="0992b5e1ee592eba5e5c89084c8a1058587a2ea8" translate="yes" xml:space="preserve">
          <source>Qt's drag and drop and clipboard facilities use the MIME standard. On X11, this maps trivially to the Xdnd protocol. On Mac, although some applications use MIME to describe clipboard contents, it is more common to use Apple's UTI format.</source>
          <target state="translated">Qt 的拖放和剪贴板设施使用 MIME 标准。在 X11 上,它可以简单地映射到 Xdnd 协议。在 Mac 上,尽管一些应用程序使用 MIME 来描述剪贴板内容,但使用 Apple 的 UTI 格式更为常见。</target>
        </trans-unit>
        <trans-unit id="bc1c32330f709fde1008722ba874f868da072429" translate="yes" xml:space="preserve">
          <source>Qt's drag and drop infrastructure is fully supported by the model/view framework. Items in lists, tables, and trees can be dragged within the views, and data can be imported and exported as MIME-encoded data.</source>
          <target state="translated">模型/视图框架完全支持Qt的拖放基础设施。列表、表格和树中的项目可以在视图中拖动,数据可以作为MIME编码的数据导入和导出。</target>
        </trans-unit>
        <trans-unit id="d2356ba7af800ce59bbb9ba17630261bc88092a4" translate="yes" xml:space="preserve">
          <source>Qt's drag-and-drop and clipboard facilities use the MIME standard. On X11, this maps trivially to the Xdnd protocol, but on Windows although some applications use MIME types to describe clipboard formats, others use arbitrary non-standardized naming conventions, or unnamed built-in formats of Windows.</source>
          <target state="translated">Qt 的拖放和剪贴板设施使用 MIME 标准。在X11上,它可以简单地映射到Xdnd协议,但在Windows上,虽然一些应用程序使用MIME类型来描述剪贴板格式,但其他应用程序使用任意的非标准化命名惯例,或Windows的未命名内置格式。</target>
        </trans-unit>
        <trans-unit id="b120bf3c0b00da44fc929c91e68689e3679f5552" translate="yes" xml:space="preserve">
          <source>Qt's event dispatcher is more flexible than what Cocoa offers, and lets the user spin the event dispatcher (and running &lt;a href=&quot;qeventloop#exec&quot;&gt;QEventLoop::exec&lt;/a&gt;) without having to think about whether or not modal dialogs are showing on screen (which is a difference compared to Cocoa). Therefore, we need to do extra management in Qt to handle this correctly, which unfortunately makes mixing native panels hard. The best way at the moment to do this, is to follow the pattern below, where we post the call to the function with native code rather than calling it directly. Then we know that Qt has cleanly updated any pending event loop recursions before the native panel is shown:</source>
          <target state="translated">Qt的事件分派器比Cocoa提供的灵活，并且让用户旋转事件分派器（并运行&lt;a href=&quot;qeventloop#exec&quot;&gt;QEventLoop :: exec&lt;/a&gt;）而无需考虑屏幕上是否显示模式对话框（与Cocoa相比有所不同） 。因此，我们需要在Qt中进行额外的管理才能正确处理此问题，不幸的是这使得混合本机面板变得困难。目前执行此操作的最佳方法是遵循以下模式，在该模式中，我们使用本地代码而不是直接调用将调用发布到函数中。然后我们知道Qt在显示本机面板之前已经干净地更新了所有未决的事件循环递归：</target>
        </trans-unit>
        <trans-unit id="ca695df1c7cdc08e1bb2c334168a437f43e78f00" translate="yes" xml:space="preserve">
          <source>Qt's foreach Keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e194f8f280103eec952327444862c7223d5c75d4" translate="yes" xml:space="preserve">
          <source>Qt's iOS port allows you to run Qt applications on iOS devices, such as iPhones, iPads, and iPod Touches.</source>
          <target state="translated">Qt的iOS端口允许你在iOS设备上运行Qt应用程序,如iPhone、iPad和iPod Touches。</target>
        </trans-unit>
        <trans-unit id="793b80120e8a576b5408b6900f55af73ad70f543" translate="yes" xml:space="preserve">
          <source>Qt's layout classes were designed for hand-written C++ code, allowing measurements to be specified in pixels for simplicity, so they are easy to understand and use. The code generated for forms created using Qt Designer also uses the layout classes. Qt Designer is useful to use when experimenting with the design of a form since it avoids the compile, link and run cycle usually involved in user interface development.</source>
          <target state="translated">Qt的布局类是为手写C++代码而设计的,为了简单起见,允许以像素为单位指定测量值,所以它们很容易理解和使用。使用Qt Designer创建的窗体生成的代码也使用了布局类。Qt Designer在实验设计窗体时非常有用,因为它避免了用户界面开发中通常涉及的编译、链接和运行周期。</target>
        </trans-unit>
        <trans-unit id="961a51a26760dd1c56da4d73881ccaab7b38447b" translate="yes" xml:space="preserve">
          <source>Qt's layouts help when you:</source>
          <target state="translated">Qt的布局有助于当你。</target>
        </trans-unit>
        <trans-unit id="ef8f4cbf718cbd68d6bb54213fa9367ee458a603" translate="yes" xml:space="preserve">
          <source>Qt's main event loop (&lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;()) fetches native window system events from the event queue, translates them into QEvents, and sends the translated events to &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s.</source>
          <target state="translated">Qt的主事件循环（&lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication :: exec&lt;/a&gt;（））从事件队列中获取本机窗口系统事件，将其转换为QEvents，并将转换后的事件发送给&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11bcb366c32e78ff085a1c3f9892b158b51cb724" translate="yes" xml:space="preserve">
          <source>Qt's main strength as a cross-platform toolkit for application development is removing the need for duplicating the application code for each target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed55ff21e1c72a49b31271ceec357514c193ccb" translate="yes" xml:space="preserve">
          <source>Qt's meta-object system provides a mechanism to automatically connect signals and slots between &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses and their children. As long as objects are defined with suitable object names, and slots follow a simple naming convention, this connection can be performed at run-time by the &lt;a href=&quot;qmetaobject#connectSlotsByName&quot;&gt;QMetaObject::connectSlotsByName&lt;/a&gt;() function.</source>
          <target state="translated">Qt的元对象系统提供了一种在&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类及其子类之间自动连接信号和插槽的机制。只要使用合适的对象名称定义对象，并且插槽遵循简单的命名约定，就可以在运行时通过&lt;a href=&quot;qmetaobject#connectSlotsByName&quot;&gt;QMetaObject :: connectSlotsByName&lt;/a&gt;（）函数执行此连接。</target>
        </trans-unit>
        <trans-unit id="06f59fc4467be480bacea58c05d71578405fe26c" translate="yes" xml:space="preserve">
          <source>Qt's meta-object system provides a mechanism to automatically connect signals and slots between QObject subclasses and their children. As long as objects are defined with suitable object names, and slots follow a simple naming convention, this connection can be performed at run-time by the &lt;a href=&quot;qmetaobject#connectSlotsByName&quot;&gt;QMetaObject::connectSlotsByName&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33ed7fba9835cd7763f45a5df63d59398f39a4a" translate="yes" xml:space="preserve">
          <source>Qt's meta-object system provides the signals and slots mechanism for inter-object communication, run-time type information, and the dynamic property system.</source>
          <target state="translated">Qt的元对象系统提供了对象间通信的信号和插槽机制、运行时类型信息和动态属性系统。</target>
        </trans-unit>
        <trans-unit id="066f5762433c2ce151d99a962d4a54ca9f2792d1" translate="yes" xml:space="preserve">
          <source>Qt's paint system enables painting on screen and print devices using the same API, and is primarily based on the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; classes.</source>
          <target state="translated">Qt的绘画系统可以使用相同的API在屏幕和打印设备上绘画，并且主要基于&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;，&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;和&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="0af9320a44a727b062cd04a0138ef4e0ace06e61" translate="yes" xml:space="preserve">
          <source>Qt's plugin mechanism can also be used to write a custom image format handler. This is done by deriving from the &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; class, and creating a &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; object which is a factory for creating &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; objects. When the plugin is installed, &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; will automatically load the plugin and start using it.</source>
          <target state="translated">Qt的插件机制还可用于编写自定义图像格式处理程序。这是通过派生&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt;类并创建一个&lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;对象来完成的，该对象是用于创建&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt;对象的工厂。安装插件后，&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;和&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;将自动加载插件并开始使用。</target>
        </trans-unit>
        <trans-unit id="b6c9ad079a49ccc55a3c403610548da23c6fe3dc" translate="yes" xml:space="preserve">
          <source>Qt's predefined &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects:</source>
          <target state="translated">Qt的预定义&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="7002687ba82463a9c07a7d2e5ce763ea658a9d39" translate="yes" xml:space="preserve">
          <source>Qt's resources support the concept of a search path list. If you then refer to a resource with &lt;code&gt;:&lt;/code&gt; instead of &lt;code&gt;:/&lt;/code&gt; as the prefix, the resource will be looked up using the search path list. The search path list is empty at startup; call &lt;a href=&quot;qdir#addSearchPath&quot;&gt;QDir::addSearchPath&lt;/a&gt;() to add paths to it.</source>
          <target state="translated">Qt的资源支持搜索路径列表的概念。如果您随后使用 &lt;code&gt;:&lt;/code&gt; 而不是 &lt;code&gt;:/&lt;/code&gt; 作为前缀引用资源，则将使用搜索路径列表查找该资源。启动时搜索路径列表为空；调用&lt;a href=&quot;qdir#addSearchPath&quot;&gt;QDir :: addSearchPath&lt;/a&gt;（）向其添加路径。</target>
        </trans-unit>
        <trans-unit id="7b40b428c6ab76a6fa4418d94293c6e96b0583e0" translate="yes" xml:space="preserve">
          <source>Qt's signals and slots implementation is not as fast as a template-based solution. While emitting a signal is approximately the cost of four ordinary function calls with common template implementations, Qt requires effort comparable to about ten function calls. This is not surprising since the Qt mechanism includes a generic marshaller, introspection, queued calls between different threads, and ultimately scriptability. It does not rely on excessive inlining and code expansion and it provides unmatched runtime safety. Qt's iterators are safe while those of faster template-based systems are not. Even during the process of emitting a signal to several receivers, those receivers can be deleted safely without your program crashing. Without this safety, your application would eventually crash with a difficult to debug free'd memory read or write error.</source>
          <target state="translated">Qt的信号和插槽实现的速度不如基于模板的解决方案。虽然发射一个信号大约是普通模板实现的四个普通函数调用的成本,但Qt需要的努力相当于大约十个函数调用。这并不奇怪,因为Qt机制包括一个通用的marshaller,自省,不同线程之间的队列调用,以及最终的脚本性。它不依赖于过多的内联和代码扩展,而且它提供了无与伦比的运行时安全性。Qt的迭代器是安全的,而那些更快的基于模板的系统的迭代器则不安全。即使在向多个接收机发出信号的过程中,也可以安全地删除这些接收机,而不会使你的程序崩溃。如果没有这种安全性,你的程序最终会因为难以调试的free'd内存读写错误而崩溃。</target>
        </trans-unit>
        <trans-unit id="09b7da54c67758cc2c3ed450d617add1ecff54ce" translate="yes" xml:space="preserve">
          <source>Qt's support</source>
          <target state="translated">Qt的支持</target>
        </trans-unit>
        <trans-unit id="1d642fc0e51e3a0e4a099aa095679c2fa9e96574" translate="yes" xml:space="preserve">
          <source>Qt's support for different Linux platforms is extensive and mature.</source>
          <target state="translated">Qt对不同Linux平台的支持是广泛而成熟的。</target>
        </trans-unit>
        <trans-unit id="a1d559e77ff38895dbf21ce810e9bd109786b207" translate="yes" xml:space="preserve">
          <source>Qt's support for different Windows platforms is extensive and mature.</source>
          <target state="translated">Qt对不同Windows平台的支持非常广泛和成熟。</target>
        </trans-unit>
        <trans-unit id="85929a5b14edcaa43d9dced0b75780e0acccfe55" translate="yes" xml:space="preserve">
          <source>Qt's support for widget styles and themes enables your application to fit in with the native desktop environment.</source>
          <target state="translated">Qt对widget样式和主题的支持使您的应用程序能够适应本地桌面环境。</target>
        </trans-unit>
        <trans-unit id="79c6a6dfc9fd57126e6a8e26b182bad3e51288cb" translate="yes" xml:space="preserve">
          <source>Qt's text widgets are able to display rich text, specified using a subset of &lt;a href=&quot;http://www.w3.org/TR/html401/&quot;&gt;HTML 4&lt;/a&gt; markup. Widgets that use &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, such as &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, are able to display rich text specified in this way.</source>
          <target state="translated">Qt的文本小部件能够显示使用&lt;a href=&quot;http://www.w3.org/TR/html401/&quot;&gt;HTML 4&lt;/a&gt;标记子集指定的富文本。使用&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument的&lt;/a&gt;小部件（例如&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;和&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;）能够显示以这种方式指定的富文本。</target>
        </trans-unit>
        <trans-unit id="4b3e9b667c11962b42975371217b82f5ddc80e73" translate="yes" xml:space="preserve">
          <source>Qt's understanding of file permissions is limited, which affects especially the &lt;a href=&quot;qfile#setPermissions&quot;&gt;QFile::setPermissions&lt;/a&gt;() function. On Windows, Qt will set only the legacy read-only flag, and that only when none of the Write* flags are passed. Qt does not manipulate access control lists (ACLs), which makes this function mostly useless for NTFS volumes. It may still be of use for USB sticks that use VFAT file systems. POSIX ACLs are not manipulated, either.</source>
          <target state="translated">Qt对文件权限的理解是有限的，这尤其会影响&lt;a href=&quot;qfile#setPermissions&quot;&gt;QFile :: setPermissions&lt;/a&gt;（）函数。在Windows上，Qt将仅设置旧版只读标志，并且仅在未传递Write *标志时设置该标志。Qt不会操纵访问控制列表（ACL），这使得该功能对NTFS卷几乎没有用。对于使用VFAT文件系统的USB记忆棒，它可能仍然有用。POSIX ACL也不被操纵。</target>
        </trans-unit>
        <trans-unit id="788654f10f19a34fb2c32185f3a0b71523e78965" translate="yes" xml:space="preserve">
          <source>Qt's vibrant and active community site &lt;a href=&quot;http://qt.io&quot;&gt;http://qt.io&lt;/a&gt;, houses a wiki, a forum, and additional learning guides and presentations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce490f6ffa683b36252e24dea0c004b3716a63f" translate="yes" xml:space="preserve">
          <source>Qt's vibrant and active community site, &lt;a href=&quot;http://qt.io&quot;&gt;http://qt.io&lt;/a&gt; houses a wiki, a forum, and additional learning guides and presentations.</source>
          <target state="translated">Qt充满活力且活跃的社区站点&lt;a href=&quot;http://qt.io&quot;&gt;http://qt.io&lt;/a&gt;包含一个Wiki，一个论坛以及其他学习指南和演示文稿。</target>
        </trans-unit>
        <trans-unit id="cd5fcdd5e9009d43ae75d4a21e32aeeedf35d4a2" translate="yes" xml:space="preserve">
          <source>Qt's widgets handle keyboard focus in the ways that have become customary in GUIs.</source>
          <target state="translated">Qt的widget以GUI中惯用的方式处理键盘焦点。</target>
        </trans-unit>
        <trans-unit id="4d8ee83f10bd157f0fe595c4452cdc379f762694" translate="yes" xml:space="preserve">
          <source>Qt-specific CSS properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f578462d5b0b0e1b78acdbffa263190fd070b5d8" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="62d77892bc9e443a9e7e7bfb1161686ba0665b5c" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="a474b2f59528bdca26b81cd5b69bec97f82be92a" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="57fdbac6ef567fcac81b342afd0e3f1c19893899" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonarray-const-iterator&quot;&gt;QJsonArray::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonarray-const-iterator&quot;&gt;QJsonArray :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="0adfe4adc17bc28fc5e886f670872de12ceb544f" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonarray-iterator&quot;&gt;QJsonArray::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonarray-iterator&quot;&gt;QJsonArray :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="52df88396cc751ec36bda445c2a9aff5e63fd400" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonobject-const-iterator&quot;&gt;QJsonObject::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonobject-const-iterator&quot;&gt;QJsonObject :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="14fb88b937d7d211a16a8ab87df06ebdf1d3e018" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonobject-iterator&quot;&gt;QJsonObject::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonobject-iterator&quot;&gt;QJsonObject :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="75f3f2d390f26f2ee29329dffd1481155a596fc3" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="c35e9f98ad6a1dc22a5087472bb63fb77c7643a9" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="dc4b3bf4556955c29ed70e7e8772a847d43dcc14" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlist-const-iterator&quot;&gt;QList::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlist-const-iterator&quot;&gt;QList :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="d4b49cd3cf1bd017f4ee5c86c32af563685516ba" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlist-iterator&quot;&gt;QList :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="74321b631245b03aa186df888e5f92d67d049ac0" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator.</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: const_iterator的Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="8c05d65894550fe9c890a2fcda6c805b8647776a" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::iterator.</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: iterator的Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="a4236c286033d91586b37c7c8fd569c80a3b6a77" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e86e5c74936c058c0c731bcfe44d333b9afe765" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbe512233366d59259eda61d23866d23bd0fe57" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="21e38f6c47b3173069b4e2dbcd758b1a961093b5" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="ceb3feb95893ac66f4aab0f8983a7efe6b8a9b96" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qstring#const_iterator-typedef&quot;&gt;QString::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstring#const_iterator-typedef&quot;&gt;QString :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="075fc4537baafb85e12e3615f549424c75f89be2" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qstring#iterator-typedefx&quot;&gt;QString::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstring#iterator-typedefx&quot;&gt;QString :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="5265152dd96e92044df1e323546d1e950535f6be" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qtextblock-iterator&quot;&gt;QTextBlock::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtextblock-iterator&quot;&gt;QTextBlock :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="d5b45da472c5d1b28259923c556e5966bb09f199" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="3eff8f28556a7cc6cb35ec08ee7c121f3b728b5b" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector :: const_iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="2c4142c7ea2b75d98f955a6591bc2afaf4c2daa8" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector :: iterator的&lt;/a&gt; Qt样式同义词。</target>
        </trans-unit>
        <trans-unit id="6ae41315166215e6123219cd8f16540020f5f8a1" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for QLinkedList::const_iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2694eafba9503960c3d5d0ad20adf5829f827af7" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for QLinkedList::iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786fd13d324010919a060774039b531bfd398bb0" translate="yes" xml:space="preserve">
          <source>Qt.AlignBottom</source>
          <target state="translated">Qt.AlignBottom</target>
        </trans-unit>
        <trans-unit id="b8d046ed9166da45dc6a5593c3b302882706701c" translate="yes" xml:space="preserve">
          <source>Qt.AlignHCenter</source>
          <target state="translated">Qt.AlignHCenter</target>
        </trans-unit>
        <trans-unit id="29d22ad2c6d7b03945140ca10335bad4e6e5b249" translate="yes" xml:space="preserve">
          <source>Qt.AlignLeft</source>
          <target state="translated">Qt.AlignLeft</target>
        </trans-unit>
        <trans-unit id="8a27f34529dcbe356433976bae896e3e8e028abe" translate="yes" xml:space="preserve">
          <source>Qt.AlignLeft (default)</source>
          <target state="translated">Qt.AlignLeft (默认)</target>
        </trans-unit>
        <trans-unit id="5490410eb737909d3ad169f789573bea9fdb0e61" translate="yes" xml:space="preserve">
          <source>Qt.AlignRight</source>
          <target state="translated">Qt.AlignRight</target>
        </trans-unit>
        <trans-unit id="1a27c322da6f83d042a5863bd18e8a1d4f54c214" translate="yes" xml:space="preserve">
          <source>Qt.AlignTop</source>
          <target state="translated">Qt.AlignTop</target>
        </trans-unit>
        <trans-unit id="38acf9fcccc2e21653cfa8833279e28900a6beb7" translate="yes" xml:space="preserve">
          <source>Qt.ApplicationActive - The application is the top-most and focused application, and the user is able to interact with the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e44f661528521bbc9142badc276877f95cc1909" translate="yes" xml:space="preserve">
          <source>Qt.ApplicationHidden - The application is hidden and runs in the background. This is the normal state for applications that need to do background processing, like playing music, while the user interacts with other applications. The application should free up all graphical resources when entering this state. A Qt Quick application should not usually handle this state at the QML level. Instead, you should unload the entire UI and reload the QML files whenever the application becomes active again.</source>
          <target state="translated">Qt.ApplicationHidden-应用程序被隐藏并在后台运行。对于需要进行后台处理的应用程序来说,这是正常的状态,比如播放音乐,而用户与其他应用程序进行交互。应用程序进入这种状态时应该释放所有的图形资源。一个Qt Quick应用程序通常不应该在QML级别处理这种状态。相反,你应该卸载整个UI,并在应用程序再次活跃时重新加载QML文件。</target>
        </trans-unit>
        <trans-unit id="5003480a424f041b29bda1873836ad7e8841b366" translate="yes" xml:space="preserve">
          <source>Qt.ApplicationInactive - The application is visible or partially visible, but not selected to be in front, the user cannot interact with the application. On desktop platforms, this typically means that the user activated another application. On mobile platforms, it is more common to enter this state when the OS is interrupting the user with for example incoming calls, SMS-messages or dialogs. This is usually a transient state during which the application is paused. The user may return focus to your application, but most of the time it will be the first indication that the application is going to be suspended. While in this state, consider pausing or stopping any activity that should not continue when the user cannot interact with your application, such as a video, a game, animations, or sensors. You should also avoid performing CPU-intensive tasks which might slow down the application in front.</source>
          <target state="translated">Qt.ApplicationInactive-应用程序可见或部分可见,但没有选择在前面,用户不能与应用程序交互。在桌面平台上,这通常意味着用户激活了另一个应用程序。在移动平台上,更常见的是当操作系统用例如来电、短信-消息或对话框来打断用户时进入这种状态。这通常是一个短暂的状态,在此期间,应用程序被暂停。用户可能会将注意力转移到你的应用程序上,但大多数情况下,这将是应用程序将被暂停的第一个迹象。在这种状态下,考虑暂停或停止任何不应该在用户无法与你的应用程序交互时继续进行的活动,例如视频、游戏、动画或传感器。你还应该避免执行CPU密集型任务,因为这些任务可能会拖慢前面的应用程序。</target>
        </trans-unit>
        <trans-unit id="cbc1b1c1859371adce7ff06a7cad1d85418721c6" translate="yes" xml:space="preserve">
          <source>Qt.ApplicationSuspended - The application is suspended and not visible to the user. On mobile platforms, the application typically enters this state when the user returns to the home screen or switches to another application. While in this state, the application should ensure that the user perceives it as always alive and does not lose his progress, saving any persistent data. The application should cease all activities and be prepared for code execution to stop. While suspended, the application can be killed at any time without further warnings (for example when low memory forces the OS to purge suspended applications).</source>
          <target state="translated">Qt.ApplicationSuspended-应用程序被暂停,用户无法看到。在移动平台上,当用户返回主屏幕或切换到其他应用程序时,应用程序通常会进入这种状态。在这种状态下,应用程序应该确保用户认为它始终活着,不会失去他的进度,保存任何持久的数据。应用程序应停止所有活动,并准备好代码执行停止。在暂停状态下,应用程序可以在任何时候被杀死,而不需要进一步的警告(例如,当低内存迫使操作系统清理暂停的应用程序时)。</target>
        </trans-unit>
        <trans-unit id="7352c7fc3bbbc3f9332767f8cd434a1b30e5a470" translate="yes" xml:space="preserve">
          <source>Qt.ArrowCursor</source>
          <target state="translated">Qt.ArrowCursor</target>
        </trans-unit>
        <trans-unit id="7c32f5758b2d76d0a6b2dcd8f29f477d6785d951" translate="yes" xml:space="preserve">
          <source>Qt.AscendingOrder - the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e8ab9548df58c04366d56c77f07d95352982f7" translate="yes" xml:space="preserve">
          <source>Qt.BDiagPattern</source>
          <target state="translated">Qt.BDiagPattern</target>
        </trans-unit>
        <trans-unit id="2a13ce14258d55451fc6e3347ac7394e4e2966fa" translate="yes" xml:space="preserve">
          <source>Qt.BlankCursor</source>
          <target state="translated">Qt.BlankCursor</target>
        </trans-unit>
        <trans-unit id="4dad0dc7e6dff8e753b9b5e52fb1f72f50e98be4" translate="yes" xml:space="preserve">
          <source>Qt.BottomEdge</source>
          <target state="translated">Qt.BottomEdge</target>
        </trans-unit>
        <trans-unit id="ee1cd419111e6df7d10a2d6d807aef3cfa3f864c" translate="yes" xml:space="preserve">
          <source>Qt.BusyCursor</source>
          <target state="translated">Qt.BusyCursor</target>
        </trans-unit>
        <trans-unit id="d259aa7bb0bfc893a0cdede253158f93eb91e6f8" translate="yes" xml:space="preserve">
          <source>Qt.ClosedHandCursor</source>
          <target state="translated">Qt.ClosedHandCursor</target>
        </trans-unit>
        <trans-unit id="8db330d3ce9b9365076708891ced6d3e5ee7ef0e" translate="yes" xml:space="preserve">
          <source>Qt.CopyAction Copy the data to the target</source>
          <target state="translated">Qt.CopyAction 将数据复制到目标位置。</target>
        </trans-unit>
        <trans-unit id="f32cca16050e0cf952e841d5971a4cd691c469bc" translate="yes" xml:space="preserve">
          <source>Qt.CopyAction Copy the data to the target.</source>
          <target state="translated">Qt.CopyAction 复制数据到目标。</target>
        </trans-unit>
        <trans-unit id="7cddcddc019a97d8de418f5849959f5452eba1d1" translate="yes" xml:space="preserve">
          <source>Qt.CrossCursor</source>
          <target state="translated">Qt.CrossCursor</target>
        </trans-unit>
        <trans-unit id="391007e7e1106a2f16d58c0f4f1926316e55dd57" translate="yes" xml:space="preserve">
          <source>Qt.CrossPattern</source>
          <target state="translated">Qt.CrossPattern</target>
        </trans-unit>
        <trans-unit id="6965099e375a0bbb249ff765e0651c2efcc5c4d5" translate="yes" xml:space="preserve">
          <source>Qt.Dense1Pattern</source>
          <target state="translated">Qt.Dense1Pattern</target>
        </trans-unit>
        <trans-unit id="74d533d9687b912d06aa68efe2b2b95216389ead" translate="yes" xml:space="preserve">
          <source>Qt.Dense2Pattern</source>
          <target state="translated">Qt.Dense2Pattern</target>
        </trans-unit>
        <trans-unit id="b94fc31ae454b9483f5617d1d061624a778f22bc" translate="yes" xml:space="preserve">
          <source>Qt.Dense3Pattern</source>
          <target state="translated">Qt.Dense3Pattern</target>
        </trans-unit>
        <trans-unit id="ac9232b34063b6f916656741ce64ae598c86368a" translate="yes" xml:space="preserve">
          <source>Qt.Dense4Pattern</source>
          <target state="translated">Qt.Dense4Pattern</target>
        </trans-unit>
        <trans-unit id="b279aa5271fcbe85f7f772e41748d3306a856875" translate="yes" xml:space="preserve">
          <source>Qt.Dense5Pattern</source>
          <target state="translated">Qt.Dense5Pattern</target>
        </trans-unit>
        <trans-unit id="e33645c78d52242c4f1df315322e77318009f779" translate="yes" xml:space="preserve">
          <source>Qt.Dense6Pattern</source>
          <target state="translated">Qt.Dense6Pattern</target>
        </trans-unit>
        <trans-unit id="da7f8c6c1c4fb1f66d1474b5de575aa01d498298" translate="yes" xml:space="preserve">
          <source>Qt.Dense7Pattern</source>
          <target state="translated">Qt.Dense7Pattern</target>
        </trans-unit>
        <trans-unit id="9736af5564585509589dd997a90d20bbac2da0ad" translate="yes" xml:space="preserve">
          <source>Qt.DescendingOrder</source>
          <target state="translated">Qt.DescendingOrder</target>
        </trans-unit>
        <trans-unit id="f224e68e783fcf49f67e83407ff4177a8429d725" translate="yes" xml:space="preserve">
          <source>Qt.DiagCrossPattern</source>
          <target state="translated">Qt.DiagCrossPattern</target>
        </trans-unit>
        <trans-unit id="ab83f70ea4a6dbaf7c48d2deef01acd185217047" translate="yes" xml:space="preserve">
          <source>Qt.DragCopyCursor</source>
          <target state="translated">Qt.DragCopyCursor</target>
        </trans-unit>
        <trans-unit id="53ffcd498f285160c430a208b7533909a9163cbf" translate="yes" xml:space="preserve">
          <source>Qt.DragLinkCursor</source>
          <target state="translated">Qt.DragLinkCursor</target>
        </trans-unit>
        <trans-unit id="789d1352dac1f8f4cf33184fe1bde34d92bb2760" translate="yes" xml:space="preserve">
          <source>Qt.DragMoveCursor</source>
          <target state="translated">Qt.DragMoveCursor</target>
        </trans-unit>
        <trans-unit id="8ca86ba31d2d0dced0e9ae10ea991e6b71a8a592" translate="yes" xml:space="preserve">
          <source>Qt.FDiagPattern</source>
          <target state="translated">Qt.FDiagPattern</target>
        </trans-unit>
        <trans-unit id="1f93defad9fe48ffd139cc3f663ea56765f48ee0" translate="yes" xml:space="preserve">
          <source>Qt.ForbiddenCursor</source>
          <target state="translated">Qt.ForbiddenCursor</target>
        </trans-unit>
        <trans-unit id="848370297dcab1fd6af7b751f90ec0f94794f1fd" translate="yes" xml:space="preserve">
          <source>Qt.HorPattern</source>
          <target state="translated">Qt.HorPattern</target>
        </trans-unit>
        <trans-unit id="42988ac7bca48c9652cd2bc1e35238866b0f8b90" translate="yes" xml:space="preserve">
          <source>Qt.Horizontal - Horizontal orientation. (Default)</source>
          <target state="translated">Qt.Horizontal-水平方向。(默认)</target>
        </trans-unit>
        <trans-unit id="340b18eb36e32645658916c7ca4ff44552f97e2b" translate="yes" xml:space="preserve">
          <source>Qt.IBeamCursor</source>
          <target state="translated">Qt.IBeamCursor</target>
        </trans-unit>
        <trans-unit id="9ad9c7a4499e2f000b7897796d21aeb691a32343" translate="yes" xml:space="preserve">
          <source>Qt.IgnoreAction Ignore the action (do nothing with the data).</source>
          <target state="translated">Qt.IgnoreAction 忽略动作(不对数据做任何处理)。</target>
        </trans-unit>
        <trans-unit id="37323b4c61b8b7513ebe1deccc4bdbe1b182f0d7" translate="yes" xml:space="preserve">
          <source>Qt.ImhDate - The text editor functions as a date field.</source>
          <target state="translated">Qt.ImhDate-文本编辑器的功能是一个日期字段。</target>
        </trans-unit>
        <trans-unit id="f89b2af6c7ba31c168f23c79f34d09a8d06e0782" translate="yes" xml:space="preserve">
          <source>Qt.ImhDialableCharactersOnly - Only characters suitable for phone dialing are allowed.</source>
          <target state="translated">Qt.ImhDialableCharactersOnly-只允许使用适合电话拨号的字符。</target>
        </trans-unit>
        <trans-unit id="7df24ba859ce4d2577f62e50e23754f3d102a65b" translate="yes" xml:space="preserve">
          <source>Qt.ImhDigitsOnly - Only digits are allowed.</source>
          <target state="translated">Qt.ImhDigitsOnly-只允许使用数字。</target>
        </trans-unit>
        <trans-unit id="ff02eb564acd52769d667832f80bd1f23ae5d490" translate="yes" xml:space="preserve">
          <source>Qt.ImhEmailCharactersOnly - Only characters suitable for email addresses are allowed.</source>
          <target state="translated">Qt.ImhEmailCharactersOnly-只允许使用适合电子邮件地址的字符。</target>
        </trans-unit>
        <trans-unit id="12957e86eaf957f81dfb2ad500aebdc7d9f8c72d" translate="yes" xml:space="preserve">
          <source>Qt.ImhExclusiveInputMask - This mask yields nonzero if any of the exclusive flags are used.</source>
          <target state="translated">Qt.ImhExclusiveInputMask-如果使用了任何独占标志,该掩码将产生非零。</target>
        </trans-unit>
        <trans-unit id="ae0f35410a9495c1a5f01f6cfde8eb1fcad04fff" translate="yes" xml:space="preserve">
          <source>Qt.ImhFormattedNumbersOnly - Only number input is allowed. This includes decimal point and minus sign.</source>
          <target state="translated">Qt.ImhFormattedNumbersOnly-只允许输入数字。这包括小数点和减号。</target>
        </trans-unit>
        <trans-unit id="7bba4eef59fc673257b5bfe19f200ff828f05134" translate="yes" xml:space="preserve">
          <source>Qt.ImhHiddenText - Characters should be hidden, as is typically used when entering passwords.</source>
          <target state="translated">Qt.ImhHiddenText-字符应该被隐藏,正如输入密码时通常使用的那样。</target>
        </trans-unit>
        <trans-unit id="d227d6d3e97b55e8184ee9a9f399e201e5512e4e" translate="yes" xml:space="preserve">
          <source>Qt.ImhHiddenText - Characters should be hidden, as is typically used when entering passwords. This is automatically set when setting &lt;a href=&quot;qml-qtquick-controls-textfield#echoMode-prop&quot;&gt;echoMode&lt;/a&gt; to &lt;code&gt;TextInput.Password&lt;/code&gt;.</source>
          <target state="translated">Qt.ImhHiddenText-字符应该被隐藏，如输入密码时通常使用的那样。将&lt;a href=&quot;qml-qtquick-controls-textfield#echoMode-prop&quot;&gt;echoMode&lt;/a&gt;设置为 &lt;code&gt;TextInput.Password&lt;/code&gt; 时会自动设置。</target>
        </trans-unit>
        <trans-unit id="1b0cb5dcffa8d88190eabeb31259abf3e1d5b756" translate="yes" xml:space="preserve">
          <source>Qt.ImhHiddenText - Characters should be hidden, as is typically used when entering passwords. This is automatically set when setting &lt;a href=&quot;qml-qtquick-textinput#echoMode-prop&quot;&gt;echoMode&lt;/a&gt; to &lt;code&gt;TextInput.Password&lt;/code&gt;.</source>
          <target state="translated">Qt.ImhHiddenText-字符应该被隐藏，如输入密码时通常使用的那样。将&lt;a href=&quot;qml-qtquick-textinput#echoMode-prop&quot;&gt;echoMode&lt;/a&gt;设置为 &lt;code&gt;TextInput.Password&lt;/code&gt; 时会自动设置。</target>
        </trans-unit>
        <trans-unit id="9b7fe0986ef8f93d2eb21fde82a7b62679a0fdf6" translate="yes" xml:space="preserve">
          <source>Qt.ImhLowercaseOnly - Only lower case letter input is allowed.</source>
          <target state="translated">Qt.ImhLowercaseOnly-只允许输入小写字母。</target>
        </trans-unit>
        <trans-unit id="79bc0f8db676878d9f2f258113ed7d1ef035352d" translate="yes" xml:space="preserve">
          <source>Qt.ImhLowercaseOnly - Only lowercase letter input is allowed.</source>
          <target state="translated">Qt.ImhLowercaseOnly-只允许输入小写字母。</target>
        </trans-unit>
        <trans-unit id="7eab124443d678bcf552e60537268eab136cc047" translate="yes" xml:space="preserve">
          <source>Qt.ImhMultiLine - The text editor doesn't close software input keyboard when Return or Enter key is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; 2.4).</source>
          <target state="translated">Qt.ImhMultiLine-按下Return或Enter键后，文本编辑器不会关闭软件输入键盘（因为&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; 2.4）。</target>
        </trans-unit>
        <trans-unit id="0a559e4b50ccba29f2b7beb51fa5b42c9c925159" translate="yes" xml:space="preserve">
          <source>Qt.ImhMultiLine - The text editor doesn't close software input keyboard when Return or Enter key is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3).</source>
          <target state="translated">Qt.ImhMultiLine-当按下Return或Enter键时，文本编辑器不会关闭软件输入键盘（因为&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3）。</target>
        </trans-unit>
        <trans-unit id="eaecaecab3246332d5ef9afd85af76f79be3ed2a" translate="yes" xml:space="preserve">
          <source>Qt.ImhMultiLine - The text editor doesn't close software input keyboard when Return or Enter key is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; 2.4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7228a845479dec0af2db6f8ede18efbcdebac2" translate="yes" xml:space="preserve">
          <source>Qt.ImhMultiLine - The text editor doesn't close software input keyboard when Return or Enter key is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fd5ff1002ff020158cf3d5d7a671033090a7b3" translate="yes" xml:space="preserve">
          <source>Qt.ImhMultiLine - The text editor doesn't close software input keyboard when Return or Enter key is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; 2.4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d979ad01863b4808de94b897d5a1948e0117fe09" translate="yes" xml:space="preserve">
          <source>Qt.ImhNoAutoUppercase - The input method should not try to automatically switch to upper case when a sentence ends.</source>
          <target state="translated">Qt.ImhNoAutoUppercase-当一个句子结束时,输入方法不应该尝试自动切换到大写。</target>
        </trans-unit>
        <trans-unit id="c6fa1f52f095e361a1bc011eed50218a9b9cb050" translate="yes" xml:space="preserve">
          <source>Qt.ImhNoPredictiveText - Do not use predictive text (for example, dictionary lookup) while typing.</source>
          <target state="translated">Qt.ImhNoPredictiveText-不要在输入时使用预测性文本(例如,字典查询)。</target>
        </trans-unit>
        <trans-unit id="b833085dc5851a2b04846d355d9c8bf9cddc4655" translate="yes" xml:space="preserve">
          <source>Qt.ImhNoPredictiveText - Do not use predictive text (i.e. dictionary lookup) while typing.</source>
          <target state="translated">Qt.ImhNoPredictiveText-在输入时不要使用预测性文本(即字典查询)。</target>
        </trans-unit>
        <trans-unit id="c6c0edb0beaab735d23973cd99e998e26c09482a" translate="yes" xml:space="preserve">
          <source>Qt.ImhPreferLowercase - Lower case letters are preferred (but not required).</source>
          <target state="translated">Qt.ImhPreferLowercase-首选小写字母(但不是必需的)。</target>
        </trans-unit>
        <trans-unit id="33b2f0376b77264824d46aa249b4095b147f6460" translate="yes" xml:space="preserve">
          <source>Qt.ImhPreferLowercase - Lowercase letters are preferred (but not required).</source>
          <target state="translated">Qt.ImhPreferLowercase-小写字母是首选(但不是必需的)。</target>
        </trans-unit>
        <trans-unit id="5ae2137147a7aee87eb83ced3d18ecb29978a96a" translate="yes" xml:space="preserve">
          <source>Qt.ImhPreferNumbers - Numbers are preferred (but not required).</source>
          <target state="translated">Qt.ImhPreferNumbers-数字是首选(但不是必需的)。</target>
        </trans-unit>
        <trans-unit id="9d38ac90c9f0d98359851350cd8638619363afd2" translate="yes" xml:space="preserve">
          <source>Qt.ImhPreferUppercase - Upper case letters are preferred (but not required).</source>
          <target state="translated">Qt.ImhPreferUppercase-大写字母是首选(但不是必需的)。</target>
        </trans-unit>
        <trans-unit id="1a889aa826395b1f7baa47a853f6a0f06b1ae051" translate="yes" xml:space="preserve">
          <source>Qt.ImhPreferUppercase - Uppercase letters are preferred (but not required).</source>
          <target state="translated">Qt.ImhPreferUppercase-大写字母是首选(但不是必须)。</target>
        </trans-unit>
        <trans-unit id="d4aaf23aa9fc03450f1978f702b9699f47c9ebb1" translate="yes" xml:space="preserve">
          <source>Qt.ImhSensitiveData - Typed text should not be stored by the active input method in any persistent storage like predictive user dictionary.</source>
          <target state="translated">Qt.ImhSensitiveData-输入的文本不应该被主动输入法存储在任何持久性存储中,比如预测用户字典。</target>
        </trans-unit>
        <trans-unit id="e5fe6956a85b06916a77c0c1d3bbc87d76b804a4" translate="yes" xml:space="preserve">
          <source>Qt.ImhTime - The text editor functions as a time field.</source>
          <target state="translated">Qt.ImhTime-文本编辑器的功能是一个时间域。</target>
        </trans-unit>
        <trans-unit id="cc306d39746d2daf3b175fbf357118bcec9a3860" translate="yes" xml:space="preserve">
          <source>Qt.ImhUppercaseOnly - Only upper case letter input is allowed.</source>
          <target state="translated">Qt.ImhUppercaseOnly-只允许输入大写字母。</target>
        </trans-unit>
        <trans-unit id="b53fd8764903855c4f1bedcc1ea2d0d374d020c2" translate="yes" xml:space="preserve">
          <source>Qt.ImhUppercaseOnly - Only uppercase letter input is allowed.</source>
          <target state="translated">Qt.ImhUppercaseOnly-只允许输入大写字母。</target>
        </trans-unit>
        <trans-unit id="dcc1fb7cc391bae2a9ff408e37936addaf053466" translate="yes" xml:space="preserve">
          <source>Qt.ImhUrlCharactersOnly - Only characters suitable for URLs are allowed.</source>
          <target state="translated">Qt.ImhUrlCharactersOnly-只允许使用适合URL的字符。</target>
        </trans-unit>
        <trans-unit id="cb3504e2e71a4c4a5cfdfd53ac929084e514be03" translate="yes" xml:space="preserve">
          <source>Qt.Key key - The key which was pressed, or &lt;code&gt;0&lt;/code&gt; if none</source>
          <target state="translated">Qt.Key关键-这是按下了键，或 &lt;code&gt;0&lt;/code&gt; ，如果没有</target>
        </trans-unit>
        <trans-unit id="62086d4532ece8d224c30be8887584bdc4b03f1c" translate="yes" xml:space="preserve">
          <source>Qt.LeftButton</source>
          <target state="translated">Qt.LeftButton</target>
        </trans-unit>
        <trans-unit id="e20bf1f52d980bac203d4608481b27b3f1a97e44" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight</source>
          <target state="translated">Qt.LeftToRight</target>
        </trans-unit>
        <trans-unit id="ad967e6db4925cedf477d3ff39de60da01af721a" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items are laid out from left to right.</source>
          <target state="translated">Qt.LeftToRight (默认)-项目从左到右排列。</target>
        </trans-unit>
        <trans-unit id="3664c5f4fae5eb05e86df613d05865ec8e33fdc3" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items are laid out from left to right. If the width of the row is explicitly set, the left anchor remains to the left of the row.</source>
          <target state="translated">Qt.LeftToRight (默认)-项目从左到右排列。如果明确设置了行的宽度,左锚就会保持在行的左边。</target>
        </trans-unit>
        <trans-unit id="e86c650c9ad5d4fbc8178c84173099ff565d6c99" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items are positioned from the top to bottom, and left to right. The flow direction is dependent on the &lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;Flow::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.LeftToRight（默认）-项目从上到下，从左到右放置。流向取决于&lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;Flow :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="75aa1d3156f1d874ec7ae6b894250c22f871c801" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items are positioned from the top to bottom, and left to right. The flow direction is dependent on the &lt;a href=&quot;qml-qtquick-grid#flow-prop&quot;&gt;Grid::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.LeftToRight（默认）-项目从上到下，从左到右放置。流向取决于&lt;a href=&quot;qml-qtquick-grid#flow-prop&quot;&gt;Grid :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="0f72395710766303d36a08dee410e7071a3920b4" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items will be laid out from left to right.</source>
          <target state="translated">Qt.LeftToRight (默认)-项目将从左到右排列。</target>
        </trans-unit>
        <trans-unit id="87fa8de016b963658117bc93811ce0a767b42d4e" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight (default) - Items will be laid out starting in the top, left corner. The flow is dependent on the &lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;GridView::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.LeftToRight（默认）-项目将从左上角开始进行布局。该流程取决于&lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;GridView :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="7de38e67d6a3750ec90c8d44a472d66ff573023e" translate="yes" xml:space="preserve">
          <source>Qt.LeftToRight - Text and graphics elements should be positioned from left to right.</source>
          <target state="translated">Qt.LeftToRight-文本和图形元素应该从左到右定位。</target>
        </trans-unit>
        <trans-unit id="31fcba68e8eca5f0bd7c99b6286fc4460cc3bb4c" translate="yes" xml:space="preserve">
          <source>Qt.LinkAction Create a link from the source to the target.</source>
          <target state="translated">Qt.LinkAction 创建一个从源到目标的链接。</target>
        </trans-unit>
        <trans-unit id="c287b5b1fac00d457523bd9275342520c8c20552" translate="yes" xml:space="preserve">
          <source>Qt.MatchExactly</source>
          <target state="translated">Qt.MatchExactly</target>
        </trans-unit>
        <trans-unit id="58ae26e5004ed65e36219cfe0280745d935a57b8" translate="yes" xml:space="preserve">
          <source>Qt.MiddleButton</source>
          <target state="translated">Qt.MiddleButton</target>
        </trans-unit>
        <trans-unit id="578443e507885bb7c1721886722d0513c236aa34" translate="yes" xml:space="preserve">
          <source>Qt.MoveAction Move the data from the source to the target</source>
          <target state="translated">Qt.MoveAction 将数据从源移动到目标。</target>
        </trans-unit>
        <trans-unit id="28f945836bfc731c5fcfa94b1d842b5bcab9af4b" translate="yes" xml:space="preserve">
          <source>Qt.MoveAction Move the data from the source to the target.</source>
          <target state="translated">Qt.MoveAction 将数据从源移动到目标。</target>
        </trans-unit>
        <trans-unit id="19480a63e8c5ea1bf64d00426195b127bc4bb6a8" translate="yes" xml:space="preserve">
          <source>Qt.OddEvenFill</source>
          <target state="translated">Qt.OddEvenFill</target>
        </trans-unit>
        <trans-unit id="811045a3ae639034cb5212c2b3e6d209eba352b8" translate="yes" xml:space="preserve">
          <source>Qt.OpenHandCursor</source>
          <target state="translated">Qt.OpenHandCursor</target>
        </trans-unit>
        <trans-unit id="2aa84c2972ca908d2e064ca8f5b68392a2ef5373" translate="yes" xml:space="preserve">
          <source>Qt.OtherFocusReason</source>
          <target state="translated">Qt.OtherFocusReason</target>
        </trans-unit>
        <trans-unit id="30a1a164259319bb51e9a344c9de015861ad5b07" translate="yes" xml:space="preserve">
          <source>Qt.PointingHandCursor</source>
          <target state="translated">Qt.PointingHandCursor</target>
        </trans-unit>
        <trans-unit id="07747b04f3e4aa40e0495a67732faf0866c1b995" translate="yes" xml:space="preserve">
          <source>Qt.RightButton</source>
          <target state="translated">Qt.RightButton</target>
        </trans-unit>
        <trans-unit id="44397700a08991f12052834aadc709f738492104" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft</source>
          <target state="translated">Qt.RightToLeft</target>
        </trans-unit>
        <trans-unit id="63537c6fb2a8ce3ae135ce5dd2a3859d7e725729" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items are laid out from right to left</source>
          <target state="translated">Qt.RightToLeft-项目从右到左排列。</target>
        </trans-unit>
        <trans-unit id="3d7fa2cffea86da93a3877cde649a371ea768602" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items are laid out from right to left.</source>
          <target state="translated">Qt.RightToLeft-项目从右到左排列。</target>
        </trans-unit>
        <trans-unit id="86859c143223249e33fa5169b3bf4bd20ce13740" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items are laid out from right to left. If the width of the row is explicitly set, the right anchor remains to the right of the row.</source>
          <target state="translated">Qt.RightToLeft-项目从右到左排列。如果明确设置了行的宽度,右锚就会保持在行的右边。</target>
        </trans-unit>
        <trans-unit id="83722cd96a25ace395c4f9a7dffa2d42c809160a" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items are positioned from the top to bottom, and right to left. The flow direction is dependent on the &lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;Flow::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.RightToLeft-项目从上到下，从右到左放置。流向取决于&lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;Flow :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="7ce3da905c692cdc3a2e90157297fd4d07f7d048" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items are positioned from the top to bottom, and right to left. The flow direction is dependent on the &lt;a href=&quot;qml-qtquick-grid#flow-prop&quot;&gt;Grid::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.RightToLeft-项目从上到下，从右到左放置。流向取决于&lt;a href=&quot;qml-qtquick-grid#flow-prop&quot;&gt;Grid :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="c41821e80a870dc766856caf5189d338ab4e4374" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items will be laid out from right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585b8db1eef5f87efaa36ca14cc11e8162e25f06" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items will be laid out from right to let.</source>
          <target state="translated">Qt.RightToLeft-项目将从右到左排列。</target>
        </trans-unit>
        <trans-unit id="45e94a629f31b263be369f2c92f0aefad6869b57" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Items will be laid out starting in the top, right corner. The flow is dependent on the &lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;GridView::flow&lt;/a&gt; property.</source>
          <target state="translated">Qt.RightToLeft-项目将从右上角开始进行布局。该流程取决于&lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;GridView :: flow&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="48468576bf71a1dbe89146bb6e0c23a6be354e6d" translate="yes" xml:space="preserve">
          <source>Qt.RightToLeft - Text and graphics elements should be positioned from right to left.</source>
          <target state="translated">Qt.RightToLeft-文本和图形元素应该从右到左定位。</target>
        </trans-unit>
        <trans-unit id="660a8da57720be89c48b3652802058e9a8f18728" translate="yes" xml:space="preserve">
          <source>Qt.ScrollBarAlwaysOff</source>
          <target state="translated">Qt.ScrollBarAlwaysOff</target>
        </trans-unit>
        <trans-unit id="5fb0f9f754f1bfd4321b49301e3fd58e1d3c3ad8" translate="yes" xml:space="preserve">
          <source>Qt.ScrollBarAlwaysOn</source>
          <target state="translated">Qt.ScrollBarAlwaysOn</target>
        </trans-unit>
        <trans-unit id="6f2b64d0d969e28d0824e57cdd9c2372cede0f01" translate="yes" xml:space="preserve">
          <source>Qt.ScrollBarAsNeeded</source>
          <target state="translated">Qt.ScrollBarAsNeeded</target>
        </trans-unit>
        <trans-unit id="05d06ae87a41ebd0e03ad69cfd25b014449d47ff" translate="yes" xml:space="preserve">
          <source>Qt.SizeAllCursor</source>
          <target state="translated">Qt.SizeAllCursor</target>
        </trans-unit>
        <trans-unit id="d8e2d2b451e63a6a93bb967f4b08aebdbe11a1e4" translate="yes" xml:space="preserve">
          <source>Qt.SizeBDiagCursor</source>
          <target state="translated">Qt.SizeBDiagCursor</target>
        </trans-unit>
        <trans-unit id="4777b930e670cc5ec27202be6ae668850f9e4661" translate="yes" xml:space="preserve">
          <source>Qt.SizeFDiagCursor</source>
          <target state="translated">Qt.SizeFDiagCursor</target>
        </trans-unit>
        <trans-unit id="16b0c0d304b48869d2f3999e301c907f45f62329" translate="yes" xml:space="preserve">
          <source>Qt.SizeHorCursor</source>
          <target state="translated">Qt.SizeHorCursor</target>
        </trans-unit>
        <trans-unit id="5275e733da67df2595f3123957fd4b260b5c974c" translate="yes" xml:space="preserve">
          <source>Qt.SizeVerCursor</source>
          <target state="translated">Qt.SizeVerCursor</target>
        </trans-unit>
        <trans-unit id="653c7309905ff088fe0661267c15040d3b5e2c71" translate="yes" xml:space="preserve">
          <source>Qt.SolidPattern</source>
          <target state="translated">Qt.SolidPattern</target>
        </trans-unit>
        <trans-unit id="f203d48e794a9c3953e75067ee182d886760c193" translate="yes" xml:space="preserve">
          <source>Qt.SplitHCursor</source>
          <target state="translated">Qt.SplitHCursor</target>
        </trans-unit>
        <trans-unit id="d761dcb08c93111f078c02c28db4404e20d01e19" translate="yes" xml:space="preserve">
          <source>Qt.SplitVCursor</source>
          <target state="translated">Qt.SplitVCursor</target>
        </trans-unit>
        <trans-unit id="d809d578d38642623feeae441d2abc1c5fb7cd3c" translate="yes" xml:space="preserve">
          <source>Qt.TopEdge (default)</source>
          <target state="translated">Qt.TopEdge (默认)</target>
        </trans-unit>
        <trans-unit id="1c3ca618d10f8851fc2df2acf21ffe12cfe0a547" translate="yes" xml:space="preserve">
          <source>Qt.UpArrowCursor</source>
          <target state="translated">Qt.UpArrowCursor</target>
        </trans-unit>
        <trans-unit id="c9e5f16ad8c5d4b3270d06528bbc4634c97ca6a9" translate="yes" xml:space="preserve">
          <source>Qt.VerPattern</source>
          <target state="translated">Qt.VerPattern</target>
        </trans-unit>
        <trans-unit id="5a9409bea7f786600ba7bacc9c82d20a32aa4bce" translate="yes" xml:space="preserve">
          <source>Qt.Vertical - Vertical orientation.</source>
          <target state="translated">Qt.Vertical-垂直方向。</target>
        </trans-unit>
        <trans-unit id="a6641c4a2cecdb49944ee0b7649e2d558f975d18" translate="yes" xml:space="preserve">
          <source>Qt.WaitCursor</source>
          <target state="translated">Qt.WaitCursor</target>
        </trans-unit>
        <trans-unit id="4313df5fcbacaaef75ffe7b6e26e8f4729753bfc" translate="yes" xml:space="preserve">
          <source>Qt.WhatsThisCursor</source>
          <target state="translated">Qt.WhatsThisCursor</target>
        </trans-unit>
        <trans-unit id="7522421029aec29bbb560a118fcc0ed1258e5551" translate="yes" xml:space="preserve">
          <source>Qt.WindingFill</source>
          <target state="translated">Qt.WindingFill</target>
        </trans-unit>
        <trans-unit id="91ad22ab598df276398278ebe38a2650ab008921" translate="yes" xml:space="preserve">
          <source>Qt.application</source>
          <target state="translated">Qt.application</target>
        </trans-unit>
        <trans-unit id="5abf205326f2aa735ead72484f0872cbe7762fc9" translate="yes" xml:space="preserve">
          <source>Qt.atob()</source>
          <target state="translated">Qt.atob()</target>
        </trans-unit>
        <trans-unit id="383fd8c5dd08b713344acd7b76c936c69eaf8229" translate="yes" xml:space="preserve">
          <source>Qt.binding()</source>
          <target state="translated">Qt.binding()</target>
        </trans-unit>
        <trans-unit id="6282ca8465324a549ce8094a0d1abe90bf4c071c" translate="yes" xml:space="preserve">
          <source>Qt.btoa()</source>
          <target state="translated">Qt.btoa()</target>
        </trans-unit>
        <trans-unit id="cfa7f2eb47f444cfe533ee708b97815a1a40c83e" translate="yes" xml:space="preserve">
          <source>Qt.callLater()</source>
          <target state="translated">Qt.callLater()</target>
        </trans-unit>
        <trans-unit id="4a3df2756ddf45f0b742c7b0222829e111d949f8" translate="yes" xml:space="preserve">
          <source>Qt.colorEqual()</source>
          <target state="translated">Qt.colorEqual()</target>
        </trans-unit>
        <trans-unit id="d57988a9ae6d851ba29ac5a3c94b0ac3017b4bdf" translate="yes" xml:space="preserve">
          <source>Qt.createComponent()</source>
          <target state="translated">Qt.createComponent()</target>
        </trans-unit>
        <trans-unit id="cea5d96bc3942d39fd6cbf658c4de6445a7d78c3" translate="yes" xml:space="preserve">
          <source>Qt.createQmlObject()</source>
          <target state="translated">Qt.createQmlObject()</target>
        </trans-unit>
        <trans-unit id="412bcaec7ecd1d492158a6d7f094f489a795766b" translate="yes" xml:space="preserve">
          <source>Qt.darker()</source>
          <target state="translated">Qt.darker()</target>
        </trans-unit>
        <trans-unit id="79dfe7dd6f206626cd71c6c6a0eac06b0580d597" translate="yes" xml:space="preserve">
          <source>Qt.exit()</source>
          <target state="translated">Qt.exit()</target>
        </trans-unit>
        <trans-unit id="9e77e49e3bba65c5bb66ff1021829d0367d215b7" translate="yes" xml:space="preserve">
          <source>Qt.font()</source>
          <target state="translated">Qt.font()</target>
        </trans-unit>
        <trans-unit id="4f54510d4ef2def520b8bc6f1b6c21774557563f" translate="yes" xml:space="preserve">
          <source>Qt.fontFamilies()</source>
          <target state="translated">Qt.fontFamilies()</target>
        </trans-unit>
        <trans-unit id="dd721a8e9bad06b45d13fcb1c7acbb5d2246454d" translate="yes" xml:space="preserve">
          <source>Qt.formatDate()</source>
          <target state="translated">Qt.formatDate()</target>
        </trans-unit>
        <trans-unit id="6a88bf98efa489f3e2aadb459f65fa08e5632661" translate="yes" xml:space="preserve">
          <source>Qt.formatDateTime()</source>
          <target state="translated">Qt.formatDateTime()</target>
        </trans-unit>
        <trans-unit id="740447ef36c08633296acab3138d4c5a7a6608b1" translate="yes" xml:space="preserve">
          <source>Qt.formatTime()</source>
          <target state="translated">Qt.formatTime()</target>
        </trans-unit>
        <trans-unit id="ff63ad329e6baca99ea52691106d373bdd24d60e" translate="yes" xml:space="preserve">
          <source>Qt.hsla()</source>
          <target state="translated">Qt.hsla()</target>
        </trans-unit>
        <trans-unit id="bb1261ec58e394cef944f8ce72f1f49e86e5f541" translate="yes" xml:space="preserve">
          <source>Qt.hsva()</source>
          <target state="translated">Qt.hsva()</target>
        </trans-unit>
        <trans-unit id="a8be580fab484c73cd467001c792d732fd212d4b" translate="yes" xml:space="preserve">
          <source>Qt.inputMethod</source>
          <target state="translated">Qt.inputMethod</target>
        </trans-unit>
        <trans-unit id="fca26a123b0a4f3f70261596d01a37640b1c2664" translate="yes" xml:space="preserve">
          <source>Qt.isQtObject()</source>
          <target state="translated">Qt.isQtObject()</target>
        </trans-unit>
        <trans-unit id="546026ce67b3407413fffac85a72fb7762c04e97" translate="yes" xml:space="preserve">
          <source>Qt.lighter()</source>
          <target state="translated">Qt.lighter()</target>
        </trans-unit>
        <trans-unit id="96d1697cb3367725b0fde6edb3910b24c0ebf5aa" translate="yes" xml:space="preserve">
          <source>Qt.locale()</source>
          <target state="translated">Qt.locale()</target>
        </trans-unit>
        <trans-unit id="c86185061cf30a7a077a7ad3f36acf374323ff1a" translate="yes" xml:space="preserve">
          <source>Qt.matrix4x4()</source>
          <target state="translated">Qt.matrix4x4()</target>
        </trans-unit>
        <trans-unit id="658df9770295859d80346ce580a77caaef7ca250" translate="yes" xml:space="preserve">
          <source>Qt.md5()</source>
          <target state="translated">Qt.md5()</target>
        </trans-unit>
        <trans-unit id="f6a965ca43bc02a22d6b56109cd8abf9c46c5b51" translate="yes" xml:space="preserve">
          <source>Qt.md5(string)</source>
          <target state="translated">Qt.md5(string)</target>
        </trans-unit>
        <trans-unit id="0ee68d0db8af82abc63e1fc004bdc994e355fe92" translate="yes" xml:space="preserve">
          <source>Qt.openUrlExternally()</source>
          <target state="translated">Qt.openUrlExternally()</target>
        </trans-unit>
        <trans-unit id="980926d8b92676b7ac198cd2f0be3ca4ae346a9c" translate="yes" xml:space="preserve">
          <source>Qt.openUrlExternally(string)</source>
          <target state="translated">Qt.openUrlExternally(string)</target>
        </trans-unit>
        <trans-unit id="6a769a7919366863bd2d7b0df1e94b683c850932" translate="yes" xml:space="preserve">
          <source>Qt.platform</source>
          <target state="translated">Qt.platform</target>
        </trans-unit>
        <trans-unit id="1dee7735bb7a5ee96ddc6af7ed41df70ede6b169" translate="yes" xml:space="preserve">
          <source>Qt.point()</source>
          <target state="translated">Qt.point()</target>
        </trans-unit>
        <trans-unit id="ab911cc709d01350a1bfecabe097345f3184322c" translate="yes" xml:space="preserve">
          <source>Qt.qsTr()</source>
          <target state="translated">Qt.qsTr()</target>
        </trans-unit>
        <trans-unit id="e83c991b7bd48d6b97e5cc62ca853ac71bac02cb" translate="yes" xml:space="preserve">
          <source>Qt.qsTrId()</source>
          <target state="translated">Qt.qsTrId()</target>
        </trans-unit>
        <trans-unit id="f175be97354ee5c188ae8b68fd10ecea7aed4638" translate="yes" xml:space="preserve">
          <source>Qt.qsTrIdNoOp()</source>
          <target state="translated">Qt.qsTrIdNoOp()</target>
        </trans-unit>
        <trans-unit id="3bd4cc1e6b0d5d6e7a9ec5a9a3f2e53a2c420570" translate="yes" xml:space="preserve">
          <source>Qt.qsTrNoOp()</source>
          <target state="translated">Qt.qsTrNoOp()</target>
        </trans-unit>
        <trans-unit id="b182e75b06d0e81ea8431fc81f22fbd8c8d70b76" translate="yes" xml:space="preserve">
          <source>Qt.qsTranslate()</source>
          <target state="translated">Qt.qsTranslate()</target>
        </trans-unit>
        <trans-unit id="184b62efd67547808d36d582761cf0146fcbecf4" translate="yes" xml:space="preserve">
          <source>Qt.qsTranslateNoOp()</source>
          <target state="translated">Qt.qsTranslateNoOp()</target>
        </trans-unit>
        <trans-unit id="56384447270ff7908d9d642087a5861b74d63116" translate="yes" xml:space="preserve">
          <source>Qt.quaternion()</source>
          <target state="translated">Qt.quaternion()</target>
        </trans-unit>
        <trans-unit id="b2e8c2293745e05bf339e74677ce2f174c5ee95f" translate="yes" xml:space="preserve">
          <source>Qt.quit()</source>
          <target state="translated">Qt.quit()</target>
        </trans-unit>
        <trans-unit id="fa9a42fe91586600d6a39de68c1319206597bc25" translate="yes" xml:space="preserve">
          <source>Qt.rect()</source>
          <target state="translated">Qt.rect()</target>
        </trans-unit>
        <trans-unit id="2ea107aec4b0b14ab70e2b527090f060a630c08b" translate="yes" xml:space="preserve">
          <source>Qt.resolvedUrl()</source>
          <target state="translated">Qt.resolvedUrl()</target>
        </trans-unit>
        <trans-unit id="4d0a70d42ca111c8462af540ec59213a2dd86d0f" translate="yes" xml:space="preserve">
          <source>Qt.rgba()</source>
          <target state="translated">Qt.rgba()</target>
        </trans-unit>
        <trans-unit id="9b509744f28ded6b38072051853fb428781db549" translate="yes" xml:space="preserve">
          <source>Qt.rgba(red, green, blue, alpha) - for example: Qt.rgba(0.3, 0.7, 1, 1.0)</source>
          <target state="translated">Qt.rgba(red,green,blue,alpha)-例如:Qt.rgba(0.3,0.7,1,1.0)</target>
        </trans-unit>
        <trans-unit id="0fc0854c3d54c0ae0b5e54350fd9f44247afa907" translate="yes" xml:space="preserve">
          <source>Qt.size()</source>
          <target state="translated">Qt.size()</target>
        </trans-unit>
        <trans-unit id="30749907bb60fda4af6e77c56f92decfc72c780d" translate="yes" xml:space="preserve">
          <source>Qt.styleHints</source>
          <target state="translated">Qt.styleHints</target>
        </trans-unit>
        <trans-unit id="b2389b6f3b9b57ca2191cbcf0d8f507aa82be57b" translate="yes" xml:space="preserve">
          <source>Qt.tint()</source>
          <target state="translated">Qt.tint()</target>
        </trans-unit>
        <trans-unit id="8ef30e19210a815ed986da699c5508111ce5b937" translate="yes" xml:space="preserve">
          <source>Qt.uiLanguage</source>
          <target state="translated">Qt.uiLanguage</target>
        </trans-unit>
        <trans-unit id="36c5e060622beef1421b83aa82f44049f858f462" translate="yes" xml:space="preserve">
          <source>Qt.vector2d()</source>
          <target state="translated">Qt.vector2d()</target>
        </trans-unit>
        <trans-unit id="9c9a249567fc8263dfa82061ad9118c450adc9d1" translate="yes" xml:space="preserve">
          <source>Qt.vector3d()</source>
          <target state="translated">Qt.vector3d()</target>
        </trans-unit>
        <trans-unit id="364c55c8ae02430557e42b3e54ce7cb87cf21c38" translate="yes" xml:space="preserve">
          <source>Qt.vector4d()</source>
          <target state="translated">Qt.vector4d()</target>
        </trans-unit>
        <trans-unit id="28a9db03233fb1282d269d1f58424bca8b05f476" translate="yes" xml:space="preserve">
          <source>Qt/Embedded</source>
          <target state="translated">Qt/Embedded</target>
        </trans-unit>
        <trans-unit id="3df210434ff3f7fac82c7a1483cbd91f2568eefc" translate="yes" xml:space="preserve">
          <source>Qt/Embedded, the embedded Linux port of Qt, is a complete and self-contained C++ GUI and platform development tool for Linux-based embedded development. ...</source>
          <target state="translated">Qt/Embedded是Qt的嵌入式Linux移植版,是一个完整的、自带的基于Linux的嵌入式开发的C++图形用户界面和平台开发工具。...</target>
        </trans-unit>
        <trans-unit id="bbb44b79d71942373077b67b565c5fe238d24d0b" translate="yes" xml:space="preserve">
          <source>Qt/Mac</source>
          <target state="translated">Qt/Mac</target>
        </trans-unit>
        <trans-unit id="44fd9b65f85285017cae7251c0c2ae006b54ea90" translate="yes" xml:space="preserve">
          <source>Qt/Windows</source>
          <target state="translated">Qt/Windows</target>
        </trans-unit>
        <trans-unit id="ab4dbfd7bfa51310aebf8eb2981d0fc33b3a9d60" translate="yes" xml:space="preserve">
          <source>Qt/X11</source>
          <target state="translated">Qt/X11</target>
        </trans-unit>
        <trans-unit id="5ed97da9342affd97b48ed8b353937008e8d1b90" translate="yes" xml:space="preserve">
          <source>Qt3D will automatically populate a set of default uniforms if they are encountered during the shader instrospection phase.</source>
          <target state="translated">Qt3D在shader instrospection阶段如果遇到默认制服,会自动填充一组默认制服。</target>
        </trans-unit>
        <trans-unit id="3142c7e87f68590aaa33e1717722be9d149b3a71" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-additiveclipblend&quot;&gt;AdditiveClipBlend&lt;/a&gt;</source>
          <target state="translated">Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-additiveclipblend&quot;&gt;AdditiveClipBlend&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be3d60153f534d75ab18b3ff80a1e03d9d0b36ea" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;</source>
          <target state="translated">Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65e7b8e32de6e1fbe74d85a61bd56a16c4ad9703" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt;</source>
          <target state="translated">Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee96f278d40013a69fb31d8fde9c349808b3bacb" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-clipblendvalue&quot;&gt;ClipBlendValue&lt;/a&gt;</source>
          <target state="translated">Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-clipblendvalue&quot;&gt;ClipBlendValue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4aa366770a7899e3071c80b60a0fa4a81214ed5" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-lerpclipblend&quot;&gt;LerpClipBlend&lt;/a&gt;</source>
          <target state="translated">Qt3D.Animation.&lt;a href=&quot;qml-qt3d-animation-lerpclipblend&quot;&gt;LerpClipBlend&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32578ddc74b7904c9ea0f23ef3094f7d69b765b9" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.ClipBlendValue</source>
          <target state="translated">Qt3D.Animation.ClipBlendValue</target>
        </trans-unit>
        <trans-unit id="cdc4e2263a613ba9d5790428c45243dde08aef14" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.LerpClipBlend</source>
          <target state="translated">Qt3D.Animation.LerpClipBlend</target>
        </trans-unit>
        <trans-unit id="6f7d784fc81c4fa9b259ce44867c19c09fe386d2" translate="yes" xml:space="preserve">
          <source>Qt3D.Animation.QAdditiveClipBlend</source>
          <target state="translated">Qt3D.Animation.QAdditiveClipBlend</target>
        </trans-unit>
        <trans-unit id="4a8ae79f0c99e0e8138b216a12dde602cf5ea37e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation</source>
          <target state="translated">Qt3DAnimation</target>
        </trans-unit>
        <trans-unit id="ec86535073a79eb4bc672e631e50c959d64bd23f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41584b2aa9bd118e6d15e12a1d11805bce291236" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation Namespace</source>
          <target state="translated">Qt3DAnimation命名空间</target>
        </trans-unit>
        <trans-unit id="b529dc35ae4037b8b801ab24b2471d4e6a6b74e3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::AnimationType (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21fd429b9ecf25bdec0b472e099fedd01f088b3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Loops (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce83c19e8046e828c5fd4a56e173d89763d17c0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Method (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e8126f74afd3edd8aaab6dbc1c34f6e3e61b0d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimation</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimation</target>
        </trans-unit>
        <trans-unit id="ecab07f420176ffc6aa612b4b3ceeb12b4275e04" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimation (class)</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimation (class)</target>
        </trans-unit>
        <trans-unit id="ef3e98a6a34314c41825995c0909bbe942674f5a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimation::AnimationType (enum)</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimation::AnimationType (enum)</target>
        </trans-unit>
        <trans-unit id="0a97eafeade80856890b662f06fa7411e69d9f27" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimation::setDuration()</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimation::setDuration()</target>
        </trans-unit>
        <trans-unit id="921434ea66308b4463db1532e6610fba5d451122" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimationClip</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimationClip</target>
        </trans-unit>
        <trans-unit id="cf440a9dba90568ce05563c9b4d6e4797e145789" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimationClip (class)</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimationClip (class)</target>
        </trans-unit>
        <trans-unit id="ffe4e61d9dc071d554cfc76da5fd30d0f9a5a447" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimationClip *</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimationClip *。</target>
        </trans-unit>
        <trans-unit id="6cefcce5c47dcafb814d5af4ba3c023f46400719" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractAnimationClip::~QAbstractAnimationClip()</source>
          <target state="translated">Qt3DAnimation::QAbstractAnimationClip::~QAbstractAnimationClip()</target>
        </trans-unit>
        <trans-unit id="eac425d070bd522c81b153dbd5206095e9badbc7" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractChannelMapping</source>
          <target state="translated">Qt3DAnimation::QAbstractChannelMapping</target>
        </trans-unit>
        <trans-unit id="d5c16f157cce6a757c4ff3d0dc01924930d42735" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator</target>
        </trans-unit>
        <trans-unit id="f889165a2cf7cc9e243b05063d78238a9fe5e0ad" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator (class)</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator (class)</target>
        </trans-unit>
        <trans-unit id="efb1f9be40af2772cef0eabb5c44d336a43dd077" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator::Loops (enum)</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator::Loops (enum)</target>
        </trans-unit>
        <trans-unit id="845f4f1073cb86f7aea473278447fd3f63d99dbd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator::isRunning()</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator::isRunning()</target>
        </trans-unit>
        <trans-unit id="1462f9fac89af5abec9b6ef7d3b903b81205cab7" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator::loopCount()</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator::loopCount()</target>
        </trans-unit>
        <trans-unit id="80c0ad01d75a829ab352b8e3ea4e830799fe9cd0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator::start()</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator::start()</target>
        </trans-unit>
        <trans-unit id="00a074187e96f81d32c1b074b79a5799a596e550" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipAnimator::stop()</source>
          <target state="translated">Qt3DAnimation::QAbstractClipAnimator::stop()</target>
        </trans-unit>
        <trans-unit id="db23e98fd42604b26f271509c57218eaef6777c6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipBlendNode</source>
          <target state="translated">Qt3DAnimation::QAbstractClipBlendNode</target>
        </trans-unit>
        <trans-unit id="5cf6ac99d646ca1533e9a8ac00ef635733ece8dd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipBlendNode (class)</source>
          <target state="translated">Qt3DAnimation::QAbstractClipBlendNode (class)</target>
        </trans-unit>
        <trans-unit id="a8187c65046f118c866b2e4fb1e4ac6f1e3081a0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAbstractClipBlendNode *</source>
          <target state="translated">Qt3DAnimation::QAbstractClipBlendNode *。</target>
        </trans-unit>
        <trans-unit id="56ff25e7bcc72efcbb4959d6d55228a958fba0c0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAdditiveClipBlend</source>
          <target state="translated">Qt3DAnimation::QAdditiveClipBlend</target>
        </trans-unit>
        <trans-unit id="328dddd8b601075e2aff57f87cd2c2bf24a41587" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAdditiveClipBlend (class)</source>
          <target state="translated">Qt3DAnimation::QAdditiveClipBlend (class)</target>
        </trans-unit>
        <trans-unit id="06dde017b1689ca17ad200001a716e9ae8b2c39a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationAspect</source>
          <target state="translated">Qt3DAnimation::QAnimationAspect</target>
        </trans-unit>
        <trans-unit id="ec4d61febe6a5a107403bdc45dd5a6524358d8c1" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationAspect (class)</source>
          <target state="translated">Qt3DAnimation::QAnimationAspect (class)</target>
        </trans-unit>
        <trans-unit id="87c33e2fdaff36080e60101118f7c9568a2df0da" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationAspect()</source>
          <target state="translated">Qt3DAnimation::QAnimationAspect()</target>
        </trans-unit>
        <trans-unit id="93f61233920ab101544cead2b5cf43d028caeff5" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationAspect::QAnimationAspect()</source>
          <target state="translated">Qt3DAnimation::QAnimationAspect::QAnimationAspect()</target>
        </trans-unit>
        <trans-unit id="318251da2e57b2010bb500391f390a036b15627b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationCallback</source>
          <target state="translated">Qt3DAnimation::QAnimationCallback</target>
        </trans-unit>
        <trans-unit id="bfd234ee8dd6f22012178167de9b1f5b9cf1ff3a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClip</source>
          <target state="translated">Qt3DAnimation::QAnimationClip</target>
        </trans-unit>
        <trans-unit id="2a27bffb791d54cc6e74b5985ce067441421a9da" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipData</source>
          <target state="translated">Qt3DAnimation::QAnimationClipData</target>
        </trans-unit>
        <trans-unit id="f460fcc4107a64a0331965cfd4ee4b2322c7265d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipLoader</source>
          <target state="translated">Qt3DAnimation::QAnimationClipLoader</target>
        </trans-unit>
        <trans-unit id="1ba69f616225e855a62f8e6270ace925208aeb04" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipLoader (class)</source>
          <target state="translated">Qt3DAnimation::QAnimationClipLoader (class)</target>
        </trans-unit>
        <trans-unit id="cb41aba58d0af2906d17973ee06710c9d01bdb63" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipLoader::Status</source>
          <target state="translated">Qt3DAnimation::QAnimationClipLoader::Status</target>
        </trans-unit>
        <trans-unit id="540b9fe7cc6dc486b46a8afe56f66776ae4a63fa" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipLoader::Status (enum)</source>
          <target state="translated">Qt3DAnimation::QAnimationClipLoader::Status (enum)</target>
        </trans-unit>
        <trans-unit id="792cbdab4288fcaf2845dbcb283e78bdbe1b130b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationClipLoader::status()</source>
          <target state="translated">Qt3DAnimation::QAnimationClipLoader::status()</target>
        </trans-unit>
        <trans-unit id="4a617c8b04a15b405380c5665c83472ba5e7836b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController</source>
          <target state="translated">Qt3DAnimation::QAnimationController</target>
        </trans-unit>
        <trans-unit id="2a483f4b7bb66999b3d07f2f007b9324004f53a9" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController (class)</source>
          <target state="translated">Qt3DAnimation::QAnimationController (class)</target>
        </trans-unit>
        <trans-unit id="ef59c0206cbd5f66eacb1d03dfdacc65586f0c4b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController()</source>
          <target state="translated">Qt3DAnimation::QAnimationController()</target>
        </trans-unit>
        <trans-unit id="e615070f8c014a11349bec6eb4ac5d60a68bc902" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::QAnimationController()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::QAnimationController()</target>
        </trans-unit>
        <trans-unit id="e913360fed9a987ea55c1cc88f1934142d635a53" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::addAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::addAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="a062da9693290a1fb0c981a0244a3ce2eb6f1744" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::animationGroupList()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::animationGroupList()</target>
        </trans-unit>
        <trans-unit id="10438c278d60ede4aad5dd376315d55a33ea5082" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::getAnimationIndex()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::getAnimationIndex()</target>
        </trans-unit>
        <trans-unit id="18754ff318face0a094c4a5e585b842c4cc6944f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::getGroup()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::getGroup()</target>
        </trans-unit>
        <trans-unit id="4cb36a51338cd28c056f60516cfac6f6ac42c90a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::removeAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::removeAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="e79df72a6300c15a3bcb3af96996b867b0d4ee45" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationController::setAnimationGroups()</source>
          <target state="translated">Qt3DAnimation::QAnimationController::setAnimationGroups()</target>
        </trans-unit>
        <trans-unit id="70550f64980f33de317f2de1222e2a1a17b59e7e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup</target>
        </trans-unit>
        <trans-unit id="1c76f43f6778819c6637606515679d5636b74b6f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup (class)</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup (class)</target>
        </trans-unit>
        <trans-unit id="d8845e2a4fa897a74aac1b7564808ebd69c0e92f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup *</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup *。</target>
        </trans-unit>
        <trans-unit id="6066bdfde72209d0f8faa69858cda233c3e22ac8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="432fa6828800d33e6980b3f10911622dc2f2922c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup::QAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup::QAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="890e3220783d16f5e7c5935b949d7ef39e69c2da" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup::addAnimation()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup::addAnimation()</target>
        </trans-unit>
        <trans-unit id="ec224ca7bc5d1ae36ecf8b84b4ccc9ea6f02b84e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup::animationList()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup::animationList()</target>
        </trans-unit>
        <trans-unit id="e54d2f3dc237f88d82301c4dfc41c0902e52c0fb" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup::removeAnimation()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup::removeAnimation()</target>
        </trans-unit>
        <trans-unit id="52accce1337d8a323ca533c6cb9a468e1ad015f2" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QAnimationGroup::setAnimations()</source>
          <target state="translated">Qt3DAnimation::QAnimationGroup::setAnimations()</target>
        </trans-unit>
        <trans-unit id="4bd17ce2925cb5c0f0d89b58fc6f1ef72134799c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QBlendedClipAnimator</source>
          <target state="translated">Qt3DAnimation::QBlendedClipAnimator</target>
        </trans-unit>
        <trans-unit id="8dc38efedb060f8d49cff4df93e0e098cf4f6a3f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QBlendedClipAnimator (class)</source>
          <target state="translated">Qt3DAnimation::QBlendedClipAnimator (class)</target>
        </trans-unit>
        <trans-unit id="b04f6dff01d74b2869055f6bc28c3717d864b5e4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QCallbackMapping</source>
          <target state="translated">Qt3DAnimation::QCallbackMapping</target>
        </trans-unit>
        <trans-unit id="ad9bc7f239bc49b13ac6e886b59a66983543d7d8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QChannel</source>
          <target state="translated">Qt3DAnimation::QChannel</target>
        </trans-unit>
        <trans-unit id="09f9ac0db821a418449811909e46c122c456e9b7" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QChannelMapper</source>
          <target state="translated">Qt3DAnimation::QChannelMapper</target>
        </trans-unit>
        <trans-unit id="6d7b91e814f2188ab7e21024320ef6aac71d278d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QChannelMapper *</source>
          <target state="translated">Qt3DAnimation::QChannelMapper *。</target>
        </trans-unit>
        <trans-unit id="8ab49beef9917ac32c0903325b644dc4f1dd1a46" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QChannelMapping</source>
          <target state="translated">Qt3DAnimation::QChannelMapping</target>
        </trans-unit>
        <trans-unit id="17bb4d58c65c5bb9e9627752cbdd64927d4b4b11" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QChannelMappingCreatedChangeBase</source>
          <target state="translated">Qt3DAnimation::QChannelMappingCreatedChangeBase</target>
        </trans-unit>
        <trans-unit id="18bf0982fc2dacf99274387d440ae227821b4f79" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipAnimator</source>
          <target state="translated">Qt3DAnimation::QClipAnimator</target>
        </trans-unit>
        <trans-unit id="a424a3c8a896a0599d0ba3cf819e303335fb5c1a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipAnimator (class)</source>
          <target state="translated">Qt3DAnimation::QClipAnimator (class)</target>
        </trans-unit>
        <trans-unit id="61bcc61e26c276bad708476a3244c93ca0361334" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipBlendNodeCreatedChangeBase</source>
          <target state="translated">Qt3DAnimation::QClipBlendNodeCreatedChangeBase</target>
        </trans-unit>
        <trans-unit id="2f9923a7aa7e67aefdb38a313e02c513f46017fd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipBlendNodeCreatedChangeBase (class)</source>
          <target state="translated">Qt3DAnimation::QClipBlendNodeCreatedChangeBase (class)</target>
        </trans-unit>
        <trans-unit id="9e72e27e775b1f6179047480fa386bb6fd6a07bd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipBlendNodeCreatedChangeBasePtr (typedef)</source>
          <target state="translated">Qt3DAnimation::QClipBlendNodeCreatedChangeBasePtr (typedef)</target>
        </trans-unit>
        <trans-unit id="5f513e5069c39ffd32ec9ac887ae2888287e51df" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClipBlendValue</source>
          <target state="translated">Qt3DAnimation::QClipBlendValue</target>
        </trans-unit>
        <trans-unit id="7c19f1d17544441b556a3a91dd50732638698ce8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QClock *</source>
          <target state="translated">Qt3DAnimation::QClock *。</target>
        </trans-unit>
        <trans-unit id="2068d2fa713b3dbac9ed99f5cd12dbee79edc3de" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyFrame</source>
          <target state="translated">Qt3DAnimation::QKeyFrame</target>
        </trans-unit>
        <trans-unit id="d6c0953b6dfd0bebfac210724050e6cf2bbbc6e0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyFrame (class)</source>
          <target state="translated">Qt3DAnimation::QKeyFrame (class)</target>
        </trans-unit>
        <trans-unit id="2d9a9e590c4d151366c8f6768446e8d7b6206f33" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation</target>
        </trans-unit>
        <trans-unit id="7935a1809200063c20acbc097ab86ae5c26fbbfa" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation (class)</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation (class)</target>
        </trans-unit>
        <trans-unit id="2924bcd687a4d6ae896137f80e988689a901f7d5" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation()</target>
        </trans-unit>
        <trans-unit id="7995fd6870edc2621a07770a5119c50f120f1b75" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::QKeyframeAnimation()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::QKeyframeAnimation()</target>
        </trans-unit>
        <trans-unit id="e603d9a9c63c4855bde6cbf404e1cf0b35d30695" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::RepeatMode</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::RepeatMode</target>
        </trans-unit>
        <trans-unit id="bebe962bf95bb325696c41560c6088a6fee794ec" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::RepeatMode (enum)</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::RepeatMode (enum)</target>
        </trans-unit>
        <trans-unit id="a4e6c01d5e675f9829c89d4eb334d3cad340381b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::addKeyframe()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::addKeyframe()</target>
        </trans-unit>
        <trans-unit id="3c2102fec1e0deeff950747bb11297663c854c8a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::keyframeList()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::keyframeList()</target>
        </trans-unit>
        <trans-unit id="ee2a396bcd090103341777812d6f2b8e08f9f046" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::removeKeyframe()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::removeKeyframe()</target>
        </trans-unit>
        <trans-unit id="1414054e9fd2920d995a0a9f397602b9693fa7ef" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QKeyframeAnimation::setKeyframes()</source>
          <target state="translated">Qt3DAnimation::QKeyframeAnimation::setKeyframes()</target>
        </trans-unit>
        <trans-unit id="e11636a6208bc77a61d4da6794016d819168ec0e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QLerpClipBlend</source>
          <target state="translated">Qt3DAnimation::QLerpClipBlend</target>
        </trans-unit>
        <trans-unit id="9b461d5a79e6d66b4735e99bc2092fb5918319ca" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QLerpClipBlend (class)</source>
          <target state="translated">Qt3DAnimation::QLerpClipBlend (class)</target>
        </trans-unit>
        <trans-unit id="7aa2150ef589ff01a9774aa61affdce92658dad1" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget</source>
          <target state="translated">Qt3DAnimation::QMorphTarget</target>
        </trans-unit>
        <trans-unit id="9533c750e02f59557d7ae731d19c1932bb5058dc" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget (class)</source>
          <target state="translated">Qt3DAnimation::QMorphTarget (class)</target>
        </trans-unit>
        <trans-unit id="5c4f0d8bc7291e74023a0ee0a7833857d3007ff3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget *</source>
          <target state="translated">Qt3DAnimation::QMorphTarget *。</target>
        </trans-unit>
        <trans-unit id="80961334755f6f97abb414fc961573a78a1541c2" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget()</target>
        </trans-unit>
        <trans-unit id="9329450abb32715caf24850b67b3b02ffaf4997f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::QMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::QMorphTarget()</target>
        </trans-unit>
        <trans-unit id="6973fc29f4a009742ba9e340ec247de6e18097d8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::addAttribute()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::addAttribute()</target>
        </trans-unit>
        <trans-unit id="af97737e7d1ca9619356330ca668397381f2611f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::attributeList()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::attributeList()</target>
        </trans-unit>
        <trans-unit id="a23a79d3b1e31773108a80c74bc871aa28b2f753" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::fromGeometry()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::fromGeometry()</target>
        </trans-unit>
        <trans-unit id="6878d13066e0b4a4f9d5c392bdfb82cbb6fff02c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::removeAttribute()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::removeAttribute()</target>
        </trans-unit>
        <trans-unit id="505f8b2074a6c3dbb1f5d9973fad734cc6fb5e85" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphTarget::setAttributes()</source>
          <target state="translated">Qt3DAnimation::QMorphTarget::setAttributes()</target>
        </trans-unit>
        <trans-unit id="9ee4ce775a6bf71384fd17424a85ce5055c51e7d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation</target>
        </trans-unit>
        <trans-unit id="9bf7d4dd17ffd27bfc33566b39d10f622901b1cd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation (class)</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation (class)</target>
        </trans-unit>
        <trans-unit id="f830d712206e9251054adc57eb04a25d7cb57d0b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation()</target>
        </trans-unit>
        <trans-unit id="0f01acfba92ed9c14e232add384a85f626480d94" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::Method (enum)</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::Method (enum)</target>
        </trans-unit>
        <trans-unit id="c320826c30f38d1b337e10b17d9a464688500304" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::QMorphingAnimation()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::QMorphingAnimation()</target>
        </trans-unit>
        <trans-unit id="421bf1c29aa64a60d05ba3bd72601cd4e66bd64d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::addMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::addMorphTarget()</target>
        </trans-unit>
        <trans-unit id="3b38fa51de4e0577eaf200d1df0aab032082ba98" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::getWeights()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::getWeights()</target>
        </trans-unit>
        <trans-unit id="22d166c2bfea655af9842b14f68f057aba339273" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::morphTargetList()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::morphTargetList()</target>
        </trans-unit>
        <trans-unit id="abe0998b3e2a969ef87ec1ba23e10c7bdeb8bf9b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::removeMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::removeMorphTarget()</target>
        </trans-unit>
        <trans-unit id="7de7eaa53dbfde7c6369630c5825a273bdba0644" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::setMorphTargets()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::setMorphTargets()</target>
        </trans-unit>
        <trans-unit id="8aecad6c3c88619f040247de13054123cd1742a4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QMorphingAnimation::setWeights()</source>
          <target state="translated">Qt3DAnimation::QMorphingAnimation::setWeights()</target>
        </trans-unit>
        <trans-unit id="b7bd349f59a20b6f3f002c060d9d30ce2e594351" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation</target>
        </trans-unit>
        <trans-unit id="7dadf8a0e52e2c719e57ff0da2235940fa35e8d6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation (class)</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation (class)</target>
        </trans-unit>
        <trans-unit id="a5731348d88db5e78d2c85b2035730331c79b4cc" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation()</target>
        </trans-unit>
        <trans-unit id="72e46aa322af5ab1319adbebf1526d12d494e353" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation::QVertexBlendAnimation()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation::QVertexBlendAnimation()</target>
        </trans-unit>
        <trans-unit id="9c98fd5384729c8a0dfe7807b704bdd13311b8c6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation::addMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation::addMorphTarget()</target>
        </trans-unit>
        <trans-unit id="3e3384dfcba06cf430bc9b0d378669826e3388f0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation::morphTargetList()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation::morphTargetList()</target>
        </trans-unit>
        <trans-unit id="dfcb0c5d13378fecbdd3427dc7c51d4d3b751693" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation::removeMorphTarget()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation::removeMorphTarget()</target>
        </trans-unit>
        <trans-unit id="fe6ab661662d4ee3e4d32c4937e19ab02aa7339b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::QVertexBlendAnimation::setMorphTargets()</source>
          <target state="translated">Qt3DAnimation::QVertexBlendAnimation::setMorphTargets()</target>
        </trans-unit>
        <trans-unit id="138f04094f63a92fb10c3ccaa97a86f45c16e0ec" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::animationName</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::animationName</target>
        </trans-unit>
        <trans-unit id="c0c120933235e44f36c878ad17e1184067671580" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::animationType</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::animationType</target>
        </trans-unit>
        <trans-unit id="44e4b7f51e25ca9ff2c029b299f4801c9847f943" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::duration</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::duration</target>
        </trans-unit>
        <trans-unit id="7783f279f9461eeb4e5ea47d0f5b86015fe35190" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::position</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractAnimation::position</target>
        </trans-unit>
        <trans-unit id="7293c361ddc83e3b90c973272a1c437f01f0c911" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractAnimationClip::duration</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractAnimationClip::duration</target>
        </trans-unit>
        <trans-unit id="a10c391dbb36c136378f9b63884cb0f566b3f139" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::channelMapper</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::channelMapper</target>
        </trans-unit>
        <trans-unit id="4cadddb9bde6414c7bdc1dc494d2ffab84df34cd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::clock</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::clock</target>
        </trans-unit>
        <trans-unit id="a43bf02cdf0d86a74a3777d1bcf7360fcd9b78e5" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::loops</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::loops</target>
        </trans-unit>
        <trans-unit id="b77944c46f7f9deb31e7c76374f96105e94896aa" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::normalizedTime</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::normalizedTime</target>
        </trans-unit>
        <trans-unit id="be90db53d19aac9bb0eaf6e45a722a9ca6784be8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::running</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAbstractClipAnimator::running</target>
        </trans-unit>
        <trans-unit id="fef1450bae2d352035167ce09b0c9d19b1414633" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::additiveClip</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::additiveClip</target>
        </trans-unit>
        <trans-unit id="75e39c6e8644415db1f92f54e9266503b73ad0a0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::additiveFactor</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::additiveFactor</target>
        </trans-unit>
        <trans-unit id="f06b3418643d53f65e78f2c512070674d4ce2fea" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::baseClip</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAdditiveClipBlend::baseClip</target>
        </trans-unit>
        <trans-unit id="e2a23befd852ab55257f107362083e3a77440ad8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationClipLoader::source</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationClipLoader::source</target>
        </trans-unit>
        <trans-unit id="17f7064b67c882e5d828cee0687850c43a8cfc30" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationClipLoader::status</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationClipLoader::status</target>
        </trans-unit>
        <trans-unit id="52c67163ffe5e25f3b0b0dc17ac2cda323281b8b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::activeAnimationGroup</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::activeAnimationGroup</target>
        </trans-unit>
        <trans-unit id="97a9e8763c7158cef674f805defebfedd23623a7" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::entity</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::entity</target>
        </trans-unit>
        <trans-unit id="985ae6c86015b88f1cd39a6433fe65137f58c919" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::position</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::position</target>
        </trans-unit>
        <trans-unit id="2f207d0ce1450b5cbdbad2e34c1cf71f05093c86" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::positionOffset</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::positionOffset</target>
        </trans-unit>
        <trans-unit id="5831f21cad59c2123c87653f6c47ac64aa6c4ab1" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::positionScale</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::positionScale</target>
        </trans-unit>
        <trans-unit id="cc30f23ae4d415e563920ebd5fbe0410bdc968e6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationController::recursive</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationController::recursive</target>
        </trans-unit>
        <trans-unit id="e174809241c57062b5b7bd6dfa3757c340a38507" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationGroup::duration</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationGroup::duration</target>
        </trans-unit>
        <trans-unit id="86b871f0492827a18264556a4685183c4a6b873e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationGroup::name</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationGroup::name</target>
        </trans-unit>
        <trans-unit id="f45ed17985e679c3158f9de046b098deea61622e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QAnimationGroup::position</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QAnimationGroup::position</target>
        </trans-unit>
        <trans-unit id="245ae25d8f599fabc555b52273950a3bacba5946" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QBlendedClipAnimator::blendTree</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QBlendedClipAnimator::blendTree</target>
        </trans-unit>
        <trans-unit id="c3eff955ad8569478ef1af0f0d48fb252ec49af6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QClipAnimator::clip</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QClipAnimator::clip</target>
        </trans-unit>
        <trans-unit id="207e979e0159ca76ed782580497a7512aa84f488" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::easing</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::easing</target>
        </trans-unit>
        <trans-unit id="941f3240bf2505aa4a4e66113ee2d6a90ac9a921" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::endMode</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::endMode</target>
        </trans-unit>
        <trans-unit id="932e3a81bc063884982acce21822c76e8ab2ea3f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::framePositions</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::framePositions</target>
        </trans-unit>
        <trans-unit id="a9674f878da43f5cff208be45b545e8ccedd1826" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::startMode</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::startMode</target>
        </trans-unit>
        <trans-unit id="5bb9877d65b7407c7b9758e0409551f1b670c5c3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::target</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::target</target>
        </trans-unit>
        <trans-unit id="e3566a13f1c9051d80bba50689472c6d7b680f24" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::targetName</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QKeyframeAnimation::targetName</target>
        </trans-unit>
        <trans-unit id="2ea3753ef56b21b61592eedc9c4a650525f22e8b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::blendFactor</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::blendFactor</target>
        </trans-unit>
        <trans-unit id="4e8d2278bd3e0a7da36e1478611b601e090615bf" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::endClip</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::endClip</target>
        </trans-unit>
        <trans-unit id="62177085db004cc6730a33e7b29f1372171117f0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::startClip</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QLerpClipBlend::startClip</target>
        </trans-unit>
        <trans-unit id="f2906db73bea8cdd4abb9817fb081abf680c4c9d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphTarget::attributeNames</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphTarget::attributeNames</target>
        </trans-unit>
        <trans-unit id="ef146015e73625fd27d9d4e35b0194f528e66075" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::easing</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::easing</target>
        </trans-unit>
        <trans-unit id="b5806b9f316961d771e7e600dc7cbf2d89b2f697" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::interpolator</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::interpolator</target>
        </trans-unit>
        <trans-unit id="81e0e026656d133ea937b1db50ca417074d740b5" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::method</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::method</target>
        </trans-unit>
        <trans-unit id="b7bd5cadab2ca58397dc6c3e55afae0b79771804" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::target</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::target</target>
        </trans-unit>
        <trans-unit id="e5277b1e1e314e43aff14f2fd30de014df8fa839" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::targetName</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::targetName</target>
        </trans-unit>
        <trans-unit id="0ffd426149bead722dfd7ad49ef7c224556cee05" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::targetPositions</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QMorphingAnimation::targetPositions</target>
        </trans-unit>
        <trans-unit id="5f876ba0c9d1a3147cbdd37946d1ae7a5ac6eb1c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::interpolator</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::interpolator</target>
        </trans-unit>
        <trans-unit id="ccd9e8785437732a2348cab616cef4fb18ba760b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::target</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::target</target>
        </trans-unit>
        <trans-unit id="b9e66777da11c49d346de127970d94ea4b1c1f71" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::targetName</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::targetName</target>
        </trans-unit>
        <trans-unit id="3ac05513851796598a7f8eef8f1c71d723bd1361" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::targetPositions</source>
          <target state="translated">Qt3DAnimation::Qt3DAnimation::QVertexBlendAnimation::targetPositions</target>
        </trans-unit>
        <trans-unit id="99f2b1c20e74e55ed19cf8715bb25b382df48bfe" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::RepeatMode (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4499c95356913ab6a7597c2e04b13297e1fc9d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::Status (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bea3bd7f6dfa63b1def46c34824875936409c3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::activeAnimationGroup</source>
          <target state="translated">Qt3DAnimation::activeAnimationGroup</target>
        </trans-unit>
        <trans-unit id="0335c86810a732610e4281348a09439d9cdb411f" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::addAnimation()</source>
          <target state="translated">Qt3DAnimation::addAnimation()</target>
        </trans-unit>
        <trans-unit id="7bf6dbe21a318b886caa592eb36348a5a90a3c3d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::addAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::addAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="3c83802f248b4c33b72ee1ded1efc7fe4f1777eb" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::addAttribute()</source>
          <target state="translated">Qt3DAnimation::addAttribute()</target>
        </trans-unit>
        <trans-unit id="08f0cc6b4b9f83d259504553af92657ab01dfc06" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::addKeyframe()</source>
          <target state="translated">Qt3DAnimation::addKeyframe()</target>
        </trans-unit>
        <trans-unit id="d9a891cdda097e9b987a0f5a13950d898f79fa5b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::addMorphTarget()</source>
          <target state="translated">Qt3DAnimation::addMorphTarget()</target>
        </trans-unit>
        <trans-unit id="0b2008243979590828af9894b3f93d44559a5a94" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::additiveClip</source>
          <target state="translated">Qt3DAnimation::additiveClip</target>
        </trans-unit>
        <trans-unit id="4bc653f41af7ec1c6560560d9d9feedbfb74d482" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::additiveFactor</source>
          <target state="translated">Qt3DAnimation::additiveFactor</target>
        </trans-unit>
        <trans-unit id="237d08cd9e61043bbe2adbbb2f47420707550e67" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::animationGroupList()</source>
          <target state="translated">Qt3DAnimation::animationGroupList()</target>
        </trans-unit>
        <trans-unit id="de8c03045104e9be94d5943d7d91038fb8ff919e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::animationList()</source>
          <target state="translated">Qt3DAnimation::animationList()</target>
        </trans-unit>
        <trans-unit id="62c927c3e31f5d04c48efd32a8387178e0f09fb2" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::animationName</source>
          <target state="translated">Qt3DAnimation::animationName</target>
        </trans-unit>
        <trans-unit id="9de8a10a709e47e5d224743194e8173a9a219f86" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::animationType</source>
          <target state="translated">Qt3DAnimation::animationType</target>
        </trans-unit>
        <trans-unit id="b4b01009b8489d7aaf4345cd59099c09478e1d6c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::attributeList()</source>
          <target state="translated">Qt3DAnimation::attributeList()</target>
        </trans-unit>
        <trans-unit id="ebef6e5f5b7aec21820c769c56b7ee693afa5aba" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::attributeNames</source>
          <target state="translated">Qt3DAnimation::attributeNames</target>
        </trans-unit>
        <trans-unit id="5dc729e0c1600feb43d87e484d24112d42092f47" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::baseClip</source>
          <target state="translated">Qt3DAnimation::baseClip</target>
        </trans-unit>
        <trans-unit id="61a2dda7df16326e2feac231c271101ae5746f1a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::blendFactor</source>
          <target state="translated">Qt3DAnimation::blendFactor</target>
        </trans-unit>
        <trans-unit id="3ec1c24ea8a2363406dd88ae2ee33ee999e2ba57" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::blendTree</source>
          <target state="translated">Qt3DAnimation::blendTree</target>
        </trans-unit>
        <trans-unit id="d8be7026f5eb420460d6c83f098c9bcf439287dc" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::channelMapper</source>
          <target state="translated">Qt3DAnimation::channelMapper</target>
        </trans-unit>
        <trans-unit id="4f7015a0b8cad21b0b017d55f2b1d2bda06f78d4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::clip</source>
          <target state="translated">Qt3DAnimation::clip</target>
        </trans-unit>
        <trans-unit id="944913fe58689c5086e20ebb6ea048f790facf03" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::clipData()</source>
          <target state="translated">Qt3DAnimation::clipData()</target>
        </trans-unit>
        <trans-unit id="62d0b03c71669ce395d19bcd6a710053c0ed7f62" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::clock</source>
          <target state="translated">Qt3DAnimation::clock</target>
        </trans-unit>
        <trans-unit id="677ccc2647ab9fe5151bcfe2fd361f15fdb7bcf9" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::duration</source>
          <target state="translated">Qt3DAnimation::duration</target>
        </trans-unit>
        <trans-unit id="21bea4737e7e9862a28464c4a06ad6e1b145bcba" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::easing</source>
          <target state="translated">Qt3DAnimation::easing</target>
        </trans-unit>
        <trans-unit id="13ed843bd25c1acfd630be50cd9500e3e2da9692" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::endClip</source>
          <target state="translated">Qt3DAnimation::endClip</target>
        </trans-unit>
        <trans-unit id="b51e6b4f974ccf13aaa40dfdbbfe44396a6acfb0" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::endMode</source>
          <target state="translated">Qt3DAnimation::endMode</target>
        </trans-unit>
        <trans-unit id="5017e3155c00a7dbb3b55476321542b421f559c1" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::entity</source>
          <target state="translated">Qt3DAnimation::entity</target>
        </trans-unit>
        <trans-unit id="60773780fa137b17d092678665e5580f8d97bafb" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::framePositions</source>
          <target state="translated">Qt3DAnimation::framePositions</target>
        </trans-unit>
        <trans-unit id="72d4c754c8fd2a8123644f16ffc1dc8cd1910ac4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::fromGeometry()</source>
          <target state="translated">Qt3DAnimation::fromGeometry()</target>
        </trans-unit>
        <trans-unit id="d5037d6540fa5089412775fe68ece71092c5d321" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::getAnimationIndex()</source>
          <target state="translated">Qt3DAnimation::getAnimationIndex()</target>
        </trans-unit>
        <trans-unit id="f34100d366b52e5355df0f60543f6a416d9ae5c8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::getGroup()</source>
          <target state="translated">Qt3DAnimation::getGroup()</target>
        </trans-unit>
        <trans-unit id="e5828b694591de18695429c57f7e2ac2e46175d6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::getWeights()</source>
          <target state="translated">Qt3DAnimation::getWeights()</target>
        </trans-unit>
        <trans-unit id="9f2defad784ca293a5bdc3a73e4d33e62baa0b69" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::interpolator</source>
          <target state="translated">Qt3DAnimation::interpolator</target>
        </trans-unit>
        <trans-unit id="3f7d72598819cdcebdc7d69ac01b764e78b74e13" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::isRunning()</source>
          <target state="translated">Qt3DAnimation::isRunning()</target>
        </trans-unit>
        <trans-unit id="09ffc73def0b6e61a81369f42f8989dfc6473130" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::keyframeList()</source>
          <target state="translated">Qt3DAnimation::keyframeList()</target>
        </trans-unit>
        <trans-unit id="8652aca78cac5b0c30398e970b7e189dcda7df92" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::loopCount()</source>
          <target state="translated">Qt3DAnimation::loopCount()</target>
        </trans-unit>
        <trans-unit id="ca93b07077cd862d4ce67003205f3438063d2335" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::loops</source>
          <target state="translated">Qt3DAnimation::loops</target>
        </trans-unit>
        <trans-unit id="8fc217da32fb7965e8e2d07dcfb582e0b61b3d46" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::method</source>
          <target state="translated">Qt3DAnimation::method</target>
        </trans-unit>
        <trans-unit id="86e4756a2e872bf1c85993838e0bcb993fd831ae" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::morphTargetList()</source>
          <target state="translated">Qt3DAnimation::morphTargetList()</target>
        </trans-unit>
        <trans-unit id="d263a40c21bff2f9475f94c4ee64161b444f3159" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::name</source>
          <target state="translated">Qt3DAnimation::name</target>
        </trans-unit>
        <trans-unit id="dd92966da9470903acb14cc673441170f2c3e087" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::normalizedTime</source>
          <target state="translated">Qt3DAnimation::normalizedTime</target>
        </trans-unit>
        <trans-unit id="d617b55e473e302dd804c4ae85d97c31a6facd07" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::position</source>
          <target state="translated">Qt3DAnimation::position</target>
        </trans-unit>
        <trans-unit id="7e7b23fcf1e4859084efa1eec0da9d523287d611" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::positionOffset</source>
          <target state="translated">Qt3DAnimation::positionOffset</target>
        </trans-unit>
        <trans-unit id="d872131c8c91377d076a9605a1efa2bf289e3ef1" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::positionScale</source>
          <target state="translated">Qt3DAnimation::positionScale</target>
        </trans-unit>
        <trans-unit id="d646184454d8c366d5429c8ee93c16d5709254ad" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::recursive</source>
          <target state="translated">Qt3DAnimation::recursive</target>
        </trans-unit>
        <trans-unit id="f7a1abaa12bea4ed9475f391f2af5d516a493dae" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::removeAnimation()</source>
          <target state="translated">Qt3DAnimation::removeAnimation()</target>
        </trans-unit>
        <trans-unit id="b856082aff985bb27ecfed3095741ba1804238fe" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::removeAnimationGroup()</source>
          <target state="translated">Qt3DAnimation::removeAnimationGroup()</target>
        </trans-unit>
        <trans-unit id="c399c5dcef2e6d7b221204f234e72fb40d6220aa" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::removeAttribute()</source>
          <target state="translated">Qt3DAnimation::removeAttribute()</target>
        </trans-unit>
        <trans-unit id="ab3d0e2fe472090cd222ee8b8ab44615d0945868" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::removeKeyframe()</source>
          <target state="translated">Qt3DAnimation::removeKeyframe()</target>
        </trans-unit>
        <trans-unit id="e2c240e7c0e97dd4cbf972c3a6430c75a09ea751" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::removeMorphTarget()</source>
          <target state="translated">Qt3DAnimation::removeMorphTarget()</target>
        </trans-unit>
        <trans-unit id="cfb3bf1a66f97b85a6850d397306c144652b2cd4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::running</source>
          <target state="translated">Qt3DAnimation::running</target>
        </trans-unit>
        <trans-unit id="f602e5f81fc41bbd6fb7d00838ce0236654e541d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setAnimationGroups()</source>
          <target state="translated">Qt3DAnimation::setAnimationGroups()</target>
        </trans-unit>
        <trans-unit id="6c6e3633a799603f0a7b812d526d6aedd8941836" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setAnimations()</source>
          <target state="translated">Qt3DAnimation::setAnimations()</target>
        </trans-unit>
        <trans-unit id="66b22401cc91e5369da2d9bc411b8914f5f050dd" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setAttributes()</source>
          <target state="translated">Qt3DAnimation::setAttributes()</target>
        </trans-unit>
        <trans-unit id="45d7e12ecdd02e154964462ee96ba913e858fd25" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setCallback()</source>
          <target state="translated">Qt3DAnimation::setCallback()</target>
        </trans-unit>
        <trans-unit id="eac92786f30ddd018542c330cca0341b0443d2d6" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setClipData()</source>
          <target state="translated">Qt3DAnimation::setClipData()</target>
        </trans-unit>
        <trans-unit id="084583be39da4ecbc046a601baeaa61e95b2ccf4" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setDuration()</source>
          <target state="translated">Qt3DAnimation::setDuration()</target>
        </trans-unit>
        <trans-unit id="ac7735df4fbe6d0a6cbce5a3db689e378bfe4bac" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setKeyframes()</source>
          <target state="translated">Qt3DAnimation::setKeyframes()</target>
        </trans-unit>
        <trans-unit id="e27ba2e01d2dbef16586c0b226bade9b9f589df3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setMorphTargets()</source>
          <target state="translated">Qt3DAnimation::setMorphTargets()</target>
        </trans-unit>
        <trans-unit id="e2f1e5ac8ddf62a7c9a1773d14658db829ca9dd3" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::setWeights()</source>
          <target state="translated">Qt3DAnimation::setWeights()</target>
        </trans-unit>
        <trans-unit id="fb0b21e2ceaa37955baef0c1111f77f67a58a78c" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::source</source>
          <target state="translated">Qt3DAnimation::source</target>
        </trans-unit>
        <trans-unit id="69df9c71bdcd583ce52a5ff5f9447e587cb5cb39" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::start()</source>
          <target state="translated">Qt3DAnimation::start()</target>
        </trans-unit>
        <trans-unit id="6e7f11dfc4cfa995d1a33db87b62409c087bcf58" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::startClip</source>
          <target state="translated">Qt3DAnimation::startClip</target>
        </trans-unit>
        <trans-unit id="df6757c32818e1b8c97032983d64fe53293cbd9e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::startMode</source>
          <target state="translated">Qt3DAnimation::startMode</target>
        </trans-unit>
        <trans-unit id="94e35368b18d91a6b3750ac456f458d99e162a26" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::status</source>
          <target state="translated">Qt3DAnimation::status</target>
        </trans-unit>
        <trans-unit id="fe463b6691fbd22c6757fae224fa5a69c4c762a5" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::status()</source>
          <target state="translated">Qt3DAnimation::status()</target>
        </trans-unit>
        <trans-unit id="99b631dfe5034455a8b652b2a348aa1ee5c0a1f8" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::stop()</source>
          <target state="translated">Qt3DAnimation::stop()</target>
        </trans-unit>
        <trans-unit id="ed047362a9cc0d6df1be37d252d121822a25fa7b" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::target</source>
          <target state="translated">Qt3DAnimation::target</target>
        </trans-unit>
        <trans-unit id="bdcb7d3a28bb86911985786ac64d1aeb4f69d617" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::targetName</source>
          <target state="translated">Qt3DAnimation::targetName</target>
        </trans-unit>
        <trans-unit id="629a6dcea713e12875be33a4cbac4d3c3d455c6e" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::targetPositions</source>
          <target state="translated">Qt3DAnimation::targetPositions</target>
        </trans-unit>
        <trans-unit id="2cd08d536cf7d75640aba8e728add64dc4c8cc7a" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::valueChanged()</source>
          <target state="translated">Qt3DAnimation::valueChanged()</target>
        </trans-unit>
        <trans-unit id="7c1b4a133515636d7f297862ed0ea7d32f7ec88d" translate="yes" xml:space="preserve">
          <source>Qt3DAnimation::~QAbstractAnimationClip()</source>
          <target state="translated">Qt3DAnimation::~QAbstractAnimationClip()</target>
        </trans-unit>
        <trans-unit id="ef12cfd1d4a8376c2fbfbb1bcf0b9afbb5712e79" translate="yes" xml:space="preserve">
          <source>Qt3DCore</source>
          <target state="translated">Qt3DCore</target>
        </trans-unit>
        <trans-unit id="9d37444b5e1bc7dfecc1c20b87f148e878d601da" translate="yes" xml:space="preserve">
          <source>Qt3DCore (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45decb414314693bdd85f58f0eab471f3bd42585" translate="yes" xml:space="preserve">
          <source>Qt3DCore Namespace</source>
          <target state="translated">Qt3DCore命名空间</target>
        </trans-unit>
        <trans-unit id="d9ca93144d7ddf1f35f6e8b2e86a217a3a261b34" translate="yes" xml:space="preserve">
          <source>Qt3DCore::ChangeFlag</source>
          <target state="translated">Qt3DCore::ChangeFlag</target>
        </trans-unit>
        <trans-unit id="d0ec4761c9149f840f866122d875d18fff3efca0" translate="yes" xml:space="preserve">
          <source>Qt3DCore::CommandId (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a9197061b4471182298ed288a7a0f93036b30c" translate="yes" xml:space="preserve">
          <source>Qt3DCore::Mode (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aeefe51f89d0834bd8ce76106d44aded2745b8" translate="yes" xml:space="preserve">
          <source>Qt3DCore::PropertyTrackingMode (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f40d63547864e5d3021ffa01de151fefafe862" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect</source>
          <target state="translated">Qt3DCore::QAbstractAspect</target>
        </trans-unit>
        <trans-unit id="fa8c1befc4251d2994c69ef51c377f864ebd3e09" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect (class)</source>
          <target state="translated">Qt3DCore::QAbstractAspect (class)</target>
        </trans-unit>
        <trans-unit id="c5c40d69c3cf8f927ae041e4d488ee82b30eff01" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86820458e28204b0b8730f7e17943597f94d0edb" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect()</source>
          <target state="translated">Qt3DCore::QAbstractAspect()</target>
        </trans-unit>
        <trans-unit id="98173cfe3e8baa6ab8319e579b296463661a2906" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect::QAbstractAspect()</source>
          <target state="translated">Qt3DCore::QAbstractAspect::QAbstractAspect()</target>
        </trans-unit>
        <trans-unit id="bd0adce9e2e38908e8cf639dfdc4caa90fc0c04e" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect::QAspectJobPtr (typedef)</source>
          <target state="translated">Qt3DCore::QAbstractAspect::QAspectJobPtr (typedef)</target>
        </trans-unit>
        <trans-unit id="239a1b49f5859058f198876326e59e8b51aae1e8" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect::QBackendNodeMapperPtr (typedef)</source>
          <target state="translated">Qt3DCore::QAbstractAspect::QBackendNodeMapperPtr (typedef)</target>
        </trans-unit>
        <trans-unit id="c84a6c5ce732f43860555b545e053cc51959bccf" translate="yes" xml:space="preserve">
          <source>Qt3DCore::QAbstractAspect::QT3D_REGISTER_ASPECT()</source>
          <target state="translated">Qt3DCore::QAbstractAspect::QT3D_REGISTER_ASPECT()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
