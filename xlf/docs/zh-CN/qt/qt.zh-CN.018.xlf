<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="3793a2e9f06b0cbbfbffa7fd17ea8bc6aaae3d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::panRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: panRotation（float</target>
        </trans-unit>
        <trans-unit id="776e81a3027ce6924847bd6939de75d24672687c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::rollRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: rollRotation（float</target>
        </trans-unit>
        <trans-unit id="d548af2b8f7337d29b4e613e3cf5981baca1792e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::rotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: rotation（浮动</target>
        </trans-unit>
        <trans-unit id="1b47771e2949dd7727f302264c2e128753e28bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::tiltRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: tiltRotation（float</target>
        </trans-unit>
        <trans-unit id="034f3b1c3614bfd6e54c8cc12a5d3b85d1354247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QScatterDataItem::rotation() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QScatterDataItem :: rotation（）const</target>
        </trans-unit>
        <trans-unit id="0e48f35765ef93c7c5563f9597ea576dffbd1746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt;, &lt;a href=&quot;qml-qtqml-qt#quaternion-method&quot;&gt;quaternion&lt;/a&gt; -&amp;gt; vec4, scalar value is &lt;code&gt;w&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt;，&lt;a href=&quot;qml-qtqml-qt#quaternion-method&quot;&gt;四元数&lt;/a&gt;-&amp;gt; vec4，标量值为 &lt;code&gt;w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c45fee170a1ca6a717e7eca980df09034504578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator*=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator * =（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="84b321b3653292001af932e534795d287ddba42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator*=(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;和QQuaternion :: operator * =（float</target>
        </trans-unit>
        <trans-unit id="58abe5c27f3f8da8ebad7d3462b346921b01e024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator+=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator + =（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="86b586f7d93decc0afd41101da428f4c10fd64c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator-=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator-=（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a4e16c37848172c0e8b13d8b2de032eb7e3801fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator/=(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;和QQuaternion :: operator / =（float</target>
        </trans-unit>
        <trans-unit id="e5201c589f126cda0292bbee909c0a8fa6142189" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::conjugated() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: conjugated（）const</target>
        </trans-unit>
        <trans-unit id="1a573cdca8ef7ef61d3f69deb9afa166d00c8dfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::inverted() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: inverted（）const</target>
        </trans-unit>
        <trans-unit id="cef701b143aa7ce5e35fa63a12d20895ac255615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: normalized（）const</target>
        </trans-unit>
        <trans-unit id="d03e0ac8e515438d5c14daa7e3b8dcabb0b7569f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; inherits from &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;. All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the queue is empty, and you can traverse a &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; using &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt;). But in addition, &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; provides three convenience functions that make it easy to implement FIFO semantics: &lt;a href=&quot;qqueue#enqueue&quot;&gt;enqueue&lt;/a&gt;(), &lt;a href=&quot;qqueue#dequeue&quot;&gt;dequeue&lt;/a&gt;(), and &lt;a href=&quot;qqueue#head&quot;&gt;head&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;从&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;继承。&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;的所有功能也适用于&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;。例如，可以使用&lt;a href=&quot;qlist#isEmpty&quot;&gt;的isEmpty&lt;/a&gt;（）来检验队列是否是空的，并且可以遍历一个&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;使用&lt;a href=&quot;qlist&quot;&gt;的QList&lt;/a&gt;的迭代器类（例如，&lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt;）。但是，此外，&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;提供了三个便利功能，可轻松实现FIFO语义：&lt;a href=&quot;qqueue#enqueue&quot;&gt;enqueue&lt;/a&gt;（），&lt;a href=&quot;qqueue#dequeue&quot;&gt;dequeue&lt;/a&gt;（）和&lt;a href=&quot;qqueue#head&quot;&gt;head&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a409efd81f20c775f8e9f213a5c5eaaac4dce861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60d2fa1b6b0d0deb1e88a0743f5830e0fffd513c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It implements a queue data structure for items of a same type.</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; &amp;lt;T&amp;gt;是Qt的通用&lt;a href=&quot;containers#&quot;&gt;容器类之一&lt;/a&gt;。它为相同类型的项目实现队列数据结构。</target>
        </trans-unit>
        <trans-unit id="c8720c667ff1df3d64d0dae7613a6f2c808a4246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;'s value type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. This covers most data types that are commonly used, but the compiler won't let you, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value. Use &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;* instead.</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;的值类型必须是&lt;a href=&quot;containers#assignable-data-type&quot;&gt;可分配的数据类型&lt;/a&gt;。这涵盖了大多数常用的数据类型，但是编译器不允许您例如将&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;存储为值。改用&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *。</target>
        </trans-unit>
        <trans-unit id="e0c8e0fa21782ca3affdfb6be725b710325dff31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3d#idealSurfaceFormat&quot;&gt;QQuick3D::idealSurfaceFormat&lt;/a&gt; - used to get the ideal surface format</source>
          <target state="translated">&lt;a href=&quot;qquick3d#idealSurfaceFormat&quot;&gt;QQuick3D :: idealSurfaceFormat-&lt;/a&gt;用于获取理想的表面格式</target>
        </trans-unit>
        <trans-unit id="32997eb9a41c2e71e80ef147926d57028d08b613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt; - Subclass to create procedural mesh data</source>
          <target state="translated">&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry-&lt;/a&gt;创建程序网格数据的子类</target>
        </trans-unit>
        <trans-unit id="01a62a885a2ae10dba253035bc9a586a91e40903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt; and &lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt;和&lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b31a86467d1b284ca2d318a38e632e7613624e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt;, &lt;a href=&quot;qml-qtquick3d-model#geometry-prop&quot;&gt;Model::geometry&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt;，&lt;a href=&quot;qml-qtquick3d-model#geometry-prop&quot;&gt;模型:: geometry&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="543c8b5707d60608fd44a7fedab3cbe10e82b88a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt; - Subclass to create procedural texture data</source>
          <target state="translated">&lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData-&lt;/a&gt;创建程序纹理数据的子类</target>
        </trans-unit>
        <trans-unit id="aa40c6e171c54cea32d51160d569fce0d13cdcf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt;, &lt;a href=&quot;qml-qtquick3d-texture#textureData-prop&quot;&gt;Texture::textureData&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt;, &lt;a href=&quot;qml-qtquick3d-texture#textureData-prop&quot;&gt;Texture::textureData&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4dc0211252364e34264832f068984c387274fb46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquick3dtexturedata#Format-enum&quot;&gt;QQuick3DTextureData::Format&lt;/a&gt; QQuick3DTextureData::format() const</source>
          <target state="translated">&lt;a href=&quot;qquick3dtexturedata#Format-enum&quot;&gt;QQuick3DTextureData::Format&lt;/a&gt; QQuick3DTextureData::format() const</target>
        </trans-unit>
        <trans-unit id="6e9c9a724dec031e0bb96e6f013014e2dbcc36e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; and &lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;和&lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06f160734d3f622af78db61e4a2a3530ff871727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickgraphicsconfiguration&quot;&gt;QQuickGraphicsConfiguration&lt;/a&gt; instances are implicitly shared, copyable, and can be passed by value.</source>
          <target state="translated">&lt;a href=&quot;qquickgraphicsconfiguration&quot;&gt;QQuickGraphicsConfiguration&lt;/a&gt;实例是隐式共享的，可复制的，并且可以按值传递。</target>
        </trans-unit>
        <trans-unit id="b2760b50f59f291518ee5763d6f61441103e0e9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickgraphicsdevice&quot;&gt;QQuickGraphicsDevice&lt;/a&gt; instances are implicitly shared, copyable, and can be passed by value. They do not own the associated native objects (such as, the ID3D11Device in the example).</source>
          <target state="translated">&lt;a href=&quot;qquickgraphicsdevice&quot;&gt;QQuickGraphicsDevice&lt;/a&gt;实例是隐式共享的，可复制的，并且可以按值传递。它们不拥有关联的本机对象（例如，示例中的ID3D11Device）。</target>
        </trans-unit>
        <trans-unit id="b69b755d6eba395578ffd13a74b457a079a659cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; is used to provide advanced image loading features in QML applications. It allows images in QML to be:</source>
          <target state="translated">&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt;用于在QML应用程序中提供高级图像加载功能。它允许QML中的图像为：</target>
        </trans-unit>
        <trans-unit id="f8542b7ddc64a6ff5755dce1915766ed2dfacbe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickView::rootObject() const</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickView :: rootObject（）常量</target>
        </trans-unit>
        <trans-unit id="d0e56bcd8c226647ea767e374e1620325e7f5400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickWidget::rootObject() const</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickWidget :: rootObject（）常量</target>
        </trans-unit>
        <trans-unit id="c3542b6588907130b436595c0610bd5f969d6f8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickWindow::mouseGrabberItem() const</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickWindow :: mouseGrabberItem（）const</target>
        </trans-unit>
        <trans-unit id="7531615ca878bd31fdc8e9dcc140974f2eaa2e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclasses that use scene graph nodes in combination with custom materials built by subclassing &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;&lt;/a&gt;使用场景图节点的QQuickItem子类与通过子类&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;构建的自定义材质结合使用。</target>
        </trans-unit>
        <trans-unit id="36522853006faeea443ab9ea7ee3f1465e03ecac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;, the basic visual element of the Qt Quick module, inherits from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, but has a concept of the</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;是Qt Quick模块的基本视觉元素，它继承自&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;，但具有</target>
        </trans-unit>
        <trans-unit id="ba1721b7c825845c51003dcb8c8494f3e9141ed5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::Flags&lt;/a&gt; QQuickItem::flags() const</source>
          <target state="translated">&lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem :: Flags&lt;/a&gt; QQuickItem :: flags（）const</target>
        </trans-unit>
        <trans-unit id="3755402695275d703da6720a2b25746ef2f9b7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *ItemChangeData::item</source>
          <target state="translated">&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; * ItemChangeData :: item</target>
        </trans-unit>
        <trans-unit id="d85d305202a146779e881f9398cf4bd95510bb85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickItem::childAt(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickItem :: childAt（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9602976344b594d961b50b69c97236e8f7a3bc8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickItem::childAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickItem::childAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="157323363bbdff31eb946b4e3da23cda0c43e8a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickItem::nextItemInFocusChain(bool</source>
          <target state="translated">&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickItem :: nextItemInFocusChain（bool</target>
        </trans-unit>
        <trans-unit id="f3eddd031a5cf4bd6e951683c076a8ff1e1d7ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *QQuickItem::scopedFocusItem() const</source>
          <target state="translated">&lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; * QQuickItem :: scopedFocusItem（）const</target>
        </trans-unit>
        <trans-unit id="9e3101fdead06cfca796e9aaa025814353248b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt; will be set to &lt;a href=&quot;qml-qtquick-wheelhandler#rotation-prop&quot;&gt;rotation&lt;/a&gt;. If &lt;a href=&quot;qml-qtquick-wheelhandler#targetTransformAroundCursor-prop&quot;&gt;targetTransformAroundCursor&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, the l{&lt;a href=&quot;qquickitem#x-prop&quot;&gt;QQuickItem::x&lt;/a&gt;}{x} and &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt; properties will be simultaneously adjusted so that the user will effectively rotate the item around the point under the mouse cursor.</source>
          <target state="translated">&lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;旋转&lt;/a&gt;将设置为&lt;a href=&quot;qml-qtquick-wheelhandler#rotation-prop&quot;&gt;旋转&lt;/a&gt;。如果&lt;a href=&quot;qml-qtquick-wheelhandler#targetTransformAroundCursor-prop&quot;&gt;targetTransformAroundCursor&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ，则将同时调整l { &lt;a href=&quot;qquickitem#x-prop&quot;&gt;QQuickItem :: x&lt;/a&gt; } {x}和&lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;属性，以便用户有效地围绕鼠标光标下的点旋转该项目。</target>
        </trans-unit>
        <trans-unit id="1d83a6247d23127b38dd127f7d3a569efb654c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt; will be modified in a non-linear fashion as described under &lt;a href=&quot;qml-qtquick-wheelhandler#targetScaleMultiplier-prop&quot;&gt;targetScaleMultiplier&lt;/a&gt;. If &lt;a href=&quot;qml-qtquick-wheelhandler#targetTransformAroundCursor-prop&quot;&gt;targetTransformAroundCursor&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt; properties will be simultaneously adjusted so that the user will effectively zoom into or out of the point under the mouse cursor.</source>
          <target state="translated">&lt;a href=&quot;qquickitem#scale-prop&quot;&gt;规模&lt;/a&gt;将在非线性方式下所描述的被修改&lt;a href=&quot;qml-qtquick-wheelhandler#targetScaleMultiplier-prop&quot;&gt;targetScaleMultiplier&lt;/a&gt;。如果&lt;a href=&quot;qml-qtquick-wheelhandler#targetTransformAroundCursor-prop&quot;&gt;targetTransformAroundCursor&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ，则将同时调整&lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt;和&lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;属性，以便用户有效地放大或缩小鼠标光标下方的点。</target>
        </trans-unit>
        <trans-unit id="9b131181eb608cfb064d9c9d63cacf955398dc84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem::PerformanceHints&lt;/a&gt; QQuickPaintedItem::performanceHints() const</source>
          <target state="translated">&lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem :: PerformanceHints&lt;/a&gt; QQuickPaintedItem :: performanceHints（）const</target>
        </trans-unit>
        <trans-unit id="8c772713eb6893d6392f75267c6769d2f9db5c11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickrendercontrol#renderRequested&quot;&gt;QQuickRenderControl::renderRequested&lt;/a&gt;() Indicates that the scene has to be rendered by calling &lt;a href=&quot;qquickrendercontrol#render&quot;&gt;render&lt;/a&gt;(). After making the context current, applications are expected to call &lt;a href=&quot;qquickrendercontrol#render&quot;&gt;render&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qquickrendercontrol#renderRequested&quot;&gt;QQuickRenderControl :: renderRequested&lt;/a&gt;（）指示必须通过调用&lt;a href=&quot;qquickrendercontrol#render&quot;&gt;render&lt;/a&gt;（）来渲染场景。在使上下文成为当前上下文之后，应用程序应调用&lt;a href=&quot;qquickrendercontrol#render&quot;&gt;render&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="92e7c26961c09cba1dedaea47e2cdf4e98d6888e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickrendercontrol#sceneChanged&quot;&gt;QQuickRenderControl::sceneChanged&lt;/a&gt;() Indicates that the scene has changed meaning that, before rendering, polishing and synchronizing is also necessary.</source>
          <target state="translated">&lt;a href=&quot;qquickrendercontrol#sceneChanged&quot;&gt;QQuickRenderControl :: sceneChanged&lt;/a&gt;（）表示场景已更改，这意味着在渲染，抛光和同步之前也是必需的。</target>
        </trans-unit>
        <trans-unit id="f82b2b4b668848495bea14d8c41315e6dd0c7d37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt; provides API for querying and configuring the application &lt;a href=&quot;qtquickcontrols2-styles#&quot;&gt;styles&lt;/a&gt; of Qt Quick Controls 2.</source>
          <target state="translated">&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt;提供用于查询和配置Qt Quick Controls 2 的应用程序&lt;a href=&quot;qtquickcontrols2-styles#&quot;&gt;样式&lt;/a&gt;的API 。</target>
        </trans-unit>
        <trans-unit id="e57fa5664d0e140eb40a49de7a1adb4ff9550931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt; provides C++ API for configuring a specific style. The following example runs a Qt Quick Controls 2 application with the Material style:</source>
          <target state="translated">&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt;提供了用于配置特定样式的C ++ API。以下示例使用Material样式运行Qt Quick Controls 2应用程序：</target>
        </trans-unit>
        <trans-unit id="f0f7c88a238de74d115591ca229118a313002b8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt; provides C++ API for configuring a specific style. The following example runs a Qt Quick Controls application with the Material style:</source>
          <target state="translated">&lt;a href=&quot;qquickstyle&quot;&gt;QQuickStyle&lt;/a&gt;提供了用于配置特定样式的C ++ API。以下示例使用Material样式运行Qt Quick Controls应用程序：</target>
        </trans-unit>
        <trans-unit id="76d986a0026f5abf36a317bec85acacc999df5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickstyle#setStyle&quot;&gt;QQuickStyle::setStyle&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qquickstyle#setStyle&quot;&gt;QQuickStyle::setStyle&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="55c3a2d8f86cce09a9b3ae76c5a1727d44106aec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; also manages sizing of the view and root object. By default, the &lt;a href=&quot;qquickview#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt; is &lt;a href=&quot;qquickview#ResizeMode-enum&quot;&gt;SizeViewToRootObject&lt;/a&gt;, which will load the component and resize it to the size of the view. Alternatively the &lt;a href=&quot;qquickview#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt; may be set to &lt;a href=&quot;qquickview#ResizeMode-enum&quot;&gt;SizeRootObjectToView&lt;/a&gt; which will resize the view to the size of the root object.</source>
          <target state="translated">&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;还管理视图和根对象的大小。默认情况下，&lt;a href=&quot;qquickview#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt;为&lt;a href=&quot;qquickview#ResizeMode-enum&quot;&gt;SizeViewToRootObject&lt;/a&gt;，它将加载组件并将其调整为视图的大小。或者，可以将&lt;a href=&quot;qquickview#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt;设置为&lt;a href=&quot;qquickview#ResizeMode-enum&quot;&gt;SizeRootObjectToView&lt;/a&gt;，这会将视图大小调整为根对象的大小。</target>
        </trans-unit>
        <trans-unit id="b12dd4ae273a869ebd74c0996f1a2612ddf39010" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; also manages sizing of the view and root object. By default, the &lt;a href=&quot;qquickwidget#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt; is &lt;a href=&quot;qquickwidget#ResizeMode-enum&quot;&gt;SizeViewToRootObject&lt;/a&gt;, which will load the component and resize it to the size of the view. Alternatively the &lt;a href=&quot;qquickwidget#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt; may be set to &lt;a href=&quot;qquickwidget#ResizeMode-enum&quot;&gt;SizeRootObjectToView&lt;/a&gt; which will resize the view to the size of the root object.</source>
          <target state="translated">&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;还管理视图和根对象的大小。默认情况下，&lt;a href=&quot;qquickwidget#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt;为&lt;a href=&quot;qquickwidget#ResizeMode-enum&quot;&gt;SizeViewToRootObject&lt;/a&gt;，它将加载组件并将其调整为视图的大小。或者，可以将&lt;a href=&quot;qquickwidget#resizeMode-prop&quot;&gt;resizeMode&lt;/a&gt;设置为&lt;a href=&quot;qquickwidget#ResizeMode-enum&quot;&gt;SizeRootObjectToView&lt;/a&gt;，这会将视图调整为根对象的大小。</target>
        </trans-unit>
        <trans-unit id="ddc7fcb7f2b3bec6225fa5af19a1583f732eff4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; and its underlying OpenGL-based compositing architecture is not supported. If you need to mix with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based user interfaces, use &lt;a href=&quot;qwidget#createWindowContainer&quot;&gt;QWidget::createWindowContainer&lt;/a&gt;() to embed the native window of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquickwidget&quot;&gt;&lt;/a&gt;不支持QQuickWidget及其基础的基于OpenGL的合成体系结构。如果需要与基于&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;的用户界面混合使用，请使用&lt;a href=&quot;qwidget#createWindowContainer&quot;&gt;QWidget :: createWindowContainer&lt;/a&gt;（）嵌入&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;或&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;的本机窗口。</target>
        </trans-unit>
        <trans-unit id="d2907f0a7e9c12738dadc293f8b1aec9d20d1b8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; honors &lt;a href=&quot;qquickwindow#isPersistentSceneGraph&quot;&gt;QQuickWindow::isPersistentSceneGraph&lt;/a&gt;(), meaning that applications can decide - by calling &lt;a href=&quot;qquickwindow#setPersistentSceneGraph&quot;&gt;QQuickWindow::setPersistentSceneGraph&lt;/a&gt;() on the window returned from the &lt;a href=&quot;qquickwidget#quickWindow&quot;&gt;quickWindow&lt;/a&gt;() function - to let scenegraph nodes and other Qt Quick scene related resources be released whenever the widget becomes hidden. By default persistency is enabled, just like with &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;荣誉&lt;a href=&quot;qquickwindow#isPersistentSceneGraph&quot;&gt;QQuickWindow :: isPersistentSceneGraph&lt;/a&gt;（），这意味着应用程序可以决定-通过调用&lt;a href=&quot;qquickwindow#setPersistentSceneGraph&quot;&gt;QQuickWindow :: setPersistentSceneGraph&lt;/a&gt;从返回的窗口（）&lt;a href=&quot;qquickwidget#quickWindow&quot;&gt;quickWindow&lt;/a&gt;（）函数-让场景图节点和其他Qt Quick的场景相关的资源被释放每当小部件变得隐藏起来。默认情况下启用持久性，就像&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd38d6d5e54a812293c94c21a782ea5a5db7bcb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; *ItemChangeData::window</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; * ItemChangeData :: window</target>
        </trans-unit>
        <trans-unit id="807774978ca4a8ad488c535fd230126a75d9a909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; *QQuickItem::window() const</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; * QQuickItem :: window（）const</target>
        </trans-unit>
        <trans-unit id="671d1a76aa344c65a9ea902c644b8b3e39fbc374" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; *QQuickWidget::quickWindow() const</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; * QQuickWidget :: quickWindow（）const</target>
        </trans-unit>
        <trans-unit id="853dfc1bb5f5696961b453ee8aa112236555df61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; and &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; and their associated internal render loops render the Qt Quick scene onto a native window. In some cases, for example when integrating with 3rd party OpenGL renderers, it might be beneficial to get the scene into a texture that can then be used in arbitrary ways by the external rendering engine. &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; makes this possible in a hardware accelerated manner, unlike the performance-wise limited alternative of using &lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow::grabWindow&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;和&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;及其关联的内部渲染循环将Qt Quick场景渲染到本机窗口上。在某些情况下，例如，当与第三方OpenGL渲染器集成时，使场景进入可以由外部渲染引擎以任意方式使用的纹理可能是有益的。与使用&lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow :: grabWindow&lt;/a&gt;（）的性能方面有限的替代方法不同，&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;以硬件加速的方式使之成为可能。</target>
        </trans-unit>
        <trans-unit id="6cc405d340136dc0cea4a5cf35dcc94a60cc21ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; and &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; and their associated internal render loops render the Qt Quick scene onto a native window. In some cases, for example when integrating with 3rd party OpenGL renderers, it might be beneficial to get the scene into a texture that can then be used in arbitrary ways by the external rendering engine. QQuickRenderControl makes this possible in a hardware accelerated manner, unlike the performance-wise limited alternative of using &lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow::grabWindow&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;和&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;及其关联的内部渲染循环将Qt Quick场景渲染到本机窗口上。在某些情况下，例如，当与第三方OpenGL渲染器集成时，使场景成为可以随后由外部渲染引擎以任意方式使用的纹理可能是有益的。QQuickRenderControl以硬件加速的方式使之成为可能，这与使用&lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow :: grabWindow&lt;/a&gt;（）的性能方面的有限替代方法不同。</target>
        </trans-unit>
        <trans-unit id="c526f239aed31d0073e517295aaff54728b6bd81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; and &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; and their associated internal render loops render the Qt Quick scene onto a native window. In some cases, for example when integrating with 3rd party OpenGL, Vulkan, Metal, or Direct 3D renderers, it can be useful to get the scene into a texture that can then be used in arbitrary ways by the external rendering engine. Such a mechanism is also essential when integrating with a VR framework. QQuickRenderControl makes this possible in a hardware accelerated manner, unlike the performance-wise limited alternative of using &lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow::grabWindow&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;和&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;及其关联的内部渲染循环将Qt Quick场景渲染到本机窗口上。在某些情况下，例如，当与第三方OpenGL，Vulkan，Metal或Direct 3D渲染器集成时，将场景置于可以随后由外部渲染引擎以任意方式使用的纹理中可能会很有用。与VR框架集成时，这种机制也是必不可少的。QQuickRenderControl以硬件加速的方式使之成为可能，这与使用&lt;a href=&quot;qquickwindow#grabWindow&quot;&gt;QQuickWindow :: grabWindow&lt;/a&gt;（）的性能方面的有限替代方法不同。</target>
        </trans-unit>
        <trans-unit id="3427708d1c77ceac56c8b1d2f4074fd676778629" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; provides the graphical scene management needed to interact with and display a scene of QQuickItems.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;提供了与QQuickItems交互并显示其场景所需的图形场景管理。</target>
        </trans-unit>
        <trans-unit id="1c7d8103e91967e6220a8dd5dd8751eed6cc50ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; uses a scene graph to represent what needs to be rendered. This scene graph is disconnected from the QML scene and potentially lives in another thread, depending on the platform implementation. Since the rendering scene graph lives independently from the QML scene, it can also be completely released without affecting the state of the QML scene.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;使用场景图来表示需要呈现的内容。该场景图与QML场景断开连接，并可能存在于另一个线程中，具体取决于平台的实现。由于渲染场景图独立于QML场景而存在，因此它也可以完全释放而不会影响QML场景的状态。</target>
        </trans-unit>
        <trans-unit id="48efcff1911a8811ce43bde80f49dee8114fad68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow#openglContext&quot;&gt;QQuickWindow::openglContext&lt;/a&gt;() will still return 0 for this window until after the &lt;a href=&quot;qquickwindow#sceneGraphInitialized&quot;&gt;QQuickWindow::sceneGraphInitialized&lt;/a&gt;() has been emitted.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow#openglContext&quot;&gt;QQuickWindow :: openglContext&lt;/a&gt;（）仍将此窗口返回0，直到后&lt;a href=&quot;qquickwindow#sceneGraphInitialized&quot;&gt;QQuickWindow :: sceneGraphInitialized&lt;/a&gt;（）已发出。</target>
        </trans-unit>
        <trans-unit id="99c9578677300dab45038f43c0878aef1d478263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow#openglContext&quot;&gt;QQuickWindow::openglContext&lt;/a&gt;() will still return 0 for this window until after the QQuickWindow::sceneGraphInitialize() has been emitted.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow#openglContext&quot;&gt;QQuickWindow :: openglContext&lt;/a&gt;（）仍将为此窗口返回0，直到发出QQuickWindow :: sceneGraphInitialize（）之后。</target>
        </trans-unit>
        <trans-unit id="ceeb1995cb4327e6366b99b26a155cccde0ca006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow#sceneGraphInitialized&quot;&gt;QQuickWindow::sceneGraphInitialized&lt;/a&gt;() Emitted at some point after calling &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;QQuickRenderControl::initialize&lt;/a&gt;(). Upon this signal, the application is expected to create its framebuffer object and associate it with the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow#sceneGraphInitialized&quot;&gt;QQuickWindow :: sceneGraphInitialized&lt;/a&gt;（）在调用&lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;QQuickRenderControl :: initialize&lt;/a&gt;（）之后的某个时刻发出。根据此信号，应用程序应创建其帧缓冲区对象，并将其与&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;关联。</target>
        </trans-unit>
        <trans-unit id="4a8d45c9ecb90e3f1045faa074c398abaff16c8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquickwindow#sceneGraphInvalidated&quot;&gt;QQuickWindow::sceneGraphInvalidated&lt;/a&gt;() When the scenegraph resources are released, the framebuffer object can be destroyed too.</source>
          <target state="translated">&lt;a href=&quot;qquickwindow#sceneGraphInvalidated&quot;&gt;QQuickWindow :: sceneGraphInvalidated&lt;/a&gt;（）释放场景图资源时，也可以销毁帧缓冲区对象。</target>
        </trans-unit>
        <trans-unit id="f30e31592f1206da6bb55099fd9ea556e3eff8c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt; (2) provides a radio button with a text or pixmap label.</source>
          <target state="translated">&lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;（2）提供带有文本或像素图标签的单选按钮。</target>
        </trans-unit>
        <trans-unit id="6b2d69ef4a3dae13ad64e4a84b1a3b69dba55db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qradiodata#Error-enum&quot;&gt;QRadioData::Error&lt;/a&gt; QRadioData::error() const</source>
          <target state="translated">&lt;a href=&quot;qradiodata#Error-enum&quot;&gt;QRadioData :: Error&lt;/a&gt; QRadioData :: error（）常量</target>
        </trans-unit>
        <trans-unit id="2dd72899b0c0bae0bd128ca59feb01499ac94e09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qradiotuner#Error-enum&quot;&gt;QRadioTuner::Error&lt;/a&gt; QRadioTuner::error() const</source>
          <target state="translated">&lt;a href=&quot;qradiotuner#Error-enum&quot;&gt;QRadioTuner :: Error&lt;/a&gt; QRadioTuner :: error（）常量</target>
        </trans-unit>
        <trans-unit id="651d725f717fb0441d79eb4399a5e9d454bc145e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; does not support seeding from another seed sequence-like class besides std::seed_seq itself;</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;除了std :: seed_seq本身之外，不支持从另一个类似于种子序列的类进行播种；</target>
        </trans-unit>
        <trans-unit id="01c7e5ce0c064ae38b702265e158bf306f2cb097" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; is also compatible with the uniform distribution classes &lt;code&gt;std::uniform_int_distribution&lt;/code&gt; and &lt;code&gt;std:uniform_real_distribution&lt;/code&gt;, as well as the free function &lt;code&gt;std::generate_canonical&lt;/code&gt;. For example, the following code may be used to generate a floating-point number in the range [1, 2.5):</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;也与统一分发类 &lt;code&gt;std::uniform_int_distribution&lt;/code&gt; 和 &lt;code&gt;std:uniform_real_distribution&lt;/code&gt; 以及自由函数 &lt;code&gt;std::generate_canonical&lt;/code&gt; 兼容。例如，以下代码可用于生成范围为[1，2.5）的浮点数：</target>
        </trans-unit>
        <trans-unit id="dc2418b1fcccbc852eb7dca314fa965584896caa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; is modeled after the requirements for random number engines in the C++ Standard Library and may be used in almost all contexts that the Standard Library engines can. Exceptions to the requirements are the following:</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;是根据C ++标准库中对随机数引擎的要求建模的，并且可以在标准库引擎可以使用的几乎所有上下文中使用。要求的例外情况如下：</target>
        </trans-unit>
        <trans-unit id="bec33c0fe22a60c88f250ecc5be2d96a212f06ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; is not comparable (but is copyable) or streamable to &lt;code&gt;std::ostream&lt;/code&gt; or from &lt;code&gt;std::istream&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;与 &lt;code&gt;std::ostream&lt;/code&gt; 或 &lt;code&gt;std::istream&lt;/code&gt; 不具有可比性（但可以复制）或流式传输。</target>
        </trans-unit>
        <trans-unit id="b15032472360772950404ea598b64570d38dc499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; is reentrant, meaning that multiple threads can operate on this class at the same time, so long as they operate on different objects. If multiple threads need to share one PRNG sequence, external locking by a mutex is required.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;是可重入的，这意味着多个线程可以同时在该类上操作，只要它们在不同的对象上操作即可。如果多个线程需要共享一个PRNG序列，则需要使用互斥锁进行外部锁定。</target>
        </trans-unit>
        <trans-unit id="cbead375be4d5df78522c7561abd5c06aa41e132" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; may be seeded with specific seed data. When that is done, the numbers generated by the object will always be the same, as in the following example:</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;可以使用特定的种子数据进行播种。完成后，对象生成的数字将始终相同，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="09498fe46efcd8c04c2c1a3d2d4db527f1ddfafd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; may be used to generate random values from a high-quality random number generator. Like the C++ random engines, &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; can be seeded with user-provided values through the constructor. When seeded, the sequence of numbers generated by this class is deterministic. That is to say, given the same seed data, &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; will generate the same sequence of numbers. But given different seeds, the results should be considerably different.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;可用于从高质量随机数生成器生成随机值。像C ++随机引擎一样，&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;可以通过构造函数以用户提供的值作为种子。播种后，此类生成的数字序列是确定性的。也就是说，给定相同的种子数据，&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;将生成相同的数字序列。但是给定不同的种子，结果应该有很大的不同。</target>
        </trans-unit>
        <trans-unit id="889e0cbd7d0c58de7684a1d76d5759a1ba81fda3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;(), like all generators created by &lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator::securelySeeded&lt;/a&gt;(), is always seeded from &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(), so it's not possible to make it produce identical sequences.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#global&quot;&gt;&lt;/a&gt;像&lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator :: securelySeeded&lt;/a&gt;（）创建的所有生成器一样，QRandomGenerator :: global（）总是从&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）播种，因此不可能使其产生相同的序列。</target>
        </trans-unit>
        <trans-unit id="58bd9437b3d6c8be8598069b6b8104ffe0a9e9cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#global&quot;&gt;global&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#global&quot;&gt;global&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="68a091108615acbcb8f8c4b8614ff07a4f31b97b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#result_type-typedef&quot;&gt;QRandomGenerator::result_type&lt;/a&gt; QRandomGenerator::operator()()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#result_type-typedef&quot;&gt;QRandomGenerator :: result_type&lt;/a&gt; QRandomGenerator :: operator（）（）</target>
        </trans-unit>
        <trans-unit id="aa15d04e815a8a4bed4fb3ee4633bc464f1d835e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator::securelySeeded&lt;/a&gt;() can be used to create a &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; that is securely seeded with &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(), meaning that the sequence of numbers it generates cannot be easily predicted. Additionally, &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;() returns a global instance of &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; that Qt will ensure to be securely seeded. This object is thread-safe, may be shared for most uses, and is always seeded from &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator :: securelySeeded&lt;/a&gt;（）可以用于创建&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;，并使用&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）安全地植入该种子，这意味着无法轻松预测其生成的数字序列。此外，&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator :: global&lt;/a&gt;（）返回Qt将确保被安全播种的&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;的全局实例。该对象是线程安全的，可以为大多数使用共享，并且始终从&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）播种。</target>
        </trans-unit>
        <trans-unit id="a5964f17433fe963877ca884103bc6befefcee52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator::securelySeeded&lt;/a&gt;() can be used to create a QRandomGenerator that is securely seeded with &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(), meaning that the sequence of numbers it generates cannot be easily predicted. Additionally, &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;() returns a global instance of QRandomGenerator that Qt will ensure to be securely seeded. This object is thread-safe, may be shared for most uses, and is always seeded from &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;QRandomGenerator :: securelySeeded&lt;/a&gt;（）可用于创建QRandomGenerator，该QRandomGenerator随&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）安全地植入，这意味着无法轻松预测其生成的数字序列。此外，&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator :: global&lt;/a&gt;（）返回Qand将确保其安全种子的QRandomGenerator的全局实例。该对象是线程安全的，可以为大多数使用共享，并且始终从&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）播种。</target>
        </trans-unit>
        <trans-unit id="fd996735fe48cb4ae2513927ac366e42a6250838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() may be used to access the system's cryptographically-safe random generator. On Unix systems, it's equivalent to reading from &lt;code&gt;/dev/urandom&lt;/code&gt; or the &lt;code&gt;getrandom()&lt;/code&gt; or &lt;code&gt;getentropy()&lt;/code&gt; system calls.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）可用于访问系统的密码安全随机生成器。在Unix系统上，这等效于从 &lt;code&gt;/dev/urandom&lt;/code&gt; 或 &lt;code&gt;getrandom()&lt;/code&gt; 或 &lt;code&gt;getentropy()&lt;/code&gt; 系统调用中读取。</target>
        </trans-unit>
        <trans-unit id="47df027bbb0f9ec6b7274ab066797ca51237a860" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() may be used to access the system-wide random number generator, which is cryptographically-safe on all systems that Qt runs on. This function will use hardware facilities to generate random numbers where available. On such systems, those facilities are true Random Number Generators. However, if they are true RNGs, those facilities have finite entropy sources and thus may fail to produce any results if their entropy pool is exhausted.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）可用于访问系统范围的随机数生成器，该生成器在运行Qt的所有系统上都是加密安全的。此功能将使用硬件工具生成可用的随机数。在这样的系统上，那些工具是真正的随机数生成器。但是，如果它们是真正的RNG，则这些设施的熵源有限，因此如果耗尽其熵池，可能无法产生任何结果。</target>
        </trans-unit>
        <trans-unit id="615882f99d1d45e55b9a11eea8a046e0aa43db72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() uses the operating system facilities to obtain random numbers, which attempt to collect real entropy from the surrounding environment to produce true random numbers. However, it's possible that the entropy pool becomes exhausted, in which case the operating system will fall back to a pseudo-random engine for a time. Under no circumstances will &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() block, waiting for more entropy to be collected.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）使用操作系统工具来获取随机数，该随机数试图从周围环境中收集真实的熵以产生真实的随机数。但是，熵池有可能耗尽，在这种情况下，操作系统将暂时退回到伪随机引擎。在任何情况下，&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）都不会阻塞，等待收集更多的熵。</target>
        </trans-unit>
        <trans-unit id="5a7c7141f083bbee961a3050a3bf677f30d14e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;system&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;system&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f89911d5de8118eb4a724a8afb0179c395376aee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator64&quot;&gt;QRandomGenerator64&lt;/a&gt; is a simple adaptor class around &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;, making the &lt;a href=&quot;qrandomgenerator#generate64&quot;&gt;QRandomGenerator::generate64&lt;/a&gt;() function the default for &lt;a href=&quot;qrandomgenerator64#operator-28-29&quot;&gt;operator&lt;/a&gt;()(), instead of the function that returns 32-bit quantities. This class is intended to be used in conjunction with Standard Library algorithms that need 64-bit quantities instead of 32-bit ones.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator64&quot;&gt;QRandomGenerator64&lt;/a&gt;是围绕&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;的简单适配器类，使&lt;a href=&quot;qrandomgenerator#generate64&quot;&gt;QRandomGenerator :: generate64&lt;/a&gt;（）函数成为&lt;a href=&quot;qrandomgenerator64#operator-28-29&quot;&gt;operator&lt;/a&gt;（）（）的默认函数，而不是返回32位数量的函数。此类旨在与需要64位而不是32位的标准库算法结合使用。</target>
        </trans-unit>
        <trans-unit id="7881ec3c6f73a3aeca15d6e7be5565cb32a965b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator64#result_type-typedef&quot;&gt;QRandomGenerator64::result_type&lt;/a&gt; QRandomGenerator64::operator()()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator64#result_type-typedef&quot;&gt;QRandomGenerator64 :: result_type&lt;/a&gt; QRandomGenerator64 :: operator（）（）</target>
        </trans-unit>
        <trans-unit id="1949091b316ec108d4c37affb101c1acecae87be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; is a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; with a raster-based, non-OpenGL surface. On top of the functionality offered by &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, &lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; adds a virtual &lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() function and the possibility to open a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on itself. The underlying paint engine will be the raster one, meaning that all drawing will happen on the CPU. For performing accelerated, OpenGL-based drawing, use &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt;是具有基于栅格的非OpenGL表面的&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;。除了&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;提供的功能之外，&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt;还添加了一个虚拟的&lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）函数，并可以自行打开&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;。底层的绘制引擎将是光栅引擎，这意味着所有绘制都将在CPU上进行。要执行基于OpenGL的加速绘图，请改用&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03906d8cf44173bf89c3afcee1b94b7fb26438fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; is a convenience class for using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt;是在&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;上使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的便捷类。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="969b2c199ccfa1a2ee2e2826627aa49750023d6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; can be constructed in a number of ways:</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;可以通过多种方式构造：</target>
        </trans-unit>
        <trans-unit id="97d1ab99419458f8645a39738c5fa767f075cea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; is considered local to the thread in which it is constructed (either using a constructor, or by calling &lt;a href=&quot;qrawfont#loadFromData&quot;&gt;loadFromData&lt;/a&gt;() or &lt;a href=&quot;qrawfont#loadFromFile&quot;&gt;loadFromFile&lt;/a&gt;()). The &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; cannot be moved to a different thread, but will have to be recreated in the thread in question.</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;被认为是对其构造所在的线程本地的（使用构造函数，或通过调用&lt;a href=&quot;qrawfont#loadFromData&quot;&gt;loadFromData&lt;/a&gt;（）或&lt;a href=&quot;qrawfont#loadFromFile&quot;&gt;loadFromFile&lt;/a&gt;（））。该&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;不能移动到不同的线程，但将有问题的线程重新创建。</target>
        </trans-unit>
        <trans-unit id="6ab5b28457a5b90ee9156c0b77a317ed74617e92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; only provides support for the main font technologies: GDI and DirectWrite on Windows platforms, &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-attribution-freetype.html#freetype&quot;&gt;FreeType&lt;/a&gt; on Linux platforms and CoreText on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. For other font back-ends, the APIs will be disabled.</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;仅支持以下主要字体技术：Windows平台上的GDI和DirectWrite，Linux平台上的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-attribution-freetype.html#freetype&quot;&gt;FreeType&lt;/a&gt;和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上的&lt;/a&gt; CoreText 。对于其他字体后端，将禁用API。</target>
        </trans-unit>
        <trans-unit id="95f9782bdc9e6dd580d4a4568107d31b98bd052f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;QRawFont::operator=(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt;＆QRawFont :: operator =（const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8567b79e10e969ff7945c95cfe5dae5dc195f668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *QReadLocker::readWriteLock() const</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; * QReadLocker :: readWriteLock（）常量</target>
        </trans-unit>
        <trans-unit id="093dfa4406eeddffdb392d4daf9a964cb922fd84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *QWriteLocker::readWriteLock() const</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; * QWriteLocker :: readWriteLock（）常量</target>
        </trans-unit>
        <trans-unit id="bd9d232b238d189b14c5057f303a2b52d0f48bfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; is similar to &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;, except that it distinguishes between &quot;read&quot; and &quot;write&quot; access. When a piece of data is not being written to, it is safe for multiple threads to read from it simultaneously. A &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; forces multiple readers to take turns to read shared data, but a &lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; allows simultaneous reading, thus improving parallelism.</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt;类似于&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;，除了它&amp;ldquo;读&amp;rdquo;和&amp;ldquo;写&amp;rdquo;操作进行了区分。当不写入一条数据时，可以安全地同时读取多个线程。甲&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;力多个读者轮流读共享数据，但&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt;允许同时读取，从而提高了并行性。</target>
        </trans-unit>
        <trans-unit id="97330c043bad9ecda79661000934f87e4962743f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QDragMoveEvent::answerRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QDragMoveEvent :: answerRect（）常量</target>
        </trans-unit>
        <trans-unit id="69d41be9ee0b3272d2dbe05d89dff85131882699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect（&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8411e252a50c55f747aceebd87255c5f10f1a906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ac1dec70c0966229e836444efb8128f916cd9930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="92930c18dc613ac02d25258dca16d9730f42dac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect（int</target>
        </trans-unit>
        <trans-unit id="afdcd08112393f42a3b72647d5e876c2d1bf67f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::tightBoundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: tightBoundingRect（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="81381c203badb86c9ed863a2cbdc1f0235cae02e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGraphicsView::rubberBandRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGraphicsView :: rubberBandRect（）常量</target>
        </trans-unit>
        <trans-unit id="11aa6dbf8922777938de8acc6d3054b1ad781ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGridLayout::cellRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGridLayout :: cellRect（int</target>
        </trans-unit>
        <trans-unit id="226448ca4a538a59953f8057109f30ee690cb4c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImage::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImage :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="84b2fd80b2f4c004e0b1f02a433b6c254a08b628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::clipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: clipRect（）常量</target>
        </trans-unit>
        <trans-unit id="93cda42302b19c652bd2c214497b6830d8b1c6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::currentImageRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: currentImageRect（）常量</target>
        </trans-unit>
        <trans-unit id="2c8c3db3ce54dd3251b7f239140930797d83bfea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::scaledClipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: scaledClipRect（）常量</target>
        </trans-unit>
        <trans-unit id="9c2f4dd2bf5d30912bb4d3f3eb82bea86cdf65ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QInputDevice::availableVirtualGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QInputDevice :: availableVirtualGeometry（）常量</target>
        </trans-unit>
        <trans-unit id="3bff84527f8df22ae7a09d81de685bccf3ec95f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayout::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayout :: contentsRect（）常量</target>
        </trans-unit>
        <trans-unit id="f42c19e46a3cd9121423b57c215418f2f6c5af14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QListWidget::visualItemRect(const &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QListWidget :: visualItemRect（const &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ad7ceee4ee2f269aea7eb7255eb709588bf9ef27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix4x4::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix4x4 :: mapRect（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a44ace12f79b743cf4242a061f0b79f01601c16f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix :: mapRect（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d9d014365e4051fb7da95c5c9c4b1ac26b7d3010" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenu::actionGeometry(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenu :: actionGeometry（&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="22efa9238d96a659d34cf62bb6531cf383174a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenuBar::actionGeometry(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenuBar :: actionGeometry（&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0c5ec74acee4feebc78305a27ef57bcd7015192a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMovie::frameRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMovie :: frameRect（）常量</target>
        </trans-unit>
        <trans-unit id="28631b33523e55824d05e8521277ecccd7ff43f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::fullRectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: fullRectPixels（int</target>
        </trans-unit>
        <trans-unit id="efd8d1ac4159a883d06e6a57c1757ffd8ab3a9cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::fullRectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: fullRectPoints（）常量</target>
        </trans-unit>
        <trans-unit id="297f7f9be57d6108ba1596b5aa12c8ba9e92345e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::paintRectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: paintRectPixels（int</target>
        </trans-unit>
        <trans-unit id="be710c62e60cc73271bebd9adcafe46e5d17672b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::paintRectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: paintRectPoints（）常量</target>
        </trans-unit>
        <trans-unit id="f3090d20c044a5240590ec995a4ce04bbc90f056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize::rectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize :: rectPixels（int</target>
        </trans-unit>
        <trans-unit id="1078ff65515d7f7cfad4007388f8c4e3fff81414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize::rectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize :: rectPoints（）常量</target>
        </trans-unit>
        <trans-unit id="199596785626e3f28bfbec2725f70904636b4f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::boundingRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: boundingRect（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9346406c7ef160e637112db2e6f63a02c70038bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::boundingRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: boundingRect（int</target>
        </trans-unit>
        <trans-unit id="66ee7b9cd4aed57557fca817beab2a5e3b446087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::viewport() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: viewport（）常量</target>
        </trans-unit>
        <trans-unit id="b24610d66a64c490d6550d31c05e256e818a65bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::window() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: window（）常量</target>
        </trans-unit>
        <trans-unit id="5bb187e1bd384b4084b12c0fa35d17d1e4bd4f40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPdfDocumentRenderOptions::scaledClipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPdfDocumentRenderOptions :: scaledClipRect（）常量</target>
        </trans-unit>
        <trans-unit id="ce4721095fd5104c578f8b9045e5e5dda4792853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPicture::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPicture :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="bc6c23aa3b50c3ff064753a5fbb38420c00bd329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPixmap::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPixmap :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="873fb953de79f6386d82a0348948ff7aff54bd6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit::cursorRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit :: cursorRect（）常量</target>
        </trans-unit>
        <trans-unit id="3efb25e4af77f17b5462702af99fa58a8dc0c199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit::cursorRect(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit :: cursorRect（const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4772b60e7716d1e6834d5c05ec0f162d243628db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPolygon::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPolygon :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="3edc1845118dcf08d8291fd10dda0a1613971645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF::toAlignedRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF :: toAlignedRect（）常量</target>
        </trans-unit>
        <trans-unit id="270b6307b2ead5b5860fbbeeb57baa87334366b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF::toRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF :: toRect（）常量</target>
        </trans-unit>
        <trans-unit id="aef4f7a22da1b8cb86babac5a1cbb348119389a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRegion::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRegion :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="327e882a439cb1d8a69f23979262db7edfa3c045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer::deviceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer :: deviceRect（）常量</target>
        </trans-unit>
        <trans-unit id="28ce502dd0d366a33254d882f1d86878dd81915c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer::viewportRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer :: viewportRect（）常量</target>
        </trans-unit>
        <trans-unit id="00ab235ce697092211b334f50e59dfd1573ff2ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QScreen::mapBetween(&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt::ScreenOrientation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QScreen :: mapBetween（&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt :: ScreenOrientation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b48eab4c0cbbb7c2be5cf2e17b84dc61e43a8bf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOption::rect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOption :: rect</target>
        </trans-unit>
        <trans-unit id="b9ee3529a508e301cc17356db25e429e8efc9ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionComboBox::popupRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionComboBox :: popupRect</target>
        </trans-unit>
        <trans-unit id="2d2a117b22b9040979df9460b43511aaa0846fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionMenuItem::menuRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionMenuItem :: menuRect</target>
        </trans-unit>
        <trans-unit id="6c51de2060a31f22f7d98e4918f7c552a8d6a5c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase::selectedTabRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase :: selectedTabRect</target>
        </trans-unit>
        <trans-unit id="88a0140f17b436c80b81f19d191dc4b2706cc39a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase::tabBarRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase :: tabBarRect</target>
        </trans-unit>
        <trans-unit id="b763b7d0e8c1b6afc0c25b9001a5b201fc30f5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame::selectedTabRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame :: selectedTabRect</target>
        </trans-unit>
        <trans-unit id="705b1a60915dcfb87b453e10e4a74b673ebf2f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame::tabBarRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame :: tabBarRect</target>
        </trans-unit>
        <trans-unit id="6b991e94cb8d820b9fad00d228d1964493eb086e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgGenerator::viewBox() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgGenerator :: viewBox（）常量</target>
        </trans-unit>
        <trans-unit id="1bfe3fa0ce8cad167b36675d2d257031a71e5a93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgRenderer::viewBox() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgRenderer :: viewBox（）常量</target>
        </trans-unit>
        <trans-unit id="f9d494cd9a2ee0a8b641bbfbd32132b913a18ecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSystemTrayIcon::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSystemTrayIcon :: geometry（）常量</target>
        </trans-unit>
        <trans-unit id="4fbd599e166463d64b9dfc8b0c5f34a794e1abd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTabBar::tabRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTabBar :: tabRect（int</target>
        </trans-unit>
        <trans-unit id="33c7608a31260115dfad0cce570b8c5168c1b082" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTableWidget::visualItemRect(const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTableWidget :: visualItemRect（const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="60ac31db93a99c73c762d4140662f61ec897fd30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit::cursorRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit :: cursorRect（）常量</target>
        </trans-unit>
        <trans-unit id="a7afb99bfaba43583da537c36c96d3778b643d22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit::cursorRect(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit :: cursorRect（const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e3f8209c285c430b43ab9e7a19c770a871aed552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTransform::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTransform :: mapRect（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4c4726662a11558d4b66dc32aa3ea30500b40660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTreeWidget::visualItemRect(const &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTreeWidget :: visualItemRect（const &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="39a479f8107fabfffa91338bdfb858c474f0c3c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVariant::toRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVariant :: toRect（）常量</target>
        </trans-unit>
        <trans-unit id="249541468e07e6388069cb5eb6e90b3fa1efb780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoSurfaceFormat::viewport() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoSurfaceFormat :: viewport（）常量</target>
        </trans-unit>
        <trans-unit id="2a28e44e81a1429a14e79de86421322a8f2a1159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWidget::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWidget :: contentsRect（）常量</target>
        </trans-unit>
        <trans-unit id="b592fc66ae60df4c69efc520f80e24ed1be6f0a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow::frameGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow :: frameGeometry（）常量</target>
        </trans-unit>
        <trans-unit id="de39cae76060ef9b26fdbd99f93cae21b287b1b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow :: geometry（）常量</target>
        </trans-unit>
        <trans-unit id="35e522d0e171b33a210adbaf68054efa1bed3951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState::deviceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState :: deviceRect（）常量</target>
        </trans-unit>
        <trans-unit id="6132e473f11a1a147e9da48532b6fed638508632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState::viewportRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState :: viewportRect（）常量</target>
        </trans-unit>
        <trans-unit id="2ac15a68d6a76343c50bee80b3f0d1672da40e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; is limited to the minimum and maximum values for the &lt;code&gt;int&lt;/code&gt; type. Operations on a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; that could potentially result in values outside this range will result in undefined behavior.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;限制为 &lt;code&gt;int&lt;/code&gt; 类型的最小值和最大值。对&lt;a href=&quot;qrect&quot;&gt;QRect的&lt;/a&gt;操作可能会导致超出此范围的值，将导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="dc7a0c0529eb96e4a20a02b14658b87ceee15112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7090fe01390af6093676623871ef661c78cb5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;'s &lt;a href=&quot;qrect#right&quot;&gt;right()&lt;/a&gt; function returns &lt;a href=&quot;qrect#left&quot;&gt;left()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width()&lt;/a&gt; - 1 and the &lt;a href=&quot;qrect#bottom&quot;&gt;bottom()&lt;/a&gt; function returns &lt;a href=&quot;qrect#top&quot;&gt;top()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height()&lt;/a&gt; - 1. The bottom-right green point in the diagrams shows the return coordinates of these functions.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;的&lt;a href=&quot;qrect#right&quot;&gt;right（）&lt;/a&gt;函数返回&lt;a href=&quot;qrect#left&quot;&gt;left（）&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width（）&lt;/a&gt; -1，&lt;a href=&quot;qrect#bottom&quot;&gt;bottom（）&lt;/a&gt;函数返回&lt;a href=&quot;qrect#top&quot;&gt;top（）&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height（）&lt;/a&gt; -1。图中右下绿色的点显示了这些函数的返回坐标。</target>
        </trans-unit>
        <trans-unit id="acddd6ea12198f38002f40255b31189a68d4212b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(1, 2, 6, 4)</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（1、2、6、4）</target>
        </trans-unit>
        <trans-unit id="0c8594f8c1816d5ba768305da79fd9f8c493cb39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(1, 2), &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(7, 6))</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;（1、2），&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;（7、6））</target>
        </trans-unit>
        <trans-unit id="b391ce423b2c666c4cb9352337bc5d8571562a75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(1, 2), &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(6, 4))</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;（1、2），&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;（6、4））</target>
        </trans-unit>
        <trans-unit id="6796f924e86f94b50df2bc6d7b2acd71734a8218" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;查阅QRect&lt;/a&gt;，&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2b8a284c7156c7e0507ef4223fd2e76561926dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; -&amp;gt; vec4 - Qt.rect(x, y, w, h) becomes vec4(x, y, w, h) in the shader.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;，&lt;a href=&quot;qrectf&quot;&gt;QRectF-&lt;/a&gt; &amp;gt; vec4-Qt.rect（x，y，w，h）在着色器中变为vec4（x，y，w，h）。</target>
        </trans-unit>
        <trans-unit id="ca3396e61aaaf01387c49186936eb18dfe6f6592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;, &lt;a href=&quot;qml-qtqml-qt#rect-method&quot;&gt;rect&lt;/a&gt; -&amp;gt; vec4</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;，&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;，&lt;a href=&quot;qml-qtqml-qt#rect-method&quot;&gt;矩形&lt;/a&gt;-&amp;gt; vec4</target>
        </trans-unit>
        <trans-unit id="68e28ca83e76242dd6397b47bca4baa4d678971b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator&amp;amp;=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆QRect :: operator＆=（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b75adf0e95713dad7af5dc637a95c7131cebeeb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator+=(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆QRect :: operator + =（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="20473b43edbf0558f1c8e027f48a499b97528325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator-=(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆QRect :: operator-=（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="df268ef665a8aa07323fd264211bb38b6e166ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator|=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆QRect :: operator | =（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="499bee59c484d11e003e7c7358e222bbdf6e539c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::adjusted(int</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: adjusted（int</target>
        </trans-unit>
        <trans-unit id="45dec08bff198c82be6238bb41dc66009a438ba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::intersected(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: intersected（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ead85c04353fcc5febc41586e37d6fb1c808a2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::marginsAdded(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect ::margin⚓（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cd894081146bbfa88689054d96c9fddb4edc9b7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::marginsRemoved(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: marginsRemoved（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b69b5cda4341e171669e36c95a24f3f692836726" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: normalized（）常量</target>
        </trans-unit>
        <trans-unit id="3cd29ed371e26f6a953f43fd90c2c6e51aa68596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator&amp;amp;(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: operator＆（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3bbff4b33f3a0ee214c25c8533c0a5c405220426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator+(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: operator +（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="93521e8703219cc2717e6d0d961df548a5ab27f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator+(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: operator +（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c4004dc9cdc180b3001cef3cebbe26fbb6ff882b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: operator-（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="90d2618653f038c0f3657583648ea70a2c84fa5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator|(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: operator |（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3b0b9037d886ad6414ea667f28a8f7632aebf5a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::translated(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: translated（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0abda71f4201abae5a38e0dd8848a5b7b0a994c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::translated(int</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: translated（int</target>
        </trans-unit>
        <trans-unit id="db2f3e07af1c51585fbbf9094f4b5bc82d8c8058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: transposed（）常量</target>
        </trans-unit>
        <trans-unit id="35420a9b76d933faa8e05472b68855dd56a51e39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::united(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: united（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="63907f85e71d9ad66ffe2769db1439d78086ba77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;运算符+（const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8d5572e220a23a2083672eafed235ecc2e70a420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;运算子+（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1189adf13c9e35a00b0a4c3a57a1dff8ce613806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;运算子-（const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e989ca1440b20498c74cf2ee2c6ee78287a143fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#intersected&quot;&gt;intersected&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrect#intersected&quot;&gt;intersected&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="86e52c5b7666bf9d0d61a90a6de9b15c38b50080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt;() + &lt;a href=&quot;qrect#width&quot;&gt;width&lt;/a&gt;() - 1</source>
          <target state="translated">&lt;a href=&quot;qrect#left&quot;&gt;左&lt;/a&gt;（）+ &lt;a href=&quot;qrect#width&quot;&gt;宽&lt;/a&gt;（）-1</target>
        </trans-unit>
        <trans-unit id="70de9cee71348d865ff6d234e77bca88e12d75dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#top&quot;&gt;top&lt;/a&gt;() &amp;lt;= &lt;a href=&quot;qrect#bottom&quot;&gt;bottom&lt;/a&gt;(). A null rectangle (&lt;a href=&quot;qrect#isNull&quot;&gt;isNull&lt;/a&gt;() == true) on the other hand, has both width and height set to 0.</source>
          <target state="translated">&lt;a href=&quot;qrect#top&quot;&gt;顶部&lt;/a&gt;（）&amp;lt;= &lt;a href=&quot;qrect#bottom&quot;&gt;底部&lt;/a&gt;（）。另一方面，空矩形（&lt;a href=&quot;qrect#isNull&quot;&gt;isNull&lt;/a&gt;（）== true）的宽度和高度均设置为0。</target>
        </trans-unit>
        <trans-unit id="43b357a63265b6cf7907c71e6e98b40856e0b368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#top&quot;&gt;top&lt;/a&gt;() + &lt;a href=&quot;qrect#height&quot;&gt;height&lt;/a&gt;() - 1</source>
          <target state="translated">&lt;a href=&quot;qrect#top&quot;&gt;顶部&lt;/a&gt;（）+ &lt;a href=&quot;qrect#height&quot;&gt;高度&lt;/a&gt;（）-1</target>
        </trans-unit>
        <trans-unit id="ad0f9a77443e620052f00fa33e2533f750771e43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#united&quot;&gt;united&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrect#united&quot;&gt;united&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="dc3620b3f68b3b14df68829fbb9dfeb143b5cdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; PaintContext::clip</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; PaintContext :: clip</target>
        </trans-unit>
        <trans-unit id="0360fd34278e13c1542a1b9c53d3941d492eb1ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer::destinationRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer :: destinationRect（）常量</target>
        </trans-unit>
        <trans-unit id="e22178a7e21938f3798f22cb0e36ab7137eab159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer::sourceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer :: sourceRect（）常量</target>
        </trans-unit>
        <trans-unit id="ccb8dabd3bfd2d2d5396c6f9d179a834c61c818c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QCameraFocusZone::area() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QCameraFocusZone :: area（）常量</target>
        </trans-unit>
        <trans-unit id="2b7b5840595b517eea238ef9bcbff6de52a6b83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect（&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b628d947c40dd757a8c41476ad32fe859dd4e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e644c61dc7b3112dc76661ebdff04d3ade47c2b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7a23d1ffec5ac8cb6d3f0376c905c3e94a232270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::tightBoundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: tightBoundingRect（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fcc2fa7d1424f213261c4cfcea51730e5d8ed4fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEffect::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEffect :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="9f0a603120729e1a6dc18586d24471f4bef2d4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEllipseItem::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEllipseItem :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="03f9b4aa5cac7478b3f280fd64de3705c04b2024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::childrenBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: childrenBoundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="be429103ef5ad23c6c598bfc703c219be49c0029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="82a00ecbc32656e5ca31fc3bc952e368c05f0416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dd9f5b741ccfa305ce5740dd8bf09db39e3c8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a0720f6d5d3e91f956a89d5a3c41f511f43652a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromParent（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a3b5cc4853438333caa80fc2a1b2dd445f88214d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e937c54c5f1b3f5a1e89567ea393238605af6c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a6eb1c1baeb52ddf6266f641216ce3ea1c703da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d14a2bfb319c2908053b3ff1628f8eb2628c78f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5efb8104a2f3aa31644d6ab6f0ef3663755a6aec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d19191c804b745c6fb514c8d397848b1d8d0104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dce5605c567a85e588fd2513d9c8fad07e252d84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToParent（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9c18770b3314866888a15b3a753a6de945880871" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67c144684e0b14143b620757faf9935435ecdda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ebaf0f4a0233a9d8b142550f70f1c3b7c5c8883" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a9cd02406a8b4704b67d041441448d45e6e7d501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::sceneBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: sceneBoundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="7b4123a025d8bc90af693707b510bc6918a6bb4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem :: contentsRect（）常量</target>
        </trans-unit>
        <trans-unit id="9c83ab2754e9fd522ff00ec757ff52f9dd155771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem :: geometry（）常量</target>
        </trans-unit>
        <trans-unit id="7e3f7dfc69b90de5c2e50e865c5d0c0574c495f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsProxyWidget::subWidgetRect(const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsProxyWidget :: subWidgetRect（const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eda40b16be8fe5eb765cd31aba00b81d27b67acb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsRectItem::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsRectItem :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="34040194c47977663af0e1e41404f16a666890c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsScene::itemsBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsScene :: itemsBoundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="78bc68b32b75483cbd7b00915c2bf7d045de89f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="b88bee27d7653027e81e09cdc0d0a84f4505c532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::windowFrameGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: windowFrameGeometry（）常量</target>
        </trans-unit>
        <trans-unit id="53b91ec51eb82bb52c15598c7e77961bee334984" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::windowFrameRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: windowFrameRect（）常量</target>
        </trans-unit>
        <trans-unit id="054ef6928a066489882c4772e86c86aa25c79dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QInputMethod::inputItemRectangle() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QInputMethod :: inputItemRectangle（）常量</target>
        </trans-unit>
        <trans-unit id="30af511bda94d3a077dbf215a3e481b006599915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix4x4::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix4x4 :: mapRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="699f99a0b21bd0a8cccb329a6372dea93c4676d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix :: mapRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="40172116281dea5ecad222bdabdd33acbf8a0da2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::fullRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: fullRect（）常量</target>
        </trans-unit>
        <trans-unit id="b51f79127cb22a79ac6766a474e1ceaf6a3b0485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::fullRect(&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: fullRect（&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1de9adf8571c929e10d73170e64d814175ff5153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::paintRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: paintRect（）常量</target>
        </trans-unit>
        <trans-unit id="a056f293fbb64359bd556be44008ddf0783d4a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::paintRect(&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: paintRect（&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33eae70a88995f120c5c9b84da3b7187f6ce2cfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageSize::rect(&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageSize :: rect（&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b77c67bafe2360e1ec639c7b2822ba1c512e96d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter::boundingRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter :: boundingRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="09b7d8d4443582649d42d305edaeb38293c55053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter::clipBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter :: clipBoundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="116f4a07ec1bee8184aa2765844390da62acf1f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="1dde1e1e27479f35c8ac00a06eae54b79606e9ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath::controlPointRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath :: controlPointRect（）常量</target>
        </trans-unit>
        <trans-unit id="1d315831282b58e948f2dc0247b31d0fdbff0870" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPolygonF::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPolygonF :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="a6957d12f7296852e8b7766f47388b3ca2d972bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter::pageRect(&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter :: pageRect（&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c954227edb1003f125bf9070866e4e275cbf00b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter::paperRect(&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter :: paperRect（&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d0e7d803d4211beec700529abcd70d526ceddc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectFromItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectFromItem（const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1c3d43b7924a14416a339b2cbad3c6f4b6689c01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectFromScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a0062b6dab86695f2732966b5f27aee6e1f1f7fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectToItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectToItem（const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9efcefdf0bb653f8dd2df5729d10074e2f947455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectToScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectToScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="59db90fdbfca89d4f2960a704a5c84f7c7ea40ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont :: boundingRect（&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a136a1a6f53b83e7adf59a6e3f65db848129f38d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7797becdcf638cad3462aced540dd5b7e2532ea1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGClipNode::clipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGClipNode :: clipRect（）常量</target>
        </trans-unit>
        <trans-unit id="6d9a0061687d726a9f8f34ad5474e4f2e4ae3834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleRectNode::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleRectNode :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="e02127be8b5cd6e3c0780cd19b8f60566a9f1ed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="1382829dc504db6e4108c6d6f9e76bef285bd651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode::sourceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode :: sourceRect（）常量</target>
        </trans-unit>
        <trans-unit id="d61b40fca05fb79b53c0d2d5a5e961fb556c8f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGTexture::convertToNormalizedSourceRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGTexture :: convertToNormalizedSourceRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="930e7571110f8b325045c05322f32a1c08be2075" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QScrollPrepareEvent::contentPosRange() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QScrollPrepareEvent :: contentPosRange（）常量</target>
        </trans-unit>
        <trans-unit id="03d203a2f6f049db6e133df37f5af6c7a1844717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QStyleOptionGraphicsItem::exposedRect</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QStyleOptionGraphicsItem :: exposedRect</target>
        </trans-unit>
        <trans-unit id="4e7e694b288d08120ee3d2f016019fc313b37b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSvgRenderer::boundsOnElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSvgRenderer :: boundsOnElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="51e1cfdb5886b5cfd0dbc979bb5cee246d8d1038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextInlineObject::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextInlineObject :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="c53a66007a65d85b409d378149243f0783485695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLayout::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLayout :: boundingRect（）常量</target>
        </trans-unit>
        <trans-unit id="cb6f0ba1128376f1c9852b38eb4dd77322311249" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine::naturalTextRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine :: naturalTextRect（）常量</target>
        </trans-unit>
        <trans-unit id="70947e5c8bebae6a56aba9ea1033a19a65b18992" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine :: rect（）常量</target>
        </trans-unit>
        <trans-unit id="ba65d08cf5c1d0553123caae0101c444fcfe7317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTransform::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTransform :: mapRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="692c1500ec59ab50e47e71ee893bb7926f542365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QVariant::toRectF() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QVariant :: toRectF（）常量</target>
        </trans-unit>
        <trans-unit id="3ce7fbdcf8806ab9f341276be9910dc1aeddd727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator&amp;amp;=(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆QRectF :: operator＆=（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fa87dc39b78f4b1fb7a86e385dae9176d9ed359a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator+=(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆QRectF :: operator + =（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="44e3a88375d68f1384325ce661e66bf631640f4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator-=(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆QRectF :: operator-=（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="05195f7ebf466477ada4fc060d1578613b82127c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator|=(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆QRectF :: operator | =（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="67b3b1a03bc6ef70d4bd30fb29f83675704d769e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::adjusted(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: adjusted（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b4eb61215056feb35a5c2ef203de6d5d9f504a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::intersected(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: intersected（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bd36b7b8bacf97b41083ce63a9ecacf1ee93cde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::marginsAdded(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF ::m​​argin⚓（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9946bb2c3dfa8f023a499b6a447f26bf90ed8105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::marginsRemoved(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: marginsRemoved（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="31733679496fe4f6f7e88e1646c4b552df297131" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: normalized（）常量</target>
        </trans-unit>
        <trans-unit id="d426a3de03bc4b4ced1f2f2b7d928a09b0169064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator&amp;amp;(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: operator＆（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="86b9994bd227972c91a96e62688b4be225eac2f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator+(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: operator +（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="614a60cdd6d95a410c8fceece14b360b22d93eb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator+(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: operator +（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cda82fdeca88afef5d017bc508cb01c3c9f128a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: operator-（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="71300304b3a7ce87fde345d552a11873ba0aac7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator|(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: operator |（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0a9e52c2972012df3c7ed5fa7f3ac963bc2c21a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::translated(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: translated（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="292305632ad64f5e170c0838fc5aea520e995f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::translated(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: translated（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7a17b418b568f339ba1a9cf0642b5657331ac956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: transposed（）常量</target>
        </trans-unit>
        <trans-unit id="dda394dd1cee6f5c3c91a00b27a995ac0641787d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::united(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: united（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="983d5433383494c340010e80fa9acb9015d589c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;运算符+（const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="57d281c1b40857500f10076d70f812072d26f99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;运算符+（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3a6ce36d658a84ed89eb104464bd77495ac034b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;运算子-（const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b9954a414d1f88767e8f5aa3ff2676c99bf7ab53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#intersected&quot;&gt;intersected&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrectf#intersected&quot;&gt;intersected&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="88487205b19d1ca7f316a831b5f9f8514a8850a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#united&quot;&gt;united&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrectf#united&quot;&gt;united&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="2b68ee4592e74fec64c0ab6107fc5758ed24781b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; QVariant::toRegExp() const</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; QVariant :: toRegExp（）常量</target>
        </trans-unit>
        <trans-unit id="5ace9fd40ccc5da8e8c4d8e62581f367b97b9879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; by default does Unicode-aware matching, while QRegularExpression requires a separate option; see below for more details.</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;&lt;/a&gt;默认情况下，QRegExp会进行支持Unicode的匹配，而QRegularExpression需要一个单独的选项。请参阅下面的更多细节。</target>
        </trans-unit>
        <trans-unit id="7a033791b055b36d597406d760eb44cf4e2f4919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; can match case insensitively using &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;(), and can use non-greedy matching, see &lt;a href=&quot;qregexp#setMinimal&quot;&gt;setMinimal&lt;/a&gt;(). By default &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; uses full regexps but this can be changed with &lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;(). Searching can be done forward with &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;() or backward with &lt;a href=&quot;qregexp#lastIndexIn&quot;&gt;lastIndexIn&lt;/a&gt;(). Captured text can be accessed using &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;() which returns a string list of all captured strings, or using &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;() which returns the captured string for the given index. The &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;() function takes a match index and returns the position in the string where the match was made (or -1 if there was no match).</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;可以使用&lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;（）不区分大小写地进行匹配，并且可以使用非贪婪匹配，请参见&lt;a href=&quot;qregexp#setMinimal&quot;&gt;setMinimal&lt;/a&gt;（）。默认情况下，&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;使用完整的正则表达式，但是可以使用&lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;（）进行更改。可以使用&lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;（）向前搜索，也可以使用&lt;a href=&quot;qregexp#lastIndexIn&quot;&gt;lastIndexIn&lt;/a&gt;（）反向搜索。可以使用&lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;（）返回捕获的所有字符串的字符串列表来访问捕获的文本，也可以使用&lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;（）返回给定索引的捕获的字符串来访问捕获的文本。在&lt;a href=&quot;qregexp#pos&quot;&gt;POS&lt;/a&gt;（）函数获得一个匹配索引，并返回，其中匹配的制作（或-1，如果没有匹配）字符串中的位置。</target>
        </trans-unit>
        <trans-unit id="f3989c2bd1d2a541322cb14341bfdd5953f39fe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;'s quantifiers are the same as Perl's greedy quantifiers (but see the &lt;a href=&quot;qregexp#greedy-quantifiers&quot;&gt;note above&lt;/a&gt;). Non-greedy matching cannot be applied to individual quantifiers, but can be applied to all the quantifiers in the pattern. For example, to match the Perl regexp &lt;b&gt;ro+?m&lt;/b&gt; requires:</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;的量词与Perl的贪婪量词相同（但请参见&lt;a href=&quot;qregexp#greedy-quantifiers&quot;&gt;上面&lt;/a&gt;的注释）。非贪婪匹配不能应用于单个量词，但可以应用于模式中的所有量词。例如，要匹配Perl regexp &lt;b&gt;ro +？m，&lt;/b&gt;需要：</target>
        </trans-unit>
        <trans-unit id="886d682a3dfc085367817a62f515f0723369456e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp::PatternSyntax&lt;/a&gt; QRegExp::patternSyntax() const</source>
          <target state="translated">&lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp :: PatternSyntax&lt;/a&gt; QRegExp :: patternSyntax（）常量</target>
        </trans-unit>
        <trans-unit id="95eec49df4e1e76c879e50f418c4142219a97b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;QRegExp::operator=(&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt;＆QRegExp :: operator =（&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="4b0b5f39e47b8fa9416578f345b9247993e49ddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;QRegExp::operator=(const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt;＆QRegExp :: operator =（const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ccd7fb0ed213d720f3091fc21e9354545e7c6641" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="876745f22d7a949bdcbd06ec71c9432fb0d3c7ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;() in Qt 4 served two purposes: it exactly matched a regular expression against a subject string, and it implemented partial matching.</source>
          <target state="translated">&lt;a href=&quot;qregexp#exactMatch&quot;&gt;&lt;/a&gt;Qt 4中的QRegExp :: exactMatch（）有两个目的：将正则表达式与主题字符串完全匹配，并实现部分匹配。</target>
        </trans-unit>
        <trans-unit id="35b53dffbef0d4f4fcdbf38813ef48531c35ac42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, etc.). &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; instead does support greedy, lazy and possessive quantifiers. The &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt; pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</source>
          <target state="translated">&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）通过简单地逆转量词的贪婪度（&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;不支持惰性量词，如 &lt;code&gt;*?&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; 等）来实现最小匹配。&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;确实支持贪婪，惰性和所有格修饰符。该&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt;模式选项可以效仿的影响很有&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）：如果启用，反转量词的贪婪（贪婪的人变得懒惰，反之亦然）。</target>
        </trans-unit>
        <trans-unit id="7ac1a42aad780c1616708dde5ba8825f353149ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, etc.). QRegularExpression instead does support greedy, lazy and possessive quantifiers. The &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt; pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</source>
          <target state="translated">&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）通过简单地逆转量词的贪婪度（&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;不支持惰性量词，如 &lt;code&gt;*?&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; 等）来实现最小匹配。QRegularExpression确实支持贪婪，惰性和所有格修饰符。该&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt;模式选项可以效仿的影响很有&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）：如果启用，反转量词的贪婪（贪婪的人变得懒惰，反之亦然）。</target>
        </trans-unit>
        <trans-unit id="c3e498a1f5760ea82c5f760edda7b50ecc07ac1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (QRegExp did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, etc.). &lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; instead does support greedy, lazy and possessive quantifiers. The InvertedGreedinessOption pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</source>
          <target state="translated">&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）通过简单地反转量词的贪婪程度（QRegExp不支持惰性量词，如 &lt;code&gt;*?&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; 等）来实现最小匹配。&lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;确实支持贪婪，惰性和所有格修饰符。InvertedGreedinessOption模式选项可用于模拟&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal&lt;/a&gt;（）的效果：如果启用，它将反转量词的贪婪性（贪婪的变得懒惰，反之亦然）。</target>
        </trans-unit>
        <trans-unit id="4b105bd5d88e0d9b5835b53240a379c0fe39eec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; uses a regular expression (regexp) to determine whether an input string is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, or &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;. The regexp can either be supplied when the &lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; is constructed, or at a later time.</source>
          <target state="translated">&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt;使用正则表达式（regexp）来确定输入字符串是&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;，&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;还是&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;。可以在构造&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt;时或在以后的时间提供regexp 。</target>
        </trans-unit>
        <trans-unit id="6a233868cacdb55f05ced5ce7cd18308803c5434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QBackingStore::staticContents() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QBackingStore :: staticContents（）常量</target>
        </trans-unit>
        <trans-unit id="08bc28c62ec5b5767a8b2c27a91cb5b17076e45f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QGraphicsItem::boundingRegion(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QGraphicsItem :: boundingRegion（const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b2129964ce330fd633b1067220d69112e64e8083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix :: map（const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8fd89f69011feddfc83c6759887570ede63a6fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix :: operator *（const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5f101ed8a80623d0d70026d2a77bb4b5c59ee03c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPaintEngineState::clipRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPaintEngineState :: clipRegion（）常量</target>
        </trans-unit>
        <trans-unit id="4f54f27e2f06ebfb17afef43fc6aa0dfc803aaee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPainter::clipRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPainter :: clipRegion（）常量</target>
        </trans-unit>
        <trans-unit id="73b652c7f18620e216560111055a89bca369e4f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QStyleHintReturnMask::region</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QStyleHintReturnMask :: region</target>
        </trans-unit>
        <trans-unit id="786e12322ff2af25561a3fe09c270d0750d47ea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform :: map（const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1637bf72755090dc7b628013cbd8924b2caaca6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform :: operator *（const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4054a7902c84d061594a3d5fcfa6457ef72b9ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget::mask() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget :: mask（）常量</target>
        </trans-unit>
        <trans-unit id="5971e99f59df129813261ed554f446e550f777c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget::visibleRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget :: visibleRegion（）常量</target>
        </trans-unit>
        <trans-unit id="4df62398a8407f08eb829ff38ca9cd2e70cab692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWindow::mask() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWindow :: mask（）常量</target>
        </trans-unit>
        <trans-unit id="a13eb22bac6bc06f3de9daf89f667caeac4238e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; does not offer mutable iterators.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;不提供可变的迭代器。</target>
        </trans-unit>
        <trans-unit id="156fb181a9281c97d13dba3b3adb5787ea02bd20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is an &lt;a href=&quot;implicit-sharing&quot;&gt;implicitly shared&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;是一个&lt;a href=&quot;implicit-sharing&quot;&gt;隐式共享的&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="a0bd00783bf5bddc5f768fa8b0c92bc212b5cd3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is used with &lt;a href=&quot;qpainter#setClipRegion&quot;&gt;QPainter::setClipRegion&lt;/a&gt;() to limit the paint area to what needs to be painted. There is also a &lt;a href=&quot;qwidget#repaint&quot;&gt;QWidget::repaint&lt;/a&gt;() function that takes a &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; parameter. &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is the best tool for minimizing the amount of screen area to be updated by a repaint.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;与&lt;a href=&quot;qpainter#setClipRegion&quot;&gt;QPainter :: setClipRegion&lt;/a&gt;（）一起使用，可将绘制区域限制为需要绘制的区域。还有一个&lt;a href=&quot;qwidget#repaint&quot;&gt;QWidget :: repaint&lt;/a&gt;（）函数，它带有&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;参数。&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;是最小化要通过重绘更新的屏幕区域数量的最佳工具。</target>
        </trans-unit>
        <trans-unit id="92b7d269deea19bb02c35ba5ecb691cf789bcf8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;运算符*（const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ba9ddf5ad869cfd45ea6f7715f1821ea1a003015" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator&amp;amp;=(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator＆=（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8a64e9a8bd28baea2c50eba0dfade41065e1307b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator&amp;amp;=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator＆=（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e9f72e2a96fb4a6b0c6f5e7ab57b5852a67f826e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator+=(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator + =（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="549a2068be5145bedfdc597f7c58c93be489db1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator+=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator + =（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b53ebcda332324d798053d13f401f7099d448df3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator-=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator-=（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="64e4ffb97f12a17699862f7101ec8e03014d3c95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator=(&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator =（&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="91637b23069abac9bb985e1f173a161cf52d57fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator =（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f136813a7fb2bc58f0a51b40504867557fda0b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator^=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator ^ =（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bfb03667b40495dfa710188c1b21881cac40f6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator|=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆QRegion :: operator | =（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3d87dd52c27de4432921ea1c739765fa8c57d757" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::intersected(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: intersected（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ff153826b0728e92caf44248a3b28306206c32a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::intersected(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: intersected（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4af53c626e2158bb6867eb8172ab6074b80a6374" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator&amp;amp;(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator＆（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="82688cae8fb7ed4dd2dbceb85956ba2c9384f7c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator&amp;amp;(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator＆（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="05a5bc25cf9e442226e869f430599499552f49c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator+(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator +（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a86b0662ef67a6ddd9f4e8ff07ce212040ae4773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator+(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator +（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f54eba158dd59c7bceb1b52f2f6372052e76976f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator-(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator-（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a8db09cba41cccdce939f7d7f8dbdf2e0dbe4383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator^(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator ^（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bc07339441019d0c3406fa9c3f55b1336c9bdb7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::operator|(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: operator |（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="46737f5eb49aeb11caac4017f2c612ed4ad91545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::subtracted(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: subtracted（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="21ab62552ab50c44c7aa1834952f89d5a8afce26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::translated(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: translated（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="520790ff9bfb2416fc15ba4bac1c02019b1f2217" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::translated(int</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: translated（int</target>
        </trans-unit>
        <trans-unit id="e45bdcdcc1b834e7709b8c4add8c709e072b2043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::united(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: united（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5a664c6f5ecb96d4eb70fedd549bc4cfbbbe2471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::united(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: united（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b008dfbce355ab4c7f80467b03d6cece1774a462" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::xored(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: xored（const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c2f64537736b9f6ed9a837658359dc2db6865d54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::begin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: begin（）const</target>
        </trans-unit>
        <trans-unit id="09d2bd37fdbf213963130cc9ae4a02874e1dcf22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: cbegin（）const</target>
        </trans-unit>
        <trans-unit id="ecec35e3c05def2e8945be7da951fc262f04e4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::cend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: cend（）const</target>
        </trans-unit>
        <trans-unit id="d46ebdaea5f174b1edc24978010ba7cb66b86bfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::end() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: end（）const</target>
        </trans-unit>
        <trans-unit id="829c4345440a3f80d023b7969e6f1c2bc54509c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::crbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: crbegin（）const</target>
        </trans-unit>
        <trans-unit id="c89684bc86f93b703a213f669a448299c49ef1e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::crend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: crend（）const</target>
        </trans-unit>
        <trans-unit id="80d5dba3def5c628d93ae84e049cbd58bccd1356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::rbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: rbegin（）const</target>
        </trans-unit>
        <trans-unit id="6fb5aab1a09a55ee6ec5d055551841da9e789258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::rend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: rend（）const</target>
        </trans-unit>
        <trans-unit id="5d596831a55af8ef611230bf2e6d287c9c0429e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QCborValue::toRegularExpression(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QCborValue :: toRegularExpression（const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b5c31667a91bb1baf936583c8b6545924838e5bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatch::regularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatch :: regularExpression（）常量</target>
        </trans-unit>
        <trans-unit id="d99f771677316c347592bf8e818f7db1bf117343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatchIterator::regularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatchIterator :: regularExpression（）常量</target>
        </trans-unit>
        <trans-unit id="a77de0ccb6a4f0c0ec8aad7121fac96b751bc977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QVariant::toRegularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QVariant :: toRegularExpression（）常量</target>
        </trans-unit>
        <trans-unit id="5bd4a69398bc34c4d2e5edc520164634b7aaf904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; does not support all the features available in Perl-compatible regular expressions. The most notable one is the fact that duplicated names for capturing groups are not supported, and using them can lead to undefined behaviour.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;不支持与Perl兼容的正则表达式中可用的所有功能。最值得注意的一个事实是不支持捕获组的重复名称，使用它们可能导致不确定的行为。</target>
        </trans-unit>
        <trans-unit id="85205d044caf4b48e98585a4cf51afdc93bf510f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; implements Perl-compatible regular expressions. It fully supports Unicode. For an overview of the regular expression syntax supported by &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;, please refer to the aforementioned pcrepattern(3) man page. A regular expression is made up of two things: a &lt;b&gt;pattern string&lt;/b&gt; and a set of &lt;b&gt;pattern options&lt;/b&gt; that change the meaning of the pattern string.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;实现与Perl兼容的正则表达式。它完全支持Unicode。有关&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;支持的正则表达式语法的概述，请参考上述pcrepattern（3）手册页。正则表达式由两部分组成：一个&lt;b&gt;模式字符串&lt;/b&gt;和一组更改模式字符串含义的&lt;b&gt;模式选项&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="d9bc678af7fb25cd82c0d7d29313f446ed8fae31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; implements this behaviour when using the &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;PartialPreferFirstMatch&lt;/a&gt; match type. This match type reports a partial match as soon as it is found, and other match alternatives are not tried (even if they could lead to a complete match). For instance:</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;PartialPreferFirstMatch&lt;/a&gt;匹配类型时，QRegularExpression实现此行为。一旦找到部分匹配项，它就会报告部分匹配项，并且不会尝试其他匹配项（即使它们可能导致完全匹配）。例如：</target>
        </trans-unit>
        <trans-unit id="15bf1fe9bbec41dd30e1cfc75b0b48e515eaf988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; internally uses a just in time compiler (JIT) to optimize the execution of the matching algorithm. The JIT makes extensive usage of self-modifying code, which can lead debugging tools such as Valgrind to crash. You must enable all checks for self-modifying code if you want to debug programs using &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; (f.i., see Valgrind's &lt;code&gt;--smc-check&lt;/code&gt; command line option). The downside of enabling such checks is that your program will run considerably slower.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression在&lt;/a&gt;内部使用即时编译器（JIT）来优化匹配算法的执行。JIT大量使用了自修改代码，这可能导致Valgrind等调试工具崩溃。如果要使用&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;调试程序，则必须启用所有用于自修改代码的检查（例如，请参阅Valgrind的 &lt;code&gt;--smc-check&lt;/code&gt; 命令行选项）。启用此类检查的不利之处是您的程序将运行得相当慢。</target>
        </trans-unit>
        <trans-unit id="f12d43f1d6bfafd829eaa5a9b5f113a17a464b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; supports only Perl-compatible regular expressions.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;仅支持与Perl兼容的正则表达式。</target>
        </trans-unit>
        <trans-unit id="cadc463a822091aa314890c9ab8d0a57bb1943fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; supports partial matching explicitly by means of the appropriate &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;MatchType&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;通过适当的&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;MatchType&lt;/a&gt;显式支持部分匹配。</target>
        </trans-unit>
        <trans-unit id="c0ed4446e761f2b24d2ab9fecd0adb445e7461fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: the pattern of a regular expression</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;：正则表达式的模式</target>
        </trans-unit>
        <trans-unit id="365077492edef9c7887e287816e3348750b4c28f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression::MatchOptions&lt;/a&gt; QRegularExpressionMatch::matchOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression :: MatchOptions&lt;/a&gt; QRegularExpressionMatch :: matchOptions（）常量</target>
        </trans-unit>
        <trans-unit id="4b006e0f83aba2ce7640bbc139fba7b14861cd93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression::MatchOptions&lt;/a&gt; QRegularExpressionMatchIterator::matchOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression :: MatchOptions&lt;/a&gt; QRegularExpressionMatchIterator :: matchOptions（）常量</target>
        </trans-unit>
        <trans-unit id="2695e485c5f85fc0004046d6d8cb16ab184a11a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression::MatchType&lt;/a&gt; QRegularExpressionMatch::matchType() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression :: MatchType&lt;/a&gt; QRegularExpressionMatch :: matchType（）常量</target>
        </trans-unit>
        <trans-unit id="4f883d0368f687216a750e8358bded0f9a53a8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression::MatchType&lt;/a&gt; QRegularExpressionMatchIterator::matchType() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression :: MatchType&lt;/a&gt; QRegularExpressionMatchIterator :: matchType（）常量</target>
        </trans-unit>
        <trans-unit id="1f9df7eb2b55a5e58a677e8e7a54ea58e578f10d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::PatternOptions&lt;/a&gt; QRegularExpression::patternOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression :: PatternOptions&lt;/a&gt; QRegularExpression :: patternOptions（）常量</target>
        </trans-unit>
        <trans-unit id="7ab1c61ffaf59df8e9d0da39c217204f7c2b064e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;QRegularExpression::operator=(&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt;＆QRegularExpression :: operator =（&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="8db4c33a888d68e86a697e36c71273169ff2b878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;QRegularExpression::operator=(const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt;＆QRegularExpression :: operator =（const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ad0a1c271ce81c530364c152665b88a75cf90e3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression::globalMatch&lt;/a&gt; returns a &lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;, which is a Java-like forward iterator that can be used to iterate over the results. For instance:</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression :: globalMatch&lt;/a&gt;返回&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;，这是一个类似于Java的正向迭代器，可用于迭代结果。例如：</target>
        </trans-unit>
        <trans-unit id="7a69be019abea85bd2bbd4cf102a7e35ffff371f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression::globalMatch&lt;/a&gt;() implements Perl global match correctly, and the returned iterator can be used to examine each result.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression :: globalMatch&lt;/a&gt;（）正确实现Perl全局匹配，并且返回的迭代器可用于检查每个结果。</target>
        </trans-unit>
        <trans-unit id="39710968085670c6cf3ae3e357672d031e97217e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression::match(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression :: match（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="545b53966e667fb3872d212d0953323be39aa14c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression::match(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression :: match（const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e8e7a27021ca4af4b38ff0c9a7b4e866ae84c365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator::next()</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator :: next（）</target>
        </trans-unit>
        <trans-unit id="44186683aea2b9d1e1bc35bf0c266e7981c906eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator::peekNext() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator :: peekNext（）const</target>
        </trans-unit>
        <trans-unit id="b5306babe7e974d2fb34499acc530b9790e8e6ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;QRegularExpressionMatch::operator=(&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt;＆QRegularExpressionMatch :: operator =（&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1519f3d7a97b2170522c9b71cac806e104091367" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;QRegularExpressionMatch::operator=(const &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt;＆QRegularExpressionMatch :: operator =（const &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ba3a64b65f6eec2b70ccffbfec2db2f9ee7b249c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#hasMatch&quot;&gt;QRegularExpressionMatch::hasMatch&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#hasMatch&quot;&gt;QRegularExpressionMatch::hasMatch&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="71be822e1ca159763dae56d37c6d04bf364a784b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression::globalMatch(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression :: globalMatch（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4bcccd959118376f22bb8d113828f367abb4d90b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression::globalMatch(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression :: globalMatch（const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5b96b272a9c5da9ee487725bf580a9317adc3f90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;QRegularExpressionMatchIterator::operator=(&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;＆QRegularExpressionMatchIterator :: operator =（&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="32144fdaaedd6868eef38130f69a8467756752ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;QRegularExpressionMatchIterator::operator=(const &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;和QRegularExpressionMatchIterator :: operator =（const &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a3b9cd48a628ebad4593ea970d555983218546f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; automatically wraps the regular expression in the &lt;code&gt;\\A&lt;/code&gt; and &lt;code&gt;\\z&lt;/code&gt; anchors; in other words, it always attempts to do an exact match.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt;自动将正则表达式包装在 &lt;code&gt;\\A&lt;/code&gt; 和 &lt;code&gt;\\z&lt;/code&gt; 锚点中；换句话说，它总是尝试进行精确匹配。</target>
        </trans-unit>
        <trans-unit id="fdd85f50056de1516010dafd7bc7ede5a2703990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; uses a regular expression (regexp) to determine whether an input string is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, or &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;. The regexp can either be supplied when the &lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; is constructed, or at a later time.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt;使用正则表达式（regexp）来确定输入字符串是&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;，&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;还是&lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;。可以在构造&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt;时或在以后的时间提供regexp 。</target>
        </trans-unit>
        <trans-unit id="2355d0f4dd1c1e877ee984152b54aeb4bc08ea29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; *QRemoteObjectNode::acquireDynamic(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; * QRemoteObjectNode :: acquireDynamic（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0dc7a2d0b647abdc4f46512e7bd8acf2d1653910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt;和&lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76a87842f3c0f0504542c839514343c207902150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;QRemoteObjectRegistryHost&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt;和&lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;QRemoteObjectRegistryHost&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de26cce7c20238c0963c594fdff3b0a569d72834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjecthostbase&quot;&gt;QRemoteObjectHostBase&lt;/a&gt; is a base class that cannot be instantiated directly. It provides the &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;enableRemoting&lt;/a&gt; and &lt;a href=&quot;qremoteobjecthostbase#disableRemoting&quot;&gt;disableRemoting&lt;/a&gt; functionality shared by all host nodes (&lt;a href=&quot;qremoteobjecthost&quot;&gt;Host&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;RegistryHost&lt;/a&gt;) as well as the logic required to expose &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects on the Remote Objects network.</source>
          <target state="translated">&lt;a href=&quot;qremoteobjecthostbase&quot;&gt;QRemoteObjectHostBase&lt;/a&gt;是无法直接实例化的基类。它提供了所有主机节点（&lt;a href=&quot;qremoteobjecthost&quot;&gt;Host&lt;/a&gt;和&lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;RegistryHost&lt;/a&gt;）共享的&lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;enableRemoting&lt;/a&gt;和&lt;a href=&quot;qremoteobjecthostbase#disableRemoting&quot;&gt;disableRemoting&lt;/a&gt;功能，以及在Remote Objects网络上公开&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;对象所需的逻辑。</target>
        </trans-unit>
        <trans-unit id="e193e82cdbfb531c5897b9cff2487253a8c63d89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; connected to a {&lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;} {Registry}. A Node constructed in this manner can not be connected to, and thus can not expose Source objects on the network. Finding and connecting to other (Host) Nodes is handled by the &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt; specified by</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt;连接到{ &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt; } {注册表}。以这种方式构造的Node无法连接，因此无法在网络上公开Source对象。查找并连接到其他（主机）节点由&lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;指定</target>
        </trans-unit>
        <trans-unit id="e64160eef91e607c5b337ae623076ab145d6f111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectnode#ErrorCode-enum&quot;&gt;QRemoteObjectNode::ErrorCode&lt;/a&gt; QRemoteObjectNode::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectnode#ErrorCode-enum&quot;&gt;QRemoteObjectNode :: ErrorCode&lt;/a&gt; QRemoteObjectNode :: lastError（）常量</target>
        </trans-unit>
        <trans-unit id="0d0cfc1541e5756d20a118ff695bea7d84d0616c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectpendingcall#Error-enum&quot;&gt;QRemoteObjectPendingCall::Error&lt;/a&gt; QRemoteObjectPendingCall::error() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectpendingcall#Error-enum&quot;&gt;QRemoteObjectPendingCall :: Error&lt;/a&gt; QRemoteObjectPendingCall :: error（）常量</target>
        </trans-unit>
        <trans-unit id="b0e7913826857355cf5d0a6e819a16c547bec76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectpendingcallwatcher&quot;&gt;QRemoteObjectPendingCallWatcher&lt;/a&gt; and &lt;a href=&quot;qremoteobjectpendingreply&quot;&gt;QRemoteObjectPendingReply&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectpendingcallwatcher&quot;&gt;QRemoteObjectPendingCallWatcher&lt;/a&gt;和&lt;a href=&quot;qremoteobjectpendingreply&quot;&gt;QRemoteObjectPendingReply&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ff6085b2e1ef5c1a96ac85349d3351d9de2691e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectreplica#State-enum&quot;&gt;QRemoteObjectReplica::State&lt;/a&gt; QRemoteObjectReplica::state() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectreplica#State-enum&quot;&gt;QRemoteObjectReplica :: State&lt;/a&gt; QRemoteObjectReplica :: state（）常量</target>
        </trans-unit>
        <trans-unit id="43024f491e8a21b0e3d4fc9ae8188e3ac5878295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; is an object that represents a set of data (and possibly children) relating to a single resource entity. &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; gives direct access to the bytes in their raw format. In this way direct access allows reading data without buffer copying or indirection. Indirection is often useful when interacting with the resource entity as if it is a file, this can be achieved with &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;. The data and children behind a &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; are normally compiled into an application/library, but it is also possible to load a resource at runtime. When loaded at run time the resource file will be loaded as one big set of data and then given out in pieces via references into the resource tree.</source>
          <target state="translated">&lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt;是一个对象，代表与单个资源实体有关的一组数据（可能还有子级）。&lt;a href=&quot;qresource&quot;&gt;QResource可以&lt;/a&gt;直接访问原始格式的字节。这样，直接访问允许读取数据而无需缓冲区复制或间接访问。当与资源实体进行交互时，就像它是一个文件一样，间接访问通常很有用，这可以通过&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;实现。通常将&lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt;后面的数据和子级编译到应用程序/库中，但也可以在运行时加载资源。在运行时加载资源文件时，资源文件将作为一组大数据加载，然后通过对资源树的引用进行分段分发。</target>
        </trans-unit>
        <trans-unit id="2ac4d89fb1914384ef40e3400839c47dce131509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qresource#Compression-enum&quot;&gt;QResource::Compression&lt;/a&gt; QResource::compressionAlgorithm() const</source>
          <target state="translated">&lt;a href=&quot;qresource#Compression-enum&quot;&gt;QResource :: Compression&lt;/a&gt; QResource :: compressionAlgorithm（）const</target>
        </trans-unit>
        <trans-unit id="ddce5811d122cbb3ede12e4f30bc5c24791938bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: qPremultiply（&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a8284b785dc3d5b1260f571efb6a64f6f9965a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qRgba64(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: qRgba64（&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30005398327fb9e79e6d11d5d40ca6555134985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qRgba64(&lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: qRgba64（&lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b1ca76c25be746f7a556e5699a3dd86e00d83a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: qUnpremultiply（&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5db3f9d7f861e410c648d8fff53e3e919ccb7a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::rgba64() const</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: rgba64（）常量</target>
        </trans-unit>
        <trans-unit id="d673152b0b8a6e0ba5cb07bb4b291a224f41e405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColorTransform::map(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColorTransform::map(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3890ff19dbf04f46a79b3656453745c42538b7fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; can be used as a replacement for &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; when higher precision is needed. In particular a premultiplied &lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; can operate on unpremultiplied &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; without loss of precision except for alpha 0.</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;&lt;/a&gt;当需要更高的精度时，QRgba64可以替代&lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;。特别是预乘&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;可以unpremultiplied操作&lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;除了用于&amp;alpha;-0没有精度损失。</target>
        </trans-unit>
        <trans-unit id="02efb2ec621dce6dc365d02d2c8060cf1bd8dd19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; is a 64-bit data-structure containing four 16-bit color channels: Red, green, blue and alpha.</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;是一个64位数据结构，包含四个16位颜色通道：红色，绿色，蓝色和alpha。</target>
        </trans-unit>
        <trans-unit id="507dd213bef0ed893229f0864b62607c13d1a39e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c696869900e99fb98f7c6f3218d358a91874c9da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b920900f15211e8040b232bb46d1bca809cc045b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37025f686df53a1b45302595890664a651565a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50a7b0b570c8878bbd6e04dfc883c69cfa1b0bf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrhi&quot;&gt;QRhi&lt;/a&gt; *RenderState::rhi()</source>
          <target state="translated">&lt;a href=&quot;qrhi&quot;&gt;QRhi&lt;/a&gt; *RenderState::rhi()</target>
        </trans-unit>
        <trans-unit id="54de41b0212bf4d3eef56f73b4cb17bb41b9de6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrhiresourceupdatebatch&quot;&gt;QRhiResourceUpdateBatch&lt;/a&gt; *RenderState::resourceUpdateBatch()</source>
          <target state="translated">&lt;a href=&quot;qrhiresourceupdatebatch&quot;&gt;QRhiResourceUpdateBatch&lt;/a&gt; *RenderState::resourceUpdateBatch()</target>
        </trans-unit>
        <trans-unit id="230cea2c7ce06afd4879a1b963e6384bd9a88f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; *QRotationSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; * QRotationSensor :: reading（）常量</target>
        </trans-unit>
        <trans-unit id="690105f63648d53b675dd4eee57b74337b4660e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand::Shape&lt;/a&gt; QRubberBand::shape() const</source>
          <target state="translated">&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand :: Shape&lt;/a&gt; QRubberBand :: shape（）常量</target>
        </trans-unit>
        <trans-unit id="b79383903304a3ac0a73a133a478d7156d195aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand::Shape&lt;/a&gt; QStyleOptionRubberBand::shape</source>
          <target state="translated">&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand :: Shape&lt;/a&gt; QStyleOptionRubberBand :: shape</target>
        </trans-unit>
        <trans-unit id="6c7b2a832f0bb86aa9058259fb80cde93950796e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; and &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;和&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d425ab0bbf5801a3d171c07f253e6ad3632cfd49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; virtual destructor.</source>
          <target state="translated">&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;虚拟析构函数。</target>
        </trans-unit>
        <trans-unit id="a71eb0a472a087e7728173a6eb004dd2882af367" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; automatically detects errors while writing, such as the full partition situation, where &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() cannot write all the bytes. It will remember that an error happened, and will discard the temporary file in &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;在写入时自动检测错误，例如完整分区情况，其中&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）无法写入所有字节。它将记住发生了一个错误，并将丢弃&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）中的临时文件。</target>
        </trans-unit>
        <trans-unit id="447557ac270b18f6c3822d760cb1d5b3357f40b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; creates a temporary file in the same directory as the final file and atomically renames it. However this is not possible if the directory permissions do not allow creating new files. In order to preserve atomicity guarantees, &lt;a href=&quot;qsavefile#open&quot;&gt;open&lt;/a&gt;() fails when it cannot create the temporary file.</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;在与最终文件相同的目录中创建一个临时文件，并自动对其进行重命名。但是，如果目录权限不允许创建新文件，则这是不可能的。为了保留原子性保证，当&lt;a href=&quot;qsavefile#open&quot;&gt;open&lt;/a&gt;（）无法创建临时文件时，它将失败。</target>
        </trans-unit>
        <trans-unit id="acb2492c1d3ead710dd24a79035fe7b29a2bc7b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; is an I/O device for writing text and binary files, without losing existing data if the writing operation fails.</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;是用于写入文本和二进制文件的I / O设备，如果写入操作失败，则不会丢失现有数据。</target>
        </trans-unit>
        <trans-unit id="934f09b917da584cdeb77625dfbad42a431a7259" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt; supports the following format tags for &lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries::setItemLabelFormat&lt;/a&gt;():</source>
          <target state="translated">&lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt;支持&lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries :: setItemLabelFormat&lt;/a&gt;（）的以下格式标签：</target>
        </trans-unit>
        <trans-unit id="61fba3f6350a1d182217ca998f140ac5f1365b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp;QScatterDataItem::operator=(const &lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt;＆QScatterDataItem :: operator =（const &lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d28393680aa7b20a679e03a69fa87e0ee8235b81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; takes ownership of all QtDataVisualization::QScatterDataArray and &lt;a href=&quot;qscatterdataitem&quot;&gt;QScatterDataItem&lt;/a&gt; objects passed to it.</source>
          <target state="translated">&lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt;拥有所有传递给它的QtDataVisualization :: QScatterDataArray和&lt;a href=&quot;qscatterdataitem&quot;&gt;QScatterDataItem&lt;/a&gt;对象的所有权。</target>
        </trans-unit>
        <trans-unit id="a11e6d430aa22a3e9f2a19a5343ebb3d40c894a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; guarantees that the object pointed to will get deleted when the current scope disappears.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;保证当当前作用域消失时，指向的对象将被删除。</target>
        </trans-unit>
        <trans-unit id="f5e8a1f1c7f8545e68837a11e1d1363f9ce6fc9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; simply holds a pointer to a heap allocated object and deletes it in its destructor. This class is useful when an object needs to be heap allocated and deleted, but no more. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; is lightweight, it makes no use of additional structure or reference counting.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;只是持有指向堆分配对象的指针，并在其析构函数中将其删除。当需要对对象进行堆分配和删除时（仅此而已），此类非常有用。&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;是轻量级的，它不使用其他结构或引用计数。</target>
        </trans-unit>
        <trans-unit id="74393e6fc5c934cea29b04b13766f2f6c691b931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerarraydeleter&quot;&gt;QScopedPointerArrayDeleter&lt;/a&gt; - deletes the pointer using &lt;code&gt;delete []&lt;/code&gt;. Use this handler for pointers that were allocated with &lt;code&gt;new []&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerarraydeleter&quot;&gt;QScopedPointerArrayDeleter-&lt;/a&gt;使用 &lt;code&gt;delete []&lt;/code&gt; 删除指针。将此处理程序用于分配有 &lt;code&gt;new []&lt;/code&gt; 的指针。</target>
        </trans-unit>
        <trans-unit id="24dd5759ca4b518ede243946c68d80857c2835ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerdeleter&quot;&gt;QScopedPointerDeleter&lt;/a&gt; - the default, deletes the pointer using &lt;code&gt;delete&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerdeleter&quot;&gt;QScopedPointerDeleter-&lt;/a&gt;默认值，使用 &lt;code&gt;delete&lt;/code&gt; 删除指针</target>
        </trans-unit>
        <trans-unit id="619df3ef85246fad1a6f9715b2f096c02f310d2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerpoddeleter&quot;&gt;QScopedPointerPodDeleter&lt;/a&gt; - deletes the pointer using &lt;code&gt;free()&lt;/code&gt;. Use this handler for pointers that were allocated with &lt;code&gt;malloc()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerpoddeleter&quot;&gt;QScopedPointerPodDeleter-&lt;/a&gt;使用 &lt;code&gt;free()&lt;/code&gt; 删除指针。将此处理程序用于通过 &lt;code&gt;malloc()&lt;/code&gt; 分配的指针。</target>
        </trans-unit>
        <trans-unit id="aecaefe7236c8d8d21961cb343eea30de0f26d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopeguard&quot;&gt;QScopeGuard&lt;/a&gt;&amp;lt;F&amp;gt; is a class which sole purpose is to run a function</source>
          <target state="translated">&lt;a href=&quot;qscopeguard&quot;&gt;QScopeGuard&lt;/a&gt; &amp;lt;F&amp;gt;是一个类，其唯一目的是运行功能</target>
        </trans-unit>
        <trans-unit id="70970bf9a3b8857d721053ed4e83945d65ff9f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QOffscreenSurface::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QOffscreenSurface ::屏幕（）const的</target>
        </trans-unit>
        <trans-unit id="952cf0cc9fef10d376cb34997be7c87022f93a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QOpenGLContext::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QOpenGLContext ::屏幕（）const的</target>
        </trans-unit>
        <trans-unit id="672ae639a55aa65fc59edb26a812f8b26e8424e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QWidget::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QWidget :: screen（）常量</target>
        </trans-unit>
        <trans-unit id="79a452e0f5ae62989775205804ec814bedc74847" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QWindow::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QWindow ::屏幕（）const的</target>
        </trans-unit>
        <trans-unit id="82156729e3ca61bc8bcc984874e65947804db92b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; provides equivalent functionality to query for information about available screens, screen that form a virtual desktop, and screen geometries.</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt;提供了等效的功能来查询有关可用屏幕，构成虚拟桌面的屏幕以及屏幕几何形状的信息。</target>
        </trans-unit>
        <trans-unit id="39647249bac6233af26a445d5d5c5a87e03dc051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, provides smooth scrolling for any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;&lt;/a&gt;继承&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea的&lt;/a&gt;QScrollArea为任何&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;提供平滑的滚动（即，该控件逐像素滚动）。如果需要更特殊的行为，则仅需要子类&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;。例如，如果该区域的全部内容不适合在&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;上绘制，或者您不想平滑滚动，则为true 。</target>
        </trans-unit>
        <trans-unit id="f865d90288ca7bbaae8b3e145e9adc3570ce6b50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits QAbstractScrollArea, provides smooth scrolling for any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass QAbstractScrollArea if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;&lt;/a&gt;继承QAbstractScrollArea的QScrollArea为任何&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;提供平滑的滚动（即，该控件逐像素滚动）。如果需要更特殊的行为，则仅需要子类QAbstractScrollArea。例如，如果该区域的全部内容不适合在&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;上绘制，或者您不想平滑滚动，则为true 。</target>
        </trans-unit>
        <trans-unit id="3728ce3a228d60985af4f956ea5cd134c2857177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits QAbstractScrollArea, provides smooth scrolling for any &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass QAbstractScrollArea if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;&lt;/a&gt;继承QAbstractScrollArea的QScrollArea为任何&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;提供平滑的滚动（即，该控件逐像素滚动）。如果需要更特殊的行为，则仅需要子类QAbstractScrollArea。例如，如果该区域的全部内容不适合在&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;上绘制，或者您不想平滑滚动，则为true 。</target>
        </trans-unit>
        <trans-unit id="ee9a4b85e5782ee17d915d7246d0c0c0525f7351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; (6) provides a vertical or horizontal scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;（6）提供垂直或水平滚动条。</target>
        </trans-unit>
        <trans-unit id="b62518d550fc078468138de3240eeac53735872b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; *QAbstractScrollArea::horizontalScrollBar() const</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; * QAbstractScrollArea :: horizo​​ntalScrollBar（）const</target>
        </trans-unit>
        <trans-unit id="72e35410276304179639e706c1a5e8ff9109f9f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; *QAbstractScrollArea::verticalScrollBar() const</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; * QAbstractScrollArea :: verticalScrollBar（）常量</target>
        </trans-unit>
        <trans-unit id="b081b31c110bd36c96049ed10a809323027d5d7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; only provides integer ranges. Note that although &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; handles very large numbers, scroll bars on current screens cannot usefully represent ranges above about 100,000 pixels. Beyond that, it becomes difficult for the user to control the slider using either the keyboard or the mouse, and the scroll arrows will have limited use.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;仅提供整数范围。请注意，尽管&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar可以&lt;/a&gt;处理非常大的数字，但当前屏幕上的滚动条无法有效地表示约100,000像素以上的范围。除此之外，用户难以使用键盘或鼠标来控制滑块，并且滚动箭头的使用将受到限制。</target>
        </trans-unit>
        <trans-unit id="901aaedba0fc102c0f36744d533d9dac31337405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; simply creates its style option and then draws &lt;code&gt;CC_ScrollBar&lt;/code&gt;. Some styles draw the background of add page and sub page with &lt;code&gt;PE_PanelButtonBevel&lt;/code&gt;, and also use indicator arrows to draw the arrows in the next and previous line indicators; we have not included these in the tree as their use is up to the individual style. The style's &lt;code&gt;PM_MaximumDragDistance&lt;/code&gt; is the maximum distance in pixels the mouse can move from the bounds of the scroll bar and still move the handle.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;只需创建其样式选项，然后绘制 &lt;code&gt;CC_ScrollBar&lt;/code&gt; 即可。某些样式使用 &lt;code&gt;PE_PanelButtonBevel&lt;/code&gt; 绘制添加页面和子页面的背景，还使用指示器箭头在下一行和上一行指示器中绘制箭头；我们没有将它们包含在树中，因为它们的使用取决于个人风格。样式的 &lt;code&gt;PM_MaximumDragDistance&lt;/code&gt; 是鼠标可以从滚动条的边界移动并仍然移动手柄的最大距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="38234c7498abc29bb4117db01f2d13d556440f3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; emits this signal whenever its scroller properties change.</source>
          <target state="translated">&lt;a href=&quot;qscroller&quot;&gt;&lt;/a&gt;每当其滚动器属性更改时，QScroller都会发出此信号。</target>
        </trans-unit>
        <trans-unit id="25015f7a4dc6f3f62c59e8f2234c90825b4da636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; emits this signal whenever the state changes.</source>
          <target state="translated">&lt;a href=&quot;qscroller&quot;&gt;&lt;/a&gt;状态改变时，QScroller会发出此信号。</target>
        </trans-unit>
        <trans-unit id="5206a215d6a7b3dd8ea1a7a67752c47afd38d059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;QScrollerProperties::operator=(const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt;＆QScrollerProperties :: operator =（const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="dd45468095ebacffd6672301bc138c8237f471a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollevent#ScrollState-enum&quot;&gt;QScrollEvent::ScrollState&lt;/a&gt; QScrollEvent::scrollState() const</source>
          <target state="translated">&lt;a href=&quot;qscrollevent#ScrollState-enum&quot;&gt;QScrollEvent :: ScrollState&lt;/a&gt; QScrollEvent :: scrollState（）const</target>
        </trans-unit>
        <trans-unit id="64c0824516a053873ceac18e09b2672cc9f8317c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt; is a convenience subclass of &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; that allows you to accept incoming SCTP socket connections either in TCP emulation or in datagram mode.</source>
          <target state="translated">&lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt;是&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;的便利子类，它允许您以TCP仿真或数据报模式接受传入的SCTP套接字连接。</target>
        </trans-unit>
        <trans-unit id="16d0dd9bcdc9ec4c9cb1cc80f8d6c4b186bdd56a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; *QSctpServer::nextPendingDatagramConnection()</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; * QSctpServer :: nextPendingDatagramConnection（）</target>
        </trans-unit>
        <trans-unit id="ce50d26501a8c6a4aebd6bd9dd7e5c1cb138fa5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; and &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;和&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdcf1b754c34173af171bb8df15990a328c63d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; can operate in one of two possible modes:</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;可以在两种可能的模式之一下运行：</target>
        </trans-unit>
        <trans-unit id="f43f55deb4235765ff3d804f1f0c571b06742440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; is a convenience subclass of &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; that allows you to emulate TCP data stream over SCTP or establish an SCTP connection for reliable datagram service.</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;是&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;的便利子类，它使您可以通过SCTP模拟TCP数据流或建立SCTP连接以实现可靠的数据报服务。</target>
        </trans-unit>
        <trans-unit id="a6dcfb26592512d20b0ce2579cb3c72e6b3ff255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt; *QScxmlCompiler::loader() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt; * QScxmlCompiler :: loader（）常量</target>
        </trans-unit>
        <trans-unit id="6a14bb1e7aaf3343935a4cc78b9f782f1a6368e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlcppdatamodel&quot;&gt;QScxmlCppDataModel&lt;/a&gt;, &lt;a href=&quot;qscxmlecmascriptdatamodel&quot;&gt;QScxmlEcmaScriptDataModel&lt;/a&gt;, and &lt;a href=&quot;qscxmlnulldatamodel&quot;&gt;QScxmlNullDataModel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qscxmlcppdatamodel&quot;&gt;QScxmlCppDataModel&lt;/a&gt;，&lt;a href=&quot;qscxmlecmascriptdatamodel&quot;&gt;QScxmlEcmaScriptDataModel&lt;/a&gt;和&lt;a href=&quot;qscxmlnulldatamodel&quot;&gt;QScxmlNullDataModel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d0a2cbee521a7ff4a0bfda162271e0543176c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; *QScxmlStateMachine::dataModel() const</source>
          <target state="translated">&lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; * QScxmlStateMachine :: dataModel（）const</target>
        </trans-unit>
        <trans-unit id="4c0f2ca7a9b466024247bb6c50408d378201e113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmldynamicscxmlservicefactory&quot;&gt;QScxmlDynamicScxmlServiceFactory&lt;/a&gt; and &lt;a href=&quot;qscxmlstaticscxmlservicefactory&quot;&gt;QScxmlStaticScxmlServiceFactory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qscxmldynamicscxmlservicefactory&quot;&gt;QScxmlDynamicScxmlServiceFactory&lt;/a&gt;和&lt;a href=&quot;qscxmlstaticscxmlservicefactory&quot;&gt;QScxmlStaticScxmlServiceFactory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="786d921637fdde3f0e5b1d78b9f787e11ad31da2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp;QScxmlError::operator=(const &lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt;＆QScxmlError :: operator =（const &lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c5a497687ab9815920f45ba53e1709ce09bed670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent::EventType&lt;/a&gt; QScxmlEvent::eventType() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent :: EventType&lt;/a&gt; QScxmlEvent :: eventType（）常量</target>
        </trans-unit>
        <trans-unit id="8a09bf5cd873de1bc7dd3b0fb3a41da3f062e89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp;QScxmlEvent::operator=(const &lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt;＆QScxmlEvent :: operator =（const &lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d0fbd3b9936df4b2c2db27257a94cc011ceb7358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;ContainerId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;ContainerId&lt;/a&gt;不明。</target>
        </trans-unit>
        <trans-unit id="61217ec4ba9c656a424b61b25b812606881e4292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent::ContainerId&lt;/a&gt; InvokeInfo::finalize</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent :: ContainerId&lt;/a&gt; InvokeInfo :: finalize</target>
        </trans-unit>
        <trans-unit id="e35b208b56b9fa755453c46f5f045847d18a4368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;EvaluatorId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;EvaluatorId&lt;/a&gt;未知。</target>
        </trans-unit>
        <trans-unit id="c5afccbca92f0dabc7f90ed9e65a878e2ceeb751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt; InvokeInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt; InvokeInfo :: expr</target>
        </trans-unit>
        <trans-unit id="0ccb59e154fa220debc71f28b154f59c8f3557df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt; ParameterInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt; ParameterInfo :: expr</target>
        </trans-unit>
        <trans-unit id="c6da2d0068c5a484ea6a1944ad32c79fe7d440a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;InstructionId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;InstructionId&lt;/a&gt;不明。</target>
        </trans-unit>
        <trans-unit id="dd42cd781132b6a3dfc35d6e36fa9088ecd5532c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: context</target>
        </trans-unit>
        <trans-unit id="dd115557a4aaf5d7fcd032f89bcadc74854b08e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::dest</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: dest</target>
        </trans-unit>
        <trans-unit id="76c45d644045abf03e23cab708db9b0b7a6dcdf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: expr</target>
        </trans-unit>
        <trans-unit id="6f94b045318d04b7cac68f16e797cce41912aebd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; EvaluatorInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; EvaluatorInfo :: context</target>
        </trans-unit>
        <trans-unit id="6e99c9da0573f48ed6f4ebe1f6c3da422b9905b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; EvaluatorInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; EvaluatorInfo :: expr</target>
        </trans-unit>
        <trans-unit id="297f044b0e62b693bde395859e25004e2bb1e94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::array</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: array</target>
        </trans-unit>
        <trans-unit id="2795de50a63f386202054fb998d4454d2807d773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: context</target>
        </trans-unit>
        <trans-unit id="3750cb86e4b3c3fe74b9c4cab2e66da11af6e3ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::index</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: index</target>
        </trans-unit>
        <trans-unit id="8752713a6bde421061da0937c6748d441e324908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::item</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: item</target>
        </trans-unit>
        <trans-unit id="091d264af4530bd10c0447226ac9a5543c08b05a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: context</target>
        </trans-unit>
        <trans-unit id="8b7b15411c820cfe57db43473f401c7d71e980a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::id</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: id</target>
        </trans-unit>
        <trans-unit id="0c7ed452ad96f4c5bbdc71463e4ff32e10b7ed8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::location</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: location</target>
        </trans-unit>
        <trans-unit id="2c99085946262aede3b1466bad3f795da59686ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::prefix</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: prefix</target>
        </trans-unit>
        <trans-unit id="c1ebee5c026cc01fb29e7e75a491511476126b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ParameterInfo::location</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ParameterInfo :: location</target>
        </trans-unit>
        <trans-unit id="5b635280d20013aef0b080b7088caf4a7045d845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ParameterInfo::name</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ParameterInfo :: name</target>
        </trans-unit>
        <trans-unit id="b849c8c351a3147292eef2d57d3bda7019523c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;StringId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;StringId&lt;/a&gt;不明。</target>
        </trans-unit>
        <trans-unit id="f4b7be098631cd36589b89694b353567790d36d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *QScxmlCompiler::compile()</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; * QScxmlCompiler :: compile（）</target>
        </trans-unit>
        <trans-unit id="7a6965ad60608605cc2343f81a5c519df8e7cc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *QScxmlDataModel::stateMachine() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; * QScxmlDataModel :: stateMachine（）const</target>
        </trans-unit>
        <trans-unit id="d2d24be23f76de59fd25a194e34101eb8d3a2243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; is an implementation of the &lt;a href=&quot;http://www.w3.org/TR/scxml/#&quot;&gt;State Chart XML (SCXML)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt;是&lt;a href=&quot;http://www.w3.org/TR/scxml/#&quot;&gt;状态图XML（SCXML）的实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3bdee3ae55566142c1251ceb6143320622209b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt; is the interface to the compiled representation of SCXML state machines. It should only be used internally and by state machines compiled from SCXML documents.</source>
          <target state="translated">&lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt;是SCXML状态机的已编译表示形式的接口。它只能在内部使用，也只能由从SCXML文档编译的状态机使用。</target>
        </trans-unit>
        <trans-unit id="1700181184c0498e36ece6d64eb42a0ff952e2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; *QSemaphoreReleaser::cancel()</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; * QSemaphoreReleaser :: cancel（）</target>
        </trans-unit>
        <trans-unit id="e4f8da8fa4a20de984bd63dfb993de5922d02997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; *QSemaphoreReleaser::semaphore() const</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; * QSemaphoreReleaser :: semaphore（）常量</target>
        </trans-unit>
        <trans-unit id="1d9a7774e4244cab8e196f38e5f9af2dad020f2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt;是的一般化&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;保护一定数目的相同的资源。相反，&lt;a href=&quot;qmutex&quot;&gt;QMutex仅&lt;/a&gt;保护一种资源。的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-semaphores-example.html&quot;&gt;信号量实施例&lt;/a&gt;示出了信号量的一个典型应用：同步访问一个生产者和消费者之间的环形缓冲器。</target>
        </trans-unit>
        <trans-unit id="6d9ea9bcbc14545e807f08991569f513a1f8fe88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt;是的一般化&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;保护一定数目的相同的资源。相比之下，&lt;a href=&quot;qmutex&quot;&gt;QMutex恰好&lt;/a&gt;保护一种资源。的&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-semaphores-example.html&quot;&gt;信号量实施例&lt;/a&gt;示出了信号量的一个典型应用：同步访问一个生产者和消费者之间的环形缓冲器。</target>
        </trans-unit>
        <trans-unit id="bb1aa457a489f67f7372813ad879d987cbc476ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt;是的一般化&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;保护一定数目的相同的资源。相比之下，&lt;a href=&quot;qmutex&quot;&gt;QMutex恰好&lt;/a&gt;保护一种资源。的&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtcore-threads-semaphores-example.html&quot;&gt;信号量实施例&lt;/a&gt;示出了信号量的一个典型应用：同步访问一个生产者和消费者之间的环形缓冲器。</target>
        </trans-unit>
        <trans-unit id="0b24703d72a4f53534e18bc6ee39ab43e6c31471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; can be used wherever you would otherwise use &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore::release&lt;/a&gt;(). Constructing a &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; defers the release() call on the semaphore until the &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is destroyed (see &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII pattern&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;可以在任何其他使用&lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore :: release&lt;/a&gt;（）的地方使用。构造&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser会&lt;/a&gt;延迟对信号量的release（）调用，直到&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;被销毁为止（请参阅&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII模式&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="eedbfa44bc5453cd6872b17b16427ca85bdc4e4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is a &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII&lt;/a&gt; wrapper around this function.</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;是围绕此功能的&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII&lt;/a&gt;包装器。</target>
        </trans-unit>
        <trans-unit id="83936a7012752e34c8a2148bc10243927ed931a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is move-enabled and can therefore be returned from functions to transfer responsibility for releasing a semaphore out of a function or a scope:</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;是启用移动的，因此可以从函数返回，以转移从函数或作用域释放信号的职责：</target>
        </trans-unit>
        <trans-unit id="9d831ce0f3b0e0e3cc3db86dc9edf866379245b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;QSemaphoreReleaser::operator=(&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;和QSemaphoreReleaser :: operator =（&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e93f6f7f86c9b9f7e5d53300b1e77a3627a781cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *QSensorBackend::sensor() const</source>
          <target state="translated">&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; * QSensorBackend :: sensor（）const</target>
        </trans-unit>
        <trans-unit id="1f00db4e1a06785cb2861bd25555b7941c061240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; : for connecting the sensor gesture signals.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt;：用于连接传感器手势信号。</target>
        </trans-unit>
        <trans-unit id="cba49407f0caa8c4fd9941e4a569c4b538803d4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; recognizer developers should sub-class this to implement their own recognizer.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt;识别器开发人员应将此子类化以实现自己的识别器。</target>
        </trans-unit>
        <trans-unit id="533a7820028f3d573ab3a93504de4e28295a74ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt;: can be used for determining which sensor gestures are available.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt;：可用于确定哪些传感器手势可用。</target>
        </trans-unit>
        <trans-unit id="9ee8472cdf68599d78453d2492a87198c76f2466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; *QSensorBackend::reading() const</source>
          <target state="translated">&lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; * QSensorBackend :: reading（）const</target>
        </trans-unit>
        <trans-unit id="ed14b545dea49a04c9bf78af9fad707d72749cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; emits this signal when &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt; has been changed.</source>
          <target state="translated">&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;发出此信号&lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt;已经改变。</target>
        </trans-unit>
        <trans-unit id="4e83c036ebdeabce5f0104d372f91a88c7009241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; is a &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; that runs its animations in sequence, i.e., it starts one animation after another has finished playing. The animations are played in the order they are added to the group (using &lt;a href=&quot;qanimationgroup#addAnimation&quot;&gt;addAnimation()&lt;/a&gt; or &lt;a href=&quot;qanimationgroup#insertAnimation&quot;&gt;insertAnimation()&lt;/a&gt;). The animation group finishes when its last animation has finished.</source>
          <target state="translated">&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;是一个&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt;，它按顺序运行其动画，即，它在另一个动画播放完毕后开始一个动画。动画按照添加到组中的顺序播放（使用&lt;a href=&quot;qanimationgroup#addAnimation&quot;&gt;addAnimation（）&lt;/a&gt;或&lt;a href=&quot;qanimationgroup#insertAnimation&quot;&gt;insertAnimation（）&lt;/a&gt;）。当动画组的最后一个动画结束时，动画组结束。</target>
        </trans-unit>
        <trans-unit id="4c7dd36705361f1ab9e4afec034cd4510ea5f375" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable::const_iterator&lt;/a&gt; QSequentialIterable::begin() const</source>
          <target state="translated">&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable :: const_iterator&lt;/a&gt; QSequentialIterable :: begin（）const</target>
        </trans-unit>
        <trans-unit id="b70c7bd912f21dddc4cadf36a5bd8c81f861b0dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable::const_iterator&lt;/a&gt; QSequentialIterable::end() const</source>
          <target state="translated">&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable :: const_iterator&lt;/a&gt; QSequentialIterable :: end（）const</target>
        </trans-unit>
        <trans-unit id="5ffe96e26183c18852f0eef0c0fc2a13d58cceee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; provides a set of functions that suspend the calling thread until certain signals are emitted. These functions can be used to implement blocking serial ports:</source>
          <target state="translated">&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt;提供了一组函数，这些函数可以挂起调用线程，直到发出某些信号为止。这些功能可用于实现阻塞串行端口：</target>
        </trans-unit>
        <trans-unit id="ac7d609ac0ea8c14d0c59f0e67d9a706e688321d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort::PinoutSignals&lt;/a&gt; QSerialPort::pinoutSignals()</source>
          <target state="translated">&lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort :: PinoutSignals&lt;/a&gt; QSerialPort :: pinoutSignals（）</target>
        </trans-unit>
        <trans-unit id="8250238c79aeca9fec674b8d959e64239db6754b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;() blocks calls until one payload of data has been written to the serial port.</source>
          <target state="translated">&lt;a href=&quot;qserialport#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;（）阻止调用，直到将一个有效载荷数据写入串行端口为止。</target>
        </trans-unit>
        <trans-unit id="bfac952d903a7088d95ec44263230942c11edd75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;() blocks calls until new data is available for reading.</source>
          <target state="translated">&lt;a href=&quot;qserialport#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;（）阻止调用，直到可以读取新数据为止。</target>
        </trans-unit>
        <trans-unit id="db6911ec3879178a968987a65b76ca49c5618fec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;QSerialPortInfo::operator=(const &lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt;＆QSerialPortInfo :: operator =（const &lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="512eddc820a509339cddfb0495f5777b6a1871f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; provides an interface between the application and the platform's session manager. In Qt, session management requests for action are handled by the two signals &lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;QGuiApplication::commitDataRequest&lt;/a&gt;() and &lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;QGuiApplication::saveStateRequest&lt;/a&gt;(). Both provide a reference to a &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; object as argument. The session manager can only be accessed in slots invoked by these signals.</source>
          <target state="translated">&lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt;提供了应用程序和平台的会话管理器之间的接口。在Qt中，会话管理操作请求由两个信号&lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;QGuiApplication :: commitDataRequest&lt;/a&gt;（）和&lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;QGuiApplication :: saveStateRequest&lt;/a&gt;（）处理。两者都提供对&lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt;对象的引用作为参数。只能在这些信号所调用的插槽中访问会话管理器。</target>
        </trans-unit>
        <trans-unit id="65f22647a015c26dc6d9fe297dd3629c5322bdda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager::RestartHint&lt;/a&gt; QSessionManager::restartHint() const</source>
          <target state="translated">&lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager :: RestartHint&lt;/a&gt; QSessionManager :: restartHint（）const</target>
        </trans-unit>
        <trans-unit id="cdaf0dc89222173967bcc48e7e1714e5115572e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; features both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style iterators are more low-level and more cumbersome to use; on the other hand, they are slightly faster and, for developers who already know STL, have the advantage of familiarity.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;同时具有&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;。STL样式的迭代器更底层且使用起来更麻烦。另一方面，它们的速度稍快一些，对于已经了解STL的开发人员来说，它们具有熟悉的优势。</target>
        </trans-unit>
        <trans-unit id="67d2494c584c58a0df614c8917c066638bc19882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; features both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style iterators are more low-level and more cumbersome to use; on the other hand, they are slightly faster and, for developers who already know STL, have the advantage of familiarity.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;同时具有&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;和&lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;。STL样式的迭代器更底层且使用起来更麻烦。另一方面，它们的速度稍快一些，对于已经了解STL的开发人员来说，它们具有熟悉的优势。</target>
        </trans-unit>
        <trans-unit id="a245d805a34e73582bfca611cbc277f22bba2715" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; has both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet同时&lt;/a&gt;具有&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;。Java风格的迭代器比STL风格的迭代器更高级，更易于使用。另一方面，它们的效率略低。</target>
        </trans-unit>
        <trans-unit id="6dd436174a821c741e4035553edb719a228edf1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; has both &lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. STL-style iterators are more efficient and should be preferred.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet同时&lt;/a&gt;具有&lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;。STL样式的迭代器效率更高，应该首选。</target>
        </trans-unit>
        <trans-unit id="bed608e42410cb463e19a5be359e383328e09ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; is unordered, so an iterator's sequence cannot be assumed to be predictable. If ordering by key is required, use a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;是无序的，因此不能假定迭代器的序列是可预测的。如果需要通过密钥订购，请使用&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="520617276b235b5c1c851ae547500ce54fa9db52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; supports both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;支持&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;。Java风格的迭代器比STL风格的迭代器更高级，更易于使用。另一方面，它们的效率略低。</target>
        </trans-unit>
        <trans-unit id="820f94cbc4f28bcece6442b4899b5dba43a7b5d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt; QStateMachine::configuration() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt; &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt; QStateMachine :: configuration（）const</target>
        </trans-unit>
        <trans-unit id="789d6aeb819646cec56d57cb01426f7870e6e29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QOpenGLContext::extensions() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QOpenGLContext :: extensions（）常量</target>
        </trans-unit>
        <trans-unit id="7e15776b402bc9bee24b6e9addb41b71183303cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key&amp;gt;</target>
        </trans-unit>
        <trans-unit id="735dd604cc4b14a8d21b926b4b82949a43136351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. If you want to modify the &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; as you iterate over it, you must use &lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; instead. It is generally good practice to use &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; on a non-const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; as well, unless you need to change the &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; through the iterator. Const iterators are slightly faster, and can improve code readability.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: const_iterator允许您迭代&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;。如果要在迭代过程中修改&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;，则必须改用&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt;。通常最好在非const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;上使用&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt;，除非您需要通过迭代器更改&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;。常量迭代器的速度稍快一些，可以提高代码的可读性。</target>
        </trans-unit>
        <trans-unit id="5670ec5b13e8d9c9132e3b9a8a33127a99dc3b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="19c360b5565471c7cc1d5010d6ab837369a26426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QList::toSet() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QList :: toSet（）常量</target>
        </trans-unit>
        <trans-unit id="88ecef6fcabe6c157555063d9647aaa97ad5edc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It stores values in an unspecified order and provides very fast lookup of the values. Internally, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; is implemented as a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;是Qt的通用&lt;a href=&quot;containers#&quot;&gt;容器类之一&lt;/a&gt;。它以未指定的顺序存储值，并提供非常快速的值查找。在内部，&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;被实现为&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc9d4b2cbadfc0602f605307ea7e103c20187f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</target>
        </trans-unit>
        <trans-unit id="3c38cc5d516c384c2f81b34f4560589d6c83fe07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</target>
        </trans-unit>
        <trans-unit id="a2b76562dccc9832460fe0c9f2b0fabcca3baedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; and to remove items (using &lt;a href=&quot;qset#erase&quot;&gt;QSet::erase&lt;/a&gt;()) while you iterate. (&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; doesn't let you</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; :: iterator允许您迭代&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;并在迭代时删除项（使用&lt;a href=&quot;qset#erase&quot;&gt;QSet :: erase&lt;/a&gt;（））。（&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;不允许您</target>
        </trans-unit>
        <trans-unit id="444792da0efa459c8dd9cce6a8bf99cc9ca3fb6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s value data type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. You cannot, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *. In addition, the type must provide &lt;code&gt;operator==()&lt;/code&gt;, and there must also be a global &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;() function that returns a hash value for an argument of the key's type. See the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; documentation for a list of types supported by &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;的value数据类型必须是&lt;a href=&quot;containers#assignable-data-type&quot;&gt;可分配的数据类型&lt;/a&gt;。例如，您不能将&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;存储为值。而是存储一个&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *。此外，该类型必须提供 &lt;code&gt;operator==()&lt;/code&gt; ，并且还必须有一个全局&lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;（）函数，该函数返回键类型的参数的哈希值。请参阅&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;文档以获取&lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;（）支持的类型列表。</target>
        </trans-unit>
        <trans-unit id="c71298fba5142b69648cdb1b60e8a0292fabcbe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::intersect(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: intersect（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="0e937862aa82e80d41c63122267747e7d7f61f48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;amp;=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator＆=（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b4da4f2f021c759ef5b454cac44b5430feb8dc98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;amp;=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator＆=（const T＆</target>
        </trans-unit>
        <trans-unit id="30fda9023c8d196009430e1b9e23cc424709892c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;lt;&amp;lt;(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator &amp;lt;&amp;lt;（const T＆</target>
        </trans-unit>
        <trans-unit id="4406afa39238df424ea24bcedabd1bdd86640d05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator+=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator + =（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="028154fc70bf581a02d8a671684bb5ff71341b22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator+=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator + =（const T＆</target>
        </trans-unit>
        <trans-unit id="9a7af435d321252952571d6d29b922153adfcf96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator-=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator-=（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="5eacbf52609545e4b27a1aab9d20644a0b5da6dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator-=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator-=（const T＆</target>
        </trans-unit>
        <trans-unit id="3df94a9cdad5f1961791a64531fd99057f2ae4c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator|=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator | =（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="106a3c141027bddbb54bd2b0afc88e4d08995440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator|=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: operator | =（const T＆</target>
        </trans-unit>
        <trans-unit id="88bfa12c77c73412a714742591651a76541225af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::subtract(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: subtract（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="1339bc3c6087c96d99413d88f42e8da386e63370" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::unite(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆QSet :: unite（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="c2e611f2655b949ecb5a348c5c93c88f7720ec75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator&amp;amp;(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator＆（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="81bb749b62fd6a27b1fb648062c8e4d4916bb0b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator+(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator +（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="857b81781b91fbd4b4bcda61c4abbe224205e5b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator-(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator-（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="137efa0f92a93c85aa4d3ce3a7d00046b5f3f57e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator|(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator |（const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="a9efbd38a7b76f60dc3fed6eb45dd7cbd87c7716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::crbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: crbegin（）const</target>
        </trans-unit>
        <trans-unit id="84b4d0f52e69028814cbb05db41c6caec7b41dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::crend() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: crend（）const</target>
        </trans-unit>
        <trans-unit id="b82e3f3fb88beebe47d52904e0c8e216dca95147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::rbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: rbegin（）const</target>
        </trans-unit>
        <trans-unit id="aa8ce9a094026f517804874fa0f701ebed74f798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::rend() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: rend（）const</target>
        </trans-unit>
        <trans-unit id="412a24bf4640b641eca7d089425483b1c53f8e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet::reverse_iterator&lt;/a&gt; QSet::rbegin()</source>
          <target state="translated">&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet :: reverse_iterator&lt;/a&gt; QSet :: rbegin（）</target>
        </trans-unit>
        <trans-unit id="a09630604937aa50cc8585c78f7b975d6e9b5372" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet::reverse_iterator&lt;/a&gt; QSet::rend()</source>
          <target state="translated">&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet :: reverse_iterator&lt;/a&gt; QSet :: rend（）</target>
        </trans-unit>
        <trans-unit id="9873d47e4fe644f80681bccd6873fae108505a65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::begin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: begin（）const</target>
        </trans-unit>
        <trans-unit id="cb5358311aa12c030870e555e3db77315029b59e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: cbegin（）const</target>
        </trans-unit>
        <trans-unit id="d9e7929dbaf20f55a4add06ec9d7a57a3b01c165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::cend() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: cend（）const</target>
        </trans-unit>
        <trans-unit id="d5a0e5a198bbb07510eafcc415ac07daf75cba38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constBegin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constBegin（）const</target>
        </trans-unit>
        <trans-unit id="ed06e6c6c0ee71755bb344dbfdfd8e9bcc7e298f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constEnd() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constEnd（）const</target>
        </trans-unit>
        <trans-unit id="230c057e3fb8ec8c1b81c60089e7257443e8d019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constFind(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constFind（const T＆</target>
        </trans-unit>
        <trans-unit id="a3a398853bef583c8b253633a8a517e3610f3043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::end() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: end（）const</target>
        </trans-unit>
        <trans-unit id="73ab660fab4461ac957ebd5814b51526ece70eb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::find(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: find（const T＆</target>
        </trans-unit>
        <trans-unit id="b3e404b53dc91fefe55c41bcd893b8d26f95add3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator ++（）</target>
        </trans-unit>
        <trans-unit id="1685db8bd9a51c955a8a1419008f64d4777f7adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator + =（int</target>
        </trans-unit>
        <trans-unit id="8364a14c689713f0129848db1fe95e9e7eabd679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-（）</target>
        </trans-unit>
        <trans-unit id="fbdf0de411989ebb83445036902b5682bbd2b76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-=（int</target>
        </trans-unit>
        <trans-unit id="b674ea223887c729a29b2c5905ecb490894cb360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator=(const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator =（const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0b67301831ffdc9476a3025b3cf638bb32373953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator +（int</target>
        </trans-unit>
        <trans-unit id="66c9ad54dc18d149b16186ad1eab43ebe3b81bab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator ++（</target>
        </trans-unit>
        <trans-unit id="160c1f8c41839d0984ae7dbf1712dfaf72afe32b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(int)</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(int)</target>
        </trans-unit>
        <trans-unit id="5bb76abf70dbb9b8da225cbef3ebc280a36e5d3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（int</target>
        </trans-unit>
        <trans-unit id="fcdcfabc4e5dc93458fba24a7c31b96bbbaf589b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（</target>
        </trans-unit>
        <trans-unit id="f8c952cadb51100feabd182861cbeb7b0e98b37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::begin()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; QSet :: begin（）</target>
        </trans-unit>
        <trans-unit id="e6e307646937b48435ed968d80d03dfd65949e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::end()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet ::迭代器&lt;/a&gt; QSet :: end（）</target>
        </trans-unit>
        <trans-unit id="9517335277bdaaf8865cf210162944a6e63f78e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::erase(&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; QSet :: erase（&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27ed6fb64ce658d9f97602f541e10d2ff6ff96a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::erase(&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; QSet :: erase（&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3873ccd80fe3cf8fce7abd4aeb46153436dcad85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::find(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; QSet :: find（const T＆</target>
        </trans-unit>
        <trans-unit id="90c2de2a37219be77b83fbea31c5c596cc5cc866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::insert(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; QSet :: insert（const T＆</target>
        </trans-unit>
        <trans-unit id="9a1e4ff5aca220709b7d226ef3cf0edd1581f747" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator ++（）</target>
        </trans-unit>
        <trans-unit id="bd50cc586a98633f4468963c66f5898f625ede69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator + =（int</target>
        </trans-unit>
        <trans-unit id="287d6f197d007556d1d8739c4c3068df69903b09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator-（）</target>
        </trans-unit>
        <trans-unit id="e12746850e0709df50af8b7d94a785ac86b771d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator-=（int</target>
        </trans-unit>
        <trans-unit id="d78a11bb4b6797f2dd7d93274c615e534e9813c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator=(const &lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator =（const &lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d3334ebda0563ae8370c505d7918c7140be922e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt; iterator :: operator +（int</target>
        </trans-unit>
        <trans-unit id="297e8924e93d3cd37dd72839458e9a567c5a7d4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator ++（</target>
        </trans-unit>
        <trans-unit id="f2d5ed3a56602fd8b6ef009f2e2b742186587c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator++(int)</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;iterator :: operator ++（int）</target>
        </trans-unit>
        <trans-unit id="9ef7d463be80fb9028c0d14e72faeff498f07b66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator-（int</target>
        </trans-unit>
        <trans-unit id="84bd830bdbcf7e919fabe55ce026a29437969c8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator-（</target>
        </trans-unit>
        <trans-unit id="107dbbad326d24d28eddbf2868795f411ac9c468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b36e47f0e299eaf10f62c7c52c598403ef093125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;. If you want to modify the set as you iterate over it, use &lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt; &amp;lt;T&amp;gt;允许您迭代&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;。如果要在迭代时修改集合，请改用&lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt; &amp;lt;T&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="fdefd0948d72ef486bd352b478a469c45eca4b79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator#QSetIterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSetIterator::operator=(const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsetiterator#QSetIterator&quot;&gt;QSetIterator&lt;/a&gt; &amp;lt;T&amp;gt;＆QSetIterator :: operator =（const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="e54a0e083ce8570718b7502ce028047c10840720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; always treats backslash as a special character and provides no API for reading or writing such entries.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;始终将反斜杠视为特殊字符，并且不提供用于读取或写入此类条目的API。</target>
        </trans-unit>
        <trans-unit id="a993cdb685a3f29e399295817dc8ff7562dcbe05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; can safely be used from different processes (which can be different instances of your application running at the same time or different applications altogether) to read and write to the same system locations, provided certain conditions are met. For &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt;, it uses advisory file locking and a smart merging algorithm to ensure data integrity. The condition for that to work is that the writeable configuration file must be a regular file and must reside in a directory that the current user can create new, temporary files in. If that is not the case, then one must use &lt;a href=&quot;qsettings#setAtomicSyncRequired&quot;&gt;setAtomicSyncRequired&lt;/a&gt;() to turn the safety off.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;只要&lt;/a&gt;满足某些条件，就可以从不同的进程（可以是同时运行的应用程序的不同实例，也可以是不同的应用程序）安全地使用QSettings来读写相同的系统位置。对于&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: IniFormat&lt;/a&gt;，它使用咨询文件锁定和智能合并算法来确保数据完整性。工作的条件是，可写配置文件必须是常规文件，并且必须位于当前用户可以在其中创建新的临时文件的目录中。如果不是这样，则必须使用&lt;a href=&quot;qsettings#setAtomicSyncRequired&quot;&gt;setAtomicSyncRequired&lt;/a&gt;（）来关闭安全装置。</target>
        </trans-unit>
        <trans-unit id="bb5801d4acf0ed5d7cec99387ea6f3a63b90ecc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is &lt;a href=&quot;threads-reentrancy&quot;&gt;reentrant&lt;/a&gt;. This means that you can use distinct &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object in different threads simultaneously. This guarantee stands even when the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects refer to the same files on disk (or to the same entries in the system registry). If a setting is modified through one &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object, the change will immediately be visible in any other &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects that operate on the same location and that live in the same process.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;是&lt;a href=&quot;threads-reentrancy&quot;&gt;可重入的&lt;/a&gt;。这意味着您可以同时在不同的线程中使用不同的&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象。即使&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象引用磁盘上的相同文件（或系统注册表中的相同条目），该保证仍然有效。如果通过一个&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象修改了设置，则该更改将立即在任何在同一位置运行且处于同一进程中的其他&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象中可见。</target>
        </trans-unit>
        <trans-unit id="263b6387b81b4e953afc4e3692fa584b567c1388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is an abstraction around these technologies, enabling you to save and restore application settings in a portable manner. It also supports &lt;a href=&quot;qsettings#registerFormat&quot;&gt;custom storage formats&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;是围绕这些技术的抽象，使您能够以可移植的方式保存和恢复应用程序设置。它还支持&lt;a href=&quot;qsettings#registerFormat&quot;&gt;自定义存储格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a892ff6c917b67d09ea13c2b16ce1f2a1987b4a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is often used to store the state of a GUI application. The following example illustrates how to use &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to save and restore the geometry of an application's main window.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;通常用于存储GUI应用程序的状态。以下示例说明了如何使用&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;保存和还原应用程序主窗口的几何形状。</target>
        </trans-unit>
        <trans-unit id="c29cfb8f2c897af65cec51c1ea228902c6fb14ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects can be created either on the stack or on the heap (i.e. using &lt;code&gt;new&lt;/code&gt;). Constructing and destroying a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object is very fast.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象可以在堆栈或堆上创建（即使用 &lt;code&gt;new&lt;/code&gt; ）。构造和销毁&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象非常快。</target>
        </trans-unit>
        <trans-unit id="09ab91018f40183c46f1ecd4edd39920024048bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; provides no way of reading INI &quot;path&quot; entries, i.e., entries with unescaped slash characters. (This is because these entries are ambiguous and cannot be resolved automatically.)</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;无法读取INI&amp;ldquo;路径&amp;rdquo;条目，即带有未转义斜杠字符的条目。（这是因为这些条目是模棱两可的，无法自动解决。）</target>
        </trans-unit>
        <trans-unit id="6f31c66236bc338458a06f7d22e115fcad7606c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; stores settings. Each setting consists of a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; that specifies the setting's name (the</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;存储设置。每个设置都包含一个&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，用于指定设置的名称（</target>
        </trans-unit>
        <trans-unit id="4703ae5390b4914ecac0155910507b8fe755848e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;'s API is based on &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;, allowing you to save most value-based types, such as &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, with the minimum of effort.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;的API基于&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;，使您可以省力地保存大多数基于值的类型，例如&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;和&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c625f6e27ad20bc984ead5751597733e7a733658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;, &lt;a href=&quot;qsettings#Format-enum&quot;&gt;IniFormat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;，&lt;a href=&quot;qsettings#Format-enum&quot;&gt;IniFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8af68cd9f690c14f84fd0acc452a41142b94bd8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::Format&lt;/a&gt; QSettings::format() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: Format&lt;/a&gt; QSettings :: format（）const</target>
        </trans-unit>
        <trans-unit id="6f10a768726beccbe0260add32dedb7c959ab68f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::Scope&lt;/a&gt; QSettings::scope() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings :: Scope&lt;/a&gt; QSettings :: scope（）const</target>
        </trans-unit>
        <trans-unit id="135456b532d1259c20345c339028dd01ba47b451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Status-enum&quot;&gt;QSettings::Status&lt;/a&gt; QSettings::status() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Status-enum&quot;&gt;QSettings :: Status&lt;/a&gt; QSettings :: status（）const</target>
        </trans-unit>
        <trans-unit id="8d30048b71005d521b5c6aa1dccaa2534c172fd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#registerFormat&quot;&gt;registerFormat&lt;/a&gt;(const QString &amp;amp;extension, QSettings::ReadFunc readFunc, QSettings::WriteFunc writeFunc, Qt::CaseSensitivity caseSensitivity)</source>
          <target state="translated">&lt;a href=&quot;qsettings#registerFormat&quot;&gt;registerFormat&lt;/a&gt;（const QString＆extension，QSettings :: ReadFunc readFunc，QSettings :: WriteFunc writeFunc，Qt :: CaseSensitivity caseSensitivity）</target>
        </trans-unit>
        <trans-unit id="54c746f7c83fbed9bfeeab893058c9c15199baa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; *QSGEngine::createRenderer() const</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; * QSGEngine :: createRenderer（）常量</target>
        </trans-unit>
        <trans-unit id="05f0f3eec68f027a34524465d9028e314b7bd575" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; gives access to the scene graph nodes and rendering of a &lt;a href=&quot;qsgengine&quot;&gt;QSGEngine&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt;允许访问场景图节点和&lt;a href=&quot;qsgengine&quot;&gt;QSGEngine的&lt;/a&gt;渲染。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9c1a75fa97c69b508a8d2d6612fc3394fab020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer::ClearMode&lt;/a&gt; QSGAbstractRenderer::clearMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer :: ClearMode&lt;/a&gt; QSGAbstractRenderer :: clearMode（）const</target>
        </trans-unit>
        <trans-unit id="fdc4154ddc267b90cbcadaf25b70352713cc99c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgbasicgeometrynode&quot;&gt;QSGBasicGeometryNode&lt;/a&gt;, &lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt;, &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt;, and &lt;a href=&quot;qsgtransformnode&quot;&gt;QSGTransformNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgbasicgeometrynode&quot;&gt;QSGBasicGeometryNode&lt;/a&gt;，&lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt;，&lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt;和&lt;a href=&quot;qsgtransformnode&quot;&gt;QSGTransformNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e00c3f8f8dc7ce5afb06cc4f2a4b2d02ec3118d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt; and &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt;和&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2aab2015070e4b1cc704a29556ae3dcec106044e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt;, &lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt;, &lt;a href=&quot;qsgsimplematerial&quot;&gt;QSGSimpleMaterial&lt;/a&gt;, and &lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt;，&lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt;，&lt;a href=&quot;qsgsimplematerial&quot;&gt;QSGSimpleMaterial&lt;/a&gt;和&lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="231b8d2b8839aebdbacf17bf18163820767822e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt;, &lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt;, and &lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt;，&lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt;和&lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="956bc1307dc738f051b2f15a06fd3de87c751b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; *QSGBasicGeometryNode::geometry()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; * QSGBasicGeometryNode :: geometry（）</target>
        </trans-unit>
        <trans-unit id="fabaa501b87b7bb0ac6a47bcfa4d2068a45b47d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt; QSGGeometry::indexDataPattern() const</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt; QSGGeometry :: indexDataPattern（）const</target>
        </trans-unit>
        <trans-unit id="8651005a6081de4ba9648a0a2a7491aff372fbbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt; QSGGeometry::vertexDataPattern() const</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt; QSGGeometry :: vertexDataPattern（）const</target>
        </trans-unit>
        <trans-unit id="5d498567675b04c8ca358c1d4437ab73e0ab7f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#defaultAttributes_ColoredPoint2D&quot;&gt;QSGGeometry::defaultAttributes_ColoredPoint2D&lt;/a&gt;() can be used to construct an attribute set that is compatible with this material.</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#defaultAttributes_ColoredPoint2D&quot;&gt;QSGGeometry :: defaultAttributes_ColoredPoint2D&lt;/a&gt;（）可用于构造与此材质兼容的属性集。</target>
        </trans-unit>
        <trans-unit id="3874aafd653f344a196ac7ef88651e6248301c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-coloredpoint2d&quot;&gt;QSGGeometry::ColoredPoint2D&lt;/a&gt; *QSGGeometry::vertexDataAsColoredPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-coloredpoint2d&quot;&gt;QSGGeometry :: ColoredPoint2D&lt;/a&gt; * QSGGeometry :: vertexDataAsColoredPoint2D（）</target>
        </trans-unit>
        <trans-unit id="d98463a90dc54bcdcccfa37efbf4411310c9898f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-point2d&quot;&gt;QSGGeometry::Point2D&lt;/a&gt; *QSGGeometry::vertexDataAsPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-point2d&quot;&gt;QSGGeometry :: Point2D&lt;/a&gt; * QSGGeometry :: vertexDataAsPoint2D（）</target>
        </trans-unit>
        <trans-unit id="4f5bcd8e5dfb5390e14b1fc428b6fa2a4c3d6429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-texturedpoint2d&quot;&gt;QSGGeometry::TexturedPoint2D&lt;/a&gt; *QSGGeometry::vertexDataAsTexturedPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-texturedpoint2d&quot;&gt;QSGGeometry :: TexturedPoint2D&lt;/a&gt; * QSGGeometry :: vertexDataAsTexturedPoint2D（）</target>
        </trans-unit>
        <trans-unit id="a6320bd3185894e9d26a5c3d71ecbc2029fa73aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; *QQuickWindow::createImageNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; * QQuickWindow :: createImageNode（）常量</target>
        </trans-unit>
        <trans-unit id="a0e516d9a81c068b1432cac59228ebe585f79b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; *QSGEngine::createImageNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; * QSGEngine :: createImageNode（）常量</target>
        </trans-unit>
        <trans-unit id="f26403b78eeb6e5df60b6b4972d2d2976caa3d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt;, &lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt;, &lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt;, and &lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt;，&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt;，&lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt;和&lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f85cd16a12d97ae7c38f833b2327677c0fd29ab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial&quot;&gt;Materials&lt;/a&gt; that work with textures reimplement &lt;a href=&quot;qsgmaterialshader#updateSampledImage&quot;&gt;updateSampledImage()&lt;/a&gt; to provide logic that decides which QSGTexture's underlying native texture should be exposed at a given shader resource binding point.</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;&lt;/a&gt;使用纹理的材料会重新实现&lt;a href=&quot;qsgmaterialshader#updateSampledImage&quot;&gt;updateSampledImage（）&lt;/a&gt;以提供逻辑，该逻辑决定应在给定的着色器资源绑定点处公开哪个QSGTexture的基础本机纹理。</target>
        </trans-unit>
        <trans-unit id="bee17b83328d9cf5248ece229b37279964065242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *QSGGeometryNode::material() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; * QSGGeometryNode :: material（）const</target>
        </trans-unit>
        <trans-unit id="8c38f1c6fc601171832a09d6a2ce34a96e090d62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *QSGGeometryNode::opaqueMaterial() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; * QSGGeometryNode :: opaqueMaterial（）常量</target>
        </trans-unit>
        <trans-unit id="3334e56f7c2f18ad9a77b18d43777aa7bf2e69c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial::Flags&lt;/a&gt; QSGMaterial::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial :: Flags&lt;/a&gt; QSGMaterial :: flags（）const</target>
        </trans-unit>
        <trans-unit id="f3d547569b968d3f5a91fae5fb52098b10171cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt; and &lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt;和&lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6685fabeed989ace492d6d1c219c52eda3b41e53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialrhishader#Flag-enum&quot;&gt;QSGMaterialRhiShader::Flags&lt;/a&gt; QSGMaterialRhiShader::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialrhishader#Flag-enum&quot;&gt;QSGMaterialRhiShader::Flags&lt;/a&gt; QSGMaterialRhiShader::flags() const</target>
        </trans-unit>
        <trans-unit id="108cceab9bb47c31f09be0d5bc0ac6ec0df438dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader#Flag-enum&quot;&gt;QSGMaterialShader::Flags&lt;/a&gt; QSGMaterialShader::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader#Flag-enum&quot;&gt;QSGMaterialShader::Flags&lt;/a&gt; QSGMaterialShader::flags() const</target>
        </trans-unit>
        <trans-unit id="db6a55a3c81957769d01aa8e9d3d772975da0d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader#updateSampledImage&quot;&gt;updateSampledImage&lt;/a&gt;() is relevant when the shader code samples textures. The function will be invoked for each sampler (or combined image sampler, in APIs where relevant), giving it the option to specify which &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; should be exposed to the shader.</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader#updateSampledImage&quot;&gt;&lt;/a&gt;当着色器代码对纹理进行采样时，updateSampledImage（）是相关的。将为每个采样器（或组合的图像采样器，在相关的API中）调用该函数，并为该函数提供指定应将哪些&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;暴露给着色器的选项。</target>
        </trans-unit>
        <trans-unit id="7c5b479b2e705158a6fb48c96e97071476bb089b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader#updateUniformData&quot;&gt;updateUniformData&lt;/a&gt;() is the function that is most commonly reimplemented in subclasses. This function is expected to update the contents of a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; that will then be exposed to the shaders as a uniform buffer. Any QSGMaterialShader that has a uniform block in its vertex or fragment shader must reimplement &lt;a href=&quot;qsgmaterialshader#updateUniformData&quot;&gt;updateUniformData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader#updateUniformData&quot;&gt;updateUniformData&lt;/a&gt;（）是最常在子类中重新实现的函数。预期此函数将更新&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;的内容，然后将其作为统一缓冲区公开给着色器。任何在其顶点或片段着色器中具有统一块的QSGMaterialShader，都必须重新实现&lt;a href=&quot;qsgmaterialshader#updateUniformData&quot;&gt;updateUniformData&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="361c190e589c617b1f78a51f4a61029c34c796f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader#vertexShader&quot;&gt;QSGSimpleMaterialShader::vertexShader&lt;/a&gt;() and &lt;a href=&quot;qsgmaterialshader#fragmentShader&quot;&gt;QSGSimpleMaterialShader::fragmentShader&lt;/a&gt;() are used to specify the actual shader source code. The names of the vertex attributes should be listed in the &lt;a href=&quot;qsgsimplematerialshader#attributes&quot;&gt;QSGSimpleMaterialShader::attributes&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader#vertexShader&quot;&gt;QSGSimpleMaterialShader :: vertexShader&lt;/a&gt;（）和&lt;a href=&quot;qsgmaterialshader#fragmentShader&quot;&gt;QSGSimpleMaterialShader :: fragmentShader&lt;/a&gt;（）用于指定实际的着色器源代码。顶点属性的名称应在&lt;a href=&quot;qsgsimplematerialshader#attributes&quot;&gt;QSGSimpleMaterialShader :: attributes&lt;/a&gt;（）中列出</target>
        </trans-unit>
        <trans-unit id="b9367bb01a82b8ff0ab11f7c7e969a9f6ff60708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader-renderstate#DirtyState-enum&quot;&gt;RenderState::DirtyStates&lt;/a&gt; RenderState::dirtyStates() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader-renderstate#DirtyState-enum&quot;&gt;RenderState :: DirtyStates&lt;/a&gt; RenderState :: dirtyStates（）const</target>
        </trans-unit>
        <trans-unit id="5cf4f1d53e671979bf28f5301dbbd5e1321e607e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::Flags&lt;/a&gt; QSGNode::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: Flags&lt;/a&gt; QSGNode :: flags（）常量</target>
        </trans-unit>
        <trans-unit id="0500d9aee1c7191b890c0ddc5ab63bdc1f3b5bde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#NodeType-enum&quot;&gt;QSGNode::NodeType&lt;/a&gt; QSGNode::type() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#NodeType-enum&quot;&gt;QSGNode :: NodeType&lt;/a&gt; QSGNode :: type（）常量</target>
        </trans-unit>
        <trans-unit id="1cf31e85c8ba5a1154e7310238e83738bfb55c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::childAtIndex(int</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: childAtIndex（int</target>
        </trans-unit>
        <trans-unit id="5b7bf5d66434c98d945f468eb2b8e7880d61d6e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::firstChild() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: firstChild（）常量</target>
        </trans-unit>
        <trans-unit id="3315527b0a07a0e1d5459b16c89e6c75fdfaa652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::lastChild() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: lastChild（）常量</target>
        </trans-unit>
        <trans-unit id="478d3132781845d205a87e025ddb79305d5bde54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::nextSibling() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: nextSibling（）常量</target>
        </trans-unit>
        <trans-unit id="5833e86b83abfcfd1d35ec4ea3cf7c0b8b3a88af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::parent() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: parent（）常量</target>
        </trans-unit>
        <trans-unit id="fc396e0d484567ac39881f6d0c9bb2e21111f6da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::previousSibling() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: previousSibling（）常量</target>
        </trans-unit>
        <trans-unit id="ebfbd9c68b643d018a608de05ff75223ac985672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; *QQuickWindow::createRectangleNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; * QQuickWindow :: createRectangleNode（）常量</target>
        </trans-unit>
        <trans-unit id="718ff69c2a315dfe49e249457e0ae37a4644a54d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; *QSGEngine::createRectangleNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; * QSGEngine :: createRectangleNode（）常量</target>
        </trans-unit>
        <trans-unit id="aa5b57e4b5adeb59cf9a16323b60f5121ed68651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; *QQuickWindow::rendererInterface() const</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; * QQuickWindow :: rendererInterface（）常量</target>
        </trans-unit>
        <trans-unit id="f9b1aebbe395f440e4b761d507143b030b5f3ecf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; *QSGEngine::rendererInterface() const</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; * QSGEngine :: rendererInterface（）常量</target>
        </trans-unit>
        <trans-unit id="448004372068db15997d9d40ef8d666d4fd39cbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;'s functions have varying availability. API and language queries, like &lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;graphicsApi&lt;/a&gt;() or &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;() are always available, meaning it is sufficient to construct a &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, and the graphics API or shading language in use can be queried right after via &lt;a href=&quot;qquickwindow#rendererInterface&quot;&gt;QQuickWindow::rendererInterface&lt;/a&gt;(). This guarantees that utilities like the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; QML type are able to report the correct values as early as possible, without having conditional property values - depending on for instance &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;() - evaluate to unexpected values.</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;的功能具有不同的可用性。API和语言查询（例如&lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;graphicsApi&lt;/a&gt;（）或&lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;（））始终可用，这意味着构造一个&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;或&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;就足够了，并且可以在之后通过&lt;a href=&quot;qquickwindow#rendererInterface&quot;&gt;QQuickWindow :: rendererInterface&lt;/a&gt;（）来查询正在使用的图形API或着色语言。这保证了诸如&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; QML类型之类的实用程序能够尽早报告正确的值，而没有条件属性值-取决于例如&lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;（）-评估为意外值。</target>
        </trans-unit>
        <trans-unit id="585fb2f61d128d07d8f8728dc795d65ba8f67f8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;BlendState&lt;/a&gt; - blend enabled, blend function</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;BlendState-&lt;/a&gt;启用混合，混合功能</target>
        </trans-unit>
        <trans-unit id="f455f1ea741df3b4fd0855ef980ad23bc5dbd0b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ColorState&lt;/a&gt; - clear color, color write mask</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ColorState-&lt;/a&gt;清除颜色，使用颜色写蒙版</target>
        </trans-unit>
        <trans-unit id="ff97281285684b06bf13d36e7e69da4b8605c7da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;CullState&lt;/a&gt; - front face, cull face enabled</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;CullState-&lt;/a&gt;正面，启用剔除面</target>
        </trans-unit>
        <trans-unit id="9d406d4fe0adfc7bbe1487b6b69c10fcfeb9b6d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;DepthState&lt;/a&gt; - depth write mask, depth test enabled, depth comparison function</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;DepthState-&lt;/a&gt;深度写入掩码，启用深度测试，深度比较功能</target>
        </trans-unit>
        <trans-unit id="8fb4880f10ebb0565b5d7283facb360a05e7221c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;RenderTargetState&lt;/a&gt; - render target</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;RenderTargetState-&lt;/a&gt;渲染目标</target>
        </trans-unit>
        <trans-unit id="4358f4106f0508da627808b7a9f40c187afcd067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ScissorState&lt;/a&gt; - scissor enabled, scissor test enabled</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ScissorState-&lt;/a&gt;启用剪刀，启用剪刀测试</target>
        </trans-unit>
        <trans-unit id="43fc6b9928f131e08899322179ab4ff7eac9a78b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StencilState&lt;/a&gt; - stencil write masks, stencil test enabled, stencil operations, stencil comparison functions</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StencilState-&lt;/a&gt;模板写入掩码，启用模板测试，模板操作，模板比较功能</target>
        </trans-unit>
        <trans-unit id="a5b5e37c45f16443962a726dd2e4fb6e435cb7d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ViewportState&lt;/a&gt; - viewport</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ViewportState-&lt;/a&gt;视口</target>
        </trans-unit>
        <trans-unit id="66dbbe4cf7e540ed33461be38ed0efe1d1cb5d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt;() should return which states this function changes. If a state is not covered by &lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StateFlags&lt;/a&gt;, the state should be set to the default value according to the OpenGL specification. For other APIs, see the documentation for &lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt;() for more information.</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt;（）应该返回该函数更改的状态。如果&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StateFlags&lt;/a&gt;未涵盖某个状态，则应根据OpenGL规范将该状态设置为默认值。对于其他API，请参阅&lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changeStates&lt;/a&gt;（）的文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="5ec1dec4ab34cb03ff7d6fc7350450a524f79579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimplematerialshader#updateState-1&quot;&gt;QSGSimpleMaterialShader::updateState&lt;/a&gt;() is used to push the material state to the OpenGL shader program.</source>
          <target state="translated">&lt;a href=&quot;qsgsimplematerialshader#updateState-1&quot;&gt;QSGSimpleMaterialShader :: updateState&lt;/a&gt;（）用于将材质状态推送到OpenGL着色器程序。</target>
        </trans-unit>
        <trans-unit id="5a4ca04997a30a6edafa31f8952337b504a51315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt; - a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; subclass which defines a rectangular geometry with a solid color material.</source>
          <target state="translated">&lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt; - &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;子类，它使用纯色材料定义矩形几何。</target>
        </trans-unit>
        <trans-unit id="bb467126716248869c18abb3a2e86f4bec81e586" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt; - a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; subclass which defines a rectangular geometry with a texture material.</source>
          <target state="translated">&lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt; - &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;子类，它使用纹理材料定义矩形几何形状。</target>
        </trans-unit>
        <trans-unit id="90de7288295249ecab3edf7e8b835ce748ab9596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode::TextureCoordinatesTransformMode&lt;/a&gt; QSGSimpleTextureNode::textureCoordinatesTransform() const</source>
          <target state="translated">&lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode :: TextureCoordinatesTransformMode&lt;/a&gt; QSGSimpleTextureNode :: textureCoordinatesTransform（）const</target>
        </trans-unit>
        <trans-unit id="c439da306406e6b437aba6afcd1b096241a7d7bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromId(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QQuickWindow :: createTextureFromId（&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="844e499fae97d8f79a8d03e7017acb234d79bd86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QQuickWindow :: createTextureFromImage（const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="21e8b6b4c63df3b1c7284c240353078e2250a861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromNativeObject(&lt;a href=&quot;qquickwindow#NativeObjectType-enum&quot;&gt;QQuickWindow::NativeObjectType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromNativeObject(&lt;a href=&quot;qquickwindow#NativeObjectType-enum&quot;&gt;QQuickWindow::NativeObjectType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="345ea0d49d1fd75fe49d799670d85e1fbf338b00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGEngine :: createTextureFromId（&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00b474272d5e7508ec02b5e26599d2175fed8c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f36991a922311ee6dbe68e9adf312b473a72e1a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGEngine :: createTextureFromImage（const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9c7c921e3c1cb0c96edc0d7e7e625b2c822b55d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGOpaqueTextureMaterial::texture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGOpaqueTextureMaterial :: texture（）const</target>
        </trans-unit>
        <trans-unit id="dbd46393c7557a7ee22eb849f7710949d27b80d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGSimpleTextureNode::texture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGSimpleTextureNode :: texture（）常量</target>
        </trans-unit>
        <trans-unit id="45b77cc87424fd5a6264b9e66ebfb101d013a5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt; QSGOpaqueTextureMaterial::anisotropyLevel() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: AnisotropyLevel&lt;/a&gt; QSGOpaqueTextureMaterial :: anisotropyLevel（）const</target>
        </trans-unit>
        <trans-unit id="a341a3e8893e1449d61c5e125ab5ec0c4832981d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt; QSGTexture::anisotropyLevel() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: AnisotropyLevel&lt;/a&gt; QSGTexture :: anisotropyLevel（）const</target>
        </trans-unit>
        <trans-unit id="8e79018fab9ac22f4ba358d479de949461e202e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGOpaqueTextureMaterial::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGOpaqueTextureMaterial :: filtering（）const</target>
        </trans-unit>
        <trans-unit id="7350df14f39fe06a9e00f76372ae5613f4717617" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGOpaqueTextureMaterial::mipmapFiltering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture ::过滤&lt;/a&gt; QSGOpaqueTextureMaterial :: mipmapFiltering（）const</target>
        </trans-unit>
        <trans-unit id="21d7de9819b343ad523f454dd0c1942f82930130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGSimpleTextureNode::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture ::过滤&lt;/a&gt; QSGSimpleTextureNode :: filtering（）const</target>
        </trans-unit>
        <trans-unit id="5a0fd316a473d3ec56c0cb3ebb79e8f82535a549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGTexture::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGTexture :: filtering（）const</target>
        </trans-unit>
        <trans-unit id="c975f8aa642c14d69ba37344a74b6eee5b5341ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGTexture::mipmapFiltering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture ::过滤&lt;/a&gt; QSGTexture :: mipmapFiltering（）常量</target>
        </trans-unit>
        <trans-unit id="2b8a8ffa8cbef92ffee5b5ae0a00cc4531334421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial::horizontalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture ::&lt;/a&gt; WrapMode QSGOpaqueTextureMaterial :: horizo​​ntalWrapMode（）const</target>
        </trans-unit>
        <trans-unit id="434802c1dfafc7de943fe0e3c3596a5633e23c32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial::verticalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture ::&lt;/a&gt; WrapMode QSGOpaqueTextureMaterial :: verticalWrapMode（）const</target>
        </trans-unit>
        <trans-unit id="d8f45c92247efa4b0c075b1f9b97b7f62a328d81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGTexture::horizontalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture ::&lt;/a&gt; WrapMode QSGTexture :: horizo​​ntalWrapMode（）const</target>
        </trans-unit>
        <trans-unit id="b48909e1a2b47e56405d5749d0f19f1c854d8a17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGTexture::verticalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture ::&lt;/a&gt; WrapMode QSGTexture :: verticalWrapMode（）常量</target>
        </trans-unit>
        <trans-unit id="9fbef34455887053c464fb93f4cd83c03ed45e0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture-nativetexture&quot;&gt;QSGTexture::NativeTexture&lt;/a&gt; QSGTexture::nativeTexture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture-nativetexture&quot;&gt;QSGTexture::NativeTexture&lt;/a&gt; QSGTexture::nativeTexture() const</target>
        </trans-unit>
        <trans-unit id="032d07c6f583c795ed6530518cec95e3d1a58b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; is designed to be used with &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; or &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; to implement custom &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared&lt;/a&gt; or explicitly shared classes. &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; provides &lt;a href=&quot;threads-reentrancy&quot;&gt;thread-safe&lt;/a&gt; reference counting.</source>
          <target state="translated">&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;设计为与&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;或&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;一起使用，以实现自定义的&lt;a href=&quot;implicit-sharing#&quot;&gt;隐式共享&lt;/a&gt;或显式共享的类。&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;提供&lt;a href=&quot;threads-reentrancy&quot;&gt;线程安全的&lt;/a&gt;引用计数。</target>
        </trans-unit>
        <trans-unit id="ad05146d76fa126e94935a8f07d791fb99340c5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; makes writing your own &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared&lt;/a&gt; classes easy. &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; implements &lt;a href=&quot;threads-reentrancy&quot;&gt;thread-safe&lt;/a&gt; reference counting, ensuring that adding QSharedDataPointers to your &lt;a href=&quot;threads-reentrancy&quot;&gt;reentrant&lt;/a&gt; classes won't make them non-reentrant.</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;使编写自己的&lt;a href=&quot;implicit-sharing#&quot;&gt;隐式共享&lt;/a&gt;类变得容易。&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;实现了&lt;a href=&quot;threads-reentrancy&quot;&gt;线程安全的&lt;/a&gt;引用计数，确保将QSharedDataPointers添加到&lt;a href=&quot;threads-reentrancy&quot;&gt;可重入的&lt;/a&gt;类中不会使它们成为不可重入的。</target>
        </trans-unit>
        <trans-unit id="37180e9643873e9e89c178efc519a93548d9bb15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;, on the other hand, holds a pointer to shared data (i.e., a class derived from &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;). It does so by means of an internal reference count, placed in the &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; base class. This class can, therefore, detach based on the type of access made to the data being guarded: if it's a non-const access, it creates a copy atomically for the operation to complete.</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer&quot;&gt;&lt;/a&gt;另一方面，QSharedDataPointer持有一个指向共享数据的指针（即，从&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;派生的类）。它通过放置在&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;基类中的内部引用计数来实现。因此，此类可以根据对受保护数据的访问类型来分离：如果它是非常量访问，则它会自动创建一个副本以完成操作。</target>
        </trans-unit>
        <trans-unit id="156d66c9c9e12921b057ec6da3d308559619bf20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QSharedDataPointer :: operator =（&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="dfa9bcf53e62c219cbc566f9bd47a2108049b182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(T *</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QSharedDataPointer :: operator =（T *</target>
        </trans-unit>
        <trans-unit id="b1784fa9c941c8204c101a11a2f2c82f8d352e3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QSharedDataPointer :: operator =（const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b70a6a626cb5a99e13b32b3ff8dd20bce9f0f4b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; automatically destroys the shared memory segment when the last instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; is detached from the segment, and no references to the segment remain.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory&quot;&gt;&lt;/a&gt;当&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;的最后一个实例从该段分离时，QSharedMemory会自动销毁共享内存段，并且对该段的引用将不存在。</target>
        </trans-unit>
        <trans-unit id="5bf554a83f1e3f7cace403533397cbdd846531ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; provides access to a shared memory segment by multiple threads and processes. It also provides a way for a single thread or process to lock the memory for exclusive access.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;通过多个线程和进程提供对共享内存段的访问。它还为单个线程或进程提供了一种锁定内存以进行独占访问的方法。</target>
        </trans-unit>
        <trans-unit id="e2d050f16cc62bb17847fc73a2108c45dccbac77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory#SharedMemoryError-enum&quot;&gt;QSharedMemory::SharedMemoryError&lt;/a&gt; QSharedMemory::error() const</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory#SharedMemoryError-enum&quot;&gt;QSharedMemory :: SharedMemoryError&lt;/a&gt; QSharedMemory :: error（）常量</target>
        </trans-unit>
        <trans-unit id="fb74fd83fd5d6d51d1c2f53afad3d85742247cc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; and &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; are reentrant classes. This means that, in general, a given &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; or &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; object &lt;b&gt;cannot&lt;/b&gt; be accessed by multiple threads at the same time without synchronization.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;和&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;是可重入的类。这通常意味着，没有同步，多个线程&lt;b&gt;无法&lt;/b&gt;同时访问给定的&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;或&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;对象。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a3a887d5cc0ca8ef9f5a6b6d3e87546839954491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; holds a shared pointer by means of an external reference count (i.e., a reference counter placed outside the object). Like its name indicates, the pointer value is shared among all instances of &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; and &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;. The contents of the object pointed to by the pointer should not be considered shared, however: there is only one object. For that reason, &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; does not provide a way to detach or make copies of the pointed object.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;通过外部引用计数（即，放置在对象外部的引用计数器）来保存共享指针。就像其名称所示，该指针值在&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;和&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer的&lt;/a&gt;所有实例之间共享。但是，指针所指向的对象的内容不应视为共享的：只有一个对象。因此，&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;无法提供分离或复制指向对象的方法。</target>
        </trans-unit>
        <trans-unit id="d40bb9b3539411f72ff21a9fe93f138b6a49f4dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; will delete the pointer it is holding when it goes out of scope, provided no other &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; objects are referencing it.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;&lt;/a&gt;如果没有其他&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;对象引用它，则QSharedPointer将在其超出范围时删除其持有的指针。</target>
        </trans-unit>
        <trans-unit id="69f1e6940f0a4b164cd1ef56b20f9442690eb609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt;&amp;gt; QQuickItem::grabToImage(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt; &lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt; &amp;gt; QQuickItem :: grabToImage（const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="08c673d61c2bcbca9786ebc343f692f92190e5ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtemporarydir&quot;&gt;QTemporaryDir&lt;/a&gt;&amp;gt; QTest::qExtractTestData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtemporarydir&quot;&gt;QTemporaryDir&lt;/a&gt; &amp;gt; QTest :: qExtractTestData（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="566c103d8aa5df20801c561e1ea67edc520aa65b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QEnableSharedFromThis::sharedFromThis()</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QEnableSharedFromThis :: sharedFromThis（）</target>
        </trans-unit>
        <trans-unit id="aefdbfeeed98595443a3e4efafcd4287a7fe5e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QWeakPointer::lock() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QWeakPointer :: lock（）常量</target>
        </trans-unit>
        <trans-unit id="c872b2a413db6fda86ae51f70b3f719919bf836d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QWeakPointer::toStrongRef() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QWeakPointer :: toStrongRef（）const</target>
        </trans-unit>
        <trans-unit id="3c7ee0923be891eddffc94c9b65ea65b49a86b80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;const T&amp;gt; QEnableSharedFromThis::sharedFromThis() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;const T&amp;gt; QEnableSharedFromThis :: sharedFromThis（）const</target>
        </trans-unit>
        <trans-unit id="01da38062bcdc5a6371726860c91b0fb81d5487c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedPointer::operator=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QSharedPointer :: operator =（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="ac9555c9b1a7429aed0f21048b862bb48258b4d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedPointer::operator=(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QSharedPointer :: operator =（const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="263d3eea160efbd3170c6164bf7d94df2a8ec522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::constCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: constCast（）const</target>
        </trans-unit>
        <trans-unit id="baf339c831b019b7304409d05ff4aef12f3f8982" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::dynamicCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: dynamicCast（）常量</target>
        </trans-unit>
        <trans-unit id="64592f32c596e15668c229e9a5ce7c9914f488bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::objectCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: objectCast（）常量</target>
        </trans-unit>
        <trans-unit id="dedcb49b28bbe4c3112bdf9bf2df1256cc6bc8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerCast（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="06baf5b0ee691bb82bb724c0a0887bd3403ec9ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerCast（const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2c7c559f61ffaa4ee9f2519c1ea455df4ef590e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerConstCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerConstCast（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="6d2e3cc01fcb2fb88d40cefb95e1781ad192fa25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerConstCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerConstCast（const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="f068797c0592101a6de8dcf8ddb8490e775321ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerDynamicCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerDynamicCast（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="ccf7e849fbb9602f3b9bb166d3ac6285dfcc92c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerDynamicCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerDynamicCast（const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="1426057e21e37892d5fc1401b9cb7d4026404624" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerObjectCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerObjectCast（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="17084660120a7e8e1e59574593141502e68880c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerObjectCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerObjectCast（const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="58e619ab5506d0e26e9fdca090a5830138fa1575" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::staticCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: staticCast（）常量</target>
        </trans-unit>
        <trans-unit id="69a3611162d0e698ce37d8a8bac09a99b2cdf4c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalblocker&quot;&gt;QSignalBlocker&lt;/a&gt; can be used wherever you would otherwise use a pair of calls to blockSignals(). It blocks signals in its constructor and in the destructor it resets the state to what it was before the constructor ran.</source>
          <target state="translated">&lt;a href=&quot;qsignalblocker&quot;&gt;QSignalBlocker&lt;/a&gt;可以在您可能会使用一对调用blockSignals（）的任何地方使用。它在其构造函数中阻塞信号，并在析构函数中将状态重置为构造函数运行之前的状态。</target>
        </trans-unit>
        <trans-unit id="43659160aa57bf6543c8eb860bf13818a0d3debb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;QSignalBlocker::operator=(&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt;＆QSignalBlocker :: operator =（&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="6bd2ec9151b0a5a56794f478016b3e9244243471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; can connect to any signal of any object and records its emission. &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; itself is a list of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; lists. Each emission of the signal will append one item to the list, containing the arguments of the signal.</source>
          <target state="translated">&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;可以连接到任何对象的任何信号并记录其发射。&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;本身是&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;列表的列表。信号的每次发射都将在列表后面追加一个项目，其中包含信号的参数。</target>
        </trans-unit>
        <trans-unit id="8a2c20df5d9004bb618907bd6d2215fc47def40f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; *QState::addTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; * QState :: addTransition（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="afb3dc5882f9f4f7a03dae27c71ba129ba2566cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt; eliminates the need to handle redundant corner cases by guaranteeing that it will never ask for:</source>
          <target state="translated">&lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt;保证了它永远不会要求：从而消除了处理多余的极端情况的需要：</target>
        </trans-unit>
        <trans-unit id="a48644377bf8991acfc404a15f171afb197295c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsinglepointevent&quot;&gt;QSinglePointEvent&lt;/a&gt; and &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsinglepointevent&quot;&gt;QSinglePointEvent&lt;/a&gt;和&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35e57d1c787dee2e177705c62d8f2d3ca931cfe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemView::sizeHintForIndex(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemView :: sizeHintForIndex（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="460388a430de76f3f5e69e34ef68fa9d349e09a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractScrollArea::maximumViewportSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractScrollArea :: maximumViewportSize（）常量</target>
        </trans-unit>
        <trans-unit id="af1e0d5cca231058ac669f410dcc3cb9bd46ef85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QBackingStore::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QBackingStore :: size（）常量</target>
        </trans-unit>
        <trans-unit id="56c875754c7c54f13a5bc1f6b2ebcc4638f80924" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings::pixelAspectRatio() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings :: pixelAspectRatio（）常量</target>
        </trans-unit>
        <trans-unit id="e4f8b0501ddd853df7ea225f356f5b30a1e863d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings :: resolution（）const</target>
        </trans-unit>
        <trans-unit id="4ad7cadc727bb4093b07184fb819bd6ee95f78b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QFontMetrics::size(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QFontMetrics :: size（int</target>
        </trans-unit>
        <trans-unit id="bc405ea7e2a7fd42efef2d7e8733f262da7b105f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QGraphicsSvgItem::maximumCacheSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QGraphicsSvgItem :: maximumCacheSize（）常量</target>
        </trans-unit>
        <trans-unit id="ecb89612b33cba629a5dfe21bf87b12e3fcb4842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon::actualSize(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon :: actualSize（&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e97c9fa5ed373d96aab2694ff4ab758074c21ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon::actualSize(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon :: actualSize（const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="89a0debb0bde453151b65b1947a521dc77e9524f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImage::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImage :: size（）常量</target>
        </trans-unit>
        <trans-unit id="85a86a7846f05e5da0ca1d7d72fb53d7aafd474f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageEncoderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageEncoderSettings :: resolution（）const</target>
        </trans-unit>
        <trans-unit id="dd5b8e189ea247bc1154b0546ec648d113d82c49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader::scaledSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader :: scaledSize（）常量</target>
        </trans-unit>
        <trans-unit id="db8fe29697fb0297f5b6b206f1a2c5d3fd3bacf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader :: size（）常量</target>
        </trans-unit>
        <trans-unit id="29ca797cd29304ad727b835f00c07a562287cbe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QListWidgetItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QListWidgetItem :: sizeHint（）常量</target>
        </trans-unit>
        <trans-unit id="5420360796cd53b734e3eaa877ffc3308278e20b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMediaResource::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMediaResource :: resolution（）const</target>
        </trans-unit>
        <trans-unit id="2cc1e3038ac433bd37342791b216f102287c707c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMovie::scaledSize()</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMovie :: scaledSize（）</target>
        </trans-unit>
        <trans-unit id="89edd4f307b4984d24b5af3e2a8909be2172ef15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLFramebufferObject::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLFramebufferObject :: size（）常量</target>
        </trans-unit>
        <trans-unit id="993387bd91c22f8db172834d219866c391ee5377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLPaintDevice::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLPaintDevice :: size（）常量</target>
        </trans-unit>
        <trans-unit id="bf884c519c9ea97b34d1b041e87df01fd126a2d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize::sizePixels(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize :: sizePixels（int</target>
        </trans-unit>
        <trans-unit id="2e5c6e320caa6ecd563445bb143a6d2b81449f6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize::sizePoints() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize :: sizePoints（）常量</target>
        </trans-unit>
        <trans-unit id="4ddb9e0d376959e8ea980bb796abc6094c6fbd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPdfDocumentRenderOptions::scaledSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPdfDocumentRenderOptions :: scaledSize（）常量</target>
        </trans-unit>
        <trans-unit id="be7d83e85f549db546d30478438934f8bd15d768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPixmap::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPixmap :: size（）常量</target>
        </trans-unit>
        <trans-unit id="37fd29e533fa5c169e56b1e524000ed44e604d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuick3DTextureData::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuick3DTextureData :: size（）常量</target>
        </trans-unit>
        <trans-unit id="6d7a0a5e08232f9e80d0b4fb0f51bdd9ce3f84b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickView::initialSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickView :: initialSize（）常量</target>
        </trans-unit>
        <trans-unit id="f981f22c004714d2ef454b2f6a27bc0b0914258a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWidget::initialSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWidget :: initialSize（）常量</target>
        </trans-unit>
        <trans-unit id="8478ee61668b65ca4f58d0cdc3f5a66b8da0eec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWindow::renderTargetSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWindow :: renderTargetSize（）常量</target>
        </trans-unit>
        <trans-unit id="5d63aa4b2eaa71da4edb75628ea95021222d75c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QRect::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QRect :: size（）常量</target>
        </trans-unit>
        <trans-unit id="4fd852074c9f6cfe1666350dc427c916a55b9ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSizeF::toSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSizeF :: toSize（）常量</target>
        </trans-unit>
        <trans-unit id="c5ce9be2ba99bc8295ebacb08b2a8a2f2ddb034e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStandardItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStandardItem :: sizeHint（）常量</target>
        </trans-unit>
        <trans-unit id="1ecb1cf5612af857733f9da2ddb431f632c1e8b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionButton::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionButton :: iconSize</target>
        </trans-unit>
        <trans-unit id="929c8853455da27ee5588d3f76527a10822332be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionComboBox::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionComboBox :: iconSize</target>
        </trans-unit>
        <trans-unit id="6002f04e4ac1a205d2476ff7b5a730c664d5a41c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: iconSize</target>
        </trans-unit>
        <trans-unit id="090e3b75321ac0f1807cbc2c84ad9850c41ddb23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::leftButtonSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: leftButtonSize</target>
        </trans-unit>
        <trans-unit id="1297c9a21a295fd12b71ad9f2fd04e11d526c44e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::rightButtonSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: rightButtonSize</target>
        </trans-unit>
        <trans-unit id="4a75f339d502e75a3dfffd4b17b10346322ac35b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::leftCornerWidgetSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: leftCornerWidgetSize</target>
        </trans-unit>
        <trans-unit id="77ee7b654de4b2066c81f034a0806db25a3d3705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::rightCornerWidgetSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: rightCornerWidgetSize</target>
        </trans-unit>
        <trans-unit id="aa9db39b639ba31837646148b27d801559fe3cbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::tabBarSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: tabBarSize</target>
        </trans-unit>
        <trans-unit id="43e4d40185fbbb077a0070ffc9eb1e3fec365821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionToolButton::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionToolButton :: iconSize</target>
        </trans-unit>
        <trans-unit id="f118aae79aed5f636a4a89d294084ffb97da4282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionViewItem::decorationSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionViewItem :: decorationSize</target>
        </trans-unit>
        <trans-unit id="e063149677b0f603f4da57ccf9c4c810ccf59e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSvgRenderer::defaultSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSvgRenderer :: defaultSize（）常量</target>
        </trans-unit>
        <trans-unit id="1dfbcbfda57fce484e47a9bb361cd5c1f2972ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTableWidgetItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTableWidgetItem :: sizeHint（）常量</target>
        </trans-unit>
        <trans-unit id="2f096d2cf1f9bcc4b81c20d4004200177faac4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTreeWidgetItem::sizeHint(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTreeWidgetItem :: sizeHint（int</target>
        </trans-unit>
        <trans-unit id="c99d1e5bfe00b2c2b679a643c08192ecb683f207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVariant::toSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVariant :: toSize（）常量</target>
        </trans-unit>
        <trans-unit id="d75dd210853dcd4e81911107908a7f4aabb1f4a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoEncoderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoEncoderSettings :: resolution（）const</target>
        </trans-unit>
        <trans-unit id="12a17b06599a3cf93d30f1fa3a2004010edf761e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoFrame::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoFrame :: size（）常量</target>
        </trans-unit>
        <trans-unit id="040363761d7c5c600909e9b1d2dc69db426108a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::frameSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: frameSize（）const</target>
        </trans-unit>
        <trans-unit id="f73ae2c6aa6e0fc4837dc9f265943ef4556476f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::pixelAspectRatio() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: pixelAspectRatio（）const</target>
        </trans-unit>
        <trans-unit id="9a4aef78ac9e72740ff7b92a22cd7b43ee364a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: sizeHint（）const</target>
        </trans-unit>
        <trans-unit id="5f1b38c4c6b7804fedde69341da36a934b2d8b83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVulkanWindow::swapChainImageSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVulkanWindow :: swapChainImageSize（）常量</target>
        </trans-unit>
        <trans-unit id="6ccd53619f0f7b2b34f1606b1a388a836e34dac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandBufferRef::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandBufferRef :: size（）常量</target>
        </trans-unit>
        <trans-unit id="6f5ec228e64614eb84f4c9909ad9ca64e45a95e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandOutputMode::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandOutputMode :: size（）常量</target>
        </trans-unit>
        <trans-unit id="0b5efc0ea2a67cbf7f25d5e9ed159a2a944d88e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevel::sizeForResize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevel :: sizeForResize（const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4d7f9ecac689527d99c8c38e8926e7279887fb4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevelV6::sizeForResize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevelV6 :: sizeForResize（const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6b4d01007d42a69df7960350bc02d63ad4c4a0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::baseSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: baseSize（）常量</target>
        </trans-unit>
        <trans-unit id="fe1de23f560764a8b81feca92c07f610bc2e15b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::maximumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: maximumSize（）常量</target>
        </trans-unit>
        <trans-unit id="278fb3b4b742d3c2c407e0211e612c294c968de3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::minimumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: minimumSize（）常量</target>
        </trans-unit>
        <trans-unit id="bbe24f89705690740668717565b308f6682c671a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::sizeIncrement() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: sizeIncrement（）常量</target>
        </trans-unit>
        <trans-unit id="f9243d9ff4d6db28876b93493dbfc82a3564d859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; ScaledPixmapArgument::size</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; ScaledPixmapArgument :: size</target>
        </trans-unit>
        <trans-unit id="53327226c6a73e50f6619e08846761292d32b5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; objects can be streamed as well as compared.</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;对象可以流式传输也可以进行比较。</target>
        </trans-unit>
        <trans-unit id="ad18a0517cd05caca4d05f672effca91685f2e73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="ddd25b9597483d4f8ea752381bd7ad6980b279d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSIZE&lt;/a&gt;，&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24a1977f05561317327e4eda732686fde9de2203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator*=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆QSize :: operator * =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8d59bdca33250ddac3defa13d62557c0a788567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator+=(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆QSize :: operator + =（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d6a2783af75f1679d0f347848553e35a779b94b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator-=(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆QSize :: operator-=（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4f14f146c34ab8de572e8cd645b2dab222afe79a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆QSize :: operator / =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c802d602270a6ed698a542d187ede4c50e6631a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::boundedTo(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: boundedTo（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="aff17287b65f1b6807071401423a819a53e9327f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::expandedTo(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: expandedTo（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bc0471be5baa06b4e6c8cee3202eb5f4f982188f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::grownBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::grownBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a59afdf08a9925ffe2656b8e9c931c7ac199dde1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::scaled(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: scaled（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5364b4991598e9e64be22f71b319f656b9f2528e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::scaled(int</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: scaled（int</target>
        </trans-unit>
        <trans-unit id="544e44d8aeea517d2f14363f6e95ef5e5b73c9dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::shrunkBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::shrunkBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e567a92bcdf7c888462be9c530f177e2918748af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: transposed（）常量</target>
        </trans-unit>
        <trans-unit id="1617ffc1ce0949bdda071f22fcf4bde948a60cad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38aa57256cb39ee2752d5c63bef07a8c85da3047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator*(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;运算符*（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2e1e80284aa6acd19a40f38909d20bcf6dcb8084" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator+(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;运算符+（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ace9bb20e312c5e715acf6f4073d9a0f9f4e166f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator-(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;运算子-（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5b764247e9a7e7ec8f0e9774b87a38da262c93e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;operator/(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;运算子/（const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="12ef3371887c9560e2109dfa998451b5d4490a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QFontMetricsF::size(int</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QFontMetricsF :: size（int</target>
        </trans-unit>
        <trans-unit id="cbf75f605dfa85f14f4ea2df59c7c0c6738e45cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::effectiveSizeHint(&lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt::SizeHint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: effectiveSizeHint（&lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt :: SizeHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ff99b2445f8ab9594105ef8d5a671b4549868b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::maximumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: maximumSize（）常量</target>
        </trans-unit>
        <trans-unit id="dc4261ae31f5f79b1ea88086826c82ea22d6773b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::minimumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: minimumSize（）常量</target>
        </trans-unit>
        <trans-unit id="f426e6670b940e8f1a1a0f69662f8fdec1a4b61f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::preferredSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: preferredSize（）常量</target>
        </trans-unit>
        <trans-unit id="132e8702fe77eedcfec7d07f46c14f68e9e8af24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent::newSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent :: newSize（）常量</target>
        </trans-unit>
        <trans-unit id="0fa162cd01112a0c08307f00eb753fa1880a20d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent::oldSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent :: oldSize（）常量</target>
        </trans-unit>
        <trans-unit id="020588c59b9225144488baf3531e0e55136765bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize::definitionSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize :: definitionSize（）常量</target>
        </trans-unit>
        <trans-unit id="e504ca05aea062a68396946a9c5b3f1f0245202e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize::size(&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize :: size（&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b618d85aa2def6e8936d653f0276c79575d3e6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPagedPaintDevice::pageSizeMM() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPagedPaintDevice :: pageSizeMM（）常量</target>
        </trans-unit>
        <trans-unit id="b3b865e9810672d6779334acd903715a58489dda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QQuickItem::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QQuickItem :: size（）常量</target>
        </trans-unit>
        <trans-unit id="dda0f3dcde3e1760a9dc371eba2fcf1fdaab7940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QRectF::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QRectF :: size（）常量</target>
        </trans-unit>
        <trans-unit id="f5039348eb0883ae0ffa41b98c981616e063cdef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QScrollPrepareEvent::viewportSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QScrollPrepareEvent :: viewportSize（）常量</target>
        </trans-unit>
        <trans-unit id="338b838fafb30eae141a6117a8ab1818f3cc0eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QStaticText::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QStaticText :: size（）常量</target>
        </trans-unit>
        <trans-unit id="0bd27709c81b8fbb777da201cfc353a321eb5d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QVariant::toSizeF() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QVariant :: toSizeF（）常量</target>
        </trans-unit>
        <trans-unit id="15aa181df0fd2ffd29a2aa6beb3925bec6707c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; TouchPoint::ellipseDiameters() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; TouchPoint :: ellipseDiameters（）常量</target>
        </trans-unit>
        <trans-unit id="972c4b95384474492aa78baeb6ffaad968e4008b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; objects can be streamed as well as compared.</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;对象可以流式传输并进行比较。</target>
        </trans-unit>
        <trans-unit id="d8f23e2bd7d9134d0be1ed2e8d1fe2e16a94cfab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator*=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆QSizeF :: operator * =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ddd32f08b31dc5a5d3a4e252ec5abd7f139a306" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator+=(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆QSizeF :: operator + =（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f7f2574d45f43133787491b5264296e248fb0974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator-=(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆QSizeF :: operator-=（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="922b013a249a2a227ac793579a08f9fb8ba8f401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆QSizeF :: operator / =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c74e89fc1d54e35b3ec427edbca825fdf3d66a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::boundedTo(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: boundedTo（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="719d809f1647c9c4a9bbdbf6732f10c01128500a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::expandedTo(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: expandedTo（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a3629726969de28c4f1e3da361c7ce01fb44765b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::grownBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::grownBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f46383dce0f5f5b5fe101373e6b2a99bf7a522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::scaled(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: scaled（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8718aca74ac59200c0e0d9781a4909792c2f98a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::scaled(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: scaled（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="153fc2bc23c573d49fbdd29b584e89ad83879182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::shrunkBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::shrunkBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4078e03282e7e7693fd5321c65b2f3f8fef54489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: transposed（）常量</target>
        </trans-unit>
        <trans-unit id="e306bb671a8d18bf2b4c9ced7155f842009655ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2bae776881f087de1f8ec8e5c8dd10717819825" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator*(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;运算符*（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="27d7ff87196d8da05275f40164e02a707d19dc71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator+(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;运算符+（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0c4c816cf3e9c4218db25e97f2c3e307ddc3fb34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator-(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;运算子-（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="42bd955191d99d53ddcdcc17958a8ed53dce719f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;operator/(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;运算子/（const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3ff710ec28ebab36ffbcf86d79f81a18886a8e44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QGraphicsLayoutItem::sizePolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QGraphicsLayoutItem :: sizePolicy（）const</target>
        </trans-unit>
        <trans-unit id="c604b01f289a1065b4a8c4277cffd63f8b6efda8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSpacerItem::sizePolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSpacerItem :: sizePolicy（）const</target>
        </trans-unit>
        <trans-unit id="b6068d5c84704dbd2f574474f362be2cb8ccabe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; contains two independent &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; values and two stretch factors; one describes the widgets's horizontal size policy, and the other describes its vertical size policy. It also contains a flag to indicate whether the height and width of its preferred size are related.</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt;包含两个独立的&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt;值和两个拉伸因子；一个描述小部件的水平尺寸策略，另一个描述小部件的垂直尺寸策略。它还包含一个标志，以指示其首选大小的高度和宽度是否相关。</target>
        </trans-unit>
        <trans-unit id="cfdfb01c964a394fc5192503322a7ed860bcd42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy::ControlType&lt;/a&gt; QSizePolicy::controlType() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy :: ControlType&lt;/a&gt; QSizePolicy :: controlType（）const</target>
        </trans-unit>
        <trans-unit id="32dca606082490a41b65a33ef6b1ab683b217ccf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; QSizePolicy::horizontalPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt; QSizePolicy :: horizo​​ntalPolicy（）const</target>
        </trans-unit>
        <trans-unit id="805827c71e084cdb8d1c4694c4ffada5d3f1684c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; QSizePolicy::verticalPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt; QSizePolicy :: verticalPolicy（）const</target>
        </trans-unit>
        <trans-unit id="cacfd6f254863837d1396f553867fc17ec80a64d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#PolicyFlag-enum&quot;&gt;QSizePolicy::ExpandFlag&lt;/a&gt; is not respected.</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#PolicyFlag-enum&quot;&gt;QSizePolicy :: ExpandFlag&lt;/a&gt;不被尊重。</target>
        </trans-unit>
        <trans-unit id="91098a3df5c9f78dacf78c0c22a39ec33dfade9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSizePolicy::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSizePolicy :: transposed（）const</target>
        </trans-unit>
        <trans-unit id="945e0298fb4dcdc9a466260d0c62384a15cb0fd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; (9) provides a vertical or horizontal slider.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;（9）提供垂直或水平滑块。</target>
        </trans-unit>
        <trans-unit id="5b1381259e3a6e438c020d452ce883d8b2015f1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; has very few of its own functions; most of the functionality is in &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;. The most useful functions are &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt;() to set the slider directly to some value; &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction&lt;/a&gt;() to simulate the effects of clicking (useful for shortcut keys); &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;setSingleStep&lt;/a&gt;(), &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;setPageStep&lt;/a&gt;() to set the steps; and &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;() and &lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() to define the range of the scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;仅有很少的功能。大多数功能都在&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider中&lt;/a&gt;。最有用的函数是&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt;（），可将滑块直接设置为某个值；&lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction&lt;/a&gt;（）模拟点击的效果（对于快捷键很有用）；&lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;setSingleStep&lt;/a&gt;（），&lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;setPageStep&lt;/a&gt;（）设置步骤；以及&lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;（）和&lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;（）来定义滚动条的范围。</target>
        </trans-unit>
        <trans-unit id="14c78374462543ad255f6b55f455c7f2e0101f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; inherits a comprehensive set of signals:</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;继承了一组全面的信号：</target>
        </trans-unit>
        <trans-unit id="956094ef066e18ba0a06258ebb80deeb059bea89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; only provides integer ranges. Note that although &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; handles very large numbers, it becomes difficult for users to use a slider accurately for very large ranges.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;仅提供整数范围。注意，尽管&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;处理非常大的数字，但用户很难在很大的范围内准确使用滑块。</target>
        </trans-unit>
        <trans-unit id="620911fa7851ba5bfcb92ff34577127161ffde24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; provides methods for controlling tickmarks. You can use &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;setTickPosition&lt;/a&gt;() to indicate where you want the tickmarks to be, &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;setTickInterval&lt;/a&gt;() to indicate how many of them you want. the currently set tick position and interval can be queried using the &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;tickPosition&lt;/a&gt;() and &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt;() functions, respectively.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;提供了控制刻度线的方法。您可以使用&lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;setTickPosition&lt;/a&gt;（）来指示您想要的刻度线，&lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;setTickInterval&lt;/a&gt;（）可以指示您想要的刻度线数。当前设置的刻度位置和间隔可以分别使用&lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;tickPosition&lt;/a&gt;（）和&lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt;（）函数查询。</target>
        </trans-unit>
        <trans-unit id="be88962681ea749ea68650568cabef915f858b0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; uses &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; as all &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;s do. We present a table with the members that affect &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;像所有&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider &lt;/a&gt;一样使用&lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt;。我们列出了影响&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;的成员表：</target>
        </trans-unit>
        <trans-unit id="b91e48772b07631a0ea6edcb925eac97fa474503" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider#TickPosition-enum&quot;&gt;QSlider::TickPosition&lt;/a&gt; QStyleOptionSlider::tickPosition</source>
          <target state="translated">&lt;a href=&quot;qslider#TickPosition-enum&quot;&gt;QSlider :: TickPosition&lt;/a&gt; QStyleOptionSlider :: tickPosition</target>
        </trans-unit>
        <trans-unit id="01ad39f4ac83bac7d3966771e4af2e4845870c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;QSocketNotifier::Type&lt;/a&gt; QSocketNotifier::type() const</source>
          <target state="translated">&lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;QSocketNotifier :: Type&lt;/a&gt; QSocketNotifier :: type（）const</target>
        </trans-unit>
        <trans-unit id="e71468bd87c07b4dae01425f7ac182512225ee11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; can be sorted by column -1, in which case it returns to the sort order of the underlying source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;可以按列-1排序，在这种情况下，它返回到基础源模型的排序顺序。</target>
        </trans-unit>
        <trans-unit id="de48040df2fffefc1f4fd78c8c442a48dbf576ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; can be used for sorting items, filtering out items, or both. The model transforms the structure of a source model by mapping the model indexes it supplies to new indexes, corresponding to different locations, for views to use. This approach allows a given source model to be restructured as far as views are concerned without requiring any transformations on the underlying data, and without duplicating the data in memory.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;可以用于对项目进行排序，过滤项目或同时对两者进行过滤。该模型通过将其提供的模型索引映射到新索引（对应于不同位置）以供视图使用，来转换源模型的结构。这种方法允许就视图而言重构给定的源模型，而无需对基础数据进行任何转换，也无需复制内存中的数据。</target>
        </trans-unit>
        <trans-unit id="02753aa8970763375b0d8e0f51b7fb393fdc4630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; enables data from a source model to be filtered before being supplied to views, and also allows the contents of a source model to be supplied to views as pre-sorted data.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;允许在将源模型中的数据提供给视图之前对其进行过滤，并且还允许将源模型的内容作为预排序的数据提供给视图。</target>
        </trans-unit>
        <trans-unit id="167aad1cf92b1c0ac75315036f4bd672e8f0d338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; instances use Qt's built-in qStableSort() function to set up mappings between items in the source model and those in the proxy model, allowing a sorted hierarchy of items to be exposed to views without modifying the structure of the source model. To provide custom sorting behavior, reimplement the &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan()&lt;/a&gt; function to perform custom comparisons.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;实例使用Qt的内置qStableSort（）函数在源模型中的项目和代理模型中的项目之间建立映射，从而允许将分类的项目层次结构公开给视图，而无需修改源模型的结构。要提供自定义排序行为，请重新实现&lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan（）&lt;/a&gt;函数以执行自定义比较。</target>
        </trans-unit>
        <trans-unit id="173c066c0e3e07e463c24a515af87f6c91e49d00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; instances use std::stable_sort() function to set up mappings between items in the source model and those in the proxy model, allowing a sorted hierarchy of items to be exposed to views without modifying the structure of the source model. To provide custom sorting behavior, reimplement the &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan()&lt;/a&gt; function to perform custom comparisons.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;实例使用std :: stable_sort（）函数在源模型中的项目和代理模型中的项目之间设置映射，从而允许将分类的项目层次结构公开给视图，而无需修改源模型的结构。要提供自定义排序行为，请重新实现&lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan（）&lt;/a&gt;函数以执行自定义比较。</target>
        </trans-unit>
        <trans-unit id="7e90d898e8feccad1dbde8a9180c944b90609f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsColumn&quot;&gt;filterAcceptsColumn()&lt;/a&gt; is used to filter specific columns from part of the source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsColumn&quot;&gt;filterAcceptsColumn（）&lt;/a&gt;用于过滤部分源模型中的特定列。</target>
        </trans-unit>
        <trans-unit id="28ea8e826707ed3dddb88e4afece5572372720d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsRow&quot;&gt;filterAcceptsRow()&lt;/a&gt; is used to filter specific rows from part of the source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsRow&quot;&gt;filterAcceptsRow（）&lt;/a&gt;用于过滤部分源模型中的特定行。</target>
        </trans-unit>
        <trans-unit id="1d2e1b7106cea709197f7bab70bb52252de53035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsoundeffect#Status-enum&quot;&gt;QSoundEffect::Status&lt;/a&gt; QSoundEffect::status() const</source>
          <target state="translated">&lt;a href=&quot;qsoundeffect#Status-enum&quot;&gt;QSoundEffect :: Status&lt;/a&gt; QSoundEffect :: status（）const</target>
        </trans-unit>
        <trans-unit id="ac9f3b2dd4cbcf6272c3f6cbe5f99b364b07c4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; QAbstractXmlNodeModel::sourceLocation(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; QAbstractXmlNodeModel :: sourceLocation（const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2abb90315f0a603f01dbdd951cc15460cc04027e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instances for which &lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt;() returns true are considered equal.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;&lt;/a&gt;&lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt;（）返回true的QSourceLocation实例被视为相等。</target>
        </trans-unit>
        <trans-unit id="65cc54e69fca8d21d9a843b0976614cd79b0a8fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; is a simple value based class that has three properties, &lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt;(), &lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;(), and &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;(), that, taken together, identify a certain point in a resource, e.g., a file or an in-memory document.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt;是一个基于值的简单类，具有三个属性&lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt;（），&lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;（）和&lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;（），它们共同标识资源（例如文件或内存中的文档）中的某个点。</target>
        </trans-unit>
        <trans-unit id="d0ab70fc0029267279719c2e3f5355ec2a2d5dbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;QSourceLocation::operator=(const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt;＆QSourceLocation :: operator =（const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="635ed938ed74cdd46ee9d8889d8913a255875455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;() and &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;() refer to character counts (not byte counts), and they both start from 1, as opposed to 0.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;（）和&lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;（）表示字符计数（不是字节计数），它们都从1开始，而不是0。</target>
        </trans-unit>
        <trans-unit id="938e70dc528f962c7f324ee1eab2edb3faa3f05b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; allows the user to choose a value by clicking the up/down buttons or pressing up/down on the keyboard to increase/decrease the value currently displayed. The user can also type the value in manually. The spin box supports integer values but can be extended to use different strings with &lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt;(), &lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;() and &lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;允许用户通过单击上/下按钮或按键盘上的上/下按钮来选择/选择一个值，以增加/减少当前显示的值。用户也可以手动输入值。旋转框支持整数值，但可以扩展为使用带有&lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt;（），&lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;（）和&lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;（）的不同字符串。</target>
        </trans-unit>
        <trans-unit id="2fbdf3cd60ac204643193316ad2e1b077e4a268d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; is designed to handle integers and discrete sets of values (e.g., month names); use &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt; for floating point values.</source>
          <target state="translated">&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;旨在处理整数和离散值集（例如，月份名称）；使用&lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt;作为浮点值。</target>
        </trans-unit>
        <trans-unit id="e9eb6e480e574d111f106f1729d0e2e62e2fcedf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; supports this with the &lt;a href=&quot;qsplashscreen#showMessage&quot;&gt;showMessage&lt;/a&gt;() function. If you wish to do your own drawing you can get a pointer to the pixmap used in the splash screen with &lt;a href=&quot;qsplashscreen#pixmap&quot;&gt;pixmap&lt;/a&gt;(). Alternatively, you can subclass &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; and reimplement &lt;a href=&quot;qsplashscreen#drawContents&quot;&gt;drawContents&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt;通过&lt;a href=&quot;qsplashscreen#showMessage&quot;&gt;showMessage&lt;/a&gt;（）函数支持此功能。如果您想自己绘制，可以使用&lt;a href=&quot;qsplashscreen#pixmap&quot;&gt;pixmap&lt;/a&gt;（）获得指向初始屏幕中使用的pixmap的指针。另外，您可以&lt;a href=&quot;qsplashscreen&quot;&gt;继承QSplashScreen&lt;/a&gt;并重新实现&lt;a href=&quot;qsplashscreen#drawContents&quot;&gt;drawContents&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ae0fe18e9809b7d63d1888cb2dbf89c3b984ee8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; *QSplitterHandle::splitter() const</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; * QSplitterHandle :: splitter（）常量</target>
        </trans-unit>
        <trans-unit id="f0551905556907d38189a2513f62a7dbec1b5e36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; does not use &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom()&lt;/a&gt; to set up its option; it sets the &lt;code&gt;State_MouseOver&lt;/code&gt; and &lt;code&gt;State_Disabled&lt;/code&gt; flags itself.</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt;不使用&lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom（）&lt;/a&gt;来设置其选项。它会自行设置 &lt;code&gt;State_MouseOver&lt;/code&gt; 和 &lt;code&gt;State_Disabled&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="84e8e7490ad2f2684075d932de3cc8fffd65e782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; resizes its children dynamically by default. If you would rather have &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; resize the children only at the end of a resize operation, call &lt;a href=&quot;qsplitter#opaqueResize-prop&quot;&gt;setOpaqueResize&lt;/a&gt;(false).</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt;默认情况下会动态调整其子级大小。如果您希望&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt;仅在调整大小操作结束时调整子项的大小，请调用&lt;a href=&quot;qsplitter#opaqueResize-prop&quot;&gt;setOpaqueResize&lt;/a&gt;（false）。</target>
        </trans-unit>
        <trans-unit id="7f38b0724105a95ad685f4e954515d092485e23a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; *QSplitter::handle(int</source>
          <target state="translated">&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; * QSplitter :: handle（int</target>
        </trans-unit>
        <trans-unit id="cadbda1d8e44741faa0b9049de4727ea91cd2f01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; is typically what people think about when they think about a splitter. It is the handle that is used to resize the widgets.</source>
          <target state="translated">&lt;a href=&quot;qsplitterhandle&quot;&gt;&lt;/a&gt;人们在考虑分离器时通常会考虑QSplitterHandle。它是用于调整窗口小部件大小的句柄。</target>
        </trans-unit>
        <trans-unit id="73e310f7df805337ea589b909612a5b246e9d09b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlDatabase::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlDatabase :: numericalPrecisionPolicy（）const</target>
        </trans-unit>
        <trans-unit id="39757399f03b71a6b52e4a536ff70dbcac768560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlDriver::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlDriver :: numericalPrecisionPolicy（）const</target>
        </trans-unit>
        <trans-unit id="0f7b54a3d0bd6654b891dcd69e8b0f0d4afb678e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlQuery::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlQuery :: numericalPrecisionPolicy（）const</target>
        </trans-unit>
        <trans-unit id="5926c8fc91ae5bdb86fec1bf294857de2d27a99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; QSqlTableModel::database() const</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; QSqlTableModel :: database（）常量</target>
        </trans-unit>
        <trans-unit id="4632d2ee4ff9a123b31758873f96d098caba3352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; is a value class. Changes made to a database connection via one instance of &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; will affect other instances of &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; that represent the same connection. Use &lt;a href=&quot;qsqldatabase#cloneDatabase&quot;&gt;cloneDatabase&lt;/a&gt;() to create an independent database connection based on an existing one.</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;是一个值类。通过一个&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;实例对数据库连接所做的更改将影响代表相同连接的其他&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;实例。使用&lt;a href=&quot;qsqldatabase#cloneDatabase&quot;&gt;cloneDatabase&lt;/a&gt;（）在现有数据库连接的基础上创建一个独立的数据库连接。</target>
        </trans-unit>
        <trans-unit id="26c7d90690aede4680a7247868eeb9fec380ed7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; is responsible for loading and managing database driver plugins. When a database is added (see &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;QSqlDatabase::addDatabase&lt;/a&gt;()), the appropriate driver plugin is loaded (using &lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt;). &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; relies on the driver plugin to provide interfaces for &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; and &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;负责加载和管理数据库驱动程序插件。添加数据库后（请参见&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;QSqlDatabase :: addDatabase&lt;/a&gt;（）），将加载相应的驱动程序插件（使用&lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt;）。&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;依靠驱动程序插件为&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;和&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;提供接口。</target>
        </trans-unit>
        <trans-unit id="6750c3e84dee4386c673e85cd600aeaf98593311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; takes ownership of the</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;拥有所有权</target>
        </trans-unit>
        <trans-unit id="365fdfb92d8507fc35cb089fbbed37df1f2eea12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp;QSqlDatabase::operator=(const &lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt;＆QSqlDatabase :: operator =（const &lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4f8ea0e430c79ffb460bbf039910d0fd22901ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="42cfc60f341c479de9ef02cde9dd7a8b90cea599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#drivers&quot;&gt;drivers&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#drivers&quot;&gt;drivers&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4339bcdbae6add0ae5b510afc717f0dd6fe982e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#isDriverAvailable&quot;&gt;isDriverAvailable&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#isDriverAvailable&quot;&gt;isDriverAvailable&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="052e6880be1714a6e817eaed38ba3ef28dc4aba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="92769bca27b647e547b3f0c3963f4d3916440b91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#primaryIndex&quot;&gt;primaryIndex&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#primaryIndex&quot;&gt;primaryIndex&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="81160b97c0da63a62fa4fe0e948af1948e63f664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#record&quot;&gt;record&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#record&quot;&gt;record&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b10b8bb95676f914fbe592f50105ccb0d8606b43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#registerSqlDriver&quot;&gt;registerSqlDriver&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#registerSqlDriver&quot;&gt;registerSqlDriver&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f7606c82bf6531d0b7f7a0b0ab8df69c260b131b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5f0a90390e9d45e9fe46a13d223f111d507f2075" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#tables&quot;&gt;tables&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#tables&quot;&gt;tables&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0755f5670f4dff3c4a1dfb64555bf9c4d323665a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#transaction&quot;&gt;transaction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#transaction&quot;&gt;transaction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="31c949735095af4571d4fc8a4b9aef52bccdc5b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *QSqlDatabase::driver() const</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; * QSqlDatabase :: driver（）常量</target>
        </trans-unit>
        <trans-unit id="0e864db9d05f0d7cd8a66bef244260d2a8273037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; and &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; are closely connected. When implementing a Qt SQL driver, both of these classes must to be subclassed and the abstract virtual methods in each class must be implemented.</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;和&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;紧密相连。在实现Qt SQL驱动程序时，这两个类都必须被子类化，并且必须实现每个类中的抽象虚拟方法。</target>
        </trans-unit>
        <trans-unit id="3ed60047945e02c8b7dfb893e0443a738087b077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database driver. This includes functions such as &lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver::open&lt;/a&gt;() and &lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver::close&lt;/a&gt;(). &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is responsible for connecting to a database, establish the proper environment, etc. In addition, &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; can create &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; objects appropriate for the particular database API. &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;是一个抽象基类，它定义SQL数据库驱动程序的功能。这包括&lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver :: open&lt;/a&gt;（）和&lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver :: close&lt;/a&gt;（）之类的函数。&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;负责连接数据库，建立适当的环境等。此外，&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;可以创建适用于特定数据库API的&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;对象。&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;将其许多函数调用直接转发到提供具体实现的&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba0c573da41be3a12d33104a200809b3490ba638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database driver. This includes functions such as &lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver::open&lt;/a&gt;() and &lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver::close&lt;/a&gt;(). &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is responsible for connecting to a database, establish the proper environment, etc. In addition, &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; can create &lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; objects appropriate for the particular database API. &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;是一个抽象基类，它定义SQL数据库驱动程序的功能。这包括&lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver :: open&lt;/a&gt;（）和&lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver :: close&lt;/a&gt;（）之类的函数。&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;负责连接数据库，建立适当的环境等。此外，&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;可以创建适用于特定数据库API的&lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;对象。&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;将其许多函数调用直接转发到提供具体实现的&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="580e5a7a0139014a127bf400e6a905612b978eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldrivercreator&quot;&gt;QSqlDriverCreator&lt;/a&gt;&amp;lt;T&amp;gt; instantiates objects of type T, where T is a &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; subclass.</source>
          <target state="translated">&lt;a href=&quot;qsqldrivercreator&quot;&gt;QSqlDriverCreator&lt;/a&gt; &amp;lt;T&amp;gt;实例化类型T的对象，其中T是&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="c12b2dc0da66eebd9d0b137e8b7d223c748d15ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDatabase::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDatabase :: lastError（）常量</target>
        </trans-unit>
        <trans-unit id="b3249ac1ea18793e51e96dd78c0073b0f0be7d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDriver::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDriver :: lastError（）常量</target>
        </trans-unit>
        <trans-unit id="58eb3b3cb28b9197d35ee70ae85be88785bdc706" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQuery::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQuery :: lastError（）常量</target>
        </trans-unit>
        <trans-unit id="bf834951ee4f34d82b89c1faea877917cd1c6d1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQueryModel::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQueryModel :: lastError（）常量</target>
        </trans-unit>
        <trans-unit id="2d9e82bfea93dc4953d3efceb527eab685fa335a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror#ErrorType-enum&quot;&gt;QSqlError::ErrorType&lt;/a&gt; QSqlError::type() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror#ErrorType-enum&quot;&gt;QSqlError :: ErrorType&lt;/a&gt; QSqlError :: type（）const</target>
        </trans-unit>
        <trans-unit id="bce2ed2932a8baac18e173fb149100599cf3a062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;QSqlError::operator=(const &lt;a href=&quot;qsqlerror#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlerror#QSqlError&quot;&gt;QSqlError&lt;/a&gt;＆QSqlError :: operator =（const &lt;a href=&quot;qsqlerror#QSqlError&quot;&gt;QSqlError&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="522e5f0c2b410afdf5dbb9a7324317dba72be272" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord::field(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord :: field（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6eaca2bffdf11742023557833060837ab019973c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord::field(int</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord :: field（int</target>
        </trans-unit>
        <trans-unit id="7f4a7c7e43349260ff6d2fd7d7b629d41a21c476" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; objects are rarely created explicitly in application code. They are usually accessed indirectly through &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt;s that already contain a list of fields. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt;对象很少在应用程序代码中显式创建。通常通过已经包含字段列表的&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt;间接访问它们。例如：</target>
        </trans-unit>
        <trans-unit id="799393b2f6eb4182cf6c33975fc6ddd753847fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; represents the characteristics of a single column in a database table or view, such as the data type and column name. A field also contains the value of the database column, which can be viewed or changed.</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt;表示数据库表或视图中单个列的特征，例如数据类型和列名。一个字段还包含数据库列的值，可以查看或更改它。</target>
        </trans-unit>
        <trans-unit id="fca1f5d5a05c18a8746b4cdbf1cbf607686d8485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;QSqlField::operator=(const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt;＆QSqlField :: operator =（const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2d8c624d17cee02e9d9122464589f9e4fd1193f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField::RequiredStatus&lt;/a&gt; QSqlField::requiredStatus() const</source>
          <target state="translated">&lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField :: RequiredStatus&lt;/a&gt; QSqlField :: requiredStatus（）const</target>
        </trans-unit>
        <trans-unit id="da0aa372a2591466aca3104a656ae55ab9abacb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlDatabase::primaryIndex(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlDatabase :: primaryIndex（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ab149f907a33dd4cf269987196389ddf086dea42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlTableModel::primaryKey() const</source>
          <target state="translated">&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlTableModel :: primaryKey（）常量</target>
        </trans-unit>
        <trans-unit id="0e16c3fb04a6847ed36ee2c521a6ce86a5b3bf2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;QSqlIndex::operator=(const &lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt;＆QSqlIndex :: operator =（const &lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a5f54859e64a5dfe8e3aad80f1749a107ee12e2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlDatabase::exec(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlDatabase :: exec（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="dd4095b514c21e955cea0046de844895d618e32e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlQueryModel::query() const</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlQueryModel :: query（）常量</target>
        </trans-unit>
        <trans-unit id="92a6a467a83e345724451ea46464dd142199f830" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; can execute arbitrary SQL statements, not just &lt;code&gt;SELECT&lt;/code&gt;s. The following example inserts a record into a table using &lt;code&gt;INSERT&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;可以执行任意SQL语句，而不仅仅是 &lt;code&gt;SELECT&lt;/code&gt; 。下面的示例使用 &lt;code&gt;INSERT&lt;/code&gt; 将记录插入表中：</target>
        </trans-unit>
        <trans-unit id="e70ed5d0dfc4ab341dd24c8dbf6d7ed0a4f4ada3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; encapsulates the functionality involved in creating, navigating and retrieving data from SQL queries which are executed on a &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;. It can be used to execute DML (data manipulation language) statements, such as &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt;, as well as DDL (data definition language) statements, such as &lt;code&gt;CREATE&lt;/code&gt;&lt;code&gt;TABLE&lt;/code&gt;. It can also be used to execute database-specific commands which are not standard SQL (e.g. &lt;code&gt;SET DATESTYLE=ISO&lt;/code&gt; for PostgreSQL).</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;封装了从在&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;上执行的SQL查询创建，导航和检索数据所涉及的功能。它可以用于执行DML（数据操作语言）语句，例如 &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;INSERT&lt;/code&gt; ， &lt;code&gt;UPDATE&lt;/code&gt; 和 &lt;code&gt;DELETE&lt;/code&gt; ，以及DDL（数据定义语言）语句，例如 &lt;code&gt;CREATE&lt;/code&gt; &lt;code&gt;TABLE&lt;/code&gt; 。它也可以用于执行非标准SQL的特定于数据库的命令（例如PostgreSQL的 &lt;code&gt;SET DATESTYLE=ISO&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7086d448886f05de11e68dedac467c31a03abb40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; provides access to the result set one record at a time. After the call to &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;exec()&lt;/a&gt;, &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;'s internal pointer is located one position</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;提供了一次访问结果集一条记录的访问权限。调用&lt;a href=&quot;qsqlquery#exec-1&quot;&gt;exec（）之后&lt;/a&gt;，&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;的内部指针位于一个位置</target>
        </trans-unit>
        <trans-unit id="535a4f3d9e20b1bd7c6a2ac2fb69f0f839eb1117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; supports prepared query execution and the binding of parameter values to placeholders. Some databases don't support these features, so for those, Qt emulates the required functionality. For example, the Oracle and ODBC drivers have proper prepared query support, and Qt makes use of it; but for databases that don't have this support, Qt implements the feature itself, e.g. by replacing placeholders with actual values when a query is executed. Use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;() to find out how many rows were affected by a non-&lt;code&gt;SELECT&lt;/code&gt; query, and &lt;a href=&quot;qsqlquery#size&quot;&gt;size&lt;/a&gt;() to find how many were retrieved by a &lt;code&gt;SELECT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;支持准备好的查询执行以及参数值与占位符的绑定。一些数据库不支持这些功能，因此对于这些数据库，Qt会仿真所需的功能。例如，Oracle和ODBC驱动程序具有适当的准备好的查询支持，而Qt则利用了它。但是对于不支持此功能的数据库，Qt会自行实现此功能，例如，在执行查询时通过使用实际值替换占位符。使用&lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;（）来找出有多少行受到非 &lt;code&gt;SELECT&lt;/code&gt; 查询，&lt;a href=&quot;qsqlquery#size&quot;&gt;大小&lt;/a&gt;（）来查找有多少人通过检索 &lt;code&gt;SELECT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad00eb31356a6286bee78d4a59dc28c4c52b5cb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;QSqlQuery::operator=(const &lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt;＆QSqlQuery :: operator =（const &lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4ed1bf590aa3ca6e8dbb9830d0564d4b541b77a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#first&quot;&gt;first&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#first&quot;&gt;first&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f7972c5dc3ce7da5766435bb68873b9cc0132a28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#last&quot;&gt;last&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#last&quot;&gt;last&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="2c51379ddec59029304ff0d3fbe427156ebac507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#next&quot;&gt;next&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#next&quot;&gt;next&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="cc84dcce8e21593b791db737e187d136b9573439" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#previous&quot;&gt;previous&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#previous&quot;&gt;previous&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4e019d5543b0e77ad14b3830aa4eaca5de8645e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#seek&quot;&gt;seek&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#seek&quot;&gt;seek&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="df2b553993da5e1901efcb751c1597a74fd946d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; can also be used to access a database programmatically, without binding it to a view:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;还可以用于以编程方式访问数据库，而无需将其绑定到视图：</target>
        </trans-unit>
        <trans-unit id="8bac268f4374b49e1fcb83a4d8a7d4325db40f76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; is a high-level interface for executing SQL statements and traversing the result set. It is built on top of the lower-level &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; and can be used to provide data to view classes such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;是用于执行SQL语句和遍历结果集的高级接口。它构建在较低级别的&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery之上&lt;/a&gt;，可用于提供数据以查看&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;等类。例如：</target>
        </trans-unit>
        <trans-unit id="c344f67dad348cb5c428b26dd203a465e4c52f86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; offers a read-only model based on an SQL query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;提供基于SQL查询的只读模型。</target>
        </trans-unit>
        <trans-unit id="5dd02ed1eb6bb6c05c73250aa769b5de8fe274c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, and &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; are used to access databases using model/view conventions.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;，&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;和&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;用于使用模型/视图约定访问数据库。</target>
        </trans-unit>
        <trans-unit id="c2a7ad7fb13111d9a4e7543e720f5315d35c0d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#data&quot;&gt;data&lt;/a&gt;() to expose SQL data to the QML frontend. For example, the following implementation returns data for the given model index:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#data&quot;&gt;data&lt;/a&gt;（）将SQL数据公开给QML前端。例如，以下实现返回给定模型索引的数据：</target>
        </trans-unit>
        <trans-unit id="fb83808560f0ef25e5b3f9775d935a5efd00c33c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#lastError&quot;&gt;lastError&lt;/a&gt;() can be used to retrieve verbose information if there was an error setting the query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#lastError&quot;&gt;&lt;/a&gt;如果设置查询时出错，lastError（）可用于检索详细信息。</target>
        </trans-unit>
        <trans-unit id="176b42ac91fc936206a766c426fd67cfe53cc7ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#query&quot;&gt;query&lt;/a&gt;() returns the new query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#query&quot;&gt;query&lt;/a&gt;（）返回新查询。</target>
        </trans-unit>
        <trans-unit id="65325a8955e02265838fb91bcbfb8c53c1c56a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlDatabase::record(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlDatabase :: record（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7f5e2ff74d179bc41527d58be31cea773831b2c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQuery::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQuery :: record（）常量</target>
        </trans-unit>
        <trans-unit id="3913e68b671d27a2ad940bd5fab552c6be09d3b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel :: record（）常量</target>
        </trans-unit>
        <trans-unit id="3c09c9afb1656b988479a53e2c6ceda98d2f6282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel::record(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel :: record（int</target>
        </trans-unit>
        <trans-unit id="4ad6588f486c9e1856cea1d9c02864c5d375a38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel :: record（）常量</target>
        </trans-unit>
        <trans-unit id="2158691330d54a278c3122402f6f34213496cf8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel::record(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel :: record（int</target>
        </trans-unit>
        <trans-unit id="56b1965d12ca2a4d199e6988041cb03526894b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; is &lt;a href=&quot;implicit-sharing&quot;&gt;implicitly shared&lt;/a&gt;. This means you can make copies of a record in &lt;a href=&quot;containers#constant-time&quot;&gt;constant time&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt;是&lt;a href=&quot;implicit-sharing&quot;&gt;隐式共享的&lt;/a&gt;。这意味着您可以在&lt;a href=&quot;containers#constant-time&quot;&gt;固定时间内&lt;/a&gt;复制记录。</target>
        </trans-unit>
        <trans-unit id="2329c3229d49d4a45bd69ba18dfca67203185477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;QSqlRecord::operator=(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt;＆QSqlRecord :: operator =（const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="135eceebcd1caa40e3c79616dba63cb700a62fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlRecord::keyValues(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlRecord :: keyValues（const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5e097749c9707e0ee04421d902929dee974bd45a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; QSqlRelationalTableModel::relation(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; QSqlRelationalTableModel :: relation（int</target>
        </trans-unit>
        <trans-unit id="4ec43bce0f6acb50230811b385d5b9d98887a7a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; is a helper class for &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;. See &lt;a href=&quot;qsqlrelationaltablemodel#setRelation&quot;&gt;QSqlRelationalTableModel::setRelation&lt;/a&gt;() and &lt;a href=&quot;qsqlrelationaltablemodel#relation&quot;&gt;QSqlRelationalTableModel::relation&lt;/a&gt;() for details.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt;是一个辅助类&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;。有关详细信息，请参见&lt;a href=&quot;qsqlrelationaltablemodel#setRelation&quot;&gt;QSqlRelationalTableModel :: setRelation&lt;/a&gt;（）和&lt;a href=&quot;qsqlrelationaltablemodel#relation&quot;&gt;QSqlRelationalTableModel :: relation&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="2155678b149c2062a3f064aa4c537acfa7481891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; acts like &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, but allows columns to be set as foreign keys into other database tables.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel的&lt;/a&gt;行为类似于&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;，但允许将列设置为其他数据库表中的外键。</target>
        </trans-unit>
        <trans-unit id="b7c5e5eb9c2967e5e230f4fc71cbd8d2d9a780c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; extends &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; to provide support for foreign keys. A foreign key is a 1-to-1 mapping between a field in one table and the primary key field of another table. For example, if a &lt;code&gt;book&lt;/code&gt; table has a field called &lt;code&gt;authorid&lt;/code&gt; that refers to the author table's &lt;code&gt;id&lt;/code&gt; field, we say that &lt;code&gt;authorid&lt;/code&gt; is a foreign key.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;扩展了&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;以提供对外键的支持。外键是一个表中的字段与另一表中的主键字段之间的一对一映射。例如，如果一个 &lt;code&gt;book&lt;/code&gt; 表具有一个称为 &lt;code&gt;authorid&lt;/code&gt; 的字段，该字段引用author表的 &lt;code&gt;id&lt;/code&gt; 字段，则可以说 &lt;code&gt;authorid&lt;/code&gt; 是一个外键。</target>
        </trans-unit>
        <trans-unit id="96b0a3bcd39ccf9634ae429f682574c3d7ee5560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database query. This includes statements such as &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;ALTER&lt;/code&gt;&lt;code&gt;TABLE&lt;/code&gt;. &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; contains functions such as QSqlResult::next() and QSqlResult::value(). &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is responsible for sending queries to the database, returning result data, etc. &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;是一个抽象基类，它定义SQL数据库查询的功能。这包括诸如 &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;UPDATE&lt;/code&gt; 和 &lt;code&gt;ALTER&lt;/code&gt; &lt;code&gt;TABLE&lt;/code&gt; 之类的语句。&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;包含诸如QSqlResult :: next（）和QSqlResult :: value（）之类的函数。&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;负责将查询发送到数据库，返回结果数据等&lt;a href=&quot;qsqlquery&quot;&gt;。QSqlQuery&lt;/a&gt;将其许多函数调用直接转发到提供具体实现的&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2f601be7132bfc8d2c788f9deb7e1804c78d759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database query. This includes statements such as &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;ALTER&lt;/code&gt;&lt;code&gt;TABLE&lt;/code&gt;. &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; contains functions such as QSqlResult::next() and QSqlResult::value(). &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is responsible for sending queries to the database, returning result data, etc. &lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;是一个抽象基类，它定义SQL数据库查询的功能。这包括诸如 &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;UPDATE&lt;/code&gt; 和 &lt;code&gt;ALTER&lt;/code&gt; &lt;code&gt;TABLE&lt;/code&gt; 之类的语句。&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;包含诸如QSqlResult :: next（）和QSqlResult :: value（）之类的函数。&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;负责向数据库发送查询，返回结果数据等&lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;。QSqlQuery&lt;/a&gt;将其许多函数调用直接转发到提供具体实现的&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a5e23b0da9a19a313a99c60287eb5a22b1f7ce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; can also be used to access a database programmatically, without binding it to a view:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;还可以用于以编程方式访问数据库，而无需将其绑定到视图：</target>
        </trans-unit>
        <trans-unit id="e90cefa034a845f0f9a9ceec73fd97e14b5bb573" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is a high-level alternative to &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; for navigating and modifying individual SQL tables. It typically results in less code and requires no knowledge of SQL syntax.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel的&lt;/a&gt;是一个高层次的替代&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;用于导航和修改单个SQL表。它通常导致更少的代码，并且不需要SQL语法知识。</target>
        </trans-unit>
        <trans-unit id="90c13b24964b0a229163ea8b689fd4636a7b4e68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is a high-level alternative to &lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; for navigating and modifying individual SQL tables. It typically results in less code and requires no knowledge of SQL syntax.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel的&lt;/a&gt;是一个高层次的替代&lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;用于导航和修改单个SQL表。它通常导致更少的代码，并且不需要SQL语法知识。</target>
        </trans-unit>
        <trans-unit id="174cd5066dced9dd446e9624b0ea7a1d2a14e206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is a high-level interface for reading and writing database records from a single table. It is built on top of the lower-level &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; and can be used to provide data to view classes such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;是用于从单个表读取和写入数据库记录的高级接口。它构建在较低级别的&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery之上&lt;/a&gt;，可用于提供数据以查看&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;等类。例如：</target>
        </trans-unit>
        <trans-unit id="8c67389b7016abaea4041472ef85d3328f8e1eb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is optimized to operate on a single table at a time. If you need a read-write model that operates on an arbitrary result set, you can subclass &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData()&lt;/a&gt; to make it read-write. The following two functions make fields 1 and 2 of a query model editable:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;经过优化，可以一次对单个表进行操作。如果需要对任意结果集进行操作的读写模型，则可以将&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;子类化，并重新实现&lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags（）&lt;/a&gt;和&lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData（）&lt;/a&gt;以使其可读写。以下两个函数使查询模型的字段1和2可编辑：</target>
        </trans-unit>
        <trans-unit id="73e3bcb4fc8249eda4290557b0372dfb735133ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; offers a read-write model that works on a single SQL table at a time.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;提供了一次可在单个SQL表上工作的读写模型。</target>
        </trans-unit>
        <trans-unit id="f64090d0f8342ae7186387e4a75da6589f3b6b6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; provides no direct support for foreign keys. Use the &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; and &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; if you want to resolve foreign keys.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;不直接支持外键。如果要解析外键，请使用&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;和&lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd84e58d658e006228e8d8a9177f359333f65725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel::EditStrategy&lt;/a&gt; QSqlTableModel::editStrategy() const</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel :: EditStrategy&lt;/a&gt; QSqlTableModel :: editStrategy（）常量</target>
        </trans-unit>
        <trans-unit id="95fdc2d0980a83f825126265cc149b35f1ac5902" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel::OnFieldChange&lt;/a&gt; seems to deliver the promise that you never need to call submitAll() explicitly. There are two pitfalls, though:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel :: OnFieldChange&lt;/a&gt;似乎提供了您无需显式调用SubmitAll（）的承诺。但是，有两个陷阱：</target>
        </trans-unit>
        <trans-unit id="c7da0b3376398e679a757852522a96463cd0fa89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#KeyAlgorithm-enum&quot;&gt;QSsl::KeyAlgorithm&lt;/a&gt; QSslKey::algorithm() const</source>
          <target state="translated">&lt;a href=&quot;qssl#KeyAlgorithm-enum&quot;&gt;QSsl :: KeyAlgorithm&lt;/a&gt; QSslKey :: algorithm（）const</target>
        </trans-unit>
        <trans-unit id="550198c6b4b70027165a006956d370a800dd6e93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#KeyType-enum&quot;&gt;QSsl::KeyType&lt;/a&gt; QSslKey::type() const</source>
          <target state="translated">&lt;a href=&quot;qssl#KeyType-enum&quot;&gt;QSsl :: KeyType&lt;/a&gt; QSslKey :: type（）const</target>
        </trans-unit>
        <trans-unit id="ab7cef9bfb32d9351a580859ebd75eda8dd45922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QDtls::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QDtls :: sessionProtocol（）常量</target>
        </trans-unit>
        <trans-unit id="9759783da490b9ac87aa35b97b8d0a96531090ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslCipher::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslCipher :: protocol（）常量</target>
        </trans-unit>
        <trans-unit id="53764d858ff00cb4347e7d48b35cf8eb39443dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslConfiguration::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslConfiguration :: protocol（）常量</target>
        </trans-unit>
        <trans-unit id="fd8b6e0a4bc77cf42030724a865b3bb464438986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslConfiguration::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslConfiguration :: sessionProtocol（）常量</target>
        </trans-unit>
        <trans-unit id="b55767447d1cb81270fd22b9eca38723f51a3654" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslSocket::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslSocket :: protocol（）常量</target>
        </trans-unit>
        <trans-unit id="d1d4b12f201d9dcb77e96054b724af7684f584d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslSocket::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslSocket :: sessionProtocol（）常量</target>
        </trans-unit>
        <trans-unit id="1583b96cfb08e9021c462f7bfb476d7985c783bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QOcspResponse::subject() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QOcspResponse :: subject（）常量</target>
        </trans-unit>
        <trans-unit id="d13180432c29f20aa2cc3cad066b8e0be535fa8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration::localCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration :: localCertificate（）常量</target>
        </trans-unit>
        <trans-unit id="4cadfa7ab7ce3fef1e0710bbc1beb27354f471b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration::peerCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration :: peerCertificate（）常量</target>
        </trans-unit>
        <trans-unit id="63f018111f20a0bd83cf643772e427f57cba8f12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslError::certificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslError :: certificate（）常量</target>
        </trans-unit>
        <trans-unit id="4f889d82e9795ea46682979b98faad27b5ee07bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket::localCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket :: localCertificate（）常量</target>
        </trans-unit>
        <trans-unit id="06c4bf757ba22fc7568771ef6aecac18ec931006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket::peerCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket :: peerCertificate（）常量</target>
        </trans-unit>
        <trans-unit id="64ebf5bf26afcda241df97cec318a477e8737219" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; stores an X509 certificate, and is commonly used to verify the identity and store information about the local host, a remotely connected peer, or a trusted third party Certificate Authority.</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;存储X509证书，通常用于验证身份并存储有关本地主机，远程连接的对等方或受信任的第三方证书颁发机构的信息。</target>
        </trans-unit>
        <trans-unit id="af05f36a752c6ec3ada3a1480a55dc16bb915861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;QSslCertificate::operator=(const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt;和QSslCertificate :: operator =（const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7fb4642572561d60220aa0180b01851cd5c2e1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificateextension&quot;&gt;QSslCertificateExtension&lt;/a&gt; provides access to an extension stored in an X509 certificate. The information available depends on the type of extension being accessed.</source>
          <target state="translated">&lt;a href=&quot;qsslcertificateextension&quot;&gt;QSslCertificateExtension&lt;/a&gt;提供对存储在X509证书中的扩展的访问。可用信息取决于所访问的扩展名类型。</target>
        </trans-unit>
        <trans-unit id="6c92cf48f63e553e70e9ee7012b9e2f9bc5ceef5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;QSslCertificateExtension::operator=(const &lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt;和QSslCertificateExtension :: operator =（const &lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9e6ae00c5c1062f51066f72b31419fb50c0f7952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QDtls::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QDtls :: sessionCipher（）常量</target>
        </trans-unit>
        <trans-unit id="8a5549519c5e13bd890cf4217c83b04ad6cfccb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslConfiguration::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslConfiguration :: sessionCipher（）常量</target>
        </trans-unit>
        <trans-unit id="91a97b2b3e41e69a52d240fd9d3a83d92e68bafb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslSocket::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslSocket :: sessionCipher（）常量</target>
        </trans-unit>
        <trans-unit id="22442ff9cf136ad8ff195996dd6f289b28dd48bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; stores information about one cryptographic cipher. It is most commonly used with &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;, either for configuring which ciphers the socket can use, or for displaying the socket's ciphers to the user.</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt;存储有关一个加密密码的信息。它最常与&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;一起使用，用于配置套接字可以使用的密码，或向用户显示套接字的密码。</target>
        </trans-unit>
        <trans-unit id="79e0848e96ebb253a179813a3d5fdef0a7921501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;QSslCipher::operator=(const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt;＆QSslCipher :: operator =（const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="33a283c4101c860af0643bd0178d431fadd624a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QDtls::dtlsConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QDtls :: dtlsConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="cecef9e779bd5e1b783667692205ffcf28a00c3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkReply::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkReply :: sslConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="a39b380f564d9879e78f3c62393ea5b360f1e3e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkRequest::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkRequest :: sslConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="49e5ca5744f6caff0e76d84c6905de07d18a1e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QSslSocket::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QSslSocket :: sslConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="2d3342184e9e1c6c54a7b0f0d6a0b37710ebd0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocket::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocket :: sslConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="155a00ace7e7dd7b2fdbd536ae4d992f481af0ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocketServer::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocketServer :: sslConfiguration（）常量</target>
        </trans-unit>
        <trans-unit id="f18404303c4d415cbef77e0824779628e903ab5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; can be used with &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; and the Network Access API.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;可以与&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;和网络访问API一起使用。</target>
        </trans-unit>
        <trans-unit id="cfb6965f33f6bb89e119489e21e47f0c7d609199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; is used by Qt networking classes to relay information about an open SSL connection and to allow the application to control certain features of that connection.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;&lt;/a&gt;Qt网络类使用QSslConfiguration中继有关打开的SSL连接的信息，并允许应用程序控制该连接的某些功能。</target>
        </trans-unit>
        <trans-unit id="386cf8ba99387936207f6bbee5e918a070b248bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; provides functions for setting the ordered list of ciphers from which the handshake phase will eventually select the session cipher. This ordered list must be in place before the handshake phase begins.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;提供用于设置密码的有序列表的功能，握手阶段最终将从中选择会话密码。在握手阶段开始之前，必须有此有序列表。</target>
        </trans-unit>
        <trans-unit id="8c4cc661a756b5118171e42b0b4e3a95a2548356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration#NextProtocolNegotiationStatus-enum&quot;&gt;QSslConfiguration::NextProtocolNegotiationStatus&lt;/a&gt; QSslConfiguration::nextProtocolNegotiationStatus() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#NextProtocolNegotiationStatus-enum&quot;&gt;QSslConfiguration :: NextProtocolNegotiationStatus&lt;/a&gt; QSslConfiguration :: nextProtocolNegotiationStatus（）const</target>
        </trans-unit>
        <trans-unit id="eb430a24e86811f156fc36e755e40a8f632d8bd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;QSslConfiguration::operator=(const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;＆QSslConfiguration :: operator =（const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="efdfb1c50bf66fd381fc65095440b6dae5eacd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; QSslConfiguration::diffieHellmanParameters() const</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; QSslConfiguration :: diffieHellmanParameters（）常量</target>
        </trans-unit>
        <trans-unit id="5ef2123faf9afb04ba67a2a8bc4679ff169017e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; provides an interface for setting Diffie-Hellman parameters to servers based on &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt;提供了一个接口，用于为基于&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket的&lt;/a&gt;服务器设置Diffie-Hellman参数。</target>
        </trans-unit>
        <trans-unit id="98753eb091897eb29c425cd83b74d8e6d500ce50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#Error-enum&quot;&gt;QSslDiffieHellmanParameters::Error&lt;/a&gt; QSslDiffieHellmanParameters::error() const</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#Error-enum&quot;&gt;QSslDiffieHellmanParameters :: Error&lt;/a&gt; QSslDiffieHellmanParameters :: error（）常量</target>
        </trans-unit>
        <trans-unit id="3dc1f28e49b1b6131f78a685590a76a42ef424cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;QSslDiffieHellmanParameters::operator=(&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt;＆QSslDiffieHellmanParameters :: operator =（&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="878a9717446d93d48a3d14c4503a1f04fc4d8d23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;QSslDiffieHellmanParameters::operator=(const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt;＆QSslDiffieHellmanParameters :: operator =（const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f58377e4e19cf22688f9a4073ff4ebfe26d85eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt; instances can be compared for equality and can be used as keys in &lt;a href=&quot;qhash-proxy&quot;&gt;QHash&lt;/a&gt; and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. They cannot be used as key in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsslellipticcurve&quot;&gt;&lt;/a&gt;可以比较QSslEllipticCurve实例是否相等，并且可以用作&lt;a href=&quot;qhash-proxy&quot;&gt;QHash&lt;/a&gt;和&lt;a href=&quot;qset&quot;&gt;QSet中的&lt;/a&gt;键。它们不能用作&lt;a href=&quot;qmap&quot;&gt;QMap中的&lt;/a&gt;键。</target>
        </trans-unit>
        <trans-unit id="bb3b88086db26e915362bc14be78eb85f37fc1be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt; provides a simple API for managing errors during &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;'s SSL handshake.</source>
          <target state="translated">&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt;提供了一个简单的API，用于管理&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;的SSL握手期间的错误。</target>
        </trans-unit>
        <trans-unit id="5978ddabd746b96f7805e8de06779de6c5ef733c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;QSslError::operator=(const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt;＆QSslError :: operator =（const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="238eb5eed2616de710be6de841fdfea0ce0d6070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror#SslError-enum&quot;&gt;QSslError::SslError&lt;/a&gt; QSslError::error() const</source>
          <target state="translated">&lt;a href=&quot;qsslerror#SslError-enum&quot;&gt;QSslError :: SslError&lt;/a&gt; QSslError :: error（）常量</target>
        </trans-unit>
        <trans-unit id="4aed1167ce3152669697329be12ec85b12c1f1be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslCertificate::publicKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslCertificate :: publicKey（）常量</target>
        </trans-unit>
        <trans-unit id="508b0a418cd6fb34d432f01ef96d61d400e793d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration::ephemeralServerKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration :: ephemeralServerKey（）常量</target>
        </trans-unit>
        <trans-unit id="935f19d91d90548d52f4a88a01ebf514e59382c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration::privateKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration :: privateKey（）常量</target>
        </trans-unit>
        <trans-unit id="edb7c48a815adeaec97cb3663f2139613b3873b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslSocket::privateKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslSocket :: privateKey（）常量</target>
        </trans-unit>
        <trans-unit id="302afa7aaa23a13aecbb2de984cca5a3a1e7da55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; provides a simple API for managing keys.</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt;提供了用于管理密钥的简单API。</target>
        </trans-unit>
        <trans-unit id="9d64242561d8ec8f02985c1017b6f8ef2a03f0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; will take ownership for this key and you must not free the key using the native library.</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt;将拥有此密钥的所有权，并且您不得使用本机库释放密钥。</target>
        </trans-unit>
        <trans-unit id="8c57e2243129455628623d742e901296803812f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;QSslKey::operator=(const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt;＆QSslKey :: operator =（const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3258d579f5795935a8883bb38d370824177291b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;QSslPreSharedKeyAuthenticator::operator=(&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt;和QSslPreSharedKeyAuthenticator :: operator =（&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e018493406b60d5694e9e29135f9879fa4f52e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;QSslPreSharedKeyAuthenticator::operator=(const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt;和QSslPreSharedKeyAuthenticator :: operator =（const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cbf2000881665bb4bb76476b924aeaa8702a5e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; also provides functions for setting the ordered list of ciphers from which the handshake phase will eventually select the session cipher. This ordered list must be in place before the handshake phase begins.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;还提供用于设置密码的有序列表的功能，握手阶段最终将从中选择会话密码。在握手阶段开始之前，必须有此有序列表。</target>
        </trans-unit>
        <trans-unit id="1a4d2f1369663c1a9b13c9994db3a87242b92f9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; can emit this signal several times during the SSL handshake, before encryption has been established, to indicate that an error has occurred while establishing the identity of the peer. The</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;&lt;/a&gt;在建立加密之前，QSslSocket可以在SSL握手过程中多次发出此信号，以表明在建立对等方的身份时发生了错误。的</target>
        </trans-unit>
        <trans-unit id="ceebcf7931ad8bd1b4e35cfbce07cc4aa9ed083a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() when it enters encrypted mode.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;&lt;/a&gt;进入加密模式时，QSslSocket发出&lt;a href=&quot;qsslsocket#encrypted&quot;&gt;加密&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7c33b1a414c31b92b45b5f1dc6f48fcf99af8281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal after the SSL handshake to indicate that one or more errors have occurred while establishing the identity of the peer. The errors are usually an indication that &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; is unable to securely identify the peer. Unless any action is taken, the connection will be dropped after this signal has been emitted.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;在SSL握手后发出此信号，以指示在建立对等方的标识时发生了一个或多个错误。该错误通常表示&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;无法安全地标识对等方。除非采取任何措施，否则将在发出此信号后断开连接。</target>
        </trans-unit>
        <trans-unit id="29ead56d1459a501f4e7d2558de1cceef2fe42a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal if a certificate verification error was found and if early error reporting was enabled in &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;. An application is expected to inspect the</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;&lt;/a&gt;如果发现证书验证错误并且&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;中启用了早期错误报告，则QSslSocket会发出此信号。预计应用程序将检查</target>
        </trans-unit>
        <trans-unit id="9110781e1c832ab9f1cb323fe1c1a1e59a0549a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal if an alert message was received from a peer.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;&lt;/a&gt;如果从对等方收到警报消息，则QSslSocket会发出此信号。</target>
        </trans-unit>
        <trans-unit id="289ba445d958c36518b573b1f969da4d0f3ea69d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal if an alert message was sent to a peer.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;&lt;/a&gt;如果将警报消息发送到对等方，则QSslSocket会发出此信号。</target>
        </trans-unit>
        <trans-unit id="2e99b7e8a435ac1a7b0eadc1298920e7930bf384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal when it negotiates a PSK ciphersuite, and therefore a PSK authentication is then required.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;在协商PSK密码套件时发出此信号，因此需要PSK身份验证。</target>
        </trans-unit>
        <trans-unit id="9f07daf1496507e2a06e2278650aeedf9b4e38c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; establishes a secure, encrypted TCP connection you can use for transmitting encrypted data. It can operate in both client and server mode, and it supports modern SSL protocols, including SSL 3 and TLS 1.2. By default, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; uses only SSL protocols which are considered to be secure (&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SecureProtocols&lt;/a&gt;), but you can change the SSL protocol by calling &lt;a href=&quot;qsslsocket#setProtocol&quot;&gt;setProtocol&lt;/a&gt;() as long as you do it before the handshake has started.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;建立了安全的加密TCP连接，可用于传输加密的数据。它可以在客户端和服务器模式下运行，并且支持现代SSL协议，包括SSL 3和TLS 1.2。默认情况下，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;仅使用被认为是安全的SSL协议（&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SecureProtocols&lt;/a&gt;），但是只要您在握手开始之前进行操作，就可以通过调用&lt;a href=&quot;qsslsocket#setProtocol&quot;&gt;setProtocol&lt;/a&gt;（）来更改SSL协议。</target>
        </trans-unit>
        <trans-unit id="aeefc6c86793c1c70dc8d5340bfe1aec1d5c214a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; first enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. Then, after entering either the event loop or one of the waitFor...() functions, it enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(), and then initiates the SSL client handshake. At each state change, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits signal &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;首先进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;。然后，在进入事件循环或其中一个waitFor ...（）函数之后，它将进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;，发出&lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;（），然后启动SSL客户端握手。在每次状态更改时，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket都会&lt;/a&gt;发出信号&lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="34841703f83bc4982886dd41702bf08aa13f82b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; provides an extensive, easy-to-use API for handling cryptographic ciphers, private keys, and local, peer, and Certification Authority (CA) certificates. It also provides an API for handling errors that occur during the handshake phase.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;提供了一个广泛的，易于使用的API，用于处理密码，私钥以及本地，对等和证书颁发机构（CA）证书。它还提供了一个API，用于处理握手阶段发生的错误。</target>
        </trans-unit>
        <trans-unit id="8843f76ba699f509b7a6f1655fd962f6a5ff1592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will automatically use QueryPeer for server sockets and VerifyPeer for client sockets.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;将自动使用QueryPeer用于服务器套接字，并将VerifyPeer用于客户端套接字。</target>
        </trans-unit>
        <trans-unit id="ecdd057da2061c33bec517547e5b239472d6470f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will not request a certificate from the peer. You can set this mode if you are not interested in the identity of the other side of the connection. The connection will still be encrypted, and your socket will still send its local certificate to the peer if it's requested.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;不会从对等方请求证书。如果您对连接另一端的身份不感兴趣，可以设置此模式。连接仍将被加密，并且如果请求，您的套接字仍将其本地证书发送给对等方。</target>
        </trans-unit>
        <trans-unit id="d426dd5fbede1c7f144c0eb9d127eae56fd59cef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer during the SSL handshake phase, and requires that this certificate is valid. On failure, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will emit the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket::sslErrors&lt;/a&gt;() signal. This mode is the default for clients.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;将在SSL握手阶段向对等方请求证书，并要求该证书有效。失败时，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;将发出&lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket :: sslErrors&lt;/a&gt;（）信号。客户端默认使用此模式。</target>
        </trans-unit>
        <trans-unit id="77a2aee233f3fc782085a1bde4198e0a6c8151d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer during the SSL handshake phase, and requires that this certificate is valid. On failure, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will emit the QSslSocket::sslErrors() signal. This mode is the default for clients.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;将在SSL握手阶段向对等方请求证书，并要求该证书有效。失败时，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;将发出QSslSocket :: sslErrors（）信号。此模式是客户端的默认模式。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
