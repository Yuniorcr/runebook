<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="0fe6a9bf66537d508aed67400e555507aeb89706" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the XdgShellV6 component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能,请创建一个XdgShellV6组件的实例,并将其添加到合成器支持的扩展列表中。</target>
        </trans-unit>
        <trans-unit id="32a9b543a8a38cc656812a2f6bbe996a8b1e8111" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;().</source>
          <target state="translated">要提供自己的语法突出显示，您必须子类化&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;并重新实现&lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e25b781306cda9c13adebd46c71bf419f457d783" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement highlightBlock(). In your reimplementation you should parse the block's</source>
          <target state="translated">要提供自己的语法突出显示，必须将&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;子类化，然后重新实现HighlightBlock（）。在重新实现中，您应该解析块的</target>
        </trans-unit>
        <trans-unit id="69cc9e712d66a07e6204155bd2706fb9a505be48" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass QSyntaxHighlighter and reimplement &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;().</source>
          <target state="translated">要提供自己的语法突出显示，必须子类化QSyntaxHighlighter并重新实现&lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a9021b7dc49431bf4058aed26133573c3495e50f" translate="yes" xml:space="preserve">
          <source>To query if a given queue family within a physical device can be used to perform presentation to a given surface, call &lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt;(). This encapsulates both the generic &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; and the WSI-specific &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; checks.</source>
          <target state="translated">要查询物理设备中的给定队列系列是否可用于执行给定表面的演示，请调用&lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt;（）。这封装了通用的 &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; 和特定于WSI的 &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="329bfa34839f5178772b6541f8a595a32420bf6f" translate="yes" xml:space="preserve">
          <source>To query the actual format after initialization, call &lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt;().</source>
          <target state="translated">要在初始化后查询实际格式，请调用&lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="014f4a6715690fddf255b7469ab7ed9972d9539d" translate="yes" xml:space="preserve">
          <source>To query the supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;(). When the returned set contains 4, 8, ..., passing one of those values to &lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt;() requests multisample rendering.</source>
          <target state="translated">要查询支持的样本计数，请调用&lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;（）。当返回的集合包含4、8 ...时，将这些值之一传递给&lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt;（）会请求多样本渲染。</target>
        </trans-unit>
        <trans-unit id="565b2ce7b4a2dff48f9755a872062232e8f5edcf" translate="yes" xml:space="preserve">
          <source>To query what graphics API the scene graph is using to render, &lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;QSGRendererInterface::graphicsApi&lt;/a&gt;() after the scene graph &lt;a href=&quot;qquickwindow#isSceneGraphInitialized&quot;&gt;has initialized&lt;/a&gt;, which typically happens either when the window becomes visible for the first time, or when &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;QQuickRenderControl::initialize&lt;/a&gt;() is called.</source>
          <target state="translated">要查询场景图用于渲染的图形API，&lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;请&lt;/a&gt;在场景图&lt;a href=&quot;qquickwindow#isSceneGraphInitialized&quot;&gt;初始化&lt;/a&gt;之后使用QSGRendererInterface :: graphicsApi（），通常在第一次看到窗口或&lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;调用QQuickRenderControl :: initialize&lt;/a&gt;（）时发生。</target>
        </trans-unit>
        <trans-unit id="11fac3b979a31ee87a91f02045e90d5c520d1007" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets that constantly paint over their entire areas with opaque content, e.g., video streaming widgets, it is better to set the widget's &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt;, avoiding any unnecessary overhead associated with repainting the widget's background.</source>
          <target state="translated">为了快速更新不断用不透明内容在其整个区域上绘制的自定义窗口小部件，例如视频流窗口小部件，最好设置窗口小部件的&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_OpaquePaintEvent&lt;/a&gt;，避免与重新绘制窗口小部件的背景有关的任何不必要的开销。</target>
        </trans-unit>
        <trans-unit id="df17cf20977251b7dd92221a49dbac1b87edbd76" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets with simple background colors, such as real-time plotting or graphing widgets, it is better to define a suitable background color (using &lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;() with the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Window&lt;/a&gt; role), set the &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property, and only implement the necessary drawing functionality in the widget's &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;().</source>
          <target state="translated">要使用简单的背景颜色快速更新自定义窗口小部件，例如实时绘图或图形化窗口小部件，最好定义合适的背景颜色（将&lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;（）与&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: Window&lt;/a&gt;角色一起使用），设置&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt;属性，并且仅在小部件的&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）中实现必要的绘图功能。</target>
        </trans-unit>
        <trans-unit id="73713180d489718892546c676db3a1aadd9be178" translate="yes" xml:space="preserve">
          <source>To read a date value returned from a C++ extension class, use &lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate()&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime()&lt;/a&gt;.</source>
          <target state="translated">要读取从C ++扩展类返回的日期值，请使用&lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate（）&lt;/a&gt;和&lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2b0585f5068ae36eedccf3f94663649dcbdc51f" translate="yes" xml:space="preserve">
          <source>To read an image, you start by constructing a &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;'s constructor. You can then set several options, such as the clip rect (by calling &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;()) and scaled size (by calling &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;()). &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;() returns the image if the &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; can read the image (i.e., the image format is supported and the device is open for reading). Call &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() to read the image.</source>
          <target state="translated">要读取图像，请从构造&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;对象开始。将文件名或设备指针以及图像格式传递给&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;的构造函数。然后，您可以设置多个选项，例如片段rect（通过调用&lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;（））和缩放的大小（通过调用&lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;（））。如果&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;可以读取图像（例如，支持图像格式且设备已打开以供读取），则&lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;（）返回图像。调用&lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;（）读取图像。</target>
        </trans-unit>
        <trans-unit id="af79bdd7eea1fb010891e89d2464bca0d0fd1d19" translate="yes" xml:space="preserve">
          <source>To read an image, you start by constructing a QImageReader object. Pass either a file name or a device pointer, and the image format to QImageReader's constructor. You can then set several options, such as the clip rect (by calling &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;()) and scaled size (by calling &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;()). &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;() returns the image if the QImageReader can read the image (i.e., the image format is supported and the device is open for reading). Call &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() to read the image.</source>
          <target state="translated">要读取图像，请从构造QImageReader对象开始。将文件名或设备指针以及图像格式传递给QImageReader的构造函数。然后，您可以设置几个选项，例如片段rect（通过调用&lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;（））和缩放的大小（通过调用&lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;（））。如果QImageReader可以读取图像（例如，支持图像格式且设备已打开以供读取），则&lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;（）返回图像。调用&lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;（）读取图像。</target>
        </trans-unit>
        <trans-unit id="fd206fc3519b5f6fafd1c4a11582f29d0a9f2834" translate="yes" xml:space="preserve">
          <source>To read back an array, use &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;().</source>
          <target state="translated">要读回数组，请使用&lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3b1fd2fc99d1066c9770f0e4b54dda63081a62bf" translate="yes" xml:space="preserve">
          <source>To read input XML data a special class &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; is used.</source>
          <target state="translated">要读取输入XML数据，请使用特殊的类&lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4fa46efe482e401e77b226024272c8b56b1f1c9" translate="yes" xml:space="preserve">
          <source>To read or write files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec()&lt;/a&gt; function. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;Codecs&lt;/a&gt; example for an application of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; to file I/O.</source>
          <target state="translated">要读取或写入各种编码的文件，请使用&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;及其&lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec（）&lt;/a&gt;函数。有关将&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;应用于文件I / O的信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;编解码器&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="04dda6fa448cffc31b5301b9cab186965a5dacad" translate="yes" xml:space="preserve">
          <source>To read or write files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec()&lt;/a&gt; function. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-tools-codecs-example.html&quot;&gt;Codecs&lt;/a&gt; example for an application of QTextCodec to file I/O.</source>
          <target state="translated">要读取或写入各种编码的文件，请使用&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;及其&lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec（）&lt;/a&gt;函数。有关将QTextCodec应用于文件I / O的信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-tools-codecs-example.html&quot;&gt;编解码器&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="459a732a89d08a446ef9662ece5ec350d3d282f0" translate="yes" xml:space="preserve">
          <source>To read or write text files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setEncoding&quot;&gt;setEncoding()&lt;/a&gt; function.</source>
          <target state="translated">要读取或写入各种编码的文本文件，请使用&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;及其&lt;a href=&quot;qtextstream#setEncoding&quot;&gt;setEncoding（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="2d2ef3897c0f90b19494eedab7161a906b3b77ae" translate="yes" xml:space="preserve">
          <source>To receive a notification when a particular signal is emitted for a particular object, the object definition should declare a signal handler named</source>
          <target state="translated">为了在特定对象发出特定信号时接收通知,对象定义应该声明一个名为</target>
        </trans-unit>
        <trans-unit id="a2023f3fe6b383a1163fbb8bcd9e901163e64c50" translate="yes" xml:space="preserve">
          <source>To receive a notification when a state machine sends out an event, a connection can be created to the corresponding signal.</source>
          <target state="translated">要想在状态机发出事件时收到通知,可以建立一个与相应信号的连接。</target>
        </trans-unit>
        <trans-unit id="cbbba7758a3a5edf0093bcbfb9ea4821c3d38ebd" translate="yes" xml:space="preserve">
          <source>To receive data from a source, connect to its &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated()&lt;/a&gt; signal, then call either &lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates()&lt;/a&gt; or &lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate()&lt;/a&gt; to begin.</source>
          <target state="translated">要从源接收数据，请连接到其&lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated（）&lt;/a&gt;信号，然后调用&lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates（）&lt;/a&gt;或&lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate（）&lt;/a&gt;开始。</target>
        </trans-unit>
        <trans-unit id="02510da006a9932e8e43a24330998cf2b72274e3" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="eab91045a4ab2be32bcd180cc12d795ccdaaf3a4" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="1cb868f2e4d67421fc11ed01c75b86ef5a028433" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with QQuickView, you can connect to the &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用QQuickView加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="0622b4b41b0942c98d91700cfcbe454a566c373b" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with QQuickWidget, you can connect to the &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用QQuickWidget加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="a74d05b35ef0bdbab729493f205103770d0a89e4" translate="yes" xml:space="preserve">
          <source>To record to a file:</source>
          <target state="translated">要记录到文件中。</target>
        </trans-unit>
        <trans-unit id="6413e6020938a8fbd25187715d3a6b45449b8398" translate="yes" xml:space="preserve">
          <source>To refer to a specific object, provide an &lt;code&gt;id&lt;/code&gt;. For example:</source>
          <target state="translated">要引用特定对象，请提供一个 &lt;code&gt;id&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="508c3a1c79fc39cbbfcc2bab71fc89c8a732577a" translate="yes" xml:space="preserve">
          <source>To register &lt;code&gt;CppType&lt;/code&gt; version 1 for &lt;code&gt;MyTypes 1.1&lt;/code&gt;:</source>
          <target state="translated">要为 &lt;code&gt;MyTypes 1.1&lt;/code&gt; 注册 &lt;code&gt;CppType&lt;/code&gt; 版本1 ：</target>
        </trans-unit>
        <trans-unit id="72bbb0c09a08927dc0b6e3c7ad4ab7f4c3a036ba" translate="yes" xml:space="preserve">
          <source>To register a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class as an instantiable QML object type, add &lt;code&gt;QML_ELEMENT&lt;/code&gt; or &lt;code&gt;QML_NAMED_ELEMENT(&amp;lt;name&amp;gt;)&lt;/code&gt; to the class declaration and &lt;code&gt;CONFIG += qmltypes&lt;/code&gt;, a &lt;code&gt;QML_IMPORT_NAME&lt;/code&gt;, and a &lt;code&gt;QML_IMPORT_MAJOR_VERSION&lt;/code&gt; to your project file. This will register the class into the type namespace under the given major version, using either the class name or an explicitly given name as QML type name. The minor version(s) will be derived from any revisions attached to properties, methods, or signals. The default minor version is &lt;code&gt;0&lt;/code&gt;. You can explicitly restrict the type to be available only from specific minor versions by adding the &lt;code&gt;QML_ADDED_IN_MINOR_VERSION()&lt;/code&gt; macro to the class declaration. Clients can import suitable versions of the namespace in order to use the type.</source>
          <target state="translated">要将&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;派生的类注册为可实例化的QML对象类型，请将 &lt;code&gt;QML_ELEMENT&lt;/code&gt; 或 &lt;code&gt;QML_NAMED_ELEMENT(&amp;lt;name&amp;gt;)&lt;/code&gt; 添加到类声明中，并将 &lt;code&gt;CONFIG += qmltypes&lt;/code&gt; ， &lt;code&gt;QML_IMPORT_NAME&lt;/code&gt; 和 &lt;code&gt;QML_IMPORT_MAJOR_VERSION&lt;/code&gt; 添加到您的项目文件中。这将使用类名或显式给定的名称作为QML类型名将类注册到给定主要版本下的类型名称空间中。次要版本将来自属性，方法或信号所附的任何修订版。默认的次要版本是 &lt;code&gt;0&lt;/code&gt; 。您可以通过添加以下内容，明确限制该类型仅在特定的次要版本中可用： &lt;code&gt;QML_ADDED_IN_MINOR_VERSION()&lt;/code&gt; 宏到类声明。客户端可以导入合适的名称空间版本以使用该类型。</target>
        </trans-unit>
        <trans-unit id="f0122e3e0b3fe7dd92827130daf9d252b87b3421" translate="yes" xml:space="preserve">
          <source>To register a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class as an instantiable QML object type, call &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() to register the class as QML type into a particular type namespace. Clients can then import that namespace in order to use the type.</source>
          <target state="translated">要将&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;派生的类注册为可实例化的QML对象类型，请调用&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）将类作为QML类型注册到特定的类型名称空间中。然后，客户端可以导入该名称空间以使用该类型。</target>
        </trans-unit>
        <trans-unit id="19fcc109b32eaf67d45cd0c02c3e3ed102bcab7f" translate="yes" xml:space="preserve">
          <source>To register a field, call &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;() field. For example:</source>
          <target state="translated">要注册一个字段，请调用&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）字段。例如：</target>
        </trans-unit>
        <trans-unit id="aa3c5090caf0a77c609f7edcf5b3f2d3f4293ce7" translate="yes" xml:space="preserve">
          <source>To register a new product, click the &lt;b&gt;Create New&lt;/b&gt; button in the top left corner of the page. The first choice you will be given is the type of in-app purchase you would like to create. The Qt Purchasing API currently only supports Consumable and Non-Consumable types so limit your selection to these. See &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; for an explanation about the different product types.</source>
          <target state="translated">要注册新产品，请单击页面左上角的&amp;ldquo; &lt;b&gt;新建&amp;rdquo;&lt;/b&gt;按钮。您将获得的第一选择是您要创建的应用内购买类型。Qt采购API当前仅支持消耗型和非消耗型，因此您只能选择这些类型。有关不同产品类型的说明，请参见&lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a50d21ffe69190248ab71c6463ee3c5ce60c0080" translate="yes" xml:space="preserve">
          <source>To register a type, it must be declared as a meta-type with the &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() macro, and then registered as in the following example:</source>
          <target state="translated">要注册类型，必须使用&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）宏将其声明为元类型，然后按照以下示例进行注册：</target>
        </trans-unit>
        <trans-unit id="06a49d11418d0fb6f855f664d658af0277efd867" translate="yes" xml:space="preserve">
          <source>To register the new class revision to a particular version the following function is used:</source>
          <target state="translated">要将新的类修订版注册到一个特定的版本,需要使用以下函数。</target>
        </trans-unit>
        <trans-unit id="ac48727e1088aa1108892814a7ecaaacd614ae8a" translate="yes" xml:space="preserve">
          <source>To remove a category ensure that the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt; properties are set and call the &lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove()&lt;/a&gt; method.</source>
          <target state="translated">要删除类别，请确保已设置&lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt;属性，然后调用&lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a6ba48e108bd16a0eac9728fdfab72dcfae0e0ed" translate="yes" xml:space="preserve">
          <source>To remove a database connection, first close the database using &lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase::close&lt;/a&gt;(), then remove it using the static method &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase::removeDatabase&lt;/a&gt;().</source>
          <target state="translated">要删除数据库连接，请首先使用&lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase :: close&lt;/a&gt;（）关闭数据库，然后使用静态方法&lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase :: removeDatabase&lt;/a&gt;（）删除数据库。</target>
        </trans-unit>
        <trans-unit id="2822de9b415cc410688346330e63c846fb52ecc2" translate="yes" xml:space="preserve">
          <source>To remove a place, ensure that a Place object with a valid &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property exists and call its &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove()&lt;/a&gt; method. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will change to Place.Removing and then to Place.Ready if the save was successful or to Place.Error if an error occurs.</source>
          <target state="translated">要删除位置，请确保存在具有有效&lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt;属性的Place对象，然后调用其&lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove（）&lt;/a&gt;方法。该&lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;状态&lt;/a&gt;属性将变为Place.Removing再到Place.Ready如果保存成功或Place.Error如果发生错误。</target>
        </trans-unit>
        <trans-unit id="92edbb266e1add1b9fca2fa727319d1179753056" translate="yes" xml:space="preserve">
          <source>To remove a temporary message, use the &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;() slot, or set a time limit when calling &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;(). For example:</source>
          <target state="translated">要删除临时消息，请使用&lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;（）插槽，或在调用&lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;（）时设置时间限制。例如：</target>
        </trans-unit>
        <trans-unit id="15fa7c332988cb7a2319f204616bbf8cc7707210" translate="yes" xml:space="preserve">
          <source>To remove a widget from a layout, call &lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt;(). Calling &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget::hide&lt;/a&gt;() on a widget also effectively removes the widget from the layout until &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() is called.</source>
          <target state="translated">要从布局中删除小部件，请调用&lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt;（）。在小部件上调用&lt;a href=&quot;qwidget#hide&quot;&gt;QWidget :: hide&lt;/a&gt;（）还可以有效地从布局中删除该小部件，直到调用&lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt;（）为止。</target>
        </trans-unit>
        <trans-unit id="fa15a90fdc4f766410d16201fd608cdef4bdb3dd" translate="yes" xml:space="preserve">
          <source>To remove an item (row) from the list entirely, either delete the item or use &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;().</source>
          <target state="translated">要从列表中完全删除一个项目（行），请删除该项目或使用&lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="837bbf98eb769a1a2a26382645937a23f7c25711" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">要删除以前设置的更新间隔，请调用值为0的&lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ef0cb5458bba8024e553144d0a60d2c35ed2b623" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">要删除以前设置的更新间隔，请调用值为0的&lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="affd1f635705924fa2f6375f5c2939170d9b83da" translate="yes" xml:space="preserve">
          <source>To remove constraints, set the size to &lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX&lt;/a&gt;.</source>
          <target state="translated">要删除约束，请将大小设置为&lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c3f90f91f48eeff28a80626cf3604ede8ec0e01" translate="yes" xml:space="preserve">
          <source>To remove the default connection, which may have been created with a call to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;() not specifying a connection name, you can retrieve the default connection name by calling &lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt;() on the database returned by &lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;(). Note that if a default database hasn't been created an invalid database will be returned.</source>
          <target state="translated">要删除默认连接（可能是通过调用&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;（）来创建的，但未指定连接名称），则可以通过在&lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;（）返回的数据库上调用&lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt;（）来检索默认连接名称。请注意，如果尚未创建默认数据库，则将返回无效数据库。</target>
        </trans-unit>
        <trans-unit id="8a47ae9cd8aed8f07ba5786f138d84ae5ac1deda" translate="yes" xml:space="preserve">
          <source>To rename a page in a toolbox, make the toolbox your current pange and change its &lt;code&gt;currentItemText&lt;/code&gt; property from the &lt;b&gt;Property Editor&lt;/b&gt;.</source>
          <target state="translated">要重命名工具箱中的页面，请将工具箱设置为当前窗格，然后从&amp;ldquo; &lt;b&gt;属性编辑器&amp;rdquo;中&lt;/b&gt;更改其 &lt;code&gt;currentItemText&lt;/code&gt; 属性。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dbeba5e767f18e9b46ce3c7d2617733b7fff8d30" translate="yes" xml:space="preserve">
          <source>To render an item in a custom way, you must implement &lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;() and &lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(). The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class provides default implementations for these functions; if you do not need custom rendering, subclass that class instead.</source>
          <target state="translated">要以自定义方式渲染项目，必须实现&lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;（）和&lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）。所述&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;类提供了这些功能的默认的实现; 如果不需要自定义呈现，请改为该类的子类。</target>
        </trans-unit>
        <trans-unit id="2a9d1b36aa1cae0d6a0d8473d26d40898454494c" translate="yes" xml:space="preserve">
          <source>To render into the FBO, the user should subclass the Renderer class and reimplement its &lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer::render&lt;/a&gt;() function. The Renderer subclass is returned from &lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt;().</source>
          <target state="translated">要渲染到FBO中，用户应将Renderer类子类化，并重新实现其&lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer :: render&lt;/a&gt;（）函数。Renderer子类从&lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="86e94297cce091110d19c0725926d4c8e7f56a1d" translate="yes" xml:space="preserve">
          <source>To replace the current selection with a new selection, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Current&lt;/a&gt; flag. A command using this flag instructs the selection model to replace its current collection of model indexes with those specified in a call to &lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select()&lt;/a&gt;. To clear all selections before you start adding new ones, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Clear&lt;/a&gt; flag. This has the effect of resetting the selection model's collection of model indexes.</source>
          <target state="translated">要将当前选择替换为新选择，请将其他选择标志与&lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;当前&lt;/a&gt;标志组合。使用此标志的命令指示选择模型将其当前模型索引集合替换为对&lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select（）&lt;/a&gt;的调用中指定的模型索引集合。要在开始添加新选择之前清除所有选择，请将其他选择标记与&amp;ldquo; &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;清除&amp;rdquo;&lt;/a&gt;标记结合使用。这具有重置选择模型的模型索引集合的作用。</target>
        </trans-unit>
        <trans-unit id="4a749a4f31090e7dbc16ae253d1eaa04cd7283ec" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="translated">要将其替换为真实数据，请使用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）将真实数据对象绑定到C ++中的根上下文。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;集成QML和C ++中&lt;/a&gt;对此进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="7a7c5025b2435b9ec8f7a24e68aafc22b114917c" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="translated">要将其替换为真实数据，请使用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）将真实数据对象绑定到C ++中的根上下文。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-topic.html&quot;&gt;集成QML和C ++中&lt;/a&gt;对此进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="14f99e9b9a28192767a8c1d7ae021c0147d5008f" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="translated">要将其替换为真实数据，请使用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）将真实数据对象绑定到C ++中的根上下文。&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-topic.html&quot;&gt;集成QML和C ++中&lt;/a&gt;对此进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="594a9ea7e7f4a4a294e83aafd44c2a922b50a7b8" translate="yes" xml:space="preserve">
          <source>To request a specific configuration for the context, use &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;() like for any other &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;. This allows, among others, requesting a given OpenGL version and profile, or enabling depth and stencil buffers.</source>
          <target state="translated">要请求上下文的特定配置，请像其他任何&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;一样使用&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）。除其他外，这允许请求给定的OpenGL版本和配置文件，或启用深度和模板缓冲区。</target>
        </trans-unit>
        <trans-unit id="a0578ff5d14b41149be5152760e184c40c9ee443" translate="yes" xml:space="preserve">
          <source>To request using Vulkan or OpenGL, both of which require a Vulkan or OpenGL driver to be installed, set the environment variable &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; to &lt;code&gt;vulkan&lt;/code&gt; or &lt;code&gt;opengl&lt;/code&gt;, or use the equivalent &lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;C++ API&lt;/a&gt; in &lt;code&gt;main()&lt;/code&gt;.</source>
          <target state="translated">要请求使用都需要安装Vulkan或OpenGL驱动程序的Vulkan或OpenGL，请将环境变量 &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; 设置为 &lt;code&gt;vulkan&lt;/code&gt; 或 &lt;code&gt;opengl&lt;/code&gt; ，或在 &lt;code&gt;main()&lt;/code&gt; 中使用等效的&lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;C ++ API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c324bc2d7754687deaa6daf1bedf5481a68c0f52" translate="yes" xml:space="preserve">
          <source>To reset an anchor you can assign &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">要重置锚点，您可以分配 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e433303c99c0b096d2c938a107c0ff70a3cfd2ea" translate="yes" xml:space="preserve">
          <source>To reset this property back to the default value, set its value to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要将此属性重置为默认值，请将其值设置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ccc12302b08c6000e0e262d64ce361031e0ab04" translate="yes" xml:space="preserve">
          <source>To resolve such a URL, it's necessary to remove the scheme beforehand:</source>
          <target state="translated">要想解析这样的URL,就必须事先删除该方案。</target>
        </trans-unit>
        <trans-unit id="d75ef3ec1110d073e8dd85d376695718f5646afd" translate="yes" xml:space="preserve">
          <source>To respond to clicks on the &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; itself, use its &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">要响应&lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt;本身的&lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;单击&lt;/a&gt;，请使用其clicked（）信号。</target>
        </trans-unit>
        <trans-unit id="64d58c3d7d37b3c8f977577463f6949cfee15e4d" translate="yes" xml:space="preserve">
          <source>To restore geometry saved using &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, you can use code like this:</source>
          <target state="translated">要恢复使用&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;保存的几何，可以使用如下代码：</target>
        </trans-unit>
        <trans-unit id="5b80ec36ed4a98d0d43de3fcae10ebba1e3b37ac" translate="yes" xml:space="preserve">
          <source>To restore the default network configuration set the network configuration to the value returned from &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;().</source>
          <target state="translated">要恢复默认的网络配置，请将网络配置设置为&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration&lt;/a&gt;（）返回的值。</target>
        </trans-unit>
        <trans-unit id="80b95619de770057cc4fddc28765d88e8523aee4" translate="yes" xml:space="preserve">
          <source>To restore the message handler, call &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt;.</source>
          <target state="translated">要恢复消息处理程序，请调用 &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17974335d1d2d2ac666686d65e67c80e2461b06d" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value and</source>
          <target state="translated">要恢复保存的状态,通过返回值和</target>
        </trans-unit>
        <trans-unit id="6f5797e3fc705f2f1c8ba903b8335ddcade92718" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value to &lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt;().</source>
          <target state="translated">要恢复保存的状态，请将返回值传递给&lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="03f140f0708c3476da51d90c225039df55ebf8ab" translate="yes" xml:space="preserve">
          <source>To retrieve a single candidate string, call &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt;() with the text that needs to be completed and call &lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;(). You can iterate through the list of completions as below:</source>
          <target state="translated">要检索单个候选字符串，请调用&lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt;（）和需要完成的文本，然后调用&lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;（）。您可以迭代完成列表，如下所示：</target>
        </trans-unit>
        <trans-unit id="f31ceceb5c5591e3e937b7dcb86a978a24b91af4" translate="yes" xml:space="preserve">
          <source>To retrieve results asynchronously, connect to the &lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt;() signal. To get a list of all discovered devices, call &lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;discoveredDevices&lt;/a&gt;() after the &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;finished&lt;/a&gt;() signal.</source>
          <target state="translated">要异步检索结果，请连接到&lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt;（）信号。要获取所有已发现设备的列表，请在&lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;finish&lt;/a&gt;（）信号之后调用&lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;foundDevices&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7b632de8df6719a26e27cb47b343bf0a4bec9471" translate="yes" xml:space="preserve">
          <source>To retrieve the instance, you can use &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;:</source>
          <target state="translated">要检索实例，可以使用&lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e5dc91419bdf35c045e6e9f54df9be47ab53a4e2" translate="yes" xml:space="preserve">
          <source>To retrieve the name of the local host, use the static &lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo::localHostName&lt;/a&gt;() function.</source>
          <target state="translated">要检索本地主机的名称，请使用静态&lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo :: localHostName&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="98a69fdd54276a2643fbcfb8300e0a3fd69b77ac" translate="yes" xml:space="preserve">
          <source>To retrieve the permissons for a directory, use the &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt;() function to get the associated &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; objects and then use the QFileInfo::permissons() to obtain the permissions and ownership for each file.</source>
          <target state="translated">要检索目录的&lt;a href=&quot;qdir#entryInfoList&quot;&gt;权限&lt;/a&gt;，请使用entryInfoList（）函数获取关联的&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;对象，然后使用QFileInfo :: permissons（）获取每个文件的权限和所有权。</target>
        </trans-unit>
        <trans-unit id="8d740df668787dabeea4c9050f73d7b4ecae1287" translate="yes" xml:space="preserve">
          <source>To retrieve the top level categories we use the &lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager::childCategories&lt;/a&gt;() function but do not provide a category identifier.</source>
          <target state="translated">要检索顶级类别，我们使用&lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager :: childCategories&lt;/a&gt;（）函数，但不提供类别标识符。</target>
        </trans-unit>
        <trans-unit id="301c8599ed4e2148ec01a3f9309c4f8580e00ea0" translate="yes" xml:space="preserve">
          <source>To retrieve values from a query, &lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;() should be used since its index-based lookup is faster.</source>
          <target state="translated">要从查询中检索值，应使用&lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;（），因为其基于索引的查找速度更快。</target>
        </trans-unit>
        <trans-unit id="f114d02c380f770276d07316fe3958c457eeff0c" translate="yes" xml:space="preserve">
          <source>To return from full-screen mode, call &lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;().</source>
          <target state="translated">要从全屏模式返回，请调用&lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e9d2d426738b2ef826206cd5312ecf0c270e8702" translate="yes" xml:space="preserve">
          <source>To rotate the graph, hold down the right mouse button and move the mouse. Zooming is done using mouse wheel. Both assume the default input handler is in use.</source>
          <target state="translated">要旋转图形,按住鼠标右键并移动鼠标。缩放是通过鼠标滚轮完成的。两者都假定使用了默认的输入处理程序。</target>
        </trans-unit>
        <trans-unit id="faf053fda86937f709dbd23e090450b828e1ae11" translate="yes" xml:space="preserve">
          <source>To run QDoc in single execution mode, add &lt;code&gt;-single-exec&lt;/code&gt; to the command line and pass QDoc a master &lt;code&gt;qdocconf&lt;/code&gt; file that is simply a list of file paths for qdocconf files of all the Qt5 modules. For example:</source>
          <target state="translated">要在单执行模式下运行QDoc，请在命令行中添加 &lt;code&gt;-single-exec&lt;/code&gt; 并将QDoc传递给主 &lt;code&gt;qdocconf&lt;/code&gt; 文件，该文件只是所有Qt5模块的qdoc​​conf文件的文件路径的列表。例如：</target>
        </trans-unit>
        <trans-unit id="f4b2d3fc93465d369458eb006c495cace372090d" translate="yes" xml:space="preserve">
          <source>To run QDoc, the project configuration file is supplied as an argument.</source>
          <target state="translated">要运行QDoc,需要提供项目配置文件作为参数。</target>
        </trans-unit>
        <trans-unit id="13c427a83b2fdd6ff329d10b2d5f1ceb6ede8c6b" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use &lt;a href=&quot;concurrent-changes-qt6#qtconcurrent-run&quot;&gt;QtConcurrent::run&lt;/a&gt;():</source>
          <target state="translated">要在另一个线程中运行一个函数，请使用&lt;a href=&quot;concurrent-changes-qt6#qtconcurrent-run&quot;&gt;QtConcurrent :: run&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="050e671c76b6d3f03bd57e5f6e7a6508d0aefa80" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use &lt;a href=&quot;qtconcurrent-qtaskbuilder#spawn&quot;&gt;QtConcurrent::QTaskBuilder::spawn&lt;/a&gt;:</source>
          <target state="translated">要在另一个线程中运行一个函数，请使用&lt;a href=&quot;qtconcurrent-qtaskbuilder#spawn&quot;&gt;QtConcurrent :: QTaskBuilder :: spawn&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="76f39f8063cc48f6eafc2328867bad942a20aacc" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use QtConcurrent::run():</source>
          <target state="translated">要在另一个线程中运行一个函数,使用QtConcurrent::run()。</target>
        </trans-unit>
        <trans-unit id="c17fa1519956cbfd9a6a69ceee1349ccad4ddbd4" translate="yes" xml:space="preserve">
          <source>To run a query set up with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, call one of the evaluation functions.</source>
          <target state="translated">要运行使用&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;设置的查询，请调用评估功能之一。</target>
        </trans-unit>
        <trans-unit id="39e7ff29947a1add0b0622eb460529d487abc701" translate="yes" xml:space="preserve">
          <source>To run a query set up with QXmlQuery, call one of the evaluation functions.</source>
          <target state="translated">要运行一个用QXmlQuery设置的查询,调用其中一个评估函数。</target>
        </trans-unit>
        <trans-unit id="d100097e87bc294e856d23038617a87a135b4df2" translate="yes" xml:space="preserve">
          <source>To run a service at boot time, you need a &lt;a href=&quot;https://developer.android.com/reference/android/content/BroadcastReceiver&quot;&gt;BroadcastReceiver&lt;/a&gt;.</source>
          <target state="translated">要在引导时运行服务，您需要一个&lt;a href=&quot;https://developer.android.com/reference/android/content/BroadcastReceiver&quot;&gt;BroadcastReceiver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e13daaf2bce4ef9814bfbc7cabb087f4ccf722a" translate="yes" xml:space="preserve">
          <source>To run a service in a dedicated process, declare the service header as follows:</source>
          <target state="translated">要在专用进程中运行服务,请声明服务头如下。</target>
        </trans-unit>
        <trans-unit id="7911e91188982f065831314f6efae7e9647c5551" translate="yes" xml:space="preserve">
          <source>To run a service in the same process as QtActivity, declare the service header as follows:</source>
          <target state="translated">要在与QtActivity相同的进程中运行一个服务,声明服务头如下。</target>
        </trans-unit>
        <trans-unit id="6b1345b9fc13c06b046aab0ee6ed652cb8ebf18d" translate="yes" xml:space="preserve">
          <source>To run an application with the Fusion style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="translated">要运行具有Fusion样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;《在Qt Quick Controls中使用样式》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26c07f96a13eec13286a78e391273783fe5668c7" translate="yes" xml:space="preserve">
          <source>To run an application with the Fusion style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有Fusion样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1782bea0781b174b12320f04ea03982b969ecaaf" translate="yes" xml:space="preserve">
          <source>To run an application with the Imagine style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="translated">要运行具有Imagine样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;《在Qt Quick Controls中使用样式》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2eaf063a44e37cddb38cdb6aef7f9b4539314127" translate="yes" xml:space="preserve">
          <source>To run an application with the Imagine style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有Imagine样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a811d99cc7e40deb112c8a740b7d60d6733bfd45" translate="yes" xml:space="preserve">
          <source>To run an application with the Material style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="translated">要运行具有Material样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;《在Qt Quick Controls中使用样式》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa686bc109ea11b8d0a8ca092a586b5859780e2d" translate="yes" xml:space="preserve">
          <source>To run an application with the Material style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要使用Material样式运行应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ddde64bc77b1488d392dfbe1f0e1db65b410c2b" translate="yes" xml:space="preserve">
          <source>To run an application with the Universal style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="translated">要运行具有通用样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;《在Qt快速控件中使用样式》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2621857427f32875d53773918b0c6256a7157317" translate="yes" xml:space="preserve">
          <source>To run an application with the Universal style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有通用样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa84d73af734a236eb2c1d65cbcb2955c762e5f2" translate="yes" xml:space="preserve">
          <source>To run code in one of a &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s threads, reimplement &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() and instantiate the subclassed &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;. Use &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;() to put the &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; in the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s run queue. When a thread becomes available, the code within &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() will execute in that thread.</source>
          <target state="translated">要在&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;的线程之一中运行代码，请重新实现&lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt;（）并实例&lt;a href=&quot;qrunnable&quot;&gt;化子&lt;/a&gt;类QRunnable。使用&lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: start&lt;/a&gt;（）将&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;放入&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;的运行队列中。当线程可用时，&lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt;（）中的代码将在该线程中执行。</target>
        </trans-unit>
        <trans-unit id="8010ec276c059111b8a503e306b3de8fe9e85674" translate="yes" xml:space="preserve">
          <source>To run qdoc, the project configuration file is supplied as an argument.</source>
          <target state="translated">要运行qdoc,需要提供项目配置文件作为参数。</target>
        </trans-unit>
        <trans-unit id="fd08642f6fde01ff07c97539dc977653ee85462b" translate="yes" xml:space="preserve">
          <source>To run the Android emulator, the following dependencies are also necessary:</source>
          <target state="translated">要运行Android模拟器,还需要以下依赖关系。</target>
        </trans-unit>
        <trans-unit id="81a18d49c7209db6d41a9da7f0b66f3110568d29" translate="yes" xml:space="preserve">
          <source>To run the emulator, the following dependencies are also necessary:</source>
          <target state="translated">要运行仿真器,还需要以下的依赖关系。</target>
        </trans-unit>
        <trans-unit id="feba6d02fec904ca1f39bde7ed78b0b473b31b68" translate="yes" xml:space="preserve">
          <source>To run the installer, you need a Qt Account. You can use your Qt Account credentials to sign-in to all Qt services, including the forums and wiki. If you do not already have a Qt Account, you can create one during the installation process.</source>
          <target state="translated">要运行安装程序,你需要一个Qt账户。你可以使用你的Qt账户凭证来登录所有的Qt服务,包括论坛和wiki。如果你还没有Qt账户,你可以在安装过程中创建一个。</target>
        </trans-unit>
        <trans-unit id="a8fc222c6977e8c4b622da8c6e1179b9f92b5908" translate="yes" xml:space="preserve">
          <source>To save a form as an image, choose the &lt;b&gt;Save Image...&lt;/b&gt; option. The file will be saved in &lt;code&gt;.png&lt;/code&gt; format.</source>
          <target state="translated">要将表单另存为图像，请选择&amp;ldquo; &lt;b&gt;保存图像...&amp;rdquo;&lt;/b&gt;选项。该文件将以 &lt;code&gt;.png&lt;/code&gt; 格式保存。</target>
        </trans-unit>
        <trans-unit id="adf5710f3147d770530b0e8a94c68b95a6d1f2a7" translate="yes" xml:space="preserve">
          <source>To save the geometry when the window closes, you can implement a close event like this:</source>
          <target state="translated">为了在窗口关闭时保存几何体,你可以实现这样的关闭事件。</target>
        </trans-unit>
        <trans-unit id="657fcc107faeb4dc2548a4b026b5645c58172172" translate="yes" xml:space="preserve">
          <source>To save writing many nested scopes, you can nest scopes using the &lt;code&gt;:&lt;/code&gt; operator. The nested scopes in the above example can be rewritten in the following way:</source>
          <target state="translated">为了节省编写许多嵌套范围的工作，可以使用 &lt;code&gt;:&lt;/code&gt; 运算符来嵌套范围。上面示例中的嵌套作用域可以通过以下方式重写：</target>
        </trans-unit>
        <trans-unit id="740b79019e52ead788ce7271a3007ab284569676" translate="yes" xml:space="preserve">
          <source>To schedule a repaint, call the &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() function. Note that this will not immediately result in a call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(). Calling &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() multiple times in a row will not change the behavior in any way.</source>
          <target state="translated">要计划重绘，请调用&lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;（）函数。请注意，这不会立即导致对&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）的调用。连续多次调用&lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;（）不会以任何方式更改行为。</target>
        </trans-unit>
        <trans-unit id="4112effc0505763565e689e43abce6a12702903b" translate="yes" xml:space="preserve">
          <source>To see examples on how to implement actions and methods, you could examine the implementations for Qt's standard widgets such as QAccessiblePushButton.</source>
          <target state="translated">要查看如何实现动作和方法的例子,你可以检查Qt标准部件的实现,如QAccessiblePushButton。</target>
        </trans-unit>
        <trans-unit id="ea954213c0b59ba32179e738434af803430a08b7" translate="yes" xml:space="preserve">
          <source>To see if your favorite Qt class has similar stream operators defined, check the &lt;b&gt;Related Non-Members&lt;/b&gt; section of the class's documentation page.</source>
          <target state="translated">若要查看您喜欢的Qt类是否定义了类似的流运算符，请查看该类的文档页面的&amp;ldquo; &lt;b&gt;相关非成员&amp;rdquo;&lt;/b&gt;部分。</target>
        </trans-unit>
        <trans-unit id="a2d5f269d290a4fc1784f9011adeed78a671f7a5" translate="yes" xml:space="preserve">
          <source>To see the configuration options, run &lt;code&gt;qmlscene&lt;/code&gt; with the &lt;code&gt;-help&lt;/code&gt; argument.</source>
          <target state="translated">要查看配置选项， &lt;code&gt;qmlscene&lt;/code&gt; 使用 &lt;code&gt;-help&lt;/code&gt; 参数运行qmlscene。</target>
        </trans-unit>
        <trans-unit id="387c460aab59a4761085ef8da897247d5ca40a43" translate="yes" xml:space="preserve">
          <source>To see the order in which events are received when using forwardTo, see &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;Key Handling Priorities&lt;/a&gt;.</source>
          <target state="translated">要查看使用forwardTo时接收事件的顺序，请参阅&amp;ldquo; &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;密钥处理优先级&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ada1b74eb9c990f8387bf96cd3bb81be4593870" translate="yes" xml:space="preserve">
          <source>To select (mark) text hold down the Shift key whilst pressing one of the movement keystrokes, for example,</source>
          <target state="translated">要选择(标记)文本,按住Shift键,同时按其中一个移动键,例如。</target>
        </trans-unit>
        <trans-unit id="83a3f7e991c5ff32e37902eff353c5567714c0a0" translate="yes" xml:space="preserve">
          <source>To select a new language, use the &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt; property.</source>
          <target state="translated">若要选择一种新语言，请使用&lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="01f6b6be77da816361a14a66a2d3e9b1a30b5f39" translate="yes" xml:space="preserve">
          <source>To select additional objects, hold down the &lt;b&gt;Control&lt;/b&gt; key and click on them. If more than one object is selected, the current object will be displayed with resize handles of a different color.</source>
          <target state="translated">要选择其他对象，请按住&lt;b&gt;Control&lt;/b&gt;键并单击它们。如果选择了多个对象，则将使用不同颜色的调整大小手柄显示当前对象。</target>
        </trans-unit>
        <trans-unit id="7e00290ff9716d93bbc6824cab2592ce802d10bf" translate="yes" xml:space="preserve">
          <source>To select all items in a model, it is necessary to create a selection for each level of the model that covers all items in that level. We do this by retrieving the indexes corresponding to the top-left and bottom-right items with a given parent index:</source>
          <target state="translated">要选择一个模型中的所有项目,必须为模型的每一级创建一个覆盖该级所有项目的选择。我们通过检索给定父索引的左上角和右下角项目对应的索引来实现这一目的。</target>
        </trans-unit>
        <trans-unit id="ab55f11c0c605de56bf8d152ca1e768df5f6b837" translate="yes" xml:space="preserve">
          <source>To select these items in the model, and see the corresponding change in the table view, we need to construct a selection object then apply it to the selection model:</source>
          <target state="translated">为了在模型中选择这些项目,并在表视图中看到相应的变化,我们需要构造一个选择对象,然后应用到选择模型中。</target>
        </trans-unit>
        <trans-unit id="eef51061a6ed9bb97de593d90b78f46a795a0d72" translate="yes" xml:space="preserve">
          <source>To send events, for example mouse or keyboard events, to the scene, use &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication::sendEvent&lt;/a&gt;() with the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance as the receiver.</source>
          <target state="translated">要将事件（例如鼠标或键盘事件）发送到场景，请使用&lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication :: sendEvent&lt;/a&gt;（）（以&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;实例为接收器）。</target>
        </trans-unit>
        <trans-unit id="fa9cf6864de2d8bdae98579d3f163308a991736b" translate="yes" xml:space="preserve">
          <source>To set &quot;What's This?&quot; help on a menu item (with or without a shortcut key), set the help on the item's action.</source>
          <target state="translated">要在菜单项上设置 &quot;这是什么?&quot;帮助(无论是否有快捷键),请在项的操作上设置帮助。</target>
        </trans-unit>
        <trans-unit id="f7d136789ae52fb9598afb09acf7a2bd8827d4fe" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">要将&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;值设置为着色器中的4x4矩阵，请使用 &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c48c8a40e8eecd6a32b4700c2856d0171f5e191" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">要将&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;值设置为着色器中的4x4矩阵，请使用 &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f40d31fed3e23edc15483954b98d9007af6b89" translate="yes" xml:space="preserve">
          <source>To set a continuous byte stream mode, instantiate &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; and call &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;() with a negative value. This gives the ability to use &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; as a regular buffered &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can call &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() to initiate connection with endpoint, &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to transmit and &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() to receive data from the peer, but you cannot distinguish message boundaries.</source>
          <target state="translated">要设置连续字节流模式，请实例化&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;并使用负值调用&lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;（）。这样就可以将&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;用作常规的缓冲&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;。您可以调用&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）来发起与端点的连接，可以&lt;a href=&quot;qiodevice#write&quot;&gt;写&lt;/a&gt;（）进行传输，而&lt;a href=&quot;qiodevice#read&quot;&gt;读&lt;/a&gt;（）来从对等方接收数据，但是您无法区分消息边界。</target>
        </trans-unit>
        <trans-unit id="df514d8803d92aad8382f1ee7f5fbb863839a85b" translate="yes" xml:space="preserve">
          <source>To set a continuous byte stream mode, instantiate QSctpSocket and call &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;() with a negative value. This gives the ability to use QSctpSocket as a regular buffered &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can call &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() to initiate connection with endpoint, &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to transmit and &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() to receive data from the peer, but you cannot distinguish message boundaries.</source>
          <target state="translated">要设置连续字节流模式，请实例化QSctpSocket并使用负值调用&lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;（）。这样就可以将QSctpSocket用作常规的缓冲&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;。您可以调用&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）来启动与端点的连接，可以&lt;a href=&quot;qiodevice#write&quot;&gt;写&lt;/a&gt;（）进行传输，而&lt;a href=&quot;qiodevice#read&quot;&gt;读&lt;/a&gt;（）来从对等方接收数据，但是您无法区分消息边界。</target>
        </trans-unit>
        <trans-unit id="9f53ea5a48de53c822c012aeefc61014f8be3030" translate="yes" xml:space="preserve">
          <source>To set a cursor shape use &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor::setShape&lt;/a&gt;() or use the &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; constructor which takes the shape as argument, or you can use one of the predefined cursors defined in the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; enum.</source>
          <target state="translated">要设置光标形状，请使用&lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor :: setShape&lt;/a&gt;（）或使用将形状作为参数的&lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt;构造函数，或者您可以使用&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;枚举中定义的预定义光标之一。</target>
        </trans-unit>
        <trans-unit id="74f1c5b408e90cfa5494d751d64d390c9276cea1" translate="yes" xml:space="preserve">
          <source>To set a cursor shape use &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor::setShape&lt;/a&gt;() or use the QCursor constructor which takes the shape as argument, or you can use one of the predefined cursors defined in the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; enum.</source>
          <target state="translated">要设置光标形状，请使用&lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor :: setShape&lt;/a&gt;（）或使用将形状作为参数的QCursor构造函数，或者您可以使用&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;枚举中定义的预定义光标之一。</target>
        </trans-unit>
        <trans-unit id="69874207da40c8e57ed138d99db0538c16cf43f4" translate="yes" xml:space="preserve">
          <source>To set an arbitrary transform origin point use the &lt;a href=&quot;qml-qtquick-scale&quot;&gt;Scale&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt; transform types with &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">要设置任意变换原点，请使用带有&lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-scale&quot;&gt;Scale&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt;变换类型。</target>
        </trans-unit>
        <trans-unit id="9e74fbab69caa9e4bc36beb8e1da3ff403d89ff6" translate="yes" xml:space="preserve">
          <source>To set an item as the current item without selecting it, call</source>
          <target state="translated">要将一个项目设置为当前项目而不选择它,请调用</target>
        </trans-unit>
        <trans-unit id="5756c23b411752a7da105100cbd843b8260faf10" translate="yes" xml:space="preserve">
          <source>To set individual elements in the array, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload. For example, to fill the array above with integers:</source>
          <target state="translated">要设置数组中的各个元素，请使用&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex，const QJSValue＆value）&lt;/a&gt;重载。例如，用整数填充上面的数组：</target>
        </trans-unit>
        <trans-unit id="ff62840c5182229261dd22a4c53ae6422f856183" translate="yes" xml:space="preserve">
          <source>To set only one property, the other can be set to &lt;code&gt;-1&lt;/code&gt;. For example, if you only want to animate the duration and not velocity, use the following code:</source>
          <target state="translated">要仅设置一个属性，可以将另一个属性设置为 &lt;code&gt;-1&lt;/code&gt; 。例如，如果只想对持续时间进行动画处理而不是对速度进行动画处理，请使用以下代码：</target>
        </trans-unit>
        <trans-unit id="84c632306b3da38aa41c054e86c9547b6c98182a" translate="yes" xml:space="preserve">
          <source>To set or get the position of the mouse cursor use the static methods &lt;a href=&quot;qcursor#pos&quot;&gt;QCursor::pos&lt;/a&gt;() and &lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor::setPos&lt;/a&gt;().</source>
          <target state="translated">要设置或获取鼠标光标的位置，请使用静态方法&lt;a href=&quot;qcursor#pos&quot;&gt;QCursor :: pos&lt;/a&gt;（）和&lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor :: setPos&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ad1e14311abaed179f60e85c9666e783bb25cb3d" translate="yes" xml:space="preserve">
          <source>To set or query properties the following functions are provided: &lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader::setProperty&lt;/a&gt;(), &lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader::property&lt;/a&gt;() and &lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader::hasProperty&lt;/a&gt;().</source>
          <target state="translated">要设置或查询属性，提供了以下功能：&lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader :: setProperty&lt;/a&gt;（），&lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader :: property&lt;/a&gt;（）和&lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader :: hasProperty&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="83e2fbf9df9bb17ebc7d4c3cb3f0842c14429c8b" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a &lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;PluginParameter&lt;/a&gt; inside a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt;.</source>
          <target state="translated">要设置这样的参数，&lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;请&lt;/a&gt;在&lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;对象内声明一个PluginParameter，并为其指定&lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;名称&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;值&lt;/a&gt;属性。可从&lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;插件参考页面中&lt;/a&gt;获得每个插件的有效参数名称的列表。</target>
        </trans-unit>
        <trans-unit id="0070c4295202c0dfd6fb103c9c4f1d021d7f1f6d" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a PluginParameter inside an element that accepts plugin parameters as configuration objects, such as a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, or a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt; for geoservice plugins, and Qt Positioning plugins#Default plugins for position plugins.</source>
          <target state="translated">要设置此类参数，请在接受插件参数作为配置对象（例如&lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;对象或&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt;对象）的元素内声明一个PluginParameter ，并为其指定&lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;名称&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;值&lt;/a&gt;属性。每个插件的有效参数名称列表可从Geoservice插件的&lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;插件参考页面&lt;/a&gt;中找到，以及Qt定位插件#Position插件的默认插件中。</target>
        </trans-unit>
        <trans-unit id="6f6c5e5005265df19fbe694009fa1aed337cc02d" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a PluginParameter inside an element that accepts plugin parameters as configuration objects, such as a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, or a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtpositioning-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtpositioning-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt; for geoservice plugins, and &lt;a href=&quot;qtpositioning-plugins#default-plugins&quot;&gt;Qt Positioning plugins#Default plugins&lt;/a&gt; for position plugins.</source>
          <target state="translated">要设置此类参数，请在接受插件参数作为配置对象（例如&lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;对象或&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt;对象）的元素内声明一个PluginParameter ，并为其指定&lt;a href=&quot;qml-qtpositioning-pluginparameter#name-prop&quot;&gt;名称&lt;/a&gt;和&lt;a href=&quot;qml-qtpositioning-pluginparameter#value-prop&quot;&gt;值&lt;/a&gt;属性。每个插件的有效参数名称列表可从Geoservice插件的&lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;插件参考页面&lt;/a&gt;中找到，以及&lt;a href=&quot;qtpositioning-plugins#default-plugins&quot;&gt;Qt定位插件&lt;/a&gt;#Position插件的默认插件中。</target>
        </trans-unit>
        <trans-unit id="c570b9629a12a412d70288fd0a7d25be92044e41" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the &lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient&lt;/a&gt;.</source>
          <target state="translated">要设置渐变色标，请将其定义为&lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient的&lt;/a&gt;子级。</target>
        </trans-unit>
        <trans-unit id="e8832bab5c4648d704fac44703f71ddc4b1762ad" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the Gradient.</source>
          <target state="translated">要设置渐变停止,请将它们定义为渐变的子代。</target>
        </trans-unit>
        <trans-unit id="061a46bcaf8a6753e9a88ff9b74e803b1f3b051e" translate="yes" xml:space="preserve">
          <source>To set the item's ellipse, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current ellipse geometry.</source>
          <target state="translated">要设置项目的椭圆，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;（）。的&lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前椭圆的几何形状。</target>
        </trans-unit>
        <trans-unit id="62db30bb851aa4c180c2fa57ad92a2e8a1e486a3" translate="yes" xml:space="preserve">
          <source>To set the item's ellipse, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to QGraphicsEllipseItem's constructor, or call &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current ellipse geometry.</source>
          <target state="translated">要设置项目的椭圆，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给QGraphicsEllipseItem的构造函数，或调用&lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;（）。的&lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前椭圆的几何形状。</target>
        </trans-unit>
        <trans-unit id="7391f1638e013db097fc80c158b3cce41bd56035" translate="yes" xml:space="preserve">
          <source>To set the item's line, pass a &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; to &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;line&lt;/a&gt;() function returns the current line. By default the line is black with a width of 0, but you can change this by calling &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;().</source>
          <target state="translated">要设置项目的行，&lt;a href=&quot;qlinef&quot;&gt;请将QLineF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;（）函数。所述&lt;a href=&quot;qgraphicslineitem#line&quot;&gt;线&lt;/a&gt;（）函数返回当前行。默认情况下，该行为黑色，宽度为0，但是您可以通过调用&lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;（）来更改它。</target>
        </trans-unit>
        <trans-unit id="c56b4bb12220ac0419673f3e026037bbf1142141" translate="yes" xml:space="preserve">
          <source>To set the item's line, pass a &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; to QGraphicsLineItem's constructor, or call the &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;line&lt;/a&gt;() function returns the current line. By default the line is black with a width of 0, but you can change this by calling &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;().</source>
          <target state="translated">要设置项目的行，&lt;a href=&quot;qlinef&quot;&gt;请将QLineF&lt;/a&gt;传递给QGraphicsLineItem的构造函数，或调用&lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;（）函数。所述&lt;a href=&quot;qgraphicslineitem#line&quot;&gt;线&lt;/a&gt;（）函数返回当前行。默认情况下，该行为黑色，宽度为0，但是您可以通过调用&lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;（）来更改它。</target>
        </trans-unit>
        <trans-unit id="db4dffe0dc7f4f180f9dac44388f85e4511d2009" translate="yes" xml:space="preserve">
          <source>To set the item's path, pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to &lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;path&lt;/a&gt;() function returns the current path.</source>
          <target state="translated">要设置项目的路径，请将&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspathitem#path&quot;&gt;路径&lt;/a&gt;（）函数返回当前路径。</target>
        </trans-unit>
        <trans-unit id="f57629e406ce37fb84abd9a4d77d2b583b1aabe5" translate="yes" xml:space="preserve">
          <source>To set the item's path, pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to QGraphicsPathItem's constructor, or call the &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;path&lt;/a&gt;() function returns the current path.</source>
          <target state="translated">要设置项目的路径，请将&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;传递给QGraphicsPathItem的构造函数，或调用&lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspathitem#path&quot;&gt;路径&lt;/a&gt;（）函数返回当前路径。</target>
        </trans-unit>
        <trans-unit id="6c00e99aa772027e3ccc76894ae38b9ff4aa0cf2" translate="yes" xml:space="preserve">
          <source>To set the item's pixmap, pass a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;pixmap&lt;/a&gt;() function returns the current pixmap.</source>
          <target state="translated">要设置项目的像素图，请将&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;像素图&lt;/a&gt;（）函数返回当前像素图。</target>
        </trans-unit>
        <trans-unit id="2287a05f182ee8af11e17d2a7c26c70d069fba1d" translate="yes" xml:space="preserve">
          <source>To set the item's pixmap, pass a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to QGraphicsPixmapItem's constructor, or call the &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;pixmap&lt;/a&gt;() function returns the current pixmap.</source>
          <target state="translated">要设置项目的像素图，请将&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;传递给QGraphicsPixmapItem的构造函数，或调用&lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;像素图&lt;/a&gt;（）函数返回当前像素图。</target>
        </trans-unit>
        <trans-unit id="44f4ee9f46b0b051febda9f8f589f38ea30da233" translate="yes" xml:space="preserve">
          <source>To set the item's polygon, pass a &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; to &lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;polygon&lt;/a&gt;() function returns the current polygon.</source>
          <target state="translated">要设置项目的多边形，&lt;a href=&quot;qpolygonf&quot;&gt;请将QPolygonF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;多边形&lt;/a&gt;（）函数返回当前的多边形。</target>
        </trans-unit>
        <trans-unit id="131f29ee62875ada437dd6320bfab8d7d74e38b7" translate="yes" xml:space="preserve">
          <source>To set the item's polygon, pass a &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; to QGraphicsPolygonItem's constructor, or call the &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;polygon&lt;/a&gt;() function returns the current polygon.</source>
          <target state="translated">要设置项目的多边形，&lt;a href=&quot;qpolygonf&quot;&gt;请将QPolygonF&lt;/a&gt;传递给QGraphicsPolygonItem的构造函数，或调用&lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;多边形&lt;/a&gt;（）函数返回当前的多边形。</target>
        </trans-unit>
        <trans-unit id="87f5784688f2afd1aef4d7327f48ad6368ed3b7a" translate="yes" xml:space="preserve">
          <source>To set the item's rectangle, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current rectangle.</source>
          <target state="translated">要设置项目的矩形，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;（）函数。的&lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前矩形。</target>
        </trans-unit>
        <trans-unit id="50fd6b7b52f68d846cec2535b087f4f59f81e732" translate="yes" xml:space="preserve">
          <source>To set the item's rectangle, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to QGraphicsRectItem's constructor, or call the &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current rectangle.</source>
          <target state="translated">要设置项目的矩形，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给QGraphicsRectItem的构造函数，或调用&lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;（）函数。的&lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前矩形。</target>
        </trans-unit>
        <trans-unit id="1c8fc84a401eb2427dff60845c0f471b47250427" translate="yes" xml:space="preserve">
          <source>To set the item's text, pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;()/&lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，请将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;（）/ &lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="46330fad71f8360e489b220b0eee12ebf925ed8b" translate="yes" xml:space="preserve">
          <source>To set the item's text, pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to QGraphicsTextItem's constructor, or call &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;()/&lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，请将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给QGraphicsTextItem的构造函数，或调用&lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;（）/ &lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="587f0fd211f7b78a3e68f7e794a9eac713cc32cf" translate="yes" xml:space="preserve">
          <source>To set the item's text, you can either pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;() to change the text later. To set the text fill color, call &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，可以将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;的构造函数，也可以稍后调用&lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;（）来更改文本。要设置文本填充颜色，请调用&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ad6cc3106f3d35656f12af7be7cfa9f0e821a494" translate="yes" xml:space="preserve">
          <source>To set the item's text, you can either pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to QGraphicsSimpleTextItem's constructor, or call &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;() to change the text later. To set the text fill color, call &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，可以将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给QGraphicsSimpleTextItem的构造函数，也可以稍后调用&lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;（）来更改文本。要设置文本填充颜色，请调用&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="d916691cc9eb71bea7a6f2a778d879468953d17f" translate="yes" xml:space="preserve">
          <source>To set the layout direction based on the &lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;default layout direction&lt;/a&gt; of the application, use the following code:</source>
          <target state="translated">要基于应用程序的&lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;默认布局方向设置布局方向&lt;/a&gt;，请使用以下代码：</target>
        </trans-unit>
        <trans-unit id="eccb229829bfa9f57f9793f404bde79fa899ca61" translate="yes" xml:space="preserve">
          <source>To set the model on which &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; should operate, call &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;(). By default, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; will attempt to match the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completion prefix&lt;/a&gt; (i.e., the word that the user has started typing) against the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; data stored in column 0 in the model case sensitively. This can be changed using &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;(), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;(), and &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;().</source>
          <target state="translated">要设置&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;应该在其上运行的模型，请调用&lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;（）。默认情况下，&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;会尝试将&lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;完成前缀&lt;/a&gt;（即用户已开始键入的单词）与模型案例中存储在第0列中的&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt;数据进行敏感匹配。可以使用&lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;（），&lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;（）和&lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;（）进行更改。</target>
        </trans-unit>
        <trans-unit id="6a9c18be67d7974ecb7e0072fa2d5843ab7a4f00" translate="yes" xml:space="preserve">
          <source>To set the model on which QCompleter should operate, call &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;(). By default, QCompleter will attempt to match the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completion prefix&lt;/a&gt; (i.e., the word that the user has started typing) against the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; data stored in column 0 in the model case sensitively. This can be changed using &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;(), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;(), and &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;().</source>
          <target state="translated">若要设置QCompleter应该在其上运行的模型，请调用&lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;（）。默认情况下，QCompleter会尝试将&lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;完成前缀&lt;/a&gt;（即用户已开始键入的单词）与模型案例中存储在第0列中的&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt;数据进行敏感匹配。可以使用&lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;（），&lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;（）和&lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;（）进行更改。</target>
        </trans-unit>
        <trans-unit id="25aca77bc8cba7ebf1fe31e73a6d8925ae6f65cc" translate="yes" xml:space="preserve">
          <source>To set the scheme, the following call is used:</source>
          <target state="translated">要设置方案,请使用以下调用。</target>
        </trans-unit>
        <trans-unit id="d62fa8d99c112b8a3751341565b723b5a0cfaa13" translate="yes" xml:space="preserve">
          <source>To set the size of the minor tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">要设置次要刻度线的大小，指定&lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="069ea43437d6360614bbc10e8d01b9d929eaabdf" translate="yes" xml:space="preserve">
          <source>To set the size of the tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">要设置刻度线的大小，指定&lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd524d036c8a4f5cddad01412bc6de37c11220b5" translate="yes" xml:space="preserve">
          <source>To set the value to NULL, use &lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">要将值设置为NULL，请使用&lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a1ce87cc40a0b03b8c578fd75cf3bf38eba46af8" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt; or &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt; depending on the platform. However when reading the visibility property you will always get the actual state, never &lt;code&gt;AutomaticVisibility&lt;/code&gt;.</source>
          <target state="translated">将可见性设置为&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;意味着为窗口提供默认的可见状态，根据平台的不同，该状态可能是&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt;或&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt;。但是，在读取可见性属性时，您将始终获得实际状态，而不会获得 &lt;code&gt;AutomaticVisibility&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1aafea08b3c916e1992413898c75c9f79481775" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be fullscreen or windowed depending on the platform. When reading the visibility property you will always get the actual state, never &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;.</source>
          <target state="translated">将可见性设置为&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;意味着为窗口提供默认的可见状态，根据平台的不同，该状态可以是全屏显示或窗口显示。读取可见性属性时，您将始终获得实际状态，而不会获得&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d6d3a9a9257b6f0202e1e54ab22cd17fead68eb" translate="yes" xml:space="preserve">
          <source>To set up a manual tab focus chain, see &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;. Tab key events used by Keys or &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt; have precedence over focus chain behavior; ignore the events in other key handlers to allow it to propagate.</source>
          <target state="translated">要设置手动选项卡焦点链，请参见&lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;。Keys或&lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;使用的Tab键事件优先于焦点链行为。忽略其他键处理程序中的事件以使其传播。</target>
        </trans-unit>
        <trans-unit id="01c4ad4edfdba3b201f1ef8c84325ca2b659e814" translate="yes" xml:space="preserve">
          <source>To set up sharing between &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances belonging to different windows, set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; application attribute before instantiating &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. This will trigger sharing between all &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances without any further steps.</source>
          <target state="translated">要设置属于不同窗口的&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;实例之间的共享，请在实例化&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;之前设置&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt;应用程序属性。这将触发所有&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;实例之间的共享，而无需任何其他步骤。</target>
        </trans-unit>
        <trans-unit id="6b5c013d60fc059d064628966760cebcd4ec5a82" translate="yes" xml:space="preserve">
          <source>To set up sharing between QOpenGLWidget instances belonging to different windows, set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; application attribute before instantiating &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. This will trigger sharing between all QOpenGLWidget instances without any further steps.</source>
          <target state="translated">要设置属于不同窗口的QOpenGLWidget实例之间的共享，请在实例化&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;之前设置&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt;应用程序属性。这将触发所有QOpenGLWidget实例之间的共享，而无需任何其他步骤。</target>
        </trans-unit>
        <trans-unit id="034c0e0fe9d9ff64eff3b21ad06690f5712f2144" translate="yes" xml:space="preserve">
          <source>To set/get the default horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;, use the property &lt;code&gt;horizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">要设置/获取&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;的默认水平对齐方式，请使用属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d52ba65fb99d53387a22a3723f50a76c2a635201" translate="yes" xml:space="preserve">
          <source>To share an action between a menu and a toolbar, drag its icon from the action editor to the toolbar rather than from the menu where its entry is located. See &lt;a href=&quot;#adding-an-action&quot;&gt;Adding an Action&lt;/a&gt; for more information about this process.</source>
          <target state="translated">要在菜单和工具栏之间共享动作，请将其图标从动作编辑器拖到工具栏，而不是从其条目所在的菜单拖到工具栏。有关此过程的更多信息，请参见&lt;a href=&quot;#adding-an-action&quot;&gt;添加操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68317695f20357b58121004fcc3c02fc0a97ea24" translate="yes" xml:space="preserve">
          <source>To share an action between a menu and a toolbar, drag its icon from the action editor to the toolbar rather than from the menu where its entry is located. See &lt;a href=&quot;designer-creating-mainwindows#adding-an-action&quot;&gt;Adding an Action&lt;/a&gt; for more information about this process.</source>
          <target state="translated">要在菜单和工具栏之间共享动作，请将其图标从动作编辑器拖到工具栏，而不是从其条目所在的菜单拖到工具栏。有关此过程的更多信息，请参见&lt;a href=&quot;designer-creating-mainwindows#adding-an-action&quot;&gt;添加操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12d78a9f9e3b90f51a061c86d0ee458532d95585" translate="yes" xml:space="preserve">
          <source>To show a color dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property can be used to determine the currently selected color in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示颜色对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt;属性可以用来确定在对话框中当前选定的颜色。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;颜色&lt;/a&gt;最终选择已被接受对话框仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="2a92527fa1b3a1ecd63b9312c94fca44a3ec763a" translate="yes" xml:space="preserve">
          <source>To show a color dialog, construct an instance of ColorDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property can be used to determine the currently selected color in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示颜色对话框，请构造ColorDialog的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt;属性可以用来确定在对话框中当前选定的颜色。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;颜色&lt;/a&gt;最终选择已被接受对话框仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="71729f75e4443319235925fd9226815efc10e752" translate="yes" xml:space="preserve">
          <source>To show a file dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; properties can be used to determine the currently selected file(s) in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; properties are updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt;或&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt;属性可以被用来确定在对话框中当前选中的文件（多个）。该&lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;文件&lt;/a&gt;与&lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;文件&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="90767e48d8beff292f9a342239e78bb009a3c7d8" translate="yes" xml:space="preserve">
          <source>To show a file dialog, construct an instance of FileDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; properties can be used to determine the currently selected file(s) in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; properties are updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件对话框，请构造FileDialog的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt;或&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt;属性可以被用来确定在对话框中当前选中的文件（多个）。该&lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;文件&lt;/a&gt;与&lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;文件&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="c6ab49efa2c138d458a1399fedd68c2a5f3304f8" translate="yes" xml:space="preserve">
          <source>To show a folder dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property can be used to determine the currently selected folder in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件夹对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt;属性可以用来确定在对话框中当前选定的文件夹中。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;文件夹&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="efee9f8714f8ae44f786bc48ce2b963621df0f6b" translate="yes" xml:space="preserve">
          <source>To show a folder dialog, construct an instance of FolderDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property can be used to determine the currently selected folder in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件夹对话框，请构造FolderDialog的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt;属性可以用来确定在对话框中当前选定的文件夹中。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;文件夹&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="e9ed6039ad770d1428b099b03e4736029a600ee6" translate="yes" xml:space="preserve">
          <source>To show a font dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property can be used to determine the currently selected font in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示字体对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt;属性可以被用来确定在对话框中当前选定的字体。该&lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;字体&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="a980d317ef8453320976925faf00c32aed3ede9e" translate="yes" xml:space="preserve">
          <source>To show a font dialog, construct an instance of FontDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property can be used to determine the currently selected font in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示字体对话框，请构造FontDialog的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt;属性可以被用来确定在对话框中当前选定的字体。该&lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;字体&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="c1d11e62870bad9a2050193f62497908b10ce192" translate="yes" xml:space="preserve">
          <source>To show a message dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="translated">要显示消息对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ccfeb83c45a591aa7e832db3bb0bc57286e8b7" translate="yes" xml:space="preserve">
          <source>To show a message dialog, construct an instance of MessageDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="translated">要显示消息对话框，请构造MessageDialog的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d39302e102fd32e71d3964641a606110a61c7374" translate="yes" xml:space="preserve">
          <source>To show a native dialog, construct an instance of one of the concrete Dialog implementations, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. Dialog emits &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;rejected()&lt;/a&gt; when the user is done with the dialog.</source>
          <target state="translated">要显示本机对话框，请构造其中一个具体Dialog实现的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。当用户完成对话框后，Dialog会发出&lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted（）&lt;/a&gt;或&lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;rejected（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="474bae090b1b4ad6eddb58dd990af0ff53114ff1" translate="yes" xml:space="preserve">
          <source>To show the user where the item currently being dragged will be placed if dropped, set the view's &lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt; property. This provides the user with continuously updating information about item placement within the view.</source>
          <target state="translated">要向用户显示当前被拖动的项目（如果被放置）将放置在何处，请设置视图的&lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt;属性。这为用户提供了有关视图内项目放置的连续更新信息。</target>
        </trans-unit>
        <trans-unit id="1d6b729f39a0d778d1390b62b1b22e0037272a87" translate="yes" xml:space="preserve">
          <source>To show this in practice, we review the source code for the implicitly shared &lt;code&gt;Employee&lt;/code&gt; class. In the header file we define the two classes &lt;code&gt;Employee&lt;/code&gt; and &lt;code&gt;EmployeeData&lt;/code&gt;.</source>
          <target state="translated">为了在实践中证明这一点，我们回顾了隐式共享的 &lt;code&gt;Employee&lt;/code&gt; 类的源代码。在头文件中，我们定义了两个类 &lt;code&gt;Employee&lt;/code&gt; 和 &lt;code&gt;EmployeeData&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec028b5bea51403f894a79512d68b65fac732666" translate="yes" xml:space="preserve">
          <source>To signify that a document is an article, you append the article keyword to the \page command:</source>
          <target state="translated">为了表示一个文档是一篇文章,你可以在\page命令后面加上文章关键字。</target>
        </trans-unit>
        <trans-unit id="5cd6c16df56cfe8a544abfbd6c403c5179b933e1" translate="yes" xml:space="preserve">
          <source>To simplify binding and maintaining larger data sets, a context object can be set on a &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;. All the properties of the context object are available by name in the context, as though they were all individually added through calls to &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). Changes to the property's values are detected through the property's notify signal. Setting a context object is both faster and easier than manually adding and maintaining context property values.</source>
          <target state="translated">为了简化绑定和维护更大的数据集，可以在&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;上设置上下文对象。上下文对象的所有属性都可以在上下文中按名称使用，就好像它们都是通过调用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）单独添加的一样。通过属性的通知信号来检测对属性值的更改。与手动添加和维护上下文属性值相比，设置上下文对象既快捷又容易。</target>
        </trans-unit>
        <trans-unit id="d7975065cf6e4c14a70a82368bc5b551e5a79d70" translate="yes" xml:space="preserve">
          <source>To simplify binding and maintaining larger data sets, a context object can be set on a QQmlContext. All the properties of the context object are available by name in the context, as though they were all individually added through calls to &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). Changes to the property's values are detected through the property's notify signal. Setting a context object is both faster and easier than manually adding and maintaining context property values.</source>
          <target state="translated">为了简化绑定和维护更大的数据集，可以在QQmlContext上设置上下文对象。上下文对象的所有属性都可以在上下文中按名称使用，就好像它们都是通过调用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）单独添加的一样。通过属性的通知信号来检测对属性值的更改。与手动添加和维护上下文属性值相比，设置上下文对象既快捷又容易。</target>
        </trans-unit>
        <trans-unit id="8dcda5108eab727100439171d3b81357d07b893d" translate="yes" xml:space="preserve">
          <source>To simplify interaction with items using a transformed view, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; provides mapTo... and mapFrom... functions that can translate between items' and the scene's coordinates. For example, you can call &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map an item coordiate to a scene coordinate, or &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from scene coordinates to item coordinates.</source>
          <target state="translated">为了简化使用转换视图与项目的交互，&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;提供了mapTo ...和mapFrom ...函数，可以在项目坐标和场景坐标之间转换。例如，您可以调用&lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）将项目坐标映射到场景坐标，或&lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;调用mapFromScene&lt;/a&gt;（）从场景坐标映射到项目坐标。</target>
        </trans-unit>
        <trans-unit id="9dbe3d702108cae56c138601d5a2e9e05e21bd36" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordiate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">要使用转化视图简化与项目互为作用，&lt;a href=&quot;qgraphicsview&quot;&gt;的QGraphicsView&lt;/a&gt;提供&lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ......和&lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ......可以现场和查看坐标之间的转换功能。例如，您可以调用&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）将视图坐标映射到浮点场景坐标，或&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;调用mapFromScene&lt;/a&gt;（）从浮点场景坐标映射到视图坐标。</target>
        </trans-unit>
        <trans-unit id="57598bda0e6694e6cad632af86c2fae4b551dea2" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordinate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">要使用转化视图简化与项目互为作用，&lt;a href=&quot;qgraphicsview&quot;&gt;的QGraphicsView&lt;/a&gt;提供&lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ......和&lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ......可以现场和查看坐标之间的转换功能。例如，你可以调用&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）来映射视图坐标为浮点现场协调，或&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;（）从浮点场景坐标，查看坐标映射。</target>
        </trans-unit>
        <trans-unit id="6e12dc82e4ef2269cf9a3dadd1da6b316999cffb" translate="yes" xml:space="preserve">
          <source>To simulate a sequence of touch events on a specific device for a window or widget, call &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt; to create a &lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt; instance. Add touch events to the sequence by calling &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;() and &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;stationary&lt;/a&gt;(), and let the instance run out of scope to commit the sequence to the event system.</source>
          <target state="translated">要在特定设备上模拟窗口或窗口小部件的触摸事件序列，请调用&lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest :: touchEvent&lt;/a&gt;创建&lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt;实例。通过调用&lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;（）和&lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;平稳&lt;/a&gt;（）来将触摸事件添加到序列中，并让实例用完范围以将该序列提交给事件系统。</target>
        </trans-unit>
        <trans-unit id="e9f1b53f773d7d523f8a647544af2996e3985a90" translate="yes" xml:space="preserve">
          <source>To simulate a sequence of touch events on a specific device for a window or widget, call &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt; to create a QTouchEventSequence instance. Add touch events to the sequence by calling &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;() and &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;stationary&lt;/a&gt;(), and let the instance run out of scope to commit the sequence to the event system.</source>
          <target state="translated">要在窗口或小部件的特定设备上模拟一系列触摸事件，请调用&lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest :: touchEvent&lt;/a&gt;创建QTouchEventSequence实例。通过调用&lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;（）和&lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;平稳&lt;/a&gt;（）来将触摸事件添加到序列中，并让实例超出作用域以将该序列提交给事件系统。</target>
        </trans-unit>
        <trans-unit id="9dfe1b2df557306e9615c93910faf54c2c481a32" translate="yes" xml:space="preserve">
          <source>To skip the post-processing step, also set the &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; configuration.</source>
          <target state="translated">要跳过后处理步骤，还要设置 &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="0890ac3690cc3e62db27d971329d2444400b2e61" translate="yes" xml:space="preserve">
          <source>To solve this problem, QML introduces a concept known as a</source>
          <target state="translated">为了解决这个问题,QML引入了一个概念,即称为</target>
        </trans-unit>
        <trans-unit id="84bd264dac6221c57df0588e686273701a1f917f" translate="yes" xml:space="preserve">
          <source>To solve this problem, a QWindowsWindowFunction can be used to enable a native Windows flag which will set &lt;code&gt;WS_BORDER&lt;/code&gt; when showing in full screen mode. This can be utilized as follows:</source>
          <target state="translated">为了解决此问题，可以使用QWindowsWindowFunction启用本机Windows标志，该标志在以全屏模式显示时将设置 &lt;code&gt;WS_BORDER&lt;/code&gt; 。可以使用以下方法：</target>
        </trans-unit>
        <trans-unit id="6e82604c703aadd313f71d9e180c259c4952eb2b" translate="yes" xml:space="preserve">
          <source>To solve this problem, the model/view framework uses proxy models to manage the information supplied between individual models and views. Proxy models are components that behave like ordinary models from the perspective of a view, and access data from source models on behalf of that view. The signals and slots used by the model/view framework ensure that each view is updated appropriately no matter how many proxy models are placed between itself and the source model.</source>
          <target state="translated">为了解决这个问题,模型/视图框架使用代理模型来管理各个模型和视图之间提供的信息。代理模型是一种组件,从视图的角度看,它的行为就像普通模型一样,并代表该视图访问源模型的数据。模型/视图框架所使用的信号和插槽确保每个视图都能得到适当的更新,无论在其自身和源模型之间放置了多少个代理模型。</target>
        </trans-unit>
        <trans-unit id="c60a655e10c297046db74a287893a4657a33ba59" translate="yes" xml:space="preserve">
          <source>To sort the model, you can use &lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;sort&lt;/a&gt;().</source>
          <target state="translated">要对模型进行排序，可以使用&lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;sort&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3eeb0c559edbf750f79f0828b87e8a3726c85cdb" translate="yes" xml:space="preserve">
          <source>To specify a path containing spaces, quote the path using the technique described in &lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;Whitespace&lt;/a&gt;.</source>
          <target state="translated">要指定包含空格的路径，请使用&lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;Whitespace中&lt;/a&gt;描述的技术对路径进行引用。</target>
        </trans-unit>
        <trans-unit id="0c48b21c10573e2a264dea371254b7ddff165494" translate="yes" xml:space="preserve">
          <source>To specify a prefix for a file name, prepend the prefix followed by a single colon (e.g., &quot;images:undo.png&quot;, &quot;xmldocs:books.xml&quot;).</source>
          <target state="translated">要为文件名指定前缀,请在前缀后面加上一个冒号(例如,&quot;images:undo.png&quot;,&quot;xmldocs:books.xml&quot;)。</target>
        </trans-unit>
        <trans-unit id="3346a542382eae5a86e880b742328e298a629ee9" translate="yes" xml:space="preserve">
          <source>To specify a relative path to a local directory:</source>
          <target state="translated">指定本地目录的相对路径。</target>
        </trans-unit>
        <trans-unit id="e545fbaadb3b69bbde547c14aac9d4eddbbd8b02" translate="yes" xml:space="preserve">
          <source>To specify a resource file you must enable the resource editor by opening the &lt;b&gt;Tools&lt;/b&gt; menu, and switching on the &lt;b&gt;Resource Browser&lt;/b&gt; option.</source>
          <target state="translated">要指定资源文件，必须通过打开&amp;ldquo; &lt;b&gt;工具&amp;rdquo;&lt;/b&gt;菜单并打开&amp;ldquo; &lt;b&gt;资源浏览器&amp;rdquo;&lt;/b&gt;选项来启用资源编辑&lt;b&gt;器&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="35035e0edf62baf5ecb6820217e25b7360c33864" translate="yes" xml:space="preserve">
          <source>To specify additional search paths in project files, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; like that, instead:</source>
          <target state="translated">要在项目文件中指定其他搜索路径，请使用类似&lt;a href=&quot;#libs&quot;&gt;LIBS的方法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1fab0f58ad5a95f7d65d4399e97dcb1a591245e5" translate="yes" xml:space="preserve">
          <source>To specify additional search paths in project files, use &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt; like that, instead:</source>
          <target state="translated">要在项目文件中指定其他搜索路径，请使用类似&lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS的方法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1f21ec14504f11bdc55c4492d35a9bba2b6d4a82" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot (more details provided after the table). The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">要指定缓动曲线，您至少需要指定类型。对于某些曲线，您还可以指定幅度，周期和/或过冲（表格后提供更多详细信息）。默认的缓动曲线为 &lt;code&gt;Easing.Linear&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9ff38837a7ea116a36039fd78691d73de16f78b" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot. The default easing curve is Linear.</source>
          <target state="translated">要指定一条缓和曲线,你至少需要指定类型,对于一些曲线,你还可以指定振幅、周期和/或过冲。对于一些曲线,你还可以指定振幅、周期和/或过冲。默认的缓和曲线是线性曲线。</target>
        </trans-unit>
        <trans-unit id="b55c8f792411648a6b1e6b210856ad80cbeb4b3a" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period, overshoot or custom bezierCurve data. The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">要指定缓动曲线，您至少需要指定类型。对于某些曲线，您还可以指定幅度，周期，超调或自定义bezierCurve数据。默认的缓动曲线为 &lt;code&gt;Easing.Linear&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c136a976e0449347c6070972df1785288009f156" translate="yes" xml:space="preserve">
          <source>To specify layout functions for the form's margin and spacing, check the &lt;b&gt;Layout Function&lt;/b&gt; group box to enable the line edits.</source>
          <target state="translated">要为表单的边距和间距指定布局功能，请选中&amp;ldquo; &lt;b&gt;布局功能&amp;rdquo;&lt;/b&gt;组框以启用线编辑。</target>
        </trans-unit>
        <trans-unit id="6310bae4a9abdb8764d23aa8dd3c2ba64094c463" translate="yes" xml:space="preserve">
          <source>To specify libraries in a project file, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; instead.</source>
          <target state="translated">要在项目文件中指定库，请改用&lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6b402496658657e6108b2fffbdfb91206c9e6f3" translate="yes" xml:space="preserve">
          <source>To specify libraries in a project file, use &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt; instead.</source>
          <target state="translated">要在项目文件中指定库，请改用&lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cef33dbb768004e1ae60d3b67b7fe2372c07789c" translate="yes" xml:space="preserve">
          <source>To specify private libraries in a library project file, use &lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt; instead.</source>
          <target state="translated">要在库项目文件中指定私有库，请改用&lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ba363a2a9ef2e47ab371ce9ff5d6bd2ed3514c7" translate="yes" xml:space="preserve">
          <source>To specify private libraries in a library project file, use &lt;a href=&quot;qmake-variable-reference#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt; instead.</source>
          <target state="translated">要在库项目文件中指定私有库，请改用&lt;a href=&quot;qmake-variable-reference#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5504f767acf757dcf5f76e49d05a524bb92d9ce9" translate="yes" xml:space="preserve">
          <source>To specify that an image should be loaded by an image provider, use the &lt;b&gt;&quot;image:&quot;&lt;/b&gt; scheme for the URL source of the image, followed by the identifiers of the image provider and the requested image. For example:</source>
          <target state="translated">若要指定图像提供者应加载图像，请对&lt;b&gt;图像&lt;/b&gt;的URL源使用&lt;b&gt;&amp;ldquo; image：&amp;rdquo;&lt;/b&gt;方案，然后使用图像提供者的标识符和请求的图像。例如：</target>
        </trans-unit>
        <trans-unit id="129ff86d1373f6aac61895fe9c95304a28982bf6" translate="yes" xml:space="preserve">
          <source>To specify that the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; will react to multiple buttons, &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButtons&lt;/a&gt; flag values are combined using the &quot;|&quot; (or) operator:</source>
          <target state="translated">为了指定&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;将对多个按钮做出反应，使用&amp;ldquo; |&amp;rdquo;组合&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButtons&lt;/a&gt;标志值。（或）运算符：</target>
        </trans-unit>
        <trans-unit id="1857cbb7066a66a4a1747a66d5e39c6089f70938" translate="yes" xml:space="preserve">
          <source>To specify the location of a server, use the CODEBASE attribute in the OBJECT tag of your web-site. The value can point to the server file itself, to an INF file listing other files the server requires (e.g. the Qt DLL), or a compressed CAB archive.</source>
          <target state="translated">要指定服务器的位置,请使用网站OBJECT标签中的CODEBASE属性。这个值可以指向服务器文件本身,也可以指向一个INF文件,其中列出了服务器需要的其他文件(例如Qt DLL),或者是一个压缩的CAB存档。</target>
        </trans-unit>
        <trans-unit id="8cfe9e57af5c38f5f3595c0979fe0e2147668e27" translate="yes" xml:space="preserve">
          <source>To specify the rectangle, it requires a &lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt; point, both given by a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;.</source>
          <target state="translated">要指定矩形，它需要一个&lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt;点，它们均由&lt;a href=&quot;qml-coordinate&quot;&gt;坐标&lt;/a&gt;给出。</target>
        </trans-unit>
        <trans-unit id="40a52e8cffdce1eee35ed71af0879cd00219e085" translate="yes" xml:space="preserve">
          <source>To specify the style and color of lines and outlines, use the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s &lt;a href=&quot;qpen&quot;&gt;pen&lt;/a&gt; combined with &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::GlobalColor&lt;/a&gt;:</source>
          <target state="translated">要指定线条和轮廓的样式和颜色，请使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的&lt;a href=&quot;qpen&quot;&gt;笔&lt;/a&gt;结合&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;和&lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: GlobalColor&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7656f79f83810d490b78e1988007f5eac22de6f5" translate="yes" xml:space="preserve">
          <source>To start a computation, use one of the APIs in the &lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt; framework.</source>
          <target state="translated">要开始计算，请使用&lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt;框架中的API之一。</target>
        </trans-unit>
        <trans-unit id="a8c378962136265b66dbf6a3c002cccbe95b16cd" translate="yes" xml:space="preserve">
          <source>To start a drag from an item, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, passing a pointer to the widget that starts the drag. Items can be observed by many views at the same time, but only one view can start the drag. Drags are in most cases started as a result of pressing or moving the mouse, so in mousePressEvent() or mouseMoveEvent(), you can get the originating widget pointer from the event. For example:</source>
          <target state="translated">要从项目开始拖动，请创建&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;对象，并将指针传递到开始拖动的小部件。可以同时通过多个视图观察项目，但是只有一个视图可以开始拖动。在大多数情况下，拖动是由于按下或移动鼠标而开始的，因此在mousePressEvent（）或mouseMoveEvent（）中，您可以从事件中获取原始的窗口小部件指针。例如：</target>
        </trans-unit>
        <trans-unit id="e8f7e82e0b3188fc04a7621f02019209a9dbf12a" translate="yes" xml:space="preserve">
          <source>To start a drag, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, and call its exec() function. In most applications, it is a good idea to begin a drag and drop operation only after a mouse button has been pressed and the cursor has been moved a certain distance. However, the simplest way to enable dragging from a widget is to reimplement the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; and start a drag and drop operation:</source>
          <target state="translated">要开始拖动，请创建&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;对象，然后调用其exec（）函数。在大多数应用程序中，最好仅在按下鼠标按钮并且将光标移动了一定距离后才开始拖放操作。但是，启用从窗口小部件拖动的最简单方法是重新实现窗口小部件的&lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent（）&lt;/a&gt;并开始拖放操作：</target>
        </trans-unit>
        <trans-unit id="85ec5a6cf778da62e136c4057f68658caf8edd56" translate="yes" xml:space="preserve">
          <source>To start a process, pass the name and command line arguments of the program you want to run as arguments to &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;(). Arguments are supplied as individual strings in a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;.</source>
          <target state="translated">要启动进程，请将要运行的程序的名称和命令行参数作为参数传递给&lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;（）。参数作为单独的字符串提供在&lt;a href=&quot;qstringlist&quot;&gt;QStringList中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec55cc9fc62d63b86b8930cbf8185f96c71e483b" translate="yes" xml:space="preserve">
          <source>To start a top-level animation group, you simply use the &lt;a href=&quot;qabstractanimation#start&quot;&gt;start()&lt;/a&gt; function from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;. By a top-level animation group, we think of a group that itself is not contained within another group. Starting sub groups directly is not supported, and may lead to unexpected behavior.</source>
          <target state="translated">要启动顶级动画组，只需使用&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation中&lt;/a&gt;的&lt;a href=&quot;qabstractanimation#start&quot;&gt;start（）&lt;/a&gt;函数。在顶级动画组中，我们想到了一个本身不包含在另一个组中的组。不支持直接启动子组，这可能会导致意外行为。</target>
        </trans-unit>
        <trans-unit id="c94556b9382ed54894af0dd84a15e528118af92a" translate="yes" xml:space="preserve">
          <source>To start at another page than the page with the lowest ID, call &lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt;().</source>
          <target state="translated">要从另一个具有最低ID的页面开始，请调用&lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="420072f9c8f654c269ce68fbd7e572dce58e9c54" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, call the &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;() function. This emits the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore::transactionReady&lt;/a&gt;() signal for each of the application's unlockable products that were purchased previously by the current user. The status of these transactions will be &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction::PurchaseRestored&lt;/a&gt;.</source>
          <target state="translated">要开始恢复购买的过程，请调用&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore :: restorePurchases&lt;/a&gt;（）函数。这&lt;a href=&quot;qinappstore#transactionReady&quot;&gt;将为&lt;/a&gt;当前用户先前购买的每个应用程序的可解锁产品发出QInAppStore :: transactionReady（）信号。这些交易的状态将为&lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction :: PurchaseRestored&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea4b611b1a6307b87a8584d6fb48284ea0fdde97" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, you should call the restorePurchases() method in the &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; object. This will cause the onPurchaseRestored handler to be called in each of the application's unlockable products that has previously been purchased by the current user.</source>
          <target state="translated">To start the process of restoring purchases, you should call the restorePurchases() method in the &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; object. This will cause the onPurchaseRestored handler to be called in each of the application's unlockable products that has previously been purchased by the current user.</target>
        </trans-unit>
        <trans-unit id="0d72b8fc568c51fec8123ea8efb181ac03bdc0f7" translate="yes" xml:space="preserve">
          <source>To state the problem more formally, using States and Behaviors together can cause unexpected behavior when:</source>
          <target state="translated">更正式地说明问题,将State和Behaviors一起使用,可能会引起意外的行为,当。</target>
        </trans-unit>
        <trans-unit id="e3d843022091463e248a1657150850cf239ec969" translate="yes" xml:space="preserve">
          <source>To store an image, you start by constructing a &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;'s constructor. You can then set several options, such as the gamma level (by calling &lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt;()) and quality (by calling &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;()). &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; can write the image (i.e., the image format is supported and the device is open for writing). Call &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() to write the image to the device.</source>
          <target state="translated">要存储图像，请从构造&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;对象开始。将文件名或设备指针以及图像格式传递给&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;的构造函数。然后，您可以设置几个选项，例如伽玛级别（通过调用&lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt;（））和质量（通过调用&lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;（））。如果&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;可以写入图像，则&lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; （即，支持图像格式并且设备已打开以进行写入）。调用&lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;（）将图像写入设备。</target>
        </trans-unit>
        <trans-unit id="85ed1e553b545ce9ef5c805abcadbfbfd37358f6" translate="yes" xml:space="preserve">
          <source>To store an image, you start by constructing a QImageWriter object. Pass either a file name or a device pointer, and the image format to QImageWriter's constructor. You can then set several options, such as quality (by calling &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;()). &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if QImageWriter can write the image (i.e., the image format is supported and the device is open for writing). Call &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() to write the image to the device.</source>
          <target state="translated">要存储图像，请从构造QImageWriter对象开始。将文件名或设备指针以及图像格式传递给QImageWriter的构造函数。然后，您可以设置多个选项，例如质量（通过调用&lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;（））。如果QImageWriter可以写图像，&lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; （即，支持图像格式并且设备已打开以进行写操作）。调用&lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;（）将图像写入设备。</target>
        </trans-unit>
        <trans-unit id="20893195962fbd627c933d0c81a7c8d0ea367c59" translate="yes" xml:space="preserve">
          <source>To style a button in Qt Quick Controls 2:</source>
          <target state="translated">在Qt快速控件中设置按钮的样式 2:</target>
        </trans-unit>
        <trans-unit id="88a4ee909c23d03593382b5a0648ddf66979bc61" translate="yes" xml:space="preserve">
          <source>To style a button in Qt Quick Controls:</source>
          <target state="translated">在Qt Quick Controls中对按钮进行样式设计。</target>
        </trans-unit>
        <trans-unit id="a7e69f212adb059d4de637b8ca4025ac03b9dca7" translate="yes" xml:space="preserve">
          <source>To style individual sections of the menu, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; component:</source>
          <target state="translated">要设置菜单的各个部分的样式，请使用&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt;组件：</target>
        </trans-unit>
        <trans-unit id="93b9ff68b94ed04a953808de1201686a3e2c296b" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, you must reimplement at least &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to draw the button's outline and its text or pixmap. It is generally advisable to reimplement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() as well, and sometimes &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;() (to determine whether a button press is within the button). For buttons with more than two states (like tri-state buttons), you will also have to reimplement &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;().</source>
          <target state="translated">要&lt;a href=&quot;qabstractbutton&quot;&gt;继承QAbstractButton&lt;/a&gt;，必须至少重新实现&lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）才能绘制按钮的轮廓及其文本或像素图。通常建议重新实现&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;（），有时也重新实现&lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;（）（以确定按钮是否在按钮内）。对于具有两个以上状态的按钮（例如三状态按钮），还必须重新实现&lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;（）和&lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a7860d026fa9322b6ee12c5adfed72a2d4a653cd" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, you need to implement &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;(). The &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;() functions only need to be reimplemented if you need a behavior different from the default behavior.</source>
          <target state="translated">要子类化&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;，您需要实现&lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;（）。该&lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;只需要（）函数来重新实现，如果你需要从默认行为行为不同。</target>
        </trans-unit>
        <trans-unit id="149744c580078e2470b5984978b47d607e7208ca" translate="yes" xml:space="preserve">
          <source>To subclass QAbstractButton, you must reimplement at least &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to draw the button's outline and its text or pixmap. It is generally advisable to reimplement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() as well, and sometimes &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;() (to determine whether a button press is within the button). For buttons with more than two states (like tri-state buttons), you will also have to reimplement &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;().</source>
          <target state="translated">要继承QAbstractButton，必须至少重新实现&lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）才能绘制按钮的轮廓及其文本或像素图。通常建议也重新实现&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;（），有时重新实现&lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;（）（以确定按钮是否在按钮内）。对于具有两种以上状态的按钮（如三态按钮），还必须重新实现&lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;（）和&lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8a689c6b8d2e5eeca29d32e5439ff79376cfde70" translate="yes" xml:space="preserve">
          <source>To subclass QAbstractProxyModel, you need to implement &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;(). The &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;() functions only need to be reimplemented if you need a behavior different from the default behavior.</source>
          <target state="translated">要使QAbstractProxyModel成为子类，您需要实现&lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;（）。该&lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;只需要（）函数来重新实现，如果你需要从默认行为行为不同。</target>
        </trans-unit>
        <trans-unit id="936d372bbc70ed637c45fff1f22618dfd1c94060" translate="yes" xml:space="preserve">
          <source>To substitute a pattern use &lt;a href=&quot;qstring#replace&quot;&gt;QString::replace&lt;/a&gt;().</source>
          <target state="translated">要替换模式，请使用&lt;a href=&quot;qstring#replace&quot;&gt;QString :: replace&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3946a88968d2066ac1aff1497f951d03330010af" translate="yes" xml:space="preserve">
          <source>To subtract times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="translated">要减去精度大于1毫秒的时间，请使用&lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="798f345f952d34a95b336b681e05706f6530acb6" translate="yes" xml:space="preserve">
          <source>To summarize, in case of Hunspell usage, the following paths are considered:</source>
          <target state="translated">综上所述,在使用Hunspell的情况下,考虑以下路径。</target>
        </trans-unit>
        <trans-unit id="83239e7c422b733bf2524023aac2b88b81900904" translate="yes" xml:space="preserve">
          <source>To support all resolutions and devices, several images should be created. A detailed list of what is required is available at &lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html&quot;&gt;Icon files&lt;/a&gt;. The filename is not important, but the actual pixel size is. Just a few icons are required. However, to support both iPhone and iPad, the following images are required:</source>
          <target state="translated">为了支持所有分辨率和设备，应创建多个图像。&lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html&quot;&gt;图标文件中&lt;/a&gt;提供了所需内容的详细列表。文件名并不重要，但实际像素大小很重要。仅需要几个图标。但是，要同时支持iPhone和iPad，需要以下图像：</target>
        </trans-unit>
        <trans-unit id="0a4d6aaaf1f918add49e651e730f283b0c8e30ca" translate="yes" xml:space="preserve">
          <source>To support all resolutions and devices, several images should be created. A detailed list of what is required is available at &lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html#&quot;&gt;Icon files&lt;/a&gt;. The filename is not important, but the actual pixel size is. Just a few icons are required. However, to support both iPhone and iPad, the following images are required:</source>
          <target state="translated">为了支持所有分辨率和设备，应创建多个图像。&lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html#&quot;&gt;图标文件中&lt;/a&gt;提供了所需内容的详细列表。文件名并不重要，但实际像素大小很重要。仅需要几个图标。但是，要同时支持iPhone和iPad，需要以下图像：</target>
        </trans-unit>
        <trans-unit id="4040e37a158a47238f099568f71e632ea1830ac1" translate="yes" xml:space="preserve">
          <source>To support an additional media type, simply set the data in the &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object with the &lt;a href=&quot;qmimedata#setData&quot;&gt;setData()&lt;/a&gt; function, supplying the full MIME type and a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; containing the data in the appropriate format. The following code takes a pixmap from a label and stores it as a Portable Network Graphics (PNG) file in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object:</source>
          <target state="translated">要支持其他媒体类型，只需使用&lt;a href=&quot;qmimedata#setData&quot;&gt;setData（）&lt;/a&gt;函数在&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;对象中设置数据，即可提供完整的MIME类型和包含适当格式数据的&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;。以下代码从标签中获取一个像素图，并将其作为可移植网络图形（PNG）文件存储在&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;对象中：</target>
        </trans-unit>
        <trans-unit id="b64693f525c36b0f741a83f96717dbddc851f56a" translate="yes" xml:space="preserve">
          <source>To support command compression, &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; has an &lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt;() and the virtual function &lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt;(). These functions are used by &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;().</source>
          <target state="translated">为了支持命令压缩，&lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt;具有一个&lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt;（）和虚拟函数&lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt;（）。这些函数由&lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack :: push&lt;/a&gt;（）使用。</target>
        </trans-unit>
        <trans-unit id="ba733596ce5bb052157ec0ccb96296653114401e" translate="yes" xml:space="preserve">
          <source>To support command compression, QUndoCommand has an &lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt;() and the virtual function &lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt;(). These functions are used by &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;().</source>
          <target state="translated">为了支持命令压缩，QUndoCommand具有一个&lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt;（）和虚拟函数&lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt;（）。这些函数由&lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack :: push&lt;/a&gt;（）使用。</target>
        </trans-unit>
        <trans-unit id="b2ab870c93f7392d5b0a39b32cf28672f411c225" translate="yes" xml:space="preserve">
          <source>To support command macros, a &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; object can have any number of child commands. Undoing or redoing the parent command will cause the child commands to be undone or redone. A command can be assigned to a parent explicitly in the constructor. In this case, the command will be owned by the parent.</source>
          <target state="translated">为了支持命令宏，&lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt;对象可以具有任意数量的子命令。撤消或重做父命令将导致子命令被撤消或重做。可以在构造函数中将命令显式分配给父级。在这种情况下，该命令将由父级拥有。</target>
        </trans-unit>
        <trans-unit id="e20f954c36cd329197bc96763762b9008ce3c633" translate="yes" xml:space="preserve">
          <source>To support command macros, a QUndoCommand object can have any number of child commands. Undoing or redoing the parent command will cause the child commands to be undone or redone. A command can be assigned to a parent explicitly in the constructor. In this case, the command will be owned by the parent.</source>
          <target state="translated">为了支持命令宏,一个 QUndoCommand 对象可以拥有任意数量的子命令。撤销或重做父命令将导致子命令被撤销或重做。命令可以在构造函数中明确地分配给父命令。在这种情况下,该命令将由父命令拥有。</target>
        </trans-unit>
        <trans-unit id="14d0ffdd8f6dc6d77cad64ef2e2544268a59fcfb" translate="yes" xml:space="preserve">
          <source>To support earlier iOS versions, one can use the &lt;code&gt;UILaunchImageFile&lt;/code&gt; string in the Info.plist:</source>
          <target state="translated">要支持早期的iOS版本，可以使用Info.plist中的 &lt;code&gt;UILaunchImageFile&lt;/code&gt; 字符串：</target>
        </trans-unit>
        <trans-unit id="cf7f17d4b6412ebc1137ed6f7a663d5feafcd329" translate="yes" xml:space="preserve">
          <source>To support encoding like that of HTML forms, &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; also never decodes the &quot;%2B&quot; sequence to a plus sign nor encode a plus sign. In fact, any &quot;%2B&quot; or &quot;+&quot; sequences found in the keys, values, or query string are left exactly like written (except for the uppercasing of &quot;%2b&quot; to &quot;%2B&quot;).</source>
          <target state="translated">为了支持类似HTML格式的编码，&lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt;也永远不会将&amp;ldquo;％2B&amp;rdquo;序列解码为加号，也不会编码加号。实际上，在键，值或查询字符串中找到的任何&amp;ldquo;％2B&amp;rdquo;或&amp;ldquo; +&amp;rdquo;序列都与写入完全相同（除了将&amp;ldquo;％2b&amp;rdquo;大写为&amp;ldquo;％2B&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="b770fca216029471f9f15bf3999026ff4fb0f0fc" translate="yes" xml:space="preserve">
          <source>To support encoding like that of HTML forms, QUrlQuery also never decodes the &quot;%2B&quot; sequence to a plus sign nor encode a plus sign. In fact, any &quot;%2B&quot; or &quot;+&quot; sequences found in the keys, values, or query string are left exactly like written (except for the uppercasing of &quot;%2b&quot; to &quot;%2B&quot;).</source>
          <target state="translated">为了支持像HTML表格一样的编码,QUrlQuery也从不将&quot;%2B &quot;序列解码为加号,也不对加号进行编码。事实上,在键值、值或查询字符串中发现的任何&quot;%2B &quot;或 &quot;+&quot;序列都会像写的那样被留下(除了&quot;%2b &quot;的大写字母&quot;%2B&quot;)。</target>
        </trans-unit>
        <trans-unit id="4d40ca8dc454f375c4aa650f4079b03230f09940" translate="yes" xml:space="preserve">
          <source>To support the iPhone 6, a launch file (an interface builder .xib file or a storyboard file) should be provided. For more information, see &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/launch-screen/&quot;&gt;Launch Screen&lt;/a&gt;. Assuming that you called the launch file Launch.xib, it can be added to the Info.plist as follows:</source>
          <target state="translated">为了支持iPhone 6，应该提供启动文件（界面生成器.xib文件或情节提要文件）。有关更多信息，请参见&lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/launch-screen/&quot;&gt;启动屏幕&lt;/a&gt;。假设您调用了启动文件Launch.xib，则可以将其添加到Info.plist中，如下所示：</target>
        </trans-unit>
        <trans-unit id="f9b07d42b830833478d51838f091000bb2e474b8" translate="yes" xml:space="preserve">
          <source>To support the iPhone 6, a launch file (an interface builder .xib file or a storyboard file) should be provided. For more information, see &lt;a href=&quot;https://developer.apple.com/library/ios/documentati%20on/userexperience/conceptual/MobileHIG/LaunchImages.html&quot;&gt;Launch Images&lt;/a&gt;. Assuming that you called the launch file Launch.xib, it can be added to the Info.plist as follows:</source>
          <target state="translated">为了支持iPhone 6，应该提供启动文件（界面生成器.xib文件或情节提要文件）。有关更多信息，请参见&lt;a href=&quot;https://developer.apple.com/library/ios/documentati%20on/userexperience/conceptual/MobileHIG/LaunchImages.html&quot;&gt;启动图像&lt;/a&gt;。假设您已调用启动文件Launch.xib，则可以将其添加到Info.plist中，如下所示：</target>
        </trans-unit>
        <trans-unit id="1d116332df081c3faf4c06b8aed13a6b3dd00954" translate="yes" xml:space="preserve">
          <source>To support these use-cases, while still allowing Qt to handle the bulk of the application logic, Qt provides a wide range of platform integration APIs, from simple type conversions to platform specific native interfaces.</source>
          <target state="translated">为了支持这些用例,同时仍然允许Qt处理大部分的应用逻辑,Qt提供了广泛的平台集成API,从简单的类型转换到平台特定的本地接口。</target>
        </trans-unit>
        <trans-unit id="191e67a48ba9d4e31ec9689925718d0933608e13" translate="yes" xml:space="preserve">
          <source>To suppress the output at run-time, install your own message handler with &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;().</source>
          <target state="translated">要在运行时抑制输出，请使用&lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;（）安装您自己的消息处理程序。</target>
        </trans-unit>
        <trans-unit id="8c6402e9d882c05b1ace285877d822ce63cf2cfb" translate="yes" xml:space="preserve">
          <source>To suppress the output at runtime, install your own message handler with &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;().</source>
          <target state="translated">要在运行时禁止输出，请使用&lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;（）安装自己的消息处理程序。</target>
        </trans-unit>
        <trans-unit id="cda8eb58e829d3b87fef4bbf8ce885071d800d94" translate="yes" xml:space="preserve">
          <source>To suppress the re-use of cached results, pass &lt;code&gt;CONFIG+=recheck&lt;/code&gt; to qmake.</source>
          <target state="translated">要禁止重复使用缓存的结果，请将 &lt;code&gt;CONFIG+=recheck&lt;/code&gt; 传递给qmake。</target>
        </trans-unit>
        <trans-unit id="7b5ef05ce24ed6115277030a8731bcf81b012db7" translate="yes" xml:space="preserve">
          <source>To switch back to the default behavior, where the scene graph chooses a graphics API based on the platform and other conditions, set</source>
          <target state="translated">要切换回默认行为,即场景图根据平台和其他条件选择图形API,请设置</target>
        </trans-unit>
        <trans-unit id="47a97d4a801136ad82e372eb334d727fdaa1de2e" translate="yes" xml:space="preserve">
          <source>To synchronously invoke the &lt;code&gt;compute(QString, int, double)&lt;/code&gt; slot on some arbitrary object &lt;code&gt;obj&lt;/code&gt; retrieve its return value:</source>
          <target state="translated">要同步调用任意对象 &lt;code&gt;obj&lt;/code&gt; 上的 &lt;code&gt;compute(QString, int, double)&lt;/code&gt; 插槽，请获取其返回值：</target>
        </trans-unit>
        <trans-unit id="7e17f6e02592d1bb365732229701d0970bf1ee58" translate="yes" xml:space="preserve">
          <source>To take advantage of &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;'s default implementation for the built-in MIME type, new models must provide reimplementations of the following functions:</source>
          <target state="translated">要利用&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;的内置MIME类型的默认实现，新模型必须提供以下功能的重新实现：</target>
        </trans-unit>
        <trans-unit id="92aeee4b5dc5436d95a1da26834632ea9eaa62fb" translate="yes" xml:space="preserve">
          <source>To take advantage of in-app purchasing functionality on iOS, register your application and all the available products in &lt;a href=&quot;http://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;. This guide provides a brief introduction on how to register an application and it's in-app products on App Store.</source>
          <target state="translated">要利用iOS上的应用程序内购买功能，请在&lt;a href=&quot;http://itunesconnect.apple.com&quot;&gt;iTunes Connect中&lt;/a&gt;注册您的应用程序和所有可用产品。本指南简要介绍了如何在App Store中注册应用程序及其应用程序内产品。</target>
        </trans-unit>
        <trans-unit id="8c906271ba6734b5a48aa1a5d932192da173cd3f" translate="yes" xml:space="preserve">
          <source>To take full advantage of this function, assign the result to an &lt;code&gt;auto&lt;/code&gt; variable:</source>
          <target state="translated">要充分利用此功能，请将结果分配给 &lt;code&gt;auto&lt;/code&gt; 变量：</target>
        </trans-unit>
        <trans-unit id="222dbea56966fa8c4076270f3cf1dd6cc13df1f5" translate="yes" xml:space="preserve">
          <source>To take one example, a &lt;code&gt;char *&lt;/code&gt; string is written as a 32-bit integer equal to the length of the string including the '\0' byte, followed by all the characters of the string including the '\0' byte. When reading a &lt;code&gt;char *&lt;/code&gt; string, 4 bytes are read to create the 32-bit length value, then that many characters for the &lt;code&gt;char *&lt;/code&gt; string including the '\0' terminator are read.</source>
          <target state="translated">举一个例子，一个 &lt;code&gt;char *&lt;/code&gt; 字符串被写为一个32位整数，该整数等于包含'\ 0'字节的字符串的长度，其后是包含'\ 0'字节的字符串的所有字符。当读取一个 &lt;code&gt;char *&lt;/code&gt; 串，4个字节被读出以产生32比特长度的值，则该多个字符的 &lt;code&gt;char *&lt;/code&gt; 串包括终止子读取的&amp;ldquo;\ 0&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1beba4fc7bb8fc461fe9b73bccadbc07c1902fd6" translate="yes" xml:space="preserve">
          <source>To test a string against a wildcard expression, use &lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt;(). For example:</source>
          <target state="translated">要针对通配符表达式测试字符串，请使用&lt;a href=&quot;qregexp#exactMatch&quot;&gt;精确&lt;/a&gt;匹配（）。例如：</target>
        </trans-unit>
        <trans-unit id="5836adc8bc62a70bace92a743c85a00840cff2be" translate="yes" xml:space="preserve">
          <source>To test color values for equality, use the &lt;a href=&quot;qml-qtqml-qt#colorEqual-method&quot;&gt;Qt.colorEqual()&lt;/a&gt; function. This allows colors to be accurately compared whether they are in property form or in any of the acceptable string specification forms.</source>
          <target state="translated">要测试颜色值是否相等，请使用&lt;a href=&quot;qml-qtqml-qt#colorEqual-method&quot;&gt;Qt.colorEqual（）&lt;/a&gt;函数。不管颜色是属性形式还是任何可接受的字符串规范形式，这都可以精确地比较颜色。</target>
        </trans-unit>
        <trans-unit id="89d36868a6d3b7e91f05acf15841bec39ff5269f" translate="yes" xml:space="preserve">
          <source>To test whether a given key exists, call &lt;a href=&quot;qsettings#contains&quot;&gt;contains&lt;/a&gt;(). To remove the setting associated with a key, call &lt;a href=&quot;qsettings#remove&quot;&gt;remove&lt;/a&gt;(). To obtain the list of all keys, call &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;(). To remove all keys, call &lt;a href=&quot;qsettings#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">要测试给定键是否存在，请调用&lt;a href=&quot;qsettings#contains&quot;&gt;contains&lt;/a&gt;（）。要删除与键关联的设置，请调用&lt;a href=&quot;qsettings#remove&quot;&gt;remove&lt;/a&gt;（）。要获取所有键的列表，请调用&lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;（）。要删除所有键，请调用&lt;a href=&quot;qsettings#clear&quot;&gt;clear&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a9f3c35f9588afa1f46ff1d47dd632a126c88f4c" translate="yes" xml:space="preserve">
          <source>To test whether a page has been visited or not, call &lt;a href=&quot;qwizard#hasVisitedPage&quot;&gt;hasVisitedPage&lt;/a&gt;(). For example:</source>
          <target state="translated">要测试是否已访问页面，请调用&lt;a href=&quot;qwizard#hasVisitedPage&quot;&gt;hasVisitedPage&lt;/a&gt;（）。例如：</target>
        </trans-unit>
        <trans-unit id="ad2fdbade77f14ca4c491341e583f563b20f4fb1" translate="yes" xml:space="preserve">
          <source>To test whether an instance of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; contains a data type that is compatible with the data type you are interested in, use &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;().</source>
          <target state="translated">要测试&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;实例是否包含与您感兴趣的数据类型兼容的数据类型，请使用&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="6ba45459743d213db1afef3b183409daeb62feca" translate="yes" xml:space="preserve">
          <source>To test whether an item belongs to the set or not, use &lt;a href=&quot;qset#contains&quot;&gt;contains&lt;/a&gt;():</source>
          <target state="translated">要测试某项是否属于集合，请使用&lt;a href=&quot;qset#contains&quot;&gt;contains&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="8db0e22e126e00d9ed6c76671a1106cfb8ee2b27" translate="yes" xml:space="preserve">
          <source>To test whether gamepad input is detected, select &lt;b&gt;Gamepad Controller Settings&lt;/b&gt; from the context menu, select &lt;b&gt;Properties &amp;gt; Test&lt;/b&gt;, and start testing. You can also run the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgamepad-quickgamepad-example.html#&quot;&gt;quickGamepad&lt;/a&gt; example to test.</source>
          <target state="translated">要测试是否检测到游戏手柄输入，请从上下文菜单中选择&lt;b&gt;&amp;ldquo;&lt;/b&gt;游戏&lt;b&gt;手柄控制器设置&amp;rdquo;&lt;/b&gt;，选择&amp;ldquo; &lt;b&gt;属性&amp;rdquo;&amp;gt;&amp;ldquo;测试&amp;rdquo;&lt;/b&gt;，然后开始测试。您也可以运行&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgamepad-quickgamepad-example.html#&quot;&gt;quickGamepad&lt;/a&gt;示例进行测试。</target>
        </trans-unit>
        <trans-unit id="018dbcc46a87f5fc6c1c8ab6dd659331935e8b10" translate="yes" xml:space="preserve">
          <source>To test whether gamepad input is detected, select &lt;b&gt;Gamepad Controller Settings&lt;/b&gt; from the context menu, select &lt;b&gt;Properties &amp;gt; Test&lt;/b&gt;, and start testing. You can also run the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgamepad-quickgamepad-example.html&quot;&gt;quickGamepad&lt;/a&gt; example to test.</source>
          <target state="translated">要测试是否检测到游戏手柄输入，请从上下文菜单中选择&lt;b&gt;&amp;ldquo;&lt;/b&gt;游戏&lt;b&gt;手柄控制器设置&amp;rdquo;&lt;/b&gt;，选择&amp;ldquo;&lt;b&gt;属性&amp;rdquo;&amp;gt;&amp;ldquo;测试&amp;rdquo;&lt;/b&gt;，然后开始测试。您也可以运行&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgamepad-quickgamepad-example.html&quot;&gt;quickGamepad&lt;/a&gt;示例进行测试。</target>
        </trans-unit>
        <trans-unit id="ce545934c30be24a06e0cb0681c75dae980f967d" translate="yes" xml:space="preserve">
          <source>To traverse nodes use &lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt;() to get a node's first child (if any), and &lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt;() to traverse. &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; also provides &lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt;(), &lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt;() and &lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt;(). To find the first child node with a particular node name use &lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt;().</source>
          <target state="translated">要遍历节点，请使用&lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt;（）获取节点的第一个子节点（如果有），然后使用&lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt;（）进行遍历。&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;还提供了&lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt;（），&lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt;（）和&lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt;（）。要查找具有特定节点名称的第一个子节点，请使用&lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="c229d30ab69bdd34c44861c89b77a1bd46d7fbbe" translate="yes" xml:space="preserve">
          <source>To traverse nodes use &lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt;() to get a node's first child (if any), and &lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt;() to traverse. QDomNode also provides &lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt;(), &lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt;() and &lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt;(). To find the first child node with a particular node name use &lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt;().</source>
          <target state="translated">要遍历节点，请使用&lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt;（）获取节点的第一个子节点（如果有），然后使用&lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt;（）进行遍历。QDomNode还提供了&lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt;（），&lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt;（）和&lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt;（）。要查找具有特定节点名称的第一个子节点，请使用&lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="14ea7e1407bcee40f23360a11154300e2ca51217" translate="yes" xml:space="preserve">
          <source>To try out the attached property, we create a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; with two Buttons in &lt;code&gt;main.qml&lt;/code&gt;:</source>
          <target state="translated">要尝试的附加属性，我们创建了一个&lt;a href=&quot;qml-qtquick-row&quot;&gt;排&lt;/a&gt;有两个按钮 &lt;code&gt;main.qml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="969e5a301387ee4b27b541eb6eaed7424fefdf00" translate="yes" xml:space="preserve">
          <source>To turn a standard Qt application into a COM server using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; library you must add &lt;code&gt;axserver&lt;/code&gt; to the QT variable in your &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="translated">若要使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt;库将标准Qt应用程序转换为COM服务器，必须在 &lt;code&gt;.pro&lt;/code&gt; 文件的QT变量中添加 &lt;code&gt;axserver&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce03880f07bbf1f4959794ec3465d369379038c3" translate="yes" xml:space="preserve">
          <source>To turn a standard Qt application into a COM server using the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; library you must add &lt;code&gt;axserver&lt;/code&gt; to the QT variable in your &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="translated">若要使用&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt;库将标准Qt应用程序转换为COM服务器，必须在 &lt;code&gt;.pro&lt;/code&gt; 文件的QT变量中添加 &lt;code&gt;axserver&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71839fd573b414eb70f94151b0d25d4287a6f88b" translate="yes" xml:space="preserve">
          <source>To turn off the prefix display, set this property to an empty string. The default is no prefix. The prefix is not displayed when &lt;a href=&quot;qdoublespinbox#value-prop&quot;&gt;value&lt;/a&gt;() == &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() and &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">要关闭前缀显示，请将此属性设置为空字符串。默认为无前缀。当设置了&lt;a href=&quot;qdoublespinbox#value-prop&quot;&gt;值&lt;/a&gt;（）== &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;最小值&lt;/a&gt;（）和&lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;（）时，不显示前缀。</target>
        </trans-unit>
        <trans-unit id="fefcec6c72e59dd80e574d8686e4ad6a5e6dfaad" translate="yes" xml:space="preserve">
          <source>To turn off the prefix display, set this property to an empty string. The default is no prefix. The prefix is not displayed when &lt;a href=&quot;qspinbox#value-prop&quot;&gt;value&lt;/a&gt;() == &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() and &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">要关闭前缀显示，请将此属性设置为空字符串。默认为无前缀。当设置了&lt;a href=&quot;qspinbox#value-prop&quot;&gt;值&lt;/a&gt;（）== &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;最小值&lt;/a&gt;（）和&lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;（）时，不显示前缀。</target>
        </trans-unit>
        <trans-unit id="80f698bb5de60817817a79e8733121a75f4a70ee" translate="yes" xml:space="preserve">
          <source>To turn off the special-value text display, call this function with an empty string. The default is no special-value text, i.e. the numeric value is shown as usual.</source>
          <target state="translated">要关闭特殊值文本显示,请使用空字符串调用此函数。默认情况下是不显示特殊值文本,也就是像往常一样显示数值。</target>
        </trans-unit>
        <trans-unit id="45e22aef464ae0ad3be5f48c6879fa6b46bfc130" translate="yes" xml:space="preserve">
          <source>To turn off the suffix display, set this property to an empty string. The default is no suffix. The suffix is not displayed for the &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() if &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">要关闭后缀显示，请将此属性设置为空字符串。缺省值为无后缀。如果设置了&lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;（），则不显示&lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;最小值&lt;/a&gt;（）的后缀。</target>
        </trans-unit>
        <trans-unit id="c099d86ebf9b45a1833d500f63a6fa0fe59afaf7" translate="yes" xml:space="preserve">
          <source>To turn off the suffix display, set this property to an empty string. The default is no suffix. The suffix is not displayed for the &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() if &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">要关闭后缀显示，请将此属性设置为空字符串。缺省值为无后缀。如果设置了&lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;（），则不显示&lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;最小值&lt;/a&gt;（）的后缀。</target>
        </trans-unit>
        <trans-unit id="7fc8709b7a0caadbfb000846e267b43f57e03ded" translate="yes" xml:space="preserve">
          <source>To understand this behavior, recall that the empty string matches everywhere, so the above is qualitatively the same as:</source>
          <target state="translated">为了理解这种行为,请回想一下,空字符串在任何地方都是匹配的,所以上面与。</target>
        </trans-unit>
        <trans-unit id="4fdbb14ad9db98c1e62bf6d4261b4cccfa4e87ed" translate="yes" xml:space="preserve">
          <source>To undo a &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;, simply set a null icon in its place:</source>
          <target state="translated">要撤消&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;，只需在其位置设置一个空图标：</target>
        </trans-unit>
        <trans-unit id="1ae05ce85b82a3514063861680a04a9d86f77829" translate="yes" xml:space="preserve">
          <source>To undo a QIcon, simply set a null icon in its place:</source>
          <target state="translated">要撤销一个QIcon,只需在其位置上设置一个空图标即可。</target>
        </trans-unit>
        <trans-unit id="39ca2d2ccc6331f3ca85c3accf27fce072625a12" translate="yes" xml:space="preserve">
          <source>To unload the currently loaded object, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要卸载当前加载的对象，请将此属性设置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcb5ad3078fc97e23c38e06f8b0def582feadbd3" translate="yes" xml:space="preserve">
          <source>To unload the currently loaded object, set this property to an empty string, or set &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; to &lt;code&gt;undefined&lt;/code&gt;. Setting &lt;code&gt;source&lt;/code&gt; to a new URL will also cause the item created by the previous URL to be unloaded.</source>
          <target state="translated">要卸载当前加载的对象，请将此属性设置为空字符串，或将&lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt;设置为 &lt;code&gt;undefined&lt;/code&gt; 。将 &lt;code&gt;source&lt;/code&gt; 设置为新的URL也将导致卸载由先前的URL创建的项目。</target>
        </trans-unit>
        <trans-unit id="7c530a2888515b7ea961ad4b271c61a09bdad3ea" translate="yes" xml:space="preserve">
          <source>To unload the currently loaded object, set this property to an empty string, or set &lt;a href=&quot;qml-qtquick3d-loader3d#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; to &lt;code&gt;undefined&lt;/code&gt;. Setting &lt;code&gt;source&lt;/code&gt; to a new URL will also cause the item created by the previous URL to be unloaded.</source>
          <target state="translated">要卸载当前加载的对象，请将此属性设置为空字符串，或将&lt;a href=&quot;qml-qtquick3d-loader3d#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt;设置为 &lt;code&gt;undefined&lt;/code&gt; 。将 &lt;code&gt;source&lt;/code&gt; 设置为新的URL也将导致卸载由先前的URL创建的项目。</target>
        </trans-unit>
        <trans-unit id="19b16aab0bd2fff4baf0a6606cda935ab0710ca7" translate="yes" xml:space="preserve">
          <source>To unset a previously set buddy, call this function with</source>
          <target state="translated">要取消设置先前设置的好友,可以调用这个函数,并使用</target>
        </trans-unit>
        <trans-unit id="cada0ab71385a7bc1e645a44c1203e88a4bc6b22" translate="yes" xml:space="preserve">
          <source>To unset the request interceptor, set a &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">要取消设置请求拦截器，请设置一个 &lt;code&gt;nullptr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2fdc62af3489621f9edf271851681eb33619e7" translate="yes" xml:space="preserve">
          <source>To update the content of the texture, call &lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt;() explicitly.</source>
          <target state="translated">要更新纹理的内容，请显式调用&lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="450df011222b3d91946d7a17d14d8b0e23b400c1" translate="yes" xml:space="preserve">
          <source>To update the content of the texture, call &lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt;() explicitly. Simply calling &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;() will not update the texture.</source>
          <target state="translated">要更新纹理的内容，请显式调用&lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt;（）。简单地调用&lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;（）不会更新纹理。</target>
        </trans-unit>
        <trans-unit id="ad48bfe8378ab09af1850e79d573150ff4f0cab3" translate="yes" xml:space="preserve">
          <source>To update the currently selected items, use the bitwise OR of &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel::Current&lt;/a&gt; and any of the other &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt;. If you omit the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel::Current&lt;/a&gt; command, a new current selection will be created, and the previous one added to the whole selection. All functions operate on both layers; for example, &lt;a href=&quot;qtablewidget#selectedItems&quot;&gt;selecteditems()&lt;/a&gt; will return items from both layers.</source>
          <target state="translated">要更新当前选择的项目，请使用&lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel :: Current&lt;/a&gt;和其他&lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt;的按位或。如果省略&lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel :: Current&lt;/a&gt;命令，将创建一个新的当前选择，并将前一个选择添加到整个选择中。所有功能都在两层上运行。例如，&lt;a href=&quot;qtablewidget#selectedItems&quot;&gt;selecteditems（）&lt;/a&gt;将从两层返回项目。</target>
        </trans-unit>
        <trans-unit id="984cb0adbf60c8b27fb328300cbf8521faf1b8b9" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;, you must inherit both a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class and &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;, and use the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro.</source>
          <target state="translated">要使用&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;，必须继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;派生的类和&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;，并使用&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）宏。</target>
        </trans-unit>
        <trans-unit id="8249bb13edcf63efce302738767bc58acbfef77c" translate="yes" xml:space="preserve">
          <source>To use D-Bus functionality, you need to install the libdbus-1 library, for example through Homebrew, Fink or MacPorts. You may want to include those libraries in your application's bundle if you're deploying to other systems. Additionally, note that there is no system bus on macOS and that the session bus will only be started after launchd is configured to manage it.</source>
          <target state="translated">要使用D-Bus功能,你需要安装libdbus-1库,例如通过Homebrew、Fink或MacPorts。如果你要部署到其他系统,你可能需要在你的应用程序的捆绑包中包含这些库。此外,请注意,macOS上没有系统总线,只有在启动d配置好管理它之后,会话总线才会被启动。</target>
        </trans-unit>
        <trans-unit id="76911248ea76ee85dbac86151c4fa6e5f7366d6e" translate="yes" xml:space="preserve">
          <source>To use QQmlParserStatus, you must inherit both a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class and QQmlParserStatus, and use the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro.</source>
          <target state="translated">若要使用QQmlParserStatus，必须同时继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;派生的类和QQmlParserStatus，并使用&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）宏。</target>
        </trans-unit>
        <trans-unit id="378a3f1a414093385a9d06b63b24da29da93fc56" translate="yes" xml:space="preserve">
          <source>To use Qt Help classes, add this directive into the C++ files:</source>
          <target state="translated">要使用Qt帮助类,请在C++文件中添加此指令。</target>
        </trans-unit>
        <trans-unit id="c0bcc3d12a06341a94d7bfe8d823090f8300a4d6" translate="yes" xml:space="preserve">
          <source>To use Qt Network Authorization classes, add this directive into C++ files:</source>
          <target state="translated">要使用Qt网络授权类,请在C++文件中添加此指令。</target>
        </trans-unit>
        <trans-unit id="9448677fd6e60d0a26397cc18d3e19ab2bc9edc7" translate="yes" xml:space="preserve">
          <source>To use Qt Network classes,add this directive into the C++ files:</source>
          <target state="translated">要使用Qt网络类,请在C++文件中添加此指令。</target>
        </trans-unit>
        <trans-unit id="e41d5440e0b997de4cc633c883c5d3775478c1bf" translate="yes" xml:space="preserve">
          <source>To use a &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; with a &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt; or &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit::inputMask&lt;/a&gt;, you need to ensure that the model provided to &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; contains valid entries. You can use the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; to ensure that the &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;'s model contains only valid entries.</source>
          <target state="translated">要将&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;与&lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt;或&lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit :: inputMask一起使用&lt;/a&gt;，您需要确保提供给&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;的模型包含有效条目。您可以使用&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;来确保&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;的模型仅包含有效条目。</target>
        </trans-unit>
        <trans-unit id="2895526cb27a58e9f2c27fd99ed1c3363ea5d1da" translate="yes" xml:space="preserve">
          <source>To use a compiled state machine in QML, you can register it as a QML type:</source>
          <target state="translated">要在QML中使用编译后的状态机,可以将其注册为QML类型。</target>
        </trans-unit>
        <trans-unit id="d7814902fb0cdd976d8b884c9ff43167eb034f7b" translate="yes" xml:space="preserve">
          <source>To use a custom enumeration as a data type, its class must be registered and the enumeration must also be declared with &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;() to register it with Qt's meta object system. For example, the &lt;code&gt;Message&lt;/code&gt; class below has a &lt;code&gt;Status&lt;/code&gt; enum:</source>
          <target state="translated">要将自定义枚举用作数据类型，必须注册其类，并且还必须使用&lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;（）声明该枚举，以将其注册到Qt的元对象系统。例如，下面的 &lt;code&gt;Message&lt;/code&gt; 类具有一个 &lt;code&gt;Status&lt;/code&gt; 枚举：</target>
        </trans-unit>
        <trans-unit id="c0beff402e8643d6977d672f115c803b44f0a4e4" translate="yes" xml:space="preserve">
          <source>To use a custom version of ANGLE, set the &lt;code&gt;ANGLE_DIR&lt;/code&gt; environment variable to point to the ANGLE source tree before building Qt.</source>
          <target state="translated">要使用ANGLE的自定义版本，请在构建Qt之前将 &lt;code&gt;ANGLE_DIR&lt;/code&gt; 环境变量设置为指向ANGLE源代码树。</target>
        </trans-unit>
        <trans-unit id="b13bba4339f077507ad5f6f705b3ef41bd4e2e90" translate="yes" xml:space="preserve">
          <source>To use a custom widget for the final column when you select an item overload this function and return a widget.</source>
          <target state="translated">当你选择一个项目时,要为最后一列使用一个自定义部件,重载这个函数并返回一个部件。</target>
        </trans-unit>
        <trans-unit id="397ba603fbe9dabab31029d89f202f1a9480b748" translate="yes" xml:space="preserve">
          <source>To use a dedicated thread pool, you can pass the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; as the first argument:</source>
          <target state="translated">要使用专用线程池，可以将&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;作为第一个参数传递：</target>
        </trans-unit>
        <trans-unit id="5b0352dd058496e18226b115a21e65f9f6196355" translate="yes" xml:space="preserve">
          <source>To use a different selection mode as described in &lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt;, an &lt;a href=&quot;qml-qtqml-models-itemselectionmodel&quot;&gt;ItemSelectionModel&lt;/a&gt; must by set to the selection.</source>
          <target state="translated">为在描述使用不同的选择模式&lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;的SelectionMode&lt;/a&gt;，一个&lt;a href=&quot;qml-qtqml-models-itemselectionmodel&quot;&gt;ItemSelectionModel&lt;/a&gt;必须通过集到该选择。</target>
        </trans-unit>
        <trans-unit id="03d5049d4d23314bea0376907b00890ee40f040f" translate="yes" xml:space="preserve">
          <source>To use a different selection mode as described in &lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt;, an ItemSelectionModel must by set to the selection.</source>
          <target state="translated">为在描述使用不同的选择模式&lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;的SelectionMode&lt;/a&gt;，一个ItemSelectionModel必须通过集到该选择。</target>
        </trans-unit>
        <trans-unit id="f02935baa67b9780550d68fe6b7e9fca6a104a46" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; object and add a transition to it from another state. Example:</source>
          <target state="translated">要使用最终状态，请创建&lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt;对象，然后从另一个状态向其添加过渡。例：</target>
        </trans-unit>
        <trans-unit id="3bb4747b55a68c6e897f0a7283e335f1fb2a7bf7" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; object and add a transition to it from another state.</source>
          <target state="translated">要使用最终状态，请创建一个&lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt;对象，并从另一个状态向其添加一个过渡。</target>
        </trans-unit>
        <trans-unit id="0acc27c98ea8b2f0437ea954d520ead05489d1be" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a FinalState object and add a transition to it from another state.</source>
          <target state="translated">要使用最终状态,您可以创建一个FinalState对象,并从另一个状态向其添加一个过渡。</target>
        </trans-unit>
        <trans-unit id="59e8a38757aed8ce58458e7b0d48e421c5a41e5d" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a QFinalState object and add a transition to it from another state. Example:</source>
          <target state="translated">要使用最终状态,您可以创建一个QFinalState对象,并从另一个状态向其添加一个过渡。例子:</target>
        </trans-unit>
        <trans-unit id="5221bd5b6617c0b473516e17c87fbf084ffc2491" translate="yes" xml:space="preserve">
          <source>To use a plugin created in this way, it is necessary to ensure that the plugin is located on a path that</source>
          <target state="translated">要使用以这种方式创建的插件,必须确保该插件的路径为</target>
        </trans-unit>
        <trans-unit id="3913887631eb2f7bf573aa0e7b909323b02bf65c" translate="yes" xml:space="preserve">
          <source>To use a texture, call the &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;() function. The texture parameters specifying how the texture is bound, can be specified with &lt;a href=&quot;qsgtexture#setMipmapFiltering&quot;&gt;setMipmapFiltering&lt;/a&gt;(), &lt;a href=&quot;qsgtexture#setFiltering&quot;&gt;setFiltering&lt;/a&gt;(), &lt;a href=&quot;qsgtexture#setHorizontalWrapMode&quot;&gt;setHorizontalWrapMode&lt;/a&gt;() and &lt;a href=&quot;qsgtexture#setVerticalWrapMode&quot;&gt;setVerticalWrapMode&lt;/a&gt;(). The texture will internally try to store these values to minimize the OpenGL state changes when the texture is bound.</source>
          <target state="translated">要使用纹理，请调用&lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;（）函数。可以使用&lt;a href=&quot;qsgtexture#setMipmapFiltering&quot;&gt;setMipmapFiltering&lt;/a&gt;（），&lt;a href=&quot;qsgtexture#setFiltering&quot;&gt;setFiltering&lt;/a&gt;（），&lt;a href=&quot;qsgtexture#setHorizontalWrapMode&quot;&gt;setHorizo​​ntalWrapMode&lt;/a&gt;（）和&lt;a href=&quot;qsgtexture#setVerticalWrapMode&quot;&gt;setVerticalWrapMode&lt;/a&gt;（）来指定指定纹理绑定方式的纹理参数。绑定纹理时，纹理将在内部尝试存储这些值以最小化OpenGL状态更改。</target>
        </trans-unit>
        <trans-unit id="41744f73fcba7fe874a972ccf80441eff44ac85a" translate="yes" xml:space="preserve">
          <source>To use an OpenGL ES 2.0 emulator instead of ANGLE, use the configure options: &lt;code&gt;-opengl es2 -no-angle&lt;/code&gt;.</source>
          <target state="translated">要使用OpenGL ES 2.0仿真器而不是ANGLE，请使用配置选项： &lt;code&gt;-opengl es2 -no-angle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b0579cb77aeab952b52234dc84c347ab7d952c5" translate="yes" xml:space="preserve">
          <source>To use an earlier Qt version to build Qt Webengine:</source>
          <target state="translated">要使用早期的Qt版本来构建Qt Webengine。</target>
        </trans-unit>
        <trans-unit id="0426658bfd567e8799bc9024e99526966fae4dbc" translate="yes" xml:space="preserve">
          <source>To use an enum as a &lt;a href=&quot;qflags&quot;&gt;flags&lt;/a&gt; type in QML, see &lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt;().</source>
          <target state="translated">要将枚举用作QML中的&lt;a href=&quot;qflags&quot;&gt;标志&lt;/a&gt;类型，请参见&lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8ab26b6926e3afdf9dde46dca2f8a592658715e6" translate="yes" xml:space="preserve">
          <source>To use categories they must first be initialized.</source>
          <target state="translated">要使用类别,必须首先对其进行初始化。</target>
        </trans-unit>
        <trans-unit id="478df5b9d78f693d34e96188ebe07f4b49bde6ef" translate="yes" xml:space="preserve">
          <source>To use forward-only queries, you must build the QPSQL plugin with PostreSQL client library version 9.2 or later. If the plugin is built with an older version, then forward-only mode will not be available - calling &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery::setForwardOnly&lt;/a&gt;() with &lt;code&gt;true&lt;/code&gt; will have no effect.</source>
          <target state="translated">要使用仅向前查询，必须使用PostreSQL客户端库9.2或更高版本构建QPSQL插件。如果插件与旧版本构建，则只能向前的模式将无法使用-调用&lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery :: setForwardOnly&lt;/a&gt;（）与 &lt;code&gt;true&lt;/code&gt; 将没有任何效果。</target>
        </trans-unit>
        <trans-unit id="685cfa05e6b2a917599c59fc57d89dc5dbb92cd8" translate="yes" xml:space="preserve">
          <source>To use image-based lighting only on one material instead of a whole scene, or use a separate light probe for a model already illuminated by image-based lighting, set the image as the &lt;a href=&quot;qml-qtquick3d-material#lightProbe-prop&quot;&gt;light probe&lt;/a&gt; for the material.</source>
          <target state="translated">要仅在一种材料上而不是整个场景上使用基于图像的照明，或者对已被基于图像的照明照明的模型使用单独的光探测器，请将图像设置为该材料的&lt;a href=&quot;qml-qtquick3d-material#lightProbe-prop&quot;&gt;光探测器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f85e79a8cc75e311b0ac45850b3e89f6dd8d62c" translate="yes" xml:space="preserve">
          <source>To use it, simply instanitate a &lt;code&gt;QtTextInputMethodManager&lt;/code&gt; object as a child of the &lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt;.</source>
          <target state="translated">要使用它，只需将 &lt;code&gt;QtTextInputMethodManager&lt;/code&gt; 对象实例化为QWaylandCompositor的子代&lt;a href=&quot;qwaylandcompositor&quot;&gt;即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="820cb88bd50ec84721a281d1122d678e0e71e83b" translate="yes" xml:space="preserve">
          <source>To use it, simply instanitate a &lt;code&gt;QtTextInputMethodManager&lt;/code&gt; object inside the &lt;a href=&quot;qml-qtwayland-compositor-waylandcompositor&quot;&gt;WaylandCompositor&lt;/a&gt;.</source>
          <target state="translated">要使用它，只需instanitate一个 &lt;code&gt;QtTextInputMethodManager&lt;/code&gt; 内部对象&lt;a href=&quot;qml-qtwayland-compositor-waylandcompositor&quot;&gt;WaylandCompositor&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d688d5abf5feb300268eb8733fbca6dd915313bd" translate="yes" xml:space="preserve">
          <source>To use one of the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; threads, subclass &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; and implement the run() virtual function. Then create an object of that class and pass it to &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;().</source>
          <target state="translated">要使用&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;线程之一，可以将QRunnable子类&lt;a href=&quot;qrunnable&quot;&gt;化，&lt;/a&gt;并实现run（）虚拟函数。然后创建该类的对象，并将其传递给&lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: start&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="343c74bc8d34c8e5550fcce0dd82ce8328142135" translate="yes" xml:space="preserve">
          <source>To use one of the QThreadPool threads, subclass &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; and implement the run() virtual function. Then create an object of that class and pass it to &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;().</source>
          <target state="translated">要使用QThreadPool线程之一，请子类&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;并实现run（）虚拟函数。然后创建该类的对象，并将其传递给&lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: start&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="21e854fc19b380d691384b2a21a3e14495109af6" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;https://developer.android.com/studio/run/emulator&quot;&gt;Android Emulator&lt;/a&gt;, install it by entering:</source>
          <target state="translated">要使用&lt;a href=&quot;https://developer.android.com/studio/run/emulator&quot;&gt;Android模拟器&lt;/a&gt;，请输入以下命令进行安装：</target>
        </trans-unit>
        <trans-unit id="049ccb50bda349d80cf720596fb3161681cb16ee" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; we need a view and a delegate. In this snippet we see the setting up of a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with a &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; model and a delegate.</source>
          <target state="translated">要使用&lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel，&lt;/a&gt;我们需要一个视图和一个委托。在此代码片段中，我们看到了带有&lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;模型和委托的&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;的设置。</target>
        </trans-unit>
        <trans-unit id="a6c8fc94388c48a3bd5b33683aea813e536d206f" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module, a QML document needs to import it. The import syntax looks like this:</source>
          <target state="translated">要使用&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;模块，需要导入QML文档。导入语法如下所示：</target>
        </trans-unit>
        <trans-unit id="0be0413152d42ee898ca17f0148a1d0fab6d6991" translate="yes" xml:space="preserve">
          <source>To use the ActiveX controls, e.g. to embed them in a web page, use the &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; HTML tag.</source>
          <target state="translated">要使用ActiveX控件，例如将它们嵌入网页中，请使用 &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; HTML标记。</target>
        </trans-unit>
        <trans-unit id="c76e4aae03b98d3c436cd5142916d4f5fc437578" translate="yes" xml:space="preserve">
          <source>To use the C++ library in your application, add the following configuration option to your &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">要在您的应用程序中使用C ++库，请将以下配置选项添加到您的 &lt;code&gt;.pro&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="76241299c38669707a87f52de4db47a12f9eacf1" translate="yes" xml:space="preserve">
          <source>To use the ReviewModel we need a view and a delegate. In this snippet we see the setting up of a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with a ReviewModel model and a delegate.</source>
          <target state="translated">要使用ReviewModel，我们需要一个视图和一个委托。在此代码片段中，我们看到了带有ReviewModel模型和委托的&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;的设置。</target>
        </trans-unit>
        <trans-unit id="1da950b6f08eaf72e543ceb56d8ffcc2bad7ccdc" translate="yes" xml:space="preserve">
          <source>To use the classes of the module in your application you need the following import statement in your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">要在应用程序中使用模块的类，您需要在 &lt;code&gt;.qml&lt;/code&gt; 文件中使用以下import语句：</target>
        </trans-unit>
        <trans-unit id="58d86d380934adfbe2a679037ebef6a09be9fbf2" translate="yes" xml:space="preserve">
          <source>To use the dense variant, either set the &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; environment variable to &lt;code&gt;Dense&lt;/code&gt;, or specify &lt;code&gt;Variant=Dense&lt;/code&gt; in the &lt;a href=&quot;qtquickcontrols2-configuration&quot;&gt;qtquickcontrols2.conf&lt;/a&gt; file. The default value in both cases is &lt;code&gt;Normal&lt;/code&gt;.</source>
          <target state="translated">要使用密集变体，请将 &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; 环境变量设置为 &lt;code&gt;Dense&lt;/code&gt; ，或在&lt;a href=&quot;qtquickcontrols2-configuration&quot;&gt;qtquickcontrols2.conf&lt;/a&gt;文件中指定 &lt;code&gt;Variant=Dense&lt;/code&gt; 。两种情况下的默认值为 &lt;code&gt;Normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="103ba7027ead8005da5e81822bbb1e189e476e98" translate="yes" xml:space="preserve">
          <source>To use the dense variant, either set the &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; environment variable to &lt;code&gt;Dense&lt;/code&gt;, or specify &lt;code&gt;Variant=Dense&lt;/code&gt; in the &lt;a href=&quot;qtquickcontrols2-configuration#&quot;&gt;qtquickcontrols2.conf&lt;/a&gt; file. The default value in both cases is &lt;code&gt;Normal&lt;/code&gt;.</source>
          <target state="translated">要使用密集变体，请将 &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; 环境变量设置为 &lt;code&gt;Dense&lt;/code&gt; ，或在&lt;a href=&quot;qtquickcontrols2-configuration#&quot;&gt;qtquickcontrols2.conf&lt;/a&gt;文件中指定 &lt;code&gt;Variant=Dense&lt;/code&gt; 。两种情况下的默认值为 &lt;code&gt;Normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22d62a72da6be9a18d7984d7d5125b66cf714ae1" translate="yes" xml:space="preserve">
          <source>To use the direct approach, we include the &lt;code&gt;ui_calculatorform.h&lt;/code&gt; file directly in &lt;code&gt;main.cpp&lt;/code&gt;:</source>
          <target state="translated">要使用直接方法，我们将 &lt;code&gt;ui_calculatorform.h&lt;/code&gt; 文件直接包含在 &lt;code&gt;main.cpp&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="7b710e32fa581660dbe45b7f113394ead79a0107" translate="yes" xml:space="preserve">
          <source>To use the effects, simply add a specific effect declaration to the QML scene and configure the effects properties. Effects have one or more source properties for specifying the visual input for which the effect is applied to. The altered visual output is then presented in the effect item itself. The source can be another, often hidden, item in the QML scene. More complex effects can have multiple sources. The source item type can be any QML type, even video or another effect. Pipelining multiple effects together is a simple way to create even more impressive output.</source>
          <target state="translated">要使用效果,只需在QML场景中添加一个特定的效果声明并配置效果属性。效果有一个或多个源属性,用于指定应用效果的视觉输入。改变后的视觉输出将在效果项中呈现。源可以是QML场景中的另一个,通常是隐藏的项目。更复杂的效果可以有多个源。源项类型可以是任何QML类型,甚至是视频或其他效果。将多个特效一起进行管道化是一种简单的方法,可以创建更令人印象深刻的输出。</target>
        </trans-unit>
        <trans-unit id="cf83c4fb7a90fa15be55dcb6a8a7c979d6d17ca7" translate="yes" xml:space="preserve">
          <source>To use the effects, simply add a specific effect declaration to the QML scene and configure the effects properties. The source item type can be any QML type, even video or another effect. Pipelining multiple effects together is a simple way to create even more impressive output.</source>
          <target state="translated">要使用效果,只需在QML场景中添加一个特定的效果声明,并配置效果属性即可。源项目类型可以是任何QML类型,甚至是视频或其他效果。将多个特效一起进行管道化是一种简单的方法,可以创建更令人印象深刻的输出。</target>
        </trans-unit>
        <trans-unit id="46cd92203ecb434c4945ae7b1d1b8d2f09035e0e" translate="yes" xml:space="preserve">
          <source>To use the embedded MySQL server, simply link the Qt plugin to &lt;code&gt;libmysqld&lt;/code&gt; instead of &lt;code&gt;libmysqlclient&lt;/code&gt;. This can be done by adding &lt;code&gt;MYSQL_LIBS=-lmysqld&lt;/code&gt; to the configure command line.</source>
          <target state="translated">要使用嵌入式MySQL服务器，只需将Qt插件链接到 &lt;code&gt;libmysqld&lt;/code&gt; 而不是 &lt;code&gt;libmysqlclient&lt;/code&gt; 即可。这可以通过将 &lt;code&gt;MYSQL_LIBS=-lmysqld&lt;/code&gt; 添加到configure命令行来完成。</target>
        </trans-unit>
        <trans-unit id="2fa0361192c7cf57fa972caba0d397a46f9ee9bd" translate="yes" xml:space="preserve">
          <source>To use the precompiled header also for C files on MSVC nmake target, add &lt;code&gt;precompile_header_c&lt;/code&gt; to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable. If the header is used also for C++ and it contains C++ keywords/includes, enclose them with &lt;code&gt;#ifdef __cplusplus&lt;/code&gt;).</source>
          <target state="translated">要对MSVC nmake目标上的C文件也使用预编译头，请将 &lt;code&gt;precompile_header_c&lt;/code&gt; 添加到&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt;变量。如果标头也用于C ++，并且包含C ++关键字/包含，请用 &lt;code&gt;#ifdef __cplusplus&lt;/code&gt; 括起来。</target>
        </trans-unit>
        <trans-unit id="344a787f4e29b583b54f38c395f0fff093e3c085" translate="yes" xml:space="preserve">
          <source>To use the property-based API, construct an instance of &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;() to show the message. The simplest configuration is to set only the &lt;a href=&quot;qmessagebox#text-prop&quot;&gt;message text&lt;/a&gt; property.</source>
          <target state="translated">要使用基于属性的API，请构造&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;（）来显示消息。最简单的配置是仅设置&lt;a href=&quot;qmessagebox#text-prop&quot;&gt;消息文本&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="ef3cfae68dd2cafec4dfaa3b875d81fa6a940069" translate="yes" xml:space="preserve">
          <source>To use the property-based API, construct an instance of QMessageBox, set the desired properties, and call &lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;() to show the message. The simplest configuration is to set only the &lt;a href=&quot;qmessagebox#text-prop&quot;&gt;message text&lt;/a&gt; property.</source>
          <target state="translated">要使用基于属性的API，请构造QMessageBox的实例，设置所需的属性，然后调用&lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;（）来显示消息。最简单的配置是仅设置&lt;a href=&quot;qmessagebox#text-prop&quot;&gt;消息文本&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="c0b925d5b3c9a4d9c57852b2e8125042b71cd1b8" translate="yes" xml:space="preserve">
          <source>To use the routing services hosted on ArcGIS Online with the Esri plugin, a token is required. You can &lt;a href=&quot;https://developers.arcgis.com/authentication/accessing-arcgis-online-services/#registering-your-application&quot;&gt;obtain a token for testing purposes&lt;/a&gt;, or you can sign up for an &lt;a href=&quot;http://www.arcgis.com/features/plans/pricing.html&quot;&gt;ArcGIS Online subscription&lt;/a&gt;.</source>
          <target state="translated">要将ArcGIS Online上托管的路由服务与Esri插件一起使用，需要令牌。您可以&lt;a href=&quot;https://developers.arcgis.com/authentication/accessing-arcgis-online-services/#registering-your-application&quot;&gt;获取令牌进行测试&lt;/a&gt;，也可以注册&lt;a href=&quot;http://www.arcgis.com/features/plans/pricing.html&quot;&gt;ArcGIS Online订阅&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="417c98f5639fc35a51a40ede06107e29bc7e65a8" translate="yes" xml:space="preserve">
          <source>To use the serial port in your application, add the following include statement:</source>
          <target state="translated">要在应用程序中使用串口,请添加以下include语句。</target>
        </trans-unit>
        <trans-unit id="43e81533d2fbc73c4ca18c25775d8e420f50420b" translate="yes" xml:space="preserve">
          <source>To use the single inheritance approach, we subclass a standard Qt widget and include a private instance of the form's user interface object. This can take the form of:</source>
          <target state="translated">为了使用单继承方法,我们将一个标准的Qt widget子类化,并包含一个表单的用户界面对象的私有实例。这可以采取以下形式。</target>
        </trans-unit>
        <trans-unit id="0ee9fc8b0f1ad02829f7b1b312b3024d2bb8d393" translate="yes" xml:space="preserve">
          <source>To use the type &lt;code&gt;T&lt;/code&gt; in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;, using &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() is sufficient. To use the type &lt;code&gt;T&lt;/code&gt; in queued signal and slot connections, &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; must be called before the first connection is established.</source>
          <target state="translated">要在&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;中使用类型 &lt;code&gt;T&lt;/code&gt; ，使用&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）就足够了。要在排队的信号和插槽连接中使用类型 &lt;code&gt;T&lt;/code&gt; ，必须在建立第一个连接之前调用 &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9de8e8ee2b47d5a8cd3c36208ea0078089081bd" translate="yes" xml:space="preserve">
          <source>To use the type &lt;code&gt;T&lt;/code&gt; in &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;, using &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() is sufficient. To use the type &lt;code&gt;T&lt;/code&gt; in queued signal and slot connections, &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; must be called before the first connection is established.</source>
          <target state="translated">要在&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;中使用类型 &lt;code&gt;T&lt;/code&gt; ，使用&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）就足够了。要在排队的信号和插槽连接中使用类型 &lt;code&gt;T&lt;/code&gt; ，必须在建立第一个连接之前调用 &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="850319b4468306fedcb7f275e497362e32ebfa16" translate="yes" xml:space="preserve">
          <source>To use the types from the particles module, import the module with the following line:</source>
          <target state="translated">要使用particles模块中的类型,请用下面的行来导入该模块。</target>
        </trans-unit>
        <trans-unit id="3b39c88a51efba6c207d034e25f91b6872df297c" translate="yes" xml:space="preserve">
          <source>To use these classes in your application, use the following include statement:</source>
          <target state="translated">要在应用程序中使用这些类,请使用下面的include语句。</target>
        </trans-unit>
        <trans-unit id="184bba78b981ec64eefd9eaf5b04cd3cee5b7e3e" translate="yes" xml:space="preserve">
          <source>To use this class, create a &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;, and call its &lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt;() function with a timeout interval and with a pointer to a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. When the timer times out it will send a timer event to the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. The timer can be stopped at any time using &lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;(). &lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; for a timer that is running; i.e. it has been started, has not reached the timeout time, and has not been stopped. The timer's ID can be retrieved using &lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt;().</source>
          <target state="translated">要使用此类，请创建&lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;，并使用超时间隔和指向&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类的指针来调用其&lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt;（）函数。当计时器超时时，它将向&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类发送计时器事件。可以使用&lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;（）随时停止计时器。&lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt;（）对于正在运行的计时器返回 &lt;code&gt;true&lt;/code&gt; ；也就是说，它已经开始，尚未达到超时时间，并且尚未停止。可以使用&lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt;（）检索计时器的ID 。</target>
        </trans-unit>
        <trans-unit id="4c0600a28a6a9822c9d56b4d2be78631c9a7ad04" translate="yes" xml:space="preserve">
          <source>To use this class, create a QBasicTimer, and call its &lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt;() function with a timeout interval and with a pointer to a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. When the timer times out it will send a timer event to the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. The timer can be stopped at any time using &lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;(). &lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; for a timer that is running; i.e. it has been started, has not reached the timeout time, and has not been stopped. The timer's ID can be retrieved using &lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt;().</source>
          <target state="translated">要使用此类，请创建一个QBasicTimer，并使用超时间隔和指向&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类的指针来调用其&lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt;（）函数。当计时器超时时，它将向&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类发送计时器事件。可以使用&lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;（）随时停止计时器。&lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt;（）对于正在运行的计时器返回 &lt;code&gt;true&lt;/code&gt; ；即它已经开始，尚未达到超时时间，并且尚未停止。可以使用&lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt;（）检索计时器的ID 。</target>
        </trans-unit>
        <trans-unit id="fa7ed1f55e406b6c6db3565ddd474805feccf469" translate="yes" xml:space="preserve">
          <source>To use this element, you will need to import the module with the following line:</source>
          <target state="translated">要使用这个元素,你需要用下面的行来导入模块。</target>
        </trans-unit>
        <trans-unit id="9a95d69a1c2b41a6b3d4c6d8baf39bc6881cd64b" translate="yes" xml:space="preserve">
          <source>To use this function for receiving data from other apps on iOS you also need to add the custom scheme to the &lt;code&gt;CFBundleURLSchemes&lt;/code&gt; list in your Info.plist file:</source>
          <target state="translated">要使用此功能从iOS上的其他应用程序接收数据，您还需要将自定义方案添加到Info.plist文件中的 &lt;code&gt;CFBundleURLSchemes&lt;/code&gt; 列表中：</target>
        </trans-unit>
        <trans-unit id="73b277f8f9ae72172b58f5e1cff31f7db42f554f" translate="yes" xml:space="preserve">
          <source>To use this type, you will need to import the module with the following line:</source>
          <target state="translated">要使用这种类型,你需要用下面的行来导入模块。</target>
        </trans-unit>
        <trans-unit id="55eb20a07882b3d8f2bbe8f1eadb08f3ba2dd7b1" translate="yes" xml:space="preserve">
          <source>To utilise the key frame animation framework in the Qt 3D Animation module the animator component in use needs to be provided with the key frame animation data. The animation data is provided by one of the concrete subclasses of &lt;a href=&quot;qt3danimation-qabstractanimationclip&quot;&gt;QAbstractAnimationClip&lt;/a&gt;:</source>
          <target state="translated">为了在Qt 3D动画模块中利用关键帧动画框架，需要为使用中的动画师组件提供关键帧动画数据。动画数据由&lt;a href=&quot;qt3danimation-qabstractanimationclip&quot;&gt;QAbstractAnimationClip&lt;/a&gt;的具体子类之一提供：</target>
        </trans-unit>
        <trans-unit id="b0c7458be20a616f43538630f45be95d1340aa6f" translate="yes" xml:space="preserve">
          <source>To utilise the key frame animation framework in the Qt 3D Animation module the animator component in use needs to be provided with the key frame animation data. The animation data is provided by one of the concrete subclasses of QAbstractAnimationClip:</source>
          <target state="translated">为了利用Qt三维动画模块中的关键帧动画框架,需要为使用中的动画器组件提供关键帧动画数据。动画数据由QAbstractAnimationClip的一个具体子类提供。</target>
        </trans-unit>
        <trans-unit id="824ce92a42c8638032b0343562dafdccf383390b" translate="yes" xml:space="preserve">
          <source>To verify that the test actually catches something for which you needed the fix, checkout the branch you based your own branch on: &lt;code&gt;git checkout 5.14&lt;/code&gt;</source>
          <target state="translated">要验证测试是否确实捕获了需要您修复的内容，请检出您自己的分支所基于的分支： &lt;code&gt;git checkout 5.14&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6f632bbbaee16009860140a064727b43661dde9" translate="yes" xml:space="preserve">
          <source>To verify that your connection does support passing file descriptors, check if the &lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection::UnixFileDescriptorPassing&lt;/a&gt; capability is set with &lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection::connectionCapabilities&lt;/a&gt;(). If the flag is not active, then you will not be able to make calls to methods that have &lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt; as arguments or even embed such a type in a variant. You will also not receive calls containing that type.</source>
          <target state="translated">要验证您的连接是否确实支持传递文件描述符，请检查是否使用&lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection :: connectionCapabilities&lt;/a&gt;（）设置了&lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection :: UnixFileDescriptorPassing&lt;/a&gt;功能。如果该标记未处于活动状态，则将无法调用以&lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt;作为参数的方法，甚至无法将这种类型嵌入变量中。您也将不会收到包含该类型的呼叫。</target>
        </trans-unit>
        <trans-unit id="7b8dc37a3a38ef751a5a5c0330180f6b9f3ff62c" translate="yes" xml:space="preserve">
          <source>To verify that your connection does support passing file descriptors, check if the &lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection::UnixFileDescriptorPassing&lt;/a&gt; capability is set with &lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection::connectionCapabilities&lt;/a&gt;(). If the flag is not active, then you will not be able to make calls to methods that have QDBusUnixFileDescriptor as arguments or even embed such a type in a variant. You will also not receive calls containing that type.</source>
          <target state="translated">要验证您的连接是否确实支持传递文件描述符，请检查是否使用&lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection :: connectionCapabilities&lt;/a&gt;（）设置了&lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection :: UnixFileDescriptorPassing&lt;/a&gt;功能。如果该标记未处于活动状态，则将无法调用以QDBusUnixFileDescriptor作为参数的方法，甚至不能将此类嵌入到变量中。您也将不会收到包含该类型的呼叫。</target>
        </trans-unit>
        <trans-unit id="94c1704445b1fd34fcad3f9fd79128904f210914" translate="yes" xml:space="preserve">
          <source>To view a list of all Qt examples, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/all-examples.html&quot;&gt;List of Qt Examples&lt;/a&gt; page.</source>
          <target state="translated">要查看所有Qt示例的&lt;a href=&quot;https://doc.qt.io/qt-5.13/all-examples.html&quot;&gt;列表&lt;/a&gt;，请访问Qt示例列表页面。</target>
        </trans-unit>
        <trans-unit id="4afa6566757495ba1b88931af545be0c55e96d31" translate="yes" xml:space="preserve">
          <source>To view a list of all Qt examples, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.15/all-examples.html&quot;&gt;List of Qt Examples&lt;/a&gt; page.</source>
          <target state="translated">要查看所有Qt示例的&lt;a href=&quot;https://doc.qt.io/qt-5.15/all-examples.html&quot;&gt;列表&lt;/a&gt;，请访问Qt示例列表页面。</target>
        </trans-unit>
        <trans-unit id="7c2eaa872d0a871ad62aa589280dbce1166379dc" translate="yes" xml:space="preserve">
          <source>To view a list of all Qt examples, visit the &lt;a href=&quot;https://doc.qt.io/qt-6.0/all-examples.html&quot;&gt;List of Qt Examples&lt;/a&gt; page.</source>
          <target state="translated">要查看所有Qt示例的&lt;a href=&quot;https://doc.qt.io/qt-6.0/all-examples.html&quot;&gt;列表&lt;/a&gt;，请访问Qt示例列表页面。</target>
        </trans-unit>
        <trans-unit id="fecbbab395fb7597b6d5c5d6063a069e293c79bd" translate="yes" xml:space="preserve">
          <source>To view other examples and tutorials, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtexamplesandtutorials.html&quot;&gt;Qt Examples And Tutorials&lt;/a&gt; page.</source>
          <target state="translated">要查看其他示例和教程，请访问&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtexamplesandtutorials.html&quot;&gt;Qt示例和教程&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="52e96393890003805d6f591b202be72ccea35c1e" translate="yes" xml:space="preserve">
          <source>To view other examples and tutorials, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtexamplesandtutorials.html&quot;&gt;Qt Examples And Tutorials&lt;/a&gt; page.</source>
          <target state="translated">要查看其他示例和教程，请访问&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtexamplesandtutorials.html&quot;&gt;Qt示例和教程&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="089b33fa3f98aa94781c372974de1b91076e169b" translate="yes" xml:space="preserve">
          <source>To view other examples and tutorials, visit the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtexamplesandtutorials.html&quot;&gt;Qt Examples And Tutorials&lt;/a&gt; page.</source>
          <target state="translated">要查看其他示例和教程，请访问&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtexamplesandtutorials.html&quot;&gt;Qt示例和教程&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="f788a9c0bb649b6cf10cedb47a42bb1ae130b68e" translate="yes" xml:space="preserve">
          <source>To visualize a scene, you start by constructing a &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; object, passing the address of the scene you want to visualize to &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;'s constructor. Alternatively, you can call &lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt;() to set the scene at a later point. After you call &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(), the view will by default scroll to the center of the scene and display any items that are visible at this point. For example:</source>
          <target state="translated">为了使场景可视化，首先要构造一个&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;对象，然后将要可视化的场景的地址传递给&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;的构造函数。另外，您可以调用&lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt;（）在以后设置场景。调用&lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;（）后，默认情况下，视图将滚动到场景的中心并显示此时可见的所有项目。例如：</target>
        </trans-unit>
        <trans-unit id="65fbf460b08cf68551627adf9da756630f58734c" translate="yes" xml:space="preserve">
          <source>To visualize a scene, you start by constructing a QGraphicsView object, passing the address of the scene you want to visualize to QGraphicsView's constructor. Alternatively, you can call &lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt;() to set the scene at a later point. After you call &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(), the view will by default scroll to the center of the scene and display any items that are visible at this point. For example:</source>
          <target state="translated">为了使场景可视化，首先要构造一个QGraphicsView对象，然后将要可视化的场景的地址传递给QGraphicsView的构造函数。另外，您可以调用&lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt;（）在以后设置场景。调用&lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;（）后，默认情况下，视图将滚动到场景的中心并显示此时可见的所有项目。例如：</target>
        </trans-unit>
        <trans-unit id="a6c5dcf2267f5ca4bfbe067d2112b28133c1c357" translate="yes" xml:space="preserve">
          <source>To visualize data, bind the view's &lt;code&gt;model&lt;/code&gt; property to a model and the &lt;code&gt;delegate&lt;/code&gt; property to a component or another compatible type.</source>
          <target state="translated">要可视化数据，请将视图的 &lt;code&gt;model&lt;/code&gt; 属性绑定到模型，并将 &lt;code&gt;delegate&lt;/code&gt; 属性绑定到组件或其他兼容类型。</target>
        </trans-unit>
        <trans-unit id="1393acc65180219eb38330e3066cba95a0abc01b" translate="yes" xml:space="preserve">
          <source>To visualize the various aspects of the scene graph's default renderer, the &lt;code&gt;QSG_VISUALIZE&lt;/code&gt; environment variable can be set to one of the values detailed in each section below. We provide examples of the output of some of the variables using the following QML code:</source>
          <target state="translated">为了可视化场景图的默认渲染器的各个方面，可以将 &lt;code&gt;QSG_VISUALIZE&lt;/code&gt; 环境变量设置为以下每个部分中详细介绍的值之一。我们使用以下QML代码提供一些变量输出的示例：</target>
        </trans-unit>
        <trans-unit id="e90e04ec004d0da467b9b0e22ea0f621a70575f5" translate="yes" xml:space="preserve">
          <source>To visualize, imagine the layout as a box that shrinks as much as possible, attempting to</source>
          <target state="translated">想象一下,把布局想象成一个尽可能缩小的盒子,试图做到</target>
        </trans-unit>
        <trans-unit id="e15614b678ff9a09a45f2db62de9adca4fc04c0e" translate="yes" xml:space="preserve">
          <source>To visualize, let's use a shader that assigns red with alpha &lt;code&gt;0.5&lt;/code&gt; to &lt;code&gt;BASE_COLOR&lt;/code&gt;:</source>
          <target state="translated">为了可视化，让我们使用一个着色器，将带有alpha &lt;code&gt;0.5&lt;/code&gt; 的红色分配给 &lt;code&gt;BASE_COLOR&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="511bc3811233860a0375ae99e9149f6cdb2210da" translate="yes" xml:space="preserve">
          <source>To work around this limitation with the functor-based syntax, connect the signal to a lambda function that calls the slot. See the section above, &lt;a href=&quot;#making-connections-to-lambda-expressions&quot;&gt;Making Connections to Lambda Expressions&lt;/a&gt;.</source>
          <target state="translated">要使用基于函子的语法解决此限制，请将信号连接到调用该插槽的lambda函数。请参见上面的&lt;a href=&quot;#making-connections-to-lambda-expressions&quot;&gt;&amp;ldquo;与Lambda表达式建立连接&lt;/a&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="d3b0a2adbbb477bda091b2f3102d564ab43ecb48" translate="yes" xml:space="preserve">
          <source>To work around this limitation with the functor-based syntax, connect the signal to a lambda function that calls the slot. See the section above, &lt;a href=&quot;signalsandslots-syntaxes#making-connections-to-lambda-expressions&quot;&gt;Making Connections to Lambda Expressions&lt;/a&gt;.</source>
          <target state="translated">要使用基于函子的语法解决此限制，请将信号连接到调用该插槽的lambda函数。请参阅上面的&lt;a href=&quot;signalsandslots-syntaxes#making-connections-to-lambda-expressions&quot;&gt;&amp;ldquo;与Lambda表达式建立连接&lt;/a&gt;&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="ef88f4b6bec02d94449203c96edb9b22ebe91314" translate="yes" xml:space="preserve">
          <source>To work correctly, the code that accesses the reading should ensure the &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt;() signal has been emitted.</source>
          <target state="translated">为了正常工作，访问读数的代码应确保已发出&lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="4d0d973f62091bd2c9ddb04f2f2a498ef0c6cc59" translate="yes" xml:space="preserve">
          <source>To write XML document with &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;, you start a document with the &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument()&lt;/a&gt; function and end it with &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument()&lt;/a&gt;, which implicitly closes all remaining open tags. Element tags are opened with &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument()&lt;/a&gt; and followed by &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute()&lt;/a&gt; or &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes()&lt;/a&gt;, element content, and then &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument()&lt;/a&gt;. Also, &lt;a href=&quot;qxmlstreamwriter#writeEmptyElement&quot;&gt;writeEmptyElement()&lt;/a&gt; can be used to write empty elements.</source>
          <target state="translated">与写XML文档&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;，你开始与一个文件&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument（）&lt;/a&gt;函数，结束于&lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument（） &lt;/a&gt;，它隐式地关闭所有剩余打开的标签。元素标签以&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument（）&lt;/a&gt;打开，然后是&lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute（）&lt;/a&gt;或&lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes（）&lt;/a&gt;，元素内容，然后是&lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument（）&lt;/a&gt;。另外，&lt;a href=&quot;qxmlstreamwriter#writeEmptyElement&quot;&gt;writeEmptyElement（）&lt;/a&gt;可用于写入空元素。</target>
        </trans-unit>
        <trans-unit id="44d61d053cc733b1248243f09754643c6240fc41" translate="yes" xml:space="preserve">
          <source>To write a QML extension plugin:</source>
          <target state="translated">要写一个QML扩展插件。</target>
        </trans-unit>
        <trans-unit id="de95b8233d3e5f5e70066e4fb5cfeb52910e0c33" translate="yes" xml:space="preserve">
          <source>To write a document, construct a &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; object with either a file name or a device object, and specify the document format to be written. You can construct a writer and set the format using &lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat&lt;/a&gt;() later.</source>
          <target state="translated">要编写文档，请使用文件名或设备对象构造&lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt;对象，并指定要编写的文档格式。您可以稍后构造一个编写器并使用&lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat&lt;/a&gt;（）设置格式。</target>
        </trans-unit>
        <trans-unit id="6788ebb2ed3e3208d56cf93ea1fc78f734ec7d72" translate="yes" xml:space="preserve">
          <source>To write a document, construct a QTextDocumentWriter object with either a file name or a device object, and specify the document format to be written. You can construct a writer and set the format using &lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat&lt;/a&gt;() later.</source>
          <target state="translated">要编写文档，请使用文件名或设备对象构造QTextDocumentWriter对象，并指定要编写的文档格式。您可以稍后构造一个编写器并使用&lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat&lt;/a&gt;（）设置格式。</target>
        </trans-unit>
        <trans-unit id="8f811397afed2cb47c8ba4e5f825f4a9aa33af4d" translate="yes" xml:space="preserve">
          <source>To write a regexp that matches one of the words 'mail'</source>
          <target state="translated">要编写一个与 &quot;邮件 &quot;一词相匹配的regexp。</target>
        </trans-unit>
        <trans-unit id="d668ae9b72586d0e01024591f6ae089c920f8e53" translate="yes" xml:space="preserve">
          <source>To write an SVG file, you first need to configure the output by setting the &lt;a href=&quot;qsvggenerator#fileName-prop&quot;&gt;fileName&lt;/a&gt; or &lt;a href=&quot;qsvggenerator#outputDevice-prop&quot;&gt;outputDevice&lt;/a&gt; properties. It is usually necessary to specify the size of the drawing by setting the &lt;a href=&quot;qsvggenerator#size-prop&quot;&gt;size&lt;/a&gt; property, and in some cases where the drawing will be included in another, the &lt;a href=&quot;qsvggenerator#viewBox&quot;&gt;viewBox&lt;/a&gt; property also needs to be set.</source>
          <target state="translated">要写入SVG文件，首先需要通过设置&lt;a href=&quot;qsvggenerator#fileName-prop&quot;&gt;fileName&lt;/a&gt;或&lt;a href=&quot;qsvggenerator#outputDevice-prop&quot;&gt;outputDevice&lt;/a&gt;属性来配置输出。通常，必须通过设置&lt;a href=&quot;qsvggenerator#size-prop&quot;&gt;size&lt;/a&gt;属性来指定图形的大小，并且在某些情况下该图形将包含在另一个图形中，还需要设置&lt;a href=&quot;qsvggenerator#viewBox&quot;&gt;viewBox&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="1ff7ab0e0f88d36c110662824d6087f8f8d65efb" translate="yes" xml:space="preserve">
          <source>To write text, we can use operator&amp;lt;&amp;lt;(), which is overloaded to take a &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; on the left and various data types (including &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) on the right:</source>
          <target state="translated">要编写文本，我们可以使用operator &amp;lt;&amp;lt;（），将其重载以在左侧获取&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;，在右侧获取各种数据类型（包括&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="23e1b37d5c4ed0409f8139e7100f82436e5ff069" translate="yes" xml:space="preserve">
          <source>To write your own graphics item, you first create a subclass of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, and then start by implementing its two pure virtual public functions: &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), which returns an estimate of the area painted by the item, and &lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. For example:</source>
          <target state="translated">要编写自己的图形项，首先要创建&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;的子类，然后从实现其两个纯虚拟公共函数开始：&lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（）返回该项所绘制区域的估计值，&lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;（）实现实际绘画。例如：</target>
        </trans-unit>
        <trans-unit id="cea180d1d184e15d7144597db1726fde9bbed5f4" translate="yes" xml:space="preserve">
          <source>To write your own graphics item, you first create a subclass of QGraphicsItem, and then start by implementing its two pure virtual public functions: &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), which returns an estimate of the area painted by the item, and &lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. For example:</source>
          <target state="translated">要编写自己的图形项目，首先创建QGraphicsItem的子类，然后从实现其两个纯虚拟公共函数开始：&lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（）返回该项目绘制区域的估计值，&lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;（）实现实际绘画。例如：</target>
        </trans-unit>
        <trans-unit id="8ffbd4be9d7c65240d26efbfd1286b9644aab813" translate="yes" xml:space="preserve">
          <source>To write your own image handler, you must at least reimplement &lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;() and &lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt;(). Then create a &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; that can create the handler. Finally, install your plugin, and &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; will then automatically load the plugin, and start using it.</source>
          <target state="translated">要编写自己的图像处理程序，您至少必须重新实现&lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;（）和&lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt;（）。然后创建一个可以创建处理程序的&lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;。最后，安装您的插件，然后&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;和&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;将自动加载该插件，并开始使用它。</target>
        </trans-unit>
        <trans-unit id="77066c9c7b343f150cf625d0587af3812bf41d04" translate="yes" xml:space="preserve">
          <source>To write your own layout class, you must define the following:</source>
          <target state="translated">要编写自己的布局类,必须定义以下内容。</target>
        </trans-unit>
        <trans-unit id="6975707254a8fcea83152ff2c6cfecd6d26e54da" translate="yes" xml:space="preserve">
          <source>To write your own painted item, you first create a subclass of &lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt;, and then start by implementing its only pure virtual public function: &lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. The painting will be inside the rectangle spanning from 0,0 to &lt;a href=&quot;qquickitem#width-prop&quot;&gt;width&lt;/a&gt;(),&lt;a href=&quot;qquickitem#height-prop&quot;&gt;height&lt;/a&gt;().</source>
          <target state="translated">要编写自己的绘画项目，您首先要创建&lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt;的子类，然后首先实现其唯一的纯虚拟公共函数：&lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt;（），该函数实现实际的绘画。绘画将在从0,0到&lt;a href=&quot;qquickitem#width-prop&quot;&gt;width&lt;/a&gt;（），&lt;a href=&quot;qquickitem#height-prop&quot;&gt;height&lt;/a&gt;（）的矩形内。</target>
        </trans-unit>
        <trans-unit id="ff17f66ad71b433f6689532b57f3243c17392478" translate="yes" xml:space="preserve">
          <source>To write your own painted item, you first create a subclass of QQuickPaintedItem, and then start by implementing its only pure virtual public function: &lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. The painting will be inside the rectangle spanning from 0,0 to &lt;a href=&quot;qquickitem#width-prop&quot;&gt;width&lt;/a&gt;(),&lt;a href=&quot;qquickitem#height-prop&quot;&gt;height&lt;/a&gt;().</source>
          <target state="translated">要编写自己的绘画项目，您首先要创建QQuickPaintedItem的子类，然后首先实现其唯一的纯虚拟公共函数：&lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt;（），该函数实现实际的绘画。绘画将位于从0,0到&lt;a href=&quot;qquickitem#width-prop&quot;&gt;width&lt;/a&gt;（），&lt;a href=&quot;qquickitem#height-prop&quot;&gt;height&lt;/a&gt;（）的矩形内。</target>
        </trans-unit>
        <trans-unit id="87eeb785062498f696b73923696a8109f78f94a9" translate="yes" xml:space="preserve">
          <source>ToSuperClass</source>
          <target state="translated">ToSuperClass</target>
        </trans-unit>
        <trans-unit id="f226ae58fcb61b05bcd36afd0024cffe9789ceaf" translate="yes" xml:space="preserve">
          <source>Together with &lt;a href=&quot;qimage#dotsPerMeterX&quot;&gt;dotsPerMeterX&lt;/a&gt;(), this number defines the intended scale and aspect ratio of the image, and determines the scale at which &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will draw graphics on the image. It does not change the scale or aspect ratio of the image when it is rendered on other paint devices.</source>
          <target state="translated">该数字与&lt;a href=&quot;qimage#dotsPerMeterX&quot;&gt;dotsPerMeterX&lt;/a&gt;（）一起，定义了图像的预期比例和纵横比，并确定了&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;在图像上绘制图形的比例。在其他绘画设备上渲染图像时，它不会更改图像的比例或纵横比。</target>
        </trans-unit>
        <trans-unit id="326469acfb7fcd9ed0f1478d14069648562217f8" translate="yes" xml:space="preserve">
          <source>Together with &lt;a href=&quot;qimage#dotsPerMeterY&quot;&gt;dotsPerMeterY&lt;/a&gt;(), this number defines the intended scale and aspect ratio of the image, and determines the scale at which &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will draw graphics on the image. It does not change the scale or aspect ratio of the image when it is rendered on other paint devices.</source>
          <target state="translated">该数字与&lt;a href=&quot;qimage#dotsPerMeterY&quot;&gt;dotsPerMeterY&lt;/a&gt;（）一起定义了图像的预期比例和纵横比，并确定了&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;在图像上绘制图形的比例。在其他绘画设备上渲染图像时，它不会更改图像的比例或纵横比。</target>
        </trans-unit>
        <trans-unit id="c572278745917e1ae4e6d230fbaa968d92087735" translate="yes" xml:space="preserve">
          <source>Together with the &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; classes, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; form the basis for Qt's paint system. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is the class used to perform drawing operations. &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; represents a device that can be painted on using a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;. &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; provides the interface that the painter uses to draw onto different types of devices. If the painter is active, &lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt;() returns the paint device on which the painter paints, and &lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() returns the paint engine that the painter is currently operating on. For more information, see the &lt;a href=&quot;paintsystem#&quot;&gt;Paint System&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;与&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;和&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;类一起构成Qt绘画系统的基础。&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;是用于执行绘图操作的类。&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;表示可以使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;进行绘制的设备。&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;提供了画家用来在不同类型的设备上绘制的界面。如果画家是活动的，则&lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt;（）返回画家在其上进行绘画的绘画设备，而&lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;（）返回画家当前正在对其进行操作的画家引擎。有关更多信息，请参见&lt;a href=&quot;paintsystem#&quot;&gt;绘画系统&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c76b45237f9cbc041b1cd1ad3ab9741cab756d4e" translate="yes" xml:space="preserve">
          <source>Together with the &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; classes, QPainter form the basis for Qt's paint system. QPainter is the class used to perform drawing operations. &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; represents a device that can be painted on using a QPainter. &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; provides the interface that the painter uses to draw onto different types of devices. If the painter is active, &lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt;() returns the paint device on which the painter paints, and &lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() returns the paint engine that the painter is currently operating on. For more information, see the &lt;a href=&quot;paintsystem&quot;&gt;Paint System&lt;/a&gt;.</source>
          <target state="translated">QPainter与&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;和&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;类一起构成Qt绘画系统的基础。QPainter是用于执行绘图操作的类。&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;表示可以使用QPainter进行绘制的设备。&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;提供了画家用来在不同类型的设备上绘制的界面。如果画家是活动的，则&lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt;（）返回画家在其上进行绘画的画家设备，而&lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;（）返回画家当前正在对其进行操作的画家引擎。有关更多信息，请参见&lt;a href=&quot;paintsystem&quot;&gt;绘画系统&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d693173f9723e832cbda3f7a11b385518ba5c2f5" translate="yes" xml:space="preserve">
          <source>Together with the position and orientation, the frustum defines which parts of a scene are visible to the Camera and how they are projected onto the 2D surface. The different Camera subtypes provide multiple options to determine the shape of the Camera's frustum.</source>
          <target state="translated">底座与位置和方向一起,定义了摄像机可以看到的场景部分,以及如何将它们投射到2D表面上。不同的摄像机子类型提供了多个选项来确定摄像机的外壳形状。</target>
        </trans-unit>
        <trans-unit id="a3988daf6125d691299e1ec35d91cd86e435d5c1" translate="yes" xml:space="preserve">
          <source>Together, signals and slots make up a powerful component programming mechanism.</source>
          <target state="translated">信号和插槽共同构成了一个强大的组件编程机制。</target>
        </trans-unit>
        <trans-unit id="356e402bdf439584606d4cd3e654fb391f1b33f2" translate="yes" xml:space="preserve">
          <source>Toggle between showing and hiding the controls for the hovered audio or video element. (Added in Qt 5.6)</source>
          <target state="translated">在显示和隐藏悬停的音频或视频元素的控件之间切换。(在Qt 5.6中添加)</target>
        </trans-unit>
        <trans-unit id="7c9f0b4876c9d510d059cca56dd77f9dab0879c9" translate="yes" xml:space="preserve">
          <source>Toggle input mode</source>
          <target state="translated">切换输入模式</target>
        </trans-unit>
        <trans-unit id="47afa10d70f6f3886f861822999a8534d4f5129e" translate="yes" xml:space="preserve">
          <source>Toggle mode</source>
          <target state="translated">切换模式</target>
        </trans-unit>
        <trans-unit id="4578157972c9fd8aa8a73d6882a0fd2fd1208c57" translate="yes" xml:space="preserve">
          <source>Toggle text case</source>
          <target state="translated">切换文字大小写</target>
        </trans-unit>
        <trans-unit id="d21e7aa6de1c18e04b0d4efb131bb132f031194b" translate="yes" xml:space="preserve">
          <source>Toggle the play/pause state of the hovered audio or video element. (Added in Qt 5.6)</source>
          <target state="translated">切换悬停的音频或视频元素的播放/暂停状态。(在Qt 5.6中添加)</target>
        </trans-unit>
        <trans-unit id="d8c581b35108757519130ecf7b6312935e8e9f21" translate="yes" xml:space="preserve">
          <source>Toggle the window state to/from full screen.</source>
          <target state="translated">窗口状态切换到/从全屏切换。</target>
        </trans-unit>
        <trans-unit id="e3c84e179b1811da43ca74efc52a5fbb480673ec" translate="yes" xml:space="preserve">
          <source>Toggle whether the hovered audio or video should loop on completetion or not. (Added in Qt 5.6)</source>
          <target state="translated">切换悬停的音频或视频是否应该在完成时循环。(在Qt 5.6中添加)</target>
        </trans-unit>
        <trans-unit id="d478a266235e71d641c30ad3f5e9b906715534ac" translate="yes" xml:space="preserve">
          <source>ToggleButton</source>
          <target state="translated">ToggleButton</target>
        </trans-unit>
        <trans-unit id="9ae19050ed3d83f85185b0647f4fc78a2d68f5c9" translate="yes" xml:space="preserve">
          <source>ToggleButton (QML type)</source>
          <target state="translated">ToggleButton(QML类型)</target>
        </trans-unit>
        <trans-unit id="6bffc59b3164c5e9f93f213e13c4abee9ad681c7" translate="yes" xml:space="preserve">
          <source>ToggleButton QML Type</source>
          <target state="translated">ToggleButton QML类型</target>
        </trans-unit>
        <trans-unit id="7c18bde8358081cf97a50e8eff795cde03642c8a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle</source>
          <target state="translated">ToggleButtonStyle</target>
        </trans-unit>
        <trans-unit id="6f6da0ef22c4830654430193a613b0e2695aa82f" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle (QML type)</source>
          <target state="translated">ToggleButtonStyle (QML类型)</target>
        </trans-unit>
        <trans-unit id="64669707e85a9d6bc766fa8a8fa585bb18e1518f" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle QML Type</source>
          <target state="translated">ToggleButtonStyle QML类型</target>
        </trans-unit>
        <trans-unit id="a6d1a7ec39843d20439143e9d0c9bf5c76dc90d2" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.checkedDropShadowColor</source>
          <target state="translated">ToggleButtonStyle.checkedDropShadowColor</target>
        </trans-unit>
        <trans-unit id="3bdacc4c90285c78240c0f787efd961c44a7e818" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.checkedGradient</source>
          <target state="translated">ToggleButtonStyle.checkedGradient</target>
        </trans-unit>
        <trans-unit id="36c5a90dfd461d51d845132165ecbde08dbef39a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.control</source>
          <target state="translated">ToggleButtonStyle.control</target>
        </trans-unit>
        <trans-unit id="1ee8b2f1957863cb25b56b26a420ff6d64eaaa11" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.inactiveGradient</source>
          <target state="translated">ToggleButtonStyle.inactiveGradient</target>
        </trans-unit>
        <trans-unit id="6724f97ab383ad4f8451fce3948a9802afb6b85d" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.uncheckedDropShadowColor</source>
          <target state="translated">ToggleButtonStyle.uncheckedDropShadowColor</target>
        </trans-unit>
        <trans-unit id="efb54e5ec55ebdbe466554c4a62cc58964553d0a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.uncheckedGradient</source>
          <target state="translated">ToggleButtonStyle.uncheckedGradient</target>
        </trans-unit>
        <trans-unit id="3788f8c57ddc92538477f8cfdee3affa7fec67ec" translate="yes" xml:space="preserve">
          <source>Toggled by &lt;a href=&quot;qgraphicswidget#layoutDirection-prop&quot;&gt;setLayoutDirection&lt;/a&gt;(). Inherited from the parent/scene. If set, the widget's layout will order horizontally arranged widgets from right to left.</source>
          <target state="translated">由&lt;a href=&quot;qgraphicswidget#layoutDirection-prop&quot;&gt;setLayoutDirection&lt;/a&gt;（）切换。从父级/场景继承。如果设置，则小部件的布局将按从右到左的顺序排列水平排列的小部件。</target>
        </trans-unit>
        <trans-unit id="bc09fd8a130b622944e3e9ae8c15485712a7c2f1" translate="yes" xml:space="preserve">
          <source>Toggles automatic signal relaying from the real object (see object()).</source>
          <target state="translated">切换真实对象的自动信号中继(见object())。</target>
        </trans-unit>
        <trans-unit id="668e155ff332d015983c56f5717f37ef48f9f7c2" translate="yes" xml:space="preserve">
          <source>Toggles boldness for the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">切换选项或光标位置的粗体。需要 &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 。（在Qt 5.10中添加）</target>
        </trans-unit>
        <trans-unit id="d07850e2c30aed2640e1640cd55c00c5c565e1f6" translate="yes" xml:space="preserve">
          <source>Toggles insertion of the Byte Order Mark on</source>
          <target state="translated">切换插入的字节顺序标记。</target>
        </trans-unit>
        <trans-unit id="62593e70a0519a949e934c2de5e31b3f7d1ffcc9" translate="yes" xml:space="preserve">
          <source>Toggles italics for the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">切换斜体以进行选择或在光标位置。需要 &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 。（在Qt 5.10中添加）</target>
        </trans-unit>
        <trans-unit id="0956c85b541011583adfefe8b5a7e11ea77fb1dd" translate="yes" xml:space="preserve">
          <source>Toggles selection of the current item.</source>
          <target state="translated">切换当前项目的选择。</target>
        </trans-unit>
        <trans-unit id="2c695116ac4a629b5d8fac031887530af2833379" translate="yes" xml:space="preserve">
          <source>Toggles striking through the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">在选择范围内或光标位置处进行切换。需要 &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 。（在Qt 5.10中添加）</target>
        </trans-unit>
        <trans-unit id="b6f817519d5d482ac9f3f48f61e96144a098a130" translate="yes" xml:space="preserve">
          <source>Toggles the &lt;a href=&quot;qml-qt-labs-platform-menuitem#checked-prop&quot;&gt;checked&lt;/a&gt; state to its opposite state.</source>
          <target state="translated">将&lt;a href=&quot;qml-qt-labs-platform-menuitem#checked-prop&quot;&gt;检查&lt;/a&gt;状态切换为相反状态。</target>
        </trans-unit>
        <trans-unit id="19fcae93ee1a1558b52df0646585e0b0c275948e" translate="yes" xml:space="preserve">
          <source>Toggles the action and emits &lt;a href=&quot;qml-qtquick-controls2-action#toggled-signal&quot;&gt;toggled()&lt;/a&gt; if enabled, with an optional</source>
          <target state="translated">切换动作并发出&lt;a href=&quot;qml-qtquick-controls2-action#toggled-signal&quot;&gt;toggled（）（&lt;/a&gt;如果启用），并带有可选</target>
        </trans-unit>
        <trans-unit id="772cd23bbff7b3d6a882e66434affaaf207229d1" translate="yes" xml:space="preserve">
          <source>Toggles the checked state of the button.</source>
          <target state="translated">切换按钮的选中状态。</target>
        </trans-unit>
        <trans-unit id="c592dd605a3313ed01ed8e2ac518a09f2eae16d6" translate="yes" xml:space="preserve">
          <source>Toggles the current shift state.</source>
          <target state="translated">切换当前的移位状态。</target>
        </trans-unit>
        <trans-unit id="64e1f4f5cde88ae764f6d07400822a7b14f28d40" translate="yes" xml:space="preserve">
          <source>Toggles the direction of the timeline. If the direction was Forward, it becomes Backward, and vice verca.</source>
          <target state="translated">切换时间轴的方向。如果方向是向前,则变为向后,反之亦然。</target>
        </trans-unit>
        <trans-unit id="d2fc743690ee6cc000a719a6055ce8c1c3300da3" translate="yes" xml:space="preserve">
          <source>Toggles the paused state of the asynchronous computation. In other words, if the computation is currently paused, calling this function resumes it; if the computation is running, it becomes paused. This is a convenience method for calling &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;(!&lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt;()).</source>
          <target state="translated">切换异步计算的暂停状态。换句话说，如果当前正在暂停计算，则调用此函数将继续执行；否则，将继续执行该函数。如果计算正在运行，它将暂停。这是调用&lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;（！&lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt;（））的便捷方法。</target>
        </trans-unit>
        <trans-unit id="3048c15fde57b385ddab5ca256344256b116799a" translate="yes" xml:space="preserve">
          <source>Toggles the paused state of the asynchronous computation. In other words, if the computation is currently paused, calling this function resumes it; if the computation is running, it is paused. This is a convenience method for calling &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;(!&lt;a href=&quot;qfuture#isPaused&quot;&gt;isPaused&lt;/a&gt;()).</source>
          <target state="translated">切换异步计算的暂停状态。换句话说，如果当前正在暂停计算，则调用此函数将继续执行；否则，将继续执行该函数。如果计算正在运行，它将暂停。这是调用&lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;（！&lt;a href=&quot;qfuture#isPaused&quot;&gt;isPaused&lt;/a&gt;（））的便捷方法。</target>
        </trans-unit>
        <trans-unit id="abf7d6c09e8c07360f215b3b7b3f6ae896375760" translate="yes" xml:space="preserve">
          <source>Toggles the state of a checkable button.</source>
          <target state="translated">切换可选中按钮的状态。</target>
        </trans-unit>
        <trans-unit id="b9f8e2a323b0a695dde25875b692f01f01a6ca43" translate="yes" xml:space="preserve">
          <source>Toggles the status of player between playing and paused states.</source>
          <target state="translated">在播放和暂停状态之间切换播放器的状态。</target>
        </trans-unit>
        <trans-unit id="238ef78bf77d38bb5bc11b9521c363eb544ef749" translate="yes" xml:space="preserve">
          <source>Toggles the suspended state of the asynchronous computation. In other words, if the computation is currently suspending or suspended, calling this function resumes it; if the computation is running, it is suspended. This is a convenience method for calling &lt;a href=&quot;qfuture#setSuspended&quot;&gt;setSuspended&lt;/a&gt;(!(&lt;a href=&quot;qfuture#isSuspending&quot;&gt;isSuspending&lt;/a&gt;() || &lt;a href=&quot;qfuture#isSuspended&quot;&gt;isSuspended&lt;/a&gt;())).</source>
          <target state="translated">切换异步计算的暂停状态。换句话说，如果当前正在暂停计算或暂停计算，则调用此函数将恢复计算；否则，将继续执行该计算。如果计算正在运行，它将被挂起。这是调用&lt;a href=&quot;qfuture#setSuspended&quot;&gt;setSuspended&lt;/a&gt;（！（&lt;a href=&quot;qfuture#isSuspending&quot;&gt;isSuspending&lt;/a&gt;（）|| &lt;a href=&quot;qfuture#isSuspended&quot;&gt;isSuspended&lt;/a&gt;（））的便捷方法。</target>
        </trans-unit>
        <trans-unit id="1df9f31611060bb47fbd238a4f538d7f3a379814" translate="yes" xml:space="preserve">
          <source>Toggles the suspended state of the asynchronous computation. In other words, if the computation is currently suspending or suspended, calling this function resumes it; if the computation is running, it is suspended. This is a convenience method for calling &lt;a href=&quot;qfuturewatcher#setSuspended&quot;&gt;setSuspended&lt;/a&gt;(!(&lt;a href=&quot;qfuturewatcher#isSuspending&quot;&gt;isSuspending&lt;/a&gt;() || &lt;a href=&quot;qfuturewatcher#isSuspended&quot;&gt;isSuspended&lt;/a&gt;())).</source>
          <target state="translated">切换异步计算的暂停状态。换句话说，如果当前正在暂停计算或暂停计算，则调用此函数将恢复计算；否则，将继续执行该计算。如果计算正在运行，它将被挂起。这是调用&lt;a href=&quot;qfuturewatcher#setSuspended&quot;&gt;setSuspended&lt;/a&gt;（！（&lt;a href=&quot;qfuturewatcher#isSuspending&quot;&gt;isSuspending&lt;/a&gt;（）|| &lt;a href=&quot;qfuturewatcher#isSuspended&quot;&gt;isSuspended&lt;/a&gt;（））的便捷方法。</target>
        </trans-unit>
        <trans-unit id="2cedefd190aeb7bf3bf0ab0b419806f549be15f8" translate="yes" xml:space="preserve">
          <source>Toggles underlining of the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">切换所选内容的下划线或光标位置。需要 &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 。（在Qt 5.10中添加）</target>
        </trans-unit>
        <trans-unit id="f7ab63c152bfa7e9e01eb000bbb2e65ae9fa0349" translate="yes" xml:space="preserve">
          <source>Token credentials have been received and authenticated calls are allowed.</source>
          <target state="translated">已收到令牌凭证,允许进行认证呼叫。</target>
        </trans-unit>
        <trans-unit id="484d190283694902dd0f1ac6a76bb0b20cfec568" translate="yes" xml:space="preserve">
          <source>Tokens with spaces can be surrounded by double quotes; three consecutive double quotes represent the quote character itself.</source>
          <target state="translated">带空格的代币可以用双引号包围,连续三个双引号代表引号字符本身。</target>
        </trans-unit>
        <trans-unit id="af0cfce16fa1fe510185dad9cdb29be3a1b9a667" translate="yes" xml:space="preserve">
          <source>Too many levels of arrays or maps encountered while processing the input (internal limitation, but the error is not recoverable).</source>
          <target state="translated">在处理输入时遇到太多级别的数组或地图(内部限制,但该错误无法恢复)。</target>
        </trans-unit>
        <trans-unit id="89deff98f3df9c6085166b38ae7e0d28de040cba" translate="yes" xml:space="preserve">
          <source>Tool Boxes</source>
          <target state="translated">工具箱</target>
        </trans-unit>
        <trans-unit id="e3e3722f41d72f7a6f83546ad8e3881bf39870f2" translate="yes" xml:space="preserve">
          <source>Tool Buttons</source>
          <target state="translated">工具按钮</target>
        </trans-unit>
        <trans-unit id="dbdf32cd495a942a17ddefe0a58ac61162aeb8fe" translate="yes" xml:space="preserve">
          <source>Tool button (see also &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;).</source>
          <target state="translated">工具按钮（另请参见&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8d8816b3b2bd98c6038273c9eeb26e010e302a7" translate="yes" xml:space="preserve">
          <source>Tool buttons are normally created when new &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; instances are created with &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar::addAction&lt;/a&gt;() or existing actions are added to a toolbar with &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar::addAction&lt;/a&gt;(). It is also possible to construct tool buttons in the same way as any other widget, and arrange them alongside other widgets in layouts.</source>
          <target state="translated">当新的工具按钮通常创建&lt;a href=&quot;qaction&quot;&gt;的QAction&lt;/a&gt;实例与创建&lt;a href=&quot;qtoolbar#addAction&quot;&gt;在QToolBar ::的addAction&lt;/a&gt;（）或现有的动作加入到工具栏&lt;a href=&quot;qtoolbar#addAction&quot;&gt;在QToolBar ::的addAction&lt;/a&gt;（）。还可以按照与其他任何小部件相同的方式构造工具按钮，并将它们与布局中的其他小部件并排布置。</target>
        </trans-unit>
        <trans-unit id="27c85c13aa74a2d1f00cfdcc5fed94b9d25bec7b" translate="yes" xml:space="preserve">
          <source>Tool buttons exist either independently or as part of tool bars. They are drawn equally either way. The &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; draws only one style element: &lt;code&gt;CC_ToolButton&lt;/code&gt;.</source>
          <target state="translated">工具按钮可以独立存在，也可以作为工具栏的一部分存在。两种方法均将它们均等地绘制。该&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;只绘制一个风格元素： &lt;code&gt;CC_ToolButton&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70243cbc3beb26198e47015cd763a9669ed1d164" translate="yes" xml:space="preserve">
          <source>Tool tips are typically transient in a sense that they are shown as a result of a certain external event or user interaction, and they usually hide after a certain timeout. It is possible to control the delay when a tool tip is shown, and the timeout when it is hidden. This makes it possible to implement varying strategies for showing and hiding tool tips.</source>
          <target state="translated">工具提示通常是瞬时的,即由于某个外部事件或用户交互的结果而显示,通常在一定的超时后隐藏。可以控制工具提示显示时的延迟和隐藏时的超时。这样就可以实现显示和隐藏工具提示的不同策略。</target>
        </trans-unit>
        <trans-unit id="8e256062327fff31dd71fe834931c8a04e7c1119" translate="yes" xml:space="preserve">
          <source>ToolBar</source>
          <target state="translated">ToolBar</target>
        </trans-unit>
        <trans-unit id="82a10ebd861898d3ada8f52581786e052594064e" translate="yes" xml:space="preserve">
          <source>ToolBar (QML type)</source>
          <target state="translated">工具条(QML类型)</target>
        </trans-unit>
        <trans-unit id="447b658ff6bce3bd06b5a3ec5c6f8c8eff82e37c" translate="yes" xml:space="preserve">
          <source>ToolBar Control</source>
          <target state="translated">工具条控制</target>
        </trans-unit>
        <trans-unit id="2ec90e839450ae1562ba278314d1b287c7cc64f7" translate="yes" xml:space="preserve">
          <source>ToolBar QML Type</source>
          <target state="translated">工具条QML类型</target>
        </trans-unit>
        <trans-unit id="e1e98ce0b894596aa6192b91bc0c0ccec459e02b" translate="yes" xml:space="preserve">
          <source>ToolBar does not provide a layout of its own, but requires you to position its contents, for instance by creating a &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt;. If only a single item is used within the ToolBar, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</source>
          <target state="translated">ToolBar不提供自己的布局，但是需要您定位其内容，例如，通过创建&lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt;。如果在工具栏中仅使用单个项目，它将调整大小以适合其所包含项目的隐式大小。这使其特别适合与布局一起使用。</target>
        </trans-unit>
        <trans-unit id="56bb117ee62edc2bdd26084ae72ad1c5be6794f0" translate="yes" xml:space="preserve">
          <source>ToolBar is a container of application-wide and context sensitive actions and controls, such as navigation buttons and search fields. ToolBar is commonly used as a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;header&lt;/a&gt; or a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;footer&lt;/a&gt; of an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;.</source>
          <target state="translated">工具栏是应用程序范围内和上下文相关的动作和控件（如导航按钮和搜索字段）的容器。工具栏通常用作一个&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;首标&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;页脚&lt;/a&gt;的的&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2894f4152f2ee44d2b4bb32d82034bfcd1fc4713" translate="yes" xml:space="preserve">
          <source>ToolBar is a container of application-wide and context sensitive actions and controls, such as navigation buttons and search fields. ToolBar is commonly used as a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;header&lt;/a&gt; or a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;footer&lt;/a&gt; of an &lt;a href=&quot;qtquickcontrols-changes-qt6#applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;.</source>
          <target state="translated">工具栏是应用程序范围内和上下文相关的动作和控件（如导航按钮和搜索字段）的容器。工具栏通常用作一个&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;首标&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;页脚&lt;/a&gt;的的&lt;a href=&quot;qtquickcontrols-changes-qt6#applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8953487f469d35250819f64a4159addc0bf69525" translate="yes" xml:space="preserve">
          <source>ToolBar.contentItem</source>
          <target state="translated">ToolBar.contentItem</target>
        </trans-unit>
        <trans-unit id="eedddebbf968906f427554d6faabad3add346692" translate="yes" xml:space="preserve">
          <source>ToolBar.position</source>
          <target state="translated">ToolBar.position</target>
        </trans-unit>
        <trans-unit id="310a1a566170eabad14351f75d75d39331e73af1" translate="yes" xml:space="preserve">
          <source>ToolBarStyle</source>
          <target state="translated">ToolBarStyle</target>
        </trans-unit>
        <trans-unit id="5e25a2aedd1ae81d7d80ffae8dac01909922ad75" translate="yes" xml:space="preserve">
          <source>ToolBarStyle (QML type)</source>
          <target state="translated">工具条样式(QML类型</target>
        </trans-unit>
        <trans-unit id="eda8c66f3cced92dfe0be58950281cbdeaf2ca42" translate="yes" xml:space="preserve">
          <source>ToolBarStyle QML Type</source>
          <target state="translated">工具条样式 QML类型</target>
        </trans-unit>
        <trans-unit id="9d475dcea52659e5c289fcd814aaaddc9f6f8ef4" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.background</source>
          <target state="translated">ToolBarStyle.background</target>
        </trans-unit>
        <trans-unit id="7510fd1c1320d12c538f3cb4af083dfff18ffdc2" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.menuButton</source>
          <target state="translated">ToolBarStyle.menuButton</target>
        </trans-unit>
        <trans-unit id="3e281ae24213be8cbf4a8ee0398cdb3a41976d63" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.panel</source>
          <target state="translated">ToolBarStyle.panel</target>
        </trans-unit>
        <trans-unit id="3fe8eb05f0b99b5c5277671ee5ab7fbd794c4364" translate="yes" xml:space="preserve">
          <source>ToolButton</source>
          <target state="translated">ToolButton</target>
        </trans-unit>
        <trans-unit id="08e0d670f9cd467802c7b91c8472750cf9f479a5" translate="yes" xml:space="preserve">
          <source>ToolButton (QML type)</source>
          <target state="translated">工具按钮(QML类型)</target>
        </trans-unit>
        <trans-unit id="334f846789f8cd11ec7c4fac0c2a0c4c31cee279" translate="yes" xml:space="preserve">
          <source>ToolButton Control</source>
          <target state="translated">工具按钮控件</target>
        </trans-unit>
        <trans-unit id="b313475db47cf816f52696474835d5b061c8a77d" translate="yes" xml:space="preserve">
          <source>ToolButton QML Type</source>
          <target state="translated">工具按钮 QML类型</target>
        </trans-unit>
        <trans-unit id="c60a4ca28e28920c9417d9b74bff47617608d20d" translate="yes" xml:space="preserve">
          <source>ToolButton inherits its API from &lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt;. For instance, you can set &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#text-prop&quot;&gt;text&lt;/a&gt;, display an &lt;a href=&quot;qtquickcontrols2-icons&quot;&gt;icon&lt;/a&gt;, and react to &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicks&lt;/a&gt; using the &lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt; API.</source>
          <target state="translated">ToolButton从&lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt;继承其API 。例如，您可以使用&lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt; API设置&lt;a href=&quot;qml-qtquick-controls2-abstractbutton#text-prop&quot;&gt;文本&lt;/a&gt;，显示&lt;a href=&quot;qtquickcontrols2-icons&quot;&gt;图标&lt;/a&gt;并对&lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;单击&lt;/a&gt;做出反应。</target>
        </trans-unit>
        <trans-unit id="8149a37a02aa168c0467537872591cfc8da3e827" translate="yes" xml:space="preserve">
          <source>ToolButton is functionally similar to &lt;a href=&quot;qml-qtquick-controls-button&quot;&gt;Button&lt;/a&gt;, but can provide a look that is more suitable within a &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;.</source>
          <target state="translated">ToolButton在功能上类似于&lt;a href=&quot;qml-qtquick-controls-button&quot;&gt;Button&lt;/a&gt;，但可以提供更适合&lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;的外观。</target>
        </trans-unit>
        <trans-unit id="c3d4209cfd9c5f5b11d64facf56391b69007e61d" translate="yes" xml:space="preserve">
          <source>ToolButton is functionally similar to &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;, but provides a look that is more suitable within a &lt;a href=&quot;qml-qtquick-controls2-toolbar&quot;&gt;ToolBar&lt;/a&gt;.</source>
          <target state="translated">ToolButton在功能上与&lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;类似，但提供的外观更适合&lt;a href=&quot;qml-qtquick-controls2-toolbar&quot;&gt;ToolBar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd00a1c216ce229a121e357b2bdcd30811c27acf" translate="yes" xml:space="preserve">
          <source>ToolSeparator</source>
          <target state="translated">ToolSeparator</target>
        </trans-unit>
        <trans-unit id="17dd0508b4dbc204ee7369f6fdb7f659d5299d20" translate="yes" xml:space="preserve">
          <source>ToolSeparator (QML type)</source>
          <target state="translated">工具分离器(QML类型</target>
        </trans-unit>
        <trans-unit id="2114512e56b2476cd3b1e556a5143b797709d414" translate="yes" xml:space="preserve">
          <source>ToolSeparator Control</source>
          <target state="translated">工具分离器控制</target>
        </trans-unit>
        <trans-unit id="9a7c70bc6564467389e16a8a5bea5f58198b8fae" translate="yes" xml:space="preserve">
          <source>ToolSeparator QML Type</source>
          <target state="translated">ToolSeparator QML类型</target>
        </trans-unit>
        <trans-unit id="04db4decf0b347a2cce02269e7eca1e3d54a745a" translate="yes" xml:space="preserve">
          <source>ToolSeparator is used to visually distinguish between groups of items in a toolbar by separating them with a line. It can be used in horizontal or vertical toolbars by setting the &lt;a href=&quot;qml-qtquick-controls2-toolseparator#orientation-prop&quot;&gt;orientation&lt;/a&gt; property to &lt;code&gt;Qt.Vertical&lt;/code&gt; or &lt;code&gt;Qt.Horizontal&lt;/code&gt;, respectively.</source>
          <target state="translated">ToolSeparator用于通过用一行分隔工具栏来在视觉上区分工具栏中的项目组。它可以在水平或垂直的工具栏通过设置被用于&lt;a href=&quot;qml-qtquick-controls2-toolseparator#orientation-prop&quot;&gt;取向&lt;/a&gt;属性来 &lt;code&gt;Qt.Vertical&lt;/code&gt; 或 &lt;code&gt;Qt.Horizontal&lt;/code&gt; 分别。</target>
        </trans-unit>
        <trans-unit id="991c25020f89b03c12331d09e05c89e514e357e5" translate="yes" xml:space="preserve">
          <source>ToolSeparator.horizontal</source>
          <target state="translated">ToolSeparator.horizontal</target>
        </trans-unit>
        <trans-unit id="3b4a253a099d00f441ab62a016122d026878dd8c" translate="yes" xml:space="preserve">
          <source>ToolSeparator.orientation</source>
          <target state="translated">ToolSeparator.orientation</target>
        </trans-unit>
        <trans-unit id="cb9b0a18448432968c19ed115314d4c3c76e7e9a" translate="yes" xml:space="preserve">
          <source>ToolSeparator.vertical</source>
          <target state="translated">ToolSeparator.vertical</target>
        </trans-unit>
        <trans-unit id="9c0f05c52d32a4720d0dc06ff8ab47b600091221" translate="yes" xml:space="preserve">
          <source>ToolTip</source>
          <target state="translated">ToolTip</target>
        </trans-unit>
        <trans-unit id="cf226779dbf92b243037d5d00a2b81ce2e78f7d6" translate="yes" xml:space="preserve">
          <source>ToolTip (QML type)</source>
          <target state="translated">工具提示(QML类型)</target>
        </trans-unit>
        <trans-unit id="4c6b3463c214679aac1a81222d8999d228163dad" translate="yes" xml:space="preserve">
          <source>ToolTip Control</source>
          <target state="translated">工具提示控制</target>
        </trans-unit>
        <trans-unit id="edcb492b158ec61d90387891d545bbdfa033a400" translate="yes" xml:space="preserve">
          <source>ToolTip QML Type</source>
          <target state="translated">工具提示QML类型</target>
        </trans-unit>
        <trans-unit id="a48a56d157ca0c8772af78ee77614aee5986c27d" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.delay</source>
          <target state="translated">ToolTip.ToolTip.delay</target>
        </trans-unit>
        <trans-unit id="2281b59308d236d1d0a216cd3c65bcb09ce04996" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.text</source>
          <target state="translated">ToolTip.ToolTip.text</target>
        </trans-unit>
        <trans-unit id="6fc9981eef953967203313d982578d37ad67e01b" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.timeout</source>
          <target state="translated">ToolTip.ToolTip.timeout</target>
        </trans-unit>
        <trans-unit id="d2e922daf37a77c49efe2bb924d9eab7eb627408" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.toolTip</source>
          <target state="translated">ToolTip.ToolTip.toolTip</target>
        </trans-unit>
        <trans-unit id="3d110aa4efe33630b0c90204e109cf36bc93ddf5" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.visible</source>
          <target state="translated">ToolTip.ToolTip.visible</target>
        </trans-unit>
        <trans-unit id="63c562048cd1e279d4a0e0874161a1e79bde480c" translate="yes" xml:space="preserve">
          <source>ToolTip.delay</source>
          <target state="translated">ToolTip.delay</target>
        </trans-unit>
        <trans-unit id="803cffa545e7697cb5b40cce24676de6768218c7" translate="yes" xml:space="preserve">
          <source>ToolTip.delay : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">ToolTip.delay：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d119d47489604412fd6d8d823ed086a3ac1bb01" translate="yes" xml:space="preserve">
          <source>ToolTip.hide()</source>
          <target state="translated">ToolTip.hide()</target>
        </trans-unit>
        <trans-unit id="39b07c0306710393bacbbd67b173b5fe668fd5dc" translate="yes" xml:space="preserve">
          <source>ToolTip.show()</source>
          <target state="translated">ToolTip.show()</target>
        </trans-unit>
        <trans-unit id="1d08657ba186c64dfad19b05eaf9d97fdbf36819" translate="yes" xml:space="preserve">
          <source>ToolTip.text</source>
          <target state="translated">ToolTip.text</target>
        </trans-unit>
        <trans-unit id="e1630f4ebd24b0ae95ae33471b76ad1eeccc580a" translate="yes" xml:space="preserve">
          <source>ToolTip.text : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">ToolTip.text：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764ed711cf28079cdc8bafa046b06d4fbf5ff7a" translate="yes" xml:space="preserve">
          <source>ToolTip.timeout</source>
          <target state="translated">ToolTip.timeout</target>
        </trans-unit>
        <trans-unit id="a0dbb0b874367e418155a7e304f5249a185a8599" translate="yes" xml:space="preserve">
          <source>ToolTip.timeout : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">ToolTip.timeout：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09b04a1033ae80abc2a5a232b2a8023e3b41aca3" translate="yes" xml:space="preserve">
          <source>ToolTip.toolTip : &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;ToolTip&lt;/a&gt;</source>
          <target state="translated">ToolTip.toolTip：&lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;工具提示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e088bcc4585a7480f699f6296a5fd33e214d6a0d" translate="yes" xml:space="preserve">
          <source>ToolTip.visible : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">ToolTip.visible：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12f0983a0019beec8189e5d5f2bfd9cc23690d9b" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are added by adding</source>
          <target state="translated">工具栏按钮是通过添加</target>
        </trans-unit>
        <trans-unit id="f9f8fb29f59a46298247555f6d9be2432a73a46c" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are created as actions in the &lt;a href=&quot;#theactioneditor&quot;&gt;Action Editor&lt;/a&gt; and dragged onto the toolbar. Since actions can be represented by menu entries and toolbar buttons, they can be moved between menus and toolbars.</source>
          <target state="translated">工具栏按钮在&amp;ldquo; &lt;a href=&quot;#theactioneditor&quot;&gt;动作编辑器&amp;rdquo;&lt;/a&gt;中创建为动作，并拖动到工具栏上。由于动作可以由菜单项和工具栏按钮表示，因此可以在菜单和工具栏之间移动。</target>
        </trans-unit>
        <trans-unit id="9bb73a5ad4605464dc47c9d3d599373b87663d18" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are created as actions in the &lt;a href=&quot;designer-creating-mainwindows#theactioneditor&quot;&gt;Action Editor&lt;/a&gt; and dragged onto the toolbar. Since actions can be represented by menu entries and toolbar buttons, they can be moved between menus and toolbars.</source>
          <target state="translated">工具栏按钮在&amp;ldquo;&lt;a href=&quot;designer-creating-mainwindows#theactioneditor&quot;&gt;动作编辑器&amp;rdquo;&lt;/a&gt;中创建为动作，并拖动到工具栏上。由于动作可以由菜单项和工具栏按钮表示，因此可以在菜单和工具栏之间移动。</target>
        </trans-unit>
        <trans-unit id="2282301124d965ce2186bfded9e69c4e72abf1cd" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are removed via the toolbar's context menu.</source>
          <target state="translated">工具栏按钮可以通过工具栏的上下文菜单删除。</target>
        </trans-unit>
        <trans-unit id="571634297d3718c574f47bf65aff806d75703187" translate="yes" xml:space="preserve">
          <source>Toolbars</source>
          <target state="translated">Toolbars</target>
        </trans-unit>
        <trans-unit id="f7609bf9d3509ef5a311a24743e1b31b1ba16517" translate="yes" xml:space="preserve">
          <source>Toolbars are added to a main window in a similar way to the menu bar: Select the &lt;b&gt;Add Tool Bar&lt;/b&gt; option from the form's context menu. Alternatively, if there is an existing toolbar in the main window, you can click the arrow on its right end to create a new toolbar.</source>
          <target state="translated">工具栏以与菜单栏类似的方式添加到主窗口：从表单的上下文菜单中选择&amp;ldquo; &lt;b&gt;添加工具栏&amp;rdquo;&lt;/b&gt;选项。或者，如果主窗口中已有一个工具栏，则可以单击其右端的箭头来创建一个新的工具栏。</target>
        </trans-unit>
        <trans-unit id="ecdb21c3fcfee8fec46d59f39a77579bff574aa3" translate="yes" xml:space="preserve">
          <source>Toolbars are implemented in the &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; class. You add a toolbar to a main window with &lt;code&gt;addToolBar()&lt;/code&gt;.</source>
          <target state="translated">工具栏在&lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;类中实现。使用 &lt;code&gt;addToolBar()&lt;/code&gt; 将工具栏添加到主窗口。</target>
        </trans-unit>
        <trans-unit id="a245e0d191503d801210d912ed837ef07fe8f01a" translate="yes" xml:space="preserve">
          <source>Toolbars are part of the &lt;a href=&quot;qmainwindow&quot;&gt;main window framework&lt;/a&gt;, and cooperate with the &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; to which they belong while it builds its style option. A main window has 4 areas that toolbars can be placed in. They are positioned next to the four sides of the window (i.e., north, south, east and west). Within each area there can be more than one line of toolbars; a line consists of toolbars with equal orientation (vertical or horizontal) placed next to each other.</source>
          <target state="translated">工具栏是&lt;a href=&quot;qmainwindow&quot;&gt;主窗口框架的&lt;/a&gt;一部分，在构建样式选项时会与它们所属的&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;合作。主窗口有4个区域，可放置工具栏。它们位于窗口的四个侧面（即北，南，东和西）旁边。在每个区域内，可以有多于一行的工具栏。一条线由方向彼此相等（垂直或水平）的工具栏组成。</target>
        </trans-unit>
        <trans-unit id="d084c7b9d727234a29524c21ed6064181902237b" translate="yes" xml:space="preserve">
          <source>Toolbars are removed from the form via an entry in the toolbar's context menu.</source>
          <target state="translated">通过在工具栏的上下文菜单中的输入,可以从表单中删除工具栏。</target>
        </trans-unit>
        <trans-unit id="fbf601d7590612878ef70101d120a8617761656a" translate="yes" xml:space="preserve">
          <source>Toolbox widgets provide a series of pages or compartments in a toolbox. They are handled in a way similar to stacked widgets.</source>
          <target state="translated">工具箱部件在工具箱中提供了一系列的页面或隔间。它们的处理方式类似于堆叠式部件。</target>
        </trans-unit>
        <trans-unit id="1493f62286a23b5a11ddf92b790f2feaed7a4adc" translate="yes" xml:space="preserve">
          <source>Toolchain</source>
          <target state="translated">Toolchain</target>
        </trans-unit>
        <trans-unit id="d96cd23ce6ecd6515726e24f407a83772242ec52" translate="yes" xml:space="preserve">
          <source>Toolchain Files versus Device Makespecs</source>
          <target state="translated">工具链文件与设备Makespecs的比较</target>
        </trans-unit>
        <trans-unit id="38f5e00d5f88931b95a16f6cffbe2aa1fded7c4b" translate="yes" xml:space="preserve">
          <source>Tools and Toolchains</source>
          <target state="translated">工具和工具链</target>
        </trans-unit>
        <trans-unit id="217ae68a57b281448452f9625b7db65c0e37b492" translate="yes" xml:space="preserve">
          <source>Tools and Utilities</source>
          <target state="translated">工具和实用工具</target>
        </trans-unit>
        <trans-unit id="b00383d6e2d64bd52f0436d082593e2a5052d5e4" translate="yes" xml:space="preserve">
          <source>Tools for ActiveQt</source>
          <target state="translated">ActiveQt的工具</target>
        </trans-unit>
        <trans-unit id="ef4d53745cc82c0f19f9b24f2fcb06f598db4cd2" translate="yes" xml:space="preserve">
          <source>Tools for Mobile Development</source>
          <target state="translated">移动开发工具</target>
        </trans-unit>
        <trans-unit id="ed0acfa1197df4fb14d69aeb6bf3ede64564a7e0" translate="yes" xml:space="preserve">
          <source>Tooltip to be shown when hovering the control bound to this action. Not all controls support tooltips on all platforms, especially &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;.</source>
          <target state="translated">将鼠标悬停在绑定到此操作的控件上时将显示工具提示。并非所有控件都在所有平台上都支持工具提示，尤其是&lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e2dbd3a9b8c5590698eaf372bf4eef88284d3d8" translate="yes" xml:space="preserve">
          <source>TooltipRequest (QML type)</source>
          <target state="translated">TooltipRequest (QML类型)</target>
        </trans-unit>
        <trans-unit id="a28d3cb427cc626109e9f5a5da6b7d543c6707a1" translate="yes" xml:space="preserve">
          <source>TooltipRequest QML Type</source>
          <target state="translated">TooltipRequest QML类型</target>
        </trans-unit>
        <trans-unit id="11e5f6ca7a170edbbb9405562d37cb3ebc588292" translate="yes" xml:space="preserve">
          <source>TooltipRequest.accepted</source>
          <target state="translated">TooltipRequest.accepted</target>
        </trans-unit>
        <trans-unit id="f3ff38b673d4db3a778f8f67e14183a660818a59" translate="yes" xml:space="preserve">
          <source>TooltipRequest.text</source>
          <target state="translated">TooltipRequest.text</target>
        </trans-unit>
        <trans-unit id="fdf7d6dbcd20e08f5896f9162beeb7dd2bba3926" translate="yes" xml:space="preserve">
          <source>TooltipRequest.type</source>
          <target state="translated">TooltipRequest.type</target>
        </trans-unit>
        <trans-unit id="81978a07ae98511fe0bd7e4f8239f36d7434616b" translate="yes" xml:space="preserve">
          <source>TooltipRequest.x</source>
          <target state="translated">TooltipRequest.x</target>
        </trans-unit>
        <trans-unit id="99938a65c40283d99f2fb56ed7f3df5d4b205ba3" translate="yes" xml:space="preserve">
          <source>TooltipRequest.y</source>
          <target state="translated">TooltipRequest.y</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="fbac22559c93bfe964f6667e346716c3f1dcbda9" translate="yes" xml:space="preserve">
          <source>Top border color for table cells.</source>
          <target state="translated">表格单元格的顶部边框颜色。</target>
        </trans-unit>
        <trans-unit id="4b1bcd04e523bd38a4b106f7e9c704c9bbb37b4c" translate="yes" xml:space="preserve">
          <source>Top border style for table cells.</source>
          <target state="translated">表格单元格的顶部边框样式。</target>
        </trans-unit>
        <trans-unit id="12d4d20013f291dcdd7df3d2103ffc810560d763" translate="yes" xml:space="preserve">
          <source>Top border width for table cells.</source>
          <target state="translated">表格单元格的顶部边框宽度。</target>
        </trans-unit>
        <trans-unit id="8c0c71e6304d5a4b0719f52d63490953daee7df8" translate="yes" xml:space="preserve">
          <source>Top egde.</source>
          <target state="translated">顶部egde。</target>
        </trans-unit>
        <trans-unit id="785c8a106c8b05e12bc094f06c4be272c424dd34" translate="yes" xml:space="preserve">
          <source>Top level items in a model are always referenced by specifying &lt;code&gt;QModelIndex()&lt;/code&gt; as their parent item. This is discussed in the next section.</source>
          <target state="translated">始终通过将 &lt;code&gt;QModelIndex()&lt;/code&gt; 指定为其父项来引用模型中的顶级项。下一节将对此进行讨论。</target>
        </trans-unit>
        <trans-unit id="3856bdeb998ccb6f0e3f1062b79e740f71cdddea" translate="yes" xml:space="preserve">
          <source>Top level layouts are not visible as separate objects in the Object Inspector. Their properties appear below the widget properties of the main form, container widget, or page of a container widget in the Property Editor.</source>
          <target state="translated">顶层布局在 &quot;对象检查器 &quot;中不作为单独对象可见。它们的属性出现在属性编辑器中主窗体、容器小组件或容器小组件页面的小组件属性下方。</target>
        </trans-unit>
        <trans-unit id="6443f466cb27e6f749e3cd7b9a75c9a9943461c4" translate="yes" xml:space="preserve">
          <source>Top level page.</source>
          <target state="translated">顶层页面。</target>
        </trans-unit>
        <trans-unit id="d66ce82a1eec889f80ce9d100d5c8f12078f2e11" translate="yes" xml:space="preserve">
          <source>Top margin for the alternate keys list panel.</source>
          <target state="translated">备用键列表面板的上边距。</target>
        </trans-unit>
        <trans-unit id="7931e23f1c37ddeeab1443f6d637260a5ab86da6" translate="yes" xml:space="preserve">
          <source>Top paragraph margin in pixels</source>
          <target state="translated">段落上边距,单位为像素</target>
        </trans-unit>
        <trans-unit id="b7b28c1f1538334a6b5033fa30ec0fedeee4d1dc" translate="yes" xml:space="preserve">
          <source>Top table cell padding in pixels</source>
          <target state="translated">顶部表格单元格填充,单位为像素</target>
        </trans-unit>
        <trans-unit id="93ab5bee1f454c89a8e6d8c74eb855bc97bf10d7" translate="yes" xml:space="preserve">
          <source>Top to bottom</source>
          <target state="translated">从上到下</target>
        </trans-unit>
        <trans-unit id="b57cbe635c06f2299210b715ba693ec020530632" translate="yes" xml:space="preserve">
          <source>Top-Level and Child Widgets</source>
          <target state="translated">顶层和儿童小部件</target>
        </trans-unit>
        <trans-unit id="1c523d795fd7793b3f71b65ff6451a52513b0a25" translate="yes" xml:space="preserve">
          <source>Top-left edge.</source>
          <target state="translated">左上角边缘。</target>
        </trans-unit>
        <trans-unit id="337e2a2ea6c4d2368da49083a287fc7a13905abe" translate="yes" xml:space="preserve">
          <source>Top-level items are constructed without a parent then inserted at the position specified by a pair of row and column numbers:</source>
          <target state="translated">顶层项目是在没有父项目的情况下构建的,然后插入到由一对行号和列号指定的位置。</target>
        </trans-unit>
        <trans-unit id="cc915fe83ff373e6842ded2b05e7703262aad814" translate="yes" xml:space="preserve">
          <source>Top-level items in the tree widget are constructed with the tree widget as their parent widget. They can be inserted in an arbitrary order, or you can ensure that they are listed in a particular order by specifying the previous item when constructing each item:</source>
          <target state="translated">树形小组件中的顶层项是以树形小组件作为其父小组件来构造的。它们可以按任意顺序插入,也可以在构造每个项时指定前一个项,确保它们按特定顺序排列。</target>
        </trans-unit>
        <trans-unit id="af08fe78ecefa088d72c4b3f0114c06d713666c8" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all C++ classes for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#module-command&quot;&gt;\module&lt;/a&gt; page.</source>
          <target state="translated">顶层页面，列出了此（子）项目的所有C ++类。通常，是&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#module-command&quot;&gt;\ module&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="0866c8961175fd2d8e8f05e94fa5cd35a7694da1" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all C++ classes for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#module-command&quot;&gt;\module&lt;/a&gt; page.</source>
          <target state="translated">顶层页面，列出此（子）项目的所有C ++类。通常，是&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#module-command&quot;&gt;\ module&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="fdf4a373d3d943b3b0349755e97b37b78f54b524" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all C++ classes for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#module-command&quot;&gt;\module&lt;/a&gt; page.</source>
          <target state="translated">顶层页面，列出此（子）项目的所有C ++类。通常，是&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#module-command&quot;&gt;\ module&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="eeb3b5310b2971fd9cddb24da964192d541cdfaf" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all QML types for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\qmlmodule&lt;/a&gt; page.</source>
          <target state="translated">顶层页面，列出此（子）项目的所有QML类型。通常，是&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\ qmlmodule&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="2d01c4417fb0f482446d5da0243b43d5dd46de9f" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all QML types for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\qmlmodule&lt;/a&gt; page.</source>
          <target state="translated">列出此（子）项目的所有QML类型的顶层页面。通常，是&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\ qmlmodule&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="59ba7002d82f43445deebc0a3debca83cd73cc61" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all QML types for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\qmlmodule&lt;/a&gt; page.</source>
          <target state="translated">列出此（子）项目的所有QML类型的顶层页面。通常，是&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\ qmlmodule&lt;/a&gt;页面的标题。</target>
        </trans-unit>
        <trans-unit id="6c4a7edf6e783d510713bbf130721136ed547c83" translate="yes" xml:space="preserve">
          <source>Top-level states must be passed a &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; object as their parent state, or added to a state machine using &lt;a href=&quot;qstatemachine#addState&quot;&gt;QStateMachine::addState&lt;/a&gt;().</source>
          <target state="translated">顶级状态必须传递&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt;对象作为其父状态，或使用&lt;a href=&quot;qstatemachine#addState&quot;&gt;QStateMachine :: addState&lt;/a&gt;（）添加到状态机。</target>
        </trans-unit>
        <trans-unit id="ea2490e0efc669dfdecf1b7d71999ee042193257" translate="yes" xml:space="preserve">
          <source>Top-level windows</source>
          <target state="translated">顶层窗户</target>
        </trans-unit>
        <trans-unit id="1aa38ed5fb0344662762f7a5a51beac67a4852ac" translate="yes" xml:space="preserve">
          <source>Top-right edge.</source>
          <target state="translated">右上角的边缘。</target>
        </trans-unit>
        <trans-unit id="334b440314cf1ec5e94ee04232546c13067b10a5" translate="yes" xml:space="preserve">
          <source>Top40</source>
          <target state="translated">Top40</target>
        </trans-unit>
        <trans-unit id="e5abd5e5358717c49cd2b13951c277bd605211bd" translate="yes" xml:space="preserve">
          <source>Topic Commands</source>
          <target state="translated">主题命令</target>
        </trans-unit>
        <trans-unit id="d90784c14f39917776396f86915e6db13dbc3cea" translate="yes" xml:space="preserve">
          <source>Topic Contexts</source>
          <target state="translated">主题背景</target>
        </trans-unit>
        <trans-unit id="55a04d23dd55daf96ec9c47446f0d77d223fb75f" translate="yes" xml:space="preserve">
          <source>Topic commands identify the element you are documenting, for example a C++ class, function, type, or an extra page of text that doesn't map to an underlying C++ element.</source>
          <target state="translated">Topic命令可以识别你正在文档中的元素,例如一个C++类、函数、类型,或者是一页额外的文本,这些文本并没有映射到一个底层的C++元素。</target>
        </trans-unit>
        <trans-unit id="07e4f9c27860c8f452d481954e498a807cd27a98" translate="yes" xml:space="preserve">
          <source>Topics</source>
          <target state="translated">Topics</target>
        </trans-unit>
        <trans-unit id="3a8c0b10d166ab6fc3488810dd9b461e7b1f23a1" translate="yes" xml:space="preserve">
          <source>Topics:</source>
          <target state="translated">Topics:</target>
        </trans-unit>
        <trans-unit id="917904ac8c837fd0477b8d064f7bfb3b9e7fad96" translate="yes" xml:space="preserve">
          <source>Torch</source>
          <target state="translated">Torch</target>
        </trans-unit>
        <trans-unit id="20f154315536687d462f9d235131cde15820e167" translate="yes" xml:space="preserve">
          <source>Torch (QML type)</source>
          <target state="translated">火炬(QML型)</target>
        </trans-unit>
        <trans-unit id="d99967064752d9ca6a51952c78aff535bcc468a0" translate="yes" xml:space="preserve">
          <source>Torch QML Type</source>
          <target state="translated">火炬QML类型</target>
        </trans-unit>
        <trans-unit id="ab4449757e937dbb6a90ec72cdf5816fc82a67ea" translate="yes" xml:space="preserve">
          <source>Torch.enabled</source>
          <target state="translated">Torch.enabled</target>
        </trans-unit>
        <trans-unit id="1e7c32bbe2f3855f7d37f6e3455f5a8a07b379e7" translate="yes" xml:space="preserve">
          <source>Torch.power</source>
          <target state="translated">Torch.power</target>
        </trans-unit>
        <trans-unit id="90544242699c57ca71cb5aa283df454f735df4a2" translate="yes" xml:space="preserve">
          <source>TorusGeometry</source>
          <target state="translated">TorusGeometry</target>
        </trans-unit>
        <trans-unit id="06745ec109ad5cd79186344a37b34eeb796c723b" translate="yes" xml:space="preserve">
          <source>TorusGeometry (QML type)</source>
          <target state="translated">TorusGeometry (QML类型)</target>
        </trans-unit>
        <trans-unit id="23da6e0be35af0bae7c7ca95e52cc860b3e9ad43" translate="yes" xml:space="preserve">
          <source>TorusGeometry QML Type</source>
          <target state="translated">TorusGeometers QML类型</target>
        </trans-unit>
        <trans-unit id="d11758485b2ee8897df3c7f99c2308e7e2a39a5f" translate="yes" xml:space="preserve">
          <source>TorusGeometry allows creation of a torus in 3D space. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TorusGeometry允许在3D空间中创建圆环。&lt;a href=&quot;#details&quot;&gt;更多的...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea722066ac2fb6bcff56535f3622ea6d045c1c26" translate="yes" xml:space="preserve">
          <source>TorusGeometry.indexAttribute</source>
          <target state="translated">TorusGeometry.indexAttribute</target>
        </trans-unit>
        <trans-unit id="edd3f3d3799ce3068e61faa8962aeb3d001cfe4e" translate="yes" xml:space="preserve">
          <source>TorusGeometry.minorRadius</source>
          <target state="translated">TorusGeometry.minorRadius</target>
        </trans-unit>
        <trans-unit id="af53b3d2f39779e74a286fdf5543c1efa2452dec" translate="yes" xml:space="preserve">
          <source>TorusGeometry.normalAttribute</source>
          <target state="translated">TorusGeometry.normalAttribute</target>
        </trans-unit>
        <trans-unit id="064b909d365ba4e3caebb48830248c6f68b6bfa8" translate="yes" xml:space="preserve">
          <source>TorusGeometry.positionAttribute</source>
          <target state="translated">TorusGeometry.positionAttribute</target>
        </trans-unit>
        <trans-unit id="7c58b6c39600b81ab0f68bf8b2de28756751c2d1" translate="yes" xml:space="preserve">
          <source>TorusGeometry.radius</source>
          <target state="translated">TorusGeometry.radius</target>
        </trans-unit>
        <trans-unit id="06473661372f2d0be11f1dcf43a2e0bb3058a446" translate="yes" xml:space="preserve">
          <source>TorusGeometry.rings</source>
          <target state="translated">TorusGeometry.rings</target>
        </trans-unit>
        <trans-unit id="a7afc543808cfbfcfd5c44cf850c5a09c432aeb8" translate="yes" xml:space="preserve">
          <source>TorusGeometry.slices</source>
          <target state="translated">TorusGeometry.slices</target>
        </trans-unit>
        <trans-unit id="a3cd991e24c13b2dbb26b1bffc9a083181efd0bf" translate="yes" xml:space="preserve">
          <source>TorusGeometry.texCoordAttribute</source>
          <target state="translated">TorusGeometry.texCoordAttribute</target>
        </trans-unit>
        <trans-unit id="c35beb7cbac9100db84b2957d51a5b927d2e30ca" translate="yes" xml:space="preserve">
          <source>TorusGeometryView</source>
          <target state="translated">TorusGeometryView</target>
        </trans-unit>
        <trans-unit id="94627075a573376cc8572ae6e566edb7aadace72" translate="yes" xml:space="preserve">
          <source>TorusGeometryView QML Type</source>
          <target state="translated">TorusGeometryView QML类型</target>
        </trans-unit>
        <trans-unit id="2429d95d932bdb591ed8fc10972d4f57695eb4d7" translate="yes" xml:space="preserve">
          <source>TorusMesh</source>
          <target state="translated">TorusMesh</target>
        </trans-unit>
        <trans-unit id="1ee31e04e84913e57f6ac47dd9afa4dadebd3310" translate="yes" xml:space="preserve">
          <source>TorusMesh (QML type)</source>
          <target state="translated">TorusMesh(QML类型)</target>
        </trans-unit>
        <trans-unit id="502c2ab295446baf44f85c626114b6b2742ee4fd" translate="yes" xml:space="preserve">
          <source>TorusMesh QML Type</source>
          <target state="translated">TorusMesh QML类型</target>
        </trans-unit>
        <trans-unit id="bb835d9254ac45f0224a597d8a48139a4405b7de" translate="yes" xml:space="preserve">
          <source>TorusMesh.minorRadius</source>
          <target state="translated">TorusMesh.minorRadius</target>
        </trans-unit>
        <trans-unit id="c9413cc1ef34a9ac9783ecb57c8b24508d583f2e" translate="yes" xml:space="preserve">
          <source>TorusMesh.radius</source>
          <target state="translated">TorusMesh.radius</target>
        </trans-unit>
        <trans-unit id="a3e2a958f975502ffb3e0bb0f3a1b0992eb59913" translate="yes" xml:space="preserve">
          <source>TorusMesh.rings</source>
          <target state="translated">TorusMesh.rings</target>
        </trans-unit>
        <trans-unit id="4c75f9c07a619428a1a2d1afe882b6c4d661264b" translate="yes" xml:space="preserve">
          <source>TorusMesh.slices</source>
          <target state="translated">TorusMesh.slices</target>
        </trans-unit>
        <trans-unit id="431014bdd0a879d2afad1334d635119321b45f61" translate="yes" xml:space="preserve">
          <source>Total slider thickness.</source>
          <target state="translated">滑块总厚度。</target>
        </trans-unit>
        <trans-unit id="e3f139abb7a549a1210b36f7dbf89215ad6c9902" translate="yes" xml:space="preserve">
          <source>Touch</source>
          <target state="translated">Touch</target>
        </trans-unit>
        <trans-unit id="f9140a77a551ccb054ed338b61bbddfe707187a6" translate="yes" xml:space="preserve">
          <source>Touch Point Grouping</source>
          <target state="translated">触摸点分组</target>
        </trans-unit>
        <trans-unit id="47cad98cd7af7438d2b0b6da4c1d660a9e6395ef" translate="yes" xml:space="preserve">
          <source>Touch events occur when pressing, releasing, or moving one or more touch points on a touch device (such as a touch-screen or track-pad). To receive touch events, widgets have to have the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_AcceptTouchEvents&lt;/a&gt; attribute set and graphics items need to have the &lt;a href=&quot;qgraphicsitem#setAcceptTouchEvents&quot;&gt;acceptTouchEvents&lt;/a&gt; attribute set to true.</source>
          <target state="translated">在按下，释放或移动触摸设备（例如触摸屏或触控板）上的一个或多个触摸点时，会发生触摸事件。要接收触摸事件，小部件必须设置&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_AcceptTouchEvents&lt;/a&gt;属性，图形项目需要将&lt;a href=&quot;qgraphicsitem#setAcceptTouchEvents&quot;&gt;acceptTouchEvents&lt;/a&gt;属性设置为true。</target>
        </trans-unit>
        <trans-unit id="953057d4d32a31549e02699b46a878906debe326" translate="yes" xml:space="preserve">
          <source>Touch input in systems with multiple screens on KMS/DRM</source>
          <target state="translated">在KMS/DRM上有多个屏幕的系统中进行触摸输入。</target>
        </trans-unit>
        <trans-unit id="44dfd4e9dfa20b5a56c249791e6e62bef7edda87" translate="yes" xml:space="preserve">
          <source>Touch sequence</source>
          <target state="translated">触摸顺序</target>
        </trans-unit>
        <trans-unit id="c9b39d2c60922de1f27fe6d54e8ad49a6538a59c" translate="yes" xml:space="preserve">
          <source>Touch vs. Mouse Interaction</source>
          <target state="translated">触摸与鼠标交互</target>
        </trans-unit>
        <trans-unit id="88b8cafcf37b5d418aab7ba7890acab21a600ea7" translate="yes" xml:space="preserve">
          <source>Touch-And-Move</source>
          <target state="translated">Touch-And-Move</target>
        </trans-unit>
        <trans-unit id="cc63dd536449408ccff5d2d9e29725e8a9631784" translate="yes" xml:space="preserve">
          <source>Touch-related functionality</source>
          <target state="translated">触摸相关功能</target>
        </trans-unit>
        <trans-unit id="6f87102fd2064e820b5a14106a462358fe7e1095" translate="yes" xml:space="preserve">
          <source>Touch-screen event (&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;).</source>
          <target state="translated">触摸屏事件（&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ccfd5d6f30a8fb73aa81b8740cf8eacf54e24109" translate="yes" xml:space="preserve">
          <source>TouchEventSequence (QML type)</source>
          <target state="translated">TouchEventSequence (QML类型)</target>
        </trans-unit>
        <trans-unit id="48a5eefcbe1badbfd25eb961950246bce22ec9e5" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(object</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（对象</target>
        </trans-unit>
        <trans-unit id="76a5d79ac8381f382b7f31975f3a921069ccd095" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#commit-method&quot;&gt;commit&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;()</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#commit-method&quot;&gt;提交&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（）</target>
        </trans-unit>
        <trans-unit id="188145448744691023c5bcc8c1ba68b0f73b988f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;move&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;移动&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="e636743347f5b172e41fe8fba3984d3965d59405" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;move&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TouchEventSequence&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;移动&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（整数</target>
        </trans-unit>
        <trans-unit id="8ed36196cb77073a3109a054327c2f8e97b88844" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;press&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;按&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="ac0758117a47af3b95d43db3cddf173341c14531" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;press&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TouchEventSequence&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;按下&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="21174c01f304cad4c3516397439dbc863f8350a2" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;release&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;版本&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="1b97903680134ed55f669085d5c9150ac2c9bf0e" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;release&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TouchEventSequence&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;版本&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="8b8edc37dc8f2a60e7e8ef841eea5fb191815d0b" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;stationary&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;固定&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="882f059aed0bb338db64bac6f1eab5ea1f937225" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;stationary&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TouchEventSequence&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;固定&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="bc3d359e7435cb8198bb129c699665d3b2d7d378" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(object</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（对象</target>
        </trans-unit>
        <trans-unit id="9a8eae90a88d76a308977687e4de69ed15bf787f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#commit-method&quot;&gt;commit&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;()</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#commit-method&quot;&gt;提交&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（）</target>
        </trans-unit>
        <trans-unit id="49abf24297dd0e9cd848ca3cc744e06b53c1067f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#move-method&quot;&gt;move&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#move-method&quot;&gt;移动&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="c17a1a62cc7f5d24d44167cda2183de9f37ac2c2" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#press-method&quot;&gt;press&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#press-method&quot;&gt;按&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="f3a8717dc664cda8de606707298e1c3da266c91f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#release-method&quot;&gt;release&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#release-method&quot;&gt;版本&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="5eff5769b2782311578b8ff6ab2c7c2baa7d8d1c" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#stationary-method&quot;&gt;stationary&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#stationary-method&quot;&gt;固定&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="27ec90ab29168fe00ee6f7caf737c79acda470a0" translate="yes" xml:space="preserve">
          <source>TouchEventSequence QML Type</source>
          <target state="translated">TouchEventSequence QML类型</target>
        </trans-unit>
        <trans-unit id="a22636d497927bc1a7529012170bb36d587abef9" translate="yes" xml:space="preserve">
          <source>TouchEventSequence is used to build and dispatch touch events for testing. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TouchEventSequence用于构建和分发触摸事件以进行测试。&lt;a href=&quot;#details&quot;&gt;更多的...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20eb842a4038f975328a6e2c32961ccab29c6592" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.commit()</source>
          <target state="translated">TouchEventSequence.commit()</target>
        </trans-unit>
        <trans-unit id="9407d16c1f295ef04935a120eb52dbe4e95cd148" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.move()</source>
          <target state="translated">TouchEventSequence.move()</target>
        </trans-unit>
        <trans-unit id="1aefc8c1fee1dbb699de25878d7899b14e8b6bab" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.press()</source>
          <target state="translated">TouchEventSequence.press()</target>
        </trans-unit>
        <trans-unit id="ea85f95bd4ad17a6cddcf38517a28819c15b240d" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.release()</source>
          <target state="translated">TouchEventSequence.release()</target>
        </trans-unit>
        <trans-unit id="77aec7f8657cccb471fd7f1d8c673abd96ab7303" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.stationary()</source>
          <target state="translated">TouchEventSequence.stationary()</target>
        </trans-unit>
        <trans-unit id="62a9ab6e26e85a6043eef7985b738638ece5d504" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D</source>
          <target state="translated">TouchInputHandler3D</target>
        </trans-unit>
        <trans-unit id="927afc966c50fef3d350a9bcc7b48d4b4bf84084" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D (QML type)</source>
          <target state="translated">TouchInputHandler3D (QML类型)</target>
        </trans-unit>
        <trans-unit id="f7f4c7c2f870d9e7d4576a247c2dcd4c20efb80b" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D QML Type</source>
          <target state="translated">TouchInputHandler3D QML类型</target>
        </trans-unit>
        <trans-unit id="5df0a43674892d2410138505a854b242886178ec" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D is the basic input handler for touch screen devices.</source>
          <target state="translated">TouchInputHandler3D是触摸屏设备的基本输入处理程序。</target>
        </trans-unit>
        <trans-unit id="cef7591e6bdcf37e353b6f569a26dea65d34c1db" translate="yes" xml:space="preserve">
          <source>TouchPoint (QML type)</source>
          <target state="translated">触点(QML类型)</target>
        </trans-unit>
        <trans-unit id="e853fe7927db764b340057dd4ffc24f3b2bcfa08" translate="yes" xml:space="preserve">
          <source>TouchPoint Class</source>
          <target state="translated">触点类</target>
        </trans-unit>
        <trans-unit id="42eeb8e5fe811f4a41620c865ec69c2453295cc2" translate="yes" xml:space="preserve">
          <source>TouchPoint QML Type</source>
          <target state="translated">TouchPoint QML类型</target>
        </trans-unit>
        <trans-unit id="c139cdfbf3239eedbd7522d911c073dd6c2492cc" translate="yes" xml:space="preserve">
          <source>TouchPoint.ellipseDiameters</source>
          <target state="translated">TouchPoint.ellipseDiameters</target>
        </trans-unit>
        <trans-unit id="64648df7e742272d1076ea15b022041da3ecd6cb" translate="yes" xml:space="preserve">
          <source>TouchPoint.pointId</source>
          <target state="translated">TouchPoint.pointId</target>
        </trans-unit>
        <trans-unit id="c4225acd2556bda2e8531e21f143d87ceb387219" translate="yes" xml:space="preserve">
          <source>TouchPoint.pressed</source>
          <target state="translated">TouchPoint.pressed</target>
        </trans-unit>
        <trans-unit id="3e6c4460cf20d79c350182d794aa63bed12afcfe" translate="yes" xml:space="preserve">
          <source>TouchPoint.pressure</source>
          <target state="translated">TouchPoint.pressure</target>
        </trans-unit>
        <trans-unit id="44df89b901db41980a7d0b1744a2dde0d3542613" translate="yes" xml:space="preserve">
          <source>TouchPoint.previousX</source>
          <target state="translated">TouchPoint.previousX</target>
        </trans-unit>
        <trans-unit id="93d9bc90f09befe3328ac5e734cbc9ece3bd974d" translate="yes" xml:space="preserve">
          <source>TouchPoint.rotation</source>
          <target state="translated">TouchPoint.rotation</target>
        </trans-unit>
        <trans-unit id="5e1a4cd2cf749b9d8ac238d68ab4205a12cfff5c" translate="yes" xml:space="preserve">
          <source>TouchPoint.sceneX</source>
          <target state="translated">TouchPoint.sceneX</target>
        </trans-unit>
        <trans-unit id="898191eae5d0be243e482556a1085c9f5444dbb9" translate="yes" xml:space="preserve">
          <source>TouchPoint.startX</source>
          <target state="translated">TouchPoint.startX</target>
        </trans-unit>
        <trans-unit id="950883c0f24eb1140eca02dd3e0772f94ac4679e" translate="yes" xml:space="preserve">
          <source>TouchPoint.uniqueId</source>
          <target state="translated">TouchPoint.uniqueId</target>
        </trans-unit>
        <trans-unit id="f5a64badc77e37d271d32dc080ef0df9d366aa51" translate="yes" xml:space="preserve">
          <source>TouchPoint.x</source>
          <target state="translated">TouchPoint.x</target>
        </trans-unit>
        <trans-unit id="3ab7118df02533c85744dc88312547905593fede" translate="yes" xml:space="preserve">
          <source>TouchPoint::InfoFlags</source>
          <target state="translated">TouchPoint::InfoFlags</target>
        </trans-unit>
        <trans-unit id="57d33bc4f1e6b047768d79773023e921b74d155b" translate="yes" xml:space="preserve">
          <source>TouchPoint::TouchPoint(TouchPoint &amp;amp;&amp;amp;</source>
          <target state="translated">TouchPoint :: TouchPoint（TouchPoint &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="bd10a8bf2dba7d10c76b1ede806a52dac1205723" translate="yes" xml:space="preserve">
          <source>Touchpoints have automatically-incrementing IDs: each time the user presses a finger against the touchscreen, it will be a larger number. In other cases, it will be -1.</source>
          <target state="translated">触控点具有自动递增的ID:用户每次将手指按在触摸屏上时,它将是一个较大的数字。在其他情况下,它将是-1。</target>
        </trans-unit>
        <trans-unit id="d91dea1fd12832dee0d9a819927fa2dab61cc7f7" translate="yes" xml:space="preserve">
          <source>Touchscreens require additional considerations in multi-display systems because touch events have to be routed to the correct virtual screen, and this requires a correct mapping between touchscreens and display outputs.</source>
          <target state="translated">在多显示器系统中,触摸屏需要额外的考虑,因为触摸事件必须被路由到正确的虚拟屏幕,这就要求触摸屏和显示器输出之间的正确映射。</target>
        </trans-unit>
        <trans-unit id="52c033d68247a676388c4f985c3259aca585abe9" translate="yes" xml:space="preserve">
          <source>Towards an input method, handwriting recognition works on the same principle as handling of normal keyboard input, i.e. input data is collected by the keyboard layout and transferred by the input engine to the input method for processing.</source>
          <target state="translated">向输入法,手写识别的工作原理与处理普通键盘输入相同,即输入数据由键盘布局收集,由输入引擎传输到输入法进行处理。</target>
        </trans-unit>
        <trans-unit id="3319fdaf72bc21a471b568050fa06fd717af81b7" translate="yes" xml:space="preserve">
          <source>TqAbs(const T &amp;amp;</source>
          <target state="translated">TqAbs（常数T＆</target>
        </trans-unit>
        <trans-unit id="2f38169a712e499b917900e244feafc980a814f4" translate="yes" xml:space="preserve">
          <source>Trace</source>
          <target state="translated">Trace</target>
        </trans-unit>
        <trans-unit id="41cf067d6784a9d4177d6efaea546fa14ddf1fcc" translate="yes" xml:space="preserve">
          <source>Trace (QML type)</source>
          <target state="translated">跟踪(QML类型</target>
        </trans-unit>
        <trans-unit id="1759ac642bfad4d2a1f5dfd51529192361b98047" translate="yes" xml:space="preserve">
          <source>Trace &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">跟踪&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="e8d2fa9e459de6ad2b15e77af131035fe6799ff0" translate="yes" xml:space="preserve">
          <source>Trace &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">跟踪&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="57b9023d2be5586e90dfa66cac7c64a13b520ee5" translate="yes" xml:space="preserve">
          <source>Trace &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">跟踪&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="be0064f9fa197a972086d84822c3b3b12e4742b1" translate="yes" xml:space="preserve">
          <source>Trace API for Input Methods</source>
          <target state="translated">输入方法的跟踪API</target>
        </trans-unit>
        <trans-unit id="4ba002c06f47bc00c979d0f40b79bbe4b382f745" translate="yes" xml:space="preserve">
          <source>Trace QML Type</source>
          <target state="translated">追踪QML类型</target>
        </trans-unit>
        <trans-unit id="b137843157d0c84746fc741646417e1d62ee006b" translate="yes" xml:space="preserve">
          <source>Trace is a data model for touch input data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">跟踪是用于触摸输入数据的数据模型。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="036760f263f21feec8d9c06c5e1acd6e4e3d7bed" translate="yes" xml:space="preserve">
          <source>Trace objects are owned by their creator, which is the input method in normal case. This means the objects are constructed in the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;InputMethod.traceBegin()&lt;/a&gt; (QML) method.</source>
          <target state="translated">跟踪对象归其创建者所有，通常情况下是输入方法。这意味着这些对象是在&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;InputMethod.traceBegin（）&lt;/a&gt;（QML）方法中构造的。</target>
        </trans-unit>
        <trans-unit id="c35654519e64fa033d2f0c365b32195fac50cc36" translate="yes" xml:space="preserve">
          <source>Trace provides the data model for coordinate data and other optional data associated with a single stroke.</source>
          <target state="translated">Trace提供了坐标数据和其他与单个行程相关联的可选数据的数据模型。</target>
        </trans-unit>
        <trans-unit id="5b19d34389de65bdd272825f3b0fb91636bde18d" translate="yes" xml:space="preserve">
          <source>Trace.addPoint()</source>
          <target state="translated">Trace.addPoint()</target>
        </trans-unit>
        <trans-unit id="7be9775b8a4d45342a86fb8c79f23415da8d63ea" translate="yes" xml:space="preserve">
          <source>Trace.canceled</source>
          <target state="translated">Trace.canceled</target>
        </trans-unit>
        <trans-unit id="c085530318c7beb3cba9f04139453de6fecf41ba" translate="yes" xml:space="preserve">
          <source>Trace.channelData()</source>
          <target state="translated">Trace.channelData()</target>
        </trans-unit>
        <trans-unit id="f4cdd3c3118aaa7fc93e94ded4184ea497c423d4" translate="yes" xml:space="preserve">
          <source>Trace.channels</source>
          <target state="translated">Trace.channels</target>
        </trans-unit>
        <trans-unit id="5cf792874775e3eaa9073d882445dba6f973a96b" translate="yes" xml:space="preserve">
          <source>Trace.final</source>
          <target state="translated">Trace.final</target>
        </trans-unit>
        <trans-unit id="a38396aaf5d82ffa124d3e19ef8e1d6f00a4b944" translate="yes" xml:space="preserve">
          <source>Trace.opacity</source>
          <target state="translated">Trace.opacity</target>
        </trans-unit>
        <trans-unit id="462b4f7e06c3ec5cfde65795650b72ffb5ccfa02" translate="yes" xml:space="preserve">
          <source>Trace.points()</source>
          <target state="translated">Trace.points()</target>
        </trans-unit>
        <trans-unit id="f18aa520a18c3c07866d182a44ba505c14697288" translate="yes" xml:space="preserve">
          <source>Trace.setChannelData()</source>
          <target state="translated">Trace.setChannelData()</target>
        </trans-unit>
        <trans-unit id="21a8adf8bde737260f64c4624f3fd199a08b62c8" translate="yes" xml:space="preserve">
          <source>Trace.traceId</source>
          <target state="translated">Trace.traceId</target>
        </trans-unit>
        <trans-unit id="1667917ce1ab4d050b87e038854e515d1a0805b0" translate="yes" xml:space="preserve">
          <source>TraceCanvas (QML type)</source>
          <target state="translated">TraceCanvas (QML类型)</target>
        </trans-unit>
        <trans-unit id="38e5a68b8f77e24548259b81de32c85e4e669b18" translate="yes" xml:space="preserve">
          <source>TraceCanvas QML Type</source>
          <target state="translated">TraceCanvas QML类型</target>
        </trans-unit>
        <trans-unit id="c74a0172fce8bd770d6a63c3d4db171e0030c64a" translate="yes" xml:space="preserve">
          <source>TraceCanvas.autoDestroy</source>
          <target state="translated">TraceCanvas.autoDestroy</target>
        </trans-unit>
        <trans-unit id="7f826762c5d138ebd9dc5849b3110189021fdfad" translate="yes" xml:space="preserve">
          <source>TraceCanvas.autoDestroyDelay</source>
          <target state="translated">TraceCanvas.autoDestroyDelay</target>
        </trans-unit>
        <trans-unit id="163c7aca59ecf40ffdc2511d32e161df584ae74f" translate="yes" xml:space="preserve">
          <source>TraceCanvas.renderFunction</source>
          <target state="translated">TraceCanvas.renderFunction</target>
        </trans-unit>
        <trans-unit id="e6355c960e0ef8a8504fc726376e7604aa7f3d9e" translate="yes" xml:space="preserve">
          <source>TraceCanvas.renderSmoothedLine()</source>
          <target state="translated">TraceCanvas.renderSmoothedLine()</target>
        </trans-unit>
        <trans-unit id="9caece96307272a543b2c930d551a5c24716b540" translate="yes" xml:space="preserve">
          <source>TraceCanvas.trace</source>
          <target state="translated">TraceCanvas.trace</target>
        </trans-unit>
        <trans-unit id="0ff03f5feb2bc115c76f35f35d000ecdb66ee781" translate="yes" xml:space="preserve">
          <source>TraceInputArea (QML type)</source>
          <target state="translated">TraceInputArea (QML类型)</target>
        </trans-unit>
        <trans-unit id="feb3afe70a3e562351c673046a73dcb48b0527a5" translate="yes" xml:space="preserve">
          <source>TraceInputArea QML Type</source>
          <target state="translated">TraceInputArea QML类型</target>
        </trans-unit>
        <trans-unit id="78384d868eb3d74c85554c06f6ad5e4efbdd1465" translate="yes" xml:space="preserve">
          <source>TraceInputArea.boundingBox</source>
          <target state="translated">TraceInputArea.boundingBox</target>
        </trans-unit>
        <trans-unit id="34a21bb6109861eeafa513fd88290452044eb33b" translate="yes" xml:space="preserve">
          <source>TraceInputArea.canvasType</source>
          <target state="translated">TraceInputArea.canvasType</target>
        </trans-unit>
        <trans-unit id="bac0e778be22b2448b2f205ed2a2a49bb8804c28" translate="yes" xml:space="preserve">
          <source>TraceInputArea.horizontalRulers</source>
          <target state="translated">TraceInputArea.horizontalRulers</target>
        </trans-unit>
        <trans-unit id="29db0777ba85c2ff73641691c7144528746837da" translate="yes" xml:space="preserve">
          <source>TraceInputArea.patternRecognitionMode</source>
          <target state="translated">TraceInputArea.patternRecognitionMode</target>
        </trans-unit>
        <trans-unit id="b9ada57e9ed34b4481fd985ced780e30bc41d502" translate="yes" xml:space="preserve">
          <source>TraceInputArea.verticalRulers</source>
          <target state="translated">TraceInputArea.verticalRulers</target>
        </trans-unit>
        <trans-unit id="75d5e1eef20465647269907cfc93cbead78bd682" translate="yes" xml:space="preserve">
          <source>TraceInputKey</source>
          <target state="translated">TraceInputKey</target>
        </trans-unit>
        <trans-unit id="3152c5ca50456c7592b6a1d11ad992b29f63a818" translate="yes" xml:space="preserve">
          <source>TraceInputKey (QML type)</source>
          <target state="translated">TraceInputKey (QML类型)</target>
        </trans-unit>
        <trans-unit id="8723327e19ca87cd4c3c14056525153b90fba0e4" translate="yes" xml:space="preserve">
          <source>TraceInputKey QML Type</source>
          <target state="translated">TraceInputKey QML类型</target>
        </trans-unit>
        <trans-unit id="56aeb1650b8001777ebb8e342d0fb143c4287ee5" translate="yes" xml:space="preserve">
          <source>TraceInputKey.boundingBox</source>
          <target state="translated">TraceInputKey.boundingBox</target>
        </trans-unit>
        <trans-unit id="0d1cecef8b16e94aafdc86c4ee4b5114d347ecf0" translate="yes" xml:space="preserve">
          <source>TraceInputKey.canvasType</source>
          <target state="translated">TraceInputKey.canvasType</target>
        </trans-unit>
        <trans-unit id="48d611a811c39e44a5309d386d5371fb5ada5151" translate="yes" xml:space="preserve">
          <source>TraceInputKey.horizontalRulers</source>
          <target state="translated">TraceInputKey.horizontalRulers</target>
        </trans-unit>
        <trans-unit id="429eaf96ad19585a84ce6f455675bf1be36301d9" translate="yes" xml:space="preserve">
          <source>TraceInputKey.patternRecognitionMode</source>
          <target state="translated">TraceInputKey.patternRecognitionMode</target>
        </trans-unit>
        <trans-unit id="c249bcbb91ffb68c045619b05febbdc74d9d8afe" translate="yes" xml:space="preserve">
          <source>TraceInputKey.verticalRulers</source>
          <target state="translated">TraceInputKey.verticalRulers</target>
        </trans-unit>
        <trans-unit id="86c421075d93fd01afe9dc3bfb4cfe7c915d8eb7" translate="yes" xml:space="preserve">
          <source>TraceInputKey.weight</source>
          <target state="translated">TraceInputKey.weight</target>
        </trans-unit>
        <trans-unit id="4457bbda9ff79a0b98ff552316257762da021a7b" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel (QML type)</source>
          <target state="translated">TraceInputKeyPanel (QML类型)</target>
        </trans-unit>
        <trans-unit id="ac9c4d606b1e70ccca05144ec95a59e791ce00cf" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel QML Type</source>
          <target state="translated">TraceInputKeyPanel QML类型</target>
        </trans-unit>
        <trans-unit id="9519caaa28deaa127d87c3cf3980d0354fea43ce" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel.control</source>
          <target state="translated">TraceInputKeyPanel.control</target>
        </trans-unit>
        <trans-unit id="5fc064729a22af58d5b33c35a0b297bd6188218b" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel.traceMargins</source>
          <target state="translated">TraceInputKeyPanel.traceMargins</target>
        </trans-unit>
        <trans-unit id="9ea81a368d04beb4e8678cccb08c85ffa4822bc6" translate="yes" xml:space="preserve">
          <source>TrackCount</source>
          <target state="translated">TrackCount</target>
        </trans-unit>
        <trans-unit id="3be689c43c3bf6dffef14ab289b5ea5fa00866fc" translate="yes" xml:space="preserve">
          <source>TrackNumber</source>
          <target state="translated">TrackNumber</target>
        </trans-unit>
        <trans-unit id="efd45e2d07204cce15cc6fce0ad2c20c5c3d78f1" translate="yes" xml:space="preserve">
          <source>Tracking properties</source>
          <target state="translated">追踪属性</target>
        </trans-unit>
        <trans-unit id="65b32d44f30685c83ef8cd0221938c9414aacae0" translate="yes" xml:space="preserve">
          <source>Tracks all values</source>
          <target state="translated">追踪所有数值</target>
        </trans-unit>
        <trans-unit id="ee03d8117953811e2930f2fdd364031f36e1bd0e" translate="yes" xml:space="preserve">
          <source>Tracks final values</source>
          <target state="translated">追踪最终值</target>
        </trans-unit>
        <trans-unit id="1749b125b33c27352807028948e114b109eb0f1d" translate="yes" xml:space="preserve">
          <source>Traditional C strings, also known as '\0'-terminated strings, are sequences of bytes, specified by a start-point and implicitly including each byte up to, but not including, the first '\0' byte thereafter. Methods that accept such a pointer, without a length, will interpret it as this sequence of bytes. Such a sequence, by construction, cannot contain a '\0' byte.</source>
          <target state="translated">传统的C语言字符串,也被称为'/0'结束的字符串,是由一个起始点指定的字节序列,并隐含地包括每个字节,直到但不包括其后的第一个'/0'字节。接受这样一个指针的方法,如果没有长度,将把它解释为这个字节序列。根据结构,这样的序列不能包含一个'/0'字节。</target>
        </trans-unit>
        <trans-unit id="3b612e72ed8b42ec172f3e6dbff27929a0f89575" translate="yes" xml:space="preserve">
          <source>Traditional Chinese</source>
          <target state="translated">中国传统</target>
        </trans-unit>
        <trans-unit id="29b8688f5d09c26855bb5acbbb350f7634bd2590" translate="yes" xml:space="preserve">
          <source>Traditional Chinese (Cangjie)</source>
          <target state="translated">仓颉</target>
        </trans-unit>
        <trans-unit id="1eefc723d810f8c25fb575ffab76ee7f52436b01" translate="yes" xml:space="preserve">
          <source>Traditional Chinese (Zhuyin)</source>
          <target state="translated">繁体中文(注音)</target>
        </trans-unit>
        <trans-unit id="cf5b8b6cc0e53870c81a8db47c6773ebcc5c1870" translate="yes" xml:space="preserve">
          <source>Traditional Chinese IME (tcime)</source>
          <target state="translated">繁体中文IME(tcime)</target>
        </trans-unit>
        <trans-unit id="902b10bf7a543ae2d3105eccc3fb2d254c3b66cd" translate="yes" xml:space="preserve">
          <source>Traditional Chinese Layout (Cangjie)</source>
          <target state="translated">仓颉造字</target>
        </trans-unit>
        <trans-unit id="734d75317026a5fd76194f6bddb669b8ec8ec5d6" translate="yes" xml:space="preserve">
          <source>Traditional Chinese Layout (Zhuyin)</source>
          <target state="translated">繁体字布局(注音</target>
        </trans-unit>
        <trans-unit id="e25beb09e59425abd096cd154e6eca180425b36a" translate="yes" xml:space="preserve">
          <source>Traditional style used for Windows, GNOME, and earlier versions of KDE. Labels are left aligned, and expanding fields grow to fill the available space. (This normally corresponds to what we would get using a two-column &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;.)</source>
          <target state="translated">Windows，GNOME和早期版本的KDE使用的传统样式。标签保持左对齐，并且扩展字段会增长以填充可用空间。（这通常对应于我们使用两列&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;会得到的结果。）</target>
        </trans-unit>
        <trans-unit id="8b30ed0cae8fc0372f9ddac7e1368689bf5d174c" translate="yes" xml:space="preserve">
          <source>Traditionally, only Linux and UNIX support icon themes on the platform level, but it is possible to bundle a compliant icon theme in an application to use themed icons on any platform.</source>
          <target state="translated">传统上,只有Linux和UNIX在平台级别上支持图标主题,但可以在应用程序中捆绑一个符合要求的图标主题,在任何平台上使用主题图标。</target>
        </trans-unit>
        <trans-unit id="00f0f7d5820fd11554c488321b5cfb4cecb145db" translate="yes" xml:space="preserve">
          <source>Traditionally, such two-column form layouts were achieved using &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;. &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; is a higher-level alternative that provides the following advantages:</source>
          <target state="translated">传统上，这种两列表单布局是使用&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;实现的。&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;是更高级别的替代方案，具有以下优点：</target>
        </trans-unit>
        <trans-unit id="50c755614efd9be5552fd94fc17455c48c8ecb8d" translate="yes" xml:space="preserve">
          <source>Traditionally, such two-column form layouts were achieved using &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;. QFormLayout is a higher-level alternative that provides the following advantages:</source>
          <target state="translated">传统上，这种两列表单布局是使用&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;实现的。QFormLayout是更高级别的替代方案，具有以下优点：</target>
        </trans-unit>
        <trans-unit id="9efe319fc01a62d64766258c8d8bdf163b77c709" translate="yes" xml:space="preserve">
          <source>Traditionally, to support high DPI, Qt scales fonts automatically and provides a DPI value that application code can use to scale the rest of the UI.</source>
          <target state="translated">传统上,为了支持高DPI,Qt会自动缩放字体,并提供一个DPI值,应用程序代码可以用来缩放UI的其他部分。</target>
        </trans-unit>
        <trans-unit id="509ae83ca71b2afded14a6fb3b91e22971ec2acd" translate="yes" xml:space="preserve">
          <source>TrailEmitter (QML type)</source>
          <target state="translated">TrailEmitter (QML类型)</target>
        </trans-unit>
        <trans-unit id="d67a5497df7ab908c219c6d8c91913f9c9a20071" translate="yes" xml:space="preserve">
          <source>TrailEmitter QML Type</source>
          <target state="translated">TrailEmitter QML类型</target>
        </trans-unit>
        <trans-unit id="701d0fb252c73ba8e70725233dad8303b3c52c23" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitFollowParticles()</source>
          <target state="translated">TrailEmitter.emitFollowParticles()</target>
        </trans-unit>
        <trans-unit id="d5511621dd2e486b50ef4392ed4b4bb55add7f7e" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitHeight</source>
          <target state="translated">TrailEmitter.emitHeight</target>
        </trans-unit>
        <trans-unit id="21f0b15bb6ae670df2559740cde09e6a655b01c3" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitRatePerParticle</source>
          <target state="translated">TrailEmitter.emitRatePerParticle</target>
        </trans-unit>
        <trans-unit id="ba3ceb5d44d8ab602d836d1d782c282900e6ca92" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitShape</source>
          <target state="translated">TrailEmitter.emitShape</target>
        </trans-unit>
        <trans-unit id="a38e7fefde22ee34ac7f3f1ec5cda74d40f9f121" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitWidth</source>
          <target state="translated">TrailEmitter.emitWidth</target>
        </trans-unit>
        <trans-unit id="a6892ebb895031670ee41e614e88809fbabf4cef" translate="yes" xml:space="preserve">
          <source>TrailEmitter.follow</source>
          <target state="translated">TrailEmitter.follow</target>
        </trans-unit>
        <trans-unit id="ae51becd9ab1402efa5053bfcfffee037625f407" translate="yes" xml:space="preserve">
          <source>TrailEmitter.velocityFromMovement</source>
          <target state="translated">TrailEmitter.velocityFromMovement</target>
        </trans-unit>
        <trans-unit id="edafaff1940ef6ef4a2158b91a4fd58cfc8ee63d" translate="yes" xml:space="preserve">
          <source>TrailEmitters are a special type of emitter which emits particles from the location of other logicial particles. Any logical particle of the followed type within the bounds of a &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt; will cause particle emission from its location, as if there were an Emitter on it with the same properties as the &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;.</source>
          <target state="translated">TrailEmitters是一种特殊类型的发射器，它从其他逻辑粒子的位置发射粒子。在&lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;的边界内任何跟随类型的逻辑粒子都将导致从其位置发出粒子，就像在其上具有与&lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;相同的属性的Emitter一样。</target>
        </trans-unit>
        <trans-unit id="c293924e25e3fceb11bc58f7c5a032491af14d71" translate="yes" xml:space="preserve">
          <source>Trailing versioning numbers on Unix are ignored.</source>
          <target state="translated">Unix上的尾部版本号会被忽略。</target>
        </trans-unit>
        <trans-unit id="3ea5298a3ea2b7d92e4fb85f819f6e2eece173a5" translate="yes" xml:space="preserve">
          <source>Training &amp;amp; Events</source>
          <target state="translated">培训与活动</target>
        </trans-unit>
        <trans-unit id="c5ab7ba2d7b02b3adc3ea78323e7cb2b9ecd80d7" translate="yes" xml:space="preserve">
          <source>Transaction (QML type)</source>
          <target state="translated">交易(QML类型)</target>
        </trans-unit>
        <trans-unit id="89468205ff66b2f7262611ab1ce9a98e66f84053" translate="yes" xml:space="preserve">
          <source>Transaction QML Type</source>
          <target state="translated">交易QML类型</target>
        </trans-unit>
        <trans-unit id="3ff4afdda498b540b84a0cf79e907afdef9e33ae" translate="yes" xml:space="preserve">
          <source>Transaction cannot be created directly in QML, but is only provided as an argument to the purchase handlers in the products.</source>
          <target state="translated">交易不能直接在QML中创建,只能作为参数提供给产品中的购买处理程序。</target>
        </trans-unit>
        <trans-unit id="33cdf39f209b2e0851c17289e3744829ece6b997" translate="yes" xml:space="preserve">
          <source>Transaction contains information about a transaction in the external app store and is usually provided as a result of calling &lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;purchase()&lt;/a&gt; on a product. When the purchase flow has ended, whether it's successful or not, either the product's &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt; or &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt; handler will be called with a transaction object as argument.</source>
          <target state="translated">交易包含有关外部应用商店中交易的信息，通常是通过在产品上调用&lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;Purchase（）&lt;/a&gt;来提供的。购买流程结束后，无论是否成功，都将使用交易对象作为参数来调用产品的&lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt;或&lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt;处理程序。</target>
        </trans-unit>
        <trans-unit id="6f967e54fe8662399a024b08f961e883d8c37103" translate="yes" xml:space="preserve">
          <source>Transaction failed error.</source>
          <target state="translated">交易失败错误。</target>
        </trans-unit>
        <trans-unit id="ece7293ac992c1c47d03c4c8b7a268d478ca3119" translate="yes" xml:space="preserve">
          <source>Transaction.CanceledByUser The transaction was canceled by the user.</source>
          <target state="translated">Transaction.CanceledByUser 该交易被用户取消。</target>
        </trans-unit>
        <trans-unit id="0f2d0818f12281a8f6c2f712666b5e1e5cdf6307" translate="yes" xml:space="preserve">
          <source>Transaction.ErrorOccurred The transaction failed due to an error.</source>
          <target state="translated">Transaction.ErrorOccurred 交易因错误而失败。</target>
        </trans-unit>
        <trans-unit id="9d45f3df78e3d992b7df095378d7318ae51e71ad" translate="yes" xml:space="preserve">
          <source>Transaction.NoFailure The transaction did not fail.</source>
          <target state="translated">Transaction.NoFailure 交易没有失败。</target>
        </trans-unit>
        <trans-unit id="a1f9aa877cfe5b78f38e3ee33c1df8e64068aa96" translate="yes" xml:space="preserve">
          <source>Transaction.PurchaseApproved The purchase was successfully completed.</source>
          <target state="translated">Transaction.PurchaseApproved 购买成功完成。</target>
        </trans-unit>
        <trans-unit id="0d572fddf3c8e15eb29a11b536292031d5718f75" translate="yes" xml:space="preserve">
          <source>Transaction.PurchaseFailed The purchase was not completed for some reason. This could be because the user canceled the transaction, but it could also for example be caused by a missing network connection.</source>
          <target state="translated">Transaction.PurchaseFailed 由于某种原因,购买没有完成。这可能是因为用户取消了交易,但也可能是由于网络连接丢失造成的。</target>
        </trans-unit>
        <trans-unit id="d4c131d8a76a2b959207e6d3168a2bd70764b069" translate="yes" xml:space="preserve">
          <source>Transaction.errorString</source>
          <target state="translated">Transaction.errorString</target>
        </trans-unit>
        <trans-unit id="7534d04baae7cc856ef469966b92fd8b13d09607" translate="yes" xml:space="preserve">
          <source>Transaction.failureReason</source>
          <target state="translated">Transaction.failureReason</target>
        </trans-unit>
        <trans-unit id="be4af1216a83f5a3d242335543d9af158d30675c" translate="yes" xml:space="preserve">
          <source>Transaction.finalize()</source>
          <target state="translated">Transaction.finalize()</target>
        </trans-unit>
        <trans-unit id="b50a62d15647325cfb613232c88b80979692962d" translate="yes" xml:space="preserve">
          <source>Transaction.orderId</source>
          <target state="translated">Transaction.orderId</target>
        </trans-unit>
        <trans-unit id="f6a3f8aea34500db8ca231cc5df2fcbdcc442e44" translate="yes" xml:space="preserve">
          <source>Transaction.product</source>
          <target state="translated">Transaction.product</target>
        </trans-unit>
        <trans-unit id="3f766b1d43d467843fda1c8e49ae80a83e385346" translate="yes" xml:space="preserve">
          <source>Transaction.status</source>
          <target state="translated">Transaction.status</target>
        </trans-unit>
        <trans-unit id="89083a25d4247bcaccd7dc44cca3f2711ef5da8b" translate="yes" xml:space="preserve">
          <source>Transaction.timestamp</source>
          <target state="translated">Transaction.timestamp</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="27074b7a05d08221b2fd4503b38cb16998811097" translate="yes" xml:space="preserve">
          <source>Transactions can also be emitted after calling &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;(), at which point a new transaction will be emitted for each previously purchased unlockable product with the status of &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;PurchaseRestored&lt;/a&gt;.</source>
          <target state="translated">也可以在调用&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore :: restorePurchases&lt;/a&gt;（）之后发出事务，这时将为每个先前购买的状态为&lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;PurchaseRestored的&lt;/a&gt;可解锁产品发出新事务。</target>
        </trans-unit>
        <trans-unit id="fbb9aed53bb135f116543ab56f8b7dd85ae030d5" translate="yes" xml:space="preserve">
          <source>Transactions can be used to ensure that a complex operation is atomic (for example, looking up a foreign key and creating a record), or to provide a means of canceling a complex change in the middle.</source>
          <target state="translated">事务可以用来确保一个复杂的操作是原子的(例如,查找一个外键并创建一条记录),或者提供一种取消中间复杂变化的方法。</target>
        </trans-unit>
        <trans-unit id="a1264906240bb7d010ab5ef49f9ec15138fbf773" translate="yes" xml:space="preserve">
          <source>Transcribes this string into the given</source>
          <target state="translated">将这个字符串转写成给定的</target>
        </trans-unit>
        <trans-unit id="c996614b6cd8d4054725c1f17d67a2470007363a" translate="yes" xml:space="preserve">
          <source>Transfers are aborted if no bytes are transferred before the timeout expires. Zero means no timer is set. If no argument is provided, the timeout is &lt;a href=&quot;qnetworkrequest#TransferTimeoutConstant-enum&quot;&gt;QNetworkRequest::DefaultTransferTimeoutConstant&lt;/a&gt;. If this function is not called, the timeout is disabled and has the value zero.</source>
          <target state="translated">如果在超时到期之前未传输任何字节，传输将中止。零表示未设置计时器。如果未提供任何参数，则超时为&lt;a href=&quot;qnetworkrequest#TransferTimeoutConstant-enum&quot;&gt;QNetworkRequest :: DefaultTransferTimeoutConstant&lt;/a&gt;。如果未调用此函数，则超时将被禁用且值为零。</target>
        </trans-unit>
        <trans-unit id="5252daefa5f541e736e68a9e982c11055b43e5e5" translate="yes" xml:space="preserve">
          <source>Transfers are aborted if no bytes are transferred before the timeout expires. Zero means no timer is set. If no argument is provided, the timeout is &lt;a href=&quot;qnetworkrequest#TransferTimeoutConstant-enum&quot;&gt;QNetworkRequest::DefaultTransferTimeoutConstant&lt;/a&gt;. If this function is not called, the timeout is disabled and has the value zero. The request-specific non-zero timeouts set for the requests that are executed override this value. This means that if &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; has an enabled timeout, it needs to be disabled to execute a request without a timeout.</source>
          <target state="translated">如果在超时到期之前未传输任何字节，传输将中止。零表示未设置计时器。如果未提供任何参数，则超时为&lt;a href=&quot;qnetworkrequest#TransferTimeoutConstant-enum&quot;&gt;QNetworkRequest :: DefaultTransferTimeoutConstant&lt;/a&gt;。如果未调用此函数，则超时将被禁用且值为零。为已执行的请求设置的特定于请求的非零超时将覆盖此值。这意味着如果&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;具有启用的超时，则需要禁用它以执行没有超时的请求。</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="2fc13014b347ef7a08da8afbfaf2d3001505ed14" translate="yes" xml:space="preserve">
          <source>Transform (QML type)</source>
          <target state="translated">变换(QML型)</target>
        </trans-unit>
        <trans-unit id="365dc0cb550da635c8dbc1b8c90597751b67a817" translate="yes" xml:space="preserve">
          <source>Transform Nodes</source>
          <target state="translated">转换节点</target>
        </trans-unit>
        <trans-unit id="5dcb6b731e1f3a09a84ddfc57a0d1701300476e2" translate="yes" xml:space="preserve">
          <source>Transform QML Type</source>
          <target state="translated">转换QML类型</target>
        </trans-unit>
        <trans-unit id="79dc77d06998a6fea7bef5c134a4e4816233fcba" translate="yes" xml:space="preserve">
          <source>Transform.fromAxesAndAngles()</source>
          <target state="translated">Transform.fromAxesAndAngles()</target>
        </trans-unit>
        <trans-unit id="1f38f7a6a09bd05b386498e420ea9814d2d4bcdc" translate="yes" xml:space="preserve">
          <source>Transform.fromAxisAndAngle()</source>
          <target state="translated">Transform.fromAxisAndAngle()</target>
        </trans-unit>
        <trans-unit id="d5c5c41fc97affc4d0c123decb8c141885db1d26" translate="yes" xml:space="preserve">
          <source>Transform.fromEulerAngles()</source>
          <target state="translated">Transform.fromEulerAngles()</target>
        </trans-unit>
        <trans-unit id="6422d327e9a535c2d46e2124fddad7872f5ddd00" translate="yes" xml:space="preserve">
          <source>Transform.matrix</source>
          <target state="translated">Transform.matrix</target>
        </trans-unit>
        <trans-unit id="4d41ed47b64fc797539872f575a5de789f816423" translate="yes" xml:space="preserve">
          <source>Transform.rotateAround()</source>
          <target state="translated">Transform.rotateAround()</target>
        </trans-unit>
        <trans-unit id="461093f7d4b38b0bcce95ab13db0147086d145e8" translate="yes" xml:space="preserve">
          <source>Transform.rotation</source>
          <target state="translated">Transform.rotation</target>
        </trans-unit>
        <trans-unit id="fe41b5fa8e278fd180e69318ccafeb62e17c645e" translate="yes" xml:space="preserve">
          <source>Transform.rotationX</source>
          <target state="translated">Transform.rotationX</target>
        </trans-unit>
        <trans-unit id="c066d8679391cf241cd37830bac0dad898f5fe56" translate="yes" xml:space="preserve">
          <source>Transform.rotationY</source>
          <target state="translated">Transform.rotationY</target>
        </trans-unit>
        <trans-unit id="a2df16b33728d13643b65c49c98b1ea0417e4f5b" translate="yes" xml:space="preserve">
          <source>Transform.rotationZ</source>
          <target state="translated">Transform.rotationZ</target>
        </trans-unit>
        <trans-unit id="5fa9c1b92508488e2f4ab13a3bbb6e2efb2abf0a" translate="yes" xml:space="preserve">
          <source>Transform.scale</source>
          <target state="translated">Transform.scale</target>
        </trans-unit>
        <trans-unit id="3ff8c01bc8394f749ed2809d381807d8ace9048b" translate="yes" xml:space="preserve">
          <source>Transform.scale3D</source>
          <target state="translated">Transform.scale3D</target>
        </trans-unit>
        <trans-unit id="7f2c20e112df92f162c8958256e3c1c8ac5b4422" translate="yes" xml:space="preserve">
          <source>Transform.translation</source>
          <target state="translated">Transform.translation</target>
        </trans-unit>
        <trans-unit id="08cd4b4aa209ec18bf58f27edf7769c43d3cc327" translate="yes" xml:space="preserve">
          <source>TransformSpace : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">TransformSpace：&lt;a href=&quot;qml-enumeration&quot;&gt;枚举&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">Transformation</target>
        </trans-unit>
        <trans-unit id="53c006aff4a770fd995f6d59ab7a7765270d5555" translate="yes" xml:space="preserve">
          <source>Transformation between color spaces</source>
          <target state="translated">色彩空间之间的转换</target>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="translated">Transformations</target>
        </trans-unit>
        <trans-unit id="3cb35b5dd25b6abd872272252cc7b856fc1f2022" translate="yes" xml:space="preserve">
          <source>Transformations and settings applied to the</source>
          <target state="translated">应用到的变换和设置</target>
        </trans-unit>
        <trans-unit id="fe5ccddbc33d3e482ba68dcf3d6632e02ac31a9b" translate="yes" xml:space="preserve">
          <source>Transformations apply the node's subtree and can be nested. Multiple transform nodes will be accumulated by intersecting all their matrices. The accumulation happens as part of the rendering.</source>
          <target state="translated">变换应用了节点的子树,并且可以嵌套。多个变换节点将通过与它们的所有矩阵相交进行累积。累积是作为渲染的一部分发生的。</target>
        </trans-unit>
        <trans-unit id="61f6360cee6f094a63d893c3715a4d2c3b210758" translate="yes" xml:space="preserve">
          <source>Transformations are computed in true 3D space using &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;. When the transformation is applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, it will be projected back to a 2D &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. When multiple &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; objects are applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, all of the transformations are computed in true 3D space, with the projection back to 2D only occurring after the last &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; is applied. The exception to this is &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;, which projects back to 2D after each rotation to preserve the perspective effect around the X and Y axes.</source>
          <target state="translated">使用&lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;在真实的3D空间中计算转换。当将转换应用于&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem时&lt;/a&gt;，它将被投影回2D &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;。当将多个&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;对象应用于&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem时&lt;/a&gt;，所有转换都在真实的3D空间中进行计算，只有在应用了最后一个&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;之后，投影才回到2D 。&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;例外，它在每次旋转后投影回2D，以保留围绕X和Y轴的透视效果。</target>
        </trans-unit>
        <trans-unit id="143e43b3277fa341592b798340953015c316bc76" translate="yes" xml:space="preserve">
          <source>Transformations are computed in true 3D space using &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;. When the transformation is applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, it will be projected back to a 2D &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. When multiple QGraphicsTransform objects are applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, all of the transformations are computed in true 3D space, with the projection back to 2D only occurring after the last QGraphicsTransform is applied. The exception to this is &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;, which projects back to 2D after each rotation to preserve the perspective effect around the X and Y axes.</source>
          <target state="translated">使用&lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;在真实的3D空间中计算转换。当将变换应用于&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem时&lt;/a&gt;，它将被投影回2D &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;。当将多个QGraphicsTransform对象应用于&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem时&lt;/a&gt;，所有转换都在真实的3D空间中进行计算，只有在应用了最后一个QGraphicsTransform之后，才将投影转换回2D。&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;例外，它在每次旋转后投影回2D，以保留围绕X和Y轴的透视效果。</target>
        </trans-unit>
        <trans-unit id="bb3805727c77a2c997fa9024a756cfba5dfaeb09" translate="yes" xml:space="preserve">
          <source>Transforming a joint in a skeleton will move all vertexes connected to that joint. Since Joint inheriths from &lt;a href=&quot;qml-qtquick3d-node&quot;&gt;Node&lt;/a&gt;, a skeleton can be animated simply by using standard &lt;a href=&quot;qml-qtquick-animation&quot;&gt;QML animations&lt;/a&gt;.</source>
          <target state="translated">在骨骼中变换关节将移动连接到该关节的所有顶点。由于Joint从&lt;a href=&quot;qml-qtquick3d-node&quot;&gt;Node&lt;/a&gt;继承而来，因此可以简单地使用标准&lt;a href=&quot;qml-qtquick-animation&quot;&gt;QML动画&lt;/a&gt;对骨骼进行动画处理。</target>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="38522d1f5a13b7ccbc5853f3d5c571b4e0a742d4" translate="yes" xml:space="preserve">
          <source>Transforms an</source>
          <target state="translated">转换一个</target>
        </trans-unit>
        <trans-unit id="00c3a48e2941de3de7c8fe7615374d64efc10c51" translate="yes" xml:space="preserve">
          <source>Transforms the revision into an integer value, encoding the minor version into the least significant byte, and the major version into the second least significant byte.</source>
          <target state="translated">将修订版转化为一个整数值,将小版本编码为最小的字节,大版本编码为第二个最小的字节。</target>
        </trans-unit>
        <trans-unit id="ccd3f83f804d17121afeb3d5df4043d9cf85a2b4" translate="yes" xml:space="preserve">
          <source>Transforms the screen space coordinates</source>
          <target state="translated">转换屏幕空间坐标</target>
        </trans-unit>
        <trans-unit id="98d091f24ad0959c3b23e7ce47591c5ce5a88271" translate="yes" xml:space="preserve">
          <source>Transient parents are considered ancestors.</source>
          <target state="translated">暂住的父母视为祖先。</target>
        </trans-unit>
        <trans-unit id="93932d58d28d7a7af2ce6e8517411f351371c467" translate="yes" xml:space="preserve">
          <source>Transient parents are not considered ancestors.</source>
          <target state="translated">暂住的父母不视为祖先。</target>
        </trans-unit>
        <trans-unit id="4ead496f48fa5f6d2d96f52143b2d7c60b4140d3" translate="yes" xml:space="preserve">
          <source>Transition</source>
          <target state="translated">Transition</target>
        </trans-unit>
        <trans-unit id="64e16cea6b9adb7ae71bc893f954b6d9ba977f89" translate="yes" xml:space="preserve">
          <source>Transition (QML type)</source>
          <target state="translated">过渡(QML类型)</target>
        </trans-unit>
        <trans-unit id="1465a98eef7fabcc48edad0894a2334be278e351" translate="yes" xml:space="preserve">
          <source>Transition &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#getTransition-method&quot;&gt;getTransition&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">过渡&lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#getTransition-method&quot;&gt;getTransition&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（</target>
        </trans-unit>
        <trans-unit id="853f116972a86d9445a07c6db9a61fe9ff0d1ec4" translate="yes" xml:space="preserve">
          <source>Transition QML Type</source>
          <target state="translated">过渡QML类型</target>
        </trans-unit>
        <trans-unit id="3c3d00821f84660df862fae3c401baa1e37dc0b1" translate="yes" xml:space="preserve">
          <source>Transition based on a Qt signal</source>
          <target state="translated">基于Qt信号的过渡</target>
        </trans-unit>
        <trans-unit id="e9b2dcbefc036e0f13361df7ada277c54f894e4f" translate="yes" xml:space="preserve">
          <source>Transition for key events</source>
          <target state="translated">关键活动的过渡</target>
        </trans-unit>
        <trans-unit id="cc715323bb98246c36088529aacecdeafb7bb466" translate="yes" xml:space="preserve">
          <source>Transition for mouse events</source>
          <target state="translated">鼠标事件的过渡</target>
        </trans-unit>
        <trans-unit id="b9595409766d18ff003b5fbcfcf71de8108de2e0" translate="yes" xml:space="preserve">
          <source>Transition.animations</source>
          <target state="translated">Transition.animations</target>
        </trans-unit>
        <trans-unit id="77022057c8c82a207b19eb400ba177d05ed850cc" translate="yes" xml:space="preserve">
          <source>Transition.enabled</source>
          <target state="translated">Transition.enabled</target>
        </trans-unit>
        <trans-unit id="38b09e1dc8ac63ff7c0685c24c3d37de1d509fe0" translate="yes" xml:space="preserve">
          <source>Transition.from</source>
          <target state="translated">Transition.from</target>
        </trans-unit>
        <trans-unit id="48f0c1508003e4805d2afa46eeae20b585c89b47" translate="yes" xml:space="preserve">
          <source>Transition.reversible</source>
          <target state="translated">Transition.reversible</target>
        </trans-unit>
        <trans-unit id="4fcc82d0f7b902331fa161e074520783a013159f" translate="yes" xml:space="preserve">
          <source>Transition.running</source>
          <target state="translated">Transition.running</target>
        </trans-unit>
        <trans-unit id="ab39260fea78bd5cdfde4b98ccfd4bc7bd02a43c" translate="yes" xml:space="preserve">
          <source>Transitions</source>
          <target state="translated">Transitions</target>
        </trans-unit>
        <trans-unit id="ea73248ff9772f0d05961c11f38dcda5fe38ec1e" translate="yes" xml:space="preserve">
          <source>Transitions During State Changes</source>
          <target state="translated">国家变化期间的过渡</target>
        </trans-unit>
        <trans-unit id="561084bfbf246e487332c477a25c793c1627509c" translate="yes" xml:space="preserve">
          <source>Transitions are changes in the time-zone: these happen when DST turns on or off and when authorities alter the offsets for the time-zone.</source>
          <target state="translated">过渡是指时区的变化:当夏令时开启或关闭时,以及当局改变时区的偏移时,就会发生这种变化。</target>
        </trans-unit>
        <trans-unit id="97548df1af69171d7132125f7b65b5903d175685" translate="yes" xml:space="preserve">
          <source>Transitions can be used to animate items that are added to, moved within, or removed from a positioner.</source>
          <target state="translated">过渡可用于对添加到定位器、在定位器内移动或从定位器中移除的项目进行动画处理。</target>
        </trans-unit>
        <trans-unit id="7d53a57915dd6ffe0b81d52095ead9ad6b0e2aed" translate="yes" xml:space="preserve">
          <source>Transitions can cause animations to be played. Use the &lt;a href=&quot;qabstracttransition#addAnimation&quot;&gt;addAnimation&lt;/a&gt;() function to add an animation to the transition.</source>
          <target state="translated">过渡会导致播放动画。使用&lt;a href=&quot;qabstracttransition#addAnimation&quot;&gt;addAnimation&lt;/a&gt;（）函数向过渡添加动画。</target>
        </trans-unit>
        <trans-unit id="cb3ba23c44ce3f162e57a226778c3ed4e260732d" translate="yes" xml:space="preserve">
          <source>Transitions for adding items apply to items that are created as part of a positioner, as well as those that are reparented to become children of a positioner.</source>
          <target state="translated">添加项目的过渡适用于作为定位器的一部分而创建的项目,也适用于那些被替换为定位器的子项目。</target>
        </trans-unit>
        <trans-unit id="eb8ef7ca32cdcf69c93ce48c803a4fb5d3c6678b" translate="yes" xml:space="preserve">
          <source>Transitions for removing items apply to items within a positioner that are deleted, as well as those that are removed from a positioner and given new parents in a document.</source>
          <target state="translated">删除项目的过渡适用于定位器中被删除的项目,以及从定位器中删除并在文档中赋予新的父项目。</target>
        </trans-unit>
        <trans-unit id="2be17aa181d8226bfad83ce993e838fa79dcce4d" translate="yes" xml:space="preserve">
          <source>Translate</source>
          <target state="translated">Translate</target>
        </trans-unit>
        <trans-unit id="a2106bebea9562707ea729b8f6e5afba7be8637b" translate="yes" xml:space="preserve">
          <source>Translate (QML type)</source>
          <target state="translated">翻译(QML类型)</target>
        </trans-unit>
        <trans-unit id="ff3cb4fbb1f5aa2e51da4f7d4c383020c2e637e2" translate="yes" xml:space="preserve">
          <source>Translate QML Type</source>
          <target state="translated">翻译QML类型</target>
        </trans-unit>
        <trans-unit id="9c49577ffc1c815a2250f707b88049227ff76a82" translate="yes" xml:space="preserve">
          <source>Translate all points in the polygon by the given</source>
          <target state="translated">将多边形中的所有点按给定的</target>
        </trans-unit>
        <trans-unit id="36ff05bcac4c53c748ac653efccfac6eb4f86188" translate="yes" xml:space="preserve">
          <source>Translate is available.</source>
          <target state="translated">可以进行翻译。</target>
        </trans-unit>
        <trans-unit id="7181fd5064f8842da6d33631b6c98ee50b31b305" translate="yes" xml:space="preserve">
          <source>Translate the view center causing the view direction to remain the same</source>
          <target state="translated">转换视图中心,使视图方向保持不变。</target>
        </trans-unit>
        <trans-unit id="964417f1c6ca1adb4d7b6891db83732f01168ed4" translate="yes" xml:space="preserve">
          <source>Translate.x</source>
          <target state="translated">Translate.x</target>
        </trans-unit>
        <trans-unit id="9430912bc91e04f3b3ea764ab435b6e44fa62b80" translate="yes" xml:space="preserve">
          <source>Translate.y</source>
          <target state="translated">Translate.y</target>
        </trans-unit>
        <trans-unit id="331bdba68ccb193007127f32b17f6b7f65432661" translate="yes" xml:space="preserve">
          <source>Translates (moves) the region</source>
          <target state="translated">翻译(移动)区域</target>
        </trans-unit>
        <trans-unit id="9d2f5d2c2a82e3bf088bf6adebfa1c33437a3f9d" translate="yes" xml:space="preserve">
          <source>Translates all elements in the path by (</source>
          <target state="translated">将路径中的所有元素通过(</target>
        </trans-unit>
        <trans-unit id="472413ce037c08d77377d252385e8f77fffb8963" translate="yes" xml:space="preserve">
          <source>Translates all elements in the path by the given</source>
          <target state="translated">将路径中的所有元素通过给定的</target>
        </trans-unit>
        <trans-unit id="a31904f2a76b1fd9132b19b8098a12bb5f0795e8" translate="yes" xml:space="preserve">
          <source>Translates all points in the polygon by (</source>
          <target state="translated">将多边形中的所有点通过(</target>
        </trans-unit>
        <trans-unit id="38a2b7d589fdd5bccc883f875f3a47b28a2ab168" translate="yes" xml:space="preserve">
          <source>Translates all points in the polygon by the given</source>
          <target state="translated">将多边形中的所有点按给定的</target>
        </trans-unit>
        <trans-unit id="e6c1bc768a18ca38fbf1d645e3df6190d54a6a73" translate="yes" xml:space="preserve">
          <source>Translates the camera's position and its view vector by</source>
          <target state="translated">将摄像机的位置和它的视图向量通过以下方式转换</target>
        </trans-unit>
        <trans-unit id="927d9d9c1d16b6dffee5f75e90dc0b3fac5969e6" translate="yes" xml:space="preserve">
          <source>Translates the coordinate system by the given</source>
          <target state="translated">将坐标系按给定的</target>
        </trans-unit>
        <trans-unit id="230fac6beb74c47560228d7b304813424f08a190" translate="yes" xml:space="preserve">
          <source>Translates the coordinate system by the vector (</source>
          <target state="translated">通过向量来转换坐标系(</target>
        </trans-unit>
        <trans-unit id="c96c8d32ba23620d0be683bbe7cb4ab79801450d" translate="yes" xml:space="preserve">
          <source>Translates the current view transformation by (</source>
          <target state="translated">将当前视图变换通过(</target>
        </trans-unit>
        <trans-unit id="662ff930418379be5c1b1f3898ff5a15f9415be8" translate="yes" xml:space="preserve">
          <source>Translates the global screen coordinate</source>
          <target state="translated">转换全局屏幕坐标</target>
        </trans-unit>
        <trans-unit id="68896f0b452f17c467a936183555d4aed248ae6e" translate="yes" xml:space="preserve">
          <source>Translates the origin of the canvas by a horizontal distance of</source>
          <target state="translated">将画布的原点平移了一个水平距离,即1.5米。</target>
        </trans-unit>
        <trans-unit id="b4de68b4643fe5c45d567c9d8261a15eaf2224b6" translate="yes" xml:space="preserve">
          <source>Translates the parent widget coordinate</source>
          <target state="translated">翻译父部件坐标</target>
        </trans-unit>
        <trans-unit id="3348dc45b26d648a8d0dd0b8c97c477a3a00d367" translate="yes" xml:space="preserve">
          <source>Translates the region</source>
          <target state="translated">翻译区域</target>
        </trans-unit>
        <trans-unit id="49c26418ed9de9e4093a2fa65f842fc00bcf96d8" translate="yes" xml:space="preserve">
          <source>Translates the widget coordinate</source>
          <target state="translated">翻译小组件的坐标</target>
        </trans-unit>
        <trans-unit id="17781de95ef068f74001963859490cb01d709d3a" translate="yes" xml:space="preserve">
          <source>Translates the window coordinate</source>
          <target state="translated">转换窗口坐标</target>
        </trans-unit>
        <trans-unit id="c9f671ad81165842ada55f1abe0f9928879339fb" translate="yes" xml:space="preserve">
          <source>Translates this cell accessible into the corresponding column index.</source>
          <target state="translated">将此单元格的访问转化为相应的列索引。</target>
        </trans-unit>
        <trans-unit id="79b987be964845ad725bfec64ae3b1972940e754" translate="yes" xml:space="preserve">
          <source>Translates this cell accessible into the corresponding row index.</source>
          <target state="translated">将此单元格的访问转化为相应的行索引。</target>
        </trans-unit>
        <trans-unit id="00495eef869809bb88e0f2ce6a1c35ba17e12cfc" translate="yes" xml:space="preserve">
          <source>Translates this geo circle by</source>
          <target state="translated">将这个地理圈翻译成</target>
        </trans-unit>
        <trans-unit id="bc7aaa17161e98e4688e58168d86b0d99484fab8" translate="yes" xml:space="preserve">
          <source>Translates this geo path by</source>
          <target state="translated">通过以下方式翻译该地理路径</target>
        </trans-unit>
        <trans-unit id="d67e14f9574fbbb7c20ed2cc936f6e34a444dc8e" translate="yes" xml:space="preserve">
          <source>Translates this geo polygon by</source>
          <target state="translated">通过以下方式翻译这个地理多边形</target>
        </trans-unit>
        <trans-unit id="702aa31bf907123d2f377da8b28d067cb700b019" translate="yes" xml:space="preserve">
          <source>Translates this geo rectangle by</source>
          <target state="translated">通过以下方式翻译这个地理矩形</target>
        </trans-unit>
        <trans-unit id="6fb8580b1d1e33f0d0a1b5717f4015c8dda09a7c" translate="yes" xml:space="preserve">
          <source>Translates this line by the given</source>
          <target state="translated">将这一行按给定的</target>
        </trans-unit>
        <trans-unit id="82e61382eb7b0fb00da72ab7daa8247802c42f1e" translate="yes" xml:space="preserve">
          <source>Translates this line the distance specified by</source>
          <target state="translated">将这条线转换为由</target>
        </trans-unit>
        <trans-unit id="1e9e7cbb7c3eff7d2b098ff53b92cb2eeb825e79" translate="yes" xml:space="preserve">
          <source>Translates to the given</source>
          <target state="translated">翻译成给定的</target>
        </trans-unit>
        <trans-unit id="375629753794c13624068c2b5f3d2994278977b0" translate="yes" xml:space="preserve">
          <source>Translating Non-Qt Classes</source>
          <target state="translated">翻译非Qt类</target>
        </trans-unit>
        <trans-unit id="0999b96b74bb788c032df5923d0d885870f8b943" translate="yes" xml:space="preserve">
          <source>Translating Text That is Outside of a QObject Subclass</source>
          <target state="translated">翻译QObject子类之外的文本。</target>
        </trans-unit>
        <trans-unit id="fbf996980a9f6081e475aeb67ba52b754065f415" translate="yes" xml:space="preserve">
          <source>Translating strings in QML works exactly the same way as in C++, with the only difference being that you need to call qsTr() instead of &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt;. See also the page on &lt;a href=&quot;qtquick-internationalization&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</source>
          <target state="translated">在QML中转换字符串的工作方式与在C ++中完全相同，唯一的区别是您需要调用qsTr（）而不是&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;。另请参见有关&lt;a href=&quot;qtquick-internationalization&quot;&gt;使用Qt Quick&lt;/a&gt;进行国际化和本地化的页面。</target>
        </trans-unit>
        <trans-unit id="9d453401cdad87a6b7b27da8a4af13064efad6e9" translate="yes" xml:space="preserve">
          <source>Translating strings in QML works exactly the same way as in C++, with the only difference being that you need to call qsTr() instead of &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt;. See also the page on &lt;a href=&quot;qtquick-internationalization#&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</source>
          <target state="translated">在QML中转换字符串的工作方式与在C ++中完全相同，唯一的区别是您需要调用qsTr（）而不是&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;。另请参见有关&lt;a href=&quot;qtquick-internationalization#&quot;&gt;使用Qt Quick&lt;/a&gt;进行国际化和本地化的页面。</target>
        </trans-unit>
        <trans-unit id="2a3790fa27e8b3d1b0c6aa34a7d89692bd02701e" translate="yes" xml:space="preserve">
          <source>Translating the Application Menu and Native Dialogs</source>
          <target state="translated">翻译应用程序菜单和本地对话框。</target>
        </trans-unit>
        <trans-unit id="21f5c660e5149f18195f40b758bf9671e4be9125" translate="yes" xml:space="preserve">
          <source>Translating the origin enables you to draw patterns of different objects on the canvas without having to measure the coordinates manually for each shape.</source>
          <target state="translated">转换原点可以让您在画布上绘制不同对象的图案,而无需手动测量每个形状的坐标。</target>
        </trans-unit>
        <trans-unit id="d336dbf470ed38c56580387474f7c3d6e6c53afc" translate="yes" xml:space="preserve">
          <source>Translating the painter will not cause the layout of the text to be recalculated, but will cause a very small performance impact on drawStaticText(). Altering any other parts of the painter's transformation or the painter's font will cause the layout of the static text to be recalculated. This should be avoided as often as possible to maximize the performance benefit of using &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt;.</source>
          <target state="translated">翻译绘画程序不会导致重新计算文本的布局，但是会对drawStaticText（）产生很小的性能影响。更改绘画工具转换的任何其他部分或绘画工具的字体将导致重新计算静态文本的布局。应该尽可能避免这种情况，以最大程度地提高使用&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt;的性能。</target>
        </trans-unit>
        <trans-unit id="d023aa01c97d282f3bd610673fd473374c185127" translate="yes" xml:space="preserve">
          <source>Translating the painter will not cause the layout of the text to be recalculated, but will cause a very small performance impact on drawStaticText(). Altering any other parts of the painter's transformation or the painter's font will cause the layout of the static text to be recalculated. This should be avoided as often as possible to maximize the performance benefit of using QStaticText.</source>
          <target state="translated">翻译画家不会导致重新计算文本的布局,但会对 drawStaticText()造成很小的性能影响。改变画家转换的任何其他部分或画家的字体将导致静态文本的布局被重新计算。应该尽量避免这种情况,以最大化使用QStaticText的性能优势。</target>
        </trans-unit>
        <trans-unit id="6e55b7ececae9b3b38c54265af0bcbe56b8e385b" translate="yes" xml:space="preserve">
          <source>Translation Rules for Plurals</source>
          <target state="translated">复数的翻译规则</target>
        </trans-unit>
        <trans-unit id="bca357d31bee355943d74ba8dd04c998ba4c8c9f" translate="yes" xml:space="preserve">
          <source>Translation contexts are defined for new &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based classes by the use of the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro in each new class definition.</source>
          <target state="translated">通过在每个新类定义中使用&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;宏，为基于&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;的新类定义翻译上下文。</target>
        </trans-unit>
        <trans-unit id="ed992db0340c3b846c794e054e638bb3f26332df" translate="yes" xml:space="preserve">
          <source>Translation files can be added or removed using &lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt;(). Application strings can be translated using &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;(). The &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() and QObject::trUtf8() functions are implemented in terms of &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;().</source>
          <target state="translated">可以使用&lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt;（）和&lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt;（）添加或删除翻译文件。可以使用&lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;（）翻译应用程序字符串。该&lt;a href=&quot;qobject#tr&quot;&gt;QObject的:: TR&lt;/a&gt;（）和QObject的:: trUtf8（）函数在以下方面实现&lt;a href=&quot;qcoreapplication#translate&quot;&gt;翻译&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="61d66cf3141cc45abd4c0513543dee389ffec119" translate="yes" xml:space="preserve">
          <source>Translation files can be added or removed using &lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt;(). Application strings can be translated using &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;(). The &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() function is implemented in terms of &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;().</source>
          <target state="translated">可以使用&lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt;（）和&lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt;（）添加或删除翻译文件。可以使用&lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;（）翻译应用程序字符串。该&lt;a href=&quot;qobject#tr&quot;&gt;QObject的:: TR&lt;/a&gt;（）函数在以下方面实现的&lt;a href=&quot;qcoreapplication#translate&quot;&gt;翻译&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5a44d6019cd6b9367f64a79c8ac74ed764cb4f33" translate="yes" xml:space="preserve">
          <source>Translation files in &lt;code&gt;TRANSLATIONS&lt;/code&gt; will be processed by both &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lupdate&quot;&gt;Using lupdate&lt;/a&gt; tools. Use &lt;a href=&quot;#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt; if you want only &lt;code&gt;lrelease&lt;/code&gt; to process a file.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lupdate&quot;&gt;使用&lt;/a&gt;lupdate工具都将处理 &lt;code&gt;TRANSLATIONS&lt;/code&gt; 中的翻译文件。如果只希望 &lt;code&gt;lrelease&lt;/code&gt; 处理文件，请使用&lt;a href=&quot;#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab36d5336fc99cd9c98b3b848270a992c1a28978" translate="yes" xml:space="preserve">
          <source>Translation files in &lt;code&gt;TRANSLATIONS&lt;/code&gt; will be processed by both &lt;a href=&quot;https://doc.qt.io/qt-5.15/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/linguist-manager.html#using-lupdate&quot;&gt;Using lupdate&lt;/a&gt; tools. Use &lt;a href=&quot;qmake-variable-reference#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt; if you want only &lt;code&gt;lrelease&lt;/code&gt; to process a file.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.15/linguist-manager.html#using-lupdate&quot;&gt;使用&lt;/a&gt;lupdate工具都将处理 &lt;code&gt;TRANSLATIONS&lt;/code&gt; 中的翻译文件。如果只希望 &lt;code&gt;lrelease&lt;/code&gt; 处理文件，请使用&lt;a href=&quot;qmake-variable-reference#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe782d25fbdf0e19e80c0aa2b7df435f4224263a" translate="yes" xml:space="preserve">
          <source>Translation files in &lt;code&gt;TRANSLATIONS&lt;/code&gt; will be processed by both &lt;a href=&quot;https://doc.qt.io/qt-6.0/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/linguist-manager.html#using-lupdate&quot;&gt;Using lupdate&lt;/a&gt; tools. Use &lt;a href=&quot;qmake-variable-reference#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt; if you want only &lt;code&gt;lrelease&lt;/code&gt; to process a file.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-6.0/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-6.0/linguist-manager.html#using-lupdate&quot;&gt;使用&lt;/a&gt;lupdate工具都将处理 &lt;code&gt;TRANSLATIONS&lt;/code&gt; 中的翻译文件。如果只希望 &lt;code&gt;lrelease&lt;/code&gt; 处理文件，请使用&lt;a href=&quot;qmake-variable-reference#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06ddf4a07e4e8eb7b12c78ba1b636fb54c50c77f" translate="yes" xml:space="preserve">
          <source>Translation files must have &quot;&lt;a href=&quot;https://doc.qt.io/qt-5.13/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt;&quot; prefix e.g. qml_ja_JP.qm.</source>
          <target state="translated">翻译文件必须带有&amp;ldquo; &lt;a href=&quot;https://doc.qt.io/qt-5.13/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt; &amp;rdquo;前缀，例如qml_ja_JP.qm。</target>
        </trans-unit>
        <trans-unit id="32aa38fe0e1e3c927f6f5e39c5817154e8c784e7" translate="yes" xml:space="preserve">
          <source>Translation files must have &quot;&lt;a href=&quot;https://doc.qt.io/qt-5.15/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt;&quot; prefix e.g. qml_ja_JP.qm.</source>
          <target state="translated">翻译文件必须带有&amp;ldquo; &lt;a href=&quot;https://doc.qt.io/qt-5.15/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt; &amp;rdquo;前缀，例如qml_ja_JP.qm。</target>
        </trans-unit>
        <trans-unit id="f12081afb3335aad97bbf9e6688d4d1e0c356488" translate="yes" xml:space="preserve">
          <source>Translation files must have &quot;&lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-scripting.html#qml&quot;&gt;qml_&lt;/a&gt;&quot; prefix e.g. qml_ja_JP.qm.</source>
          <target state="translated">翻译文件必须带有&amp;ldquo; &lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-scripting.html#qml&quot;&gt;qml_&lt;/a&gt; &amp;rdquo;前缀，例如qml_ja_JP.qm。</target>
        </trans-unit>
        <trans-unit id="b863343d6c2d30cae28b592579496ed400ddac40" translate="yes" xml:space="preserve">
          <source>Translation is the simplest transformation. Setting &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; will move the coordinate system &lt;code&gt;dx&lt;/code&gt; units along the X axis and &lt;code&gt;dy&lt;/code&gt; units along the Y axis. Scaling can be done by setting &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt;. For example, setting &lt;code&gt;m11&lt;/code&gt; to 2 and &lt;code&gt;m22&lt;/code&gt; to 1.5 will double the height and increase the width by 50%. The identity matrix has &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; set to 1 (all others are set to 0) mapping a point to itself. Shearing is controlled by &lt;code&gt;m12&lt;/code&gt; and &lt;code&gt;m21&lt;/code&gt;. Setting these elements to values different from zero will twist the coordinate system. Rotation is achieved by carefully setting both the shearing factors and the scaling factors.</source>
          <target state="translated">翻译是最简单的转换。设置 &lt;code&gt;dx&lt;/code&gt; 和 &lt;code&gt;dy&lt;/code&gt; 将使坐标系 &lt;code&gt;dx&lt;/code&gt; 单位沿X轴移动， &lt;code&gt;dy&lt;/code&gt; 单位沿Y轴移动。缩放可以通过设置 &lt;code&gt;m11&lt;/code&gt; 和 &lt;code&gt;m22&lt;/code&gt; 来完成。例如，将 &lt;code&gt;m11&lt;/code&gt; 设置为2并将 &lt;code&gt;m22&lt;/code&gt; 设置为1.5将使高度加倍并将宽度增加50％。单位矩阵的 &lt;code&gt;m11&lt;/code&gt; 和 &lt;code&gt;m22&lt;/code&gt; 设置为1（所有其他设置为0），将一个点映射到其自身。剪切受 &lt;code&gt;m12&lt;/code&gt; 和 &lt;code&gt;m21&lt;/code&gt; 控制。将这些元素设置为非零值将扭曲坐标系。通过仔细设置剪切因子和比例因子可以实现旋转。</target>
        </trans-unit>
        <trans-unit id="19566951b9dd2d2524bd71177474d2d68210d8e3" translate="yes" xml:space="preserve">
          <source>Translation is the simplest transformation. Setting &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; will move the coordinate system &lt;code&gt;dx&lt;/code&gt; units along the X axis and &lt;code&gt;dy&lt;/code&gt; units along the Y axis. Scaling can be done by setting &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt;. For example, setting &lt;code&gt;m11&lt;/code&gt; to 2 and &lt;code&gt;m22&lt;/code&gt; to 1.5 will double the height and increase the width by 50%. The identity matrix has &lt;code&gt;m11&lt;/code&gt;, &lt;code&gt;m22&lt;/code&gt;, and &lt;code&gt;m33&lt;/code&gt; set to 1 (all others are set to 0) mapping a point to itself. Shearing is controlled by &lt;code&gt;m12&lt;/code&gt; and &lt;code&gt;m21&lt;/code&gt;. Setting these elements to values different from zero will twist the coordinate system. Rotation is achieved by setting both the shearing factors and the scaling factors. Perspective transformation is achieved by setting both the projection factors and the scaling factors.</source>
          <target state="translated">翻译是最简单的转换。设置 &lt;code&gt;dx&lt;/code&gt; 和 &lt;code&gt;dy&lt;/code&gt; 将使坐标系 &lt;code&gt;dx&lt;/code&gt; 单位沿X轴移动， &lt;code&gt;dy&lt;/code&gt; 单位沿Y轴移动。缩放可以通过设置 &lt;code&gt;m11&lt;/code&gt; 和 &lt;code&gt;m22&lt;/code&gt; 来完成。例如，将 &lt;code&gt;m11&lt;/code&gt; 设置为2并将 &lt;code&gt;m22&lt;/code&gt; 设置为1.5将使高度加倍并将宽度增加50％。单位矩阵的 &lt;code&gt;m11&lt;/code&gt; ， &lt;code&gt;m22&lt;/code&gt; 和 &lt;code&gt;m33&lt;/code&gt; 设置为1（所有其他设置为0），将一个点映射到其自身。剪切受 &lt;code&gt;m12&lt;/code&gt; 和 &lt;code&gt;m21&lt;/code&gt; 控制。将这些元素设置为非零值将扭曲坐标系。通过设置剪切因子和比例因子来实现旋转。通过设置投影因子和缩放因子都可以实现透视变换。</target>
        </trans-unit>
        <trans-unit id="fb53af4c23a26525672958739f42b8e44ac852e9" translate="yes" xml:space="preserve">
          <source>Translation to/from legacy encodings for file I/O: see &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">与文件I / O的旧编码之间的转换：请参见&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;和&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ad8302d110b05d7e02330dac58628134fdcff02" translate="yes" xml:space="preserve">
          <source>Translations</source>
          <target state="translated">Translations</target>
        </trans-unit>
        <trans-unit id="b2c4171e7b30c52ea6ebbf5da44fdbbac42ddd86" translate="yes" xml:space="preserve">
          <source>Translations are reloaded when the &lt;code&gt;QJSEngine::uiLanguage&lt;/code&gt; / &lt;code&gt;Qt.uiLanguage&lt;/code&gt; property is changed.</source>
          <target state="translated">更改 &lt;code&gt;QJSEngine::uiLanguage&lt;/code&gt; / &lt;code&gt;Qt.uiLanguage&lt;/code&gt; 属性后，将重新加载翻译。</target>
        </trans-unit>
        <trans-unit id="233199f11d826d0a5f649c734d669979e5914b8b" translate="yes" xml:space="preserve">
          <source>Translator Comments</source>
          <target state="translated">译者评论</target>
        </trans-unit>
        <trans-unit id="0516f84cb40b48ba17044fbf0f12609f0e5e4d87" translate="yes" xml:space="preserve">
          <source>Translucent vs Opaque</source>
          <target state="translated">半透明与不透明</target>
        </trans-unit>
        <trans-unit id="291f8acec5dd94addcaa582926fadd13ed3253ae" translate="yes" xml:space="preserve">
          <source>Transmission Power UUID (service). The service exposes a device&amp;rsquo;s current transmit power level when in a connection.</source>
          <target state="translated">传输功率UUID（服务）。该服务在连接时公开设备的当前发射功率水平。</target>
        </trans-unit>
        <trans-unit id="74368e02a35c56b2faeea100d29fcd81b3a34c61" translate="yes" xml:space="preserve">
          <source>Transparency and Double Buffering</source>
          <target state="translated">透明度和双重缓冲</target>
        </trans-unit>
        <trans-unit id="0491f7bdfe48ea03cfb65f5cb4500b2415a41b09" translate="yes" xml:space="preserve">
          <source>Transparent</source>
          <target state="translated">Transparent</target>
        </trans-unit>
        <trans-unit id="ab6c5799f1784e6fd294e746c2e4577684deab19" translate="yes" xml:space="preserve">
          <source>Transparent Items: these are sorted from back to front, or in other words from items that are farthest from the camera to items that are nearest to the camera. This is done because transparent items need to be blended with all items that are behind them.</source>
          <target state="translated">透明项目:这些项目从后到前排序,或者说从离摄像机最远的项目到离摄像机最近的项目。这样做是因为透明物品需要与后面的所有物品混合。</target>
        </trans-unit>
        <trans-unit id="cb9ae451dc4cc4518704480b972fba27487bfcdc" translate="yes" xml:space="preserve">
          <source>Transparent Pass - Then finally the transparent items in the scene are rendered one by one in the same manner as the opaque items.</source>
          <target state="translated">透明通关--最后将场景中的透明项目以与不透明项目相同的方式逐一渲染。</target>
        </trans-unit>
        <trans-unit id="b3dad28fffa3a16a2901c5e21397ce58062afc3b" translate="yes" xml:space="preserve">
          <source>Transparent slice frame color is not supported.</source>
          <target state="translated">不支持透明的片框颜色。</target>
        </trans-unit>
        <trans-unit id="22fb76e46f645ef6e6c964d6dd08c200b91bca31" translate="yes" xml:space="preserve">
          <source>Travel</source>
          <target state="translated">Travel</target>
        </trans-unit>
        <trans-unit id="e48a94e7fe08bdc8c0f65378c31ea9396b98bac1" translate="yes" xml:space="preserve">
          <source>Travel The route will be optimized for someone who is making use of public transit</source>
          <target state="translated">出行路线将针对使用公共交通的人进行优化。</target>
        </trans-unit>
        <trans-unit id="aec4c78a04368561fa7108391fb908fa2a9bb735" translate="yes" xml:space="preserve">
          <source>Travel modes</source>
          <target state="translated">旅行方式</target>
        </trans-unit>
        <trans-unit id="fb4d67197e3a726e86e89464c850938d5bba97f4" translate="yes" xml:space="preserve">
          <source>Traversing directories and reading a file:</source>
          <target state="translated">遍历目录和读取文件。</target>
        </trans-unit>
        <trans-unit id="bf3a419515dcadc4666cee508152b15973c5330a" translate="yes" xml:space="preserve">
          <source>Tray menu</source>
          <target state="translated">托盘菜单</target>
        </trans-unit>
        <trans-unit id="a6fdf671f56d2d74d87e341310612e3b49345f2d" translate="yes" xml:space="preserve">
          <source>Treat empty fields as if they don't exist, i.e. they are not considered as far as</source>
          <target state="translated">把空字段当做不存在,也就是说,它们并不被认为是至于</target>
        </trans-unit>
        <trans-unit id="9a0dafda1b01986365e64dc6e9d7ea8075ae3e44" translate="yes" xml:space="preserve">
          <source>Treat this text as &quot;hidden&quot; and don't print it.</source>
          <target state="translated">把这段文字当作 &quot;隐藏&quot;,不要打印。</target>
        </trans-unit>
        <trans-unit id="ac7fb6f284b844fc222a72acf3153e50fbd4b2a3" translate="yes" xml:space="preserve">
          <source>Treats all whitespace as spaces and prints just one line.</source>
          <target state="translated">把所有的空白都当作空格,只打印一行。</target>
        </trans-unit>
        <trans-unit id="9e9f316760fd154afe810c724600d148e88f8bb1" translate="yes" xml:space="preserve">
          <source>Tree Branch Indicators</source>
          <target state="translated">树枝指标</target>
        </trans-unit>
        <trans-unit id="13b3ebf5fea1dfb40ee60383c46c8207a4057141" translate="yes" xml:space="preserve">
          <source>Tree of QDomNodes which is not usually a complete QDomDocument</source>
          <target state="translated">QDomNodes树,它通常不是一个完整的QDomDocument。</target>
        </trans-unit>
        <trans-unit id="1e574da865595e07f3a1fd42c1e676a628e5d3cf" translate="yes" xml:space="preserve">
          <source>Tree view that uses a predefined tree model</source>
          <target state="translated">使用预定义树形模型的树形视图</target>
        </trans-unit>
        <trans-unit id="6191da7c4e0b401e56054191fb14f107e1ed4e17" translate="yes" xml:space="preserve">
          <source>Tree widget items are used to hold rows of information for tree widgets. Rows usually contain several columns of data, each of which can contain a text label and an icon.</source>
          <target state="translated">树形小组件项目用于保存树形小组件的信息行。行通常包含几列数据,每列可包含一个文本标签和一个图标。</target>
        </trans-unit>
        <trans-unit id="3403183124a23f3c55e0c8f1d45186e06e913fa5" translate="yes" xml:space="preserve">
          <source>Tree widgets</source>
          <target state="translated">树形小部件</target>
        </trans-unit>
        <trans-unit id="ded802a373e90b21f8ed09a16a3e753dfa673fa9" translate="yes" xml:space="preserve">
          <source>Tree widgets deal with top-level items slightly differently to other items from deeper within the tree. Items can be removed from the top level of the tree by calling the tree widget's &lt;a href=&quot;qtreewidget#takeTopLevelItem&quot;&gt;takeTopLevelItem()&lt;/a&gt; function, but items from lower levels are removed by calling their parent item's &lt;a href=&quot;qtreewidgetitem#takeChild&quot;&gt;takeChild()&lt;/a&gt; function. Items are inserted in the top level of the tree with the &lt;a href=&quot;qtreewidget#insertTopLevelItem&quot;&gt;insertTopLevelItem()&lt;/a&gt; function. At lower levels in the tree, the parent item's &lt;a href=&quot;qtreewidgetitem#insertChild&quot;&gt;insertChild()&lt;/a&gt; function is used.</source>
          <target state="translated">树小部件在处理顶级项目时，与树中较深处的其他项目略有不同。可以通过调用树小部件的&lt;a href=&quot;qtreewidget#takeTopLevelItem&quot;&gt;takeTopLevelItem（）&lt;/a&gt;函数从树的顶层删除项目，但可以通过调用其父项的&lt;a href=&quot;qtreewidgetitem#takeChild&quot;&gt;takeChild（）&lt;/a&gt;函数从树的顶层删除项目。使用&lt;a href=&quot;qtreewidget#insertTopLevelItem&quot;&gt;insertTopLevelItem（）&lt;/a&gt;函数将项目插入树的顶层。在树的较低级别，使用父项的&lt;a href=&quot;qtreewidgetitem#insertChild&quot;&gt;insertChild（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f7355f5fbdfed3bc1937b290103e2a5aa3bba55e" translate="yes" xml:space="preserve">
          <source>TreeView</source>
          <target state="translated">TreeView</target>
        </trans-unit>
        <trans-unit id="c779e1a4525631676d2e1ca9381b994d8358490b" translate="yes" xml:space="preserve">
          <source>TreeView (QML type)</source>
          <target state="translated">树形视图(QML类型)</target>
        </trans-unit>
        <trans-unit id="84eef79dc0f921b51ba5d059c59af45561ffd694" translate="yes" xml:space="preserve">
          <source>TreeView QML Type</source>
          <target state="translated">TreeView QML类型</target>
        </trans-unit>
        <trans-unit id="ccc0e785313c811df23501a3efd9254f19b98653" translate="yes" xml:space="preserve">
          <source>TreeView.activated()</source>
          <target state="translated">TreeView.activated()</target>
        </trans-unit>
        <trans-unit id="3153fb6438ed22b6db759c1e2b4e16a73cb8ff69" translate="yes" xml:space="preserve">
          <source>TreeView.addColumn()</source>
          <target state="translated">TreeView.addColumn()</target>
        </trans-unit>
        <trans-unit id="573f53c0852c5b49ba0be8dab6da90f0a67dbf81" translate="yes" xml:space="preserve">
          <source>TreeView.alternatingRowColors</source>
          <target state="translated">TreeView.alternatingRowColors</target>
        </trans-unit>
        <trans-unit id="e13eae887b2cacdf173c1ac37bfc85a431509bdc" translate="yes" xml:space="preserve">
          <source>TreeView.backgroundVisible</source>
          <target state="translated">TreeView.backgroundVisible</target>
        </trans-unit>
        <trans-unit id="5951da709bdbfb6527121433b8fca199df80295c" translate="yes" xml:space="preserve">
          <source>TreeView.clicked()</source>
          <target state="translated">TreeView.clicked()</target>
        </trans-unit>
        <trans-unit id="dbf16e57d5e7f21bdf47186f16aa408a2e45b94c" translate="yes" xml:space="preserve">
          <source>TreeView.collapse()</source>
          <target state="translated">TreeView.collapse()</target>
        </trans-unit>
        <trans-unit id="9323767820f6bc080fcc9ae70aa1ae54f47ce5cd" translate="yes" xml:space="preserve">
          <source>TreeView.collapsed()</source>
          <target state="translated">TreeView.collapsed()</target>
        </trans-unit>
        <trans-unit id="b9c98f0bb8bac6a54586e4cd4c5b4066d1c165e9" translate="yes" xml:space="preserve">
          <source>TreeView.columnCount</source>
          <target state="translated">TreeView.columnCount</target>
        </trans-unit>
        <trans-unit id="1317e676466e12a8fad81c0b7dae775b4a76e02e" translate="yes" xml:space="preserve">
          <source>TreeView.contentFooter</source>
          <target state="translated">TreeView.contentFooter</target>
        </trans-unit>
        <trans-unit id="7216f513a626de161b8fdc119bd18e92048d8dc2" translate="yes" xml:space="preserve">
          <source>TreeView.contentHeader</source>
          <target state="translated">TreeView.contentHeader</target>
        </trans-unit>
        <trans-unit id="e4b1d65c240dd96578656d68e5b490928e5cb528" translate="yes" xml:space="preserve">
          <source>TreeView.currentIndex</source>
          <target state="translated">TreeView.currentIndex</target>
        </trans-unit>
        <trans-unit id="b927898b267812cd66b9e03b3ad77ccf3867dcb8" translate="yes" xml:space="preserve">
          <source>TreeView.doubleClicked()</source>
          <target state="translated">TreeView.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="565eea2952c6459279376f9b2e3a6c9480c90329" translate="yes" xml:space="preserve">
          <source>TreeView.expand()</source>
          <target state="translated">TreeView.expand()</target>
        </trans-unit>
        <trans-unit id="1bb3850214980fe246def8c52ee282affee3d4da" translate="yes" xml:space="preserve">
          <source>TreeView.expanded()</source>
          <target state="translated">TreeView.expanded()</target>
        </trans-unit>
        <trans-unit id="ede08e07b42d70ab2924daeee85d37bf6a06af87" translate="yes" xml:space="preserve">
          <source>TreeView.getColumn()</source>
          <target state="translated">TreeView.getColumn()</target>
        </trans-unit>
        <trans-unit id="917f5a049807d512cd64e397da3710cc150c1add" translate="yes" xml:space="preserve">
          <source>TreeView.groupsection.property</source>
          <target state="translated">TreeView.groupsection.property</target>
        </trans-unit>
        <trans-unit id="7063ce16d38ccf70d8e4e3382e913796fc522246" translate="yes" xml:space="preserve">
          <source>TreeView.headerDelegate</source>
          <target state="translated">TreeView.headerDelegate</target>
        </trans-unit>
        <trans-unit id="6f9483e46b900c469070b48eae460b908a4a8cdc" translate="yes" xml:space="preserve">
          <source>TreeView.headerVisible</source>
          <target state="translated">TreeView.headerVisible</target>
        </trans-unit>
        <trans-unit id="c9f54ef3f7ca5dab74d622938911139ed9d7a2b9" translate="yes" xml:space="preserve">
          <source>TreeView.indexAt()</source>
          <target state="translated">TreeView.indexAt()</target>
        </trans-unit>
        <trans-unit id="553076e977b612d7d97b0fc5c07d64ec910665d6" translate="yes" xml:space="preserve">
          <source>TreeView.insertColumn()</source>
          <target state="translated">TreeView.insertColumn()</target>
        </trans-unit>
        <trans-unit id="3ea28cd16e539bc85173c8aa2b272a9c82bb1ccf" translate="yes" xml:space="preserve">
          <source>TreeView.isExpanded()</source>
          <target state="translated">TreeView.isExpanded()</target>
        </trans-unit>
        <trans-unit id="1a6f07aa8b79805c23e74f2580fede1efa7fa6f2" translate="yes" xml:space="preserve">
          <source>TreeView.itemDelegate</source>
          <target state="translated">TreeView.itemDelegate</target>
        </trans-unit>
        <trans-unit id="35d85359fef1bde9f028d7692fd2852609c58448" translate="yes" xml:space="preserve">
          <source>TreeView.model</source>
          <target state="translated">TreeView.model</target>
        </trans-unit>
        <trans-unit id="4911a82c38c5cc9bb2e786106693814f5fa98c5b" translate="yes" xml:space="preserve">
          <source>TreeView.moveColumn()</source>
          <target state="translated">TreeView.moveColumn()</target>
        </trans-unit>
        <trans-unit id="59d4cbefbd9b0db0b4b45b6f877669a593543f7a" translate="yes" xml:space="preserve">
          <source>TreeView.pressAndHold()</source>
          <target state="translated">TreeView.pressAndHold()</target>
        </trans-unit>
        <trans-unit id="864fb78eeca2a722ba87bbe3616ad586e2a750cc" translate="yes" xml:space="preserve">
          <source>TreeView.removeColumn()</source>
          <target state="translated">TreeView.removeColumn()</target>
        </trans-unit>
        <trans-unit id="1aba70723579fdd7e7c88ce8af3d5c4df1d00f34" translate="yes" xml:space="preserve">
          <source>TreeView.resizeColumnsToContents()</source>
          <target state="translated">TreeView.resizeColumnsToContents()</target>
        </trans-unit>
        <trans-unit id="0fa1df381ed20b63d67ddc8746c55fe1e0379131" translate="yes" xml:space="preserve">
          <source>TreeView.rootIndex</source>
          <target state="translated">TreeView.rootIndex</target>
        </trans-unit>
        <trans-unit id="3b441bd403a9a2a0d74f75fbd6e883ef2b04d5ec" translate="yes" xml:space="preserve">
          <source>TreeView.rowDelegate</source>
          <target state="translated">TreeView.rowDelegate</target>
        </trans-unit>
        <trans-unit id="9daecf42af97354f71af62d897e6505297f95df7" translate="yes" xml:space="preserve">
          <source>TreeView.section.criteria</source>
          <target state="translated">TreeView.section.criteria</target>
        </trans-unit>
        <trans-unit id="f3aa27f1446a668ef0e722c54be8291879fb4c1b" translate="yes" xml:space="preserve">
          <source>TreeView.selection</source>
          <target state="translated">TreeView.selection</target>
        </trans-unit>
        <trans-unit id="ea65616ffe56d12a17402fa40364526f53f90aa6" translate="yes" xml:space="preserve">
          <source>TreeView.selectionMode</source>
          <target state="translated">TreeView.selectionMode</target>
        </trans-unit>
        <trans-unit id="e43a6d314257ba8829152f32e899cea34ef6cb8b" translate="yes" xml:space="preserve">
          <source>TreeView.sortIndicatorColumn</source>
          <target state="translated">TreeView.sortIndicatorColumn</target>
        </trans-unit>
        <trans-unit id="7810140f2ff3d6e2a485f6380c9f3097b4ed2a84" translate="yes" xml:space="preserve">
          <source>TreeView.sortIndicatorOrder</source>
          <target state="translated">TreeView.sortIndicatorOrder</target>
        </trans-unit>
        <trans-unit id="c1a67d76cdd89a64dd997469caf56c4a5bc9706a" translate="yes" xml:space="preserve">
          <source>TreeView.sortIndicatorVisible</source>
          <target state="translated">TreeView.sortIndicatorVisible</target>
        </trans-unit>
        <trans-unit id="b1dbe8350be51a462d5e7af50e64d13883c212bd" translate="yes" xml:space="preserve">
          <source>TreeViewStyle</source>
          <target state="translated">TreeViewStyle</target>
        </trans-unit>
        <trans-unit id="d322f2f427bd5b4307177ece4041f419a15c5f78" translate="yes" xml:space="preserve">
          <source>TreeViewStyle (QML type)</source>
          <target state="translated">树形视图样式(QML类型</target>
        </trans-unit>
        <trans-unit id="c0f34427a45c649413d6bb792be40cedb865aa80" translate="yes" xml:space="preserve">
          <source>TreeViewStyle QML Type</source>
          <target state="translated">TreeViewStyle QML类型</target>
        </trans-unit>
        <trans-unit id="d36b66a89618c06b2480c1a6247990fe489a1a09" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.branchDelegate</source>
          <target state="translated">TreeViewStyle.branchDelegate</target>
        </trans-unit>
        <trans-unit id="aa11f993ece13459610af74f75800eec7537a397" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.control</source>
          <target state="translated">TreeViewStyle.control</target>
        </trans-unit>
        <trans-unit id="3b2c88f6d31ca2e63d89ed32a4bdde714b322b8c" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.headerDelegate</source>
          <target state="translated">TreeViewStyle.headerDelegate</target>
        </trans-unit>
        <trans-unit id="bea413379126f7a60fd436b7fd03625e30fd1b7f" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.indentation</source>
          <target state="translated">TreeViewStyle.indentation</target>
        </trans-unit>
        <trans-unit id="011f1ef6b982d1a90528f28271a1086f85633b64" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.itemDelegate</source>
          <target state="translated">TreeViewStyle.itemDelegate</target>
        </trans-unit>
        <trans-unit id="d12125553fc9600f24999831640b62b71e85658d" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.rowDelegate</source>
          <target state="translated">TreeViewStyle.rowDelegate</target>
        </trans-unit>
        <trans-unit id="5ff6ffa5cff4cd9c4f35379b1efe0911b6a32771" translate="yes" xml:space="preserve">
          <source>Trees or hierarchical lists of items are provided by the &lt;code&gt;QTreeWidget&lt;/code&gt; and &lt;code&gt;QTreeWidgetItem&lt;/code&gt; classes. Each item in the tree widget can have child items of its own, and can display a number of columns of information. Tree widgets are created just like any other widget:</source>
          <target state="translated">&lt;code&gt;QTreeWidget&lt;/code&gt; 和 &lt;code&gt;QTreeWidgetItem&lt;/code&gt; 类提供树或项目的层次结构列表。树小部件中的每个项目都可以具有其自己的子项目，并且可以显示多列信息。树小部件的创建与其他任何小部件一样：</target>
        </trans-unit>
        <trans-unit id="1d04d40934f963d324969017b69dcf8347eeed7c" translate="yes" xml:space="preserve">
          <source>Triangle picking will produce exact results but is computationally more expensive.</source>
          <target state="translated">三角形选取会产生精确的结果,但计算成本更高。</target>
        </trans-unit>
        <trans-unit id="5361aba78eca3d5ff9bea4e25ee12c56f963759b" translate="yes" xml:space="preserve">
          <source>Triangular tabs above the pages.</source>
          <target state="translated">页面上方的三角形标签。</target>
        </trans-unit>
        <trans-unit id="e0469cec366ac5ffbf1f60d999340794dc17304c" translate="yes" xml:space="preserve">
          <source>Triangular tabs on the left of the pages.</source>
          <target state="translated">页面左侧的三角形标签。</target>
        </trans-unit>
        <trans-unit id="f0b5de16483c560b52c53d217d6d5d6e6f349995" translate="yes" xml:space="preserve">
          <source>Triangular tabs on the right of the pages.</source>
          <target state="translated">页面右侧的三角形标签。</target>
        </trans-unit>
        <trans-unit id="10d622f3b2f0320edf71634dc034e2c69884e713" translate="yes" xml:space="preserve">
          <source>Triangular tabs similar to those used in the Excel spreadsheet, for example</source>
          <target state="translated">类似于Excel电子表格中使用的三角形选项卡,如</target>
        </trans-unit>
        <trans-unit id="aebd3ddde3e21ef79ff93f5d212a83ba3e0b1f2e" translate="yes" xml:space="preserve">
          <source>Triangulate</source>
          <target state="translated">Triangulate</target>
        </trans-unit>
        <trans-unit id="fb80fd75bd4621f3dc48c0fd575fdcf1deba9b9e" translate="yes" xml:space="preserve">
          <source>Tries to acquire &lt;code&gt;n&lt;/code&gt; resources guarded by the semaphore and returns &lt;code&gt;true&lt;/code&gt; on success. If &lt;a href=&quot;qsemaphore#available&quot;&gt;available&lt;/a&gt;() &amp;lt;</source>
          <target state="translated">尝试获取由信号灯保护的 &lt;code&gt;n&lt;/code&gt; 个资源，并在成功时返回 &lt;code&gt;true&lt;/code&gt; 。如果&lt;a href=&quot;qsemaphore#available&quot;&gt;可用&lt;/a&gt;（）&amp;lt;</target>
        </trans-unit>
        <trans-unit id="3219e0885893a40549d606fa55cf39a6095813af" translate="yes" xml:space="preserve">
          <source>Tries to acquire &lt;code&gt;n&lt;/code&gt; resources guarded by the semaphore. If</source>
          <target state="translated">尝试获取由信号灯保护的 &lt;code&gt;n&lt;/code&gt; 个资源。如果</target>
        </trans-unit>
        <trans-unit id="1092b313652c7ab245ae4f3794eecf3f3be535ae" translate="yes" xml:space="preserve">
          <source>Tries to detect the encoding of the provided snippet</source>
          <target state="translated">试图检测所提供的代码段的编码。</target>
        </trans-unit>
        <trans-unit id="e3126a529603911dbf88fa7326a3333157838b60" translate="yes" xml:space="preserve">
          <source>Tries to detect the encoding of the provided snippet of HTML in the given byte array,</source>
          <target state="translated">试图在给定的字节数组中检测所提供的HTML片段的编码。</target>
        </trans-unit>
        <trans-unit id="dba4f534a2b5fa5c11e497f397ea425a5180063e" translate="yes" xml:space="preserve">
          <source>Tries to determine the encoding of the HTML in</source>
          <target state="translated">试图确定HTML的编码。</target>
        </trans-unit>
        <trans-unit id="9049c1e9800aae69a1d2418cfafea34796532bf6" translate="yes" xml:space="preserve">
          <source>Tries to determine which meshes have normal vectors that are facing inwards and inverts them.</source>
          <target state="translated">试图确定哪些网格的法向量是朝内的,并将其反转。</target>
        </trans-unit>
        <trans-unit id="57ea939b23b2ac5cd6a85c4c4001808f1b2c8854" translate="yes" xml:space="preserve">
          <source>Tries to find a file or directory called</source>
          <target state="translated">试图找到一个名为</target>
        </trans-unit>
        <trans-unit id="5aefaa113aaedecdc37d5d397a3638688ff8e030" translate="yes" xml:space="preserve">
          <source>Tries to find all files or directories called</source>
          <target state="translated">试图找到所有被称为------的文件或目录。</target>
        </trans-unit>
        <trans-unit id="aa71de2e23d322e196e1f52202e38b9704ff81b2" translate="yes" xml:space="preserve">
          <source>Trigger a state change:</source>
          <target state="translated">触发状态变化。</target>
        </trans-unit>
        <trans-unit id="afe53f4e75659fa57c578d982a9e4f3f48514ae5" translate="yes" xml:space="preserve">
          <source>Trigger any attached Web Inspector to inspect the highlighed element. (Added in Qt 5.6)</source>
          <target state="translated">触发任何附加的Web检查器来检查高亮的元素。(在Qt 5.6中添加)</target>
        </trans-unit>
        <trans-unit id="83936d7a4ef2141c1d1fb215977fcabb78ef4cfd" translate="yes" xml:space="preserve">
          <source>Trigger the Save web action.</source>
          <target state="translated">触发保存网页动作。</target>
        </trans-unit>
        <trans-unit id="87332cf3b21e7c7eb4d05f5c2b877ae09df119f6" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnClick</source>
          <target state="translated">TriggerMode.TriggerOnClick</target>
        </trans-unit>
        <trans-unit id="7c89a7dd31977b39c0a0e685e6d2c380de8ef56c" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnPress</source>
          <target state="translated">TriggerMode.TriggerOnPress</target>
        </trans-unit>
        <trans-unit id="99e0f3f456220d6b941c5f5f661e13097568c3c7" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnRelease</source>
          <target state="translated">TriggerMode.TriggerOnRelease</target>
        </trans-unit>
        <trans-unit id="1f6a70b9265a3fc56a68d494889f323ff245a31d" translate="yes" xml:space="preserve">
          <source>Triggering Animations</source>
          <target state="translated">触发动画</target>
        </trans-unit>
        <trans-unit id="c79189369041e55419249698810463c8908721c5" translate="yes" xml:space="preserve">
          <source>Triggering a buffer swap just for the QOpenGLWidget is not possible since there is no real, onscreen native surface for it. It is up to the widget stack to manage composition and buffer swaps on the gui thread. When a thread is done updating the framebuffer, call &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() &lt;b&gt;on the GUI/main thread&lt;/b&gt; to schedule composition.</source>
          <target state="translated">不可能仅为QOpenGLWidget触发缓冲区交换，因为它没有真正的屏幕本机表面。由小部件堆栈来管理gui线程上的组​​合和缓冲区交换。当线程完成了对帧缓冲区的&lt;a href=&quot;qwidget#update&quot;&gt;更新后&lt;/a&gt;，请&lt;b&gt;在GUI /主线程上&lt;/b&gt;调用update（）以安排合成。</target>
        </trans-unit>
        <trans-unit id="c2dadf9b6caf87047e87c3323ee1c1f27ce69531" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack::redo&lt;/a&gt;() on the active stack. The text of this action will always be the text of the command which will be redone in the next call to &lt;a href=&quot;qundogroup#redo&quot;&gt;redo&lt;/a&gt;(), prefixed by</source>
          <target state="translated">触发此操作将导致在活动堆栈上调用&lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack :: redo&lt;/a&gt;（）。该操作的文本将始终是命令的文本，该命令的文本将在下一次对&lt;a href=&quot;qundogroup#redo&quot;&gt;redo&lt;/a&gt;（）的调用中重做，并以前缀</target>
        </trans-unit>
        <trans-unit id="1e099708bf135505a8bd43b5e6dd5995bf46a792" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt;(). The text of this action is the text of the command which will be redone in the next call to &lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt;(), prefixed by the specified</source>
          <target state="translated">触发此操作将导致调用&lt;a href=&quot;qundostack#redo&quot;&gt;重做&lt;/a&gt;（）。此操作的文本是命令的文本，将在下一次对&lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt;（）的调用中重做，并以指定的前缀</target>
        </trans-unit>
        <trans-unit id="e353e94341c5a6b63b023dd9b76b7cfa968c7385" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack::undo&lt;/a&gt;() on the active stack. The text of this action will always be the text of the command which will be undone in the next call to &lt;a href=&quot;qundogroup#undo&quot;&gt;undo&lt;/a&gt;(), prefixed by</source>
          <target state="translated">触发此操作将导致在活动堆栈上调用&lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack :: undo&lt;/a&gt;（）。该操作的文本将始终是命令的文本，该命令的文本将在下一次对&lt;a href=&quot;qundogroup#undo&quot;&gt;undo&lt;/a&gt;（）的调用中被撤消，并以前缀</target>
        </trans-unit>
        <trans-unit id="25ac3d75e3413f81a7e2e7235b46c790178c004a" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;(). The text of this action is the text of the command which will be undone in the next call to &lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;(), prefixed by the specified</source>
          <target state="translated">触发此操作将导致调用&lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;（）。该操作的文本是命令的文本，该命令的文本将在下一次调用&lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;（）时撤消，并以指定的前缀</target>
        </trans-unit>
        <trans-unit id="ce45d08bfb84e85f4fa35ac5710199f52962e8e4" translate="yes" xml:space="preserve">
          <source>Triggers a handler at a specified interval. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">以指定的间隔触发处理程序。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8865363154bae7e24b44411aaa9a859a9bf10fec" translate="yes" xml:space="preserve">
          <source>Triggers a re-layout of the displayed text.</source>
          <target state="translated">触发显示的文本的重新布局。</target>
        </trans-unit>
        <trans-unit id="31478325cebb02f2483416dc91415769f75bde74" translate="yes" xml:space="preserve">
          <source>Triggers a slider</source>
          <target state="translated">触发滑块</target>
        </trans-unit>
        <trans-unit id="14593094ee303169ee6ae5aecb0fd7d1affa91fb" translate="yes" xml:space="preserve">
          <source>Triggers an update of the data generator that is sent to the backend.</source>
          <target state="translated">触发发送到后台的数据生成器的更新。</target>
        </trans-unit>
        <trans-unit id="65d79ff3c9191798506a52de2fa12aec2c7eccf2" translate="yes" xml:space="preserve">
          <source>Triggers the action and emits &lt;a href=&quot;qml-qtquick-controls2-action#triggered-signal&quot;&gt;triggered()&lt;/a&gt; if enabled, with an optional</source>
          <target state="translated">触发动作并发出&lt;a href=&quot;qml-qtquick-controls2-action#triggered-signal&quot;&gt;Trigger（）（&lt;/a&gt;如果启用），并带有可选的</target>
        </trans-unit>
        <trans-unit id="487c8ef4ca4d5bf3164520c3c7fadad6770d5552" translate="yes" xml:space="preserve">
          <source>Triggers the action.</source>
          <target state="translated">触发动作。</target>
        </trans-unit>
        <trans-unit id="acd72014c19383ce51b8ada37a18058faf5e9e4a" translate="yes" xml:space="preserve">
          <source>Triggers the specified</source>
          <target state="translated">触发指定的</target>
        </trans-unit>
        <trans-unit id="ed0a3de55f70368b77eebce92c56356838d26f8e" translate="yes" xml:space="preserve">
          <source>Triggers the web action</source>
          <target state="translated">触发网页动作</target>
        </trans-unit>
        <trans-unit id="1850f31930cadc1c9c1973aa52121dc093fd000e" translate="yes" xml:space="preserve">
          <source>Trims the engine's internal component cache.</source>
          <target state="translated">修剪发动机的内部组件缓存。</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="064526907221249fbc0b346fcd6af7be89acd45e" translate="yes" xml:space="preserve">
          <source>Troubleshooting Qt Remote Objects</source>
          <target state="translated">Qt远程对象的故障排除</target>
        </trans-unit>
        <trans-unit id="0eb29538cf8a06734337a516dec0903603c81a09" translate="yes" xml:space="preserve">
          <source>Troubleshooting the First Start of a Qt Application</source>
          <target state="translated">Qt应用程序的首次启动故障排除</target>
        </trans-unit>
        <trans-unit id="ebf3337936bc8b766d67d7f646de8aef9cf21533" translate="yes" xml:space="preserve">
          <source>True (&lt;code&gt;1&lt;/code&gt;) or false (&lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">正确（ &lt;code&gt;1&lt;/code&gt; ）或错误（ &lt;code&gt;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="46eb8ab276f7129ba6bf4d0d232a1f2fb2f859b9" translate="yes" xml:space="preserve">
          <source>True if the widget will be used to hold child widgets; false otherwise.</source>
          <target state="translated">如果该小组件将用于容纳子小组件,则为真;否则为假。</target>
        </trans-unit>
        <trans-unit id="795e696cfb7ca26da4585b0ad7c6e370dcb6505c" translate="yes" xml:space="preserve">
          <source>True when the virtual keyboard is being opened or closed.</source>
          <target state="translated">当虚拟键盘被打开或关闭时为真。</target>
        </trans-unit>
        <trans-unit id="6285fd6b1c2f13e1efead35666a6add72de79100" translate="yes" xml:space="preserve">
          <source>TrueType (TTF)</source>
          <target state="translated">TrueType (TTF)</target>
        </trans-unit>
        <trans-unit id="ce043b1ff5459a355758c4ae649e5d753b3f7c21" translate="yes" xml:space="preserve">
          <source>Truevision Graphics Adapter</source>
          <target state="translated">Truevision 图形适配器</target>
        </trans-unit>
        <trans-unit id="225b5f5ff1a486fa5596392cc19754abe0a6a4d6" translate="yes" xml:space="preserve">
          <source>Truncates the bit array at index position</source>
          <target state="translated">在索引位置截断位数组。</target>
        </trans-unit>
        <trans-unit id="d0fdfab4fcbf9122a85558f95e5e13206608bf7a" translate="yes" xml:space="preserve">
          <source>Truncates the byte array at index position</source>
          <target state="translated">在索引位置截断字节数组。</target>
        </trans-unit>
        <trans-unit id="803cb8e04e7b25e0104c81dc55c1e13c8a9bb9e5" translate="yes" xml:space="preserve">
          <source>Truncates the string at the given</source>
          <target state="translated">在给定的</target>
        </trans-unit>
        <trans-unit id="3e55b41079a98139d4288299b9a777d5d2bbe5a5" translate="yes" xml:space="preserve">
          <source>Truncates this byte array view by</source>
          <target state="translated">通过以下方式截断这个字节数组的视图</target>
        </trans-unit>
        <trans-unit id="b5c6d17a645731e012b856e4b8f502abfdd3393c" translate="yes" xml:space="preserve">
          <source>Truncates this byte array view to length</source>
          <target state="translated">将此字节数组视图截断为长度。</target>
        </trans-unit>
        <trans-unit id="dda77db7ed9227820d653339a8cdf3d75086cdfa" translate="yes" xml:space="preserve">
          <source>Truncates this string by</source>
          <target state="translated">将此字符串截断为</target>
        </trans-unit>
        <trans-unit id="cef7139fa8aa5ceff5ceb5219c7691cfb2895231" translate="yes" xml:space="preserve">
          <source>Truncates this string to length</source>
          <target state="translated">将此字符串截断为长度</target>
        </trans-unit>
        <trans-unit id="6efe784c0c1146a5fb6cb06f4dbd430b2480553f" translate="yes" xml:space="preserve">
          <source>Truncates this string view by</source>
          <target state="translated">通过以下方式截断这个字符串视图</target>
        </trans-unit>
        <trans-unit id="58c89101fb153e82a37b3e89ac5ac364b8dba221" translate="yes" xml:space="preserve">
          <source>Truncates this string view to</source>
          <target state="translated">将此字符串视图截断为</target>
        </trans-unit>
        <trans-unit id="aa31f7b99408030d28ccc595d662c22b0666ecca" translate="yes" xml:space="preserve">
          <source>Truncates this string view to length</source>
          <target state="translated">将此字符串视图截断为长度</target>
        </trans-unit>
        <trans-unit id="b4141aa5b8376b46e31ab254656334cf283774b3" translate="yes" xml:space="preserve">
          <source>Try to connect to a sensor backend.</source>
          <target state="translated">尝试连接到传感器后台。</target>
        </trans-unit>
        <trans-unit id="755993a90d0e210ada288a655d073e4965b1621e" translate="yes" xml:space="preserve">
          <source>Try to optimize the socket for low latency. For a &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; this would set the TCP_NODELAY option and disable Nagle's algorithm. Set this to 1 to enable.</source>
          <target state="translated">尝试优化套接字以降低延迟。对于&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket，&lt;/a&gt;这将设置TCP_NODELAY选项并禁用Nagle的算法。将此设置为1启用。</target>
        </trans-unit>
        <trans-unit id="d92c6181e6c7d8a79333cb0cb7e78a1d3e8ffe50" translate="yes" xml:space="preserve">
          <source>Trying to set a read only property will be ignored.</source>
          <target state="translated">试图设置一个只读属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="81dad58ec35e52e8c5bcab89879fdf46229236d8" translate="yes" xml:space="preserve">
          <source>Tue May 21 01</source>
          <target state="translated">Tue May 21 01</target>
        </trans-unit>
        <trans-unit id="a90c3f0f291901cb544ac97a232d4eda40f4e4de" translate="yes" xml:space="preserve">
          <source>Tumbler</source>
          <target state="translated">Tumbler</target>
        </trans-unit>
        <trans-unit id="ac619964445d0c1ebffa6d893d6dac6d573277f4" translate="yes" xml:space="preserve">
          <source>Tumbler (QML type)</source>
          <target state="translated">翻斗者(QML型)</target>
        </trans-unit>
        <trans-unit id="802bf5f800053e2634b48d2d16cf312e57778548" translate="yes" xml:space="preserve">
          <source>Tumbler Control</source>
          <target state="translated">滚筒控制</target>
        </trans-unit>
        <trans-unit id="1cdfe9c13f4c3297bec012026504e18a29b1d836" translate="yes" xml:space="preserve">
          <source>Tumbler QML Type</source>
          <target state="translated">滚筒QML类型</target>
        </trans-unit>
        <trans-unit id="f306dbaee99806c0705691c0b8623c09a8762741" translate="yes" xml:space="preserve">
          <source>Tumbler allows the user to select an option from a spinnable</source>
          <target state="translated">Tumbler允许用户从一个可旋转式的 &quot;Tumbler &quot;中选择一个选项。</target>
        </trans-unit>
        <trans-unit id="4f9af7536f7bdf1203d43568e633824178df980e" translate="yes" xml:space="preserve">
          <source>Tumbler consists of three visual items: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-tumbler#delegate-prop&quot;&gt;delegate&lt;/a&gt;.</source>
          <target state="translated">Tumbler由三个可视项组成：&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-tumbler#delegate-prop&quot;&gt;委托&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5545e714cc7a4e64546636d610933199508bfde4" translate="yes" xml:space="preserve">
          <source>Tumbler.Tumbler.displacement</source>
          <target state="translated">Tumbler.Tumbler.displacement</target>
        </trans-unit>
        <trans-unit id="c39e28f28ce9b648cf1632091200230202745f52" translate="yes" xml:space="preserve">
          <source>Tumbler.Tumbler.tumbler</source>
          <target state="translated">Tumbler.Tumbler.tumbler</target>
        </trans-unit>
        <trans-unit id="c4af2f0760b5c4d7e9cb29b979c75a536bb51f89" translate="yes" xml:space="preserve">
          <source>Tumbler.addColumn()</source>
          <target state="translated">Tumbler.addColumn()</target>
        </trans-unit>
        <trans-unit id="25b479d9b3c5999a872224aa6c15e940aaebfea9" translate="yes" xml:space="preserve">
          <source>Tumbler.columnCount</source>
          <target state="translated">Tumbler.columnCount</target>
        </trans-unit>
        <trans-unit id="d81026dae7fc48d16ba809ae6098d88a3f1d30f5" translate="yes" xml:space="preserve">
          <source>Tumbler.count</source>
          <target state="translated">Tumbler.count</target>
        </trans-unit>
        <trans-unit id="36115552578bc51cfc1827693447c2687e97ab8a" translate="yes" xml:space="preserve">
          <source>Tumbler.currentIndex</source>
          <target state="translated">Tumbler.currentIndex</target>
        </trans-unit>
        <trans-unit id="c1e39a3dfe63c3fbf08fe7cb77391295c1ad1c2c" translate="yes" xml:space="preserve">
          <source>Tumbler.currentIndexAt()</source>
          <target state="translated">Tumbler.currentIndexAt()</target>
        </trans-unit>
        <trans-unit id="414e5ff9ee1a37f5f04a0b17c79648d7fe3de113" translate="yes" xml:space="preserve">
          <source>Tumbler.currentItem</source>
          <target state="translated">Tumbler.currentItem</target>
        </trans-unit>
        <trans-unit id="2fcd6da9a1bb00d79d5d218968c56cdd23d5224c" translate="yes" xml:space="preserve">
          <source>Tumbler.delegate</source>
          <target state="translated">Tumbler.delegate</target>
        </trans-unit>
        <trans-unit id="5eb3bb17d38242ea86cd2ce491e1c506409aac44" translate="yes" xml:space="preserve">
          <source>Tumbler.getColumn()</source>
          <target state="translated">Tumbler.getColumn()</target>
        </trans-unit>
        <trans-unit id="ea0f78e7afdfe3dee414bbd35562ddd68a1d07cb" translate="yes" xml:space="preserve">
          <source>Tumbler.insertColumn()</source>
          <target state="translated">Tumbler.insertColumn()</target>
        </trans-unit>
        <trans-unit id="b051532353ee86d83787731615ae300cbc327c72" translate="yes" xml:space="preserve">
          <source>Tumbler.model</source>
          <target state="translated">Tumbler.model</target>
        </trans-unit>
        <trans-unit id="e9ddc687bd851207ef908a36e414af1861371c8e" translate="yes" xml:space="preserve">
          <source>Tumbler.moving</source>
          <target state="translated">Tumbler.moving</target>
        </trans-unit>
        <trans-unit id="831fd0e5a2063d20ba4b149b8d31bf00d3f18628" translate="yes" xml:space="preserve">
          <source>Tumbler.positionViewAtIndex()</source>
          <target state="translated">Tumbler.positionViewAtIndex()</target>
        </trans-unit>
        <trans-unit id="f7a3d7cd99568ceb17cc003a151cf40e8b27fee5" translate="yes" xml:space="preserve">
          <source>Tumbler.setCurrentIndexAt()</source>
          <target state="translated">Tumbler.setCurrentIndexAt()</target>
        </trans-unit>
        <trans-unit id="ada8d874c22b97faa7356d4f110bfdc498189cf0" translate="yes" xml:space="preserve">
          <source>Tumbler.visibleItemCount</source>
          <target state="translated">Tumbler.visibleItemCount</target>
        </trans-unit>
        <trans-unit id="525913a7a8d8d08b5d1a93c501f8761450fcad06" translate="yes" xml:space="preserve">
          <source>Tumbler.wrap</source>
          <target state="translated">Tumbler.wrap</target>
        </trans-unit>
        <trans-unit id="9f3804536db3e9259e69d5ce9c8146f8e10f4694" translate="yes" xml:space="preserve">
          <source>TumblerColumn</source>
          <target state="translated">TumblerColumn</target>
        </trans-unit>
        <trans-unit id="14eb7ad67c95188d4d9ef4c3d9b686bbff6792fe" translate="yes" xml:space="preserve">
          <source>TumblerColumn (QML type)</source>
          <target state="translated">圆柱体</target>
        </trans-unit>
        <trans-unit id="706a17830a8d4f5b9fe3a10f691c5ca89d3d2f20" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#addColumn-method&quot;&gt;addColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(TumblerColumn</source>
          <target state="translated">TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#addColumn-method&quot;&gt;addColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（TumblerColumn</target>
        </trans-unit>
        <trans-unit id="1d1537143f713b8ee3260998beb0f98f5736864b" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#getColumn-method&quot;&gt;getColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#getColumn-method&quot;&gt;getColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="6a8395a5e3fa20739241bad8c5250238c0d5cbf2" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#insertColumn-method&quot;&gt;insertColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="translated">TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#insertColumn-method&quot;&gt;insertColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;（int</target>
        </trans-unit>
        <trans-unit id="a5db630212bd13399125a9095dcbdce3ecbeb978" translate="yes" xml:space="preserve">
          <source>TumblerColumn QML Type</source>
          <target state="translated">TumblerColumn QML类型</target>
        </trans-unit>
        <trans-unit id="3f942971723db6a3e0da497925631e18853ad2ec" translate="yes" xml:space="preserve">
          <source>TumblerColumn represents a column within a tumbler, providing the interface to define the items and width of each column.</source>
          <target state="translated">TumblerColumn表示滚轴中的一列,提供接口来定义每列的项目和宽度。</target>
        </trans-unit>
        <trans-unit id="4a261deca6217c781072f81e364277a2a61ce300" translate="yes" xml:space="preserve">
          <source>TumblerColumn.activeFocus</source>
          <target state="translated">TumblerColumn.activeFocus</target>
        </trans-unit>
        <trans-unit id="59830ff65d8b534c35f0546e90a6c393efb659e6" translate="yes" xml:space="preserve">
          <source>TumblerColumn.columnForeground</source>
          <target state="translated">TumblerColumn.columnForeground</target>
        </trans-unit>
        <trans-unit id="ab947b3f737e3a2176759c9754e1f3b483402603" translate="yes" xml:space="preserve">
          <source>TumblerColumn.currentIndex</source>
          <target state="translated">TumblerColumn.currentIndex</target>
        </trans-unit>
        <trans-unit id="b747febd324c263bef8724a43dbd3ea47f16bae0" translate="yes" xml:space="preserve">
          <source>TumblerColumn.delegate</source>
          <target state="translated">TumblerColumn.delegate</target>
        </trans-unit>
        <trans-unit id="36b968ecf7c021967bd325b146d5985f7baf1a8a" translate="yes" xml:space="preserve">
          <source>TumblerColumn.highlight</source>
          <target state="translated">TumblerColumn.highlight</target>
        </trans-unit>
        <trans-unit id="44651ed997df24e270e00d90c4275ab7555576c3" translate="yes" xml:space="preserve">
          <source>TumblerColumn.model</source>
          <target state="translated">TumblerColumn.model</target>
        </trans-unit>
        <trans-unit id="2837b2c0023c8873da1d69dda73c9b1cd786213d" translate="yes" xml:space="preserve">
          <source>TumblerColumn.role</source>
          <target state="translated">TumblerColumn.role</target>
        </trans-unit>
        <trans-unit id="fd8373b63bf2083b2d1a9e6cdecc3a242bd96a20" translate="yes" xml:space="preserve">
          <source>TumblerColumn.visible</source>
          <target state="translated">TumblerColumn.visible</target>
        </trans-unit>
        <trans-unit id="edfa719c0cdbde92bc372a7ced767d2876811835" translate="yes" xml:space="preserve">
          <source>TumblerColumn.width</source>
          <target state="translated">TumblerColumn.width</target>
        </trans-unit>
        <trans-unit id="591ec96858fffd34eeef38d5d366703d8efdd125" translate="yes" xml:space="preserve">
          <source>TumblerStyle</source>
          <target state="translated">TumblerStyle</target>
        </trans-unit>
        <trans-unit id="a0812123341fcd8e6ad69b48bbfd76d9f429a311" translate="yes" xml:space="preserve">
          <source>TumblerStyle (QML type)</source>
          <target state="translated">TumblerStyle(QML类型</target>
        </trans-unit>
        <trans-unit id="203ebf7e3685edc394acbfee2e6451cf1e88c909" translate="yes" xml:space="preserve">
          <source>TumblerStyle QML Type</source>
          <target state="translated">TumblerStyle QML类型</target>
        </trans-unit>
        <trans-unit id="71d5752fcc6fb64b454db78483d80990e180cc57" translate="yes" xml:space="preserve">
          <source>TumblerStyle.background</source>
          <target state="translated">TumblerStyle.background</target>
        </trans-unit>
        <trans-unit id="04ed66827f0b3ad3a88454bab67bb38215cb8f45" translate="yes" xml:space="preserve">
          <source>TumblerStyle.columnForeground</source>
          <target state="translated">TumblerStyle.columnForeground</target>
        </trans-unit>
        <trans-unit id="4492db30067530860617e2ec3213b6d146349161" translate="yes" xml:space="preserve">
          <source>TumblerStyle.control</source>
          <target state="translated">TumblerStyle.control</target>
        </trans-unit>
        <trans-unit id="8a089a4d2ef3439004e45fb1c08c3bdaa06f1284" translate="yes" xml:space="preserve">
          <source>TumblerStyle.delegate</source>
          <target state="translated">TumblerStyle.delegate</target>
        </trans-unit>
        <trans-unit id="0c30de989a010c78e8be72464f4b792d0711332e" translate="yes" xml:space="preserve">
          <source>TumblerStyle.foreground</source>
          <target state="translated">TumblerStyle.foreground</target>
        </trans-unit>
        <trans-unit id="de12204c30f7a805705703657d1dd9d88ae21649" translate="yes" xml:space="preserve">
          <source>TumblerStyle.frame</source>
          <target state="translated">TumblerStyle.frame</target>
        </trans-unit>
        <trans-unit id="e29e69f26ef1a2f903205c0b2c8771a9d117d2d4" translate="yes" xml:space="preserve">
          <source>TumblerStyle.highlight</source>
          <target state="translated">TumblerStyle.highlight</target>
        </trans-unit>
        <trans-unit id="1d6c9b6e153e86458e4bb362bea6ad8cda478e1d" translate="yes" xml:space="preserve">
          <source>TumblerStyle.separator</source>
          <target state="translated">TumblerStyle.separator</target>
        </trans-unit>
        <trans-unit id="d2db45db9c9d43b885997f21752e8e79c0bd690e" translate="yes" xml:space="preserve">
          <source>TumblerStyle.visibleItemCount</source>
          <target state="translated">TumblerStyle.visibleItemCount</target>
        </trans-unit>
        <trans-unit id="2cecdfd4c7e33aa7f9a8198db9bbe90d25134706" translate="yes" xml:space="preserve">
          <source>Tungsten (incandescent) white balance mode.</source>
          <target state="translated">钨丝灯(白炽灯)白平衡模式。</target>
        </trans-unit>
        <trans-unit id="f60dde415819937807920eafdaf9401c221ad406" translate="yes" xml:space="preserve">
          <source>Tungsten white balance mode.</source>
          <target state="translated">钨丝灯白平衡模式。</target>
        </trans-unit>
        <trans-unit id="75273d6e0580e361674d59e1bf1d336633baff28" translate="yes" xml:space="preserve">
          <source>Turbulence (QML type)</source>
          <target state="translated">湍流(QML型)</target>
        </trans-unit>
        <trans-unit id="485f9476b9fa8c80da30ac6edfa1867faecc12bf" translate="yes" xml:space="preserve">
          <source>Turbulence QML Type</source>
          <target state="translated">湍流QML类型</target>
        </trans-unit>
        <trans-unit id="659d836316ce69ecf9064cc46aa3ca1cfa296516" translate="yes" xml:space="preserve">
          <source>Turbulence requires a fixed size. Unlike other affectors, a 0x0 Turbulence element will affect no particles.</source>
          <target state="translated">湍流需要一个固定的大小。与其他影响器不同,0x0的湍流元素不会影响任何粒子。</target>
        </trans-unit>
        <trans-unit id="8d46f4aa65c4ef2e64bed22d392850d1bc66c5cf" translate="yes" xml:space="preserve">
          <source>Turbulence.noiseSource</source>
          <target state="translated">Turbulence.noiseSource</target>
        </trans-unit>
        <trans-unit id="6207d5125446bb845fe72fb900ead494525edc4e" translate="yes" xml:space="preserve">
          <source>Turbulence.strength</source>
          <target state="translated">Turbulence.strength</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="e3019fef676718f903c4141463e408f9aa4abe65" translate="yes" xml:space="preserve">
          <source>Turkish Layout</source>
          <target state="translated">土耳其布局</target>
        </trans-unit>
        <trans-unit id="4a72ee799e82ae7bcd6033362c09520c95c5678a" translate="yes" xml:space="preserve">
          <source>Turn off namespace macros.</source>
          <target state="translated">关闭命名空间宏。</target>
        </trans-unit>
        <trans-unit id="e91abc218344ef3d52a7d7a9f911f12283a7549f" translate="yes" xml:space="preserve">
          <source>Turn on auto ISO sensitivity selection. The manual ISO value is reset to -1.</source>
          <target state="translated">开启自动ISO感光度选择。手动ISO值被重设为-1。</target>
        </trans-unit>
        <trans-unit id="c9ddca434d17f9437d998ca9280c9c8f7c3b0441" translate="yes" xml:space="preserve">
          <source>Turn on auto aperture</source>
          <target state="translated">开启自动光圈</target>
        </trans-unit>
        <trans-unit id="f203e720edb0f6da07129d23f6a4694be392ef2a" translate="yes" xml:space="preserve">
          <source>Turn on auto aperture selection. The manual aperture value is reset to -1.0</source>
          <target state="translated">开启自动光圈选择。手动光圈值被重设为-1.0。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
