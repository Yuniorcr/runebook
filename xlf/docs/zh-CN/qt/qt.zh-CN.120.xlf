<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="9592e275e673d45ed44c6cf58ee2d1845341704f" translate="yes" xml:space="preserve">
          <source>Appends</source>
          <target state="translated">Appends</target>
        </trans-unit>
        <trans-unit id="cc493c8c618d7ca8deedf4ca2134338d444a07c7" translate="yes" xml:space="preserve">
          <source>Appends a</source>
          <target state="translated">添加一个</target>
        </trans-unit>
        <trans-unit id="ab87e216b75a661ffd93e0177232efb86b5d5593" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Null value to the stream. This function is equivalent to (and implemented as):</source>
          <target state="translated">将CBOR Null值添加到流中。这个函数相当于(并实现为):</target>
        </trans-unit>
        <trans-unit id="7cf1cc71f0a5a421587974aec24684cb5950d858" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Null value to the stream. This function is equivalent to (and implemented as): The parameter is ignored.</source>
          <target state="translated">将CBOR Null值添加到流中。这个函数相当于(并实现为)。该参数被忽略。</target>
        </trans-unit>
        <trans-unit id="7cf61cb1b63057b3f95c31447ec376e0b9e5ccfe" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Undefined value to the stream. This function is equivalent to (and implemented as):</source>
          <target state="translated">将一个CBOR未定义的值添加到流中。这个函数等同于(并实现为)。</target>
        </trans-unit>
        <trans-unit id="98016bdf464795a88914f997433c71ce60fe8916" translate="yes" xml:space="preserve">
          <source>Appends a column containing</source>
          <target state="translated">添加一列包含</target>
        </trans-unit>
        <trans-unit id="85fcd55da15a418ad408410db2525d4e64246531" translate="yes" xml:space="preserve">
          <source>Appends a contact</source>
          <target state="translated">添加一个联系人</target>
        </trans-unit>
        <trans-unit id="ceffe1b17e5a99d0cc18bde2986793da3b04c7f5" translate="yes" xml:space="preserve">
          <source>Appends a coordinate to the list of waypoints. Same coordinate can be set multiple times. The</source>
          <target state="translated">在航点列表中添加一个坐标。同一坐标可以设置多次。列表中的</target>
        </trans-unit>
        <trans-unit id="41b3be1ee68e8509a966e185d8bbd4ee9c3d9689" translate="yes" xml:space="preserve">
          <source>Appends a list of real values specified by</source>
          <target state="translated">添加一个由</target>
        </trans-unit>
        <trans-unit id="607e29f364c4857c5ee4c31edc94f39c6f319076" translate="yes" xml:space="preserve">
          <source>Appends a new</source>
          <target state="translated">添加一个新的</target>
        </trans-unit>
        <trans-unit id="7500a4ab98e01b751f88ee244dbe46b003461458" translate="yes" xml:space="preserve">
          <source>Appends a new &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; with</source>
          <target state="translated">附加一个新的&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;与</target>
        </trans-unit>
        <trans-unit id="14574bbfa5efe541f643d8ae4148af9ea3bdf2e3" translate="yes" xml:space="preserve">
          <source>Appends a new attribute entry to the list of attributes. The qualified name of the attribute is</source>
          <target state="translated">将一个新的属性条目添加到属性列表中。属性的限定名称是</target>
        </trans-unit>
        <trans-unit id="4df41f664650622bd50f9c478820b25104832c7c" translate="yes" xml:space="preserve">
          <source>Appends a new attribute with</source>
          <target state="translated">添加一个新的属性</target>
        </trans-unit>
        <trans-unit id="419d01f1e237c3037049e99b41a22386ac8efcfd" translate="yes" xml:space="preserve">
          <source>Appends a new attribute with qualified name</source>
          <target state="translated">添加一个带有限定名称的新属性</target>
        </trans-unit>
        <trans-unit id="0eba6b98b1e703615263bd839df66c822c6d9241" translate="yes" xml:space="preserve">
          <source>Appends a new box-and-whiskers item with the label specified by</source>
          <target state="translated">添加一个新的盒子和晶须项目,标签由</target>
        </trans-unit>
        <trans-unit id="88f45bfe468bcd05c8d0a294f66f11bf89777af4" translate="yes" xml:space="preserve">
          <source>Appends a new category to the axis with the label</source>
          <target state="translated">将一个新的类别添加到轴上,标签为</target>
        </trans-unit>
        <trans-unit id="b3ff3785f2e92fa845e43352fbbd422913ab7e97" translate="yes" xml:space="preserve">
          <source>Appends a new item to the end of the model.</source>
          <target state="translated">在模型的末尾添加一个新项目。</target>
        </trans-unit>
        <trans-unit id="3aef5163d71d73a64d0a8cfb17e1b8988ee12cef" translate="yes" xml:space="preserve">
          <source>Appends a new paragraph with</source>
          <target state="translated">添加一个新的段落</target>
        </trans-unit>
        <trans-unit id="c08084e616a2e74c006a74d36172ee5069389a99" translate="yes" xml:space="preserve">
          <source>Appends a new row to the current test data.</source>
          <target state="translated">在当前测试数据中添加一条新行。</target>
        </trans-unit>
        <trans-unit id="b1fe5b769f1ea5340af2e0c61580d62768d8cde1" translate="yes" xml:space="preserve">
          <source>Appends a new row to the current test data. The function's arguments are passed to &lt;a href=&quot;qbytearray#qsnprintf&quot;&gt;qsnprintf&lt;/a&gt;() for formatting according to</source>
          <target state="translated">在当前测试数据上追加新行。该函数的参数传递给&lt;a href=&quot;qbytearray#qsnprintf&quot;&gt;qsnprintf&lt;/a&gt;（）以便根据</target>
        </trans-unit>
        <trans-unit id="83458c053ab24e9f0408ec85a1bdd857a38ad821" translate="yes" xml:space="preserve">
          <source>Appends a point with the coordinates</source>
          <target state="translated">添加一个点,坐标为</target>
        </trans-unit>
        <trans-unit id="436d5a058920aa94e4596048b32fb7e4f14bf127" translate="yes" xml:space="preserve">
          <source>Appends a record matching the template parameter to the NDEF filter. The record must occur between</source>
          <target state="translated">将一个与模板参数匹配的记录添加到NDEF过滤器中。该记录必须出现在</target>
        </trans-unit>
        <trans-unit id="0eee2c06bd1f663a5f98bce169107681187786d1" translate="yes" xml:space="preserve">
          <source>Appends a record with type name format</source>
          <target state="translated">添加类型名称格式的记录</target>
        </trans-unit>
        <trans-unit id="d814bb98c5693f11a305296f646a2a04b636a575" translate="yes" xml:space="preserve">
          <source>Appends a row containing</source>
          <target state="translated">添加一行包含</target>
        </trans-unit>
        <trans-unit id="0295372923a5cf8376a87dfee865162bfb26132c" translate="yes" xml:space="preserve">
          <source>Appends a separator to the menu.</source>
          <target state="translated">在菜单上添加一个分隔符。</target>
        </trans-unit>
        <trans-unit id="fbbcf9080b2e9c91b5cf029e873af306d142df29" translate="yes" xml:space="preserve">
          <source>Appends a single slice with the specified</source>
          <target state="translated">添加一个带有指定的</target>
        </trans-unit>
        <trans-unit id="4377ad21a3cb655f933924f498f69cec1e3eb27b" translate="yes" xml:space="preserve">
          <source>Appends a string</source>
          <target state="translated">添加一个字符串</target>
        </trans-unit>
        <trans-unit id="b9871cfad259b421a78274c189c35a504d63b323" translate="yes" xml:space="preserve">
          <source>Appends item</source>
          <target state="translated">添加项目</target>
        </trans-unit>
        <trans-unit id="abbc3fd51b23bffa39d2f7c64a285d608ab1a466" translate="yes" xml:space="preserve">
          <source>Appends rows containing</source>
          <target state="translated">将包含</target>
        </trans-unit>
        <trans-unit id="ee78b989fdbf0e3b21c26391ace311a496be7341" translate="yes" xml:space="preserve">
          <source>Appends the</source>
          <target state="translated">添加</target>
        </trans-unit>
        <trans-unit id="59843f7496f8650c0f731e3cdd4da0f008a368fb" translate="yes" xml:space="preserve">
          <source>Appends the '\0'-terminated string</source>
          <target state="translated">将'/0'结尾的字符串追加到'/0'。</target>
        </trans-unit>
        <trans-unit id="dc29dede566604d87701bf50b0dec4c8ae899cf3" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit negative value</source>
          <target state="translated">添加64位负值</target>
        </trans-unit>
        <trans-unit id="d97eeac24dd55baf501cb64b67107d39c00b0c95" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit signed value</source>
          <target state="translated">添加64位有符号的值</target>
        </trans-unit>
        <trans-unit id="2cdda3a1d53292f3cca488eed00b3f59b04fb0c4" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit unsigned value</source>
          <target state="translated">添加64位无符号值</target>
        </trans-unit>
        <trans-unit id="ed2808044e3c6f98e8b398360aae2319f2207103" translate="yes" xml:space="preserve">
          <source>Appends the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; given by</source>
          <target state="translated">附加由给定的&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70b2460b6a06a50b625c0072d3a03ddd113f50a5" translate="yes" xml:space="preserve">
          <source>Appends the &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; given by</source>
          <target state="translated">附加由给出的&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86ced031d15de0067b7261d005ab9f073c3975a1" translate="yes" xml:space="preserve">
          <source>Appends the CBOR simple type</source>
          <target state="translated">添加CBOR简单类型</target>
        </trans-unit>
        <trans-unit id="745146464ede9e6f967a2ee953aa7387e8feeea5" translate="yes" xml:space="preserve">
          <source>Appends the CBOR tag</source>
          <target state="translated">添加CBOR标签</target>
        </trans-unit>
        <trans-unit id="a2b9b7bad90a6cc39534ac8ff980c7c4891765a1" translate="yes" xml:space="preserve">
          <source>Appends the Latin-1 string</source>
          <target state="translated">添加Latin-1字符串</target>
        </trans-unit>
        <trans-unit id="bba6dfd95e19e8c8f25774569414b7d1e0ee744e" translate="yes" xml:space="preserve">
          <source>Appends the action</source>
          <target state="translated">附加动作</target>
        </trans-unit>
        <trans-unit id="7ca7e897849e17def3075d57948f16048b7683e1" translate="yes" xml:space="preserve">
          <source>Appends the actions</source>
          <target state="translated">附加动作</target>
        </trans-unit>
        <trans-unit id="1e8c5c013ac78a39b72585e1094ec9205998ac95" translate="yes" xml:space="preserve">
          <source>Appends the argument</source>
          <target state="translated">附加参数</target>
        </trans-unit>
        <trans-unit id="199cf5e09f364c0ca6d9278d81d38f9e7400e60e" translate="yes" xml:space="preserve">
          <source>Appends the array of slices specified by</source>
          <target state="translated">将指定的片断数组添加到</target>
        </trans-unit>
        <trans-unit id="0a761ef7e968721844c6643ba48a3580e15e8d67" translate="yes" xml:space="preserve">
          <source>Appends the boolean value</source>
          <target state="translated">添加布尔值</target>
        </trans-unit>
        <trans-unit id="fe9e708a5916e1a0f830b4c24e6dc75196a179f0" translate="yes" xml:space="preserve">
          <source>Appends the box-and-whiskers item specified by</source>
          <target state="translated">将指定的方框和晶须项目添加到由</target>
        </trans-unit>
        <trans-unit id="29e48e7a6c1c1a8107d50efb4fb0e2849639efd3" translate="yes" xml:space="preserve">
          <source>Appends the byte</source>
          <target state="translated">添加字节</target>
        </trans-unit>
        <trans-unit id="3aef4fd396ed8c9426b7fbad5a6e36fd48963a42" translate="yes" xml:space="preserve">
          <source>Appends the byte array</source>
          <target state="translated">添加字节数组</target>
        </trans-unit>
        <trans-unit id="9f69e3dc63f95c980870ecd63b55df7e3c0ecbfe" translate="yes" xml:space="preserve">
          <source>Appends the character</source>
          <target state="translated">添加字符</target>
        </trans-unit>
        <trans-unit id="45ba1d713a1a399fdc94cd1ba0b855e56be95025" translate="yes" xml:space="preserve">
          <source>Appends the element</source>
          <target state="translated">添加元素</target>
        </trans-unit>
        <trans-unit id="f84b66cab5f997344daeab90c993e6ef212f266f" translate="yes" xml:space="preserve">
          <source>Appends the field</source>
          <target state="translated">添加领域</target>
        </trans-unit>
        <trans-unit id="ef10477be81a6e116d31ee38d38b18fa3727edc6" translate="yes" xml:space="preserve">
          <source>Appends the first</source>
          <target state="translated">添加第一个</target>
        </trans-unit>
        <trans-unit id="24d652c2088a0ed256a830c6149c7b7b27f70e3a" translate="yes" xml:space="preserve">
          <source>Appends the floating point number</source>
          <target state="translated">添加浮点数</target>
        </trans-unit>
        <trans-unit id="b79568b22e21975ddb797307e09f4a5cef2559e8" translate="yes" xml:space="preserve">
          <source>Appends the given</source>
          <target state="translated">添加给定的</target>
        </trans-unit>
        <trans-unit id="cf1bbddbeb8629f33ae20a1752703a9515ed5231" translate="yes" xml:space="preserve">
          <source>Appends the given list of</source>
          <target state="translated">将给定的列表中的</target>
        </trans-unit>
        <trans-unit id="401f158b28b90da952e962468177742af68c2f9f" translate="yes" xml:space="preserve">
          <source>Appends the given string</source>
          <target state="translated">添加给定的字符串</target>
        </trans-unit>
        <trans-unit id="7e1e87cd25ba418845365ae3753dcd2043816336" translate="yes" xml:space="preserve">
          <source>Appends the given string,</source>
          <target state="translated">附加给定的字符串。</target>
        </trans-unit>
        <trans-unit id="17cac3bc1d88ec10b99cd62ab5e425bf19ef74e2" translate="yes" xml:space="preserve">
          <source>Appends the items of the</source>
          <target state="translated">附加的项目</target>
        </trans-unit>
        <trans-unit id="17b6b3c5865e21ab117b12e7f6cd297fc05ceef3" translate="yes" xml:space="preserve">
          <source>Appends the list of</source>
          <target state="translated">附加的清单</target>
        </trans-unit>
        <trans-unit id="6a6f1ce06c989a50750a3fb441c3e20064733ec6" translate="yes" xml:space="preserve">
          <source>Appends the list of URLs in</source>
          <target state="translated">将URL列表添加到</target>
        </trans-unit>
        <trans-unit id="51c97ef8b5eaf26c6aa86e5425c05f780518fb65" translate="yes" xml:space="preserve">
          <source>Appends the list of real values specified by</source>
          <target state="translated">添加由</target>
        </trans-unit>
        <trans-unit id="d55c3405a447e5f821915af83bea2d453640066b" translate="yes" xml:space="preserve">
          <source>Appends the new value specified by</source>
          <target state="translated">添加由</target>
        </trans-unit>
        <trans-unit id="409122878989c3ea90888864d5f3bfc5544f12fb" translate="yes" xml:space="preserve">
          <source>Appends the pair</source>
          <target state="translated">添加一对</target>
        </trans-unit>
        <trans-unit id="8834c20516e935e6b62ac4bf9289b837de8f78f8" translate="yes" xml:space="preserve">
          <source>Appends the primitive value</source>
          <target state="translated">添加基元值</target>
        </trans-unit>
        <trans-unit id="a9824bd350ebdf0d2049a00db17b49a23162e407" translate="yes" xml:space="preserve">
          <source>Appends the slice specified by</source>
          <target state="translated">添加由</target>
        </trans-unit>
        <trans-unit id="dfa2233d0dab368dd922888b3389cbe7919a3832" translate="yes" xml:space="preserve">
          <source>Appends the string</source>
          <target state="translated">添加字符串</target>
        </trans-unit>
        <trans-unit id="1b7866d8f197c27a75e2eb2a0007443ddb1e9bb3" translate="yes" xml:space="preserve">
          <source>Appends the string reference to</source>
          <target state="translated">将字符串引用添加到</target>
        </trans-unit>
        <trans-unit id="89dc5b9ae7f6b2b56d8e15489912c0b8d02684f2" translate="yes" xml:space="preserve">
          <source>Appends the string section referenced by</source>
          <target state="translated">添加由</target>
        </trans-unit>
        <trans-unit id="cf92a4c5803ed5ada24e589e6537019eff2409dc" translate="yes" xml:space="preserve">
          <source>Appends the string view</source>
          <target state="translated">添加字符串视图</target>
        </trans-unit>
        <trans-unit id="c3922276f2a447219f8bcffbd68984402c6c40c2" translate="yes" xml:space="preserve">
          <source>Appends the text string</source>
          <target state="translated">添加文本字符串</target>
        </trans-unit>
        <trans-unit id="fd680954a13e44ffa9519b367d4079ec2686a8d2" translate="yes" xml:space="preserve">
          <source>Apple Icon Image</source>
          <target state="translated">苹果图标图片</target>
        </trans-unit>
        <trans-unit id="e200660f3a20124c7833ad7dd9bbe7b44c09aa98" translate="yes" xml:space="preserve">
          <source>Apple Platforms</source>
          <target state="translated">苹果平台</target>
        </trans-unit>
        <trans-unit id="320b0241beb9b46b7a905f6bd423eb892a8ab4d2" translate="yes" xml:space="preserve">
          <source>Apple Platforms - iOS, tvOS, and watchOS</source>
          <target state="translated">苹果平台-iOS、tvOS 和 watchOS</target>
        </trans-unit>
        <trans-unit id="2686709a69821ae6b7fc89091ab7592b473eab26" translate="yes" xml:space="preserve">
          <source>Apple platforms have a built-in way to express the OS versions that an application supports, which allows older versions of the platforms to automatically display a user friendly error message prompting the user to update their OS, as opposed to crashing and displaying a stack trace.</source>
          <target state="translated">苹果平台内置了一种表达应用程序所支持的操作系统版本的方式,这使得旧版本的平台可以自动显示一个用户友好的错误信息,提示用户更新他们的操作系统,而不是崩溃并显示一个堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="eb6c683f59e1d264268f24340ac89a8532c9ef4f" translate="yes" xml:space="preserve">
          <source>Application Assets</source>
          <target state="translated">应用资产</target>
        </trans-unit>
        <trans-unit id="3925a6e948fb7872d335532f8d20c939d631d4b3" translate="yes" xml:space="preserve">
          <source>Application Identifiers</source>
          <target state="translated">应用标识符</target>
        </trans-unit>
        <trans-unit id="7e40172027d30d86e935e6ff42f79ecaa6d203f8" translate="yes" xml:space="preserve">
          <source>Application Main Window</source>
          <target state="translated">应用主窗口</target>
        </trans-unit>
        <trans-unit id="e7323247f5a7af4bbcd10e86002151d0465b9432" translate="yes" xml:space="preserve">
          <source>Application Menu | About &amp;lt;application name&amp;gt;</source>
          <target state="translated">应用程序菜单| 关于&amp;lt;应用程序名称&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ed1be79e8ee065a818733b399c26489b5f4f3890" translate="yes" xml:space="preserve">
          <source>Application Menu | Preferences</source>
          <target state="translated">应用程序菜单|偏好设置</target>
        </trans-unit>
        <trans-unit id="b80be2254170a3f07b62935e4c6b062e51cc4ff4" translate="yes" xml:space="preserve">
          <source>Application Menu | Quit &amp;lt;application name&amp;gt;</source>
          <target state="translated">应用程序菜单| 退出&amp;lt;应用程序名称&amp;gt;</target>
        </trans-unit>
        <trans-unit id="55ff2241133976524c32f4d2feb3fe63e5446b40" translate="yes" xml:space="preserve">
          <source>Application Package</source>
          <target state="translated">申请包</target>
        </trans-unit>
        <trans-unit id="26e36eadcb2a449b1f19d57b5ea5d9acbd25dee9" translate="yes" xml:space="preserve">
          <source>Application Window</source>
          <target state="translated">应用窗口</target>
        </trans-unit>
        <trans-unit id="ec97012deefee9b415f6ac7443c6b16207ccc9b4" translate="yes" xml:space="preserve">
          <source>Application Windows</source>
          <target state="translated">应用窗口</target>
        </trans-unit>
        <trans-unit id="24b07d4b0e283482066da7b843356ed2ed30e7d9" translate="yes" xml:space="preserve">
          <source>Application and Library Paths</source>
          <target state="translated">应用和图书馆路径</target>
        </trans-unit>
        <trans-unit id="d662d9592fc02d08b355d05e7553efcf33a09cdf" translate="yes" xml:space="preserve">
          <source>Application and user interface components need to communicate with each other. For example, a button needs to know that the user has clicked on it. The button may change colors to indicate its state or perform some logic. As well, application needs to know whether the user is clicking the button. The application may need to relay this clicking event to other applications.</source>
          <target state="translated">应用程序和用户界面组件需要相互沟通。例如,一个按钮需要知道用户已经点击了它。按钮可能会改变颜色来表示它的状态或执行一些逻辑。同样,应用程序也需要知道用户是否在点击该按钮。应用程序可能需要将这个点击事件传递给其他应用程序。</target>
        </trans-unit>
        <trans-unit id="c9a8864c4e56a9311281082b309aaba577a102c9" translate="yes" xml:space="preserve">
          <source>Application cursors are stored on an internal stack. setOverrideCursor() pushes the cursor onto the stack, and &lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;() pops the active cursor off the stack. &lt;a href=&quot;qguiapplication#changeOverrideCursor&quot;&gt;changeOverrideCursor&lt;/a&gt;() changes the curently active application override cursor.</source>
          <target state="translated">应用程序游标存储在内部堆栈中。setOverrideCursor（）将光标推到堆栈上，&lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;（）将活动光标弹出堆栈。&lt;a href=&quot;qguiapplication#changeOverrideCursor&quot;&gt;changeOverrideCursor&lt;/a&gt;（）更改当前活动的应用程序覆盖光标。</target>
        </trans-unit>
        <trans-unit id="37f6d0abb946799b96e062063a34b2aa12972844" translate="yes" xml:space="preserve">
          <source>Application developers need not concern themselves with the &lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt;. Backend implementers however will need to derive from &lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt; and provide implementations for the abstract virtual functions.</source>
          <target state="translated">应用程序开发人员不必关心&lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt;。但是，后端实现者将需要从&lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt;派生并提供抽象虚拟功能的实现。</target>
        </trans-unit>
        <trans-unit id="5363f9cea7ec2695b5d228b1999d7b12865f3705" translate="yes" xml:space="preserve">
          <source>Application developers need not concern themselves with the QPlaceManagerEngine. Backend implementers however will need to derive from QPlaceManagerEngine and provide implementations for the abstract virtual functions.</source>
          <target state="translated">应用开发者不需要关注QPlaceManagerEngine。然而,后端实现者需要从QPlaceManagerEngine派生,并提供抽象虚拟函数的实现。</target>
        </trans-unit>
        <trans-unit id="aa6a41142efefc222fd638bab6ffbf0d9084878f" translate="yes" xml:space="preserve">
          <source>Application developers typically encounter the need to work with custom shader code in Qt Quick scenes that have:</source>
          <target state="translated">应用开发者通常会遇到需要在Qt Quick场景中使用自定义着色器代码,这些代码有。</target>
        </trans-unit>
        <trans-unit id="ead52ddb0ec69d17eee07cf54886c13d415aaec6" translate="yes" xml:space="preserve">
          <source>Application display name and identifier</source>
          <target state="translated">应用程序显示名称和标识符</target>
        </trans-unit>
        <trans-unit id="8f113ade799bd38f0451572e87264647cc7bb122" translate="yes" xml:space="preserve">
          <source>Application override cursors are intended for showing the user that the application is in a special state, for example during an operation that might take some time.</source>
          <target state="translated">应用程序覆盖光标是为了向用户显示应用程序处于特殊状态,例如在可能需要一段时间的操作期间。</target>
        </trans-unit>
        <trans-unit id="3fc0e785d1629568c19d71c4b7f71420d00ee4b4" translate="yes" xml:space="preserve">
          <source>Application settings may be divided into logical categories by specifying a category name via the &lt;a href=&quot;qml-qt-labs-settings-settings#category-prop&quot;&gt;category&lt;/a&gt; property. Using logical categories not only provides a cleaner settings structure, but also prevents possible conflicts between setting keys.</source>
          <target state="translated">通过&lt;a href=&quot;qml-qt-labs-settings-settings#category-prop&quot;&gt;类别&lt;/a&gt;属性指定类别名称，可以将应用程序设置分为逻辑类别。使用逻辑类别不仅可以提供更整洁的设置结构，还可以防止设置键之间可能发生冲突。</target>
        </trans-unit>
        <trans-unit id="38c72b8d84634fbe058060b21c62e1c9e80f9ff8" translate="yes" xml:space="preserve">
          <source>Application specific settings are identified by providing application &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;name&lt;/a&gt;, &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organization&lt;/a&gt; and &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;domain&lt;/a&gt;, or by specifying &lt;a href=&quot;qml-qt-labs-settings-settings#fileName-prop&quot;&gt;fileName&lt;/a&gt;.</source>
          <target state="translated">通过提供应用程序&lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;名称&lt;/a&gt;，&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;组织&lt;/a&gt;和&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;域&lt;/a&gt;，或通过指定&lt;a href=&quot;qml-qt-labs-settings-settings#fileName-prop&quot;&gt;fileName&lt;/a&gt;来标识特定于应用程序的设置。</target>
        </trans-unit>
        <trans-unit id="99c2cb698337bc42ffb9296aee16eab2d7bd5775" translate="yes" xml:space="preserve">
          <source>Application-specific directories should be assumed to be unreachable by other applications. Therefore, files placed there might not be readable by other applications, even if run by the same user. On the other hand, generic directories should be assumed to be accessible by all applications run by this user, but should still be assumed to be unreachable by applications by other users.</source>
          <target state="translated">应用程序专用目录应被认为是其他应用程序无法访问的。因此,放在那里的文件可能无法被其他应用程序读取,即使由同一用户运行。另一方面,通用目录应假定该用户运行的所有应用程序都可以访问,但仍应假定其他用户的应用程序无法访问。</target>
        </trans-unit>
        <trans-unit id="bb8f045797552418a8690112f95575d587db6060" translate="yes" xml:space="preserve">
          <source>ApplicationWindow</source>
          <target state="translated">ApplicationWindow</target>
        </trans-unit>
        <trans-unit id="c87139b68e490b101ffc0b3eb9df171948283af1" translate="yes" xml:space="preserve">
          <source>ApplicationWindow (QML type)</source>
          <target state="translated">应用窗口(QML类型)</target>
        </trans-unit>
        <trans-unit id="b95086c6e38bdb25419952e7314b6109566d2d56" translate="yes" xml:space="preserve">
          <source>ApplicationWindow Control</source>
          <target state="translated">应用窗口控制</target>
        </trans-unit>
        <trans-unit id="9cc56ecd855b87102edd0fd3a6d77254d3a98dce" translate="yes" xml:space="preserve">
          <source>ApplicationWindow QML Type</source>
          <target state="translated">ApplicationWindow QML类型</target>
        </trans-unit>
        <trans-unit id="09fab4de230b05c9549339cd1589fb47a42703cc" translate="yes" xml:space="preserve">
          <source>ApplicationWindow is a &lt;a href=&quot;https://doc.qt.io/qt-6.0/window2-qmlmodule.html&quot;&gt;Window&lt;/a&gt; which makes it convenient to add a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#menuBar-attached-prop&quot;&gt;menu bar&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;header&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;footer&lt;/a&gt; item to the window.</source>
          <target state="translated">ApplicationWindow是一个&lt;a href=&quot;https://doc.qt.io/qt-6.0/window2-qmlmodule.html&quot;&gt;Window&lt;/a&gt;，可以方便地将&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#menuBar-attached-prop&quot;&gt;菜单栏&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;页眉&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;页脚&lt;/a&gt;项添加到窗口中。</target>
        </trans-unit>
        <trans-unit id="46265bc9bbfeef9b7faf24edad095eacffb3a323" translate="yes" xml:space="preserve">
          <source>ApplicationWindow is a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; that adds convenience for positioning items, such as &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls-statusbar&quot;&gt;StatusBar&lt;/a&gt; in a platform independent manner.</source>
          <target state="translated">ApplicationWindow是一个&lt;a href=&quot;qml-qtquick-window-window&quot;&gt;窗口&lt;/a&gt;，它以独立于平台的方式为放置诸如&lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls-statusbar&quot;&gt;StatusBar之&lt;/a&gt;类的项目提供了便利。</target>
        </trans-unit>
        <trans-unit id="141e9fe433538b110edc08db43f93c06e6d0b961" translate="yes" xml:space="preserve">
          <source>ApplicationWindow is a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; which makes it convenient to add a &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#menuBar-attached-prop&quot;&gt;menu bar&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;header&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;footer&lt;/a&gt; item to the window.</source>
          <target state="translated">ApplicationWindow是一个&lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;，可以方便地将&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#menuBar-attached-prop&quot;&gt;菜单栏&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#header-attached-prop&quot;&gt;页眉&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#footer-attached-prop&quot;&gt;页脚&lt;/a&gt;项添加到窗口中。</target>
        </trans-unit>
        <trans-unit id="914095c44aa4d0b266d848971a54e8fcad0dd136" translate="yes" xml:space="preserve">
          <source>ApplicationWindow provides a set of attached properties that can be used to access the window and its building blocks from places where no direct access to the window is available, without creating a dependency to a certain window &lt;code&gt;id&lt;/code&gt;. A QML component that uses the ApplicationWindow attached properties works in any window regardless of its &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">ApplicationWindow提供了一组附加属性，可用于从无法直接访问窗口的位置访问窗口及其构造块，而无需创建对特定窗口 &lt;code&gt;id&lt;/code&gt; 的依赖关系。使用ApplicationWindow附加属性的QML组件可在任何窗口中使用，无论其 &lt;code&gt;id&lt;/code&gt; 如何。</target>
        </trans-unit>
        <trans-unit id="888d241fa21d518451d070595340a905c619e2b2" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.activeFocusControl</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.activeFocusControl</target>
        </trans-unit>
        <trans-unit id="1cc95b142b11a5aeb21eb7bedb9aac08fcc1f487" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.contentItem</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.contentItem</target>
        </trans-unit>
        <trans-unit id="89aa83aa2977e2c1cc61c04d32b76a65cc25c987" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.footer</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.footer</target>
        </trans-unit>
        <trans-unit id="dd2a0fbfd577f55dc072597072eb7558116685a3" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.header</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.header</target>
        </trans-unit>
        <trans-unit id="6f988730af7f806beb7f123311d2922a2f18b648" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.menuBar</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.menuBar</target>
        </trans-unit>
        <trans-unit id="ec54ddc1158ba5e16ba27dc0389fde155dd7e8ab" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.window</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.window</target>
        </trans-unit>
        <trans-unit id="6cfde3fcc08dc96da4abd5095a1cd0b4569969a0" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.activeFocusControl</source>
          <target state="translated">ApplicationWindow.activeFocusControl</target>
        </trans-unit>
        <trans-unit id="09fe9cbca9b602e7353c054fc918fa1d4429abbc" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.background</source>
          <target state="translated">ApplicationWindow.background</target>
        </trans-unit>
        <trans-unit id="861ba6559d7bcc0e9a30f2f9165906c7a7260bbe" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.contentData</source>
          <target state="translated">ApplicationWindow.contentData</target>
        </trans-unit>
        <trans-unit id="d692622db50a435b99a17eb17567d54dbad5a58e" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.contentItem</source>
          <target state="translated">ApplicationWindow.contentItem</target>
        </trans-unit>
        <trans-unit id="7383cfc654ff6281b007a4f0bcd4bf368f411cbf" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.font</source>
          <target state="translated">ApplicationWindow.font</target>
        </trans-unit>
        <trans-unit id="6d862d0b9ce6a1725648f04f1f912e049fd5c4b9" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.footer</source>
          <target state="translated">ApplicationWindow.footer</target>
        </trans-unit>
        <trans-unit id="1b9a1ceea5079934160b1f80ca19f833a3c292ac" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.header</source>
          <target state="translated">ApplicationWindow.header</target>
        </trans-unit>
        <trans-unit id="6d15a64960ebc299e13a6f71149ccb206edc6421" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.locale</source>
          <target state="translated">ApplicationWindow.locale</target>
        </trans-unit>
        <trans-unit id="468c197b3f8ebb751e955786acdf2d61664d6feb" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.menuBar</source>
          <target state="translated">ApplicationWindow.menuBar</target>
        </trans-unit>
        <trans-unit id="04b875225bd0bcae0b0d60cee19ec992c976457c" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.palette</source>
          <target state="translated">ApplicationWindow.palette</target>
        </trans-unit>
        <trans-unit id="ad6e44ef2a32b1c37940943d252c5ab781f71c5a" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.statusBar</source>
          <target state="translated">ApplicationWindow.statusBar</target>
        </trans-unit>
        <trans-unit id="c13894c28725e64375ac98bc82fe0581bcfe5748" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.style</source>
          <target state="translated">ApplicationWindow.style</target>
        </trans-unit>
        <trans-unit id="186ff5ca97b7321346cfc2505ec6824e39691249" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.toolBar</source>
          <target state="translated">ApplicationWindow.toolBar</target>
        </trans-unit>
        <trans-unit id="610902bd2173043cf5bf7bc6cecd73bae70b7f4b" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle</source>
          <target state="translated">ApplicationWindowStyle</target>
        </trans-unit>
        <trans-unit id="f08f614ed810905ce69136905eeda68e1bf41ca2" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle (QML type)</source>
          <target state="translated">ApplicationWindowStyle(QML类型)。</target>
        </trans-unit>
        <trans-unit id="6c67eea9c15549344f9926fc2ee453a3bcd0108c" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle QML Type</source>
          <target state="translated">ApplicationWindowStyle QML类型</target>
        </trans-unit>
        <trans-unit id="b5c3c063a4401b0a04c531790dd15dc65222d83d" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle.background</source>
          <target state="translated">ApplicationWindowStyle.background</target>
        </trans-unit>
        <trans-unit id="e8d68389d631dbb69c6e4b41afaa72afe2a65467" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle.control</source>
          <target state="translated">ApplicationWindowStyle.control</target>
        </trans-unit>
        <trans-unit id="67a434eb21e1c7f1252ffeb7632d243814ba65a2" translate="yes" xml:space="preserve">
          <source>Applications can access Qt Sensors using QML or C++.</source>
          <target state="translated">应用程序可以使用QML或C++访问Qt Sensors。</target>
        </trans-unit>
        <trans-unit id="6079d99f066e0baf888f83c2ba22f55f832eb161" translate="yes" xml:space="preserve">
          <source>Applications can also communicate with each other by putting data on the clipboard. To access this, you need to obtain a &lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt; object from the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object.</source>
          <target state="translated">应用程序还可以通过将数据放在剪贴板上来相互通信。要访问它，您需要从&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;对象获取&lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="38d31cb1a98a04153cfdddc87dda3d949e2d73e0" translate="yes" xml:space="preserve">
          <source>Applications can connect to the &lt;a href=&quot;qnearfieldmanager#targetDetected&quot;&gt;targetDetected&lt;/a&gt;() and &lt;a href=&quot;qnearfieldmanager#targetLost&quot;&gt;targetLost&lt;/a&gt;() signals to get notified when an NFC Forum Tag enters or leaves proximity. Before these signals are emitted target detection must be started with the &lt;a href=&quot;qnearfieldmanager#startTargetDetection&quot;&gt;startTargetDetection&lt;/a&gt;() function. Target detection can be stopped with the &lt;a href=&quot;qnearfieldmanager#stopTargetDetection&quot;&gt;stopTargetDetection&lt;/a&gt;() function. Before a detected target can be accessed it is necessary to request access rights. This must be done before the target device is touched. The &lt;a href=&quot;qnearfieldmanager#setTargetAccessModes&quot;&gt;setTargetAccessModes&lt;/a&gt;() function is used to set the types of access the application wants to perform on the detected target. When access is no longer required the target access modes should be set to &lt;a href=&quot;qnearfieldmanager#TargetAccessMode-enum&quot;&gt;NoTargetAccess&lt;/a&gt; as other applications may be blocked from accessing targets. The current target access modes can be retried with the &lt;a href=&quot;qnearfieldmanager#targetAccessModes&quot;&gt;targetAccessModes&lt;/a&gt;() function.</source>
          <target state="translated">应用程序可以连接到&lt;a href=&quot;qnearfieldmanager#targetDetected&quot;&gt;targetDetected&lt;/a&gt;（）和&lt;a href=&quot;qnearfieldmanager#targetLost&quot;&gt;targetLost&lt;/a&gt;（）信号时的NFC论坛标签进入或离开接近得到通知。在发出这些信号之前，必须使用&lt;a href=&quot;qnearfieldmanager#startTargetDetection&quot;&gt;startTargetDetection&lt;/a&gt;（）函数启动目标检测。可以使用&lt;a href=&quot;qnearfieldmanager#stopTargetDetection&quot;&gt;stopTargetDetection&lt;/a&gt;（）函数停止目标检测。在可以访问检测到的目标之前，必须请求访问权限。必须在触摸目标设备之前完成此操作。所述&lt;a href=&quot;qnearfieldmanager#setTargetAccessModes&quot;&gt;setTargetAccessModes&lt;/a&gt;（）函数是用来设置访问的应用程序要对检测到的目标执行的类型。当不再需要访问时，目标访问模式应设置为&lt;a href=&quot;qnearfieldmanager#TargetAccessMode-enum&quot;&gt;NoTargetAccess&lt;/a&gt;因为其他应用程序可能无法访问目标。可以使用&lt;a href=&quot;qnearfieldmanager#targetAccessModes&quot;&gt;targetAccessModes&lt;/a&gt;（）函数重试当前的目标访问模式。</target>
        </trans-unit>
        <trans-unit id="a70d1194e4746360c3ce21e9a8092718d4f4e070" translate="yes" xml:space="preserve">
          <source>Applications can embed a toolbar in the thumbnail of a window, which is shown when hovering over its taskbar icon. A thumbnail toolbar may provide quick access to the commands of a window without requiring the user to restore or activate the window.</source>
          <target state="translated">应用程序可以在窗口的缩略图中嵌入一个工具栏,当鼠标悬停在其任务栏图标上时就会显示该工具栏。缩略图工具栏可以提供对窗口命令的快速访问,而不要求用户恢复或激活窗口。</target>
        </trans-unit>
        <trans-unit id="99dd2c54a9a414c1623cd4cada970a3445e64d09" translate="yes" xml:space="preserve">
          <source>Applications can expose actions, which can be invoked by the client. In order to support actions in an object, inherit the &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;.</source>
          <target state="translated">应用程序可以公开动作，这些动作可以由客户端调用。为了支持对象中的动作，请继承&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d672e8996b07b30355857210c8aef0a1d48da253" translate="yes" xml:space="preserve">
          <source>Applications can prohibit the use of touch events in the following ways:</source>
          <target state="translated">应用程序可以通过以下方式禁止使用触摸事件。</target>
        </trans-unit>
        <trans-unit id="b10a9b5fb0eb3c5c12498c82a7e609551d9488f1" translate="yes" xml:space="preserve">
          <source>Applications can respond to these events to know when the underlying platform surface exists.</source>
          <target state="translated">应用程序可以对这些事件做出响应,以了解底层平台表面何时存在。</target>
        </trans-unit>
        <trans-unit id="f2fe341b33fdce03cda50b78c1577c4129900c8a" translate="yes" xml:space="preserve">
          <source>Applications can share NDEF data or file content using NFC technology by tapping two NFC-enabled devices together. The &lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManager&lt;/a&gt; provides a high level entry point to access this functionality.</source>
          <target state="translated">通过将两个启用NFC的设备放在一起，应用程序可以使用NFC技术共享NDEF数据或文件内容。该&lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManager&lt;/a&gt;提供了一个高层次的切入点访问此功能。</target>
        </trans-unit>
        <trans-unit id="f128ce1e77dfafee662059e671393ea28eec798d" translate="yes" xml:space="preserve">
          <source>Applications can share NDEF data or file content using NFC technology by tapping two NFC-enabled devices together. The QNearFieldShareManager provides a high level entry point to access this functionality.</source>
          <target state="translated">应用程序可以使用NFC技术共享NDEF数据或文件内容,通过点击两个支持NFC的设备。QNearFieldShareManager提供了一个高层次的入口点来访问这个功能。</target>
        </trans-unit>
        <trans-unit id="900064092b3ec48b518040eb62887303671f6908" translate="yes" xml:space="preserve">
          <source>Applications do not have access to system fonts. Font files must be distributed with the application, for example in Qt resources. Qt for WebAssembly itself embeds one such font.</source>
          <target state="translated">应用程序不能访问系统字体。字体文件必须与应用程序一起发布,例如在Qt资源中。Qt for WebAssembly本身就嵌入了一个这样的字体。</target>
        </trans-unit>
        <trans-unit id="3e7eb307dd76707dc438a8e8f259be110fd0f7ef" translate="yes" xml:space="preserve">
          <source>Applications do not need to instantiate this class, but can read the instances pointed to by &lt;a href=&quot;qinputevent#device&quot;&gt;QInputEvent::device&lt;/a&gt;() and &lt;a href=&quot;qinputdevice#devices&quot;&gt;QInputDevice::devices&lt;/a&gt;().</source>
          <target state="translated">应用程序不需要实例化此类，但是可以读取&lt;a href=&quot;qinputevent#device&quot;&gt;QInputEvent :: device&lt;/a&gt;（）和&lt;a href=&quot;qinputdevice#devices&quot;&gt;QInputDevice :: devices&lt;/a&gt;（）指向的实例。</target>
        </trans-unit>
        <trans-unit id="b614e23b443a76e1a13c29fee410cb259b4948c6" translate="yes" xml:space="preserve">
          <source>Applications may choose a specific &lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot;&gt;Android theme&lt;/a&gt; by specifying it in &lt;a href=&quot;https://doc.qt.io/qt-5.13/deployment-android.html#androidmanifest-xml&quot;&gt;AndroidManifest.xml&lt;/a&gt;.</source>
          <target state="translated">应用程序可以通过在&lt;a href=&quot;https://doc.qt.io/qt-5.13/deployment-android.html#androidmanifest-xml&quot;&gt;AndroidManifest.xml中&lt;/a&gt;指定特定的&lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot;&gt;Android主题&lt;/a&gt;来进行选择。</target>
        </trans-unit>
        <trans-unit id="8d808e95c2e096ad2166e6da04a94706a9fd2fdf" translate="yes" xml:space="preserve">
          <source>Applications may choose a specific &lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot;&gt;Android theme&lt;/a&gt; by specifying it in &lt;a href=&quot;https://doc.qt.io/qt-5.15/deployment-android.html#androidmanifest-xml&quot;&gt;AndroidManifest.xml&lt;/a&gt;.</source>
          <target state="translated">应用程序可以通过在&lt;a href=&quot;https://doc.qt.io/qt-5.15/deployment-android.html#androidmanifest-xml&quot;&gt;AndroidManifest.xml中&lt;/a&gt;指定特定的&lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot;&gt;Android主题&lt;/a&gt;来进行选择。</target>
        </trans-unit>
        <trans-unit id="670f4431db3fed86bc7c7375afec7853136f2847" translate="yes" xml:space="preserve">
          <source>Applications may connect to the &lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;() signal in order to receive notifications when a more suitable access point becomes available. In response to this signal the application must either initiate the roaming via &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;() or &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;() the new access point. Once the session has roamed the &lt;a href=&quot;qnetworksession#newConfigurationActivated&quot;&gt;newConfigurationActivated&lt;/a&gt;() signal is emitted. The application may now test the carrier and must either &lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;() or &lt;a href=&quot;qnetworksession#reject&quot;&gt;reject&lt;/a&gt;() it. The session will return to the previous access point if the roaming was rejected. The subsequent state diagram depicts the required state transitions.</source>
          <target state="translated">应用程序可以连接到&lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;（）信号，以便在更合适的访问点可用时接收通知。响应此信号，应用程序必须通过&lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;（）启动漫游或&lt;a href=&quot;qnetworksession#ignore&quot;&gt;忽略&lt;/a&gt;（）新接入点。一旦会话漫游，&lt;a href=&quot;qnetworksession#newConfigurationActivated&quot;&gt;就会&lt;/a&gt;发出newConfigurationActivated（）信号。应用程序现在可以测试载体，并且必须&lt;a href=&quot;qnetworksession#accept&quot;&gt;接受&lt;/a&gt;（）或&lt;a href=&quot;qnetworksession#reject&quot;&gt;拒绝&lt;/a&gt;（）。如果漫游被拒绝，会话将返回到先前的访问点。后续状态图描述了所需的状态转换。</target>
        </trans-unit>
        <trans-unit id="0940283d47a16a6344d8ca45e49cbb8eea19ca4a" translate="yes" xml:space="preserve">
          <source>Applications may use this signal to release resources, but should be prepared to reinstantiated them again fast. The scene graph and the graphics context are not released at this time.</source>
          <target state="translated">应用程序可以使用这个信号来释放资源,但应准备好快速地再次重新实例化它们。此时不释放场景图和图形上下文。</target>
        </trans-unit>
        <trans-unit id="33c10cc2fc1360376d79bd2eb89cacb2d0bb94e4" translate="yes" xml:space="preserve">
          <source>Applications mostly work with device independent pixels. Notable exceptions are OpenGL and code that works with raster graphics.</source>
          <target state="translated">应用程序大多使用独立于设备的像素工作。显著的例外是OpenGL和使用光栅图形的代码。</target>
        </trans-unit>
        <trans-unit id="0aa1eb877fb0a208fad515b23788ec731ad9384c" translate="yes" xml:space="preserve">
          <source>Applications must adapt to situations where users have multiple displays with varying resolution. For example, they might use a 4K monitor for the document window of an image editor and a low resolution monitor for the tool box.</source>
          <target state="translated">应用程序必须适应用户使用不同分辨率的多个显示器的情况。例如,他们可能会在图像编辑器的文档窗口中使用4K显示器,而在工具箱中使用低分辨率显示器。</target>
        </trans-unit>
        <trans-unit id="bbff14fdf9952d9d1de0b5b17d977cd90f60a7ff" translate="yes" xml:space="preserve">
          <source>Applications run in fullscreen mode only (see &lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt;). On desktop, the screen size varies as the application is resized.</source>
          <target state="translated">应用程序仅在全屏模式下运行（请参阅&lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt;）。在台式机上，屏幕尺寸随应用程序调整大小而变化。</target>
        </trans-unit>
        <trans-unit id="9e624b3f0c05be2a737d939d1b457fea3542a177" translate="yes" xml:space="preserve">
          <source>Applications should act on this signal at their own discretion. The data provided by the model could be out of date and so the model should be reupdated sometime, however an immediate reupdate may be disconcerting to users if the categories change without any action on their part.</source>
          <target state="translated">应用程序应自行决定是否对该信号采取行动。模型提供的数据可能已经过时,因此模型应该在某个时候重新更新,但是如果类别在没有任何行动的情况下发生变化,立即重新更新可能会让用户感到不安。</target>
        </trans-unit>
        <trans-unit id="b4283087e120f502c2fff9fbb65d942153b802b3" translate="yes" xml:space="preserve">
          <source>Applications should check this property to determine whether positioning is available and enabled on the runtime platform, and react accordingly.</source>
          <target state="translated">应用程序应检查该属性,以确定在运行时平台上是否可以使用和启用定位,并做出相应的反应。</target>
        </trans-unit>
        <trans-unit id="45e84f9b49f31ef4ca100c7417ad56468763e5e9" translate="yes" xml:space="preserve">
          <source>Applications should connect to this signal if they wish to handle errors, like OpenGL context creation failures, in a custom way. When no slot is connected to the signal, the behavior will be different: Quick will print the</source>
          <target state="translated">如果应用程序希望以自定义方式处理错误(如OpenGL上下文创建失败),则应连接到该信号。当没有插槽连接到该信号时,行为将有所不同。Quick将打印</target>
        </trans-unit>
        <trans-unit id="1d4348998c86ba193bc58a864ecaa92bbe12d6a7" translate="yes" xml:space="preserve">
          <source>Applications should connect to this signal if they wish to handle errors, like graphics context creation failures, in a custom way. When no slot is connected to the signal, the behavior will be different: Quick will print the</source>
          <target state="translated">如果应用程序希望以自定义的方式处理错误,如图形上下文创建失败,则应连接到该信号。当没有插槽连接到信号时,行为将是不同的。Quick将打印</target>
        </trans-unit>
        <trans-unit id="1be63e02443edb75de24d5a1d221f77a1dfd6f7d" translate="yes" xml:space="preserve">
          <source>Applications should not exit programmatically. In particular, calling exit() before the UI is shown causes a crash.</source>
          <target state="translated">应用程序不应该以程序方式退出。尤其是在UI显示之前调用exit()会导致崩溃。</target>
        </trans-unit>
        <trans-unit id="078f11fb40841f98a21ebbc9f244eee4d9ec8068" translate="yes" xml:space="preserve">
          <source>Applications should only use further values if a corresponding specification has been published, otherwise interpretation and validation by the remote may fail. Values 24 to 31 are reserved and must not be used.</source>
          <target state="translated">只有在相应的规范已经发布的情况下,应用程序才能使用更多的值,否则远程的解释和验证可能会失败。值24至31为保留值,不得使用。</target>
        </trans-unit>
        <trans-unit id="b9e0d4410ba26ad8270df753b5bd3ada94b1aba4" translate="yes" xml:space="preserve">
          <source>Applications should use the Asynchronous incubation mode to create objects that are not needed immediately. For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; type uses Asynchronous incubation to create objects that are slightly off screen while the list is being scrolled. If, during asynchronous creation, the object is needed immediately the &lt;a href=&quot;qqmlincubator#forceCompletion&quot;&gt;QQmlIncubator::forceCompletion&lt;/a&gt;() method can be called to complete the creation process synchronously.</source>
          <target state="translated">应用程序应使用&amp;ldquo;异步孵化&amp;rdquo;模式来创建不需要立即使用的对象。例如，&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;类型使用异步孵化来创建在滚动列表时稍微偏离屏幕的对象。如果在异步创建过程中立即需要该对象，则可以调用&lt;a href=&quot;qqmlincubator#forceCompletion&quot;&gt;QQmlIncubator :: forceCompletion&lt;/a&gt;（）方法来同步完成创建过程。</target>
        </trans-unit>
        <trans-unit id="2cbec31f7dd373771a9c631da6a9a11a1d574189" translate="yes" xml:space="preserve">
          <source>Applications submitted to the App Store must be code-signed with the App Sandbox feature enabled. The App Sandbox feature interferes with Chromium's own sandbox initialization, which results in Chromium not being properly initialized. This also ties in with the private API usage. Furthermore, standalone Chromium itself is not officially tested with the App Sandbox enabled, and even if work is done to bypass the App Store's restrictions, that would not guarantee correct behavior of the library.</source>
          <target state="translated">提交到App Store的应用必须在启用App沙盒功能的情况下进行代码签名。App Sandbox功能会干扰Chromium自身的沙盒初始化,导致Chromium无法正确初始化。这也与私有API的使用有关。此外,独立的Chromium本身并没有在启用App Sandbox的情况下进行官方测试,即使工作绕过App Store的限制,也不能保证库的行为正确。</target>
        </trans-unit>
        <trans-unit id="f6faacfc5e90f64efaa80b1c66302fad7fd5e6e6" translate="yes" xml:space="preserve">
          <source>Applications that define &lt;a href=&quot;qstring#QT_NO_CAST_FROM_ASCII&quot;&gt;QT_NO_CAST_FROM_ASCII&lt;/a&gt; (as explained in the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; documentation) don't have access to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;'s &lt;code&gt;const char *&lt;/code&gt; API. To provide an efficient way of specifying constant Latin-1 strings, Qt provides the QLatin1String, which is just a very thin wrapper around a &lt;code&gt;const char *&lt;/code&gt;. Using QLatin1String, the example code above becomes</source>
          <target state="translated">定义&lt;a href=&quot;qstring#QT_NO_CAST_FROM_ASCII&quot;&gt;QT_NO_CAST_FROM_ASCII的&lt;/a&gt;应用程序（如&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;文档中所述）无法访问&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;的 &lt;code&gt;const char *&lt;/code&gt; API。为了提供一种有效的方式来指定常量Latin-1字符串，Qt提供了QLatin1String，它只是 &lt;code&gt;const char *&lt;/code&gt; 的一个非常薄的包装器。使用QLatin1String，上面的示例代码变为</target>
        </trans-unit>
        <trans-unit id="8b3f209f93d2eeb87b946ddc82a7bd59829a0509" translate="yes" xml:space="preserve">
          <source>Applications that define &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; (as explained in the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; documentation) don't have access to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;'s &lt;code&gt;const char *&lt;/code&gt; API. To provide an efficient way of specifying constant Latin-1 strings, Qt provides the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;, which is just a very thin wrapper around a &lt;code&gt;const char *&lt;/code&gt;. Using &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;, the example code above becomes</source>
          <target state="translated">定义 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 的应用程序（如&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;文档中所述）无法访问&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;的 &lt;code&gt;const char *&lt;/code&gt; API。为了提供一种指定常量Latin-1字符串的有效方法，Qt提供了&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;，它只是 &lt;code&gt;const char *&lt;/code&gt; 的非常薄的包装。使用&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;，上面的示例代码变为</target>
        </trans-unit>
        <trans-unit id="9d1d90d59feb0b653df9ec9417b8b0d712306193" translate="yes" xml:space="preserve">
          <source>Applications that define &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; (as explained in the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; documentation) don't have access to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;'s &lt;code&gt;const char *&lt;/code&gt; API. To provide an efficient way of specifying constant Latin-1 strings, Qt provides the QLatin1String, which is just a very thin wrapper around a &lt;code&gt;const char *&lt;/code&gt;. Using QLatin1String, the example code above becomes</source>
          <target state="translated">定义 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 的应用程序（如&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;文档中所述）无法访问&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;的 &lt;code&gt;const char *&lt;/code&gt; API。为了提供一种有效的方式来指定常量Latin-1字符串，Qt提供了QLatin1String，它只是 &lt;code&gt;const char *&lt;/code&gt; 的一个非常薄的包装器。使用QLatin1String，上面的示例代码变为</target>
        </trans-unit>
        <trans-unit id="8b9abdc603ec5011f6e5179220d8a92a0231a36a" translate="yes" xml:space="preserve">
          <source>Applications that rely on certain reference stability might run into undefined behavior when upgraded to use Qt 6. You should pay extra attention to cases where &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; with a non C-compatible array layout were used originally.</source>
          <target state="translated">依赖某些参考稳定性的应用程序在升级为使用Qt 6时可能会出现不确定的行为。您应该特别注意&lt;a href=&quot;qvector&quot;&gt;最初&lt;/a&gt;使用具有非C兼容数组布局的QVector或&lt;a href=&quot;qlist&quot;&gt;QList的&lt;/a&gt;情况。</target>
        </trans-unit>
        <trans-unit id="e3730dd0b0eedc7b541372ab0bf269065e8298df" translate="yes" xml:space="preserve">
          <source>Applications that require &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; not to fall back to non-cryptographic quality generators are advised to check their operating system documentation or restrict their deployment to one of the above.</source>
          <target state="translated">建议要求&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;不退回非加密质量生成器的应用程序检查其操作系统文档或将其部署限制为上述之一。</target>
        </trans-unit>
        <trans-unit id="1c91583f184f4d0f902b15a9ce3990a4a91e7d44" translate="yes" xml:space="preserve">
          <source>Applications that require QRandomGenerator not to fall back to non-cryptographic quality generators are advised to check their operating system documentation or restrict their deployment to one of the above.</source>
          <target state="translated">需要QRandomGenerator不回落到非加密质量生成器的应用程序,建议检查其操作系统文档或限制其部署到上述之一。</target>
        </trans-unit>
        <trans-unit id="c6531ae459350b8ecff786216e687c7dcb521e06" translate="yes" xml:space="preserve">
          <source>Applications that require a certain OpenGL implementation (for example, desktop OpenGL due to relying on features provided by OpenGL 3.0 or higher) should set the application attributes &lt;code&gt;Qt::AA_UseOpenGLES&lt;/code&gt; or &lt;code&gt;Qt::AA_UseDesktopOpenGL&lt;/code&gt; before instantiating &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; or &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. When these attributes are set, no other OpenGL implementations are considered. Additionally, if they wish to, such applications are free to make direct OpenGL function calls by adding opengl32.lib to their .pro project files:</source>
          <target state="translated">需要特定OpenGL实现的应用程序（例如，由于依赖OpenGL 3.0或更高版本提供的功能而导致的桌面OpenGL）应在实例化&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;或&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;之前设置应用程序属性 &lt;code&gt;Qt::AA_UseOpenGLES&lt;/code&gt; 或 &lt;code&gt;Qt::AA_UseDesktopOpenGL&lt;/code&gt; 。设置这些属性后，将不考虑其他OpenGL实现。此外，如果他们愿意，可以通过将opengl32.lib添加到他们的.pro项目文件中来自由地进行直接OpenGL函数调用：</target>
        </trans-unit>
        <trans-unit id="073297d1e5bdb771ff14f2cc14a050dd7dfb9317" translate="yes" xml:space="preserve">
          <source>Applications typically subclass both &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; and &lt;a href=&quot;qvulkanwindowrenderer&quot;&gt;QVulkanWindowRenderer&lt;/a&gt;. The former allows handling events, for example, input, while the latter allows implementing the Vulkan resource management and command buffer building that make up the application's rendering.</source>
          <target state="translated">应用程序通常同时&lt;a href=&quot;qvulkanwindow&quot;&gt;继承QVulkanWindow&lt;/a&gt;和&lt;a href=&quot;qvulkanwindowrenderer&quot;&gt;QVulkanWindowRenderer&lt;/a&gt;。前者允许处理事件（例如，输入），而后者则允许实现构成应用程序渲染的Vulkan资源管理和命令缓冲区构建。</target>
        </trans-unit>
        <trans-unit id="b7f05deebe9bb637822744a5b69bc5080e3f22dd" translate="yes" xml:space="preserve">
          <source>Applications typically subclass both &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; and QVulkanWindowRenderer. The former allows handling events, for example, input, while the latter allows implementing the Vulkan resource management and command buffer building that make up the application's rendering.</source>
          <target state="translated">应用程序通常同时将&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;和QVulkanWindowRenderer子类化。前者允许处理事件（例如，输入），而后者允许实现构成应用程序渲染的Vulkan资源管理和命令缓冲区构建。</target>
        </trans-unit>
        <trans-unit id="5dbb644ec321c502bbcdb383add66b0077763218" translate="yes" xml:space="preserve">
          <source>Applications using Qt WebEngine are not compatible with the Mac App Store, because:</source>
          <target state="translated">使用Qt WebEngine的应用程序与Mac App Store不兼容,因为。</target>
        </trans-unit>
        <trans-unit id="47ddb28194a7d5e0a4f541b14d76165df576b59a" translate="yes" xml:space="preserve">
          <source>Applications using Qt XML Patterns are subject to the same limitations of software as other systems. Generally, these can not be checked. This means Qt XML Patterns does not prevent rogue queries from consuming too many resources. For example, a query could take too much time to execute or try to transfer too much data. A query could also do too much recursion, which could crash the system. XQueries can do these things accidentally, but they can also be done as deliberate denial of service attacks.</source>
          <target state="translated">使用Qt XML Patterns的应用程序与其他系统一样,受到软件的限制。一般来说,这些都是无法检查的。这意味着Qt XML Patterns不能防止流氓查询消耗太多资源。例如,一个查询可能需要花费太多时间来执行,或者试图传输太多数据。一个查询也可能做太多的递归,从而导致系统崩溃。XQueries可以不小心做这些事情,但也可以作为故意的拒绝服务攻击。</target>
        </trans-unit>
        <trans-unit id="e2a5a2d4c29949b7fe6ee2de6905bb4ee56ab2aa" translate="yes" xml:space="preserve">
          <source>Applications using UI designs with fixed coordinates look small. The combination of font size specification in points and other sizes in pixels is particularly problematic since points are independent of the monitor resolution. For example, a frame of 40x20 pixels around the text &quot;hello&quot; using a 12pt font looks correct on low resolution monitors, but the frame will be too small on high DPI monitors, causing the text to be clipped.</source>
          <target state="translated">使用固定坐标的UI设计的应用程序看起来很小。以点为单位的字体大小规格和以像素为单位的其他大小规格的结合是特别有问题的,因为点与显示器的分辨率无关。例如,使用12pt字体的文本 &quot;hello &quot;周围40x20像素的框架在低分辨率显示器上看起来是正确的,但在高DPI显示器上框架会太小,导致文本被剪切。</target>
        </trans-unit>
        <trans-unit id="380bc95783790db84b1676f9fd59fcdb97de0dd1" translate="yes" xml:space="preserve">
          <source>Applications which uses the &lt;a href=&quot;qml-qtpurchasing-store#restorePurchases-method&quot;&gt;restorePurchases()&lt;/a&gt; function should include this handler in all unlockable products. In the handler, the application should make sure information about the purchase is stored and call &lt;a href=&quot;qml-qtpurchasing-transaction#finalize-method&quot;&gt;finalize()&lt;/a&gt; on the</source>
          <target state="translated">使用&lt;a href=&quot;qml-qtpurchasing-store#restorePurchases-method&quot;&gt;restorePurchases（）&lt;/a&gt;函数的应用程序应在所有可解锁产品中包括此处理程序。在处理程序中，应用程序应确保存储有关购买的信息，并在上调用&lt;a href=&quot;qml-qtpurchasing-transaction#finalize-method&quot;&gt;finalize（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0521744f52d365e3307bd93bcc82758be330e281" translate="yes" xml:space="preserve">
          <source>Applications which want to define custom MIME types need to install an XML file into the locations searched for MIME definitions. These locations can be queried with</source>
          <target state="translated">想要定义自定义MIME类型的应用程序需要在搜索MIME定义的位置安装一个XML文件。这些位置可以用</target>
        </trans-unit>
        <trans-unit id="643c58c67234f5f4367ed166266328a7e31f29f5" translate="yes" xml:space="preserve">
          <source>Applications will usually have to connect to 4 important signals:</source>
          <target state="translated">应用程序通常要连接到4个重要信号。</target>
        </trans-unit>
        <trans-unit id="0711de7e63fd4cf8f347d6cb036f7d714a9cf56d" translate="yes" xml:space="preserve">
          <source>Applications wishing to always run with a single given graphics API can request this via the &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; enivronment variable, as well as with C++. For example, the following call made early in &lt;code&gt;main()&lt;/code&gt;, before constructing any &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;, forces the use of Vulkan (and will fail otherwise).</source>
          <target state="translated">希望始终使用单个给定图形API运行的应用程序可以通过 &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; 环境变量以及C ++进行请求。例如，在构造任何&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;之前，在 &lt;code&gt;main()&lt;/code&gt; 的早期进行的以下调用将强制使用Vulkan（否则将失败）。</target>
        </trans-unit>
        <trans-unit id="babf61dac57128eb981dbafd32df81d9ad51d6ff" translate="yes" xml:space="preserve">
          <source>Applications wishing to always run with a single given graphics API, can request this via C++ as well. For example, the following call made early in main(), before constructing any &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;, forces the use of Vulkan (and will fail otherwise):</source>
          <target state="translated">希望始终使用单个给定的图形API运行的应用程序也可以通过C ++进行请求。例如，在构造任何&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;之前，在main（）的早期进行的以下调用将强制使用Vulkan（否则将失败）：</target>
        </trans-unit>
        <trans-unit id="2e4324a610ae8da50df3c610e78aa18db2c97ff1" translate="yes" xml:space="preserve">
          <source>Applications wishing to always run with a single given graphics API, can request this via C++ as well. For example, the following call made early in main(), before constructing any &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;, forces the use of Vulkan (and will fail otherwise);</source>
          <target state="translated">希望始终使用单个给定的图形API运行的应用程序也可以通过C ++进行请求。例如，在构造任何&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;之前，在main（）的早期进行的以下调用将强制使用Vulkan（否则将失败）；否则，将强制使用Vulkan。</target>
        </trans-unit>
        <trans-unit id="b35b605509788df3a9d880763122cf2f62fc55a4" translate="yes" xml:space="preserve">
          <source>Applications with a monochrome background should set it using &lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow::setColor&lt;/a&gt;() rather than using a top-level Rectangle item. &lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow::setColor&lt;/a&gt;() will be used in a call to &lt;code&gt;glClear()&lt;/code&gt;, which is potentially faster.</source>
          <target state="translated">具有单色背景的应用程序应使用&lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow :: setColor&lt;/a&gt;（）进行设置，而不是使用顶级Rectangle项。&lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow :: setColor&lt;/a&gt;（）将在对 &lt;code&gt;glClear()&lt;/code&gt; 的调用中使用，这可能会更快。</target>
        </trans-unit>
        <trans-unit id="438d6d1831736d014296c8d54a1b862dfdba748d" translate="yes" xml:space="preserve">
          <source>ApplicationsLocation</source>
          <target state="translated">ApplicationsLocation</target>
        </trans-unit>
        <trans-unit id="1d46e73504253261f8b269d5dbc0432ad20874f5" translate="yes" xml:space="preserve">
          <source>Applies</source>
          <target state="translated">Applies</target>
        </trans-unit>
        <trans-unit id="866badc20ca4d7b59d2c8e8252dd02e41bd75f15" translate="yes" xml:space="preserve">
          <source>Applies a blur effect with a varying intesity</source>
          <target state="translated">应用不同强度的模糊效果。</target>
        </trans-unit>
        <trans-unit id="4fd15aa7f69872ceb66c170f8b521a185f792fdf" translate="yes" xml:space="preserve">
          <source>Applies a blur effect with a varying intesity. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">应用具有不同强度的模糊效果。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c0dc4a3e6cf0dcbfd303c3f99a11aa53a0dbcac" translate="yes" xml:space="preserve">
          <source>Applies a change to the document. This function must be implemented in the derived class. Calling &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;(), &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack::undo&lt;/a&gt;() or &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack::redo&lt;/a&gt;() from this function leads to undefined beahavior.</source>
          <target state="translated">将更改应用于文档。此函数必须在派生类中实现。&lt;a href=&quot;qundostack#push&quot;&gt;从此函数&lt;/a&gt;调用QUndoStack :: push（），&lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack :: undo&lt;/a&gt;（）或&lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack :: redo&lt;/a&gt;（）会导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="130096e9d49176b1a46e06394e6e99004a4b027a" translate="yes" xml:space="preserve">
          <source>Applies a fast blur effect to one or more source items</source>
          <target state="translated">对一个或多个源项目应用快速模糊效果。</target>
        </trans-unit>
        <trans-unit id="35a1caff37bd4683d67fb3d65b6b7d00af7d5f9c" translate="yes" xml:space="preserve">
          <source>Applies a fast blur effect to one or more source items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">对一个或多个源项目应用快速模糊效果。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ae4ebb1121d0eab057488fbbc33a0f69f24b70d" translate="yes" xml:space="preserve">
          <source>Applies a higher quality blur effect</source>
          <target state="translated">应用更高质量的模糊效果</target>
        </trans-unit>
        <trans-unit id="ea65603eef710f0893a7d775de55f9147e6d4996" translate="yes" xml:space="preserve">
          <source>Applies a higher quality blur effect. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">应用更高质量的模糊效果。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f684381c852d2c9db98d6a25eff451aee18f09a" translate="yes" xml:space="preserve">
          <source>Applies alterations to the attributes of logical particles at any point in their lifetime. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">在生命周期的任何时候对逻辑粒子的属性进行更改。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a0f1851b37b25fc017626674dee0c14196cf6a0" translate="yes" xml:space="preserve">
          <source>Applies blur effect to the specified direction</source>
          <target state="translated">将模糊效果应用于指定的方向。</target>
        </trans-unit>
        <trans-unit id="e9fb2d57667df6bf937b731698c98a99872d16a5" translate="yes" xml:space="preserve">
          <source>Applies blur effect to the specified direction. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">将模糊效果应用于指定方向。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2375a9296e06ee3ef9a341df4824e9ae9faba052" translate="yes" xml:space="preserve">
          <source>Applies custom shaders to a rectangle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">将自定义着色器应用于矩形。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f701de2b3385c7371ffd9cb491289012e2f92ee9" translate="yes" xml:space="preserve">
          <source>Applies directional blur effect towards source items center point</source>
          <target state="translated">将方向性的模糊效果应用于源项目的中心点。</target>
        </trans-unit>
        <trans-unit id="3d53a560cc390357ae0e7ff09ee2b4afad91fcfd" translate="yes" xml:space="preserve">
          <source>Applies directional blur effect towards source items center point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">对源项目的中心点应用方向性模糊效果。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0375ce8613278b8810ba2dd94f90724c703fbb59" translate="yes" xml:space="preserve">
          <source>Applies directional blur in a circular direction around the items center point</source>
          <target state="translated">以物品中心点为中心,沿圆周方向进行方向性模糊。</target>
        </trans-unit>
        <trans-unit id="976ce34010e87136dba4df813878be42eed3763c" translate="yes" xml:space="preserve">
          <source>Applies directional blur in a circular direction around the items center point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">在项目中心点周围沿圆形方向应用方向性模糊。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b54e2077e74673a2d0dc0953d8710eaa1e87ffdc" translate="yes" xml:space="preserve">
          <source>Applies only to axes that support minor grid lines.</source>
          <target state="translated">仅适用于支持小网格线的轴。</target>
        </trans-unit>
        <trans-unit id="277870d1f2dd450ab431f72aad0ac4d9b775c11c" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#intersected&quot;&gt;intersected&lt;/a&gt;() function to this region and</source>
          <target state="translated">将&lt;a href=&quot;qregion#intersected&quot;&gt;相交&lt;/a&gt;（）函数应用于此区域，并</target>
        </trans-unit>
        <trans-unit id="85f9bb66b0d768a797a0cbe1dd827879ca63fe9a" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#subtracted&quot;&gt;subtracted&lt;/a&gt;() function to this region and</source>
          <target state="translated">将&lt;a href=&quot;qregion#subtracted&quot;&gt;减法&lt;/a&gt;（）函数应用于此区域，然后</target>
        </trans-unit>
        <trans-unit id="c9e444215913626b026e8a170e34d8527f76b5dc" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#united&quot;&gt;united&lt;/a&gt;() function to this region and</source>
          <target state="translated">将&lt;a href=&quot;qregion#united&quot;&gt;united&lt;/a&gt;（）函数应用于此区域，并</target>
        </trans-unit>
        <trans-unit id="9743edf949aafc1468bf758297f81e0fb0c8a64f" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#xored&quot;&gt;xored&lt;/a&gt;() function to this region and</source>
          <target state="translated">将&lt;a href=&quot;qregion#xored&quot;&gt;xored&lt;/a&gt;（）函数应用于此区域，然后</target>
        </trans-unit>
        <trans-unit id="cef16531f6c2160848c6a1494a7cbd190894a001" translate="yes" xml:space="preserve">
          <source>Applies the color transformation</source>
          <target state="translated">应用颜色转换</target>
        </trans-unit>
        <trans-unit id="753464780ddf2c6825acd60178943280e96d1b75" translate="yes" xml:space="preserve">
          <source>Applies the color transformation on the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; value</source>
          <target state="translated">将颜色转换应用于&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="7c0dcb37ae44ee69fd69efc0bf56c630c3eed748" translate="yes" xml:space="preserve">
          <source>Applies the color transformation on the &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value</source>
          <target state="translated">将颜色转换应用于&lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="4c5834df3cd118d6b9c5a7910f67a66ef399297a" translate="yes" xml:space="preserve">
          <source>Applies the color transformation on the &lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; value</source>
          <target state="translated">将颜色转换应用于&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="88c849d9dd2f98b402af18dbc16b9606bda5c474" translate="yes" xml:space="preserve">
          <source>Applies the selection</source>
          <target state="translated">应用选择</target>
        </trans-unit>
        <trans-unit id="3e9dec7a713118d0fe5ca4145b6a21f722bf2476" translate="yes" xml:space="preserve">
          <source>Applies to back faces only</source>
          <target state="translated">仅适用于背面</target>
        </trans-unit>
        <trans-unit id="fbc53c7806ce9f153b11dc54d231549a4c66e5df" translate="yes" xml:space="preserve">
          <source>Applies to front and back faces</source>
          <target state="translated">适用于正面和背面</target>
        </trans-unit>
        <trans-unit id="67fcbacb3275d7f52800551c1d2d7bad6ccf9f66" translate="yes" xml:space="preserve">
          <source>Applies to front faces only</source>
          <target state="translated">仅适用于正面</target>
        </trans-unit>
        <trans-unit id="cfea419c3b4e8b02ee586e70a28bf846e44cdda4" translate="yes" xml:space="preserve">
          <source>Apply</source>
          <target state="translated">Apply</target>
        </trans-unit>
        <trans-unit id="124d154be5d93423a75f4602bfc8a159c416aeb0" translate="yes" xml:space="preserve">
          <source>Apply Location, Rotation, and Scale</source>
          <target state="translated">应用位置、旋转和比例</target>
        </trans-unit>
        <trans-unit id="16711b6efd8ea96c8782439f671909aa55f27759" translate="yes" xml:space="preserve">
          <source>Apply all automatic formatting. Currently only automatic bullet lists are supported.</source>
          <target state="translated">应用所有自动格式化。目前只支持自动子弹列表。</target>
        </trans-unit>
        <trans-unit id="8f05fa95714c5c89e20a4978d13028c3da7f56c4" translate="yes" xml:space="preserve">
          <source>Apply an adjustable bloom effect to very bright areas (like the sun glinting off a car).</source>
          <target state="translated">在非常明亮的区域应用可调节的绽放效果(如汽车上闪烁的太阳)。</target>
        </trans-unit>
        <trans-unit id="9502ac0373000c8701724e89336c56dd0f6df065" translate="yes" xml:space="preserve">
          <source>Apply this macro to declarations of member functions to allow them to be invoked via the meta-object system. The macro is written before the return type, as shown in the following example:</source>
          <target state="translated">将此宏应用于成员函数的声明中,使其能够通过元对象系统被调用。该宏写在返回类型之前,如下例所示。</target>
        </trans-unit>
        <trans-unit id="4cbb382a462106b7b4d33047fe5aaa2c87a3481f" translate="yes" xml:space="preserve">
          <source>Apply this macro to declarations of member functions to tag them with a revision number in the meta-object system. The macro is written before the return type, as shown in the following example:</source>
          <target state="translated">将此宏应用于成员函数的声明中,在元对象系统中为其标注一个修订号。该宏写在返回类型之前,如下例所示。</target>
        </trans-unit>
        <trans-unit id="fa0d8b3d88dd6fa3a35289a463840d4c4508d5d0" translate="yes" xml:space="preserve">
          <source>Applying an adjustable bloom effect to bright areas (like the sun glinting off a car).</source>
          <target state="translated">将可调节的绽放效果应用到明亮的区域(如汽车上闪烁的太阳)。</target>
        </trans-unit>
        <trans-unit id="476a543e021c8a81c9d9ab17f8fe1dd834f78c91" translate="yes" xml:space="preserve">
          <source>Applying mirroring in this manner does not change the actual value of the relevant anchor, &lt;code&gt;layoutDirection&lt;/code&gt; or &lt;code&gt;horizontalAlignment&lt;/code&gt; properties. The separate read-only property &lt;code&gt;effectiveLayoutDirection&lt;/code&gt; can be used to query the effective layout direction of positioners and model views that takes the mirroring into account. Similarly the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; types have gained the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; for querying the effective visual alignment of text. For anchors, the read only &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.mirrored&lt;/a&gt; property reflects whether anchors have been mirrored.</source>
          <target state="translated">以这种方式应用镜像不会更改相关锚， &lt;code&gt;layoutDirection&lt;/code&gt; 或 &lt;code&gt;horizontalAlignment&lt;/code&gt; 属性的实际值。单独的只读属性 &lt;code&gt;effectiveLayoutDirection&lt;/code&gt; 可用于查询考虑了镜像的定位器和模型视图的有效布局方向。类似地，&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;类型获得了只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 用于查询文本的有效视觉对齐方式。对于锚点，只读的&lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.mirrored&lt;/a&gt;属性反映锚点是否已镜像。</target>
        </trans-unit>
        <trans-unit id="fba446e866948fe090bc99358baa64d4a742d932" translate="yes" xml:space="preserve">
          <source>Applying the &lt;code&gt;[1]&lt;/code&gt; filter to the &lt;code&gt;/span&lt;/code&gt; step returns the first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element of each &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">将 &lt;code&gt;[1]&lt;/code&gt; 过滤器应用于 &lt;code&gt;/span&lt;/code&gt; 步骤，将返回每个 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素的第一个 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &amp;gt;元素：</target>
        </trans-unit>
        <trans-unit id="0fb430ba25263f888bcf3248bc77f0367ac365c1" translate="yes" xml:space="preserve">
          <source>Applying transform values resets the object's location, rotation, and scale values. Location and rotation values are changed to 0 while scale values are changed to 1. The object itself does not visually change.</source>
          <target state="translated">应用变换值会重置对象的位置、旋转和比例值。 位置和旋转值为0,比例值为1。位置和旋转值变为 0,而比例尺值变为 1,但对象本身不会发生视觉变化。</target>
        </trans-unit>
        <trans-unit id="451cefdac5dd0124a1e28cab04fd9c1054424a49" translate="yes" xml:space="preserve">
          <source>Approaches to Binding Values</source>
          <target state="translated">约束值的方法</target>
        </trans-unit>
        <trans-unit id="69be4bf88eeab6713e92fc9f8e3d6d37f1982528" translate="yes" xml:space="preserve">
          <source>April (3)</source>
          <target state="translated">4月(3)</target>
        </trans-unit>
        <trans-unit id="644abaa7258ab02f926a338360e1d1d6895f953c" translate="yes" xml:space="preserve">
          <source>Aqua</source>
          <target state="translated">Aqua</target>
        </trans-unit>
        <trans-unit id="2d91dd4d3929f64eb1b05b72cf83115c9f95c550" translate="yes" xml:space="preserve">
          <source>Aqua is an essential part of the macOS platform. As with Cocoa and Carbon, Qt provides widgets that look like those described in the Human Interface Descriptions. Qt's widgets use HIThemes to implement the look and feel. In other words, we use Apple's own APIs for doing the rendering. More documentation about Aqua is found at the macOS Human Interface Guidelines.</source>
          <target state="translated">Aqua是macOS平台的重要组成部分。与Cocoa和Carbon一样,Qt提供的widget看起来就像人机界面描述中描述的那样。Qt的widget使用HIThemes来实现这些外观和感觉。换句话说,我们使用苹果自己的API来进行渲染。更多关于Aqua的文档可以在macOS人机界面指南中找到。</target>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="d5c9a17b4395c52e43c58e3f041e32d12c8e4497" translate="yes" xml:space="preserve">
          <source>Arabic Layout</source>
          <target state="translated">阿拉伯语布局</target>
        </trans-unit>
        <trans-unit id="4c41d518fdc3d17322018b87c66d135e50d626a1" translate="yes" xml:space="preserve">
          <source>Arabic input mode.</source>
          <target state="translated">阿拉伯语输入模式。</target>
        </trans-unit>
        <trans-unit id="a1fff8708561b49f1a3307ef00025f8d5b7fb8e3" translate="yes" xml:space="preserve">
          <source>Arbitrary data can be represented as properties on the &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; subclass and on the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; instances passed to its signals. What exactly these properties and signals are, is up to the individual video filters. Completion of the operations can be indicated by signals. Computations that do not result in a modified image will pass the input image through so that subsequent filters can be placed after them.</source>
          <target state="translated">可以将任意数据表示为&lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt;子类以及传递给其信号的&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;或&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;实例上的属性。这些属性和信号究竟是什么，取决于各个视频滤波器。操作的完成可以通过信号指示。不会导致图像修改的计算将使输入图像通过，以便可以将后续过滤器放置在它们之后。</target>
        </trans-unit>
        <trans-unit id="3067ac0b4e28e4267b730ff7b4cc2aa510ccd43d" translate="yes" xml:space="preserve">
          <source>Arbitrary data can be represented as properties on the QAbstractVideoFilter subclass and on the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; instances passed to its signals. What exactly these properties and signals are, is up to the individual video filters. Completion of the operations can be indicated by signals. Computations that do not result in a modified image will pass the input image through so that subsequent filters can be placed after them.</source>
          <target state="translated">可以将任意数据表示为QAbstractVideoFilter子类以及传递给其信号的&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;或&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;实例上的属性。这些属性和信号究竟是什么，取决于各个视频滤波器。操作的完成可以通过信号指示。不会导致图像修改的计算将使输入图像通过，以便可以将后续滤镜放置在它们之后。</target>
        </trans-unit>
        <trans-unit id="fa2701072f67f3cbdf7c24b7d3d52105f4ae3ff2" translate="yes" xml:space="preserve">
          <source>Arbitrary simple values</source>
          <target state="translated">任意简单值</target>
        </trans-unit>
        <trans-unit id="479ffb29f16c0d45fca6818b1d1543d24f691407" translate="yes" xml:space="preserve">
          <source>ArchData</source>
          <target state="translated">ArchData</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="a10f3b5aa08c9646632d8e35bf3374804be6df80" translate="yes" xml:space="preserve">
          <source>Architectures</source>
          <target state="translated">Architectures</target>
        </trans-unit>
        <trans-unit id="2745debaa64a20eedb49d9f14a0b807c87aa2d2a" translate="yes" xml:space="preserve">
          <source>Area</source>
          <target state="translated">Area</target>
        </trans-unit>
        <trans-unit id="535b9a2f1700c0937442185b5600be479b6a9cf4" translate="yes" xml:space="preserve">
          <source>Area containing the label (icon with text or pixmap).</source>
          <target state="translated">含有标签的区域(带有文字或像素图的图标)。</target>
        </trans-unit>
        <trans-unit id="3ec6abab8a9a760983d28530991e834f769f7923" translate="yes" xml:space="preserve">
          <source>Area for a frame's contents using the shape in &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt;; see &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame中&lt;/a&gt;的形状的框架内容区域；参见&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd1fe1ed390abf0c32ec5cff51aefc721d0619c" translate="yes" xml:space="preserve">
          <source>Area for a frame's contents.</source>
          <target state="translated">框架内容的区域。</target>
        </trans-unit>
        <trans-unit id="996cbef1591c035a58ca746148709b27c620fa4c" translate="yes" xml:space="preserve">
          <source>Area for a line edit's contents.</source>
          <target state="translated">行编辑内容的区域。</target>
        </trans-unit>
        <trans-unit id="49d625f2177641e83922107fa8fe0945c1a234ac" translate="yes" xml:space="preserve">
          <source>Area for a toolbox tab's icon and label.</source>
          <target state="translated">工具箱标签的图标和标签的区域。</target>
        </trans-unit>
        <trans-unit id="38039cebc9a972903879e00ec75b44c25bcac759" translate="yes" xml:space="preserve">
          <source>Area for a view item's check mark.</source>
          <target state="translated">视图项目的复选标记区域。</target>
        </trans-unit>
        <trans-unit id="45a206cb54f2e2e7c7088d52bc80d8c3f70d71f2" translate="yes" xml:space="preserve">
          <source>Area for a view item's decoration (icon).</source>
          <target state="translated">视图项目的装饰区域(图标)。</target>
        </trans-unit>
        <trans-unit id="c15c344347ca6330e5a3e4b9a6a791a3eb072540" translate="yes" xml:space="preserve">
          <source>Area for a view item's focus rect.</source>
          <target state="translated">视图项的焦点区域。</target>
        </trans-unit>
        <trans-unit id="a71210b90ac09cb96b804c1b99fce169916fd2e3" translate="yes" xml:space="preserve">
          <source>Area for a view item's text.</source>
          <target state="translated">视图项的文字区域。</target>
        </trans-unit>
        <trans-unit id="c13c2fc8f77c8fac60c5301fb7aff26d7bf46de1" translate="yes" xml:space="preserve">
          <source>Area for a widget on the left side of a tab in a tab bar.</source>
          <target state="translated">在标签栏中标签左边的小部件区域。</target>
        </trans-unit>
        <trans-unit id="d149dee448fb590f234c497fe4a512c07a797416" translate="yes" xml:space="preserve">
          <source>Area for a widget on the right side of a tab in a tab bar.</source>
          <target state="translated">在标签栏中标签右边的小部件区域。</target>
        </trans-unit>
        <trans-unit id="b22560181ca881597d004e6fcb18b916d937f69f" translate="yes" xml:space="preserve">
          <source>Area for the actual disclosure item in a tree branch.</source>
          <target state="translated">树枝中实际披露项目的区域。</target>
        </trans-unit>
        <trans-unit id="606a1d29814a7245a7c24bcf223ba372fb9da815" translate="yes" xml:space="preserve">
          <source>Area for the contents of the tab widget.</source>
          <target state="translated">标签小组件内容的区域。</target>
        </trans-unit>
        <trans-unit id="6fcd28540d30cc262211b77e0c45ed166ba05a4f" translate="yes" xml:space="preserve">
          <source>Area for the focus indicator.</source>
          <target state="translated">重点指标的区域。</target>
        </trans-unit>
        <trans-unit id="1ecd2bd4ef6aaaa02323b7b4dc790d554c0186af" translate="yes" xml:space="preserve">
          <source>Area for the focus rect (usually larger than the contents rect).</source>
          <target state="translated">焦点矩形的区域(通常比内容矩形大)。</target>
        </trans-unit>
        <trans-unit id="e69799701a78a828138095c10e3057576ccfe936" translate="yes" xml:space="preserve">
          <source>Area for the groove.</source>
          <target state="translated">槽的面积。</target>
        </trans-unit>
        <trans-unit id="f23c53c39dfb3b6826222d61a5977ae62f20d93d" translate="yes" xml:space="preserve">
          <source>Area for the handle of a tool bar.</source>
          <target state="translated">工具条的手柄区域。</target>
        </trans-unit>
        <trans-unit id="c01b59bd91f53365fa18f3a47828f70d86ea3b17" translate="yes" xml:space="preserve">
          <source>Area for the label (text or pixmap).</source>
          <target state="translated">标签的区域(文本或像素图)。</target>
        </trans-unit>
        <trans-unit id="ca3bcf5d68aff0bc2816cff2bbf7d5e84ffdc0cd" translate="yes" xml:space="preserve">
          <source>Area for the label in a header.</source>
          <target state="translated">页眉中标签的区域。</target>
        </trans-unit>
        <trans-unit id="b65d786b45b3e5f45ec2bf0ccb6678ce3dadad85" translate="yes" xml:space="preserve">
          <source>Area for the label.</source>
          <target state="translated">标签的区域。</target>
        </trans-unit>
        <trans-unit id="b13ecb0a287b3e2becd310e4ee5944b89c338cc2" translate="yes" xml:space="preserve">
          <source>Area for the left corner widget in a tab widget.</source>
          <target state="translated">标签小组件中左角小组件的区域。</target>
        </trans-unit>
        <trans-unit id="3039dbda981933bcb4504aac23b93c739b39fd93" translate="yes" xml:space="preserve">
          <source>Area for the pane of a tab widget.</source>
          <target state="translated">标签小组件的窗格区域。</target>
        </trans-unit>
        <trans-unit id="39635be96b35976e4588212659d747676bb9f02d" translate="yes" xml:space="preserve">
          <source>Area for the progress indicator.</source>
          <target state="translated">进度指标的领域。</target>
        </trans-unit>
        <trans-unit id="eeb6285f6cd1d450aa22bf4d4bec5a64af0702bc" translate="yes" xml:space="preserve">
          <source>Area for the right corner widget in a tab widget.</source>
          <target state="translated">标签小组件中右角小组件的区域。</target>
        </trans-unit>
        <trans-unit id="ae81551ca03dbe2287beccf10b7efb541feea9ea" translate="yes" xml:space="preserve">
          <source>Area for the scroll left button on a tab bar with scroll buttons.</source>
          <target state="translated">在带滚动按钮的标签栏上,左滚动按钮的区域。</target>
        </trans-unit>
        <trans-unit id="3d088c29245d46a52e463d46dedf98531b02ecc4" translate="yes" xml:space="preserve">
          <source>Area for the scroll right button on a tab bar with scroll buttons.</source>
          <target state="translated">在带滚动按钮的标签栏上,右滚动按钮的区域。</target>
        </trans-unit>
        <trans-unit id="6cf0dbc08aaa6142fa399fca7bf284fdcc8feb99" translate="yes" xml:space="preserve">
          <source>Area for the sort indicator for a header.</source>
          <target state="translated">头部的排序指标区域。</target>
        </trans-unit>
        <trans-unit id="09112dc0806c916e1f33d0927cc5a1ce510d2dea" translate="yes" xml:space="preserve">
          <source>Area for the state indicator (e.g., check mark).</source>
          <target state="translated">状态指示器的区域(例如,检查标记)。</target>
        </trans-unit>
        <trans-unit id="e5920a1ea031d42ebf4c5174cb98e9517ab212d9" translate="yes" xml:space="preserve">
          <source>Area for the state indicator.</source>
          <target state="translated">国家指标的区域。</target>
        </trans-unit>
        <trans-unit id="3f9b7423765460500b6a94cf583dd6ac4766da9e" translate="yes" xml:space="preserve">
          <source>Area for the tab bar widget in a tab widget.</source>
          <target state="translated">标签栏小部件的区域。</target>
        </trans-unit>
        <trans-unit id="cfe80f8b3a44ae2160f72af5c86b6e1f0506540e" translate="yes" xml:space="preserve">
          <source>Area for the tear indicator on the left side of a tab bar with scroll arrows.</source>
          <target state="translated">标签栏左侧带滚动箭头的撕裂指示器区域。</target>
        </trans-unit>
        <trans-unit id="d347bf554c04c8874a811982205338817ec79371" translate="yes" xml:space="preserve">
          <source>Area for the tear indicator on the right side of a tab bar with scroll arrows.</source>
          <target state="translated">标签栏右侧带滚动箭头的撕裂指示器区域。</target>
        </trans-unit>
        <trans-unit id="998ab79f788929e9b5839a5aed4f09093e3e8720" translate="yes" xml:space="preserve">
          <source>Area for the text label.</source>
          <target state="translated">文字标签的区域。</target>
        </trans-unit>
        <trans-unit id="21f689ba2ed61ac45fe27fb3d42434baded3fd85" translate="yes" xml:space="preserve">
          <source>Area for the text on a tab in a tab bar.</source>
          <target state="translated">在标签栏中,标签上的文字区域。</target>
        </trans-unit>
        <trans-unit id="40d7de0a3812d9abd5c47796a043a6f0e1c85d4e" translate="yes" xml:space="preserve">
          <source>Area in which MDI windows are displayed</source>
          <target state="translated">显示MDI窗口的区域</target>
        </trans-unit>
        <trans-unit id="5a3d757e88061f76b52e980cd1a554f9d06096f3" translate="yes" xml:space="preserve">
          <source>Area that counts for the parent layout.</source>
          <target state="translated">计入父版图的区域。</target>
        </trans-unit>
        <trans-unit id="b3caa3c8a56c156caa83a295f21743b81c0e7e02" translate="yes" xml:space="preserve">
          <source>AreaLight (QML type)</source>
          <target state="translated">区域灯(QML类型</target>
        </trans-unit>
        <trans-unit id="66c6c7b1c6c5a7e6fd50cacec9fd64cab4be32bd" translate="yes" xml:space="preserve">
          <source>AreaLight QML Type</source>
          <target state="translated">AreaLight QML类型</target>
        </trans-unit>
        <trans-unit id="2c61171ab67536b90099c14b573d7a00c5ba5ea0" translate="yes" xml:space="preserve">
          <source>AreaLight.height</source>
          <target state="translated">AreaLight.height</target>
        </trans-unit>
        <trans-unit id="24d4b669aa6ff9d8863cd7f980bc571e53641075" translate="yes" xml:space="preserve">
          <source>AreaLight.width</source>
          <target state="translated">AreaLight.width</target>
        </trans-unit>
        <trans-unit id="e93aa9b9e374870c122e716b092248e4e80a303b" translate="yes" xml:space="preserve">
          <source>AreaSeries</source>
          <target state="translated">AreaSeries</target>
        </trans-unit>
        <trans-unit id="b87f5f9f05b6cfc0734e3463fd5f7fb7554362cb" translate="yes" xml:space="preserve">
          <source>AreaSeries (QML type)</source>
          <target state="translated">区域系列(QML类型</target>
        </trans-unit>
        <trans-unit id="c0cac81aee98155eaf540e28dbf266768a7e253a" translate="yes" xml:space="preserve">
          <source>AreaSeries QML Type</source>
          <target state="translated">AreaSeries QML类型</target>
        </trans-unit>
        <trans-unit id="082c098d89b3e4390201d833c440f743796b0564" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisAngular</source>
          <target state="translated">AreaSeries.axisAngular</target>
        </trans-unit>
        <trans-unit id="fee028d96d394ff4a51ccff98670410ed21a34d7" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisRadial</source>
          <target state="translated">AreaSeries.axisRadial</target>
        </trans-unit>
        <trans-unit id="efc9c6b7fda89b66e30119f302bd72276c89d3c5" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisX</source>
          <target state="translated">AreaSeries.axisX</target>
        </trans-unit>
        <trans-unit id="2d4c3476487185317a00c9e726baff7dda394cb8" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisXTop</source>
          <target state="translated">AreaSeries.axisXTop</target>
        </trans-unit>
        <trans-unit id="4fa5d1de3ad3d15399e779b058a130d81995955f" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisY</source>
          <target state="translated">AreaSeries.axisY</target>
        </trans-unit>
        <trans-unit id="cdc7d8432bcf7d70579992707186dac42ee475cd" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisYRight</source>
          <target state="translated">AreaSeries.axisYRight</target>
        </trans-unit>
        <trans-unit id="e8ba7c149a49277c3a122eeca497f0d28ab61c32" translate="yes" xml:space="preserve">
          <source>AreaSeries.borderColor</source>
          <target state="translated">AreaSeries.borderColor</target>
        </trans-unit>
        <trans-unit id="1cc7f40779f9908ab2a2e265bc46c8bf15f362a6" translate="yes" xml:space="preserve">
          <source>AreaSeries.borderWidth</source>
          <target state="translated">AreaSeries.borderWidth</target>
        </trans-unit>
        <trans-unit id="6559de9df3daf9b75251aa7a8cf613040cc44fa0" translate="yes" xml:space="preserve">
          <source>AreaSeries.brush</source>
          <target state="translated">AreaSeries.brush</target>
        </trans-unit>
        <trans-unit id="1943573ba843b93576b7fcdea0c4fb11fbd96005" translate="yes" xml:space="preserve">
          <source>AreaSeries.brushFilename</source>
          <target state="translated">AreaSeries.brushFilename</target>
        </trans-unit>
        <trans-unit id="223c5417377c7cbb671cfbbc9d5a9a7ba7ccf83f" translate="yes" xml:space="preserve">
          <source>AreaSeries.clicked()</source>
          <target state="translated">AreaSeries.clicked()</target>
        </trans-unit>
        <trans-unit id="1b2951e0d4d24ce12c15b0f2efcdcfe2a5d0734c" translate="yes" xml:space="preserve">
          <source>AreaSeries.color</source>
          <target state="translated">AreaSeries.color</target>
        </trans-unit>
        <trans-unit id="27f9e34e748082203b16fef220f45bb36d34682b" translate="yes" xml:space="preserve">
          <source>AreaSeries.doubleClicked()</source>
          <target state="translated">AreaSeries.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="19de277cccd3cba00c831f43a504a4f08a05a48a" translate="yes" xml:space="preserve">
          <source>AreaSeries.hovered()</source>
          <target state="translated">AreaSeries.hovered()</target>
        </trans-unit>
        <trans-unit id="9df8002f9f61b9cddbf2f8415dd6d47ca1595c2d" translate="yes" xml:space="preserve">
          <source>AreaSeries.lowerSeries</source>
          <target state="translated">AreaSeries.lowerSeries</target>
        </trans-unit>
        <trans-unit id="eeab19ab0b4b35b1ba4556670d75dcba50c4369b" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsClipping</source>
          <target state="translated">AreaSeries.pointLabelsClipping</target>
        </trans-unit>
        <trans-unit id="386fc6e15ef1c63c5f220eb802ab892cfce51ff9" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsColor</source>
          <target state="translated">AreaSeries.pointLabelsColor</target>
        </trans-unit>
        <trans-unit id="9bd6dbac99e9e14fc587b100f99576c092f10c9e" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsFont</source>
          <target state="translated">AreaSeries.pointLabelsFont</target>
        </trans-unit>
        <trans-unit id="d9178cd1d5a2aff5519dfa119addac0dab96007f" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsFormat</source>
          <target state="translated">AreaSeries.pointLabelsFormat</target>
        </trans-unit>
        <trans-unit id="7aab9ef51bb0d411fd6cc56a18cdeb40bae301e2" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsVisible</source>
          <target state="translated">AreaSeries.pointLabelsVisible</target>
        </trans-unit>
        <trans-unit id="0da30bafeb2841f449ced3e210a2820744d84afc" translate="yes" xml:space="preserve">
          <source>AreaSeries.pressed()</source>
          <target state="translated">AreaSeries.pressed()</target>
        </trans-unit>
        <trans-unit id="6cec7cad3d8160a04a80a655326e7bcd23a65709" translate="yes" xml:space="preserve">
          <source>AreaSeries.released()</source>
          <target state="translated">AreaSeries.released()</target>
        </trans-unit>
        <trans-unit id="b2d3449ed77070c1aa0f6b29dd8bef8ff0b1948b" translate="yes" xml:space="preserve">
          <source>AreaSeries.upperSeries</source>
          <target state="translated">AreaSeries.upperSeries</target>
        </trans-unit>
        <trans-unit id="e082e8656ffbbf09ccdc4b5e8c037b9f54130ed3" translate="yes" xml:space="preserve">
          <source>Areas outside this will be transparent.</source>
          <target state="translated">在此之外的区域将是透明的。</target>
        </trans-unit>
        <trans-unit id="aab6ebe4bad7044325def8edcab950ba7ccad54d" translate="yes" xml:space="preserve">
          <source>Areas that the route must not cross.</source>
          <target state="translated">航线不得穿越的区域;</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="d94a8e1cd954b8b843be6463a70504f095a33fa0" translate="yes" xml:space="preserve">
          <source>Argument Formats</source>
          <target state="translated">论据格式</target>
        </trans-unit>
        <trans-unit id="8d233a99b3c19dc229c1384324fe9612e1e81a99" translate="yes" xml:space="preserve">
          <source>Argument handling is identical to the respective &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;() overload.</source>
          <target state="translated">参数处理与相应的&lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;（）重载相同。</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="3d1ab73d494db068b278339299acc2d36f2e0210" translate="yes" xml:space="preserve">
          <source>Arguments are applied to back-facing polygons.</source>
          <target state="translated">参数适用于背向的多边形。</target>
        </trans-unit>
        <trans-unit id="69c7e52bf2c1c5b609c1c72236dc5b854e008ecb" translate="yes" xml:space="preserve">
          <source>Arguments are applied to both front- and back-facing polygons.</source>
          <target state="translated">参数适用于正面和背面的多边形。</target>
        </trans-unit>
        <trans-unit id="59d63ba93e5c76bd18855d603fc091e8b843860d" translate="yes" xml:space="preserve">
          <source>Arguments are applied to front-facing polygons.</source>
          <target state="translated">参数适用于正面的多边形。</target>
        </trans-unit>
        <trans-unit id="492f20b06638cc0bfa76f34df71f7cdfe6ddd9af" translate="yes" xml:space="preserve">
          <source>Arguments containing spaces must be quoted to be correctly supplied to the new process. For example:</source>
          <target state="translated">包含空格的参数必须加引号才能正确提供给新进程。例如:</target>
        </trans-unit>
        <trans-unit id="521ad937aa1f53eee397385106d065e03d4fd528" translate="yes" xml:space="preserve">
          <source>Armature</source>
          <target state="translated">Armature</target>
        </trans-unit>
        <trans-unit id="6f5f1e1355dbdb7e2edc9f0b1b8a1ea5f4efb8c8" translate="yes" xml:space="preserve">
          <source>Armature (QML type)</source>
          <target state="translated">电枢(QML型)</target>
        </trans-unit>
        <trans-unit id="55ac82f94a41e19423c5b4c822d6090fdc7cd3b1" translate="yes" xml:space="preserve">
          <source>Armature QML Type</source>
          <target state="translated">电枢QML类型</target>
        </trans-unit>
        <trans-unit id="0448d89703712a541edda15d367fd809da8ac1d3" translate="yes" xml:space="preserve">
          <source>Armature.skeleton</source>
          <target state="translated">Armature.skeleton</target>
        </trans-unit>
        <trans-unit id="1a0d21145500640fd3f6136eeba595bfe934d364" translate="yes" xml:space="preserve">
          <source>Armenian</source>
          <target state="translated">Armenian</target>
        </trans-unit>
        <trans-unit id="41127ee8f7ab4f314142f165d2c9bc6558b3e351" translate="yes" xml:space="preserve">
          <source>Arrange elements to adhere to layout guidelines for different platforms.</source>
          <target state="translated">排列元素,遵守不同平台的布局准则。</target>
        </trans-unit>
        <trans-unit id="49775465a2662efa781833958f1606cec4319e36" translate="yes" xml:space="preserve">
          <source>Arranges all child windows in a tile pattern.</source>
          <target state="translated">将所有的子窗口以瓦片模式排列。</target>
        </trans-unit>
        <trans-unit id="9ca9725a03114d31504328c6e0f24c2dc4218921" translate="yes" xml:space="preserve">
          <source>Arranges all the child windows in a cascade pattern.</source>
          <target state="translated">将所有的子窗口以层叠模式排列。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="6eb6467e007cb070adc85d58a09cd75d99be0f3c" translate="yes" xml:space="preserve">
          <source>Array Object</source>
          <target state="translated">阵列对象</target>
        </trans-unit>
        <trans-unit id="521d9c30534a654804e203a996e2583803023671" translate="yes" xml:space="preserve">
          <source>Array Objects</source>
          <target state="translated">阵列对象</target>
        </trans-unit>
        <trans-unit id="df1e485a44970093e89d987c652ebc18c9e3e534" translate="yes" xml:space="preserve">
          <source>Array Prototype Object</source>
          <target state="translated">阵列原型对象</target>
        </trans-unit>
        <trans-unit id="df5eaaa07a6a7538a98bf3593e431703f3438b78" translate="yes" xml:space="preserve">
          <source>Array of bits</source>
          <target state="translated">比特数组</target>
        </trans-unit>
        <trans-unit id="d7f9e14823a5f2ef4dcfd880e753267cfc281058" translate="yes" xml:space="preserve">
          <source>Array of bytes</source>
          <target state="translated">字节数组</target>
        </trans-unit>
        <trans-unit id="1b6bf23201e44d3b137865089f87083f36883d00" translate="yes" xml:space="preserve">
          <source>Array of range values as float point numbers. The value for the most detailed representation should be specified first.</source>
          <target state="translated">浮点数的范围值阵列。应先指定最详细的表示方法的值。</target>
        </trans-unit>
        <trans-unit id="0047289ea45c5ac540ffeb8876e5f8bf8c711934" translate="yes" xml:space="preserve">
          <source>Array or Map</source>
          <target state="translated">阵列或地图</target>
        </trans-unit>
        <trans-unit id="0fc24b8b8b7122608af5aca9337f1476bfe952d8" translate="yes" xml:space="preserve">
          <source>Array, converted using QCborArray::formJsonArray()</source>
          <target state="translated">数组,使用QCborArray::formJsonArray()转换。</target>
        </trans-unit>
        <trans-unit id="2704c6d097885b6494eef2fc12c3cea109979946" translate="yes" xml:space="preserve">
          <source>Array, map and string lengths must be as short as possible. As above, &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; automatically does this.</source>
          <target state="translated">数组，映射和字符串的长度必须尽可能短。如上所述，&lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt;自动执行此操作。</target>
        </trans-unit>
        <trans-unit id="d574dbe1420fbc3886d8508328989f5db00f1045" translate="yes" xml:space="preserve">
          <source>Array, map and string lengths must be as short as possible. As above, QCborStreamWriter automatically does this.</source>
          <target state="translated">数组、映射和字符串的长度必须尽可能短。如上所述,QCborStreamWriter 会自动做到这一点。</target>
        </trans-unit>
        <trans-unit id="95971ea269213b08d09c9553e6421bde178a5ca7" translate="yes" xml:space="preserve">
          <source>ArrayBuffer</source>
          <target state="translated">ArrayBuffer</target>
        </trans-unit>
        <trans-unit id="c3ee4aa92cf96bfba3d79f58e87e55f061989e7e" translate="yes" xml:space="preserve">
          <source>Arrays are sets of zero or more elements of the same type, while structures are a set of a fixed number of elements, each of any type. Maps or dictionaries are implemented as arrays of a pair of elements, so there can be zero or more elements in one map.</source>
          <target state="translated">数组是由零个或多个相同类型的元素组成的集合,而结构是由固定数量的元素组成的集合,每个元素都是任意类型。地图或字典是以一对元素的数组来实现的,所以一个地图中可以有零个或多个元素。</target>
        </trans-unit>
        <trans-unit id="131ede22d0b614ba1e8e1c1d1f9d48cf630840ac" translate="yes" xml:space="preserve">
          <source>Arrays as well as pointers that have been allocated with &lt;code&gt;malloc&lt;/code&gt; must not be deleted using &lt;code&gt;delete&lt;/code&gt;. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;'s second template parameter can be used for custom cleanup handlers.</source>
          <target state="translated">不能使用 &lt;code&gt;delete&lt;/code&gt; 删除使用 &lt;code&gt;malloc&lt;/code&gt; 分配的数组和指针。&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;的第二个模板参数可用于自定义清理处理程序。</target>
        </trans-unit>
        <trans-unit id="2716ed47e05e882afe9e5288abdad8784f3bfbb9" translate="yes" xml:space="preserve">
          <source>Arrays as well as pointers that have been allocated with &lt;code&gt;malloc&lt;/code&gt; must not be deleted using &lt;code&gt;delete&lt;/code&gt;. QScopedPointer's second template parameter can be used for custom cleanup handlers.</source>
          <target state="translated">不能使用 &lt;code&gt;delete&lt;/code&gt; 删除使用 &lt;code&gt;malloc&lt;/code&gt; 分配的数组和指针。QScopedPointer的第二个模板参数可用于自定义清理处理程序。</target>
        </trans-unit>
        <trans-unit id="b2a8fd3a5efab24761461f71d384408878728213" translate="yes" xml:space="preserve">
          <source>Arrays, Maps</source>
          <target state="translated">数组、地图</target>
        </trans-unit>
        <trans-unit id="900f175af84d0000f64c370336540ee485194334" translate="yes" xml:space="preserve">
          <source>Arrays, maps and strings must use explicit length. &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; always does this for strings; for arrays and maps, be sure to call &lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;() overloads with explicit length.</source>
          <target state="translated">数组，映射和字符串必须使用显式长度。&lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt;总是对字符串执行此操作；对于数组和映射，请确保以明确的长度调用&lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;（）和&lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;（）重载。</target>
        </trans-unit>
        <trans-unit id="4726c82d38bd745cfc8bbad7b54e772ecb2e7792" translate="yes" xml:space="preserve">
          <source>Arrays, maps and strings must use explicit length. QCborStreamWriter always does this for strings; for arrays and maps, be sure to call &lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;() overloads with explicit length.</source>
          <target state="translated">数组，映射和字符串必须使用显式长度。QCborStreamWriter总是对字符串执行此操作；对于数组和映射，请确保以明确的长度调用&lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;（）和&lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;（）重载。</target>
        </trans-unit>
        <trans-unit id="e65665c0319750f55e0fe69874130a1cf6d4ed0a" translate="yes" xml:space="preserve">
          <source>Arrow keys</source>
          <target state="translated">方向键</target>
        </trans-unit>
        <trans-unit id="3094e340f7ad15ed65f9617c27dee5b6efab8cd1" translate="yes" xml:space="preserve">
          <source>Arrow pointing upwards.</source>
          <target state="translated">箭头朝上。</target>
        </trans-unit>
        <trans-unit id="482272bf7ce3a81c43b80e4333215720dc80f919" translate="yes" xml:space="preserve">
          <source>Arrow used to indicate sorting on a list or table header.</source>
          <target state="translated">箭头用于指示列表或表头的排序。</target>
        </trans-unit>
        <trans-unit id="4360c2dcd4af965377499b10a52640af435c9258" translate="yes" xml:space="preserve">
          <source>Article</source>
          <target state="translated">Article</target>
        </trans-unit>
        <trans-unit id="7c422841b7e3951946583038790545c4ed38481b" translate="yes" xml:space="preserve">
          <source>Articles</source>
          <target state="translated">Articles</target>
        </trans-unit>
        <trans-unit id="56a51ffa3fabb3657751bd1808f69bd249d154a1" translate="yes" xml:space="preserve">
          <source>Articles &amp;amp; Overviews</source>
          <target state="translated">文章和概述</target>
        </trans-unit>
        <trans-unit id="f76582ba600897c1f50a1ed73084718b7ec73e5f" translate="yes" xml:space="preserve">
          <source>Articles and Guides</source>
          <target state="translated">文章和指南</target>
        </trans-unit>
        <trans-unit id="fba62974dfe83ad2c48a0cacc75fc3b90edbd918" translate="yes" xml:space="preserve">
          <source>Articles and overviews are a style of writing best used for providing summary detail on a topic or concept. It may introduce a technology or discuss how a concept may be applied, but without discussing exact steps in too much detail. However, this type of content could provide the entry point for readers to find instructional and reference materials that do, such as tutorials, examples and class documentation. An example of an overview might be a product page, such as a top level discussion of Qt Quick, individual modules, design principles, or tools.</source>
          <target state="translated">文章和综述是一种写作风格,最适合用于提供关于某一主题或概念的细节摘要。它可能会介绍一种技术或讨论如何应用一个概念,但不会太详细地讨论具体步骤。然而,这种类型的内容可以为读者提供切入点,以找到确实的教学和参考资料,如教程、示例和课堂文档。一个概述的例子可能是一个产品页面,比如对Qt Quick、各个模块、设计原理或工具的顶层讨论。</target>
        </trans-unit>
        <trans-unit id="80da973597b2f2e0cf1af7e0444d2b482c38fa7b" translate="yes" xml:space="preserve">
          <source>Artist-Employed Cheats</source>
          <target state="translated">艺术家就业作弊器</target>
        </trans-unit>
        <trans-unit id="9085c0843e20dcda45adaec5f83079e33bef26e6" translate="yes" xml:space="preserve">
          <source>Artistic paper material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">艺术纸材料。&lt;a href=&quot;#details&quot;&gt;更多的...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a73419ee455e0064e5140958920a9b4ac26eec17" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; introduces three layers at once - the RCW, COM and finally &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; itself - the performance penalty when using the generic Qt/&lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt;/COM/RCW/.NET bridge is larger than when using a hand-crafted IJW-wrapper class. The execution speed however is still sufficient for connecting to and modifying interactive elements in a user interface, and as soon as the benefit of using Qt and C++ to implement and compile performance critical algorithms into native code kicks in, &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; becomes a valid choice for making even non-visual parts of your application accessible to .NET.</source>
          <target state="translated">由于&lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt;一次引入了三层-RCW，COM，最后是&lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt;本身-使用通用Qt / &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; / COM / RCW / .NET桥时的性能损失比使用手工制作的IJW包装器类时要大。但是，执行速度仍然足以连接和修改用户界面中的交互元素，一旦使用Qt和C ++来实现并将性能关键算法编译为本机代码的&lt;a href=&quot;activeqt-index&quot;&gt;好处一触即发&lt;/a&gt;，ActiveQt便成为有效的选择.NET甚至可以访问应用程序的非可视部分。</target>
        </trans-unit>
        <trans-unit id="cb014dddbd39352d4f2501f7cd58d46273b26e54" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; introduces three layers at once - the RCW, COM and finally &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; itself - the performance penalty when using the generic Qt/&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;/COM/RCW/.NET bridge is larger than when using a hand-crafted IJW-wrapper class. The execution speed however is still sufficient for connecting to and modifying interactive elements in a user interface, and as soon as the benefit of using Qt and C++ to implement and compile performance critical algorithms into native code kicks in, &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; becomes a valid choice for making even non-visual parts of your application accessible to .NET.</source>
          <target state="translated">由于&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;一次引入了三层-RCW，COM，最后是&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;本身-使用通用Qt / &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; / COM / RCW / .NET桥时的性能损失比使用手工制作的IJW包装器类更大。但是，执行速度仍然足以连接和修改用户界面中的交互元素，一旦使用Qt和C ++来实现并将性能关键算法编译为本机代码的&lt;a href=&quot;activeqt-index#&quot;&gt;好处一触即发&lt;/a&gt;，ActiveQt便成为有效的选择.NET甚至可以访问应用程序的非可视部分。</target>
        </trans-unit>
        <trans-unit id="0488e03b7814927148f633c567527954a0a28b9d" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; only supports &lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;Action&lt;/a&gt; as child items, we need to manually assign the &lt;code&gt;exclusiveGroup&lt;/code&gt; property for other objects.</source>
          <target state="translated">作为&lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt;只支持&lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;行动&lt;/a&gt;为孩子的项目，我们需要手动指定 &lt;code&gt;exclusiveGroup&lt;/code&gt; 属性的其他对象。</target>
        </trans-unit>
        <trans-unit id="ade9c251f0915adc500091aaeaf3e818b6d593e5" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;'s documentation adequately covers common use cases, this tutorial will cover a different scenario: one where the gauge's tickmarks cover the value bar, instead of being aligned to the left or right of it.</source>
          <target state="translated">由于&lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;的文档充分介绍了常见的用例，因此本教程将介绍另一种情况：一种情况是仪表的刻度线覆盖了值栏，而不是与值栏的左侧或右侧对齐。</target>
        </trans-unit>
        <trans-unit id="a69a651254e342082cc21d33924742d5f778b280" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications are run in a sandboxed environment, setting the path variable to point to the files required will not work.</source>
          <target state="translated">由于&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;应用程序在沙盒环境中运行，因此将path变量设置为指向所需文件将不起作用。</target>
        </trans-unit>
        <trans-unit id="d5280d982a17a3e0de0ede57fb2cb960f7534849" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications run in a sandboxed environment, some restrictions should be taken into account when considering porting or writing cross-platform applications:</source>
          <target state="translated">由于&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;应用程序在沙盒环境中运行，因此在考虑移植或编写跨平台应用程序时应考虑一些限制：</target>
        </trans-unit>
        <trans-unit id="179fa0580ebf568a8f4c369b2c3b32a6d10fad25" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;kmap&lt;/code&gt; files are plain-text files, they can also be hand crafted.</source>
          <target state="translated">由于 &lt;code&gt;kmap&lt;/code&gt; 文件是纯文本文件，因此它们也可以手工制作。</target>
        </trans-unit>
        <trans-unit id="2da21b520222da95776c0a62a36bbe3df2cf9a45" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;views&lt;/code&gt; do not own the memory they reference, care must be taken to ensure that the referenced data (for example, owned by a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) outlives the &lt;code&gt;view&lt;/code&gt; on all code paths.</source>
          <target state="translated">由于 &lt;code&gt;views&lt;/code&gt; 不拥有它们引用的内存，因此必须注意确保所引用的数据（例如，由&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;拥有）在所有代码路径上都超过该 &lt;code&gt;view&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65734a6653f2a94889fe5a8a39e3c63c4de56dc6" translate="yes" xml:space="preserve">
          <source>As Connection is just a handle, the underlying signal-slot connection is unaffected when Connection is destroyed or reassigned.</source>
          <target state="translated">由于Connection只是一个句柄,所以当Connection被破坏或重新分配时,底层的信号槽连接不受影响。</target>
        </trans-unit>
        <trans-unit id="a369bd6d3c234cb2520478b2ff1cddfb065fe0f3" translate="yes" xml:space="preserve">
          <source>As ExclusiveGroup only supports &lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;Action&lt;/a&gt; as child items, we need to manually assign the &lt;code&gt;exclusiveGroup&lt;/code&gt; property for other objects.</source>
          <target state="translated">作为ExclusiveGroup只支持&lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;行动&lt;/a&gt;为孩子的项目，我们需要手动指定 &lt;code&gt;exclusiveGroup&lt;/code&gt; 属性的其他对象。</target>
        </trans-unit>
        <trans-unit id="3d04630e30c94d76c00827289ef0aa28c1a2e1cc" translate="yes" xml:space="preserve">
          <source>As JavaScript's built-in scope mechanism is very simple, QML enhances it to fit more naturally with the QML language extensions.</source>
          <target state="translated">由于JavaScript内置的作用域机制非常简单,QML对其进行了增强,使其更自然地与QML语言扩展相适应。</target>
        </trans-unit>
        <trans-unit id="8ea302238182d60e7a1d90aef8ef88a5ebb8e14a" translate="yes" xml:space="preserve">
          <source>As QML uses Qt's meta-type system all of the existing &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; classes can be used to introspect and interact with objects created by QML. However, some of the new features provided by QML - such as type safety and attached properties - are most easily used through the &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; class that simplifies some of their natural complexity.</source>
          <target state="translated">由于QML使用Qt的元类型系统，因此所有现有的&lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;类都可以用于内省和与QML创建的对象进行交互。但是，QML提供的一些新功能（例如类型安全性和附加属性）最容易通过&lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt;类使用，从而简化了某些自然复杂性。</target>
        </trans-unit>
        <trans-unit id="e17630d37c2ec0c5351dcda822b9490ffcd56874" translate="yes" xml:space="preserve">
          <source>As QML uses Qt's meta-type system all of the existing &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; classes can be used to introspect and interact with objects created by QML. However, some of the new features provided by QML - such as type safety and attached properties - are most easily used through the QQmlProperty class that simplifies some of their natural complexity.</source>
          <target state="translated">由于QML使用Qt的元类型系统，因此所有现有的&lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;类都可以用于自省和与QML创建的对象进行交互。但是，QML提供的一些新功能（例如类型安全性和附加属性）最容易通过QQmlProperty类使用，从而简化了某些自然复杂性。</target>
        </trans-unit>
        <trans-unit id="7e94113753824a914a1a08aa2154179d51fe5b93" translate="yes" xml:space="preserve">
          <source>As Qt Quick 3D does not initialize rendering or a window on its own, but rather relies on &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; or the &lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;Window&lt;/a&gt; QML type, everything related to graphics API selection that applies to the &lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;Qt Quick Scene Graph&lt;/a&gt; applies to Qt Quick 3D as well. It is possible to control the behavior of the scene graph by setting specific environment variables as listed below:</source>
          <target state="translated">由于Qt Quick 3D并不自行初始化渲染或窗口，而是依靠&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;或&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;或&lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;Window&lt;/a&gt; QML类型，因此与适用于&lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;Qt Quick Scene Graph的&lt;/a&gt;图形API选择相关的所有内容也适用于Qt Quick 3D。可以通过设置下面列出的特定环境变量来控制场景图的行为：</target>
        </trans-unit>
        <trans-unit id="6ede9a9ff336452103fa62ab8634fc76224f1fee" translate="yes" xml:space="preserve">
          <source>As UWP applications are run in a sandboxed environment, setting the path variable to point to the files required will not work.</source>
          <target state="translated">由于UWP应用程序是在沙箱环境中运行的,因此设置路径变量指向所需的文件将不起作用。</target>
        </trans-unit>
        <trans-unit id="d26e7459e02067551faa959983bb7a4d10cc98ac" translate="yes" xml:space="preserve">
          <source>As UWP applications run in a sandboxed environment, some restrictions should be taken into account when considering porting or writing cross-platform applications:</source>
          <target state="translated">由于UWP应用程序运行在沙箱环境中,因此在考虑移植或编写跨平台应用程序时,应考虑到一些限制。</target>
        </trans-unit>
        <trans-unit id="8050ae2b35d13151611656688d5708e78d314421" translate="yes" xml:space="preserve">
          <source>As a comparison, the &lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;Qt Quick 2 scenegraph renderer&lt;/a&gt; responsible for drawing Qt Quick 2 scenes is hard-wired in C++ to do things like batching of primitives and rendering opaque items followed by rendering of transparent items. In the case of Qt Quick 2 that is perfectly fine as that covers all of the requirements. As you can see from some of the examples listed above, such a hard-wired renderer is not likely to be flexible enough for generic 3D scenes given the multitude of rendering methods available. Or if a renderer could be made flexible enough to cover all such cases, its performance would likely suffer from being too general. To make matters worse, more rendering methods are being researched all of the time. We therefore needed an approach that is</source>
          <target state="translated">作为比较，负责绘制Qt Quick 2场景的Qt Quick 2场景图形&lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;渲染器&lt;/a&gt;在C ++中进行了硬连线，以进行诸如批处理基元和渲染不透明项然后渲染透明项的操作。在Qt Quick 2的情况下，它可以满足所有要求，因此非常好。从上面列出的一些示例中可以看出，鉴于多种可用的渲染方法，这种硬连线渲染器对于通用3D场景的灵活性可能不够。或者，如果渲染器的灵活性足以覆盖所有此类情况，则其性能可能会因过于笼统而受损。更糟的是，一直在研究更多的渲染方法。因此，我们需要一种方法</target>
        </trans-unit>
        <trans-unit id="16654ae817ec13afbedfbef208383509128f9788" translate="yes" xml:space="preserve">
          <source>As a concrete example, say you have a set of processes talking to each other on your target hardware using a registry, with the &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; at &quot;local:registry&quot; and separate processes using a node at &quot;local:MyHost&quot; that holds &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects. If you wanted to access these objects, but over tcp, you could create a new proxyNode like so:</source>
          <target state="translated">举一个具体的例子，假设您使用注册表在目标硬件上有一组相互通信的进程，&lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;注册表&lt;/a&gt;位于&amp;ldquo; local：registry&amp;rdquo;，而单独的进程使用&amp;ldquo; local：MyHost&amp;rdquo;中的一个保存&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;源&lt;/a&gt;对象的节点。如果要通过tcp访问这些对象，则可以创建一个新的proxyNode，如下所示：</target>
        </trans-unit>
        <trans-unit id="3368d8f1d0a796067aaf697916948d78c6cd398f" translate="yes" xml:space="preserve">
          <source>As a concrete, minimal example, the following class would provide geometry for a single triangle:</source>
          <target state="translated">作为一个具体的、最小的例子,下面的类将提供一个单一三角形的几何图形。</target>
        </trans-unit>
        <trans-unit id="ffead72fbf19f5ddae185bf2691d1eb7b5e5e0c7" translate="yes" xml:space="preserve">
          <source>As a consequence to this signal the application must either start the roaming process by calling &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;() or choose to &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;() the new access point.</source>
          <target state="translated">由于此信号的结果，应用程序必须通过调用&lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;（）来启动漫游过程，或者选择&lt;a href=&quot;qnetworksession#ignore&quot;&gt;忽略&lt;/a&gt;（）新的访问点。</target>
        </trans-unit>
        <trans-unit id="5876200fc35ab75ebbc30bc52742a18c9b8e9cea" translate="yes" xml:space="preserve">
          <source>As a convenience for the two most common connection types, the &lt;a href=&quot;qdbusconnection#sessionBus&quot;&gt;sessionBus&lt;/a&gt;() and &lt;a href=&quot;qdbusconnection#systemBus&quot;&gt;systemBus&lt;/a&gt;() functions return open connections to the session server daemon and the system server daemon, respectively. Those connections are opened when first used and are closed when the &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; destructor is run.</source>
          <target state="translated">为了方便使用两种最常见的连接类型，&lt;a href=&quot;qdbusconnection#sessionBus&quot;&gt;sessionBus&lt;/a&gt;（）和&lt;a href=&quot;qdbusconnection#systemBus&quot;&gt;systemBus&lt;/a&gt;（）函数分别将打开的连接返回到会话服务器守护程序和系统服务器守护程序。这些连接在首次使用时打开，并在运行&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;析构函数时关闭。</target>
        </trans-unit>
        <trans-unit id="b9cd22f5dd9d530194b81069ccce8c4e6570bcd5" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; supports &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;'s blocking functions &lt;a href=&quot;qsslsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qsslsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;(). It also provides &lt;a href=&quot;qsslsocket#waitForEncrypted&quot;&gt;waitForEncrypted&lt;/a&gt;(), which will block the calling thread until an encrypted connection has been established.</source>
          <target state="translated">为了方便起见，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;支持&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;的阻塞函数&lt;a href=&quot;qsslsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;（），&lt;a href=&quot;qsslsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;（），&lt;a href=&quot;qsslsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;（）和&lt;a href=&quot;qsslsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;（）。它还提供了&lt;a href=&quot;qsslsocket#waitForEncrypted&quot;&gt;waitForEncrypted&lt;/a&gt;（），它将阻塞调用线程，直到建立了加密连接为止。</target>
        </trans-unit>
        <trans-unit id="f0e599e06d6db382b738d706fe7713d8137c51c7" translate="yes" xml:space="preserve">
          <source>As a convenience, QSslSocket supports &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;'s blocking functions &lt;a href=&quot;qsslsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qsslsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;(). It also provides &lt;a href=&quot;qsslsocket#waitForEncrypted&quot;&gt;waitForEncrypted&lt;/a&gt;(), which will block the calling thread until an encrypted connection has been established.</source>
          <target state="translated">为了方便起见，QSslSocket支持&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;的阻塞函数&lt;a href=&quot;qsslsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;（），&lt;a href=&quot;qsslsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;（），&lt;a href=&quot;qsslsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;（）和&lt;a href=&quot;qsslsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;（）。它还提供了&lt;a href=&quot;qsslsocket#waitForEncrypted&quot;&gt;waitForEncrypted&lt;/a&gt;（），它将阻塞调用线程，直到建立了加密连接为止。</target>
        </trans-unit>
        <trans-unit id="6a1088883528471d54845c4626a618c3a3db0753" translate="yes" xml:space="preserve">
          <source>As a convenience, many of these types can be specified in QML by string values, or by a related method provided by the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;QtQml::Qt&lt;/a&gt; object. For example, the &lt;a href=&quot;qml-qtquick-image#sourceSize-prop&quot;&gt;Image::sourceSize&lt;/a&gt; property is of type &lt;a href=&quot;qml-size&quot;&gt;size&lt;/a&gt; (which automatically translates to the &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; type) and can be specified by a string value formatted as &quot;width&lt;code&gt;x&lt;/code&gt;height&quot;, or by the Qt.&lt;a href=&quot;qml-qtquick-controls2-stackview#size&quot;&gt;size&lt;/a&gt;() function:</source>
          <target state="translated">为方便起见，可以在QML中通过字符串值或&lt;a href=&quot;qml-qtqml-qt&quot;&gt;QtQml :: Qt&lt;/a&gt;对象提供的相关方法来指定其中许多类型。例如，&lt;a href=&quot;qml-qtquick-image#sourceSize-prop&quot;&gt;Image :: sourceSize&lt;/a&gt;属性的&lt;a href=&quot;qml-size&quot;&gt;大小&lt;/a&gt;为size（将自动转换为&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;类型），并且可以由格式为&amp;ldquo; width &lt;code&gt;x&lt;/code&gt; height&amp;rdquo; 的字符串值或Qt指定。&lt;a href=&quot;qml-qtquick-controls2-stackview#size&quot;&gt;size&lt;/a&gt;（）函数：</target>
        </trans-unit>
        <trans-unit id="91dde3df4079d9c3a3343b655d043066679d2b27" translate="yes" xml:space="preserve">
          <source>As a convention the &lt;a href=&quot;qscrollerproperties&quot;&gt;QScrollerProperties&lt;/a&gt; are in physical units (meter, seconds) and are converted by &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; using the current DPI.</source>
          <target state="translated">按照惯例，&lt;a href=&quot;qscrollerproperties&quot;&gt;QScrollerProperty&lt;/a&gt;以物理单位（米，秒）为单位，并由&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt;使用当前DPI 进行转换。</target>
        </trans-unit>
        <trans-unit id="3cfa3f7f59ad1e468ce30059684074432c33b71b" translate="yes" xml:space="preserve">
          <source>As a convention the QScrollerProperties are in physical units (meter, seconds) and are converted by &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; using the current DPI.</source>
          <target state="translated">按照惯例，QScrollerProperty以物理单位（米，秒）为单位，并由&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt;使用当前DPI进行转换。</target>
        </trans-unit>
        <trans-unit id="8871724b0fde815d1283276bd102e65e68db1482" translate="yes" xml:space="preserve">
          <source>As a countermeasure to these attacks, &lt;a href=&quot;https://tools.ietf.org/html/rfc6347#section-4.2.1&quot;&gt;RFC 6347, section 4.2.1&lt;/a&gt; proposes a stateless cookie technique that a server may deploy:</source>
          <target state="translated">作为对这些攻击的对策，&lt;a href=&quot;https://tools.ietf.org/html/rfc6347#section-4.2.1&quot;&gt;RFC 6347第4.2.1节&lt;/a&gt;提出了服务器可以部署的无状态cookie技术：</target>
        </trans-unit>
        <trans-unit id="d8f8a9c1f819f1f448c84d5bb0f7d67c17b6314e" translate="yes" xml:space="preserve">
          <source>As a general rule, scenes should avoid using separate Shape items when it is not absolutely necessary. Prefer using one Shape item with multiple &lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt; elements over multiple Shape items.</source>
          <target state="translated">通常，在并非绝对必要时，场景应避免使用单独的Shape项。与多个Shape项相比，&lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;最好&lt;/a&gt;使用一个Shape项和多个ShapePath元素。</target>
        </trans-unit>
        <trans-unit id="8df4a49b6b80ccfd011cef828b5f51f01a304bb6" translate="yes" xml:space="preserve">
          <source>As a general rule, the usage of XCB on embedded devices is not advisable. Plugins like eglfs are likely to provide better performance, and hardware acceleration.</source>
          <target state="translated">一般来说,不建议在嵌入式设备上使用 XCB。像eglfs这样的插件可能会提供更好的性能和硬件加速。</target>
        </trans-unit>
        <trans-unit id="95fa84cd4c7bc5c9851232e73a6f86616a3a3db2" translate="yes" xml:space="preserve">
          <source>As a general rule, use a push button when the application or dialog window performs an action when the user clicks on it (such as Apply, Cancel, Close and Help)</source>
          <target state="translated">一般来说,当应用程序或对话框窗口在用户点击时执行操作(如应用、取消、关闭和帮助)时,使用按钮。</target>
        </trans-unit>
        <trans-unit id="ff23a97d4eec6ad9471102c507cc95562693a902" translate="yes" xml:space="preserve">
          <source>As a last resort it uses the Information icon.</source>
          <target state="translated">作为最后的手段,它使用信息图标。</target>
        </trans-unit>
        <trans-unit id="673221f4dc3fc922538641fbc20eb7e8f3a08805" translate="yes" xml:space="preserve">
          <source>As a lower-level alternative to the text rules, you can also implement a custom filter via &lt;a href=&quot;qloggingcategory#installFilter&quot;&gt;installFilter&lt;/a&gt;(). All filter rules are ignored in this case.</source>
          <target state="translated">作为文本规则的低级替代，您还可以通过&lt;a href=&quot;qloggingcategory#installFilter&quot;&gt;installFilter&lt;/a&gt;（）实现自定义过滤器。在这种情况下，将忽略所有过滤器规则。</target>
        </trans-unit>
        <trans-unit id="4d005db4617a4c9b96e7f3ea999dc0c551615b14" translate="yes" xml:space="preserve">
          <source>As a property value source</source>
          <target state="translated">作为财产价值的来源</target>
        </trans-unit>
        <trans-unit id="61cd33ea13e6c171386b3d59bc3397b39825e6ae" translate="yes" xml:space="preserve">
          <source>As a result of calling open() the interface will be started if it is not connected/up yet. Some platforms may not provide support for out-of-process sessions. On such platforms the session counter ignores any sessions held by another process. The platform capabilities can be detected via &lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager::capabilities&lt;/a&gt;().</source>
          <target state="translated">调用open（）的结果是，如果尚未连接/启动接口，则将启动该接口。某些平台可能不提供对进程外会话的支持。在此类平台上，会话计数器会忽略另一个进程举行的任何会话。可以通过&lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager :: capabilities&lt;/a&gt;（）检测平台功能。</target>
        </trans-unit>
        <trans-unit id="fa12ddb8dd10eb2f7246effd2d855748abda0176" translate="yes" xml:space="preserve">
          <source>As a result of calling this function, this item will receive a &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focus in event&lt;/a&gt; with</source>
          <target state="translated">因调用该函数的结果，此项目将获得一个&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;在事件中心&lt;/a&gt;与</target>
        </trans-unit>
        <trans-unit id="12b434ffc79f6483badd201bcc2e7f3041fed375" translate="yes" xml:space="preserve">
          <source>As a result of these changes, some things are done a little differently.</source>
          <target state="translated">由于这些变化,有些事情做得有些不同。</target>
        </trans-unit>
        <trans-unit id="813e172927aa12e3257604ea837bdba6db263749" translate="yes" xml:space="preserve">
          <source>As a result of this operation, any scopes that test for &lt;code&gt;opengl&lt;/code&gt; will be processed. We can use this feature to give the final executable an appropriate name:</source>
          <target state="translated">作为此操作的结果，将处理所有测试 &lt;code&gt;opengl&lt;/code&gt; 的范围。我们可以使用此功能为最终可执行文件指定适当的名称：</target>
        </trans-unit>
        <trans-unit id="03648f1f0e3af66e6698cf463333c191091bdc28" translate="yes" xml:space="preserve">
          <source>As a result, both human-readable strings and hard-coded key codes can both be problematic to use when specifying a key sequence that can be used on a variety of different keyboard layouts. Only the use of &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;standard shortcuts&lt;/a&gt; guarantees that the user will be able to use the shortcuts that the developer intended.</source>
          <target state="translated">结果，当指定可以在各种不同的键盘布局上使用的键序列时，人类可读的字符串和硬编码的键代码都可能难以使用。仅使用&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;标准快捷方式可以&lt;/a&gt;保证用户将能够使用开发人员想要的快捷方式。</target>
        </trans-unit>
        <trans-unit id="780994c44c6578054e951f95bf10d47aceee09e8" translate="yes" xml:space="preserve">
          <source>As a result, certain kinds of effects may be slower than expected on certain devices. It may be possible to compensate for this performance hit by making optimizations in other areas; for example, by using &lt;a href=&quot;#opengl-rendering&quot;&gt;OpenGL&lt;/a&gt; to render a scene. However, any such optimizations may themselves cause a reduction in performance if they also rely on the presence of floating point hardware.</source>
          <target state="translated">结果，某些种类的效果可能会比某些设备上预期的要慢。通过在其他方面进行优化，可能可以弥补这种性能下降；例如，通过使用&lt;a href=&quot;#opengl-rendering&quot;&gt;OpenGL&lt;/a&gt;渲染场景。但是，如果任何此类优化也依赖于浮点硬件的存在，它们本身可能会导致性能降低。</target>
        </trans-unit>
        <trans-unit id="da51ca1f2244c239a88385777013de655249d9a5" translate="yes" xml:space="preserve">
          <source>As a result, certain kinds of effects may be slower than expected on certain devices. It may be possible to compensate for this performance hit by making optimizations in other areas; for example, by using &lt;a href=&quot;graphicsview#opengl-rendering&quot;&gt;OpenGL&lt;/a&gt; to render a scene. However, any such optimizations may themselves cause a reduction in performance if they also rely on the presence of floating point hardware.</source>
          <target state="translated">因此，某些种类的效果可能会比某些设备上预期的要慢。通过在其他方面进行优化，可能可以弥补这种性能下降；例如，通过使用&lt;a href=&quot;graphicsview#opengl-rendering&quot;&gt;OpenGL&lt;/a&gt;渲染场景。但是，如果任何此类优化也依赖于浮点硬件的存在，它们本身可能会导致性能降低。</target>
        </trans-unit>
        <trans-unit id="509a5a65045b1dee34a168ea7f6aa09a4d1650be" translate="yes" xml:space="preserve">
          <source>As a result, only the model needs to know how to obtain data, and the type of data managed by the model can be defined fairly generally. Model indexes contain a pointer to the model that created them, and this prevents confusion when working with more than one model.</source>
          <target state="translated">因此,只有模型需要知道如何获取数据,模型管理的数据类型可以相当笼统地定义。模型索引包含一个指向创建它们的模型的指针,这可以防止在使用多个模型时发生混淆。</target>
        </trans-unit>
        <trans-unit id="0b0588ee170f603557321108977e5cdf0bf6f6b9" translate="yes" xml:space="preserve">
          <source>As a result, the value returned by &lt;a href=&quot;qpainter#clipRegion&quot;&gt;QPainter::clipRegion&lt;/a&gt;() on a newly-constructed &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will not reflect the clip region that is used by the paint system.</source>
          <target state="translated">结果，在新构造的&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;上&lt;a href=&quot;qpainter#clipRegion&quot;&gt;QPainter :: clipRegion&lt;/a&gt;（）返回的值将不会反映绘画系统使用的剪辑区域。</target>
        </trans-unit>
        <trans-unit id="7b3270791f82472b94f05bc56acefab960168c90" translate="yes" xml:space="preserve">
          <source>As a screen-space heuristic technique, it can sometimes leave sharp edges that ideally would be anti-aliased.</source>
          <target state="translated">作为一种屏幕空间启发式技术,它有时会留下理想中反锯齿的锐利边缘。</target>
        </trans-unit>
        <trans-unit id="1c30b1d56552477a8af20723738b54ec71f7fd02" translate="yes" xml:space="preserve">
          <source>As a side effect of the item being repainted, other items that overlap the area</source>
          <target state="translated">作为物品被重新喷漆的副作用,其他物品的重叠区域</target>
        </trans-unit>
        <trans-unit id="f40f6b6e595f789cd81a5ed8771290d28126f766" translate="yes" xml:space="preserve">
          <source>As a side effect, if &lt;code&gt;f&lt;/code&gt; is a pointer to a member function, the first argument of &lt;code&gt;args&lt;/code&gt; should be the object for which that member is defined (or a reference, or a pointer to it). So instead of writing:</source>
          <target state="translated">副作用是，如果 &lt;code&gt;f&lt;/code&gt; 是指向成员函数的指针，则 &lt;code&gt;args&lt;/code&gt; 的第一个参数应该是为其定义了该成员的对象（或其引用或指向它的指针）。所以不用写：</target>
        </trans-unit>
        <trans-unit id="59f5b87678a94d45fbb3c8eb5c39a72a3e3a8857" translate="yes" xml:space="preserve">
          <source>As a simple example, let's create an effect that combines the scene's content with an image, while further altering the red channel's value in an animated manner:</source>
          <target state="translated">举个简单的例子,我们来创建一个效果,将场景的内容与图像结合起来,同时以动画的方式进一步改变红色通道的数值。</target>
        </trans-unit>
        <trans-unit id="9d5fbf9210ce0832de1c9a2b86d3dae1d5733b7e" translate="yes" xml:space="preserve">
          <source>As a special case &lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale::AnyCountry&lt;/a&gt; returns those IANA IDs that do not have any specific country.</source>
          <target state="translated">作为特殊情况，&lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale :: AnyCountry&lt;/a&gt;返回那些没有特定国家/地区的IANA ID。</target>
        </trans-unit>
        <trans-unit id="b6a985d0d6324e02d41df5240563842cd4c6b960" translate="yes" xml:space="preserve">
          <source>As a special case, &lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale::AnyCountry&lt;/a&gt; returns the default of those IANA IDs that do not have any specific country.</source>
          <target state="translated">作为特殊情况，&lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale :: AnyCountry&lt;/a&gt;返回没有任何特定国家/地区的那些IANA ID的默认值。</target>
        </trans-unit>
        <trans-unit id="d8bb094a8b46620e18ef2cb0247f60e39d120f2e" translate="yes" xml:space="preserve">
          <source>As a special case, a</source>
          <target state="translated">作为一种特殊情况,一个</target>
        </trans-unit>
        <trans-unit id="67709323f7c64dee226e1200d1040d9c06f23da2" translate="yes" xml:space="preserve">
          <source>As a special case, a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with a timeout of 0 will time out as soon as all the events in the window system's event queue have been processed. This can be used to do heavy work while providing a snappy user interface:</source>
          <target state="translated">作为一种特殊情况，一旦窗口系统的事件队列中的所有事件都已处理完毕，超时为0 的&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;就会超时。在提供快速的用户界面时，这可以用来完成繁重的工作：</target>
        </trans-unit>
        <trans-unit id="6a9b713bc93435f256b7a354d0bd6c595fd118aa" translate="yes" xml:space="preserve">
          <source>As a special case, a QTimer with a timeout of 0 will time out as soon as possible, though the ordering between zero timers and other sources of events is unspecified. Zero timers can be used to do some work while still providing a snappy user interface:</source>
          <target state="translated">作为一种特殊情况,超时为0的QTimer会尽快超时,不过零定时器和其他事件源之间的顺序是没有规定的。零定时器可以用来做一些工作,同时还能提供一个敏捷的用户界面。</target>
        </trans-unit>
        <trans-unit id="67d0f233e23748a57b37d4a76e41c49ed1d4e06a" translate="yes" xml:space="preserve">
          <source>As a special exception, &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; allows the strings &quot;nan&quot; and &quot;inf&quot; to represent NAN and INF floats or doubles.</source>
          <target state="translated">作为一个特殊的例外，&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;允许字符串&amp;ldquo; nan&amp;rdquo;和&amp;ldquo; inf&amp;rdquo;表示NAN和INF浮点数或双精度数。</target>
        </trans-unit>
        <trans-unit id="7f326801eacc88fc8812ba4adab1baebb1f102d0" translate="yes" xml:space="preserve">
          <source>As already mentioned, the Qt compressed help file contains all data, so there is no need any longer to ship all the single HTML files. Instead, only the compressed help file and, optionally, the collection file have to be distributed. The collection file is optional since any existing collection file, for example from an older release, could be used.</source>
          <target state="translated">如前所述,Qt压缩帮助文件包含了所有的数据,所以不再需要发布所有的单个HTML文件。取而代之的是,只有压缩帮助文件和可选的集合文件需要发布。收集文件是可选的,因为任何现有的收集文件,例如旧版本的,都可以使用。</target>
        </trans-unit>
        <trans-unit id="7dc7b9b08e8bec5164fab76d0c53a03c534d89f4" translate="yes" xml:space="preserve">
          <source>As an alternative to &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;QGraphicsItem::transform&lt;/a&gt;, &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; lets you create and control advanced transformations that can be configured independently using specialized properties.</source>
          <target state="translated">作为&lt;a href=&quot;qgraphicsitem#transform&quot;&gt;QGraphicsItem :: transform&lt;/a&gt;的替代方法，&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;使您可以创建和控制可以使用专用属性独立配置的高级转换。</target>
        </trans-unit>
        <trans-unit id="a9248a88a7e12796a41eaf72f895fbad5eefb5ac" translate="yes" xml:space="preserve">
          <source>As an alternative to &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;QGraphicsItem::transform&lt;/a&gt;, QGraphicsTransform lets you create and control advanced transformations that can be configured independently using specialized properties.</source>
          <target state="translated">作为&lt;a href=&quot;qgraphicsitem#transform&quot;&gt;QGraphicsItem :: transform&lt;/a&gt;的替代方法，QGraphicsTransform使您可以创建和控制可以使用专用属性独立配置的高级转换。</target>
        </trans-unit>
        <trans-unit id="f0332798e4516d184f064e7a0a7edcfc335541e1" translate="yes" xml:space="preserve">
          <source>As an alternative to manually writing build type conditionals, some variables offer build-specific variants, for example &lt;a href=&quot;#qmake-lflags-release&quot;&gt;QMAKE_LFLAGS_RELEASE&lt;/a&gt; in addition to the general &lt;a href=&quot;#qmake-lflags&quot;&gt;QMAKE_LFLAGS&lt;/a&gt;. These should be used when available.</source>
          <target state="translated">作为替代手动编写生成类型条件句，一些变量提供积聚特定变体，例如&lt;a href=&quot;#qmake-lflags-release&quot;&gt;QMAKE_LFLAGS_RELEASE&lt;/a&gt;除了一般&lt;a href=&quot;#qmake-lflags&quot;&gt;QMAKE_LFLAGS&lt;/a&gt;。这些应该在可用时使用。</target>
        </trans-unit>
        <trans-unit id="10dee02d1b9f561858fe14cf6a814f81dafab9f3" translate="yes" xml:space="preserve">
          <source>As an alternative to manually writing build type conditionals, some variables offer build-specific variants, for example &lt;a href=&quot;qmake-variable-reference#qmake-lflags-release&quot;&gt;QMAKE_LFLAGS_RELEASE&lt;/a&gt; in addition to the general &lt;a href=&quot;qmake-variable-reference#qmake-lflags&quot;&gt;QMAKE_LFLAGS&lt;/a&gt;. These should be used when available.</source>
          <target state="translated">作为替代手动编写生成类型条件句，一些变量提供积聚特定变体，例如&lt;a href=&quot;qmake-variable-reference#qmake-lflags-release&quot;&gt;QMAKE_LFLAGS_RELEASE&lt;/a&gt;除了一般&lt;a href=&quot;qmake-variable-reference#qmake-lflags&quot;&gt;QMAKE_LFLAGS&lt;/a&gt;。这些应该在可用时使用。</target>
        </trans-unit>
        <trans-unit id="d811721ede4b79118569ba78597d3d240a70ced0" translate="yes" xml:space="preserve">
          <source>As an application developer, you must strive to allow the rendering engine to achieve a consistent 60 frames-per-second refresh rate. 60 FPS means that there is approximately 16 milliseconds between each frame in which processing can be done, which includes the processing required to upload the draw primitives to the graphics hardware.</source>
          <target state="translated">作为应用开发者,你必须努力让渲染引擎实现一致的60帧/秒刷新率。60 FPS 意味着每一帧之间有大约 16 毫秒的时间可以进行处理,其中包括将绘制基元上传到图形硬件所需的处理。</target>
        </trans-unit>
        <trans-unit id="61f864e8e873f7b562f3409d72ed59901f914db6" translate="yes" xml:space="preserve">
          <source>As an example consider the following blend tree:</source>
          <target state="translated">作为一个例子,考虑以下的混合树。</target>
        </trans-unit>
        <trans-unit id="7e354dda0d5380c69ede32dc0a26ec085dfa89f3" translate="yes" xml:space="preserve">
          <source>As an example this might return &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(0, 0, 1280, 1024), or in a virtual desktop setting &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(1280, 0, 1280, 1024).</source>
          <target state="translated">例如，这可能返回&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（0、0、1280、1024），或者在虚拟桌面设置&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（1280、0、1280、1024）中返回。</target>
        </trans-unit>
        <trans-unit id="8183283ddc349000b8b8c6cf12886851819490ef" translate="yes" xml:space="preserve">
          <source>As an example, assume the device is rotated by 180 degrees and therefore the screen orientation also is rotated by 180 degrees from the native orientation. Without automatic axes orientation, the reading values would now be changed: Both the X and the Y values would be negated, forcing an application developer to manually cancel out the negation in application code. Automatic axes orientation does this automatically, in this mode the X and Y values would be the same as with the default screen orientation.</source>
          <target state="translated">举个例子,假设设备旋转了180度,因此屏幕方向也从原生方向旋转了180度。如果没有自动轴定位,现在的读取值会发生变化:X和Y值都会被否定,迫使应用程序开发人员在应用程序代码中手动取消否定。自动轴方向会自动做到这一点,在这种模式下,X和Y值将与默认屏幕方向相同。</target>
        </trans-unit>
        <trans-unit id="f1ab05c4c6d0b29177a5e1d479a42058bab461eb" translate="yes" xml:space="preserve">
          <source>As an example, consider the above diagram which illustrates the sprites for a hypothetical 2D platform game character. The character starts by displaying the</source>
          <target state="translated">作为一个例子,考虑上图,它说明了一个假设的2D平台游戏角色的精灵。角色开始时显示的是</target>
        </trans-unit>
        <trans-unit id="40fe18229a3074802f21205f5b43e2430614638b" translate="yes" xml:space="preserve">
          <source>As an example, consider the case where you have a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt; representing your current position:</source>
          <target state="translated">例如，考虑一下一个具有代表当前位置的&lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;的情况：</target>
        </trans-unit>
        <trans-unit id="e567e492be073f0e487fa8c7dc2194af4c370a86" translate="yes" xml:space="preserve">
          <source>As an example, consider the following code snippet, which constructs a multipart message containing a text part followed by an image part:</source>
          <target state="translated">作为一个例子,考虑以下代码片段,它构建了一个包含文本部分和图像部分的多部分消息。</target>
        </trans-unit>
        <trans-unit id="6d0108d7b1db298aa7fe12b736a3788ca5637999" translate="yes" xml:space="preserve">
          <source>As an example, discovering all connected screens and creating a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for each of them can be done like this:</source>
          <target state="translated">例如，发现所有连接的屏幕并为每个屏幕创建一个&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;可以像这样完成：</target>
        </trans-unit>
        <trans-unit id="eab774f1c52ff97764e9a982927552907fb69acf" translate="yes" xml:space="preserve">
          <source>As an example, let's add an attached property that controls elevation. Our style will illustrate the elevation with a drop shadow; the higher the elevation, the larger the shadow.</source>
          <target state="translated">作为一个例子,让我们添加一个控制海拔的附加属性。我们的样式将用一个阴影来说明海拔高度;海拔越高,阴影越大。</target>
        </trans-unit>
        <trans-unit id="15b72c79fd7cbd16b7128fc10ba6e7a88fc10bc7" translate="yes" xml:space="preserve">
          <source>As an example, take the above image. For now, just consider the black numbers, and assume the squares are 40x40 pixels. Normally, the image is read from the top-left corner. If you specified the frame size as 40x40 pixels, and a frame count of 8, then it would read in the frames as they are numbered. The frame in the top left would be the first frame, the frame in the top right would be the fifth frame, and then it would wrap to the next row (at pixel location 0,40 in the file) to read the sixth frame. It would stop reading after the frame marked 8, and if there was any image data in the square below frame four then it would not be included in the animation.</source>
          <target state="translated">举个例子,以上面的图片为例。目前,只考虑黑色数字,并假设方块是40x40像素。通常情况下,图像是从左上角读取的。如果您指定帧大小为40x40像素,帧数为8,那么它将按照帧的编号来读取。左上角的帧是第一帧,右上角的帧是第五帧,然后它将向下一行(在文件的像素位置0,40)读取第六帧。它将在标记为8的帧之后停止读取,如果第四帧以下的方块中有任何图像数据,那么它将不会被包含在动画中。</target>
        </trans-unit>
        <trans-unit id="4a52e07f2944d94cd6bc5510f3a8ce976380ac50" translate="yes" xml:space="preserve">
          <source>As an example, this returns 3 for &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; because there are 3 properties defined in that class.</source>
          <target state="translated">例如，由于在该类中定义了3个属性，因此&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt;返回3 。</target>
        </trans-unit>
        <trans-unit id="cdf64408548f0df1050011cfd7b5df6929578f01" translate="yes" xml:space="preserve">
          <source>As an example, this time with Direct3D, the typical usage is expected to be the following:</source>
          <target state="translated">以Direct3D为例,这次的典型用法预计如下。</target>
        </trans-unit>
        <trans-unit id="43532c2564e75716221cce9b86b4d67fa4467927" translate="yes" xml:space="preserve">
          <source>As an example, we use &lt;a href=&quot;qstring#contains&quot;&gt;QString::contains&lt;/a&gt;():</source>
          <target state="translated">例如，我们使用&lt;a href=&quot;qstring#contains&quot;&gt;QString :: contains&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="04f5d893a9fde01e7080134a30ff4412381d5ffa" translate="yes" xml:space="preserve">
          <source>As an example, we will examine the styling of check boxes in the Java style. We describe the complete process and print all code in both the Java style and Qt classes involved. In the rest of this document, we will not examine the source code of the individual widgets. Hopefully, this will give you an idea on how to search through the code if you need to check specific implementation details; most widgets follow the same structure as the check boxes. We have edited the &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; code somewhat to remove code that is not directly relevant for check box styling.</source>
          <target state="translated">例如，我们将检查Java样式的复选框样式。我们描述了完整的过程，并以Java样式和所涉及的Qt类打印所有代码。在本文档的其余部分中，我们将不检查各个小部件的源代码。希望，如果您需要检查特定的实现细节，这将使您对如何搜索代码有所了解；大多数小部件都采用与复选框相同的结构。我们已经对&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;代码进行了一些编辑，以删除与复选框样式不直接相关的代码。</target>
        </trans-unit>
        <trans-unit id="85d87f7f4b49efa6c89aeb036846430f905a5ac3" translate="yes" xml:space="preserve">
          <source>As an example, we'll use QImage::scaledToWidth():</source>
          <target state="translated">作为一个例子,我们将使用QImage::scaledToWidth()。</target>
        </trans-unit>
        <trans-unit id="4fdfd1a02b277df422b06ec379cc68cb08dd0752" translate="yes" xml:space="preserve">
          <source>As an example, when targeting the Raspberry Pi with the Broadcom proprietary graphics drivers, the output should contain something like the following:</source>
          <target state="translated">举个例子,当用Broadcom专有的图形驱动程序瞄准Raspberry Pi时,输出应该包含以下内容。</target>
        </trans-unit>
        <trans-unit id="cd797044ce2f156eecde12a07d51e6cbb7215886" translate="yes" xml:space="preserve">
          <source>As another example, with these attributes:</source>
          <target state="translated">再举个例子,具有这些属性。</target>
        </trans-unit>
        <trans-unit id="02edf70f6ffe6e19a4c67186b97d306867feb01a" translate="yes" xml:space="preserve">
          <source>As before, this ensures that the resources are linked into the final application binary in the case of static linking, but also triggers loading of the library in the case of dynamic linking, such as plugins.</source>
          <target state="translated">和之前一样,这样可以保证在静态链接的情况下,资源被链接到最终的应用程序二进制中,但在动态链接的情况下,也会触发库的加载,比如插件。</target>
        </trans-unit>
        <trans-unit id="8833483dbc5045fbad9be9119ba17ef640bab6ec" translate="yes" xml:space="preserve">
          <source>As can be seen from the above snippets, a script is provided to the engine in the form of a string. One common way of loading scripts is by reading the contents of a file and passing it to &lt;a href=&quot;qjsengine#evaluate&quot;&gt;evaluate&lt;/a&gt;():</source>
          <target state="translated">从上面的代码片段可以看出，脚本以字符串的形式提供给引擎。加载脚本的一种常见方法是读取文件的内容并将其传递给&lt;a href=&quot;qjsengine#evaluate&quot;&gt;评估&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="946ff9861327c49a2cf70cb070d95311176abccb" translate="yes" xml:space="preserve">
          <source>As can be seen from the code extract, the common style gets the bounding rectangles of the two sub elements of CE_CheckBox, and then draws them. If the checkbox has focus, the focus frame is also drawn.</source>
          <target state="translated">从代码提取中可以看出,普通样式得到CE_CheckBox的两个子元素的边界矩形,然后绘制它们。如果复选框有焦点,焦点框也会被绘制。</target>
        </trans-unit>
        <trans-unit id="cf38601a1214ad64f7ee0f4545277b4bd4be77dc" translate="yes" xml:space="preserve">
          <source>As can be seen in the example above, &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; offers a templated version of &lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;remainingTime&lt;/a&gt;() and &lt;a href=&quot;qdeadlinetimer#deadline&quot;&gt;deadline&lt;/a&gt;() that can be used to return &lt;code&gt;std::chrono&lt;/code&gt; objects.</source>
          <target state="translated">从上面的示例可以看出，&lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt;提供了&lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;剩余时间&lt;/a&gt;（）和&lt;a href=&quot;qdeadlinetimer#deadline&quot;&gt;截止时间&lt;/a&gt;（）的模板化版本，可用于返回 &lt;code&gt;std::chrono&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="411aaa3958da791f2721eef12a02d12b879d0150" translate="yes" xml:space="preserve">
          <source>As can be seen in the example above, QDeadlineTimer offers a templated version of &lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;remainingTime&lt;/a&gt;() and &lt;a href=&quot;qdeadlinetimer#deadline&quot;&gt;deadline&lt;/a&gt;() that can be used to return &lt;code&gt;std::chrono&lt;/code&gt; objects.</source>
          <target state="translated">从上面的示例可以看出，QDeadlineTimer提供了&lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;剩余时间&lt;/a&gt;（）和&lt;a href=&quot;qdeadlinetimer#deadline&quot;&gt;截止时间&lt;/a&gt;（）的模板化版本，可用于返回 &lt;code&gt;std::chrono&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9c07713bfee91ea3b4371e0451db99e7799937bd" translate="yes" xml:space="preserve">
          <source>As can be seen in the example, when a delayed reply is in place, the return value(s) from the slot will be ignored by Qt D-Bus. They are used only to determine the slot's signature when communicating the adaptor's description to remote applications, or in case the code in the slot decides not to use a delayed reply.</source>
          <target state="translated">如同在例子中所看到的,当延迟回复到位时,Qt D-Bus将忽略来自槽的返回值,它们仅用于确定槽的签名,当与远程应用程序通信适配器的描述时,或者当槽中的代码决定不使用延迟回复时。它们仅用于在向远程应用程序传达适配器的描述时确定插槽的签名,或者在插槽中的代码决定不使用延迟回复时使用。</target>
        </trans-unit>
        <trans-unit id="a812ce77a7db9b2e16f6e97939903ce7443214ab" translate="yes" xml:space="preserve">
          <source>As data gets decoded, the &lt;a href=&quot;qaudiodecoder#bufferReady&quot;&gt;bufferReady&lt;/a&gt;() signal will be emitted when enough data has been decoded. Calling &lt;a href=&quot;qaudiodecoder#read&quot;&gt;read&lt;/a&gt;() will then return an audio buffer without blocking.</source>
          <target state="translated">随着数据的解码，当解码了足够的数据时，将发出&lt;a href=&quot;qaudiodecoder#bufferReady&quot;&gt;bufferReady&lt;/a&gt;（）信号。然后，调用&lt;a href=&quot;qaudiodecoder#read&quot;&gt;read&lt;/a&gt;（）将返回音频缓冲区而不会阻塞。</target>
        </trans-unit>
        <trans-unit id="425c2b50ba4939aafdebc33fae48cd4ebb023d02" translate="yes" xml:space="preserve">
          <source>As demonstrated above, Qt provides different solutions for developing threaded applications. The right solution for a given application depends on the purpose of the new thread and the thread's lifetime. Below is a comparison of Qt's threading technologies, followed by recommended solutions for some example use cases.</source>
          <target state="translated">如上所述,Qt为开发线程应用提供了不同的解决方案。对于一个特定的应用程序来说,正确的解决方案取决于新线程的目的和线程的寿命。下面是Qt的线程技术的比较,然后是一些用例的推荐解决方案。</target>
        </trans-unit>
        <trans-unit id="f68505584f19dff80e668b01f500c3237dc5b9e2" translate="yes" xml:space="preserve">
          <source>As demonstrated in the image for &lt;a href=&quot;quick3d-asset-conditioning-anti-aliasing#reflection-aliasing&quot;&gt;Reflection Aliasing&lt;/a&gt; above, sometimes the simplest fix for problems is to change the artwork. If you are getting distracting specular glints on the corner of your model, ask yourself:</source>
          <target state="translated">如上图的&lt;a href=&quot;quick3d-asset-conditioning-anti-aliasing#reflection-aliasing&quot;&gt;反射锯齿&lt;/a&gt;所示，有时最简单的解决方法是更改​​插图。如果您在模型的一角上开始分散注意力，请问问自己：</target>
        </trans-unit>
        <trans-unit id="4b89a65b7338ce30f6a9398b5ab3e7d2967fde9a" translate="yes" xml:space="preserve">
          <source>As described above, it is simpler and more robust to set the requested format globally so that it applies to all windows and contexts during the lifetime of the application. Below is an example of this:</source>
          <target state="translated">如上所述,全局设置所要求的格式,使其在应用程序的生命周期内适用于所有窗口和上下文,这样做更简单、更稳健。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="c3abb8aa86837a817c87c44a25ceaaef9e950a2c" translate="yes" xml:space="preserve">
          <source>As described above, subclass &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to render pure 3D content in the following way:</source>
          <target state="translated">如上所述，子类&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;可通过以下方式渲染纯3D内容：</target>
        </trans-unit>
        <trans-unit id="66e2d67e62681a5e3c088fd2af2749e5f06d467b" translate="yes" xml:space="preserve">
          <source>As described above, subclass QOpenGLWidget to render pure 3D content in the following way:</source>
          <target state="translated">如上所述,子类QOpenGLWidget以如下方式渲染纯3D内容。</target>
        </trans-unit>
        <trans-unit id="246214847c3f39c6ad14d967249998fb5fb2c87b" translate="yes" xml:space="preserve">
          <source>As described earlier, you can add animations to transitions to make sure property assignments in the target state are animated. If you want a specific animation to be used for a given property regardless of which transition is taken, you can add it as a default animation to the state machine. This is in particular useful when the properties assigned (or restored) by specific states is not known when the machine is constructed.</source>
          <target state="translated">如前所述,您可以将动画添加到转场中,以确保目标状态中的属性分配是动画。如果您希望无论采取哪种转场方式,特定的动画都将用于给定的属性,您可以将其作为默认动画添加到状态机中。当构建状态机时,不知道特定状态分配(或恢复)的属性时,这一点特别有用。</target>
        </trans-unit>
        <trans-unit id="78bd01a484cf2b9d5bd79ff5c06bedaecdb7a54f" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt5-intro.html#multimedia&quot;&gt;Multimedia&lt;/a&gt; overview, Qt Multimedia uses the GStreamer multimedia framework as the backend for audio and video playback on Linux. The minimum required version of GStreamer is 0.10.24. The 1.x series is also supported.</source>
          <target state="translated">如&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt5-intro.html#multimedia&quot;&gt;Multimedia&lt;/a&gt;概述中所述，Qt Multimedia使用GStreamer多媒体框架作为Linux上音频和视频播放的后端。GStreamer的最低要求版本为0.10.24。还支持1.x系列。</target>
        </trans-unit>
        <trans-unit id="91518b4cefcc15aae37f56837ddc9baf1eaa942b" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qt5-intro.html#multimedia&quot;&gt;Multimedia&lt;/a&gt; overview, Qt Multimedia uses the GStreamer multimedia framework as the backend for audio and video playback on Linux. The minimum required version of GStreamer is 0.10.24. The 1.x series is also supported.</source>
          <target state="translated">如&lt;a href=&quot;https://doc.qt.io/qt-5.15/qt5-intro.html#multimedia&quot;&gt;Multimedia&lt;/a&gt;概述中所述，Qt Multimedia使用GStreamer多媒体框架作为Linux上音频和视频播放的后端。GStreamer的最低要求版本为0.10.24。还支持1.x系列。</target>
        </trans-unit>
        <trans-unit id="907c7ec10d943c9ac0a46e5302735bc14779b04a" translate="yes" xml:space="preserve">
          <source>As different position sources are available on different platforms and devices, these are categorized by their basic type (Satellite, NonSatellite, and AllPositioningMethods). The available methods for the current platform can be enumerated in the &lt;a href=&quot;qml-qtpositioning-positionsource#supportedPositioningMethods-prop&quot;&gt;supportedPositioningMethods&lt;/a&gt; property.</source>
          <target state="translated">由于不同的位置和来源在不同的平台和设备上可用，因此按其基本类型（卫星，非卫星和AllPositioningMethods）进行分类。当前平台的可用方法可以在&lt;a href=&quot;qml-qtpositioning-positionsource#supportedPositioningMethods-prop&quot;&gt;supportedPositioningMethods&lt;/a&gt;属性中枚举。</target>
        </trans-unit>
        <trans-unit id="d33215b6eb121bc79dc9759565d123bb00349b7d" translate="yes" xml:space="preserve">
          <source>As display resolutions improve, a scalable application UI becomes more and more important. One of the approaches to achieve this is to maintain several copies of the UI for different screen resolutions, and load the appropriate one depending on the available resolution. Although this works pretty well, it adds to the maintenance overhead.</source>
          <target state="translated">随着显示分辨率的提高,一个可扩展的应用UI变得越来越重要。实现这一目标的方法之一是为不同的屏幕分辨率维护多个UI副本,并根据可用的分辨率加载相应的UI。虽然这种方法效果不错,但却增加了维护的开销。</target>
        </trans-unit>
        <trans-unit id="78e7e77c94f602064f7512ab2dd39e931cb8cfa7" translate="yes" xml:space="preserve">
          <source>As documented above, passing arguments is done like this:</source>
          <target state="translated">如上文所述,传递参数是这样做的。</target>
        </trans-unit>
        <trans-unit id="6f68e5f667079fcbd12efef41a1536d08e865049" translate="yes" xml:space="preserve">
          <source>As each item is positioned along the path, it will be rotated accordingly: an item at the beginning of the path with be not be rotated, an item at the end of the path will be rotated 90 degrees, and an item mid-way along the path will be rotated 45 degrees.</source>
          <target state="translated">当每个项目沿着路径定位时,它将被相应地旋转:路径开头的项目不旋转,路径末端的项目将旋转90度,路径中间的项目将旋转45度。</target>
        </trans-unit>
        <trans-unit id="4d8092e5f37be8cb59e1f0172d9b2829973bd770" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;qtquickcontrols2-customize#definition-of-a-style&quot;&gt;Definition of a Style&lt;/a&gt;, when you implement your own style for a control, you start off with the relevant template for that control. For example, a style's &lt;code&gt;Button.qml&lt;/code&gt; will be structured similarly to this:</source>
          <target state="translated">如&lt;a href=&quot;qtquickcontrols2-customize#definition-of-a-style&quot;&gt;样式定义中所述&lt;/a&gt;，当您为控件实现自己的样式时，您将从该控件的相关模板开始。例如，样式的 &lt;code&gt;Button.qml&lt;/code&gt; 的结构将与此类似：</target>
        </trans-unit>
        <trans-unit id="861b1e52071780e34475f74bb1740de8a6475295" translate="yes" xml:space="preserve">
          <source>As for ClampToEdge but also blends samples at 0 and 1 with a fixed border color. Equivalent to GL_CLAMP_TO_BORDER</source>
          <target state="translated">和ClampToEdge一样,但也会在0和1处用固定的边框颜色混合样本,相当于GL_CLAMP_TO_BORDER。相当于GL_CLAMP_TO_BORDER。</target>
        </trans-unit>
        <trans-unit id="489756ab6af4bb3f5d866c9af89a60d617a7a7a5" translate="yes" xml:space="preserve">
          <source>As for the OpenGL headers, note that in most cases there will be no need to directly include any headers like GL.h. The OpenGL-related Qt headers will include qopengl.h which will in turn include an appropriate header for the system. This might be an OpenGL ES 3.x or 2.0 header, the highest version that is available, or a system-provided gl.h. In addition, a copy of the extension headers (called glext.h on some systems) is provided as part of Qt both for OpenGL and OpenGL ES. These will get included automatically on platforms where feasible. This means that constants and function pointer typedefs from ARB, EXT, OES extensions are automatically available.</source>
          <target state="translated">至于OpenGL头文件,请注意在大多数情况下,不需要直接包含任何头文件,比如GL.h。OpenGL相关的Qt头文件将包含qopengl.h,而qopengl.h又将包含一个适当的系统头文件,这可能是OpenGL ES 3.x或2.0头文件,是可用的最高版本,或系统提供的gl.h。这可能是OpenGL ES 3.x或2.0的头文件,是可用的最高版本,或者是系统提供的gl.h。此外,Qt还为OpenGL和OpenGL ES提供了扩展头文件的副本(在某些系统上称为glext.h)。在可行的情况下,这些头文件将被自动包含在平台上。这意味着ARB,EXT,OES扩展中的常量和函数指针类型定义都会自动提供。</target>
        </trans-unit>
        <trans-unit id="d50557d0d19a426698ae7938601d4626b0b5ca0f" translate="yes" xml:space="preserve">
          <source>As it can be seen in the example, the main patterns in &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; usage are:</source>
          <target state="translated">从示例中可以看出，&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;用法的主要模式是：</target>
        </trans-unit>
        <trans-unit id="a1c844fb55d3078b245dfb37301a6fb1be70ea3c" translate="yes" xml:space="preserve">
          <source>As it can be seen in the example, the main patterns in QVulkanWindow usage are:</source>
          <target state="translated">从例子中可以看出,QVulkanWindow的使用模式主要有。</target>
        </trans-unit>
        <trans-unit id="e2cbb3412cfa11fa400d2042ce868ec63ec4797e" translate="yes" xml:space="preserve">
          <source>As it is inherited from Popup, Menu supports &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt;. By default, all of the built-in styles specify &lt;code&gt;0&lt;/code&gt; for Menu's margins to ensure that the menu is kept within the bounds of the window. To allow a menu to go outside of the window (to animate it moving into view, for example), set the margins property to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">因为它是从Popup继承的，所以Menu支持&lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt;。默认情况下，所有内置样式均将Menu的边距指定为 &lt;code&gt;0&lt;/code&gt; ，以确保将菜单保留在窗口的范围内。要允许菜单进入窗口之外（例如，使菜单动画进入视图），请将margins属性设置为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04c2e61ea3a70bcef0b5bcd6d6e0dd251f40caa8" translate="yes" xml:space="preserve">
          <source>As item coordinates are relative to the visual parent, they can be affected by changes to the visual hierarchy. See the &lt;a href=&quot;qtquick-visualcanvas-coordinates&quot;&gt;Visual Coordinates&lt;/a&gt; concept page for more detail.</source>
          <target state="translated">由于项目坐标是相对于视觉父级的，因此它们可能会受到视觉层次结构更改的影响。有关更多详细信息，请参见&amp;ldquo;&lt;a href=&quot;qtquick-visualcanvas-coordinates&quot;&gt;视觉坐标&amp;rdquo;&lt;/a&gt;概念页面。</target>
        </trans-unit>
        <trans-unit id="a3804e05753d87efd96930eede46d873ac4b9420" translate="yes" xml:space="preserve">
          <source>As item coordinates are relative to the visual parent, they can be affected by changes to the visual hierarchy. See the &lt;a href=&quot;qtquick-visualcanvas-coordinates#&quot;&gt;Visual Coordinates&lt;/a&gt; concept page for more detail.</source>
          <target state="translated">由于项目坐标是相对于视觉父级的，因此它们可能会受到视觉层次结构更改的影响。有关更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;qtquick-visualcanvas-coordinates#&quot;&gt;视觉坐标&amp;rdquo;&lt;/a&gt;概念页面。</target>
        </trans-unit>
        <trans-unit id="66d9f61cd79e723319436c749804aa211e9990d0" translate="yes" xml:space="preserve">
          <source>As long as no special locale has been set, this is either the parent's locale or (if this widget is a top level widget), the default locale.</source>
          <target state="translated">只要没有设置特殊的locale,这就是父辈的locale或(如果此小组件是顶层小组件)默认locale。</target>
        </trans-unit>
        <trans-unit id="0d7562e6e80c6bec5b6cf3c7303cabae888bbc8d" translate="yes" xml:space="preserve">
          <source>As long as one profile has</source>
          <target state="translated">只要一个配置文件有</target>
        </trans-unit>
        <trans-unit id="31771cf7889c576bb0045b26111ec89c137f881e" translate="yes" xml:space="preserve">
          <source>As long as one profile has this option enabled, all other profiles will be able to use it for certificate verification. Only one profile at a time can have this option enabled. It is recommended that the profile has a disk HTTP cache to avoid needlessly re-downloading.</source>
          <target state="translated">只要一个配置文件启用了这个选项,其他所有配置文件都可以使用它进行证书验证。一次只能有一个配置文件启用此选项。建议配置文件有一个磁盘 HTTP 缓存,以避免不必要的重新下载。</target>
        </trans-unit>
        <trans-unit id="c96c1b2238372f73f620d630a822f0fe4ed71178" translate="yes" xml:space="preserve">
          <source>As mentioned above &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s iterator classes have exactly the same API as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s. We will now turn to &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;, which is somewhat different because it iterates on (key, value) pairs.</source>
          <target state="translated">如上所述，&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;的迭代器类具有与&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;完全相同的API 。现在，我们转向&lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;，它有所不同，因为它在（键，值）对上进行迭代。</target>
        </trans-unit>
        <trans-unit id="002c4e8870afe05bd95ad7ebb6b17435ad918766" translate="yes" xml:space="preserve">
          <source>As mentioned above, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;'s, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s iterator classes have exactly the same API as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s. We will now turn to &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;, which is somewhat different because it iterates on (key, value) pairs.</source>
          <target state="translated">如上所述，&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;的，&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;的和&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;的迭代器类具有与&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;完全相同的API 。现在，我们转向&lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;，它有所不同，因为它在（键，值）对上进行迭代。</target>
        </trans-unit>
        <trans-unit id="81a21b6a2caa3fb1706b7044f9398496bbe4cdbb" translate="yes" xml:space="preserve">
          <source>As mentioned above, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides a lot of functions and operators that make it easy to interoperate with &lt;code&gt;const char *&lt;/code&gt; strings. But this functionality is a double-edged sword: It makes &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; more convenient to use if all strings are US-ASCII or Latin-1, but there is always the risk that an implicit conversion from or to &lt;code&gt;const char *&lt;/code&gt; is done using the wrong 8-bit encoding. To minimize these risks, you can turn off these implicit conversions by defining the following two preprocessor symbols:</source>
          <target state="translated">如上所述，&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;提供了许多函数和运算符，可轻松与 &lt;code&gt;const char *&lt;/code&gt; 字符串进行互操作。但是，此功能是一把双刃剑：如果所有字符串都是US-ASCII或Latin-1，它使&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;更加方便使用，但是始终存在使用错误的方式从隐式转换为 &lt;code&gt;const char *&lt;/code&gt; 的隐式转换的风险。8位编码。为了将这些风险降到最低，您可以通过定义以下两个预处理器符号来关闭这些隐式转换：</target>
        </trans-unit>
        <trans-unit id="2234adfe08eca0c20b72ebfc9aa79b29023e7600" translate="yes" xml:space="preserve">
          <source>As mentioned above, QLinkedList's, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s iterator classes have exactly the same API as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s. We will now turn to &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;, which is somewhat different because it iterates on (key, value) pairs.</source>
          <target state="translated">如上所述，QLinkedList，&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;和&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;的迭代器类具有与&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;完全相同的API 。现在，我们转向&lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;，它有所不同，因为它在（键，值）对上进行迭代。</target>
        </trans-unit>
        <trans-unit id="ad3c0426db7f481859ae08284fc77ab2d8467e94" translate="yes" xml:space="preserve">
          <source>As mentioned above, QString provides a lot of functions and operators that make it easy to interoperate with &lt;code&gt;const char *&lt;/code&gt; strings. But this functionality is a double-edged sword: It makes QString more convenient to use if all strings are US-ASCII or Latin-1, but there is always the risk that an implicit conversion from or to &lt;code&gt;const char *&lt;/code&gt; is done using the wrong 8-bit encoding. To minimize these risks, you can turn off these implicit conversions by defining some of the following preprocessor symbols:</source>
          <target state="translated">如上所述，QString提供了许多函数和运算符，使它们易于与 &lt;code&gt;const char *&lt;/code&gt; 字符串进行互操作。但是，此功能是一把双刃剑：如果所有字符串都是US-ASCII或Latin-1，它使QString更加方便使用，但是始终存在使用错误的方式从隐式转换为 &lt;code&gt;const char *&lt;/code&gt; 的隐患。8位编码。为了将这些风险降到最低，您可以通过定义以下一些预处理器符号来关闭这些隐式转换：</target>
        </trans-unit>
        <trans-unit id="c889bb24d5bfcb492d0a94a2cbe6ab76a065ac43" translate="yes" xml:space="preserve">
          <source>As mentioned above, QString provides a lot of functions and operators that make it easy to interoperate with &lt;code&gt;const char *&lt;/code&gt; strings. But this functionality is a double-edged sword: It makes QString more convenient to use if all strings are US-ASCII or Latin-1, but there is always the risk that an implicit conversion from or to &lt;code&gt;const char *&lt;/code&gt; is done using the wrong 8-bit encoding. To minimize these risks, you can turn off these implicit conversions by defining the following two preprocessor symbols:</source>
          <target state="translated">如上所述，QString提供了许多函数和运算符，使它们易于与 &lt;code&gt;const char *&lt;/code&gt; 字符串进行互操作。但是，此功能是一把双刃剑：如果所有字符串都是US-ASCII或Latin-1，它使QString更加方便使用，但是始终存在使用错误的方式从隐式转换为 &lt;code&gt;const char *&lt;/code&gt; 的隐患。8位编码。为了将这些风险降到最低，您可以通过定义以下两个预处理器符号来关闭这些隐式转换：</target>
        </trans-unit>
        <trans-unit id="bb8b100197ae92be540c33ca3c3a18d757a58d0f" translate="yes" xml:space="preserve">
          <source>As mentioned above, enabling touch events means multiple widgets can be receiving touch events simultaneously. Combined with the default &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() handling for QTouchEvents, this gives you great flexibility in designing touch user interfaces. Be aware of the implications. For example, it is possible that the user is moving a &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; with one finger and pressing a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; with another. The signals emitted by these widgets will be interleaved.</source>
          <target state="translated">如上所述，启用触摸事件意味着多个窗口小部件可以同时接收触摸事件。结合QTouchEvent 的默认&lt;a href=&quot;qwidget#event&quot;&gt;QWidget :: event&lt;/a&gt;（）处理，可以为您设计触摸用户界面提供极大的灵活性。注意其中的含义。例如，用户可能用一根手指移动&lt;a href=&quot;qslider&quot;&gt;QSlider，而&lt;/a&gt;用另一根手指按下&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;。这些小部件发出的信号将被交织。</target>
        </trans-unit>
        <trans-unit id="e27c2c7f1a131f4e8e3e5ba33bedce5cd8cd5bad" translate="yes" xml:space="preserve">
          <source>As mentioned above, it is possible that several widgets can be receiving QTouchEvents at the same time. However, Qt makes sure to never send duplicate &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; events to the same widget, which could theoretically happen during propagation if, for example, the user touched 2 separate widgets in a &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; and both widgets ignored the &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; event.</source>
          <target state="translated">如上所述，可能有多个窗口小部件可以同时接收QTouchEvent。但是，Qt确保永远不要将重复的&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchBegin&lt;/a&gt;事件发送到同一窗口小部件，例如，如果用户触摸了&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox中的&lt;/a&gt; 2个单独的窗口小部件，并且两个窗口小部件都忽略了&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: &lt;/a&gt;TouchBegin事件，则理论上在传播期间可能会发生此事件。</target>
        </trans-unit>
        <trans-unit id="842f60ca18c98159f9759ca7612c939b63965419" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, some sequence types are fast (for example, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;qreal&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;bool&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;, &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; and &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;&amp;gt;) while others will be much slower. Aside from using these types wherever possible instead of slower types, there are some other performance-related semantics you need to be aware of to achieve the best performance.</source>
          <target state="translated">如前所述，某些序列类型很快（例如&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt;，&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;qreal&amp;gt;，&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;bool&amp;gt;，&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt;，&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;和&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;gt;），而另一些则慢得多。除了尽可能使用这些类型而不是较慢的类型之外，还需要了解一些其他与性能相关的语义，以实现最佳性能。</target>
        </trans-unit>
        <trans-unit id="413f8bb6617d772b733f618e8bca7fd5ef11ac7c" translate="yes" xml:space="preserve">
          <source>As mentioned in the &lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;Fallback Mechanism&lt;/a&gt; section, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; stores settings for an application in up to four locations, depending on whether the settings are user-specific or system-wide and whether the settings are application-specific or organization-wide. For simplicity, we're assuming the organization is called MySoft and the application is called Star Runner.</source>
          <target state="translated">如&amp;ldquo; &lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;后备机制&amp;rdquo;&lt;/a&gt;部分所述，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;最多将应用程序的设置存储在四个位置，具体取决于设置是用户特定的还是系统范围的，以及设置是特定于应用程序的还是组织范围的。为了简单起见，我们假设该组织称为MySoft，而该应用程序称为Star Runner。</target>
        </trans-unit>
        <trans-unit id="4a582ccf62f0b3d6d7e220ab3d152e785d0177ab" translate="yes" xml:space="preserve">
          <source>As mentioned in the &lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;Fallback Mechanism&lt;/a&gt; section, QSettings stores settings for an application in up to four locations, depending on whether the settings are user-specific or system-wide and whether the settings are application-specific or organization-wide. For simplicity, we're assuming the organization is called MySoft and the application is called Star Runner.</source>
          <target state="translated">如&amp;ldquo;&lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;后备机制&amp;rdquo;&lt;/a&gt;部分所述，QSettings会将应用程序的设置存储在最多四个位置，具体取决于设置是用户特定的还是系统范围的，以及设置是特定于应用程序的还是组织范围的。为简单起见，我们假设该组织称为MySoft，而该应用程序称为Star Runner。</target>
        </trans-unit>
        <trans-unit id="59b29575bf97efd6cf0e380e5a427a5042993f47" translate="yes" xml:space="preserve">
          <source>As mentioned in the documentation for &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;, &lt;code&gt;implicitWidth&lt;/code&gt; and &lt;code&gt;implicitHeight&lt;/code&gt; properties need to be set. This is so that the needle can be positioned properly. We always scale items by the &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt; property of the style, ensuring the control resizes gracefully.</source>
          <target state="translated">如&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;文档中所述，需要设置 &lt;code&gt;implicitWidth&lt;/code&gt; 和 &lt;code&gt;implicitHeight&lt;/code&gt; 属性。这样可以正确放置针。我们总是通过样式的&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;externalRadius&lt;/a&gt;属性来缩放项目，以确保控件能够正常调整大小。</target>
        </trans-unit>
        <trans-unit id="2c73f69dd3ecef2136f58b17125e12e11ebeaf9a" translate="yes" xml:space="preserve">
          <source>As mentioned in the documentation for &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;, &lt;code&gt;implicitWidth&lt;/code&gt; needs to be set when defining your own value bar.</source>
          <target state="translated">如&lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;文档中所述，定义自己的值栏时需要设置 &lt;code&gt;implicitWidth&lt;/code&gt; 宽度。</target>
        </trans-unit>
        <trans-unit id="75374d7df1668bbaacf5dffb82c2b7af658e31eb" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Qt is offering classes that makes it easy to use OpenGL in Qt applications. For example, the &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; enables the OpenGL API for rendering with &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;.</source>
          <target state="translated">如前所述，Qt提供了可轻松在Qt应用程序中使用OpenGL的类。例如，&lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt;启用OpenGL API以使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;进行渲染。</target>
        </trans-unit>
        <trans-unit id="eb8514c32d9fe77e8e0fe4ca4e6881d7cdd5c555" translate="yes" xml:space="preserve">
          <source>As mentioned previously, the development workflow consists of maintaining a normal &lt;code&gt;.pro&lt;/code&gt; file project and exporting it to Xcode.</source>
          <target state="translated">如前所述，开发工作流程包括维护一个正常的 &lt;code&gt;.pro&lt;/code&gt; 文件项目并将其导出到Xcode。</target>
        </trans-unit>
        <trans-unit id="0bfbd65474a5e18aa6c766d023047ecf56dbb147" translate="yes" xml:space="preserve">
          <source>As mentioned previously, you must have Xcode installed.</source>
          <target state="translated">如前所述,你必须安装Xcode。</target>
        </trans-unit>
        <trans-unit id="f5efce2190a3fa7f47a42983fe443a3543946698" translate="yes" xml:space="preserve">
          <source>As mentioned, a tree structure is built from the accessible objects of an application. By navigating through the tree, the clients can access all elements in the UI. Object relations give clients information about the UI. For instance, a slider handle is a child of the slider to which it belongs. &lt;a href=&quot;qaccessible#RelationFlag-enum&quot;&gt;QAccessible::Relation&lt;/a&gt; describes the various relationships the clients can ask objects for.</source>
          <target state="translated">如前所述，树结构是从应用程序的可访问对象构建的。通过在树中导航，客户端可以访问UI中的所有元素。对象关系为客户提供有关UI的信息。例如，滑块手柄是它所属的滑块的子代。&lt;a href=&quot;qaccessible#RelationFlag-enum&quot;&gt;QAccessible :: Relation&lt;/a&gt;描述了客户端可以请求对象的各种关系。</target>
        </trans-unit>
        <trans-unit id="6eb6dfb23cfc2cd2dc5a66c3e1900545bf5c2efd" translate="yes" xml:space="preserve">
          <source>As mentioned, the style calculates the size of the widget's contents, which the widgets calculate their size hints from. In addition, complex controls also use the style to test which sub-controls the mouse is over.</source>
          <target state="translated">如前所述,该样式计算小组件内容的大小,小组件从中计算其大小提示。此外,复杂的控件也使用该样式来测试鼠标在哪个子控件上。</target>
        </trans-unit>
        <trans-unit id="86d2ba9ecac6357d5ccfea9fd802209a5c931c21" translate="yes" xml:space="preserve">
          <source>As model manipulation in Qt is done via row and column indices, and because object keys are unordered, each column must be specified via &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodelcolumn&quot;&gt;TableModelColumn&lt;/a&gt;. This allows mapping Qt's built-in roles to any property in each row object.</source>
          <target state="translated">由于Qt中的模型操作是通过行和列索引完成的，并且由于对象键是无序的，因此必须通过&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodelcolumn&quot;&gt;TableModelColumn&lt;/a&gt;指定每列。这允许将Qt的内置角色映射到每个行对象中的任何属性。</target>
        </trans-unit>
        <trans-unit id="96ec771177724b9285cdfaacb71d52b1794dce5c" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;QtQuick 1.1&lt;/code&gt;, this method accepts an optional</source>
          <target state="translated">从 &lt;code&gt;QtQuick 1.1&lt;/code&gt; 开始，此方法接受可选</target>
        </trans-unit>
        <trans-unit id="da31871d3911fae6e231bbfb632ec219b2e229e8" translate="yes" xml:space="preserve">
          <source>As of Qt 4.2, the unique ID is the same regardless of the orientation of the pen. Earlier versions would report a different value when using the eraser-end versus the pen-end of the stylus on some OS's.</source>
          <target state="translated">从 Qt 4.2 开始,无论笔的方向如何,唯一的 ID 都是一样的。早期的版本在某些操作系统上,当使用橡皮擦端和触控笔端时,会报告一个不同的值。</target>
        </trans-unit>
        <trans-unit id="363909d9e3537691b78aebe9f4dc2964d1a5e138" translate="yes" xml:space="preserve">
          <source>As of Qt 5.11, headless mode via DRM render nodes is supported. This allows performing GPU compute (OpenGL compute shaders, OpenCL) or offscreen OpenGL rendering without needing DRM master privileges. In this mode, applications can function even when there is already another process outputting to the screen.</source>
          <target state="translated">从Qt 5.11开始,支持通过DRM渲染节点的无头模式。这允许在不需要DRM主控权限的情况下执行GPU计算(OpenGL计算着色器,OpenCL)或离屏OpenGL渲染。在这种模式下,即使已经有另一个进程输出到屏幕上,应用程序也能正常运行。</target>
        </trans-unit>
        <trans-unit id="58d3498b0d26d621ce28ccc9cc34a3013c373163" translate="yes" xml:space="preserve">
          <source>As of Qt 5.11, screen cloning (mirroring) is supported. This is enabled via the &lt;code&gt;clones&lt;/code&gt; property:</source>
          <target state="translated">从Qt 5.11开始，支持屏幕克隆（镜像）。这是通过 &lt;code&gt;clones&lt;/code&gt; 属性启用的：</target>
        </trans-unit>
        <trans-unit id="de7cef78c878d264af7cc4518489aacd6eec83dc" translate="yes" xml:space="preserve">
          <source>As of Qt 5.12 Shape.NvprRenderer is disabled by default and a uniform behavior, based on triangulating the path and generating &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; instances, is used regardless of the graphics card and drivers.</source>
          <target state="translated">从Qt 5.12开始，默认情况下，Shape.NvprRenderer处于禁用状态，并且基于图形化路径并生成&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;实例的统一行为不受图形卡和驱动程序的影响。</target>
        </trans-unit>
        <trans-unit id="5e13761e0850786724fe482f4f489d14e8e4b19b" translate="yes" xml:space="preserve">
          <source>As of Qt 5.12 Shape.NvprRenderer is disabled by default and a uniform behavior, based on triangulating the path and generating &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; instances, is used regardless of the graphics card and drivers. To enable using vendor-specific path rendering approaches set the value to &lt;code&gt;true&lt;/code&gt;. Depending on the platform and content, this can lead to improved performance. Setting the value to &lt;code&gt;true&lt;/code&gt; is safe in any case since rendering falls back to the default method when the vendor-specific approach, such as &lt;code&gt;GL_NV_path_rendering&lt;/code&gt;, is not supported at run time.</source>
          <target state="translated">从Qt 5.12开始，默认情况下，Shape.NvprRenderer处于禁用状态，并且基于图形化路径并生成&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;实例的统一行为被使用，而与图形卡和驱动程序无关。要启用使用特定于供应商的路径呈现方法，请将其值设置为 &lt;code&gt;true&lt;/code&gt; 。根据平台和内容，这可以导致性能提高。在任何情况下，将值设置为 &lt;code&gt;true&lt;/code&gt; 都是安全的，因为在运行时不支持特定于供应商的方法（例如 &lt;code&gt;GL_NV_path_rendering&lt;/code&gt; )时，渲染将退回到默认方法。</target>
        </trans-unit>
        <trans-unit id="6f1949e480a7858c47a022532f290ed611d92635" translate="yes" xml:space="preserve">
          <source>As of Qt 5.7 this backend shares many of its internal implementation with the GBM-based backend. This means that multiple screens and the advanced configuration via &lt;code&gt;QT_QPA_EGLFS_KMS_CONFIG&lt;/code&gt; are supported. Some settings, such as &lt;code&gt;hwcursor&lt;/code&gt; and &lt;code&gt;pbuffers&lt;/code&gt; are not applicable however.</source>
          <target state="translated">从Qt 5.7开始，此后端与基于GBM的后端共享许多内部实现。这意味着支持多个屏幕以及通过 &lt;code&gt;QT_QPA_EGLFS_KMS_CONFIG&lt;/code&gt; 进行的高级配置。但是某些设置（例如 &lt;code&gt;hwcursor&lt;/code&gt; 和 &lt;code&gt;pbuffers&lt;/code&gt; )不适用。</target>
        </trans-unit>
        <trans-unit id="b9e634ae2b6dbe8da9c7dd5c9b7ada24ee6870e8" translate="yes" xml:space="preserve">
          <source>As of Qt 5.9, support for caching program binaries on disk is built in. To enable this, switch to using &lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceCode&quot;&gt;addCacheableShaderFromSourceCode&lt;/a&gt;() and &lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceFile&quot;&gt;addCacheableShaderFromSourceFile&lt;/a&gt;(). With an OpenGL ES 3.x context or support for &lt;code&gt;GL_ARB_get_program_binary&lt;/code&gt;, this will transparently cache program binaries under &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::GenericCacheLocation&lt;/a&gt; or &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::CacheLocation&lt;/a&gt;. When support is not available, calling the cacheable function variants is equivalent to the normal ones.</source>
          <target state="translated">从Qt 5.9开始，内置了对磁盘上的程序二进制文件进行缓存的支持。要启用此功能，请切换为使用&lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceCode&quot;&gt;addCacheableShaderFromSourceCode&lt;/a&gt;（）和&lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceFile&quot;&gt;addCacheableShaderFromSourceFile&lt;/a&gt;（）。使用OpenGL ES 3.x上下文或对 &lt;code&gt;GL_ARB_get_program_binary&lt;/code&gt; 的支持，这将在&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths :: GenericCacheLocation&lt;/a&gt;或&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths :: CacheLocation&lt;/a&gt;下透明地缓存程序二进制文件。如果无法提供支持，则调用可缓存函数变体与普通变体等效。</target>
        </trans-unit>
        <trans-unit id="447f717e2266f7759adfc3c89a2edd9d42d79f51" translate="yes" xml:space="preserve">
          <source>As of Qt 5.9, the behavior of EGLFS and &lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt; have been synchronized, with regards to the window sizing policy: the first top-level window is forced to cover the entire screen, with both platform plugins. If this is not desired, set the &lt;code&gt;QT_QPA_FB_FORCE_FULLSCREEN&lt;/code&gt; environment variable to &lt;code&gt;0&lt;/code&gt; to restore the behavior from earlier Qt versions.</source>
          <target state="translated">从Qt 5.9 开始，就窗口大小调整策略而言，EGLFS和&lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;的行为已同步：使用两个平台插件，第一个顶级窗口被迫覆盖整个屏幕。如果不希望这样做，请将 &lt;code&gt;QT_QPA_FB_FORCE_FULLSCREEN&lt;/code&gt; 环境变量设置为 &lt;code&gt;0&lt;/code&gt; ,以从早期的Qt版本恢复行为。</target>
        </trans-unit>
        <trans-unit id="9e696d10283412598864a21f88e8429e27e52880" translate="yes" xml:space="preserve">
          <source>As of Qt 5.9, the behavior of EGLFS and &lt;a href=&quot;embedded-linux#linuxfb&quot;&gt;LinuxFB&lt;/a&gt; have been synchronized, with regards to the window sizing policy: the first top-level window is forced to cover the entire screen, with both platform plugins. If this is not desired, set the &lt;code&gt;QT_QPA_FB_FORCE_FULLSCREEN&lt;/code&gt; environment variable to &lt;code&gt;0&lt;/code&gt; to restore the behavior from earlier Qt versions.</source>
          <target state="translated">从Qt 5.9开始，就窗口大小调整策略而言，EGLFS和&lt;a href=&quot;embedded-linux#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;的行为已同步：使用两个平台插件，第一个顶级窗口被迫覆盖整个屏幕。如果不希望这样做，请将 &lt;code&gt;QT_QPA_FB_FORCE_FULLSCREEN&lt;/code&gt; 环境变量设置为 &lt;code&gt;0&lt;/code&gt; ,以从早期的Qt版本恢复行为。</target>
        </trans-unit>
        <trans-unit id="904fcee57d2478d5cd1542e59e176d420e0e2100" translate="yes" xml:space="preserve">
          <source>As of Qt 6.0 there are no vendor-specific rendering paths implemented.</source>
          <target state="translated">在Qt 6.0中,没有实现特定厂商的渲染路径。</target>
        </trans-unit>
        <trans-unit id="258ee3be661e079ac38d15108e2b158f8cdd6f23" translate="yes" xml:space="preserve">
          <source>As of Qt 6.0, keyboard, mouse, and touch input is not passed to the 2D items, so they will be non-interactive.</source>
          <target state="translated">从Qt 6.0开始,键盘、鼠标和触摸输入都不会传递给2D项目,所以它们将是非交互式的。</target>
        </trans-unit>
        <trans-unit id="21a4840bd4bdd335e24c48ff02f3fceae88389bc" translate="yes" xml:space="preserve">
          <source>As of Qt 6.0, this flag is not used in practice and is ignored. Native graphics resource ownership is not transferable to the wrapping &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;, because Qt Quick may not have the necessary details on how such an object and the associated memory should be freed.</source>
          <target state="translated">从Qt 6.0开始，该标志在实践中不使用，将被忽略。原始图形资源的所有权不可转让给包装的&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;，因为Qt Quick可能没有关于如何释放此类对象和关联内存的必要详细信息。</target>
        </trans-unit>
        <trans-unit id="0fa56734bef7df212a0bdc27bc322ad97adbbe64" translate="yes" xml:space="preserve">
          <source>As of Qt 6.0, this value is ignored.</source>
          <target state="translated">从Qt 6.0开始,这个值被忽略了。</target>
        </trans-unit>
        <trans-unit id="9ed4c1930acaac4e3df87a5ab8afbf50bdaf9cb1" translate="yes" xml:space="preserve">
          <source>As of this writing, there were no cases where combining the two was required.</source>
          <target state="translated">截至本报告撰写之时,还没有需要将两者结合起来的情况。</target>
        </trans-unit>
        <trans-unit id="3786b6dd28873c479134bc216612e0662dfa6008" translate="yes" xml:space="preserve">
          <source>As our solutions were being adopted into new environments, we saw an escalating need for easier integration with a wider range of enterprise applications.</source>
          <target state="translated">随着我们的解决方案被采用到新的环境中,我们看到了与更广泛的企业应用程序更容易集成的升级需求。</target>
        </trans-unit>
        <trans-unit id="a8c88dd2657894e3cd5fa0851c5cfd125995ca56" translate="yes" xml:space="preserve">
          <source>As particle systems benefit from stochastic control of parameters across a large number of instances, several stochastic helper types are used by the particle system. If you do not wish to have any stochastic variation in these parameters, then do not specify any variation in these types.</source>
          <target state="translated">由于粒子系统受益于大量实例中参数的随机控制,粒子系统使用了几种随机辅助类型。如果你不希望这些参数有任何随机变化,那么就不要指定这些类型的任何变化。</target>
        </trans-unit>
        <trans-unit id="f3b747f45b9296b376c5e37ea21686eb86582d9b" translate="yes" xml:space="preserve">
          <source>As per CAN bus specification, frames of type &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;remote transfer request (RTR)&lt;/a&gt; do not have a payload, but a length from 0 to 8 (including). This length indicates the expected response payload length from the remote party. Therefore when sending a RTR frame using this function it may still be required to set an arbitrary payload on</source>
          <target state="translated">根据CAN总线规范，&lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;远程传输请求（RTR）&lt;/a&gt;类型的帧没有有效载荷，但长度为0到8（包括）。该长度指示来自远程方的预期响应有效载荷长度。因此，使用此功能发送RTR帧时，仍然可能需要在</target>
        </trans-unit>
        <trans-unit id="6de6833e69d2bc54ca2bc3632a87ad479c1873cb" translate="yes" xml:space="preserve">
          <source>As previously noted, there are two kinds of values which may be assigned to a property:</source>
          <target state="translated">如前所述,有两种值可以分配给一个属性。</target>
        </trans-unit>
        <trans-unit id="6f9b6bc239bbcf05a411e51d559f8f7bcd0d149c" translate="yes" xml:space="preserve">
          <source>As seen in the above example, properties is specified as a comma-separated string of property names to animate.</source>
          <target state="translated">如上例所示,properties是以逗号分隔的属性名字符串来指定的。</target>
        </trans-unit>
        <trans-unit id="20d539d8441b5daed332c17747f7a25305dbd2cf" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt; is typically populated with a static set of pages that are defined inline as children of the view. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; pages dynamically at run time.</source>
          <target state="translated">如上所示，&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;通常填充有一组静态页面，这些页面内联定义为视图的子级。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;删除&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="b5daa3387b834f4bd43ffeabf61a8d98e713210b" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt; is typically populated with a static set of tab buttons that are defined inline as children of the tab bar. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically at run time. The items can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">如上所示，&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;通常填充有一组静态的选项卡按钮，这些按钮被内联定义为选项卡栏的子项。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;删除&lt;/a&gt;项目。可以使用&lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt（）&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;访问这些项目。</target>
        </trans-unit>
        <trans-unit id="6be2028fc8f1c13dd22d7fba6fa40d9781f9d8e4" translate="yes" xml:space="preserve">
          <source>As shown above, QDoc generates a notification when a class is declared reentrant, and lists the exceptions (the declared nonreentrant functions). A link to the general documentation on &lt;a href=&quot;#reentrant&quot;&gt;reentrancy and thread-safety&lt;/a&gt; is included. In addition a warning, &quot;&lt;b&gt;Warning&lt;/b&gt;: This function is not reentrant.&quot;, is generated in the nonreentrant functions' documentation.</source>
          <target state="translated">如上所示，当一个类被声明为可重入时，QDoc会生成一个通知，并列出异常（声明的不可重入函数）。包含有关&lt;a href=&quot;#reentrant&quot;&gt;可重入和线程安全&lt;/a&gt;的常规文档的链接。此外，在非可重入函数的文档中还会生成一条警告&amp;ldquo; &lt;b&gt;警告&lt;/b&gt;：该函数不可重入。&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7249f680fc27ca21b46b243d8861f64dd97a7356" translate="yes" xml:space="preserve">
          <source>As shown above, QDoc generates a notification when a class is declared reentrant, and lists the exceptions (the declared nonreentrant functions). A link to the general documentation on &lt;a href=&quot;17-qdoc-commands-thread#reentrant&quot;&gt;reentrancy and thread-safety&lt;/a&gt; is included. In addition a warning, &quot;&lt;b&gt;Warning&lt;/b&gt;: This function is not reentrant.&quot;, is generated in the nonreentrant functions' documentation.</source>
          <target state="translated">如上所示，当一个类被声明为可重入时，QDoc会生成一个通知，并列出异常（已声明的不可重入函数）。包含指向有关&lt;a href=&quot;17-qdoc-commands-thread#reentrant&quot;&gt;可重入和线程安全&lt;/a&gt;的常规文档的链接。此外，在非可重入函数的文档中还会生成一条警告&amp;ldquo;&lt;b&gt;警告&lt;/b&gt;：该函数不可重入。&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ed7886e92ecc9b719c77ef6df23e37a3502e37fa" translate="yes" xml:space="preserve">
          <source>As shown above, SwipeView is typically populated with a static set of pages that are defined inline as children of the view. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; pages dynamically at run time.</source>
          <target state="translated">如上所示，SwipeView通常填充有一组静态页面，这些页面内联定义为视图的子级。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;删除&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="ab1a68db213fceb6d8bf8e905b7f019292e13b93" translate="yes" xml:space="preserve">
          <source>As shown above, SwipeView is typically populated with a static set of pages that are defined inline as children of the view. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;remove&lt;/a&gt; pages dynamically at run time.</source>
          <target state="translated">如上所示，SwipeView通常填充有一组静态页面，这些页面内联定义为视图的子级。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;删除&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="1a2e25376fc939e171e52630ba26ceb7cb0f7ea5" translate="yes" xml:space="preserve">
          <source>As shown above, TabBar is typically populated with a static set of tab buttons that are defined inline as children of the tab bar. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically at run time. The items can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">如上所示，TabBar通常填充有一组静态的选项卡按钮，这些按钮内联定义为选项卡栏的子项。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;删除&lt;/a&gt;项目。可以使用&lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt（）&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;访问这些项目。</target>
        </trans-unit>
        <trans-unit id="65dad8af3190f937c6565fbc3ef0a28ed41f7a94" translate="yes" xml:space="preserve">
          <source>As shown above, TabBar is typically populated with a static set of tab buttons that are defined inline as children of the tab bar. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically at run time. The items can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">如上所示，TabBar通常填充有一组静态的选项卡按钮，这些按钮内联定义为选项卡栏的子项。还可以在运行时动态&lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;添加&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;移动&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;删除&lt;/a&gt;项目。可以使用&lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt（）&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;访问这些项目。</target>
        </trans-unit>
        <trans-unit id="7261fb07fb087264244429dac377b9680163ffec" translate="yes" xml:space="preserve">
          <source>As shown above, enumeration types (e.g. &lt;code&gt;TextType&lt;/code&gt;) and values (e.g. &lt;code&gt;Normal&lt;/code&gt;) must begin with an uppercase letter.</source>
          <target state="translated">如上所示，枚举类型（例如 &lt;code&gt;TextType&lt;/code&gt; ）和值（例如 &lt;code&gt;Normal&lt;/code&gt; ）必须以大写字母开头。</target>
        </trans-unit>
        <trans-unit id="e71eeda01f4c477f0b6b57cdf1676f186ab39884" translate="yes" xml:space="preserve">
          <source>As shown here, the end result with an empty MAIN() is exactly the same as before.</source>
          <target state="translated">如图所示,使用空的main()的最终结果与之前完全相同。</target>
        </trans-unit>
        <trans-unit id="e7dd921467245a37c355363aea34246456ddfa94" translate="yes" xml:space="preserve">
          <source>As soon as possible. This value was added in Qt 5.6.</source>
          <target state="translated">尽快。这个数值是在Qt 5.6中增加的。</target>
        </trans-unit>
        <trans-unit id="0d3f2e8517421aa15632d4e927c6a0e1bc56aa6b" translate="yes" xml:space="preserve">
          <source>As special cases, the &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; and &lt;a href=&quot;qcontiguouscache&quot;&gt;QContiguousCache&lt;/a&gt; classes provide efficient hash-lookup of objects in a limited cache storage.</source>
          <target state="translated">作为特殊情况，&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt;和&lt;a href=&quot;qcontiguouscache&quot;&gt;QContiguousCache&lt;/a&gt;类在有限的缓存存储中提供了对象的有效哈希查找。</target>
        </trans-unit>
        <trans-unit id="ef567737800bf5672dae577f1fd2091ed2fcc1fe" translate="yes" xml:space="preserve">
          <source>As stated above, an action group is &lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;exclusive&lt;/a&gt; by default; it ensures that only one checkable action is active at any one time. If you want to group checkable actions without making them exclusive, you can turn of exclusiveness by calling &lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;setExclusive&lt;/a&gt;(false).</source>
          <target state="translated">如上所述，默认情况下，操作组是&lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;排他&lt;/a&gt;的；它可以确保在任何一次仅激活一项可检查的操作。如果要对可检查的操作进行分组而不使它们排他，则可以通过调用&lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;setExclusive&lt;/a&gt;（false）来取消排他性。</target>
        </trans-unit>
        <trans-unit id="eaef981adafeed79c00f3d07110deba7dcd03c66" translate="yes" xml:space="preserve">
          <source>As stated above, an action group is exclusive by default; it ensures that at most only one checkable action is active at any one time. If you want to group checkable actions without making them exclusive, you can turn off exclusiveness by calling &lt;a href=&quot;qactiongroup#setExclusive&quot;&gt;setExclusive&lt;/a&gt;(false).</source>
          <target state="translated">如上所述，默认情况下，操作组是排他的；它可以确保在任何时候最多只有一个可检查的操作处于活动状态。如果要对可检查操作进行分组而不使它们排他，则可以通过调用&lt;a href=&quot;qactiongroup#setExclusive&quot;&gt;setExclusive&lt;/a&gt;（false）关闭排他性。</target>
        </trans-unit>
        <trans-unit id="45a765d5c611c1243bc18a28faa9d3f32e1ce316" translate="yes" xml:space="preserve">
          <source>As stated in the beginning, understanding the finer details of the renderer is not required to get good performance. It is written to optimize for common use cases and will perform quite well under almost any circumstances.</source>
          <target state="translated">正如一开始所说的,了解渲染器的更多细节并不是获得良好性能的必要条件。它的编写是为了优化常见的用例,几乎在任何情况下都会有很好的表现。</target>
        </trans-unit>
        <trans-unit id="42d941de4b7fd67188f4223a4a5ebe304ab68022" translate="yes" xml:space="preserve">
          <source>As stated, the various &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; properties provide details specific to the individual item being transitioned as well as the operation that triggered the transition. In the animation above, five items are inserted in succession at index 0. When the fifth and final insertion takes place, adding &quot;Item 4&quot; to the view, the &lt;code&gt;add&lt;/code&gt; transition is run once (for the inserted item) and the &lt;code&gt;displaced&lt;/code&gt; transition is run four times (once for each of the four existing items in the view).</source>
          <target state="translated">如前所述，各种&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;属性提供特定于要转换的单个项目以及触发转换的操作的详细信息。在上面的动画中，在索引0处连续插入了五个项目。在进行第五次也是最后一次插入时，向视图添加&amp;ldquo; Item 4&amp;rdquo;， &lt;code&gt;add&lt;/code&gt; 过渡运行一次（对于插入的项目），而 &lt;code&gt;displaced&lt;/code&gt; 过渡为运行四次（对于视图中的四个现有项目，每个运行一次）。</target>
        </trans-unit>
        <trans-unit id="53036297337fde603e8ee4a7974232f6cd5d8fe0" translate="yes" xml:space="preserve">
          <source>As stated, the various ViewTransition properties provide details specific to the individual item being transitioned as well as the operation that triggered the transition. In the animation above, five items are inserted in succession at index 0. When the fifth and final insertion takes place, adding &quot;Item 4&quot; to the view, the &lt;code&gt;add&lt;/code&gt; transition is run once (for the inserted item) and the &lt;code&gt;displaced&lt;/code&gt; transition is run four times (once for each of the four existing items in the view).</source>
          <target state="translated">如前所述，各种ViewTransition属性提供特定于要转换的单个项目以及触发转换的操作的详细信息。在上面的动画中，在索引0处连续插入了五个项目。在进行第五次也是最后一次插入时，向视图添加&amp;ldquo; Item 4&amp;rdquo;， &lt;code&gt;add&lt;/code&gt; 过渡运行一次（对于插入的项目），而 &lt;code&gt;displaced&lt;/code&gt; 过渡为运行四次（对于视图中的四个现有项目，每个运行一次）。</target>
        </trans-unit>
        <trans-unit id="14dfb6580dcb33dd351b0c723fa35b4ef316f01b" translate="yes" xml:space="preserve">
          <source>As the &lt;a href=&quot;qml-qtquick-particles-particlepainter&quot;&gt;ParticlePainter&lt;/a&gt; is the QML type visualizing the particles in the scene, it is its Z value which is important when trying to place particles above or below other types visually.</source>
          <target state="translated">由于&lt;a href=&quot;qml-qtquick-particles-particlepainter&quot;&gt;ParticlePainter&lt;/a&gt;是QML类型，用于可视化场景中的粒子，因此，当尝试将粒子视觉上放置在其他类型之上或之下时，它的Z值很重要。</target>
        </trans-unit>
        <trans-unit id="704669c2da7ddbb1fea7f9a57a96b64eb4b1fa4e" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Foo&lt;/code&gt; type is instantiated in QML, it must be registered with the version of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qqmlengine-obsolete.html#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() that takes an element name.</source>
          <target state="translated">由于在QML中实例化了 &lt;code&gt;Foo&lt;/code&gt; 类型，因此必须使用带有元素名称的&lt;a href=&quot;https://doc.qt.io/qt-5.15/qqmlengine-obsolete.html#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）版本进行注册。</target>
        </trans-unit>
        <trans-unit id="8c88a1f5e9d6d0be8078752b1b31c11c809c5b7d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Foo&lt;/code&gt; type is instantiated in QML, it must be registered with the version of &lt;a href=&quot;qqmlengine#qmlRegisterType&quot;&gt;qmlRegisterType&lt;/a&gt;() that takes an element name.</source>
          <target state="translated">由于在QML中实例化了 &lt;code&gt;Foo&lt;/code&gt; 类型，因此必须使用带有元素名称的&lt;a href=&quot;qqmlengine#qmlRegisterType&quot;&gt;qmlRegisterType&lt;/a&gt;（）版本进行注册。</target>
        </trans-unit>
        <trans-unit id="8b3d4b2e454ff43962d5206cb68716ddcd8795d8" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Foo&lt;/code&gt; type is instantiated in QML, it must be registered with the version of qmlRegisterType() that takes an import URI.</source>
          <target state="translated">由于 &lt;code&gt;Foo&lt;/code&gt; 类型是在QML中实例化的，因此必须使用带有导入URI的qmlRegisterType（）版本进行注册。</target>
        </trans-unit>
        <trans-unit id="30f68cca73e134d1819df7cc9068098e769b59db" translate="yes" xml:space="preserve">
          <source>As the Java style tabs don't overlap, we also present an image of a tab widget in the common style. Note that if you want the tabs to overlap horizontally, you do that when drawing the tabs in &lt;code&gt;CE_TabBarTabShape&lt;/code&gt;; the tabs bounding rectangles will not be altered by the tab bar. The tabs are drawn from left to right in a north tab bar shape, top to bottom in an east tab bar shape, etc. The selected tab is drawn last, so that it is easy to draw it over the other tabs (if it is to be bigger).</source>
          <target state="translated">由于Java样式选项卡不重叠，因此我们还将以通用样式显示选项卡小部件的图像。请注意，如果希望选项卡水平重叠，请在 &lt;code&gt;CE_TabBarTabShape&lt;/code&gt; 中绘制选项卡时执行此操作；选项卡边界矩形将不会被选项卡栏更改。这些选项卡以北选项卡栏形状从左到右绘制，以东部选项卡栏形状从上到下等等。最后绘制所选的选项卡，这样很容易将其绘制在其他选项卡上（如果是更大）。</target>
        </trans-unit>
        <trans-unit id="35d9f09a7455495172aaa1e3fea6f31ddc7c4223" translate="yes" xml:space="preserve">
          <source>As the OpenGL documentation explains; The alpha test discards a fragment conditional on the outcome of a comparison between the incoming fragment's alpha value and a constant reference value.</source>
          <target state="translated">正如OpenGL文档所解释的那样;alpha测试会根据传入片段的alpha值和一个常量参考值之间的比较结果,有条件地丢弃一个片段。</target>
        </trans-unit>
        <trans-unit id="36e4cf675bc1a6be48722226b43f207daba83efa" translate="yes" xml:space="preserve">
          <source>As the SAX2 standard suggests, &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; defaults to having</source>
          <target state="translated">正如SAX2标准所建议的，&lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt;默认为</target>
        </trans-unit>
        <trans-unit id="607635cad4dbb481b90ce5525b8a28c88f732a77" translate="yes" xml:space="preserve">
          <source>As the area of a &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt; is the area it follows, a separate shape can be provided to be the shape it emits out of. This shape has width and height specified by &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitWidth-prop&quot;&gt;emitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitHeight-prop&quot;&gt;emitHeight&lt;/a&gt;, and is centered on the followed particle's position.</source>
          <target state="translated">由于&lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;的面积就是其跟随的面积，因此可以提供单独的形状作为其发出的形状。此形状的宽度和高度由&lt;a href=&quot;qml-qtquick-particles-trailemitter#emitWidth-prop&quot;&gt;emitWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-particles-trailemitter#emitHeight-prop&quot;&gt;emitHeight&lt;/a&gt;指定，并以跟随的粒子的位置为中心。</target>
        </trans-unit>
        <trans-unit id="c043aa7614cb21ecfaefa2b6117c76eed6fc3dbf" translate="yes" xml:space="preserve">
          <source>As the code snippet above illustrates, you can use this function to avoid emitting a signal that nobody listens to.</source>
          <target state="translated">如上面的代码片段所示,你可以使用这个函数来避免发出一个没有人听的信号。</target>
        </trans-unit>
        <trans-unit id="3809eb24ca5564266c680c6a21b1c9ad885b5109" translate="yes" xml:space="preserve">
          <source>As the example shows, unlike JSON, CBOR requires no escaping for binary content.</source>
          <target state="translated">正如这个例子所示,与JSON不同,CBOR不需要对二进制内容进行转义。</target>
        </trans-unit>
        <trans-unit id="ef78968fcd60e74d674f69748efeb24d26ed482b" translate="yes" xml:space="preserve">
          <source>As the expansion is performed after reading in all variables, the order in which they are defined does not matter.</source>
          <target state="translated">由于扩展是在读入所有变量后进行的,所以定义变量的顺序并不重要。</target>
        </trans-unit>
        <trans-unit id="6d1c6cd29ec3676cd908e2cfa5e493b62ef75677" translate="yes" xml:space="preserve">
          <source>As the expression will not have an associated &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, this will be a null expression object and its value will always be an invalid &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="translated">由于表达式没有关联的&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;，因此它将是一个空表达式对象，并且其值始终是无效的&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d9a6743d3c664049f394847711891bd457d293b" translate="yes" xml:space="preserve">
          <source>As the expression will not have an associated &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, this will be a null expression object and its value will always be an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="translated">由于表达式没有关联的&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;，因此它将是一个空表达式对象，并且其值始终是无效的&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="142fe1bdd9e1c8ee90637fe482874b9ceefa8f87" translate="yes" xml:space="preserve">
          <source>As the fillWidth item will automatically be resized to fit the extra space, explicit assignments to its width and height properties will be ignored (but &lt;a href=&quot;qml-qtquick-layouts-layout#minimumWidth-attached-prop&quot;&gt;Layout.minimumWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-layouts-layout#maximumWidth-attached-prop&quot;&gt;Layout.maximumWidth&lt;/a&gt; will still be respected). The initial sizes of other items should be set via their width and height properties. Any binding assignment to an item's width or height will be broken as soon as the user drags that item's splitter handle.</source>
          <target state="translated">由于fillWidth项将自动调整大小以适应额外的空间，因此将忽略对其width和height属性的明确分配（但仍然会考虑&lt;a href=&quot;qml-qtquick-layouts-layout#minimumWidth-attached-prop&quot;&gt;Layout.minimumWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-layouts-layout#maximumWidth-attached-prop&quot;&gt;Layout.maximumWidth&lt;/a&gt;）。其他项目的初始尺寸应通过其width和height属性设置。用户拖动该项目的拆分器手柄后，对该项目的宽度或高度的任何绑定分配都将被破坏。</target>
        </trans-unit>
        <trans-unit id="5aedbe5ab8412a1b9878a1ce22eacc2975f964de" translate="yes" xml:space="preserve">
          <source>As the generic iterators don't actually instantiate a &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; on each step, they cannot return a reference to one from operator*(). QVariantRef provides the same functionality as an actual reference to a &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; would, but is backed by a pointer given as template parameter. The template is implemented for pointers of type QSequentialIterator and QAssociativeIterator.</source>
          <target state="translated">由于泛型迭代器实际上并未在每个步骤上实例化&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;，因此它们无法从operator *（）返回对一个的引用。QVariantRef提供的功能与对&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;的实际引用相同，但由作为模板参数给出的指针提供支持。该模板是针对QSequentialIterator和QAssociativeIterator类型的指针实现的。</target>
        </trans-unit>
        <trans-unit id="db39dc0ad46b7c7ac02fc7af54f97046e0220df1" translate="yes" xml:space="preserve">
          <source>As the life time of &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; can be longer than the playback of one &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt;, this property may change over time, the &lt;a href=&quot;qmediaplayer#audioAvailableChanged&quot;&gt;audioAvailableChanged&lt;/a&gt; signal can be used to monitor it's status.</source>
          <target state="translated">由于&lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;的生存时间可以长于一个&lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt;的播放时间，因此此属性可能会随时间而变化，因此&lt;a href=&quot;qmediaplayer#audioAvailableChanged&quot;&gt;audioAvailableChanged&lt;/a&gt;信号可用于监视其状态。</target>
        </trans-unit>
        <trans-unit id="21836ee22337af62029dd3c7fc36cf40bfca7483" translate="yes" xml:space="preserve">
          <source>As the module is header-only, no further modifications to the .pro files are required to use it.</source>
          <target state="translated">由于该模块只有头,所以不需要进一步修改.pro文件就可以使用它。</target>
        </trans-unit>
        <trans-unit id="1e099999d6d28eb183765a2684958f47aab736ab" translate="yes" xml:space="preserve">
          <source>As the name implies, &lt;a href=&quot;qml-qt3d-render-sceneloader&quot;&gt;SceneLoader&lt;/a&gt; loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the Mesh instead.</source>
          <target state="translated">顾名思义，&lt;a href=&quot;qml-qt3d-render-sceneloader&quot;&gt;SceneLoader&lt;/a&gt;加载完整的场景子树。如果要加载单个几何图形，则应改为使用&amp;ldquo;网格&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7136d0733258a47b05cdde9d590939f4f8410393" translate="yes" xml:space="preserve">
          <source>As the name implies, &lt;a href=&quot;qt3drender-qsceneloader&quot;&gt;Qt3DRender::QSceneLoader&lt;/a&gt; loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the &lt;a href=&quot;qt3drender-qmesh&quot;&gt;Qt3DRender::QMesh&lt;/a&gt; instead.</source>
          <target state="translated">顾名思义，&lt;a href=&quot;qt3drender-qsceneloader&quot;&gt;Qt3DRender :: QSceneLoader&lt;/a&gt;加载完整的场景子树。如果要加载单个几何图形，则应改用&lt;a href=&quot;qt3drender-qmesh&quot;&gt;Qt3DRender :: QMesh&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba3d7561ccd2bc0b4dae02e3c9b434aaf98d3f1e" translate="yes" xml:space="preserve">
          <source>As the name implies, SceneLoader loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the Mesh instead.</source>
          <target state="translated">顾名思义,SceneLoader加载一个完整的场景子树。如果你想加载一个单一的几何体,你应该使用Mesh来代替。</target>
        </trans-unit>
        <trans-unit id="8fae417b8e6e7c6c79a79ad589e798e8d93ab936" translate="yes" xml:space="preserve">
          <source>As the name implies, single execution mode uses a single QDoc process to generate all the Qt5 documentation. The single QDoc process still performs a</source>
          <target state="translated">顾名思义,单执行模式使用一个QDoc进程来生成所有的Qt5文档。单个QDoc进程仍然会执行一个</target>
        </trans-unit>
        <trans-unit id="9d9dfd95773720c8ec58b4ded4245d5e56e31b8e" translate="yes" xml:space="preserve">
          <source>As the name suggests, required properties must be set when an instance of the object is created. Violation of this rule will result in QML applications not starting if it can be detected statically. In case of dynamically instantiated QML components (for instance via &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt;), violating this rule results in a warning and a null return value.</source>
          <target state="translated">顾名思义，创建对象的实例时必须设置必需的属性。如果可以静态检测到该规则，则将导致QML应用程序无法启动。对于动态实例化的QML组件（例如，通过&lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent（）&lt;/a&gt;），违反此规则将导致警告和空值返回。</target>
        </trans-unit>
        <trans-unit id="d431a06e5d5c018cf83e72cb0f2a95d25a6d6902" translate="yes" xml:space="preserve">
          <source>As the names suggest, many of these map to similarly named &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt; properties, with the same meaning and semantics, following the &lt;a href=&quot;https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material&quot;&gt;metallic-roughness material model&lt;/a&gt;. It is up the custom material implementation to decide how these values are calculated: for example, a value for &lt;a href=&quot;qml-qtquick3d-principledmaterial#base-color&quot;&gt;BASE_COLOR&lt;/a&gt; can be hard coded in the shader, can be based on sampling a texture, or can be calculated based on QML properties exposed as uniforms or on interpolated data passed along from the vertex shader.</source>
          <target state="translated">顾名思义，这些中的许多都遵循&lt;a href=&quot;https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material&quot;&gt;金属粗糙度材料模型&lt;/a&gt;映射到具有相同含义和语义的相似命名的&lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt;属性。由定制材料实现决定如何计算这些值：例如，可以在着色器中对&lt;a href=&quot;qml-qtquick3d-principledmaterial#base-color&quot;&gt;BASE_COLOR&lt;/a&gt;的值进行硬编码，可以基于对纹理的采样，或者可以基于暴露为统一或从顶点着色器传递的插值数据。</target>
        </trans-unit>
        <trans-unit id="9dca82c4bbf323214060e920f4ec5a34ceff2154" translate="yes" xml:space="preserve">
          <source>As the point of view changes, the &lt;a href=&quot;qml-qt3d-render-levelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; property will change to reflect matching value in the range array.</source>
          <target state="translated">随着视角的变化，&lt;a href=&quot;qml-qt3d-render-levelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;属性将更改以反映range数组中的匹配值。</target>
        </trans-unit>
        <trans-unit id="fccae1bf1134f1e8ca70b6aed0cb2562faa3bb73" translate="yes" xml:space="preserve">
          <source>As the point of view changes, the &lt;a href=&quot;qt3drender-qlevelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; property will change to reflect matching value in the range array.</source>
          <target state="translated">随着视角的变化，&lt;a href=&quot;qt3drender-qlevelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;属性将更改以反映range数组中的匹配值。</target>
        </trans-unit>
        <trans-unit id="c6d138431e812197c3658b0f3420951b3faf7cae" translate="yes" xml:space="preserve">
          <source>As the previous example shows, exposing a texture to the vertex, fragment, or both shaders is very similar to scalar and vector uniform values: a QML property with the type &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; will automatically get associated with a &lt;code&gt;sampler2D&lt;/code&gt; in the shader code. As always, there is no need to declare this sampler in the shader code.</source>
          <target state="translated">如前面的例子示出了，露出了纹理到顶点，片段，或两者的着色器是非常相似的标量和矢量均匀值：a QML属性与类型&lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt;将自动与一相关联的获得 &lt;code&gt;sampler2D&lt;/code&gt; 在着色器代码。与往常一样，无需在着色器代码中声明此采样器。</target>
        </trans-unit>
        <trans-unit id="199bec2b4d0145e60a68eb76f60da0f139a80e22" translate="yes" xml:space="preserve">
          <source>As the properties of these frontend objects are updated, one or more backend nodes are created and placed into a scenegraph. Because rendering 3D scenes involves a lot more state than rendering 2D, there is a separate set of specialized scene graph nodes for representing the state of the 3D scene objects. This scene graph is know as the Qt Quick Spatial Scene Graph.</source>
          <target state="translated">当这些前端对象的属性被更新时,就会创建一个或多个后端节点,并放入场景图中。由于渲染3D场景比渲染2D涉及到更多的状态,所以有一套单独的专门的场景图节点来表示3D场景对象的状态。这个场景图被称为Qt Quick Spatial Scene Graph。</target>
        </trans-unit>
        <trans-unit id="b102bdfcc5003101739adbaa5da053c42574dd7d" translate="yes" xml:space="preserve">
          <source>As the structure of splitters are simple and do not contain any sub elements, we do not include any images of splitters. &lt;code&gt;CE_Splitter&lt;/code&gt; does not use any other elements or metrics.</source>
          <target state="translated">由于拆分器的结构很简单，并且不包含任何子元素，因此我们不包含拆分器的任何图像。 &lt;code&gt;CE_Splitter&lt;/code&gt; 不使用任何其他元素或度量。</target>
        </trans-unit>
        <trans-unit id="08b33c3f9f805ff5773e89011e1e3742047b77fb" translate="yes" xml:space="preserve">
          <source>As they are shared, .pragma library files cannot access QML component instance objects or properties directly, although QML values can be passed as function parameters.</source>
          <target state="translated">由于它们是共享的,所以.pragma库文件不能直接访问QML组件实例对象或属性,尽管QML值可以作为函数参数传递。</target>
        </trans-unit>
        <trans-unit id="8a66b9840c4e1c65d580c9e732a661e7fae3671c" translate="yes" xml:space="preserve">
          <source>As this number doesn't include any formatting markup it may not be the same as the length of the string returned by the &lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="translated">由于此数字不包含任何格式标记，因此它可能与&lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt;属性返回的字符串的长度不同。</target>
        </trans-unit>
        <trans-unit id="8e79eea69d3b2cd9d5971b5f4e6a1d5ed015d15f" translate="yes" xml:space="preserve">
          <source>As this number doesn't include any formatting markup, it may not be the same as the length of the string returned by the &lt;a href=&quot;qml-qtquick-controls-textarea#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="translated">由于此数字不包含任何格式标记，因此它可能与&lt;a href=&quot;qml-qtquick-controls-textarea#text-prop&quot;&gt;text&lt;/a&gt;属性返回的字符串的长度不同。</target>
        </trans-unit>
        <trans-unit id="e52fb5208dba817370e6574c93bcc33595747ac2" translate="yes" xml:space="preserve">
          <source>As this property only affects the &lt;code&gt;implicitWidth&lt;/code&gt; of the &lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt;, setting an explicit &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; can still result in eliding.</source>
          <target state="translated">由于此属性仅影响&lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt;的 &lt;code&gt;implicitWidth&lt;/code&gt; ，因此设置显式&lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;宽度&lt;/a&gt;仍会导致省略。</target>
        </trans-unit>
        <trans-unit id="fa583af295097756e03534ef635a42dd0b39aed0" translate="yes" xml:space="preserve">
          <source>As we have seen in the previous section, we can configure the behavior of the reader when it comes to namespace processing. This is done by setting and unsetting the</source>
          <target state="translated">正如我们在上一节中所看到的,我们可以配置阅读器在处理命名空间时的行为。这可以通过设置和取消设置</target>
        </trans-unit>
        <trans-unit id="b471fdd9426893d17b4d9c7ddae8dfb898565d64" translate="yes" xml:space="preserve">
          <source>As well as presenting data, views handle navigation between items, and some aspects of item selection. The views also implement basic user interface features, such as context menus and drag and drop. A view can provide default editing facilities for items, or it may work with a &lt;a href=&quot;#delegate-classes&quot;&gt;delegate&lt;/a&gt; to provide a custom editor.</source>
          <target state="translated">除了显示数据外，视图还可以处理项目之间的导航以及项目选择的某些方面。这些视图还实现了基本的用户界面功能，例如上下文菜单和拖放功能。视图可以提供项目的默认编辑功能，也可以与&lt;a href=&quot;#delegate-classes&quot;&gt;委托&lt;/a&gt;一起使用以提供自定义编辑器。</target>
        </trans-unit>
        <trans-unit id="fd53574b652450b445f79326a136a3859556da47" translate="yes" xml:space="preserve">
          <source>As well as presenting data, views handle navigation between items, and some aspects of item selection. The views also implement basic user interface features, such as context menus and drag and drop. A view can provide default editing facilities for items, or it may work with a &lt;a href=&quot;model-view-programming#delegate-classes&quot;&gt;delegate&lt;/a&gt; to provide a custom editor.</source>
          <target state="translated">除了显示数据外，视图还处理项目之间的导航以及项目选择的某些方面。这些视图还实现了基本的用户界面功能，例如上下文菜单和拖放功能。视图可以提供项目的默认编辑功能，也可以与&lt;a href=&quot;model-view-programming#delegate-classes&quot;&gt;委托&lt;/a&gt;一起使用以提供自定义编辑器。</target>
        </trans-unit>
        <trans-unit id="c7f892a5ec7510a8d63c21666f702f1f96f1c02d" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-virtualkeyboard-qmlmodule.html&quot;&gt;all other QML types&lt;/a&gt; provided by the module, the &lt;code&gt;QT_IM_MODULE&lt;/code&gt; environment variable must be set to &lt;code&gt;qtvirtualkeyboard&lt;/code&gt; before using &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputpanel&quot;&gt;InputPanel&lt;/a&gt;. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#loading-the-plugin&quot;&gt;Loading the Plugin&lt;/a&gt;.</source>
          <target state="translated">与模块提供的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-virtualkeyboard-qmlmodule.html&quot;&gt;所有其他QML类型&lt;/a&gt; &lt;code&gt;qtvirtualkeyboard&lt;/code&gt; 在使用&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputpanel&quot;&gt;InputPanel&lt;/a&gt;之前，必须将 &lt;code&gt;QT_IM_MODULE&lt;/code&gt; 环境变量设置为qtvirtualkeyboard。有关更多信息，请参阅&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#loading-the-plugin&quot;&gt;加载插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3272523de559043750c571d85c31ea16dc1d1f7a" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-virtualkeyboard-qmlmodule.html&quot;&gt;all other QML types&lt;/a&gt; provided by the module, the &lt;code&gt;QT_IM_MODULE&lt;/code&gt; environment variable must be set to &lt;code&gt;qtvirtualkeyboard&lt;/code&gt; before using InputPanel. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-deployment-guide.html#loading-the-plugin&quot;&gt;Loading the Plugin&lt;/a&gt;.</source>
          <target state="translated">与模块提供的&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-virtualkeyboard-qmlmodule.html&quot;&gt;所有其他QML类型&lt;/a&gt; &lt;code&gt;qtvirtualkeyboard&lt;/code&gt; 在使用InputPanel之前，必须将 &lt;code&gt;QT_IM_MODULE&lt;/code&gt; 环境变量设置为qtvirtualkeyboard。有关更多信息，请参阅&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-deployment-guide.html#loading-the-plugin&quot;&gt;加载插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70107fd1daa7f285681be3488ef8e841a8073e16" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt; the parameters can directly be embedded in the function string.</source>
          <target state="translated">与&lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall一样&lt;/a&gt;，参数可以直接嵌入函数字符串中。</target>
        </trans-unit>
        <trans-unit id="ad2d2acbf84f81265a143b60cb3999fd31e8e802" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;qwidget#close&quot;&gt;QWidget::close&lt;/a&gt;(), done() deletes the dialog if the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_DeleteOnClose&lt;/a&gt; flag is set. If the dialog is the application's main widget, the application terminates. If the dialog is the last window closed, the &lt;a href=&quot;qguiapplication#lastWindowClosed&quot;&gt;QApplication::lastWindowClosed&lt;/a&gt;() signal is emitted.</source>
          <target state="translated">与&lt;a href=&quot;qwidget#close&quot;&gt;QWidget :: close&lt;/a&gt;（）一样，如果设置了&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_DeleteOnClose&lt;/a&gt;标志，则done（）会删除对话框。如果对话框是应用程序的主窗口小部件，则该应用程序终止。如果对话框是最后关闭的窗口，则发出&lt;a href=&quot;qguiapplication#lastWindowClosed&quot;&gt;QApplication :: lastWindowClosed&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="3dca5b4347978e782f2aae49dca48505a34acc8c" translate="yes" xml:space="preserve">
          <source>As with Flickable, there are several things to keep in mind when using &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;:</source>
          <target state="translated">与Flickable一样，使用&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;时要牢记以下几点：</target>
        </trans-unit>
        <trans-unit id="334a3eef44a246b9b1311bc27d58b2e428bc6a80" translate="yes" xml:space="preserve">
          <source>As with Flickable, there are several things to keep in mind when using ScrollView:</source>
          <target state="translated">和Flickable一样,在使用ScrollView时也要注意几个问题。</target>
        </trans-unit>
        <trans-unit id="8dca9237d1f1e146e87a17add20746942e0809ca" translate="yes" xml:space="preserve">
          <source>As with a plain &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;, &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, and finally the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, if the connection is successful. The handshake then starts automatically, and if it succeeds, the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() signal is emitted to indicate the socket has entered the encrypted state and is ready for use.</source>
          <target state="translated">作为具有简单的&lt;a href=&quot;qtcpsocket&quot;&gt;与QTcpSocket&lt;/a&gt;，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;，&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;，最后是&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;，如果连接是成功的。然后握手自动开始，如果成功，则发出&lt;a href=&quot;qsslsocket#encrypted&quot;&gt;加密&lt;/a&gt;（）信号，以指示套接字已进入加密状态并可以使用。</target>
        </trans-unit>
        <trans-unit id="bb6c87093b5a562912ce8816d7f5e0a65875655c" translate="yes" xml:space="preserve">
          <source>As with a plain &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, QSslSocket enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;, &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, and finally the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, if the connection is successful. The handshake then starts automatically, and if it succeeds, the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() signal is emitted to indicate the socket has entered the encrypted state and is ready for use.</source>
          <target state="translated">与普通的&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;一样，如果连接成功，则QSslSocket会输入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;，&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;和最后的&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;。然后握手自动开始，如果成功，则发出&lt;a href=&quot;qsslsocket#encrypted&quot;&gt;加密&lt;/a&gt;（）信号，指示套接字已进入加密状态并准备使用。</target>
        </trans-unit>
        <trans-unit id="ab7eee76ce23e99a1bb82b5e58bcbabae983998f" translate="yes" xml:space="preserve">
          <source>As with any application accessing other content beyond its control, a QML application should perform appropriate checks on any untrusted data it loads. &lt;b&gt;Do not, for example, use &lt;code&gt;import&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; or &lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to load any untrusted code or content.&lt;/b&gt;</source>
          <target state="translated">与任何应用程序访问其控制之外的其他内容一样，QML应用程序应对其加载的所有不受信任的数据执行适当的检查。&lt;b&gt;例如，请勿使用 &lt;code&gt;import&lt;/code&gt; ，&lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt;或&lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;加载任何不受信任的代码或内容。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="58fa63db0b17176c614933a229ff302283cae279" translate="yes" xml:space="preserve">
          <source>As with many text editors, the plain text editor widget can be configured to insert or overwrite existing text with new text entered by the user.</source>
          <target state="translated">与许多文本编辑器一样,纯文本编辑器小组件可以被配置为插入或用用户输入的新文本覆盖现有文本。</target>
        </trans-unit>
        <trans-unit id="bf53e840238f62fd7ed7c78c847f3a401bdd1e65" translate="yes" xml:space="preserve">
          <source>As with many text editors, the text editor widget can be configured to insert or overwrite existing text with new text entered by the user.</source>
          <target state="translated">与许多文本编辑器一样,文本编辑器小组件可以被配置为插入或用用户输入的新文本覆盖现有文本。</target>
        </trans-unit>
        <trans-unit id="488a779e80ab224b087f57e53c24d09fb57b50b3" translate="yes" xml:space="preserve">
          <source>As with other &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; subclasses, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; object is used to paint onto an instance of this class:</source>
          <target state="translated">与其他&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;子类一样，使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;对象将其绘制到此类的实例上：</target>
        </trans-unit>
        <trans-unit id="bbd92f9df1e3b0526ecbe7d7bcd25ace5713b3af" translate="yes" xml:space="preserve">
          <source>As with property values and method parameters, a signal parameter must have a type that is supported by the QML engine; see &lt;a href=&quot;qtqml-cppintegration-data&quot;&gt;Data Type Conversion Between QML and C++&lt;/a&gt;. (Using an unregistered type will not generate an error, but the parameter value will not be accessible from the handler.)</source>
          <target state="translated">与属性值和方法参数一样，信号参数必须具有QML引擎支持的类型。请参见&lt;a href=&quot;qtqml-cppintegration-data&quot;&gt;QML和C ++之间的数据类型转换&lt;/a&gt;。（使用未注册的类型不会产生错误，但是无法从处理程序中访问参数值。）</target>
        </trans-unit>
        <trans-unit id="aa3f8396bda2a8f40ac61cfb94922f811947f41e" translate="yes" xml:space="preserve">
          <source>As with property values and method parameters, a signal parameter must have a type that is supported by the QML engine; see &lt;a href=&quot;qtqml-cppintegration-data#&quot;&gt;Data Type Conversion Between QML and C++&lt;/a&gt;. (Using an unregistered type will not generate an error, but the parameter value will not be accessible from the handler.)</source>
          <target state="translated">与属性值和方法参数一样，信号参数必须具有QML引擎支持的类型。请参见&lt;a href=&quot;qtqml-cppintegration-data#&quot;&gt;QML和C ++之间的数据类型转换&lt;/a&gt;。（使用未注册的类型不会产生错误，但是无法从处理程序中访问参数值。）</target>
        </trans-unit>
        <trans-unit id="09de86e376e3caa9b80f7461aea890fc690e099a" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; delegates, it sits behind both &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;. However, a &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; whose &lt;code&gt;behind&lt;/code&gt; has been set can be continuously swiped from either side, and will always show the same item.</source>
          <target state="translated">由于与 &lt;code&gt;left&lt;/code&gt; 和 &lt;code&gt;right&lt;/code&gt; 的代表，它坐在后面都&lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;背景&lt;/a&gt;。然而，&lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt;其 &lt;code&gt;behind&lt;/code&gt; 已经设置可连续从两侧刷卡，并显示了相同的项目。</target>
        </trans-unit>
        <trans-unit id="f59cdc42e366c3032c136cba2e0c06c1cb9980a2" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, &lt;a href=&quot;qopengltimerquery&quot;&gt;QOpenGLTimerQuery&lt;/a&gt; has a &lt;a href=&quot;qopengltimerquery#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="translated">与其他Qt OpenGL类一样，&lt;a href=&quot;qopengltimerquery&quot;&gt;QOpenGLTimerQuery&lt;/a&gt;具有&lt;a href=&quot;qopengltimerquery#create&quot;&gt;create&lt;/a&gt;（）函数来创建基础OpenGL对象。这是为了允许开发人员确保当时存在有效的当前OpenGL上下文。</target>
        </trans-unit>
        <trans-unit id="5e5dfdcce60e6c71c9f6f941d80b07dc06e9af38" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt; has a &lt;a href=&quot;qopenglvertexarrayobject#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="translated">与其他Qt OpenGL类一样，&lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt;具有&lt;a href=&quot;qopenglvertexarrayobject#create&quot;&gt;create&lt;/a&gt;（）函数来创建基础OpenGL对象。这是为了允许开发人员确保当时存在有效的当前OpenGL上下文。</target>
        </trans-unit>
        <trans-unit id="f377f1398e30001f5143cdcbe6508b487d3a2163" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, QOpenGLTimerQuery has a &lt;a href=&quot;qopengltimerquery#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="translated">与其他Qt OpenGL类一样，QOpenGLTimerQuery具有&lt;a href=&quot;qopengltimerquery#create&quot;&gt;create&lt;/a&gt;（）函数来创建基础OpenGL对象。这是为了允许开发人员确保当时存在有效的当前OpenGL上下文。</target>
        </trans-unit>
        <trans-unit id="1a02a1d747b6ef4d6dcd407895265b3a1da6f0de" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, QOpenGLVertexArrayObject has a &lt;a href=&quot;qopenglvertexarrayobject#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="translated">与其他Qt OpenGL类一样，QOpenGLVertexArrayObject具有&lt;a href=&quot;qopenglvertexarrayobject#create&quot;&gt;create&lt;/a&gt;（）函数来创建基础OpenGL对象。这是为了允许开发人员确保当时存在有效的当前OpenGL上下文。</target>
        </trans-unit>
        <trans-unit id="2b5bd7d662263ec597439f8e28d46944ffedd4b2" translate="yes" xml:space="preserve">
          <source>As with the other signals, &lt;code&gt;shortcutOverride&lt;/code&gt; will only be emitted for an item if that item has &lt;a href=&quot;qml-qtquick-item#activeFocus-prop&quot;&gt;activeFocus&lt;/a&gt;.</source>
          <target state="translated">与其他信号一样，仅当某项目具有&lt;a href=&quot;qml-qtquick-item#activeFocus-prop&quot;&gt;activeFocus时&lt;/a&gt;，才会为该项目发出 &lt;code&gt;shortcutOverride&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b44cd4cd61e1932d8fee83c3a383689100258e3" translate="yes" xml:space="preserve">
          <source>As with the sensor classes, these provide convenience wrappers that reduce the need for casting.</source>
          <target state="translated">与传感器类一样,这些类提供了方便的封装器,减少了对铸造的需求。</target>
        </trans-unit>
        <trans-unit id="c72f3abfc1dc38e462f692ce8e762d7d24370882" translate="yes" xml:space="preserve">
          <source>As you can see, there are &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;consumable products&lt;/a&gt; and &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;unlockable products&lt;/a&gt;. The former can be purchased any number of times by the same user, whereas the latter can only be purchased once.</source>
          <target state="translated">如您所见，有&lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;易耗品&lt;/a&gt;和&lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;可解锁产品&lt;/a&gt;。前者可以由同一用户多次购买，而后者只能购买一次。</target>
        </trans-unit>
        <trans-unit id="ba2cb2309020c1d950c873e2906840fd61f08cae" translate="yes" xml:space="preserve">
          <source>As you can see, there are consumable products and unlockable products. The former can be purchased any number of times by the same user, while the latter can only be purchased once.</source>
          <target state="translated">如你所见,有消耗品和解锁品之分。前者可以被同一用户任意购买多次,而后者只能购买一次。</target>
        </trans-unit>
        <trans-unit id="861b2f34a7dc04111611d1f7b49c485074014484" translate="yes" xml:space="preserve">
          <source>As you can see, this tree has a single leaf and is composed of 3 nodes in total as shown in the following diagram.</source>
          <target state="translated">如你所见,这棵树只有一片叶子,共由3个节点组成,如下图所示。</target>
        </trans-unit>
        <trans-unit id="173b74cb0069711f0207e76fa411aa938fa50851" translate="yes" xml:space="preserve">
          <source>As you change the properties of the DefaultMaterial, behind the scenes new shaders are generated, and the property values are bound. The complexity of a shader depends on a combination of the properties that are set on it, and the context of the scene itself.</source>
          <target state="translated">当你改变DefaultMaterial的属性时,在幕后会生成新的着色器,并对属性值进行绑定。一个着色器的复杂程度取决于对它设置的属性和场景本身的上下文的组合。</target>
        </trans-unit>
        <trans-unit id="6ff9c765127879bf0a92f97693d6218332e44511" translate="yes" xml:space="preserve">
          <source>As you change the properties of the PrincipledMaterial, behind the scenes new shaders are generated, and the property values are bound. The complexity of a shader depends on a combination of the properties that are set on it, and the context of the scene itself.</source>
          <target state="translated">当你改变PrincipledMaterial的属性时,在幕后会生成新的着色器,并对属性值进行绑定。一个着色器的复杂程度取决于对它设置的属性和场景本身的上下文的组合。</target>
        </trans-unit>
        <trans-unit id="ed99f639d7e9754980d05f7fcc66b785b4e83872" translate="yes" xml:space="preserve">
          <source>As you now have the &lt;code&gt;MyControls&lt;/code&gt; namespace, you can name the controls after their actual counterparts in the Qt Quick Controls 2 module. You can repeat this process for any control that you wish to add.</source>
          <target state="translated">由于现在有了 &lt;code&gt;MyControls&lt;/code&gt; 命名空间，因此可以在Qt Quick Controls 2模块中以控件的实际对应名称命名。您可以对要添加的任何控件重复此过程。</target>
        </trans-unit>
        <trans-unit id="69f2204ffb7bb771312c419735367d4900194ebc" translate="yes" xml:space="preserve">
          <source>As you now have the &lt;code&gt;MyControls&lt;/code&gt; namespace, you can name the controls after their actual counterparts in the Qt Quick Controls module. You can repeat this process for any control that you wish to add.</source>
          <target state="translated">由于现在有了 &lt;code&gt;MyControls&lt;/code&gt; 命名空间，因此可以在Qt Quick Controls模块中以控件的实际对应名称命名。您可以对要添加的任何控件重复此过程。</target>
        </trans-unit>
        <trans-unit id="053b2e8dc6846460106637afa63ece4a2c99e1a0" translate="yes" xml:space="preserve">
          <source>Aside from the primitive types, &lt;a href=&quot;dbus-changes-qt6#qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt; also supports two non-primitive types natively, due to their widespread use in Qt applications: &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">除了基本类型之外，由于&lt;a href=&quot;dbus-changes-qt6#qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt;在Qt应用程序中的广泛使用，它们本身还支持两种非基本类型：&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;和&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17bde0180734ffc3e6fa2aff197971bd9a83cd63" translate="yes" xml:space="preserve">
          <source>Aside from the primitive types, &lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt; also supports two non-primitive types natively, due to their widespread use in Qt applications: &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">除了基本类型以外，由于&lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt;在Qt应用程序中的广泛使用，它本身还支持两种非基本类型：&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;和&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8db1a3abb275f2b110ededaa1b75b2221f595548" translate="yes" xml:space="preserve">
          <source>Aside from the reduced performance of complex bindings (for example, due to having to enter the JavaScript execution context to perform evaluation), they also take up more memory both on the C++ heap and the JavaScript heap than bindings which can be evaluated by QML's optimized binding expression evaluator.</source>
          <target state="translated">除了复杂绑定的性能降低外(例如,由于必须进入JavaScript执行上下文来执行评估),它们还比可以由QML的优化绑定表达式评估器评估的绑定占用更多的C++堆和JavaScript堆的内存。</target>
        </trans-unit>
        <trans-unit id="80bb45b38f22429c8fb2eb1ba83a0c598777f3d1" translate="yes" xml:space="preserve">
          <source>Aside: If you have a signals and slots connection in a tight inner loop of a performance critical task and you identify this connection as the bottleneck, think about using the standard listener-interface pattern rather than signals and slots. In cases where this occurs, you probably only require a 1:1 connection anyway. For example, if you have an object that downloads data from the network, it's a perfectly sensible design to use a signal to indicate that the requested data arrived. But if you need to send out every single byte one by one to a consumer, use a listener interface rather than signals and slots.</source>
          <target state="translated">旁白:如果你在一个性能关键任务的紧密内环中,有一个信号和插槽的连接,并且你认定这个连接是瓶颈,请考虑使用标准的监听器-接口模式,而不是信号和插槽。在出现这种情况时,你可能无论如何都只需要一个1:1的连接。例如,如果你有一个从网络下载数据的对象,那么使用信号来指示请求的数据到达是一个完全合理的设计。但如果你需要把每一个字节一个一个地发送给消费者,就使用监听器接口而不是信号和插槽。</target>
        </trans-unit>
        <trans-unit id="209b536ca15064ddafc5f396c336fd0a64402da6" translate="yes" xml:space="preserve">
          <source>Asking for help.</source>
          <target state="translated">求助。</target>
        </trans-unit>
        <trans-unit id="0080b719b81565725930a595e97832ebc5e3b28f" translate="yes" xml:space="preserve">
          <source>Asks the &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; to take over control of</source>
          <target state="translated">要求&lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt;接管对</target>
        </trans-unit>
        <trans-unit id="8f9be24e050960d01bf72dca7b04e695ff1206f6" translate="yes" xml:space="preserve">
          <source>Asks the &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; to take over control of item positioning temporarily. It will follow the movement of a logical particle when one is available.</source>
          <target state="translated">要求&lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt;临时接管项目定位的控制。当一个逻辑粒子可用时，它将跟随逻辑粒子的运动。</target>
        </trans-unit>
        <trans-unit id="4e269c910ad2734759be1c2890df8168d487a85f" translate="yes" xml:space="preserve">
          <source>Asks the application to quit.</source>
          <target state="translated">要求应用程序退出。</target>
        </trans-unit>
        <trans-unit id="18e27f0cb4e68409aaf923cd0204e0cd2a5d7cf0" translate="yes" xml:space="preserve">
          <source>Asks the session manager for permission to interact with the user. Returns true if interaction is permitted; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">向会话管理器请求与用户进行交互的权限。如果允许交互，则返回true；否则，返回false。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac6b0bbf61b969fc3b48d7387b5201f68104d2a4" translate="yes" xml:space="preserve">
          <source>Asks the window manager to not give focus to this top level window. This attribute has no effect on non-X11 platforms.</source>
          <target state="translated">要求窗口管理器不给这个顶层窗口以焦点。此属性在非 X11 平台上没有效果。</target>
        </trans-unit>
        <trans-unit id="2e97d821a923211f1a7fd1122dd8c979af132a13" translate="yes" xml:space="preserve">
          <source>AspectRatio  (surface width / surface height)</source>
          <target state="translated">纵横比(表面宽度/表面高度)</target>
        </trans-unit>
        <trans-unit id="92200ee3f6b98bd4979778912a47cd3c07445782" translate="yes" xml:space="preserve">
          <source>AspectType</source>
          <target state="translated">AspectType</target>
        </trans-unit>
        <trans-unit id="5ff162a7839a73dff64f80c8862ffe44d4437e92" translate="yes" xml:space="preserve">
          <source>Aspects of the parsing behavior can be adapted using &lt;a href=&quot;qxmlsimplereader#setFeature&quot;&gt;setFeature&lt;/a&gt;() and &lt;a href=&quot;qxmlsimplereader#setProperty&quot;&gt;setProperty&lt;/a&gt;().</source>
          <target state="translated">可以使用&lt;a href=&quot;qxmlsimplereader#setFeature&quot;&gt;setFeature&lt;/a&gt;（）和&lt;a href=&quot;qxmlsimplereader#setProperty&quot;&gt;setProperty&lt;/a&gt;（）来调整解析行为的各个方面。</target>
        </trans-unit>
        <trans-unit id="fd32298b4e7c841022a5222fa11f9200a4965151" translate="yes" xml:space="preserve">
          <source>Assemble the Service</source>
          <target state="translated">组装服务</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="0a0e8459185a7da2d3178427da1b3513e2713c82" translate="yes" xml:space="preserve">
          <source>Assertions make some statement about the text at the point where they occur in the regexp but they do not match any characters. In the following list &lt;b&gt;&lt;i&gt;E&lt;/i&gt;&lt;/b&gt; stands for any expression.</source>
          <target state="translated">断言在正则表达式中出现的位置对文本进行一些声明，但不匹配任何字符。在以下列表中，&lt;b&gt;&lt;i&gt;E&lt;/i&gt;&lt;/b&gt;代表任何表达式。</target>
        </trans-unit>
        <trans-unit id="4426afd90a77a35fb37ebd7110b9989cf7bed224" translate="yes" xml:space="preserve">
          <source>Asset</source>
          <target state="translated">Asset</target>
        </trans-unit>
        <trans-unit id="015074f87e95cf8cc3148a1de74a042445c8931e" translate="yes" xml:space="preserve">
          <source>Asset Conditioning</source>
          <target state="translated">资产状况</target>
        </trans-unit>
        <trans-unit id="b93ea6bc7e684b128703f5ddb35f473f9ccc826b" translate="yes" xml:space="preserve">
          <source>Asset Examples</source>
          <target state="translated">资产实例</target>
        </trans-unit>
        <trans-unit id="7c773084618e65327e77bcf8b8e757a8077d3b4c" translate="yes" xml:space="preserve">
          <source>AssetImporters Plugins</source>
          <target state="translated">资产导入器插件</target>
        </trans-unit>
        <trans-unit id="c448cf7fe03487b8fc745327e1e39ca87845735b" translate="yes" xml:space="preserve">
          <source>Assets File System</source>
          <target state="translated">资产文件系统</target>
        </trans-unit>
        <trans-unit id="2444928438f54ef4414cddff39193096c12629aa" translate="yes" xml:space="preserve">
          <source>Assign</source>
          <target state="translated">Assign</target>
        </trans-unit>
        <trans-unit id="986e599c10041bc8283187d0fc115ad5e6b627d9" translate="yes" xml:space="preserve">
          <source>Assign a &lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;Menu&lt;/a&gt; to this property to get a pull-down menu button.</source>
          <target state="translated">将&lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;菜单&lt;/a&gt;分配给该属性以获取下拉菜单按钮。</target>
        </trans-unit>
        <trans-unit id="657b3ebab2cb4a05a9ab4551475f9772cf932de0" translate="yes" xml:space="preserve">
          <source>Assign a topic to a QDoc comment - A comment could be a page, a property documentation, a class documentation, or any of the available &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;topic commands&lt;/a&gt;.</source>
          <target state="translated">将主题分配给QDoc注释-注释可以是页面，属性文档，类文档或任何可用的&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;主题命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1c8c8e977f8a71e565cd75c90f75a1e0a902938" translate="yes" xml:space="preserve">
          <source>Assign a topic to a QDoc comment - A comment could be a page, a property documentation, a class documentation, or any of the available &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html&quot;&gt;topic commands&lt;/a&gt;.</source>
          <target state="translated">将主题分配给QDoc注释-注释可以是页面，属性文档，类文档或任何可用的&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html&quot;&gt;主题命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21b27b78102bb9df181e31910b95b0f651c47879" translate="yes" xml:space="preserve">
          <source>Assign a topic to a QDoc comment - A comment could be a page, a property documentation, a class documentation, or any of the available &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html&quot;&gt;topic commands&lt;/a&gt;.</source>
          <target state="translated">将主题分配给QDoc注释-注释可以是页面，属性文档，类文档或任何可用的&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html&quot;&gt;主题命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1441632d366ed3ca636d23b1416a14537fec58fe" translate="yes" xml:space="preserve">
          <source>Assigning Values</source>
          <target state="translated">赋值</target>
        </trans-unit>
        <trans-unit id="cf9105a23e3c1c0024455d955363ad4a3d5812f2" translate="yes" xml:space="preserve">
          <source>Assigning Values to Property Attributes</source>
          <target state="translated">为属性属性赋值</target>
        </trans-unit>
        <trans-unit id="8f8fa75efce008484085eae902f298db122ee253" translate="yes" xml:space="preserve">
          <source>Assignment operator, assign</source>
          <target state="translated">赋值运营商,赋值</target>
        </trans-unit>
        <trans-unit id="57b7284b53bea6e095fae1d654500ee410048752" translate="yes" xml:space="preserve">
          <source>Assignment operator, assigns</source>
          <target state="translated">赋值运营商,赋值</target>
        </trans-unit>
        <trans-unit id="c60d0d4e8b3c326541217252d2e7f2cf31625cda" translate="yes" xml:space="preserve">
          <source>Assignment operator. Assigns the</source>
          <target state="translated">赋值运算符。分配</target>
        </trans-unit>
        <trans-unit id="24c910a013b8c5906b1cd9ba41947a56e3a154e6" translate="yes" xml:space="preserve">
          <source>Assignment operator. This guarded pointer will now point to the same object that</source>
          <target state="translated">赋值运算符。这个被保护的指针现在将指向同一个对象,而这个对象就是</target>
        </trans-unit>
        <trans-unit id="07964378a8d1220311421c67d166f9a93a054a08" translate="yes" xml:space="preserve">
          <source>Assignment. Makes a copy of</source>
          <target state="translated">作业。制作一份</target>
        </trans-unit>
        <trans-unit id="0376e8f00ecf6d9a805c3ee4d46f35c9cc4bbbdb" translate="yes" xml:space="preserve">
          <source>AssignmentInfo Struct</source>
          <target state="translated">AssignmentInfo结构</target>
        </trans-unit>
        <trans-unit id="f3648d2f302803cec9a6936b971744757ba50945" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::context</source>
          <target state="translated">AssignmentInfo::context</target>
        </trans-unit>
        <trans-unit id="589ed4a8be86536dbd1aeddad0b32db87ad648e8" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::dest</source>
          <target state="translated">AssignmentInfo::dest</target>
        </trans-unit>
        <trans-unit id="f817060420efee2ff9d1a76c4643994044b01a37" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::expr</source>
          <target state="translated">AssignmentInfo::expr</target>
        </trans-unit>
        <trans-unit id="9f2a0cc5f167ef3113974a9fe34af5506e805041" translate="yes" xml:space="preserve">
          <source>Assigns</source>
          <target state="translated">Assigns</target>
        </trans-unit>
        <trans-unit id="f92e5b99ea2de76eb2c44df249cb0bef49dabc28" translate="yes" xml:space="preserve">
          <source>Assigns a Windows</source>
          <target state="translated">指定一个Windows</target>
        </trans-unit>
        <trans-unit id="d45bdd4bad97015089eba0cf4ce24245724db744" translate="yes" xml:space="preserve">
          <source>Assigns a copy of</source>
          <target state="translated">指定了一个副本</target>
        </trans-unit>
        <trans-unit id="c380382dc946c6b38c72f9000c2fa642f83370ed" translate="yes" xml:space="preserve">
          <source>Assigns a new</source>
          <target state="translated">指定一个新的</target>
        </trans-unit>
        <trans-unit id="214f273d64bf82622948c8930cf9f71cf5a1dba2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of</source>
          <target state="translated">指定了一个浅层的</target>
        </trans-unit>
        <trans-unit id="fd31892264d57d78eaa612788450f11e1d014de2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of the given</source>
          <target state="translated">赋予一个浅层的给定的</target>
        </trans-unit>
        <trans-unit id="40c0762b3589ba836834cf365ef423f9c0d675c3" translate="yes" xml:space="preserve">
          <source>Assigns an</source>
          <target state="translated">指定一个</target>
        </trans-unit>
        <trans-unit id="85e617352338e9202319f3b82bca196a8c8fc151" translate="yes" xml:space="preserve">
          <source>Assigns another host</source>
          <target state="translated">指定另一主机</target>
        </trans-unit>
        <trans-unit id="4fa69103ae8cb16e772a9ff85090bbdb5ed3666a" translate="yes" xml:space="preserve">
          <source>Assigns character</source>
          <target state="translated">赋予字符</target>
        </trans-unit>
        <trans-unit id="f47bdc31d76b5266afbc0c2a14419aab86ba6b9f" translate="yes" xml:space="preserve">
          <source>Assigns picture</source>
          <target state="translated">分配图片</target>
        </trans-unit>
        <trans-unit id="f6feee028389ad98aad9d6da8ed93c2722b81c26" translate="yes" xml:space="preserve">
          <source>Assigns the</source>
          <target state="translated">指派</target>
        </trans-unit>
        <trans-unit id="72cf90175289fab0fa061f23cecdbbbc413dd29f" translate="yes" xml:space="preserve">
          <source>Assigns the &lt;a href=&quot;qsslpresharedkeyauthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; object</source>
          <target state="translated">分配&lt;a href=&quot;qsslpresharedkeyauthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt;对象</target>
        </trans-unit>
        <trans-unit id="801a35ae06553e61d456afde92c73023c075b5dc" translate="yes" xml:space="preserve">
          <source>Assigns the Latin-1 string</source>
          <target state="translated">赋予Latin-1字符串</target>
        </trans-unit>
        <trans-unit id="976606da71793c1f834eeeb18a5bcde700d6569c" translate="yes" xml:space="preserve">
          <source>Assigns the collection of values in</source>
          <target state="translated">中的值的集合。</target>
        </trans-unit>
        <trans-unit id="1dd05365443bf8bb053b9389faf63030fc3336bb" translate="yes" xml:space="preserve">
          <source>Assigns the content (text and format) of the</source>
          <target state="translated">赋值的内容(文本和格式)。</target>
        </trans-unit>
        <trans-unit id="fb89c254fd932c2786b45f91de6af5c5be0c03a8" translate="yes" xml:space="preserve">
          <source>Assigns the contents of</source>
          <target state="translated">将内容指定为</target>
        </trans-unit>
        <trans-unit id="d9d8f0b8c6f445b2fcbb7b3df078810009344b91" translate="yes" xml:space="preserve">
          <source>Assigns the data of</source>
          <target state="translated">赋值的数据</target>
        </trans-unit>
        <trans-unit id="873c8b9f541f0b268a383c6780595ff1af2d75f7" translate="yes" xml:space="preserve">
          <source>Assigns the data of the</source>
          <target state="translated">指定的数据</target>
        </trans-unit>
        <trans-unit id="f34d479f5d050bccc28029787d65108a47741756" translate="yes" xml:space="preserve">
          <source>Assigns the font info in</source>
          <target state="translated">将字体信息指定在</target>
        </trans-unit>
        <trans-unit id="c05921b1ee7b5acef8bad7c36beb484e359bee74" translate="yes" xml:space="preserve">
          <source>Assigns the font metrics</source>
          <target state="translated">指定字体度量</target>
        </trans-unit>
        <trans-unit id="2d2e1388da966c4ba36a294a2b5d6bed24b56ef8" translate="yes" xml:space="preserve">
          <source>Assigns the given</source>
          <target state="translated">赋予给定的</target>
        </trans-unit>
        <trans-unit id="5d8210ba4c95c21960d58255001b0d0413154275" translate="yes" xml:space="preserve">
          <source>Assigns the host address</source>
          <target state="translated">指定主机地址</target>
        </trans-unit>
        <trans-unit id="6aeb06a0e9c4be45c78e41a37b5477ce3da973c6" translate="yes" xml:space="preserve">
          <source>Assigns the iterator</source>
          <target state="translated">指定迭代器</target>
        </trans-unit>
        <trans-unit id="275941fc7784806d44b9d804a7c339cd785c4ea2" translate="yes" xml:space="preserve">
          <source>Assigns the match result</source>
          <target state="translated">指定比赛结果</target>
        </trans-unit>
        <trans-unit id="46071a015167b49375a721f0c938c2362334270a" translate="yes" xml:space="preserve">
          <source>Assigns the message</source>
          <target state="translated">指定信息</target>
        </trans-unit>
        <trans-unit id="8a9a8b84d8009bad8e3bf16c836adc4fd08f1220" translate="yes" xml:space="preserve">
          <source>Assigns the object,</source>
          <target state="translated">分配对象。</target>
        </trans-unit>
        <trans-unit id="34b815d741916882b0098831bd58278b18a74427" translate="yes" xml:space="preserve">
          <source>Assigns the previous value to the managed variable. This is the value at construction time, or at the last call to &lt;a href=&quot;qscopedvaluerollback#commit&quot;&gt;commit&lt;/a&gt;()</source>
          <target state="translated">将先前的值分配给托管变量。这是构造时或最后一次调用&lt;a href=&quot;qscopedvaluerollback#commit&quot;&gt;commit&lt;/a&gt;（）时的值</target>
        </trans-unit>
        <trans-unit id="5355328eb248f9644497135f1a55f68091ffcff0" translate="yes" xml:space="preserve">
          <source>Assigns the regular expression</source>
          <target state="translated">赋予正则表达式</target>
        </trans-unit>
        <trans-unit id="0efa8f59037690c88f785f377faf17baaed1be9a" translate="yes" xml:space="preserve">
          <source>Assigns the special address</source>
          <target state="translated">指定特别地址</target>
        </trans-unit>
        <trans-unit id="3e58888169c81cf4e97039e4d8f36831d937914b" translate="yes" xml:space="preserve">
          <source>Assigns the specified</source>
          <target state="translated">分配指定的</target>
        </trans-unit>
        <trans-unit id="40ec6bef35a847b998e9a2da7a21369f71c7f350" translate="yes" xml:space="preserve">
          <source>Assigns the value</source>
          <target state="translated">赋值</target>
        </trans-unit>
        <trans-unit id="e77da1cd9a8cbaa3264bfe32aae6f6044b12da48" translate="yes" xml:space="preserve">
          <source>Assigns the value of</source>
          <target state="translated">赋值</target>
        </trans-unit>
        <trans-unit id="8a33a76b3af75c9e791ff73e77cd3cf43fae27e7" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given</source>
          <target state="translated">将给定的</target>
        </trans-unit>
        <trans-unit id="6e076e5f7162ea14899f4ad786f6629ab5297f04" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given Qt</source>
          <target state="translated">指定给定Qt的值。</target>
        </trans-unit>
        <trans-unit id="e8de2d3f3964cb86c85419b37fdfa623d80a68b5" translate="yes" xml:space="preserve">
          <source>Assigns the value of the network proxy</source>
          <target state="translated">指定网络代理的值</target>
        </trans-unit>
        <trans-unit id="5af7cc5287cd40cf758ee7c3298d4248d5c63741" translate="yes" xml:space="preserve">
          <source>Assigns the value of the variant</source>
          <target state="translated">指定变体的值</target>
        </trans-unit>
        <trans-unit id="d3f618d95957c5fd7d77847a9ebd87c45f7418de" translate="yes" xml:space="preserve">
          <source>Assigns the value stored in</source>
          <target state="translated">赋予存储在</target>
        </trans-unit>
        <trans-unit id="75ba477098456f34d9a243599bf4849341324961" translate="yes" xml:space="preserve">
          <source>Assigns the values from</source>
          <target state="translated">赋值自</target>
        </trans-unit>
        <trans-unit id="1de97a6659207c6ba2a1461b47d5df8e6d514fb7" translate="yes" xml:space="preserve">
          <source>Assigns the values of</source>
          <target state="translated">指定的值</target>
        </trans-unit>
        <trans-unit id="6f6ddc5f0c27beba11482455b71b8ff4072f6d2b" translate="yes" xml:space="preserve">
          <source>Assigns the version and profile of</source>
          <target state="translated">指定版本和配置文件的</target>
        </trans-unit>
        <trans-unit id="be2ed2bbffb380de90fe8da01c8a3976377908bf" translate="yes" xml:space="preserve">
          <source>Assigns the weight</source>
          <target state="translated">赋予权重</target>
        </trans-unit>
        <trans-unit id="00d9b32906c7d1516b9836bdd3a8e3ae699fe3c4" translate="yes" xml:space="preserve">
          <source>Assigns this &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instance to</source>
          <target state="translated">将此&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt;实例分配给</target>
        </trans-unit>
        <trans-unit id="422196ccf47e7f549778766e36852518c23c436e" translate="yes" xml:space="preserve">
          <source>Assigns this NDEF record to</source>
          <target state="translated">将此NDEF记录分配给</target>
        </trans-unit>
        <trans-unit id="1c9c50403a3e43b1fbff3870a2552d446574206c" translate="yes" xml:space="preserve">
          <source>Assimp - Clipper, version 4.8.8</source>
          <target state="translated">Assimp-Clipper,4.8.8版本</target>
        </trans-unit>
        <trans-unit id="4007eea890477200f248dc422599b78f61ce3118" translate="yes" xml:space="preserve">
          <source>Assimp - Open Asset Import Library, version 5.0.1</source>
          <target state="translated">Assimp-开放式资产导入库,5.0.1版。</target>
        </trans-unit>
        <trans-unit id="f917444fbb88fea6d32ebc295abc538ad9f096ee" translate="yes" xml:space="preserve">
          <source>Assimp - Open3DGC</source>
          <target state="translated">Assimp-Open3DGC</target>
        </trans-unit>
        <trans-unit id="06438e1ddae37a0a3992b88abc043dfaaa185a17" translate="yes" xml:space="preserve">
          <source>Assimp - Poly2Tri Polygon Triangulation Library</source>
          <target state="translated">Assimp-Poly2Tri 多边形三角测量库</target>
        </trans-unit>
        <trans-unit id="b96b3a7eb31a143b44c24d3fcfee33e69b76b5bd" translate="yes" xml:space="preserve">
          <source>Assimp - RapidJSON</source>
          <target state="translated">Assimp-RapidJSON</target>
        </trans-unit>
        <trans-unit id="c905922e9f14f868ec6415173b8017fb0960e4cd" translate="yes" xml:space="preserve">
          <source>Assimp - The OpenDDL-Parser</source>
          <target state="translated">Assimp-OpenDDL分析器</target>
        </trans-unit>
        <trans-unit id="c96230e9398d61f8a427b37b7babfed955b2587d" translate="yes" xml:space="preserve">
          <source>Assimp - This plugin uses the 3rd party library libAssimp to convert 3D assets in 3D interchange formats to Qt Quick 3D QML components.</source>
          <target state="translated">Assimp-该插件使用第三方库libAssimp将3D交换格式的3D资产转换为Qt Quick 3D QML组件。</target>
        </trans-unit>
        <trans-unit id="15fe588acd18235c77359d1be119856fb785edb0" translate="yes" xml:space="preserve">
          <source>Assimp - Unzip, version 1.01e</source>
          <target state="translated">Assimp-解压,1.01e版</target>
        </trans-unit>
        <trans-unit id="54de2ef2e6c2423109b816afdfe69cda45c899ed" translate="yes" xml:space="preserve">
          <source>Assimp - Utf8Cpp</source>
          <target state="translated">Assimp-Utf8Cpp</target>
        </trans-unit>
        <trans-unit id="d4dde02852aac16abd539dbded629e9998dd4edb" translate="yes" xml:space="preserve">
          <source>Assimp - Zip</source>
          <target state="translated">Assimp-Zip</target>
        </trans-unit>
        <trans-unit id="7e8a2bd344bcf92d34624bc7673a63aeb0c3ece2" translate="yes" xml:space="preserve">
          <source>Assimp - irrXML</source>
          <target state="translated">Assimp-irrXML</target>
        </trans-unit>
        <trans-unit id="fe44901d3bb48248baddb52f33974b44b131d01c" translate="yes" xml:space="preserve">
          <source>Assistive Technology Service Provider Interface</source>
          <target state="translated">辅助技术服务提供者接口</target>
        </trans-unit>
        <trans-unit id="83c5bb632378d9c2fcefdedcba306f845e8efe44" translate="yes" xml:space="preserve">
          <source>Associated Qt3D Parameter name</source>
          <target state="translated">相关的Qt3D参数名称</target>
        </trans-unit>
        <trans-unit id="83c5dd7e4ceeb38ad79d04c309dadb647f04f85e" translate="yes" xml:space="preserve">
          <source>Associates a</source>
          <target state="translated">联营公司a</target>
        </trans-unit>
        <trans-unit id="66c50dde1a468384df54a6cda924049d4d67b444" translate="yes" xml:space="preserve">
          <source>Associates the given</source>
          <target state="translated">联想到给定的</target>
        </trans-unit>
        <trans-unit id="fe9c8d18acae9577e029d79bdb190db244e987ff" translate="yes" xml:space="preserve">
          <source>Associates the popup menu</source>
          <target state="translated">联想到弹出式菜单</target>
        </trans-unit>
        <trans-unit id="6a7b362251b812ae9dbb2c734bd5e1e55a8a99e1" translate="yes" xml:space="preserve">
          <source>Associates the value of the aliased property with the provided</source>
          <target state="translated">将别名财产的价值与所提供的别名财产的价值联系起来。</target>
        </trans-unit>
        <trans-unit id="d01cbf9779fefe47bf398cb7040be666a375d1d1" translate="yes" xml:space="preserve">
          <source>Associates the value of the aliased property with the provided functor</source>
          <target state="translated">将别名属性的值与所提供的漏斗关联起来。</target>
        </trans-unit>
        <trans-unit id="a76c59646355bcc039f1455f930e3ae235b938a5" translate="yes" xml:space="preserve">
          <source>Associates the value of this property with the provided</source>
          <target state="translated">将此属性的价值与提供的</target>
        </trans-unit>
        <trans-unit id="8d629b4888156f72a74dc84613bb89f7cd0a60e3" translate="yes" xml:space="preserve">
          <source>Associates the value of this property with the provided functor</source>
          <target state="translated">将此属性的值与所提供的漏斗器关联起来。</target>
        </trans-unit>
        <trans-unit id="9b3f4788cf3d3e7c514a41891b9b613c5b1e8115" translate="yes" xml:space="preserve">
          <source>Associates this window with the specified Vulkan</source>
          <target state="translated">将此窗口与指定的Vulkan</target>
        </trans-unit>
        <trans-unit id="50e08a8fa61e0245e63654f3b4aea82400a2928e" translate="yes" xml:space="preserve">
          <source>Assume nothing about the pipelines and dynamic states bound on the command list/buffer when this function is called.</source>
          <target state="translated">假设在调用该函数时,对命令列表/缓冲区上绑定的管道和动态状态一无所知。</target>
        </trans-unit>
        <trans-unit id="cd2a119710b8aac523a3a56655ddf1934612958a" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to be able to represent and freely move between all possible combinations.</source>
          <target state="translated">假设你想在一个状态机中对汽车的一组相互排斥的属性进行建模。比方说,我们感兴趣的属性是干净与脏,以及移动与不动。这将需要四个相互排斥的状态和八个转换,才能够表示并在所有可能的组合之间自由移动。</target>
        </trans-unit>
        <trans-unit id="0afa1db70d14b16989ef6ff8bb02424bc2d3db32" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to represent the states and freely move between all possible combinations as shown in the following state chart.</source>
          <target state="translated">假设你想在一个状态机中对汽车的一组相互排斥的属性进行建模。比方说,我们感兴趣的属性是干净与脏,以及移动与不动。这将需要四个相互排斥的状态和八个转换来表示这些状态,并在所有可能的组合之间自由移动,如下面的状态图所示。</target>
        </trans-unit>
        <trans-unit id="c90ff00b401683da81cdb675dce198cdea833664" translate="yes" xml:space="preserve">
          <source>Assume the existence (and prior registration into the &quot;Qt.example 1.0&quot; namespace) of the following C++ type:</source>
          <target state="translated">假设存在(并事先注册到 &quot;Qt.example 1.0 &quot;命名空间)以下C++类型。</target>
        </trans-unit>
        <trans-unit id="da5d7a725c4de440164391d5ffc9b7460b944284" translate="yes" xml:space="preserve">
          <source>Assume the existence (and prior registration into the &quot;Qt.example&quot; namespace) of the following C++ type:</source>
          <target state="translated">假设存在(并事先注册到 &quot;Qt.example &quot;命名空间)以下C++类型。</target>
        </trans-unit>
        <trans-unit id="2f9904dd4cef57f901996862e1f031d1d41fac12" translate="yes" xml:space="preserve">
          <source>Assume the screen has a resolution of 96 DPI rather than using the OS-provided resolution. This will cause font rendering to be consistent in pixels-per-point across devices rather than defining 1 point as 1/72 inch.</source>
          <target state="translated">假设屏幕的分辨率为96DPI,而不是使用操作系统提供的分辨率。这将导致各设备的字体渲染以每点像素为单位,而不是将1点定义为1/72英寸。</target>
        </trans-unit>
        <trans-unit id="0fd4906cbc89602fa42eafbae11f6af6a69ccf24" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's</source>
          <target state="translated">假设我们希望用户能够在任何时候通过点击 Quit 按钮退出应用程序。为了实现这一目标,我们需要创建一个最终状态,并将其作为与 Quit 按钮相关联的过渡的目标。</target>
        </trans-unit>
        <trans-unit id="851c2f1306ef9513fb28142d28a415cadad31fae" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked()&lt;/a&gt; signal. We could add a transition from each of &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;; however, this seems redundant, and one would also have to remember to add such a transition from every new state that is added in the future.</source>
          <target state="translated">假设我们希望用户能够通过单击&amp;ldquo;退出&amp;rdquo;按钮随时退出该应用程序。为了实现这一点，我们需要创建一个最终状态，并使它成为与&amp;ldquo;退出&amp;rdquo;按钮的&lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked（）&lt;/a&gt;信号相关联的转换的目标。我们可以从 &lt;code&gt;s1&lt;/code&gt; ， &lt;code&gt;s2&lt;/code&gt; 和 &lt;code&gt;s3&lt;/code&gt; 的每一个添加过渡；但是，这似乎是多余的，并且还必须记住要从将来添加的每个新状态添加这样的过渡。</target>
        </trans-unit>
        <trans-unit id="7916f28ff08f4e480a5afca8d1bd7571dfa918ce" translate="yes" xml:space="preserve">
          <source>Assumes the command is to be to sent back in reply to itself to the backend node.</source>
          <target state="translated">假设命令是要自己回复给后端节点的。</target>
        </trans-unit>
        <trans-unit id="4ff2031d476ca68024442f42c24527548b5dc499" translate="yes" xml:space="preserve">
          <source>Assuming a Qt3DCore::Node needs to override the PropertyTrackingMode on two properties (enabled and displacement), the value should be set as shown below.</source>
          <target state="translated">假设一个Qt3DCore::Node需要在两个属性(enabled和displacement)上覆盖PropertyTrackingMode,其值应该设置如下图所示。</target>
        </trans-unit>
        <trans-unit id="7b610154aa909ee49cffb67df60a04f72dbae7fa" translate="yes" xml:space="preserve">
          <source>Assuming a test has the following data:</source>
          <target state="translated">假设一个测试有以下数据。</target>
        </trans-unit>
        <trans-unit id="ff43a68f140b51cad42d7e0c95e2d0bab6c68162" translate="yes" xml:space="preserve">
          <source>Assuming that red channel value 1.0 is fully red (0.0 having no red at all), this effect considers pixel component value 0.5 to cause no displacement at all. Values above 0.5 shift pixels to the left, values below 0.5 do the shift to the right. In a similar way, green channel values above 0.5 displace the pixels upwards, and values below 0.5 shift the pixels downwards. The actual amount of displacement in pixels depends on the &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacement-prop&quot;&gt;displacement&lt;/a&gt; property.</source>
          <target state="translated">假设红色通道值1.0是完全红色的（0.0完全没有红色），则此效果将像素分量值0.5视为完全没有位移。大于0.5的值向左移动像素，小于0.5的值向右移动像素。以类似的方式，高于0.5的绿色通道值使像素向上移动，而低于0.5的值将像素向下移动。以像素为单位的实际位移量取决于&lt;a href=&quot;qml-qtgraphicaleffects-displace#displacement-prop&quot;&gt;位移&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="e1bf7fc148321e0e237a7bfa56cd2b15579f2f5b" translate="yes" xml:space="preserve">
          <source>Assuming that the &lt;code&gt;a&lt;/code&gt; variable does not exist in the scope chain, the following code is illegal in QML:</source>
          <target state="translated">假设范围链中不存在 &lt;code&gt;a&lt;/code&gt; 变量，则以下代码在QML中是非法的：</target>
        </trans-unit>
        <trans-unit id="2def80cafe7c0980ddfcdfba4b78ad5447b0122d" translate="yes" xml:space="preserve">
          <source>Assuming the z values of both items are the same, this will cause</source>
          <target state="translated">假设两个项目的z值相同,这将导致</target>
        </trans-unit>
        <trans-unit id="f329190d0fd15344dac730aabc63c032720e1284" translate="yes" xml:space="preserve">
          <source>Asterisk</source>
          <target state="translated">Asterisk</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="e75be76667be17954eee5355523c5fda27d028e3" translate="yes" xml:space="preserve">
          <source>Asynchronous (default) The creation occurs asynchronously, assuming a QQmlIncubatorController is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="translated">异步（默认值）的创建是异步发生的，假定一个QQmlIncubatorController被设定在&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1dd52824822a5030bc87301e39aee35067fc4b2" translate="yes" xml:space="preserve">
          <source>Asynchronous Image Loading</source>
          <target state="translated">异步图像加载</target>
        </trans-unit>
        <trans-unit id="762cc12f68657e49265d45e6f2f7caab006a5bc3" translate="yes" xml:space="preserve">
          <source>Asynchronous Interface</source>
          <target state="translated">异步接口</target>
        </trans-unit>
        <trans-unit id="8a319250e7a62a6449653025f2ab2f88895ac77d" translate="yes" xml:space="preserve">
          <source>Asynchronous Loading</source>
          <target state="translated">异步加载</target>
        </trans-unit>
        <trans-unit id="bc275ca923ec281351bd9fe315bfe5269d968893" translate="yes" xml:space="preserve">
          <source>Asynchronous Slots</source>
          <target state="translated">异步槽</target>
        </trans-unit>
        <trans-unit id="dac38cf1bc068ff6173e6dd303016d2512deaa69" translate="yes" xml:space="preserve">
          <source>Asynchronous image loading for providers of type other than &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; are executed on a single thread per engine basis. That means that a slow image provider will block the loading of any other request. To avoid that we suggest using &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; and implement threading on the provider side via a &lt;code&gt;QThreadPool&lt;/code&gt; or similar. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageresponseprovider-example.html#&quot;&gt;Image Response Provider Example&lt;/a&gt; for a complete implementation.</source>
          <target state="translated">对于除&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt;之外的类型的提供程序，异步图像加载在每个引擎的单个线程上执行。这意味着慢速图像提供程序将阻止任何其他请求的加载。为了避免这种情况，我们建议使用&lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt;并通过 &lt;code&gt;QThreadPool&lt;/code&gt; 或类似方法在提供程序端实现线程。有关完整的实现，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageresponseprovider-example.html#&quot;&gt;图像响应提供者示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80050f2c1d2542358e96b4fe829fa054d4d7e021" translate="yes" xml:space="preserve">
          <source>Asynchronous image loading for providers of type other than &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; are executed on a single thread per engine basis. That means that a slow image provider will block the loading of any other request. To avoid that we suggest using &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; and implement threading on the provider side via a &lt;code&gt;QThreadPool&lt;/code&gt; or similar. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-imageresponseprovider-example.html&quot;&gt;Image Response Provider Example&lt;/a&gt; for a complete implementation.</source>
          <target state="translated">对于除&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt;之外的类型的提供程序，异步图像加载在每个引擎的单个线程上执行。这意味着缓慢的图像提供程序将阻止任何其他请求的加载。为了避免这种情况，我们建议使用&lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt;并通过 &lt;code&gt;QThreadPool&lt;/code&gt; 或类似方法在提供程序端实现线程。有关完整的实现，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-imageresponseprovider-example.html&quot;&gt;图像响应提供者示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d33bb80737767108e98e576ffd09f9f1dcc5266" translate="yes" xml:space="preserve">
          <source>Asynchronous image loading for providers of type other than &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; are executed on a single thread per engine basis. That means that a slow image provider will block the loading of any other request. To avoid that we suggest using &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; and implement threading on the provider side via a &lt;code&gt;QThreadPool&lt;/code&gt; or similar. See the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-imageresponseprovider-example.html&quot;&gt;Image Response Provider Example&lt;/a&gt; for a complete implementation.</source>
          <target state="translated">对于除&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt;之外的类型的提供程序，异步图像加载在每个引擎的单个线程上执行。这意味着缓慢的图像提供程序将阻止任何其他请求的加载。为了避免这种情况，我们建议使用&lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt;并通过 &lt;code&gt;QThreadPool&lt;/code&gt; 或类似方法在提供程序端实现线程。有关完整的实现，请参见&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-imageresponseprovider-example.html&quot;&gt;图像响应提供者示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e95084984f1824fd6686f2858d97d77b54112d4d" translate="yes" xml:space="preserve">
          <source>Asynchronous incubators are controlled by a &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; that is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, which lets the engine know when the application is idle and incubating objects should be processed. If an incubation controller is not set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; creates objects synchronously regardless of the specified &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;.</source>
          <target state="translated">异步孵化器由&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlEngine&lt;/a&gt;上设置的&lt;a href=&quot;qqmlengine&quot;&gt;QQmlIncubationController&lt;/a&gt;控制，该控制器可让引擎知道应用程序何时处于空闲状态以及应处理孵化对象。如果未在&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;上设置孵化控制器，则无论指定的&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;如何，&lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt;都会同步创建对象。</target>
        </trans-unit>
        <trans-unit id="f828b831a262462f1e5c828272439e66a931b817" translate="yes" xml:space="preserve">
          <source>Asynchronous incubators are controlled by a &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; that is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, which lets the engine know when the application is idle and incubating objects should be processed. If an incubation controller is not set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, QQmlIncubator creates objects synchronously regardless of the specified &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;.</source>
          <target state="translated">异步孵化器是由&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlEngine&lt;/a&gt;上设置的&lt;a href=&quot;qqmlengine&quot;&gt;QQmlIncubationController&lt;/a&gt;控制的，该控制器可让引擎知道应用程序何时处于空闲状态，并应处理孵化对象。如果未在&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;上设置孵化控制器，则无论指定的&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;如何，QQmlIncubator都会同步创建对象。</target>
        </trans-unit>
        <trans-unit id="d7e47f6482fe4592a09b00832e19487c245576e5" translate="yes" xml:space="preserve">
          <source>Asynchronous loading for image providers that provide &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is only supported in platforms that have the ThreadedPixmaps feature, in platforms where pixmaps can only be created in the main thread (i.e. ThreadedPixmaps is not supported) if &lt;a href=&quot;qml-qtquick-image#asynchronous-prop&quot;&gt;asynchronous&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, the value is ignored and the image is loaded synchronously.</source>
          <target state="translated">仅在具有ThreadedPixmaps功能的平台上，仅在主线程中创建像素图的平台（即不支持ThreadedPixmaps）的平台上，如果&lt;a href=&quot;qml-qtquick-image#asynchronous-prop&quot;&gt;异步&lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; ，才支持提供&lt;a href=&quot;qpixmap&quot;&gt;QPixmap的&lt;/a&gt;图像提供程序的异步加载。图像被同步加载。</target>
        </trans-unit>
        <trans-unit id="8815a86ce7e19dae036dc727fc0eb17010cfec26" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content as HTML, enclosed in HTML and BODY tags. Upon successful completion,</source>
          <target state="translated">用异步方法将页面内容以HTML形式检索,用HTML和BODY标签封装。成功完成后。</target>
        </trans-unit>
        <trans-unit id="fed3108d6db768b79d5656a5db689618d8813893" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content converted to plain text, completely stripped of all HTML formatting. Upon successful completion,</source>
          <target state="translated">用异步方法检索页面内容,将其转换为纯文本,完全去除所有HTML格式。成功完成后。</target>
        </trans-unit>
        <trans-unit id="ccfb9e9f12588a472c278960afe69aa2f3e59056" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are marked by the keyword &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; in the method signature, before the &lt;code&gt;void&lt;/code&gt; return type and the slot name. The &lt;code&gt;quit()&lt;/code&gt; slot in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdbus-complexpingpong-example.html#&quot;&gt;D-Bus Complex Ping Pong Example&lt;/a&gt; is an example of this.</source>
          <target state="translated">在 &lt;code&gt;void&lt;/code&gt; 返回类型和插槽名称之前，异步插槽在方法签名中由关键字&lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt;标记。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdbus-complexpingpong-example.html#&quot;&gt;D-Bus Complex乒乓球示例中&lt;/a&gt;的 &lt;code&gt;quit()&lt;/code&gt; 插槽就是一个示例。</target>
        </trans-unit>
        <trans-unit id="71a271550f3a30be9911da1442e7d3755ce8535f" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are marked by the keyword &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; in the method signature, before the &lt;code&gt;void&lt;/code&gt; return type and the slot name. The &lt;code&gt;quit()&lt;/code&gt; slot in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdbus-complexpingpong-example.html&quot;&gt;D-Bus Complex Ping Pong Example&lt;/a&gt; is an example of this.</source>
          <target state="translated">在 &lt;code&gt;void&lt;/code&gt; 返回类型和插槽名称之前，异步插槽在方法签名中由关键字&lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt;标记。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdbus-complexpingpong-example.html&quot;&gt;D-Bus Complex乒乓球示例中&lt;/a&gt;的 &lt;code&gt;quit()&lt;/code&gt; 插槽就是一个示例。</target>
        </trans-unit>
        <trans-unit id="197d9f9f02176a6f23baa00e260050dfa34a3b51" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are marked by the keyword &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; in the method signature, before the &lt;code&gt;void&lt;/code&gt; return type and the slot name. The &lt;code&gt;quit()&lt;/code&gt; slot in the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdbus-complexpingpong-example.html&quot;&gt;D-Bus Complex Ping Pong Example&lt;/a&gt; is an example of this.</source>
          <target state="translated">在 &lt;code&gt;void&lt;/code&gt; 返回类型和插槽名称之前，异步插槽在方法签名中由关键字&lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt;标记。&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdbus-complexpingpong-example.html&quot;&gt;D-Bus Complex乒乓球示例中&lt;/a&gt;的 &lt;code&gt;quit()&lt;/code&gt; 插槽就是一个示例。</target>
        </trans-unit>
        <trans-unit id="ad1320a3c8bebbef00d6eebcda7cf893e0add4b9" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are those that do not normally return any reply to the caller. For that reason, they cannot take any output parameters. In most cases, by the time the first line of the slot is run, the caller function has already resumed working.</source>
          <target state="translated">异步槽是那些通常不向调用者返回任何回复的槽。因此,它们不能接受任何输出参数。在大多数情况下,当槽的第一行运行时,调用者函数已经恢复了工作。</target>
        </trans-unit>
        <trans-unit id="bf15448916e4418ca84783919398ce5d3bdf56e4" translate="yes" xml:space="preserve">
          <source>Asynchronously requests</source>
          <target state="translated">异步请求</target>
        </trans-unit>
        <trans-unit id="2c1db523efbfd096c7daa87bbf851934bc848638" translate="yes" xml:space="preserve">
          <source>At a high level, you can choose to use a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type directly as a source; or you can define the desired API in a &lt;code&gt;.rep&lt;/code&gt; template for use with the &lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt; compiler.</source>
          <target state="translated">从较高的层次&lt;a href=&quot;qobject&quot;&gt;上讲&lt;/a&gt;，您可以选择直接使用QObject类型作为源。或者，您可以在 &lt;code&gt;.rep&lt;/code&gt; 模板中定义所需的API，以与&lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt;编译器一起使用。</target>
        </trans-unit>
        <trans-unit id="c9f0075e5c85468a56b797c1d1e50667af529bf8" translate="yes" xml:space="preserve">
          <source>At a high level, you have a choice of using a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type directly as a source or defining the desired API in a .rep template for use with the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; compiler.</source>
          <target state="translated">在较高级别，您可以选择直接使用&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;类型作为源，也可以在.rep模板中定义所需的API以与&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;编译器一起使用。</target>
        </trans-unit>
        <trans-unit id="42809e8d1678586fe4c28a5bfba7143493cf53de" translate="yes" xml:space="preserve">
          <source>At any given time, the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are described by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. State changes are reported through the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal. You can use this signal to, for instance, update the GUI of the application; the mundane example here being changing the state of a &lt;code&gt;play/pause&lt;/code&gt; button. You request a state change directly with &lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;().</source>
          <target state="translated">在任何给定时间，&lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;将处于以下四种状态之一：活动，暂停，停止或空闲。这些状态由&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;枚举描述。状态更改通过&lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）信号报告。您可以使用此信号来更新应用程序的GUI。最普通的示例是更改 &lt;code&gt;play/pause&lt;/code&gt; 按钮的状态。您可以使用&lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;（）和&lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;（）直接请求状态更改。</target>
        </trans-unit>
        <trans-unit id="6e90abb23ba90e7991de19e51635a45f8d604895" translate="yes" xml:space="preserve">
          <source>At any given time, the QAudioOutput will be in one of four states: active, suspended, stopped, or idle. These states are described by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. State changes are reported through the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal. You can use this signal to, for instance, update the GUI of the application; the mundane example here being changing the state of a &lt;code&gt;play/pause&lt;/code&gt; button. You request a state change directly with &lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;().</source>
          <target state="translated">在任何给定时间，QAudioOutput将处于以下四种状态之一：活动，暂停，停止或空闲。这些状态由&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;枚举描述。状态更改通过&lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）信号报告。您可以使用此信号来更新应用程序的GUI。最普通的示例是更改 &lt;code&gt;play/pause&lt;/code&gt; 按钮的状态。您可以直接使用&lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;（），&lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;（）和&lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;（）来请求状态更改。</target>
        </trans-unit>
        <trans-unit id="d66f5a534a2f4e46e7b9aa796d01cd6db3d5263b" translate="yes" xml:space="preserve">
          <source>At any point an animation is in one of three states: &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;, &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;, or &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;--as defined by the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt; enum. The current state can be changed by calling &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;(), or &lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;(). An animation will always reset its &lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;current time&lt;/a&gt; when it is started. If paused, it will continue with the same current time when resumed. When an animation is stopped, it cannot be resumed, but will keep its current time (until started again). &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; will emit &lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() whenever its state changes.</source>
          <target state="translated">动画在任何时候都处于以下三种状态之一：&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;，&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;或&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;－由&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt;枚举定义。可以通过调用&lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;（），&lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;（）或&lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;（）来更改当前状态。动画在启动时将始终重置其&lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;当前时间&lt;/a&gt;。如果暂停，它将在恢复时与当前时间相同。动画停止后，将无法继续播放，但会保留其当前时间（直到再次开始播放）。&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;的状态更改时，将发出&lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="6b903ce82d0c2f440c5289b532cf6af5cd98f040" translate="yes" xml:space="preserve">
          <source>At any point an animation is in one of three states: &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;, &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;, or &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;--as defined by the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt; enum. The current state can be changed by calling &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;(), or &lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;(). An animation will always reset its &lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;current time&lt;/a&gt; when it is started. If paused, it will continue with the same current time when resumed. When an animation is stopped, it cannot be resumed, but will keep its current time (until started again). QAbstractAnimation will emit &lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() whenever its state changes.</source>
          <target state="translated">动画在任何时候都处于以下三种状态之一：&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;，&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;或&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;－由&lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt;枚举定义。可以通过调用&lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;（），&lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;（）或&lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;（）来更改当前状态。动画在启动时将始终重置其&lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;当前时间&lt;/a&gt;。如果暂停，则恢复时将以相同的当前时间继续。动画停止后，将无法继续播放，但会保留其当前时间（直到再次开始播放）。QAbstractAnimation的状态更改时，将发出&lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="97fa7c27e90979774b3a888ca02475f0f53acae3" translate="yes" xml:space="preserve">
          <source>At any point in time, &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are specified by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. You can request a state change directly through &lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;(), and &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(). The current state is reported by &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;(). &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will also signal you when the state changes (&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;()).</source>
          <target state="translated">在任何时间点，&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt;都会处于以下四种状态之一：活动，暂停，停止或空闲。这些状态由&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;枚举指定。您可以直接通过&lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;（）和&lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;（）来请求状态更改。当前状态由&lt;a href=&quot;qaudioinput#state&quot;&gt;状态&lt;/a&gt;（）报告。当状态更改时，&lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;也会向您发出信号（&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="5883099251f0f9c46f7b45e43b71f6cd4ada1809" translate="yes" xml:space="preserve">
          <source>At any point in time, QAudioInput will be in one of four states: active, suspended, stopped, or idle. These states are specified by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. You can request a state change directly through &lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;(), and &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(). The current state is reported by &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;(). &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will also signal you when the state changes (&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;()).</source>
          <target state="translated">在任何时间点，QAudioInput都会处于以下四种状态之一：活动，暂停，停止或空闲。这些状态由&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;枚举指定。您可以直接通过&lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;（），&lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;（）和&lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;（）来请求状态更改。当前状态由&lt;a href=&quot;qaudioinput#state&quot;&gt;状态&lt;/a&gt;（）报告。&lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;也将在状态更改时向您发出信号（&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="3c3ff16dcc213816d038cd51ace782a20de40270" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="translated">在任何时候，套接字都可以发出&lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;（）来表示发生了错误。</target>
        </trans-unit>
        <trans-unit id="f2d1dcef77ef62768ff6ce04ff4c52fee242295d" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="translated">在任何时候，套接字都可以发出&lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;（）来表示发生了错误。</target>
        </trans-unit>
        <trans-unit id="74d80312364e27da53be514c37db7c915d4f7418" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qbluetoothsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="translated">在任何时候，套接字都可以发出&lt;a href=&quot;qbluetoothsocket#error&quot;&gt;error&lt;/a&gt;（）来表示发生了错误。</target>
        </trans-unit>
        <trans-unit id="ea6ee628887c98ac2211a407c644d6029a495ab7" translate="yes" xml:space="preserve">
          <source>At any point, you can save your form by selecting the &lt;b&gt;Save From As...&lt;/b&gt; option from the &lt;b&gt;File&lt;/b&gt; menu. The UI files saved by</source>
          <target state="translated">在任何时候，您都可以通过从&amp;ldquo; &lt;b&gt;文件&amp;rdquo;&lt;/b&gt;菜单中选择&amp;ldquo; &lt;b&gt;另存为...&amp;rdquo;&lt;/b&gt;选项来保存表单。用户界面文件的保存者&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc778a76703643c7e9afe57573b40700efc7e170" translate="yes" xml:space="preserve">
          <source>At any time, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; has a state (returned by &lt;a href=&quot;qabstractsocket#state&quot;&gt;state&lt;/a&gt;()). The initial state is &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;. After calling &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;(), the socket first enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. If the host is found, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt; and emits the &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;() signal. When the connection has been established, it enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(). If an error occurs at any stage, &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() is emitted. Whenever the state changes, &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() is emitted. For convenience, &lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the socket is ready for reading and writing, but note that the socket's state must be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; before reading and writing can occur.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;随时都有一个状态（由&lt;a href=&quot;qabstractsocket#state&quot;&gt;状态&lt;/a&gt;（）返回）。初始状态为&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;。调用&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）之后，套接字首先进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;。如果找到了主机，则&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;并发出&lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;（）信号。建立连接后，它将进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;并发出&lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;（）。如果在任何阶段发生&lt;a href=&quot;qabstractsocket#error&quot;&gt;错误，&lt;/a&gt;都会发出错误（）。每当状态更改时，都会发出&lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。为了方便起见，&lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 如果套接字已准备好进行读写，则为true，但请注意，在发生读写之前，套接字的状态必须为&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a07c559f9633c8aaacdd7f2a3b35af515bfb8f86" translate="yes" xml:space="preserve">
          <source>At any time, QAbstractSocket has a state (returned by &lt;a href=&quot;qabstractsocket#state&quot;&gt;state&lt;/a&gt;()). The initial state is &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;. After calling &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;(), the socket first enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. If the host is found, QAbstractSocket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt; and emits the &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;() signal. When the connection has been established, it enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(). If an error occurs at any stage, &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;() is emitted. Whenever the state changes, &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() is emitted. For convenience, &lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the socket is ready for reading and writing, but note that the socket's state must be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; before reading and writing can occur.</source>
          <target state="translated">QAbstractSocket随时都有一个状态（由&lt;a href=&quot;qabstractsocket#state&quot;&gt;状态&lt;/a&gt;（）返回）。初始状态为&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;。调用&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）之后，套接字首先进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;。如果找到了主机，则QAbstractSocket进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;并发出&lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;（）信号。建立连接后，它将进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;并发出&lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;（）。如果在任何阶段发生错误，&lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;都会&lt;/a&gt;发出errorOccurred（）。每当状态更改时，都会发出&lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。为了方便起见，&lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 如果套接字已准备好进行读写，但是请注意，在发生读写之前，套接字的状态必须为&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0b9a523686980c5115e2cd28208348628ab266c" translate="yes" xml:space="preserve">
          <source>At any time, you can create a &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt; object and call &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() on it to start a local event loop. From within the event loop, calling &lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;() will force &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() to return.</source>
          <target state="translated">您可以随时创建一个&lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt;对象并对其调用&lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;（）以启动本地事件循环。从事件循环中，调用&lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;（）将强制&lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="e9b23ef4bfd8d66b004458eb7e27bc5103b2854b" translate="yes" xml:space="preserve">
          <source>At any time, you can create a QEventLoop object and call &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() on it to start a local event loop. From within the event loop, calling &lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;() will force &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() to return.</source>
          <target state="translated">您可以随时创建一个QEventLoop对象，并在其上调用&lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;（）以启动本地事件循环。从事件循环中，调用&lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;（）将强制&lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="daa6a58000f8024bb9abb849cd1c6bc5b90cf05f" translate="yes" xml:space="preserve">
          <source>At compile time, the</source>
          <target state="translated">在编译时,</target>
        </trans-unit>
        <trans-unit id="fac0e6dbd5badab8e273f9eada1e5d1b55cf621d" translate="yes" xml:space="preserve">
          <source>At each moment there is at most one animation that is active in the group; it is returned by &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt;(). An empty group has no current animation.</source>
          <target state="translated">在每个时刻，该组中最多只有一个动画处于活动状态。它由&lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt;（）返回。空组没有当前动画。</target>
        </trans-unit>
        <trans-unit id="c48b7d2b99551d3cffcfb32f1f31b3d96a3a8ff2" translate="yes" xml:space="preserve">
          <source>At first application startup, the window gets default dimensions specified as 800x600. Notice that no default position is specified - we let the window manager handle that. Later when the window geometry changes, new values will be automatically stored to the persistent settings. The second application run will get initial values from the persistent settings, bringing the window back to the previous position and size.</source>
          <target state="translated">在第一次启动应用程序时,窗口的默认尺寸被指定为800x600。请注意,没有指定默认位置--我们让窗口管理器来处理。之后当窗口的几何形状发生变化时,新的值将自动存储到持久化设置中。第二个应用程序运行将从持久化设置中获得初始值,使窗口回到之前的位置和尺寸。</target>
        </trans-unit>
        <trans-unit id="87807290c5074347670303aa4be4a27ce5a5a1d0" translate="yes" xml:space="preserve">
          <source>At item's</source>
          <target state="translated">在项目的</target>
        </trans-unit>
        <trans-unit id="fc9e79d115e6810206d506e1fc484f86bd561f77" translate="yes" xml:space="preserve">
          <source>At its heart, the framegraph is a data-driven method for configuring the Qt 3D renderer. Due to its data-driven nature, we can change configuration at runtime, allow non-C++ developers or designers to change the structure of a frame, and try out new rendering approaches without having to write thousands of lines of boiler plate code.</source>
          <target state="translated">框架图的核心是一种数据驱动的方法,用于配置Qt 3D渲染器。由于其数据驱动的特性,我们可以在运行时改变配置,允许非C++开发人员或设计人员改变帧的结构,并尝试新的渲染方法,而无需编写数千行锅炉板代码。</target>
        </trans-unit>
        <trans-unit id="bc401b782cbfc97a28d7a783971e774fd968e343" translate="yes" xml:space="preserve">
          <source>At its simplest, a view transition may just animate an item to its new position following a view operation, just as the &lt;code&gt;displaced&lt;/code&gt; transition does above, or animate some item properties, as in the &lt;code&gt;add&lt;/code&gt; transition above. Additionally, a view transition may make use of the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; attached property to customize animation behavior for different items. Following are some examples of how this can be achieved.</source>
          <target state="translated">最简单的说，就像在上面的 &lt;code&gt;add&lt;/code&gt; 过渡中一样，视图过渡可能只是在视图操作之后将一个项目动画化为它的新位置，就像上面的 &lt;code&gt;displaced&lt;/code&gt; 过渡所做的那样，或者是对某些项目属性进行动画化。此外，视图过渡可以利用&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;附加属性为不同项目自定义动画行为。以下是如何实现此目的的一些示例。</target>
        </trans-unit>
        <trans-unit id="6f7ed8163895d1af80d4d10ec64234aa6786422d" translate="yes" xml:space="preserve">
          <source>At its simplest, a view transition may just animate an item to its new position following a view operation, just as the &lt;code&gt;displaced&lt;/code&gt; transition does above, or animate some item properties, as in the &lt;code&gt;add&lt;/code&gt; transition above. Additionally, a view transition may make use of the ViewTransition attached property to customize animation behavior for different items. Following are some examples of how this can be achieved.</source>
          <target state="translated">从最简单的角度来看，就像在上面的 &lt;code&gt;add&lt;/code&gt; 过渡中一样，视图过渡可能只是在视图操作之后将一个项目动画化为它的新位置，就像上面的 &lt;code&gt;displaced&lt;/code&gt; 过渡所做的那样，或者是对某些项目属性进行动画化。此外，视图过渡可以利用ViewTransition附加属性为不同项目自定义动画行为。以下是如何实现此目的的一些示例。</target>
        </trans-unit>
        <trans-unit id="a19c22dff9d4cde9bd2628e6c3d56d2072a7deaf" translate="yes" xml:space="preserve">
          <source>At least one QML file whose name matches a control (for example, &lt;code&gt;Button.qml&lt;/code&gt;) must exist.</source>
          <target state="translated">必须至少存在一个名称与控件匹配的QML文件（例如， &lt;code&gt;Button.qml&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="11337d7577501270c01136ae9088ddfe3dcd4e9a" translate="yes" xml:space="preserve">
          <source>At least one SDK platform</source>
          <target state="translated">至少一个SDK平台</target>
        </trans-unit>
        <trans-unit id="796169bf85aac57a7e0921080487ae6d4a8e086f" translate="yes" xml:space="preserve">
          <source>At minimum the layout directory must contain the files:</source>
          <target state="translated">至少布局目录必须包含这些文件。</target>
        </trans-unit>
        <trans-unit id="3d85ab1776cdd148870608e2a1c1a3f96d1e0910" translate="yes" xml:space="preserve">
          <source>At minimum, a custom geometry should have the following specified:</source>
          <target state="translated">自定义几何体至少应指定以下内容。</target>
        </trans-unit>
        <trans-unit id="f22d3f606cf8829a4a62d38fe069e71b5e9b14ed" translate="yes" xml:space="preserve">
          <source>At most one action can be checked at any one time. The actions can also be all unchecked.</source>
          <target state="translated">任何时候最多只能选中一个动作。这些行动也可以全部不被选中。</target>
        </trans-unit>
        <trans-unit id="2e9d2902edfc287dd7802b4148dde59e40d35ee7" translate="yes" xml:space="preserve">
          <source>At present the &lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt; class is not extensible by 3rd parties.</source>
          <target state="translated">目前，第3方无法扩展&lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="7ab6c62713d2b849fd7308f7ef17c30401241857" translate="yes" xml:space="preserve">
          <source>At present the QPlaceContent class is not extensible by 3rd parties.</source>
          <target state="translated">目前QPlaceContent类不能被第三方扩展。</target>
        </trans-unit>
        <trans-unit id="037e15c7a413b9bf23ac5206f5480d34b46afe7b" translate="yes" xml:space="preserve">
          <source>At present, the Qt 3D Animation module provides the following blend tree node types:</source>
          <target state="translated">目前,Qt三维动画模块提供了以下混合树节点类型。</target>
        </trans-unit>
        <trans-unit id="ab91ac60011e39d43815f16993dec5b68f1f3bc8" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qml-renderstate&quot;&gt;RenderState&lt;/a&gt; nodes.</source>
          <target state="translated">在渲染时，对于FrameGraph的每个叶节点，通过累加FrameGraph分支中所有&lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt;节点定义的状态来记录基本渲染状态。每个&lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;都可以通过指定其自己的&lt;a href=&quot;qml-renderstate&quot;&gt;RenderState&lt;/a&gt;节点来使此基本渲染状态超载。</target>
        </trans-unit>
        <trans-unit id="c3efa742387c6c784898c8a9b679b9a7cb835f85" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each RenderPass can overload this base render state by specifying its own &lt;a href=&quot;qml-qt3d-render-renderstate&quot;&gt;RenderState&lt;/a&gt; nodes.</source>
          <target state="translated">在渲染时，对于FrameGraph的每个叶节点，通过累加FrameGraph分支中所有&lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt;节点定义的状态来记录基本渲染状态。每个RenderPass都可以通过指定其自己的&lt;a href=&quot;qml-qt3d-render-renderstate&quot;&gt;RenderState&lt;/a&gt;节点来使此基本渲染状态超载。</target>
        </trans-unit>
        <trans-unit id="4332a429b68b0ac4a41c160e240519e6859b47ee" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt; nodes.</source>
          <target state="translated">在渲染时，对于FrameGraph的每个叶节点，通过累加FrameGraph分支中所有&lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt;节点定义的状态来记录基本渲染状态。每个&lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt;都可以通过指定其自己的&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt;节点来使此基本渲染状态超载。</target>
        </trans-unit>
        <trans-unit id="b3132a6e843feaf04028dc302fab6ee1d03053f0" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each QRenderPass can overload this base render state by specifying its own &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt; nodes.</source>
          <target state="translated">在渲染时，对于FrameGraph的每个叶节点，通过累加FrameGraph分支中所有&lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt;节点定义的状态来记录基本渲染状态。每个QRenderPass都可以通过指定其自己的&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt;节点来使此基本渲染状态超载。</target>
        </trans-unit>
        <trans-unit id="54a81c3421b400f49f9c78d8711420f357d5fc98" translate="yes" xml:space="preserve">
          <source>At runtime, a Qt application recognizes many environment variables, some of which can be helpful for debugging:</source>
          <target state="translated">在运行时,Qt应用程序可以识别许多环境变量,其中一些变量对调试很有帮助。</target>
        </trans-unit>
        <trans-unit id="955c34f87df8ea5caf157532c8a65273ad95cd6b" translate="yes" xml:space="preserve">
          <source>At runtime, the status property will be updated to reflect whether an actual device matching the device name could be created.</source>
          <target state="translated">在运行时,状态属性将被更新,以反映是否可以创建与设备名称匹配的实际设备。</target>
        </trans-unit>
        <trans-unit id="dab9d4507e7863cf2519c0cf5e644680a577be4f" translate="yes" xml:space="preserve">
          <source>At some point later on, the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady&lt;/a&gt;() signal will be emitted for the purchase. Check &lt;a href=&quot;qinapptransaction#status-prop&quot;&gt;QInAppTransaction::status&lt;/a&gt;() to see if the purchase was completed successfully. If it was, then you must save the information about the purchase in a safe way, so that the application can restore it later.</source>
          <target state="translated">稍后，将发出&lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady&lt;/a&gt;（）信号进行购买。检查&lt;a href=&quot;qinapptransaction#status-prop&quot;&gt;QInAppTransaction :: status&lt;/a&gt;（）以查看购买是否成功完成。如果是这样，则必须以安全的方式保存有关购买的信息，以便应用程序以后可以还原它。</target>
        </trans-unit>
        <trans-unit id="b52512e5061a593208dea53cfb23d89cd05ed9e4" translate="yes" xml:space="preserve">
          <source>At some point, the user will activate a user interface component (perhaps using a particular key) where they can choose from a number of strings matching the text they have typed so far. The user can either confirm their choice cancel the input; in either case the input context will be closed.</source>
          <target state="translated">在某些时候,用户将激活一个用户界面组件(也许是使用一个特定的键),在那里他们可以从一些与他们迄今输入的文本相匹配的字符串中进行选择。用户可以确认他们的选择,也可以取消输入;无论哪种情况,输入上下文都将被关闭。</target>
        </trans-unit>
        <trans-unit id="72ba8cc9ccc86603a2ddc31bcd57b68d34d2c1f5" translate="yes" xml:space="preserve">
          <source>At that point &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply::locations&lt;/a&gt;() can be used to retrieve the results, which will consist of a list of &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; objects. These objects represent a combination of coordinate and address data.</source>
          <target state="translated">此时，可以使用&lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply :: locations&lt;/a&gt;（）检索结果，该结果将由&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt;对象的列表组成。这些对象代表坐标和地址数据的组合。</target>
        </trans-unit>
        <trans-unit id="40ccae4b2a43fca0f3cdca72e9f94bb174cad42f" translate="yes" xml:space="preserve">
          <source>At the C++ implementation level, using a Qt module makes its headers available for inclusion and causes it to be linked to the binary.</source>
          <target state="translated">在C++实现层面,使用Qt模块使其头文件可以被包含,并使其与二进制文件链接。</target>
        </trans-unit>
        <trans-unit id="0d90be54974f6606a3a303e548ddcfeb04f3394e" translate="yes" xml:space="preserve">
          <source>At the beginining of the header</source>
          <target state="translated">在标题的开头</target>
        </trans-unit>
        <trans-unit id="8ed66d562fe594c7221f115eb44a11475ad2f6ea" translate="yes" xml:space="preserve">
          <source>At the end of a frame we can retrieve the results by calling &lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt;(). As this function's name implies, it blocks CPU execution until OpenGL notifies that the timer query result is available. To avoid blocking, you can check if the query result is available by calling &lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;(). Note that modern GPUs are deeply pipelined and query results may not become available for between 1-5 frames after they were issued.</source>
          <target state="translated">在帧的结尾，我们可以通过调用&lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt;（）来检索结果。顾名思义，该函数将阻止CPU执行，直到OpenGL通知计时器查询结果可用为止。为避免阻塞，可以通过调用&lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;（）检查查询结果是否可用。请注意，现代GPU已深入流水线化，发出查询后的1-5帧之间可能无法获得查询结果。</target>
        </trans-unit>
        <trans-unit id="3080d39bec8e79e78fb1923604be5fe6c466e9ba" translate="yes" xml:space="preserve">
          <source>At the end of the header</source>
          <target state="translated">在标题的最后</target>
        </trans-unit>
        <trans-unit id="75e8c90ac99703039b88fbc5e0a1beabaa46fbf6" translate="yes" xml:space="preserve">
          <source>At the same time, attention must be paid to the number of Shape elements in the scene, in particular when using this special accelerated approach for &lt;code&gt;GL_NV_path_rendering&lt;/code&gt;. The way such a Shape item is represented in the scene graph is different from an ordinary geometry-based item, and incurs a certain cost when it comes to OpenGL state changes.</source>
          <target state="translated">同时，必须注意场景中Shape元素的数量，尤其是在对 &lt;code&gt;GL_NV_path_rendering&lt;/code&gt; 使用这种特殊的加速方法时。这样的Shape项在场景图中的表示方式不同于普通的基于几何的项，并且在涉及OpenGL状态更改时会产生一定的成本。</target>
        </trans-unit>
        <trans-unit id="6923f2cad67b0125f74f99f123f0e7ff80332bb8" translate="yes" xml:space="preserve">
          <source>At the same time, memory layout of the elements is also updated. &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; now always stores its elements directly in the allocated memory region as opposed to Qt 5, where certain objects were separately allocated on the heap and pointers to the objects were placed into the &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; instead.</source>
          <target state="translated">同时，元素的内存布局也被更新。现在，&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;始终将其元素直接存储在已分配的内存区域中，而不是Qt 5，在Qt 5中，某些对象是分别分配在堆上的，而指向这些对象的指针则放置在&lt;a href=&quot;qlist&quot;&gt;QList中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c10f42bbe4080eec805fef67f19baa1dacce0f8" translate="yes" xml:space="preserve">
          <source>At the simplest level, text documents are made up of a string of characters, marked up in some way to represent the block structure of the text within the document. &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; provides a cursor-based interface that allows the contents of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; to be manipulated at the character level. Since the elements (blocks, frames, tables, etc.) are also encoded in the character stream, the document structure can itself be changed by the cursor.</source>
          <target state="translated">在最简单的级别上，文本文档由一串字符组成，并以某种方式标记以表示文档中文本的块结构。&lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;提供了一个基于光标的界面，该界面允许&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;的内容在字符级别进行操作。由于元素（块，框架，表格等）也被编码在字符流中，因此文档结构本身可以由光标更改。</target>
        </trans-unit>
        <trans-unit id="9dcec02d3d4c2b8f2a55dfb0ebaad329e7acdf90" translate="yes" xml:space="preserve">
          <source>At the time of release (the mouse button is released or the finger is lifted), if the event point is outside the bounds of the &lt;code&gt;parent&lt;/code&gt; Item, a tap gesture is not recognized. This corresponds to typical behavior for button widgets: you can cancel a click by dragging outside the button, and you can also change your mind by dragging back inside the button before release. Note that it's necessary for &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; take the exclusive grab on press and retain it until release in order to detect this gesture.</source>
          <target state="translated">释放时（释放鼠标按钮或松开手指），如果事件点在 &lt;code&gt;parent&lt;/code&gt; 项的范围之外，则无法识别轻击手势。这与按钮小部件的典型行为相对应：您可以通过在按钮外部拖动来取消单击，也可以通过在释放按钮之前向后拖动按钮来改变主意。请注意，&lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;有必要在按下时进行排他性抓取并将其保持直到释放，以检测此手势。</target>
        </trans-unit>
        <trans-unit id="8140bc4ff5189ac6bc25fdb8ce759b5bdba0ac67" translate="yes" xml:space="preserve">
          <source>At the time this table was generated, there were six links from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; to &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;. The first column of each table entry contains a link to some link in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;. The link text as it appears in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; is shown. The second and third columns contain the source file name and line number for where qdoc saw the link in a qdoc comment.</source>
          <target state="translated">生成此表时，从&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;到&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;有六个链接。每个表条目的第一列包含一个指向&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore中&lt;/a&gt;某个链接的链接。显示在&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;中显示的链接文本。第二和第三列包含源文件名和行号，qdoc在其中查看了qdoc注释中的链接。</target>
        </trans-unit>
        <trans-unit id="48ae4572cf4a70fdf5389bb804cde3f953b5c37a" translate="yes" xml:space="preserve">
          <source>At the time this table was generated, there were six links from &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; to &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;. The first column of each table entry contains a link to some link in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;. The link text as it appears in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; is shown. The second and third columns contain the source file name and line number for where QDoc saw the link in a qdoc comment.</source>
          <target state="translated">生成此表时，从&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;到&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;共有六个链接。每个表条目的第一列包含一个指向&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore中&lt;/a&gt;某个链接的链接。将显示&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;中显示的链接文本。第二和第三列包含源文件名和行号，QDoc在其中查看了qdoc注释中的链接。</target>
        </trans-unit>
        <trans-unit id="b73bf5286ff35474a74c26035c042d81945e9ffc" translate="yes" xml:space="preserve">
          <source>At this point there are two GeoServices plugins packaged with Qt. They are accessible using their provider names:</source>
          <target state="translated">在这一点上,有两个与Qt打包的GeoServices插件。它们可以使用它们的提供者名称进行访问。</target>
        </trans-unit>
        <trans-unit id="aff72b9f558b4e97e80f24407ec25f32bf5ed9e7" translate="yes" xml:space="preserve">
          <source>At this point, if we examined the &lt;code&gt;displaced&lt;/code&gt; transition that was run for the bottom displaced item (&quot;Item 0&quot;), the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; property values provided to this transition would be as follows:</source>
          <target state="translated">在这一点上，如果我们检查了为底部位移项目（&amp;ldquo; Item 0&amp;rdquo;）运行的 &lt;code&gt;displaced&lt;/code&gt; 转换，则为此转换提供的&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;属性值如下：</target>
        </trans-unit>
        <trans-unit id="907672db6f8a41f43812049ae0a6a8dfdcaf9aaa" translate="yes" xml:space="preserve">
          <source>At this point, if we examined the &lt;code&gt;displaced&lt;/code&gt; transition that was run for the bottom displaced item (&quot;Item 0&quot;), the ViewTransition property values provided to this transition would be as follows:</source>
          <target state="translated">在这一点上，如果我们检查了为底部位移项目（&amp;ldquo; Item 0&amp;rdquo;）运行的 &lt;code&gt;displaced&lt;/code&gt; 转换，则为此转换提供的ViewTransition属性值如下：</target>
        </trans-unit>
        <trans-unit id="850acecc5742a41db5fb216f29a36550106d1ff8" translate="yes" xml:space="preserve">
          <source>At this point, neither sorting nor filtering is enabled; the original data is displayed in the view. Any changes made through the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; are applied to the original model.</source>
          <target state="translated">此时，既不启用排序也不启用过滤；原始数据显示在视图中。通过&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;进行的任何更改都将应用于原始模型。</target>
        </trans-unit>
        <trans-unit id="e39a928aa9f4a74b98452d78dcbd11be08ebbd1f" translate="yes" xml:space="preserve">
          <source>At this point, neither sorting nor filtering is enabled; the original data is displayed in the view. Any changes made through the QSortFilterProxyModel are applied to the original model.</source>
          <target state="translated">此时,排序和过滤都没有启用;原始数据显示在视图中。通过QSortFilterProxyModel所做的任何更改都会应用到原始模型中。</target>
        </trans-unit>
        <trans-unit id="1eb194f1c0f8ecd9fb1f220a29550b7e23cebb5d" translate="yes" xml:space="preserve">
          <source>At this time, drag-and-drop is not yet supported.</source>
          <target state="translated">目前,还不支持拖放。</target>
        </trans-unit>
        <trans-unit id="3233cbdf60e91444617d3f6d1b887957b7eaf196" translate="yes" xml:space="preserve">
          <source>Atlas based textures are created by passing &lt;a href=&quot;qquickwindow#CreateTextureOption-enum&quot;&gt;QQuickWindow::TextureCanUseAtlas&lt;/a&gt; to the &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow::createTextureFromImage&lt;/a&gt;().</source>
          <target state="translated">通过将&lt;a href=&quot;qquickwindow#CreateTextureOption-enum&quot;&gt;QQuickWindow :: TextureCanUseAtlas&lt;/a&gt;传递给&lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow :: createTextureFromImage&lt;/a&gt;（），可以创建基于Atlas的纹理。</target>
        </trans-unit>
        <trans-unit id="ca2894d7d5816986441ce1688077b4b58aca9579" translate="yes" xml:space="preserve">
          <source>Atomic API is useful when you application needs to blend content into overlays keeping all the updates within the same vsync. Still not all devices support this API and it could be unavailable on some older devices. KMS backend will by default use the legacy API, but you can enable the DRM atomic API with &lt;code&gt;QT_QPA_EGLFS_KMS_ATOMIC&lt;/code&gt; environment variable set to 1.</source>
          <target state="translated">当您的应用程序需要将内容混合到叠加层中并使所有更新保持在同一vsync中时，原子API很有用。仍然不是所有的设备都支持此API，在某些较旧的设备上可能不可用。默认情况下，KMS后端将使用旧版API，但是您可以在 &lt;code&gt;QT_QPA_EGLFS_KMS_ATOMIC&lt;/code&gt; 环境变量设置为1 的情况下启用DRM原子API 。</target>
        </trans-unit>
        <trans-unit id="a967c27abdae3c54a1ba2eb46dfef28e4669c220" translate="yes" xml:space="preserve">
          <source>Atomic add-and-fetch.</source>
          <target state="translated">原子加法和取法。</target>
        </trans-unit>
        <trans-unit id="1aca8c389398c9bb150cb22baffa337508a5b375" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-add.</source>
          <target state="translated">原子弹取和添加。</target>
        </trans-unit>
        <trans-unit id="7b4b593a63bdacca7e88ddaa3d460f979d52a59e" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-and.</source>
          <target state="translated">原子取和。</target>
        </trans-unit>
        <trans-unit id="dc61104378ed6ca8bef017107abe35e79e1d3418" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-or.</source>
          <target state="translated">原子的取和或。</target>
        </trans-unit>
        <trans-unit id="c7830879c704a38b11e5ddd086e77ccef500b74f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-store.</source>
          <target state="translated">原子化的提取和存储。</target>
        </trans-unit>
        <trans-unit id="29a0ea35af869894686b5620753669846139975f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-sub.</source>
          <target state="translated">原子取和分。</target>
        </trans-unit>
        <trans-unit id="677000d5ba7c628139cf77380e75ab8c46f01e22" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-xor.</source>
          <target state="translated">原子式的取和-xor。</target>
        </trans-unit>
        <trans-unit id="01a71a9c1dd30ce797dff76bda85d82b65e9c8a2" translate="yes" xml:space="preserve">
          <source>Atomic or-and-fetch.</source>
          <target state="translated">原子或和取。</target>
        </trans-unit>
        <trans-unit id="d7c154d6a6458aeda8686536a6877b2d6b01a013" translate="yes" xml:space="preserve">
          <source>Atomic sub-and-fetch.</source>
          <target state="translated">原子和取。</target>
        </trans-unit>
        <trans-unit id="99da09e996e10b97b93284055241904724848e3b" translate="yes" xml:space="preserve">
          <source>Atomic test-and-set.</source>
          <target state="translated">原子测试和设置。</target>
        </trans-unit>
        <trans-unit id="da13c4e269f632fb37b75640d8734403073f8480" translate="yes" xml:space="preserve">
          <source>Atomic xor-and-fetch.</source>
          <target state="translated">原子xor-and-fetch。</target>
        </trans-unit>
        <trans-unit id="8aa451b096cba27c2fae11f428437f2c14de039c" translate="yes" xml:space="preserve">
          <source>Atomically decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="translated">以原子方式减小此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。如果新值不为零，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回false。</target>
        </trans-unit>
        <trans-unit id="8dedf8ab3c76603bbc27d23afca2d137d8064ca9" translate="yes" xml:space="preserve">
          <source>Atomically increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="translated">以原子方式递增此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。如果新值不为零，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回false。</target>
        </trans-unit>
        <trans-unit id="89dd8dbf7bb7ee2579be58bf9d204dafabeb1439" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using a sequentially consistent memory ordering if possible; or &quot;Acquire&quot; ordering if not. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">如果可能，使用顺序一致的内存顺序以原子方式加载此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值；或&amp;ldquo;获取&amp;rdquo;订购（如果没有）。不会以任何方式修改该值，但是请注意，不能保证它保持不变。</target>
        </trans-unit>
        <trans-unit id="69653e3e82a9d9b720b3e7e9b153a85f9a1e4c06" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">使用宽松的内存顺序以原子方式加载此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。不会以任何方式修改该值，但是请注意，不能保证它保持不变。</target>
        </trans-unit>
        <trans-unit id="3e0d1fd4d5c9735d46867c2448de36a6bc511cb0" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">使用&amp;ldquo;获取&amp;rdquo;内存顺序以原子方式加载此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。不会以任何方式修改该值，但是请注意，不能保证它保持不变。</target>
        </trans-unit>
        <trans-unit id="f7081ad41a53c8af225230c522a5266c56092e5e" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">使用宽松的内存顺序以原子方式加载此&lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt;的值。不会以任何方式修改该值，但是请注意，不能保证它保持不变。</target>
        </trans-unit>
        <trans-unit id="130b6d95050e9b7c2405561c3e5d460bb604614b" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">使用&amp;ldquo;获取&amp;rdquo;内存顺序以原子方式加载此&lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt;的值。不会以任何方式修改该值，但是请注意，不能保证它保持不变。</target>
        </trans-unit>
        <trans-unit id="acb94368cb5719416863f8c2367679c67c6ea331" translate="yes" xml:space="preserve">
          <source>Atomically post-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="translated">以原子方式递减此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。返回此原子的旧值。</target>
        </trans-unit>
        <trans-unit id="793812097d2bfb8c79328c7076cfcdc46657e936" translate="yes" xml:space="preserve">
          <source>Atomically post-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="translated">以原子方式后递增此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。返回此原子的旧值。</target>
        </trans-unit>
        <trans-unit id="d69ff82cc5d52f41982a8e0e67bfcb57d12a14c4" translate="yes" xml:space="preserve">
          <source>Atomically pre-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="translated">以原子方式减小此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。返回此原子的新值。</target>
        </trans-unit>
        <trans-unit id="3954772cbeafee10706db508a27dcf1f5609cfe8" translate="yes" xml:space="preserve">
          <source>Atomically pre-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="translated">以原子方式预先增加此&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;的值。返回此原子的新值。</target>
        </trans-unit>
        <trans-unit id="64206ad6e584ead7f08fdbf0296423b524ea37a4" translate="yes" xml:space="preserve">
          <source>Atomically stores the</source>
          <target state="translated">原子上存储了</target>
        </trans-unit>
        <trans-unit id="d28e1e1cc0c7d44ae7312f7a38a54f527c3baed2" translate="yes" xml:space="preserve">
          <source>Atomically stores the other value into this atomic type using a sequentially consistent memory ordering if possible; or &quot;Release&quot; ordering if not. This function returns a reference to this object.</source>
          <target state="translated">如果可能的话,使用顺序一致的内存排序将另一个值原子化地存储到这个原子类型中;如果不可能的话,则使用 &quot;释放 &quot;排序。该函数返回对该对象的引用。</target>
        </trans-unit>
        <trans-unit id="22cd0cbd81dee9dcd227285a4fb456261af24ea4" translate="yes" xml:space="preserve">
          <source>Atomics</source>
          <target state="translated">Atomics</target>
        </trans-unit>
        <trans-unit id="5207af8927557bdcee58799743343132b7a7e7d5" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; video</source>
          <target state="translated">附加&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;视频</target>
        </trans-unit>
        <trans-unit id="f92e2f9fb2a11868b1807469619b32fb101a2841" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; video</source>
          <target state="translated">附加&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;视频</target>
        </trans-unit>
        <trans-unit id="d028067fa5f7a29797abf3e4197287917862fb4d" translate="yes" xml:space="preserve">
          <source>Attach the resulting type library as a binary resource to the server binary (again using the &lt;a href=&quot;activeqt-idc&quot;&gt;idc&lt;/a&gt; tool)</source>
          <target state="translated">将生成的类型库作为二进制资源附加到服务器二进制文件（再次使用&lt;a href=&quot;activeqt-idc&quot;&gt;idc&lt;/a&gt;工具）</target>
        </trans-unit>
        <trans-unit id="c298cc70af343c92bf071f6572d614dfd62dfa08" translate="yes" xml:space="preserve">
          <source>Attached ApplicationWindow Properties</source>
          <target state="translated">附加的应用程序窗口属性</target>
        </trans-unit>
        <trans-unit id="9e4fd54e1f2cc2bae6fec6c2a9e32fae40754136" translate="yes" xml:space="preserve">
          <source>Attached Method Documentation</source>
          <target state="translated">所附方法文件</target>
        </trans-unit>
        <trans-unit id="150bd1743209960f075ac0a1c57b68376f08c65c" translate="yes" xml:space="preserve">
          <source>Attached Methods</source>
          <target state="translated">附带方法</target>
        </trans-unit>
        <trans-unit id="3faba1cfe32a7f1b852cba99a63d5fe50092912f" translate="yes" xml:space="preserve">
          <source>Attached Properties</source>
          <target state="translated">附属物业</target>
        </trans-unit>
        <trans-unit id="80c902d12435291598f929f48b279385ca0a3b0d" translate="yes" xml:space="preserve">
          <source>Attached Properties and Attached Signal Handlers</source>
          <target state="translated">附加的属性和附加的信号处理程序</target>
        </trans-unit>
        <trans-unit id="bfcbfa74913c6275568001ba926cb2704e3623dd" translate="yes" xml:space="preserve">
          <source>Attached Property Documentation</source>
          <target state="translated">附属财产文件</target>
        </trans-unit>
        <trans-unit id="bb8b9dfdee571ec3e9f3e3ba64654906472d2254" translate="yes" xml:space="preserve">
          <source>Attached Signal Documentation</source>
          <target state="translated">附带信号文件</target>
        </trans-unit>
        <trans-unit id="902d56ee4a25e198b3af081354e87bcf103345dd" translate="yes" xml:space="preserve">
          <source>Attached Signals</source>
          <target state="translated">附带信号</target>
        </trans-unit>
        <trans-unit id="acf29ce1d3e96304b4cb38421631b2162f2216d9" translate="yes" xml:space="preserve">
          <source>Attached Tool Tips</source>
          <target state="translated">附带工具提示</target>
        </trans-unit>
        <trans-unit id="388c36c1ff81f7e8e3b22aeb32eba62b658c2e70" translate="yes" xml:space="preserve">
          <source>Attached properties</source>
          <target state="translated">附属财产</target>
        </trans-unit>
        <trans-unit id="37afe77cd72cd5e6db95e24e548bb2b97dbc77ed" translate="yes" xml:space="preserve">
          <source>Attached signal handlers</source>
          <target state="translated">附带信号处理装置</target>
        </trans-unit>
        <trans-unit id="9992fec490f826b162fce6589018884313693832" translate="yes" xml:space="preserve">
          <source>Attached signal handlers allow objects to be notified of particular signals that are significant to each individual object. If there was no &lt;code&gt;Component.onCompleted&lt;/code&gt; attached signal handler, for example, an object could not receive this notification without registering for some special signal from some special object. The</source>
          <target state="translated">附加的信号处理程序允许将对每个单独对象重要的特定信号通知给对象。例如，如果没有 &lt;code&gt;Component.onCompleted&lt;/code&gt; 附加的信号处理程序，则一个对象如果不从某个特殊对象注册某些特殊信号就无法接收此通知。的</target>
        </trans-unit>
        <trans-unit id="65c3ae7a961d6d7817235589acc2c7c1bba38581" translate="yes" xml:space="preserve">
          <source>Attaches a cancellation</source>
          <target state="translated">附带取消</target>
        </trans-unit>
        <trans-unit id="b5ef0fc5310f47a12b45bab40e5c38eeffe0d200" translate="yes" xml:space="preserve">
          <source>Attaches a continuation to this future, allowing to chain multiple asynchronous computations if desired. When the asynchronous computation represented by this future finishes,</source>
          <target state="translated">给这个future附加一个延续,如果需要的话,允许连锁多个异步计算。当该未来代表的异步计算完成时。</target>
        </trans-unit>
        <trans-unit id="8da0eaca4152da7c6cf50c85444b551d8a98ad62" translate="yes" xml:space="preserve">
          <source>Attaches a continuation to this future, allowing to chain multiple asynchronous computations. When the asynchronous computation represented by this future finishes,</source>
          <target state="translated">给这个future附加一个延续,允许连锁多个异步计算。当该future所代表的异步计算完成时。</target>
        </trans-unit>
        <trans-unit id="8448cfd0eefd78a971137085e8341d0d9b4cebc9" translate="yes" xml:space="preserve">
          <source>Attaches a failure handler to this future, to handle any exceptions that may have been generated. Returns a &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; of the parent type. The handler will be invoked only in case of an exception, in the same thread as the parent future has been running. If the continuation is attached after the parent has already finished, it will be invoked in the thread where the parent lives.</source>
          <target state="translated">将故障处理程序附加到此将来，以处理可能已生成的任何异常。返回父类型的&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;。仅在发生异常的情况下，才在与父future相同的线程中调用该处理程序。如果在父项完成之后附加延续，它将在父项所在的线程中调用。</target>
        </trans-unit>
        <trans-unit id="303a08095e165219a3a523d9c8272527e650f836" translate="yes" xml:space="preserve">
          <source>Attaches the axis specified by</source>
          <target state="translated">将指定的轴连接到</target>
        </trans-unit>
        <trans-unit id="d6147383a9edc19ffbb89414d19965ec36061611" translate="yes" xml:space="preserve">
          <source>Attaches the given</source>
          <target state="translated">附上给定的</target>
        </trans-unit>
        <trans-unit id="8ca7c853d5101c3e585dc0c3c844b74cc739c298" translate="yes" xml:space="preserve">
          <source>Attaches the legend to a chart. The chart may adjust the layout of the legend.</source>
          <target state="translated">将图例连接到图表上。图表可以调整图例的布局。</target>
        </trans-unit>
        <trans-unit id="0f743a992bb1f15351f352fa10936d767f1629c6" translate="yes" xml:space="preserve">
          <source>Attaches the toolbar to</source>
          <target state="translated">将工具栏连接到</target>
        </trans-unit>
        <trans-unit id="ad9d9b178174db92c91a2b908169bad8da80b5b7" translate="yes" xml:space="preserve">
          <source>Attaches to the media</source>
          <target state="translated">附在媒体上</target>
        </trans-unit>
        <trans-unit id="19df2ced91da2b546054955930b5d1c8b0dfa81d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollBar to a Flickable</source>
          <target state="translated">将ScrollBar连接到Flickable上。</target>
        </trans-unit>
        <trans-unit id="9b6a70298d0609d1a540e191745cea169e5e464d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollIndicator to a Flickable</source>
          <target state="translated">将滚动指示器(ScrollIndicator)连接到Flickable上。</target>
        </trans-unit>
        <trans-unit id="8dead67aed25f8fd7485d49ecb1f92385f2f1b68" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; is attached to a media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; to the &lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;() function.</source>
          <target state="translated">将&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;附加到&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;允许它显示该媒体对象的视频或图像输出。甲&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;通过将指针传递到附连到媒体对象&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;到&lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="1ab6ec34b5c35567c9a11420e8c2fe1d4d8f4d71" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; is attached to media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; in its constructor, and detached by destroying the &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;.</source>
          <target state="translated">将&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;附加到&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;可以使其显示该媒体对象的视频或图像输出。甲&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;通过将指针传递到附连到媒体对象&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;在其构造，并通过破坏分离&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ffd44d7179311e7e62b769dda091973b2a7821a" translate="yes" xml:space="preserve">
          <source>Attaching a QGraphicsVideoItem to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A QGraphicsVideoItem is attached to a media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; to the &lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;() function.</source>
          <target state="translated">将QGraphicsVideoItem附加到&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;允许它显示该媒体对象的视频或图像输出。通过将指向&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;的指针传递给&lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;（）函数，可以将QGraphicsVideoItem附加到媒体对象。</target>
        </trans-unit>
        <trans-unit id="fbbc565efe42f08bdd122dfaf6e05a1265f7711f" translate="yes" xml:space="preserve">
          <source>Attaching a QVideoWidget to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A QVideoWidget is attached to media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; in its constructor, and detached by destroying the QVideoWidget.</source>
          <target state="translated">将QVideoWidget附加到&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;可以使其显示该媒体对象的视频或图像输出。QVideoWidget通过在其构造函数中传递指向&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;的指针来附加到媒体对象，并通过销毁QVideoWidget使其分离。</target>
        </trans-unit>
        <trans-unit id="44226621a09bb5065e011430e6963bfb12de805f" translate="yes" xml:space="preserve">
          <source>Attaching the type library corrupted the server binary. This is a bug in Windows and happens only with release builds.</source>
          <target state="translated">附加类型库破坏了服务器二进制。这是Windows中的一个bug,只发生在发行版中。</target>
        </trans-unit>
        <trans-unit id="83a56249e5cff48f561d2d725143f1fc2eb3228c" translate="yes" xml:space="preserve">
          <source>Attachment</source>
          <target state="translated">Attachment</target>
        </trans-unit>
        <trans-unit id="c03f026fdabc6f9b4fe12426c35aa115f291994c" translate="yes" xml:space="preserve">
          <source>Attempt to decode as much as possible. For individual components of the URL, this decodes every percent encoding sequence, including control characters (U+0000 to U+001F) and UTF-8 sequences found in percent-encoded form. Use of this mode may cause data loss, see below for more information.</source>
          <target state="translated">试图尽可能多地进行解码。对于URL的单个组件,这将解码每一个百分比编码序列,包括控制字符(U+0000到U+001F)和以百分比编码形式出现的UTF-8序列。使用该模式可能会导致数据丢失,更多信息请参见下文。</target>
        </trans-unit>
        <trans-unit id="6cbd30766494fc0c81dd3665e03daf07ea2f5b9a" translate="yes" xml:space="preserve">
          <source>Attempt to read or write from socket returned an error</source>
          <target state="translated">试图从套接字读或写返回一个错误</target>
        </trans-unit>
        <trans-unit id="2ca8deb77959d3489a3621ae5b4c85fb80a51a31" translate="yes" xml:space="preserve">
          <source>Attempting to change the current value to one outside the minimum-maximum range has no effect on the current value.</source>
          <target state="translated">试图将当前值改为最小-最大范围之外的值,对当前值没有影响。</target>
        </trans-unit>
        <trans-unit id="5fc50e04abe6136b0423ada277c77dfdbbdae74f" translate="yes" xml:space="preserve">
          <source>Attempting to declare two methods or signals with the same name in the same type block is an error. However, a new method may reuse the name of an existing method on the type. (This should be done with caution, as the existing method may be hidden and become inaccessible.)</source>
          <target state="translated">试图在同一类型块中声明两个名称相同的方法或信号是错误的。然而,一个新方法可以重用类型上现有方法的名称。这样做应该谨慎,因为现有的方法可能会被隐藏并变得不可访问)。</target>
        </trans-unit>
        <trans-unit id="d751bf4cf79d2324b7c47ae29a36cee6fba89adb" translate="yes" xml:space="preserve">
          <source>Attempting to declare two signals or methods with the same name in the same type block is an error. However, a new signal may reuse the name of an existing signal on the type. (This should be done with caution, as the existing signal may be hidden and become inaccessible.)</source>
          <target state="translated">试图在同一个类型块中声明两个具有相同名称的信号或方法是错误的。然而,一个新的信号可以重用类型上现有信号的名称。这样做应该谨慎,因为现有的信号可能会被隐藏,无法访问)。</target>
        </trans-unit>
        <trans-unit id="c494aed263b98d8bd4e561a02eef380289d346c8" translate="yes" xml:space="preserve">
          <source>Attempting to set the alignment to an illegal flag combination does nothing.</source>
          <target state="translated">试图将对齐方式设置为非法的标志组合不会有任何效果。</target>
        </trans-unit>
        <trans-unit id="e9e83912432691a95cd6de5d400fbd6735883fb9" translate="yes" xml:space="preserve">
          <source>Attempting to unlock a lock that is not locked is an error, and will result in program termination.</source>
          <target state="translated">试图解锁一个没有被锁定的锁是一个错误,并将导致程序终止。</target>
        </trans-unit>
        <trans-unit id="40cb55c77af0f0fee8442a7bfdc705c6c9fa98ef" translate="yes" xml:space="preserve">
          <source>Attempts to add a new title record with title</source>
          <target state="translated">试图添加一个新的标题记录,标题为</target>
        </trans-unit>
        <trans-unit id="a49a83143477bbe2aaa9b15d293b1789f54894b6" translate="yes" xml:space="preserve">
          <source>Attempts to add a title record</source>
          <target state="translated">试图添加标题记录</target>
        </trans-unit>
        <trans-unit id="75b78f9bfc8e0845fc6d273185083fbc75433f18" translate="yes" xml:space="preserve">
          <source>Attempts to allocate memory for at least</source>
          <target state="translated">试图分配内存至少为</target>
        </trans-unit>
        <trans-unit id="41717baad4c663f1fc92137bc64da06ff1152682" translate="yes" xml:space="preserve">
          <source>Attempts to attach the process to the shared memory segment identified by the key that was passed to the constructor or to a call to &lt;a href=&quot;qsharedmemory#setKey&quot;&gt;setKey&lt;/a&gt;() or &lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt;(). The access</source>
          <target state="translated">尝试将进程附加到由传递给构造函数的键标识的共享内存段或对&lt;a href=&quot;qsharedmemory#setKey&quot;&gt;setKey&lt;/a&gt;（）或&lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt;（）的调用。访问</target>
        </trans-unit>
        <trans-unit id="64511e88279ff80ccaed16800d807495ab3d55ba" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qbluetoothsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="translated">尝试关闭插座。如果有等待写入的等待数据，&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt;将进入&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt;并等待直到所有数据都被写入。最终，它将进入&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;并发出&lt;a href=&quot;qbluetoothsocket#disconnected&quot;&gt;断开连接&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="b14c101853294961a9915ce2a73be7191c42b775" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="translated">尝试关闭插座。如果有等待写入的等待数据，&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;将进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt;并等待直到所有数据都被写入。最终，它将进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;并发出&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;断开连接&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="0cd1c41157c1d345e418d08f0ddd434ac79fa257" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the disconnectedFromServer() signal.</source>
          <target state="translated">尝试关闭插座。如果有等待写入的等待数据，&lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt;将进入&lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;ClosingState&lt;/a&gt;并等待直到所有数据都被写入。最终，它将进入&lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;并发出offlineedFromServer（）信号。</target>
        </trans-unit>
        <trans-unit id="9916f61f2e95462623791d2de738f69eec08995b" translate="yes" xml:space="preserve">
          <source>Attempts to connect to the service described by</source>
          <target state="translated">试图连接到所述的服务。</target>
        </trans-unit>
        <trans-unit id="88bd2a20888118107b44b77e054ae21e0dc25925" translate="yes" xml:space="preserve">
          <source>Attempts to create a texture view onto this texture. A texture view is somewhat analogous to a view in SQL in that it presents a restricted or reinterpreted view of the original data. Texture views do not allocate any more server-side storage, insted relying on the storage buffer of the source texture.</source>
          <target state="translated">试图在这个纹理上创建一个纹理视图。纹理视图在某种程度上类似于SQL中的视图,因为它呈现的是原始数据的受限或重新解释的视图。纹理视图不分配任何更多的服务器端存储,而是依赖于源纹理的存储缓冲区。</target>
        </trans-unit>
        <trans-unit id="a5135f0e103c8d9400561f2d503910a4bc82cff5" translate="yes" xml:space="preserve">
          <source>Attempts to create the OpenGL context with the current configuration.</source>
          <target state="translated">试图用当前配置创建OpenGL上下文。</target>
        </trans-unit>
        <trans-unit id="b79e8ad7521f57df617cbd803646947bba56a32b" translate="yes" xml:space="preserve">
          <source>Attempts to create the lock file. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another process (or another thread) has created the lock file already, this function will wait for at most</source>
          <target state="translated">尝试创建锁定文件。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个进程（或另一个线程）已经创建了锁定文件，则此函数将最多等待</target>
        </trans-unit>
        <trans-unit id="1007b5514cb8c7a3d4bf7da1cf7389f0861c2fc5" translate="yes" xml:space="preserve">
          <source>Attempts to delete this object's property of the given</source>
          <target state="translated">试图删除此对象的给定属性。</target>
        </trans-unit>
        <trans-unit id="decebf66e3192ac44c25be7fc03e4031b12d88d2" translate="yes" xml:space="preserve">
          <source>Attempts to demarshall the contents of</source>
          <target state="translated">试图解除对《公约》内容的限制。</target>
        </trans-unit>
        <trans-unit id="e933c7654c609a16b70a849f0259c88d1f226b37" translate="yes" xml:space="preserve">
          <source>Attempts to evaluate the query and returns the results in the</source>
          <target state="translated">试图对查询进行评估,并将结果以</target>
        </trans-unit>
        <trans-unit id="b93aafd2c488fbd4f7028d8928d462f6f573c83f" translate="yes" xml:space="preserve">
          <source>Attempts to find a match backwards in</source>
          <target state="translated">试图找到一个匹配的倒退,在</target>
        </trans-unit>
        <trans-unit id="ccea7bbd5134887c359bf2454e1a7bdaf25db03e" translate="yes" xml:space="preserve">
          <source>Attempts to find a match in</source>
          <target state="translated">试图找到一个匹配点</target>
        </trans-unit>
        <trans-unit id="8d399c1dfc647f9aec0390f27281e7ea7daa7a29" translate="yes" xml:space="preserve">
          <source>Attempts to forcefully remove an existing lock file.</source>
          <target state="translated">试图强行删除现有的锁文件。</target>
        </trans-unit>
        <trans-unit id="7ce1b4b5c465ce608a87c1b2bd26a5811a578030" translate="yes" xml:space="preserve">
          <source>Attempts to get the current position and emit &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated&lt;/a&gt;() with this information. If the current position cannot be found within the given</source>
          <target state="translated">尝试获取当前位置并发出带有此信息的&lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated&lt;/a&gt;（）。如果在给定范围内找不到当前位置</target>
        </trans-unit>
        <trans-unit id="6d134c0b9da77afde32ce31bce2c2918299f81a4" translate="yes" xml:space="preserve">
          <source>Attempts to get the current satellite information and emit &lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;satellitesInViewUpdated&lt;/a&gt;() and &lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;satellitesInUseUpdated&lt;/a&gt;() with this information. If the current satellite information cannot be found within the given</source>
          <target state="translated">尝试获取当前的卫星信息，并使用此信息发出&lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;SatellitesInViewUpdated&lt;/a&gt;（）和&lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;SatellitesInUseUpdated&lt;/a&gt;（）。如果在给定范围内找不到当前的卫星信息</target>
        </trans-unit>
        <trans-unit id="13496e0a5f0c2d09c9911476f5b19b0694a84d47" translate="yes" xml:space="preserve">
          <source>Attempts to load the document at the given</source>
          <target state="translated">试图在给定的时间段内加载文件。</target>
        </trans-unit>
        <trans-unit id="c661d770bd92fabd6239ee47e0bdabc00a179fe5" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;, otherwise it returns &lt;code&gt;false&lt;/code&gt; instead of waiting for the lock to become available, i.e. it does not block.</source>
          <target state="translated">尝试锁定阅读。如果获得了锁，则此函数返回 &lt;code&gt;true&lt;/code&gt; ，否则它返回 &lt;code&gt;false&lt;/code&gt; 而不是等待锁变为可用，即，它不会阻塞。</target>
        </trans-unit>
        <trans-unit id="1a88fb80382d1217416d7e840e918cf20b354b6e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for writing, this function will wait for at most</source>
          <target state="translated">尝试锁定阅读。如果获得了锁，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回false。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个线程已锁定写入，则此函数将最多等待</target>
        </trans-unit>
        <trans-unit id="cf2470f484acf6d1012c9c2ef2b5aa8b479942c2" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise, it returns &lt;code&gt;false&lt;/code&gt; immediately.</source>
          <target state="translated">尝试锁定书写。如果获得了锁，则此函数返回 &lt;code&gt;true&lt;/code&gt; ；否则，它将立即返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d129c86a278c6f36b5ce06526519d0734d9305e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for reading or writing, this function will wait for at most</source>
          <target state="translated">尝试锁定书写。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个线程已锁定以进行读取或写入，则此功能将最多等待</target>
        </trans-unit>
        <trans-unit id="9851042db5ee3d962c0e65a9574ee566e3b802f8" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">尝试锁定互斥锁。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b54242a9aaaa9390b8315d197dfc5e23adc00c96" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait at least until</source>
          <target state="translated">尝试锁定互斥锁。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个线程锁定了互斥锁，则此功能至少要等到</target>
        </trans-unit>
        <trans-unit id="103992881af09741dd2a74bdd8c2881ef04d0de6" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at least</source>
          <target state="translated">尝试锁定互斥锁。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个线程锁定了互斥锁，则此函数将至少等待</target>
        </trans-unit>
        <trans-unit id="0c0e3bf6432ce7cc59a4892d1e1402cde84f85c9" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at most</source>
          <target state="translated">尝试锁定互斥锁。如果获得了锁定，则此函数返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。如果另一个线程锁定了互斥锁，则此功能最多将等待</target>
        </trans-unit>
        <trans-unit id="e1cb921a9773a0e3cb28330bf381ade1b5f5db2d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to</source>
          <target state="translated">试图连接到</target>
        </trans-unit>
        <trans-unit id="99e61f7fb0798c2e70b54a7fb64150be665b1a4d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to &lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;(). &lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;() must be called before you open the connection. Alternatively you can use connectToServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;name, &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;);</source>
          <target state="translated">尝试与&lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;（）建立连接。打开连接之前，必须先调用&lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;（）。或者，您可以使用connectToServer（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆name，&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode &lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;）;</target>
        </trans-unit>
        <trans-unit id="03e01069d8b36d9b174aa4290c72a2c4bd99725e" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to &lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;(). &lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;() must be called before you open the connection. Alternatively you can use connectToServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;name, &lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;);</source>
          <target state="translated">尝试建立与&lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;（）的连接。打开连接之前，必须先调用&lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;（）。或者，您可以使用connectToServer（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆name，&lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode &lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;）;</target>
        </trans-unit>
        <trans-unit id="d1467e681088cb474f58c2843b2c55e1b6c057e5" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to the service identified by</source>
          <target state="translated">试图与下列服务建立连接:1.</target>
        </trans-unit>
        <trans-unit id="0a29c67e1524a0c689e5acb8ba6c9a244b1553ed" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection with</source>
          <target state="translated">试图建立联系</target>
        </trans-unit>
        <trans-unit id="3c9e3f8d7f41891e3dd9b073506b0acef887099f" translate="yes" xml:space="preserve">
          <source>Attempts to match the regular expression against the given</source>
          <target state="translated">试图将正则表达式与给定的</target>
        </trans-unit>
        <trans-unit id="199c89b542aa478a5fa190747ea0f479710986f8" translate="yes" xml:space="preserve">
          <source>Attempts to merge this command with</source>
          <target state="translated">试图将此命令与</target>
        </trans-unit>
        <trans-unit id="f5ca5e2e9e9711a045a32c07f9152d8ad5139924" translate="yes" xml:space="preserve">
          <source>Attempts to open the specified</source>
          <target state="translated">试图打开指定的</target>
        </trans-unit>
        <trans-unit id="3f8cb926a2a676e8deb6f8891853236af8c54288" translate="yes" xml:space="preserve">
          <source>Attempts to open the specified &lt;code&gt;target&lt;/code&gt; url in an external application, based on the user's desktop preferences. Returns true if it succeeds, and false otherwise.</source>
          <target state="translated">尝试根据用户的桌面首选项在外部应用程序中打开指定的 &lt;code&gt;target&lt;/code&gt; URL。如果成功，则返回true，否则返回false。</target>
        </trans-unit>
        <trans-unit id="6b71a6b8e24475e656383f1eb601022febdb5466" translate="yes" xml:space="preserve">
          <source>Attempts to perform a global match of the regular expression against the given</source>
          <target state="translated">试图对给定的正则表达式进行全局匹配。</target>
        </trans-unit>
        <trans-unit id="9e19969ea4102dfc32af2b95d7cfe00304c63846" translate="yes" xml:space="preserve">
          <source>Attempts to read a buffer from the decoder, without blocking. Returns invalid buffer if there are no decoded buffers available, or on error.</source>
          <target state="translated">试图从解码器中读取一个缓冲区,没有阻塞。如果没有可用的解密缓冲区,则返回无效缓冲区,或者出错。</target>
        </trans-unit>
        <trans-unit id="670d36fb9755e6a0b702b6f1e33679b28e4e6152" translate="yes" xml:space="preserve">
          <source>Attempts to register the</source>
          <target state="translated">试图注册</target>
        </trans-unit>
        <trans-unit id="cddf114bca27d7c29aa865e757e1a437c1e25fe6" translate="yes" xml:space="preserve">
          <source>Attempts to register the requested service, but do not try to replace it if another application already has it registered. Instead, simply put this application in queue, until it is given up. The &lt;a href=&quot;qdbusconnectioninterface#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;() signal will be emitted when that happens.</source>
          <target state="translated">尝试注册请求的服务，但是如果另一个应用程序已经注册了该服务，则不要尝试替换它。相反，只需将此应用程序放入队列中，直到被放弃。所述&lt;a href=&quot;qdbusconnectioninterface#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;发生这种情况时（在）信号将被发射。</target>
        </trans-unit>
        <trans-unit id="f2b74e4114e69652b3992fc01f39f461b14f78e5" translate="yes" xml:space="preserve">
          <source>Attempts to remove a title record with locale</source>
          <target state="translated">试图删除带有locale的标题记录。</target>
        </trans-unit>
        <trans-unit id="82cbc15d0be68a7a78605443ef53d19a8213c78a" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record</source>
          <target state="translated">试图删除图标记录</target>
        </trans-unit>
        <trans-unit id="4cb9a4d74dba9e00fa899b614fac66cc8f2f9bfe" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record with type</source>
          <target state="translated">试图删除带有类型的图标记录。</target>
        </trans-unit>
        <trans-unit id="0fb0d400d4a26ed57afecebd971943ed09efeb83" translate="yes" xml:space="preserve">
          <source>Attempts to remove the specified</source>
          <target state="translated">试图删除指定的</target>
        </trans-unit>
        <trans-unit id="12126a205886d0344e790e10215c18688e51e51f" translate="yes" xml:space="preserve">
          <source>Attempts to remove the title record</source>
          <target state="translated">试图删除标题记录</target>
        </trans-unit>
        <trans-unit id="0c33a64cf188b3a0d62ad7fc2529abc93b373402" translate="yes" xml:space="preserve">
          <source>Attempts to reserve a thread to run</source>
          <target state="translated">试图保留一个线程来运行</target>
        </trans-unit>
        <trans-unit id="64f145a00700926a58301a1d1bfc05bfa6c811f9" translate="yes" xml:space="preserve">
          <source>Attempts to terminate the process.</source>
          <target state="translated">试图终止该进程。</target>
        </trans-unit>
        <trans-unit id="2df234e38b53a6b85ab548b0f180e7f029345963" translate="yes" xml:space="preserve">
          <source>Attenuation factor is calculated as below:</source>
          <target state="translated">衰减系数计算如下。</target>
        </trans-unit>
        <trans-unit id="09ad0179f653d81ba82ebd5e6c304d2ba9661515" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse (QML type)</source>
          <target state="translated">衰减模型逆向(QML类型</target>
        </trans-unit>
        <trans-unit id="ce89ccd0582bca1e1fc517efde91f8aeb75cf3e7" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse QML Type</source>
          <target state="translated">衰减模型反向 QML类型</target>
        </trans-unit>
        <trans-unit id="442ad9ab30cc31c79e31a7177437263f69ad3daf" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse must be defined inside &lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt; or be added to it using &lt;a href=&quot;qml-qtaudioengine-audioengine#addAttenuationModel-method&quot;&gt;AudioEngine.addAttenuationModel()&lt;/a&gt; if AttenuationModelInverse is created dynamically.</source>
          <target state="translated">如果AttenuationModelInverse是动态创建的，则必须在&lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt;内定义AttenuationModelInverse或使用&lt;a href=&quot;qml-qtaudioengine-audioengine#addAttenuationModel-method&quot;&gt;AudioEngine.addAttenuationModel（）&lt;/a&gt;将其添加到其中。</target>
        </trans-unit>
        <trans-unit id="c8d22061e6bb72bae9090fae777f3aea070b6641" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.end</source>
          <target state="translated">AttenuationModelInverse.end</target>
        </trans-unit>
        <trans-unit id="266a29a9f12223908aaa4bbd5935ee21a3f41418" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.name</source>
          <target state="translated">AttenuationModelInverse.name</target>
        </trans-unit>
        <trans-unit id="d86aea538c0ada6639b238773dead9a47b8fe335" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.rolloff</source>
          <target state="translated">AttenuationModelInverse.rolloff</target>
        </trans-unit>
        <trans-unit id="6bb671e72bb2861d1af041541e0b48c8935c54b8" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.start</source>
          <target state="translated">AttenuationModelInverse.start</target>
        </trans-unit>
        <trans-unit id="b05e207d203b95883d220de8646e6c56a3d90057" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear (QML type)</source>
          <target state="translated">衰减模型线性(QML类型)</target>
        </trans-unit>
        <trans-unit id="60f353471e9c991e94cc0fae75ecd0e90354af2e" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear QML Type</source>
          <target state="translated">衰减模型Linear QML类型</target>
        </trans-unit>
        <trans-unit id="577623c3ccfedc54a92eee6a2374849743dae9dd" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear must be defined inside &lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt; or be added to it using &lt;a href=&quot;qml-qtaudioengine-audioengine#addAttenuationModel-method&quot;&gt;AudioEngine.addAttenuationModel()&lt;/a&gt; if AttenuationModelLinear is created dynamically.</source>
          <target state="translated">如果AttenuationModelLinear是动态创建的，则必须在&lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt;内定义AttenuationModelLinear或使用&lt;a href=&quot;qml-qtaudioengine-audioengine#addAttenuationModel-method&quot;&gt;AudioEngine.addAttenuationModel（）&lt;/a&gt;将其添加到其中。</target>
        </trans-unit>
        <trans-unit id="82b657d75de2579616f22d7ba172386048e8c8bd" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.end</source>
          <target state="translated">AttenuationModelLinear.end</target>
        </trans-unit>
        <trans-unit id="42f4c1e185f05e010f031ba39647493e2323fa4f" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.name</source>
          <target state="translated">AttenuationModelLinear.name</target>
        </trans-unit>
        <trans-unit id="1806984104313153d03add27475b3c0f86426d25" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.start</source>
          <target state="translated">AttenuationModelLinear.start</target>
        </trans-unit>
        <trans-unit id="30f3de5d0f4d3d3444d01af4ba6d6b47140da0b9" translate="yes" xml:space="preserve">
          <source>Attibute changes when any other service attribute is added, deleted or modified.</source>
          <target state="translated">当任何其他服务属性被添加、删除或修改时,Attibute就会改变。</target>
        </trans-unit>
        <trans-unit id="296f046445dbe582b91f5aa136868365544ef00c" translate="yes" xml:space="preserve">
          <source>Attractor (QML type)</source>
          <target state="translated">吸引器(QML类型)</target>
        </trans-unit>
        <trans-unit id="6424677894dc22d22b25d8d17084b49e81b998ac" translate="yes" xml:space="preserve">
          <source>Attractor QML Type</source>
          <target state="translated">吸引器QML类型</target>
        </trans-unit>
        <trans-unit id="37e91bdd60c4c6d50a3df710ed09f06a581d07c9" translate="yes" xml:space="preserve">
          <source>Attractor.Acceleration</source>
          <target state="translated">Attractor.Acceleration</target>
        </trans-unit>
        <trans-unit id="3450f62291cb4940a34a0eb2583dda39ee0a8006" translate="yes" xml:space="preserve">
          <source>Attractor.Constant</source>
          <target state="translated">Attractor.Constant</target>
        </trans-unit>
        <trans-unit id="523c31ea9a46e9394e0c97eca30413df375af83b" translate="yes" xml:space="preserve">
          <source>Attractor.InverseLinear</source>
          <target state="translated">Attractor.InverseLinear</target>
        </trans-unit>
        <trans-unit id="550f4308046218c9d3997b7a1095de56a6bef398" translate="yes" xml:space="preserve">
          <source>Attractor.InverseQuadratic</source>
          <target state="translated">Attractor.InverseQuadratic</target>
        </trans-unit>
        <trans-unit id="eef61e37501774843c8a62fd051143c6aaee899b" translate="yes" xml:space="preserve">
          <source>Attractor.Linear</source>
          <target state="translated">Attractor.Linear</target>
        </trans-unit>
        <trans-unit id="b769d90573cbe30f194df15d878d14f75f263699" translate="yes" xml:space="preserve">
          <source>Attractor.Position</source>
          <target state="translated">Attractor.Position</target>
        </trans-unit>
        <trans-unit id="299bf07566b49ce0997d38501136b507e8c16f6e" translate="yes" xml:space="preserve">
          <source>Attractor.Quadratic</source>
          <target state="translated">Attractor.Quadratic</target>
        </trans-unit>
        <trans-unit id="427cc833289066553dd79e0e28d4749ca5bc4070" translate="yes" xml:space="preserve">
          <source>Attractor.Velocity</source>
          <target state="translated">Attractor.Velocity</target>
        </trans-unit>
        <trans-unit id="4c87b9b41fb26d8f52a9706ac5181e6eb8b6b77f" translate="yes" xml:space="preserve">
          <source>Attractor.affectedParameter</source>
          <target state="translated">Attractor.affectedParameter</target>
        </trans-unit>
        <trans-unit id="7a1b7d6854a28d0edaa4635ca87a1f0dade8f683" translate="yes" xml:space="preserve">
          <source>Attractor.proportionalToDistance</source>
          <target state="translated">Attractor.proportionalToDistance</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="ccc5cf4a1d9e54a958908f4ae2479773cc555b20" translate="yes" xml:space="preserve">
          <source>Attribute (QML type)</source>
          <target state="translated">属性(QML类型)</target>
        </trans-unit>
        <trans-unit id="fe462099fbeb57d289ce57cd51b118b84d30152b" translate="yes" xml:space="preserve">
          <source>Attribute Class</source>
          <target state="translated">属性类</target>
        </trans-unit>
        <trans-unit id="75ea40b4d4d812c5a6cc40ab6740ed2f0ffffecf" translate="yes" xml:space="preserve">
          <source>Attribute Node</source>
          <target state="translated">属性节点</target>
        </trans-unit>
        <trans-unit id="bb1ec77d2af9d172537986d4c44c207dd6b101fe" translate="yes" xml:space="preserve">
          <source>Attribute Nodes</source>
          <target state="translated">属性节点</target>
        </trans-unit>
        <trans-unit id="c3b5ca640bea37921e1d4fcc6cfcf47b830e2c76" translate="yes" xml:space="preserve">
          <source>Attribute QML Type</source>
          <target state="translated">属性 QML 类型</target>
        </trans-unit>
        <trans-unit id="b75fbc526e507c536f15818a635fabc424d8bb9f" translate="yes" xml:space="preserve">
          <source>Attribute Struct</source>
          <target state="translated">属性结构</target>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="translated">属性类型</target>
        </trans-unit>
        <trans-unit id="c934b9aa0ce3e9181f546dd3f2f1c3c3122aef7f" translate="yes" xml:space="preserve">
          <source>Attribute codes for &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; and &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt;和&lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply的&lt;/a&gt;属性代码。</target>
        </trans-unit>
        <trans-unit id="a0acd5562d8332a5210e9cd9fd1780c7a7e346ef" translate="yes" xml:space="preserve">
          <source>Attribute codes for the &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; and &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt;和&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply的&lt;/a&gt;属性代码。</target>
        </trans-unit>
        <trans-unit id="f836508c2fb47e8d7e608a9c9a617b59d23ac7a6" translate="yes" xml:space="preserve">
          <source>Attribute protocol UUID</source>
          <target state="translated">UUID协议属性</target>
        </trans-unit>
        <trans-unit id="e8aa585451eaa1f17032c02ff21f96d5a727df6d" translate="yes" xml:space="preserve">
          <source>Attribute values will be normalized. For example &lt;code&gt;&amp;lt;tag attr=&quot; a \n b &quot; /&amp;gt;&lt;/code&gt; will be equivalent to &lt;code&gt;&amp;lt;tag attr=&quot;a b&quot;/&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">属性值将被规范化。例如， &lt;code&gt;&amp;lt;tag attr=&quot; a \n b &quot; /&amp;gt;&lt;/code&gt; 等同于 &lt;code&gt;&amp;lt;tag attr=&quot;a b&quot;/&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bdefcbfbf5c315c26fce867e5c029439ea81fd1" translate="yes" xml:space="preserve">
          <source>Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</source>
          <target state="translated">Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbf89753a05176fba5ab45059f847ee3b49ce26" translate="yes" xml:space="preserve">
          <source>Attribute::create()</source>
          <target state="translated">Attribute::create()</target>
        </trans-unit>
        <trans-unit id="4ec68433220a996a291d7abae73f2f65290d791a" translate="yes" xml:space="preserve">
          <source>Attribute::createWithAttributeType()</source>
          <target state="translated">Attribute::createWithAttributeType()</target>
        </trans-unit>
        <trans-unit id="b75a077312c8345d35851cf8e5f1bd3719959ae8" translate="yes" xml:space="preserve">
          <source>AttributeSet Struct</source>
          <target state="translated">属性集结构</target>
        </trans-unit>
        <trans-unit id="5a918eacf77c88cdbb1cc9b8fa49436644e5a6fc" translate="yes" xml:space="preserve">
          <source>Attributes are extra meta-data that are used to control the behavior of the request and to pass further information from the reply back to the application. Attributes are also extensible, allowing custom implementations to pass custom values.</source>
          <target state="translated">属性是额外的元数据,用于控制请求的行为,并从响应中向应用程序传递进一步的信息。属性也是可扩展的,允许自定义实现传递自定义值。</target>
        </trans-unit>
        <trans-unit id="8c81d1b952a40253bd4ee2fbac757715587dc33f" translate="yes" xml:space="preserve">
          <source>Attributes are returned by a &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; in &lt;a href=&quot;qxmlstreamreader#attributes&quot;&gt;attributes()&lt;/a&gt; when the reader reports a &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;start element&lt;/a&gt;. The class can also be used with a &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; as an argument to &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes()&lt;/a&gt;.</source>
          <target state="translated">当阅读器报告&lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;开始元素&lt;/a&gt;时，&lt;a href=&quot;qxmlstreamreader#attributes&quot;&gt;属性&lt;/a&gt;由&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt;在attribute（）中返回。该类还可以与&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter一起&lt;/a&gt;用作&lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes（）&lt;/a&gt;的参数。</target>
        </trans-unit>
        <trans-unit id="fc8f36e82eac647fe22f284d2df1a924c673bc26" translate="yes" xml:space="preserve">
          <source>Attributes for which &lt;a href=&quot;qdomattr#specified&quot;&gt;QDomAttr::specified&lt;/a&gt;() is true are also imported, other attributes are not imported. If</source>
          <target state="translated">为此属性&lt;a href=&quot;qdomattr#specified&quot;&gt;QDomAttr ::指定的&lt;/a&gt;（）是真实的，也进口，其他属性不导入。如果</target>
        </trans-unit>
        <trans-unit id="9c35b055942db90e595b2a9f7832e56c4fefa4a1" translate="yes" xml:space="preserve">
          <source>Attributes in Object Declarations</source>
          <target state="translated">对象声明中的属性</target>
        </trans-unit>
        <trans-unit id="42ae1ca911f09da25705c803e802dc66807bb214" translate="yes" xml:space="preserve">
          <source>Attributes of the &lt;code&gt;&amp;lt;ui&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;&amp;lt;ui&amp;gt;&lt;/code&gt; 标记的属性：</target>
        </trans-unit>
        <trans-unit id="5d0e697c5f98e73026bf71edfa6226e1708d59ff" translate="yes" xml:space="preserve">
          <source>Attributes that declare namespaces (i.e. the attribute</source>
          <target state="translated">声明命名空间的属性(如:属性 &quot;A&quot;、&quot;B&quot;、&quot;C&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D&quot;、&quot;D &quot;等。</target>
        </trans-unit>
        <trans-unit id="0038b89e1b24bd41bd084d172a1fb895246dfe89" translate="yes" xml:space="preserve">
          <source>Attributes which are not specifically set will not affect the font selection algorithm, and default values will be preferred instead.</source>
          <target state="translated">没有特别设置的属性不会影响字体选择算法,而会首选默认值。</target>
        </trans-unit>
        <trans-unit id="a4d81396d4ea19197dfceaa774ef776332674285" translate="yes" xml:space="preserve">
          <source>Attribution</source>
          <target state="translated">Attribution</target>
        </trans-unit>
        <trans-unit id="7b647fe7f6d07531f44e887242ee0bcb549d7597" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the editorial.</source>
          <target state="translated">显示编辑时必须显示的署名文字。</target>
        </trans-unit>
        <trans-unit id="88df49eb25d5fb6c67ccecf800b4a9109a91bfb0" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the image.</source>
          <target state="translated">显示图片时必须显示的署名文字。</target>
        </trans-unit>
        <trans-unit id="22d2e726f6a53b1a760afeb7573e4972ac54b136" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the review.</source>
          <target state="translated">显示评论时必须显示的署名文字。</target>
        </trans-unit>
        <trans-unit id="acdac205f5e24cb75113c4b281a2c13f08b75159" translate="yes" xml:space="preserve">
          <source>Audio</source>
          <target state="translated">Audio</target>
        </trans-unit>
        <trans-unit id="a7dc566772d0eb2736f817b9153166b4af101dc8" translate="yes" xml:space="preserve">
          <source>Audio (QML type)</source>
          <target state="translated">音频(QML类型)</target>
        </trans-unit>
        <trans-unit id="d7016e7c193553ab435a13fc9be640f5aeb430f7" translate="yes" xml:space="preserve">
          <source>Audio Overview</source>
          <target state="translated">音频概述</target>
        </trans-unit>
        <trans-unit id="7fef1324817460a4d153dfcd0886fabb6a0e2171" translate="yes" xml:space="preserve">
          <source>Audio QML Type</source>
          <target state="translated">音频QML类型</target>
        </trans-unit>
        <trans-unit id="4c937bc7a554ea29bd7b4e0c8bf6151575f0600c" translate="yes" xml:space="preserve">
          <source>Audio and Video Codecs</source>
          <target state="translated">音频和视频编解码器</target>
        </trans-unit>
        <trans-unit id="82e35f426c0bee9fdae0ab9c5ae45d32d607f51c" translate="yes" xml:space="preserve">
          <source>Audio attributes</source>
          <target state="translated">音频属性</target>
        </trans-unit>
        <trans-unit id="1f6b31f833ca0369e9443bb43e9565fd9219c228" translate="yes" xml:space="preserve">
          <source>Audio capture devices, such as microphones.</source>
          <target state="translated">音频采集设备,如麦克风。</target>
        </trans-unit>
        <trans-unit id="5c5c23de36b942469e47171328a4a32d1528d728" translate="yes" xml:space="preserve">
          <source>Audio data is being processed, this state is set after start() is called and while audio data is available to be processed.</source>
          <target state="translated">正在处理音频数据,这个状态是在start()被调用后,并且在音频数据可以被处理的时候设置的。</target>
        </trans-unit>
        <trans-unit id="209f6075d5e8e049519ea62f2fe16d087c632489" translate="yes" xml:space="preserve">
          <source>Audio data is not being fed to the audio device at a fast enough rate</source>
          <target state="translated">音频数据没有以足够快的速度送入音频设备。</target>
        </trans-unit>
        <trans-unit id="515a711e89f9d57b5922003c3e2fc908c1e1dc29" translate="yes" xml:space="preserve">
          <source>Audio feedback.</source>
          <target state="translated">音频反馈。</target>
        </trans-unit>
        <trans-unit id="1426e62896abd1290f70cb3c22e0e6c78f967490" translate="yes" xml:space="preserve">
          <source>Audio output volume: from 0.0 (silent) to 1.0 (maximum)</source>
          <target state="translated">音频输出音量:从0.0(无声)到1.0(最大)。</target>
        </trans-unit>
        <trans-unit id="ea96cac1f52cce651db3af56aec8c7df8d5888f0" translate="yes" xml:space="preserve">
          <source>Audio stream.</source>
          <target state="translated">音频流。</target>
        </trans-unit>
        <trans-unit id="14ae2bc082d57b7bce69bb7383fb22924348c87a" translate="yes" xml:space="preserve">
          <source>Audio.audioRole</source>
          <target state="translated">Audio.audioRole</target>
        </trans-unit>
        <trans-unit id="fe495e1b3a94a274d2f600645542d4ae12896ba5" translate="yes" xml:space="preserve">
          <source>Audio.autoLoad</source>
          <target state="translated">Audio.autoLoad</target>
        </trans-unit>
        <trans-unit id="3f2f5c670f017fd4f2ed0e4b7c73b32da8f82682" translate="yes" xml:space="preserve">
          <source>Audio.autoPlay</source>
          <target state="translated">Audio.autoPlay</target>
        </trans-unit>
        <trans-unit id="cef050f730d6d1ede632fdecad6d6b6c627e5ae6" translate="yes" xml:space="preserve">
          <source>Audio.availability</source>
          <target state="translated">Audio.availability</target>
        </trans-unit>
        <trans-unit id="9e1ae1731b54dbc698a38ae19e7bec41bf3105d6" translate="yes" xml:space="preserve">
          <source>Audio.bufferProgress</source>
          <target state="translated">Audio.bufferProgress</target>
        </trans-unit>
        <trans-unit id="60ff0d2426c87c4717a71a2a6fa331a300006206" translate="yes" xml:space="preserve">
          <source>Audio.customAudioRole</source>
          <target state="translated">Audio.customAudioRole</target>
        </trans-unit>
        <trans-unit id="497123a6ebc816ed877d00ecdf06af2057e8b50b" translate="yes" xml:space="preserve">
          <source>Audio.duration</source>
          <target state="translated">Audio.duration</target>
        </trans-unit>
        <trans-unit id="76d693f55f22c3a69402e1b172872fa2226e7378" translate="yes" xml:space="preserve">
          <source>Audio.error</source>
          <target state="translated">Audio.error</target>
        </trans-unit>
        <trans-unit id="bc259981484e31706e7b5b8022cb1c1b433bb42b" translate="yes" xml:space="preserve">
          <source>Audio.error()</source>
          <target state="translated">Audio.error()</target>
        </trans-unit>
        <trans-unit id="e3cd1d110a5e944233bd361cc299667d0428095b" translate="yes" xml:space="preserve">
          <source>Audio.errorString</source>
          <target state="translated">Audio.errorString</target>
        </trans-unit>
        <trans-unit id="6b7c7838c26f7db5bcae41a4467e0d29b2d24b45" translate="yes" xml:space="preserve">
          <source>Audio.groupmetaData.title</source>
          <target state="translated">Audio.groupmetaData.title</target>
        </trans-unit>
        <trans-unit id="a095be85d0fbec28b81dd99a7be67bca54ae5272" translate="yes" xml:space="preserve">
          <source>Audio.hasAudio</source>
          <target state="translated">Audio.hasAudio</target>
        </trans-unit>
        <trans-unit id="8cfdd4d28ac430708cfb7af93ebf904ec893e562" translate="yes" xml:space="preserve">
          <source>Audio.hasVideo</source>
          <target state="translated">Audio.hasVideo</target>
        </trans-unit>
        <trans-unit id="a9323ba5af8964166a47e5044cd402fbcf082efe" translate="yes" xml:space="preserve">
          <source>Audio.loops</source>
          <target state="translated">Audio.loops</target>
        </trans-unit>
        <trans-unit id="d8309dab28cef9b379ac0d35caf8cf310709bfde" translate="yes" xml:space="preserve">
          <source>Audio.mediaObject</source>
          <target state="translated">Audio.mediaObject</target>
        </trans-unit>
        <trans-unit id="1f55da54a6669f148566661a4db0e039f2d1dcde" translate="yes" xml:space="preserve">
          <source>Audio.metaData.albumArtist</source>
          <target state="translated">Audio.metaData.albumArtist</target>
        </trans-unit>
        <trans-unit id="6c3c72eee168065edaf864e46370dcb11936a4aa" translate="yes" xml:space="preserve">
          <source>Audio.muted</source>
          <target state="translated">Audio.muted</target>
        </trans-unit>
        <trans-unit id="403fcb13f7256e638d63e3715f34eccdfbb8a1fc" translate="yes" xml:space="preserve">
          <source>Audio.notifyInterval</source>
          <target state="translated">Audio.notifyInterval</target>
        </trans-unit>
        <trans-unit id="6d733b889602e22bcf797e5fe2e62acc9feb294f" translate="yes" xml:space="preserve">
          <source>Audio.pause()</source>
          <target state="translated">Audio.pause()</target>
        </trans-unit>
        <trans-unit id="91012afdd13ffc49383aba56847cd400a01a5460" translate="yes" xml:space="preserve">
          <source>Audio.paused()</source>
          <target state="translated">Audio.paused()</target>
        </trans-unit>
        <trans-unit id="663d9b04672f8f13b360ed542e814ab48c1a4a8b" translate="yes" xml:space="preserve">
          <source>Audio.play()</source>
          <target state="translated">Audio.play()</target>
        </trans-unit>
        <trans-unit id="62eb1265d0c18b526c2ffc28c5654f74bc4e1c2e" translate="yes" xml:space="preserve">
          <source>Audio.playbackRate</source>
          <target state="translated">Audio.playbackRate</target>
        </trans-unit>
        <trans-unit id="c6367e644e0d158e8217b287787b424fef5e0859" translate="yes" xml:space="preserve">
          <source>Audio.playbackState</source>
          <target state="translated">Audio.playbackState</target>
        </trans-unit>
        <trans-unit id="933fda413ba480969e06092392531ecec79ca63e" translate="yes" xml:space="preserve">
          <source>Audio.playbackStateChanged()</source>
          <target state="translated">Audio.playbackStateChanged()</target>
        </trans-unit>
        <trans-unit id="e468eecfbee118d6ddb238a67cdc81c48ccf43d9" translate="yes" xml:space="preserve">
          <source>Audio.playing()</source>
          <target state="translated">Audio.playing()</target>
        </trans-unit>
        <trans-unit id="332e525e4e361867a2b8e9ec7cfc3af8feac3419" translate="yes" xml:space="preserve">
          <source>Audio.playlist</source>
          <target state="translated">Audio.playlist</target>
        </trans-unit>
        <trans-unit id="9400c6af650d1dc9c95fcb3e6b57ebb6e3a56d6d" translate="yes" xml:space="preserve">
          <source>Audio.position</source>
          <target state="translated">Audio.position</target>
        </trans-unit>
        <trans-unit id="f66e6ee132fc5015582532632195fd3024f0399a" translate="yes" xml:space="preserve">
          <source>Audio.seek()</source>
          <target state="translated">Audio.seek()</target>
        </trans-unit>
        <trans-unit id="8b58755de12aed29183019d66f70741e14becd26" translate="yes" xml:space="preserve">
          <source>Audio.seekable</source>
          <target state="translated">Audio.seekable</target>
        </trans-unit>
        <trans-unit id="ca14124357a8b3426cba1d9db09bc952f22423ef" translate="yes" xml:space="preserve">
          <source>Audio.source</source>
          <target state="translated">Audio.source</target>
        </trans-unit>
        <trans-unit id="87c7adf361330f5648c3d9c262f2a66ba704665a" translate="yes" xml:space="preserve">
          <source>Audio.status</source>
          <target state="translated">Audio.status</target>
        </trans-unit>
        <trans-unit id="4b8f1b593a1ab764714704ba9ec2fc02d41ab53b" translate="yes" xml:space="preserve">
          <source>Audio.stop()</source>
          <target state="translated">Audio.stop()</target>
        </trans-unit>
        <trans-unit id="afc00b0e6ee90a6c57546caebd257bf586bca56e" translate="yes" xml:space="preserve">
          <source>Audio.stopped()</source>
          <target state="translated">Audio.stopped()</target>
        </trans-unit>
        <trans-unit id="3406df839d5c55d297ef73c7a109cd1c89111ccb" translate="yes" xml:space="preserve">
          <source>Audio.supportedAudioRoles()</source>
          <target state="translated">Audio.supportedAudioRoles()</target>
        </trans-unit>
        <trans-unit id="8f72de47027e6e994034d29fa1b976deb5f08795" translate="yes" xml:space="preserve">
          <source>Audio.volume</source>
          <target state="translated">Audio.volume</target>
        </trans-unit>
        <trans-unit id="5decd06bf8e616e1879544fe44bf97af3fa1e134" translate="yes" xml:space="preserve">
          <source>Audio/Video Control Transport Protocol UUID</source>
          <target state="translated">音频/视频控制传输协议UUID</target>
        </trans-unit>
        <trans-unit id="c372d9c594ee32457e409f2794853dcbb973339e" translate="yes" xml:space="preserve">
          <source>Audio/Video Distribution Transport Protocol UUID</source>
          <target state="translated">音频/视频分配传输协议UUID</target>
        </trans-unit>
        <trans-unit id="2e0b001b39efb0867dcc0e264a782b0249a2b04d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service &amp;amp; profile)</source>
          <target state="translated">音频/视频远程控制配置文件（AVRCP）UUID（服务和配置文件）</target>
        </trans-unit>
        <trans-unit id="c3d1e040e6627e4e6ac4cb12a81a24bee1497d4d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service)</source>
          <target state="translated">音频/视频远程控制配置文件(AVRCP)UUID(服务)</target>
        </trans-unit>
        <trans-unit id="fc1beb28de9f28bc0356cc58a5545e34f4e529e6" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile UUID (service)</source>
          <target state="translated">音频/视频远程控制配置文件UUID(服务)</target>
        </trans-unit>
        <trans-unit id="f161ae61c892d2ea0241e169d612b03d8caeae97" translate="yes" xml:space="preserve">
          <source>AudioBitRate</source>
          <target state="translated">AudioBitRate</target>
        </trans-unit>
        <trans-unit id="7543bfd2e6a4581eaefe18f4555e78df03b4909d" translate="yes" xml:space="preserve">
          <source>AudioCategory (QML type)</source>
          <target state="translated">音频类别(QML类型</target>
        </trans-unit>
        <trans-unit id="e82123f9c1c5dcac17b93eb442519acb520a6eda" translate="yes" xml:space="preserve">
          <source>AudioCategory QML Type</source>
          <target state="translated">AudioCategory QML类型</target>
        </trans-unit>
        <trans-unit id="a75f7c37be399131fc95476f6c3840f3be22beef" translate="yes" xml:space="preserve">
          <source>AudioCategory.name</source>
          <target state="translated">AudioCategory.name</target>
        </trans-unit>
        <trans-unit id="edf389023a74b61a6a8c0653c41377765b2b1f3f" translate="yes" xml:space="preserve">
          <source>AudioCategory.pause()</source>
          <target state="translated">AudioCategory.pause()</target>
        </trans-unit>
        <trans-unit id="58d0406145cad48cf9621f31805e3dd1c985670d" translate="yes" xml:space="preserve">
          <source>AudioCategory.stop()</source>
          <target state="translated">AudioCategory.stop()</target>
        </trans-unit>
        <trans-unit id="a7ad9f381c72e09926174fc7c3536f212c18e3da" translate="yes" xml:space="preserve">
          <source>AudioCategory.volume</source>
          <target state="translated">AudioCategory.volume</target>
        </trans-unit>
        <trans-unit id="61272d0a3123930b8bb89226efea6caebd1af833" translate="yes" xml:space="preserve">
          <source>AudioCodec</source>
          <target state="translated">AudioCodec</target>
        </trans-unit>
        <trans-unit id="0eff2798ed4add3fdd44dd8dee04ae036c6ce927" translate="yes" xml:space="preserve">
          <source>AudioEngine (QML type)</source>
          <target state="translated">音频引擎(QML类型)</target>
        </trans-unit>
        <trans-unit id="0dd68fc35ce487de94c1e48720e8a7543a05501c" translate="yes" xml:space="preserve">
          <source>AudioEngine QML Type</source>
          <target state="translated">音频引擎QML类型</target>
        </trans-unit>
        <trans-unit id="abc3dd7e6cf5ffe0c5e848c0962f82a9bf2c05bb" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAttenuationModel()</source>
          <target state="translated">AudioEngine.addAttenuationModel()</target>
        </trans-unit>
        <trans-unit id="ecda478c8cbbf8acda4ef76c3541c2515967f1c6" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioCategory()</source>
          <target state="translated">AudioEngine.addAudioCategory()</target>
        </trans-unit>
        <trans-unit id="b3ed0854576d78bab7cd09ee7377cca3011b9953" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioSample()</source>
          <target state="translated">AudioEngine.addAudioSample()</target>
        </trans-unit>
        <trans-unit id="086a2aa1326321e50fee5e7235632c6ec3ad0259" translate="yes" xml:space="preserve">
          <source>AudioEngine.addSound()</source>
          <target state="translated">AudioEngine.addSound()</target>
        </trans-unit>
        <trans-unit id="6809e8476cc16282d512e31445be24933dd4e3af" translate="yes" xml:space="preserve">
          <source>AudioEngine.categories</source>
          <target state="translated">AudioEngine.categories</target>
        </trans-unit>
        <trans-unit id="144c87694d48f04dddbc7e3dc799b96b687f655a" translate="yes" xml:space="preserve">
          <source>AudioEngine.dopplerFactor</source>
          <target state="translated">AudioEngine.dopplerFactor</target>
        </trans-unit>
        <trans-unit id="94c9ac9a2b28948bf88cebb25e4229d6fd47fbde" translate="yes" xml:space="preserve">
          <source>AudioEngine.finishedLoading()</source>
          <target state="translated">AudioEngine.finishedLoading()</target>
        </trans-unit>
        <trans-unit id="64e535a598e2a57ff979161c577e8f5d088efdfb" translate="yes" xml:space="preserve">
          <source>AudioEngine.isLoadingChanged()</source>
          <target state="translated">AudioEngine.isLoadingChanged()</target>
        </trans-unit>
        <trans-unit id="9ca764394a8f2a8a81bd9bb905bf61f61fe0eb68" translate="yes" xml:space="preserve">
          <source>AudioEngine.listener</source>
          <target state="translated">AudioEngine.listener</target>
        </trans-unit>
        <trans-unit id="0db9cde1d7ceb8df8432df7e5f90ef51e961167e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstanceCountChanged()</source>
          <target state="translated">AudioEngine.liveInstanceCountChanged()</target>
        </trans-unit>
        <trans-unit id="a3c780c8685f4ae94cbc366c23da62c5bb21cd0e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstances</source>
          <target state="translated">AudioEngine.liveInstances</target>
        </trans-unit>
        <trans-unit id="88f82e43cbd231a76e4e5e286b7af3fdd2cdc3f8" translate="yes" xml:space="preserve">
          <source>AudioEngine.loading</source>
          <target state="translated">AudioEngine.loading</target>
        </trans-unit>
        <trans-unit id="3eafc6185deae73e78947e584fb199ded6111e2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.ready()</source>
          <target state="translated">AudioEngine.ready()</target>
        </trans-unit>
        <trans-unit id="d18f598be844ac08e14c23bc228f025b11d3784f" translate="yes" xml:space="preserve">
          <source>AudioEngine.samples</source>
          <target state="translated">AudioEngine.samples</target>
        </trans-unit>
        <trans-unit id="e74d8427b95136f8fdea57244e12eca46350d834" translate="yes" xml:space="preserve">
          <source>AudioEngine.sounds</source>
          <target state="translated">AudioEngine.sounds</target>
        </trans-unit>
        <trans-unit id="6b2018c1f51763fb309bd535727e578e9ee03f2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.speedOfSound</source>
          <target state="translated">AudioEngine.speedOfSound</target>
        </trans-unit>
        <trans-unit id="4b682bed9f7b034f73f1a2096eb1f36aff816bc7" translate="yes" xml:space="preserve">
          <source>AudioListener (QML type)</source>
          <target state="translated">音频监听器(QML类型</target>
        </trans-unit>
        <trans-unit id="65dc0356ed096e404aafff20c5b87f483ada9c16" translate="yes" xml:space="preserve">
          <source>AudioListener QML Type</source>
          <target state="translated">AudioListener QML类型</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
