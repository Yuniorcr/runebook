<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="8c8795c484ecf98b298f7a8dba23edba6ceeba16" translate="yes" xml:space="preserve">
          <source>styleData.&lt;a href=&quot;qml-qtquick-controls-tableviewcolumn#elideMode-prop&quot;&gt;elideMode&lt;/a&gt; - the elide mode of the column</source>
          <target state="translated">styleData。&lt;a href=&quot;qml-qtquick-controls-tableviewcolumn#elideMode-prop&quot;&gt;elideMode-&lt;/a&gt;列的elide模式</target>
        </trans-unit>
        <trans-unit id="a32f5924fa6d8574d31c7d7f435a87ec327dd631" translate="yes" xml:space="preserve">
          <source>styleData.&lt;a href=&quot;qml-qtquick-controls-treeview#isExpanded-method&quot;&gt;isExpanded&lt;/a&gt; - true when the item is expanded</source>
          <target state="translated">styleData。&lt;a href=&quot;qml-qtquick-controls-treeview#isExpanded-method&quot;&gt;isExpanded-展开&lt;/a&gt;项目时为true</target>
        </trans-unit>
        <trans-unit id="20263fe2dc3737dab8f89d664dc745cd6562b874" translate="yes" xml:space="preserve">
          <source>styleData.alternate - true when the row uses the alternate background color</source>
          <target state="translated">styleData.alternate-当行使用交替的背景色时为true。</target>
        </trans-unit>
        <trans-unit id="ef29f2ea08fe8cfc5b2cbf90e6f5f48f51bfccd2" translate="yes" xml:space="preserve">
          <source>styleData.column - the index of the column</source>
          <target state="translated">styleData.column-列的索引。</target>
        </trans-unit>
        <trans-unit id="b0db2055f84157155162398a3f404d608b0d77c3" translate="yes" xml:space="preserve">
          <source>styleData.column - the index of the view column</source>
          <target state="translated">styleData.column-视图列的索引。</target>
        </trans-unit>
        <trans-unit id="84a4697b7562f1d817bc284b5bb861203899a89c" translate="yes" xml:space="preserve">
          <source>styleData.column - the index of the view column. Will always be 0</source>
          <target state="translated">styleData.column-视图列的索引。将始终为0</target>
        </trans-unit>
        <trans-unit id="b6b6944dbf1f79f296af4dab817e615b5290c5be" translate="yes" xml:space="preserve">
          <source>styleData.containsMouse - true when the column is under the mouse</source>
          <target state="translated">styleData.containsMouse-当列在鼠标下时为true。</target>
        </trans-unit>
        <trans-unit id="0846a60f8367be9db622585a711f1a17919880e7" translate="yes" xml:space="preserve">
          <source>styleData.depth - the depth of the current item in the model</source>
          <target state="translated">styleData.depth-当前项目在模型中的深度。</target>
        </trans-unit>
        <trans-unit id="d9f5801049ecb2176402110f3a23d1d041c6eacf" translate="yes" xml:space="preserve">
          <source>styleData.depth - the depth of the current item in the tree model</source>
          <target state="translated">styleData.depth-树模型中当前项目的深度。</target>
        </trans-unit>
        <trans-unit id="51a11387306f98697207d06fdbe8572897567a51" translate="yes" xml:space="preserve">
          <source>styleData.elideMode - the elide mode of the column</source>
          <target state="translated">styleData.elideMode-列的滑行模式。</target>
        </trans-unit>
        <trans-unit id="4721dc91292a72b846f0860e354006164d4374c7" translate="yes" xml:space="preserve">
          <source>styleData.hasActiveFocus - true when the row has focus</source>
          <target state="translated">styleData.hasActiveFocus-当行有焦点时为true。</target>
        </trans-unit>
        <trans-unit id="5197cea0c944cfdb51b373727f738391712d2a07" translate="yes" xml:space="preserve">
          <source>styleData.hasActiveFocus - true when the row has focus (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3)</source>
          <target state="translated">styleData.hasActiveFocus-当行具有焦点时为true（从&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3开始）</target>
        </trans-unit>
        <trans-unit id="db63414044743b89b872063ef3b2e0e19b01a34e" translate="yes" xml:space="preserve">
          <source>styleData.hasActiveFocus - true when the row has focus (since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3)</source>
          <target state="translated">styleData.hasActiveFocus-当行具有焦点时为true（从&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3开始）</target>
        </trans-unit>
        <trans-unit id="b9a8c3a14b32050b579a831556a9243cde926d3e" translate="yes" xml:space="preserve">
          <source>styleData.hasChildren - true if the model index of the current item has children</source>
          <target state="translated">styleData.hasChildren-如果当前项目的模型索引有子项目,则为true。</target>
        </trans-unit>
        <trans-unit id="4cd8ae8d4c5be186031a22c3ef39500f754752d4" translate="yes" xml:space="preserve">
          <source>styleData.hasChildren - true if the model index of the current item has or can have children</source>
          <target state="translated">styleData.hasChildren-如果当前项目的模型索引有或可以有子项目,则为true。</target>
        </trans-unit>
        <trans-unit id="5880bdf44d7fd79fce35ae9b71bf8e5e5aa54e03" translate="yes" xml:space="preserve">
          <source>styleData.hasSibling - true if the model index of the current item has a sibling</source>
          <target state="translated">styleData.hasSibling-如果当前项目的模型索引有兄弟姐妹,则为true。</target>
        </trans-unit>
        <trans-unit id="9d9b55f7b576ed8f917cf8842e127e8669a527b6" translate="yes" xml:space="preserve">
          <source>styleData.hasSibling - true if the model index of the current item has sibling</source>
          <target state="translated">styleData.hasSibling-如果当前项目的模型索引有兄弟姐妹,则为true。</target>
        </trans-unit>
        <trans-unit id="49aceb8efcb0ebe97a283c2f777f537adca70d47" translate="yes" xml:space="preserve">
          <source>styleData.index - the &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; of the current item in the model</source>
          <target state="translated">styleData.index- 模型中当前项目的&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165ea5c9c08e03dd611faf21a8e73a7f6768c47e" translate="yes" xml:space="preserve">
          <source>styleData.isExpanded - true when the item is expanded</source>
          <target state="translated">styleData.isExpanded-当项目被展开时为true。</target>
        </trans-unit>
        <trans-unit id="3aa7df31aaa7225295769932f166a8254646a6c3" translate="yes" xml:space="preserve">
          <source>styleData.pressed - true when the column is being pressed</source>
          <target state="translated">styleData.pressed-当列被按下时为true。</target>
        </trans-unit>
        <trans-unit id="3ae70cbf3324ee9299b8344fa83372f3b81aca39" translate="yes" xml:space="preserve">
          <source>styleData.pressed - true when the item is pressed</source>
          <target state="translated">styleData.pressed-当项目被按下时为true。</target>
        </trans-unit>
        <trans-unit id="42daf870abb1f30635747bd8173773e84cee9eae" translate="yes" xml:space="preserve">
          <source>styleData.pressed - true when the item is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3)</source>
          <target state="translated">styleData.pressed-按下项目时为true（从&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3开始）</target>
        </trans-unit>
        <trans-unit id="f923335cd231cdc6e28313823e2e5ac6562f9a3c" translate="yes" xml:space="preserve">
          <source>styleData.pressed - true when the item is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3)</source>
          <target state="translated">styleData.pressed-按下项目时为true（从&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3开始）</target>
        </trans-unit>
        <trans-unit id="1b0167dcd1b5cc527b1789f69acc3f49be0a2705" translate="yes" xml:space="preserve">
          <source>styleData.pressed - true when the row is pressed (since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 1.3)</source>
          <target state="translated">styleData.pressed-按下该行时为true（从&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 1.3开始）</target>
        </trans-unit>
        <trans-unit id="736670e26f774578107d33a691d5f7bbf9583ce2" translate="yes" xml:space="preserve">
          <source>styleData.role - the role of the view column</source>
          <target state="translated">styleData.role-视图列的作用。</target>
        </trans-unit>
        <trans-unit id="1584d3ede35d2ccf78e665da0a83fa6613e7e370" translate="yes" xml:space="preserve">
          <source>styleData.row - the index of the row</source>
          <target state="translated">styleData.row-该行的索引。</target>
        </trans-unit>
        <trans-unit id="c12cc7a664fbb3ef7d821e61fe8c6a6c4447fede" translate="yes" xml:space="preserve">
          <source>styleData.row - the index of the view row</source>
          <target state="translated">styleData.row-视图行的索引。</target>
        </trans-unit>
        <trans-unit id="90a4bf5db2ed5ba250706bd07819f70eb90037d5" translate="yes" xml:space="preserve">
          <source>styleData.selected - if the item is currently selected</source>
          <target state="translated">styleData.selected-如果当前项目被选中,则该项目将被选中。</target>
        </trans-unit>
        <trans-unit id="cd2fbc6eab35669c56140deef6431011d0e594af" translate="yes" xml:space="preserve">
          <source>styleData.selected - true when the row is currently selected</source>
          <target state="translated">styleData.selected-当前行被选中时为true。</target>
        </trans-unit>
        <trans-unit id="73eac1955c624de70f1121dd772bc5dd68a02fc2" translate="yes" xml:space="preserve">
          <source>styleData.textAlignment - the horizontal text alignment of the column</source>
          <target state="translated">styleData.textAlignment-列的水平文本对齐方式。</target>
        </trans-unit>
        <trans-unit id="7b596403ceb83c84c86f7693f600279988914956" translate="yes" xml:space="preserve">
          <source>styleData.textAlignment - the horizontal text alignment of the column (since QtQuickControls 1.1)</source>
          <target state="translated">styleData.textAlignment-列的水平文本对齐方式(自QtQuickControls 1.1起)</target>
        </trans-unit>
        <trans-unit id="77f08b66e75efc99a0b281e0e1814274e1693489" translate="yes" xml:space="preserve">
          <source>styleData.textColor - the default text color for an item</source>
          <target state="translated">styleData.textColor-一个项目的默认文本颜色。</target>
        </trans-unit>
        <trans-unit id="2d4b7999988824c8035b518ee26b84475ec57865" translate="yes" xml:space="preserve">
          <source>styleData.value - the value or text for this item</source>
          <target state="translated">styleData.value-此项的值或文本。</target>
        </trans-unit>
        <trans-unit id="28277c000feac35f975a781ec53e9dc69f270e34" translate="yes" xml:space="preserve">
          <source>styleHints : object</source>
          <target state="translated">styleHints:对象</target>
        </trans-unit>
        <trans-unit id="55a2a87088d39c85776148f52404cbf73683c729" translate="yes" xml:space="preserve">
          <source>styleName</source>
          <target state="translated">styleName</target>
        </trans-unit>
        <trans-unit id="760d448c4c2439477ad18e58ead8f14ae3a85bb2" translate="yes" xml:space="preserve">
          <source>styleName : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">styleName：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="728ae7d00a3895c19f5545c1ec0955c0e0435510" translate="yes" xml:space="preserve">
          <source>styleSheet</source>
          <target state="translated">styleSheet</target>
        </trans-unit>
        <trans-unit id="82b965e2fdc259644284f1f04ae06e1956acb30f" translate="yes" xml:space="preserve">
          <source>styleSheet : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">styleSheet：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71dabbd8ff09e8607ea433fdbcfed79a1262a5b2" translate="yes" xml:space="preserve">
          <source>styleSheet : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">styleSheet：&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="220d19d1bc706bb369de96ef5d33b4398c5314ef" translate="yes" xml:space="preserve">
          <source>stylesheet</source>
          <target state="translated">stylesheet</target>
        </trans-unit>
        <trans-unit id="fb6ab93c514d4bdeb2c6ae68f091b9810323df6b" translate="yes" xml:space="preserve">
          <source>subControl</source>
          <target state="translated">subControl</target>
        </trans-unit>
        <trans-unit id="e50bafbdec8c2d97efa61894be49858f7ee4f6c5" translate="yes" xml:space="preserve">
          <source>subEnum</source>
          <target state="translated">subEnum</target>
        </trans-unit>
        <trans-unit id="40971228753f600b53fe79e77ab7f9d6b7c4ec7f" translate="yes" xml:space="preserve">
          <source>subSegmentCount : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">subSegmentCount：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2d856ef0e0c232c38b220394cbe23c497db85aa" translate="yes" xml:space="preserve">
          <source>subSegmentCount : int</source>
          <target state="translated">subSegmentCount:int</target>
        </trans-unit>
        <trans-unit id="bd6c8c907d9f8a45eb9cf026ed4dd10e0095c507" translate="yes" xml:space="preserve">
          <source>subString</source>
          <target state="translated">subString</target>
        </trans-unit>
        <trans-unit id="1d0c9cf448edb0ea380718c601bce488a7a5174d" translate="yes" xml:space="preserve">
          <source>subTexture</source>
          <target state="translated">subTexture</target>
        </trans-unit>
        <trans-unit id="88e4822f0dcaabf834024fe1ecc24c060ca80b24" translate="yes" xml:space="preserve">
          <source>subTitle</source>
          <target state="translated">subTitle</target>
        </trans-unit>
        <trans-unit id="f4654531f2dd958d1dc03d8792f903bad27523b0" translate="yes" xml:space="preserve">
          <source>subTitle : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">subTitle：&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73d19e294980d2c73a97fdc34dce6811ad9942ba" translate="yes" xml:space="preserve">
          <source>subTitleFormat : &lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt::TextFormat&lt;/a&gt;</source>
          <target state="translated">subTitleFormat：&lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt :: TextFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a90bebc7f7f2b1d0e79c8eade633f05aeb792b" translate="yes" xml:space="preserve">
          <source>subViewport</source>
          <target state="translated">subViewport</target>
        </trans-unit>
        <trans-unit id="24a9d70d1a61776f8bfb3f6a9a165587b09a4753" translate="yes" xml:space="preserve">
          <source>subcontrols</source>
          <target state="translated">subcontrols</target>
        </trans-unit>
        <trans-unit id="afc1d9aebeb2f62595a3b0126d4881c7ae366be0" translate="yes" xml:space="preserve">
          <source>subdirectory located inside the application bundle &lt;code&gt;Resources&lt;/code&gt; directory, and also in the &lt;code&gt;Resources&lt;/code&gt; directory located inside the Qt framework bundle.</source>
          <target state="translated">子目录位于应用程序包的 &lt;code&gt;Resources&lt;/code&gt; 目录中，也位于Qt框架包中的 &lt;code&gt;Resources&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="251b7c3a30ebdccfdefa07982f233a149c6d094c" translate="yes" xml:space="preserve">
          <source>subdirs</source>
          <target state="translated">subdirs</target>
        </trans-unit>
        <trans-unit id="45866769e20b2ad480e4030020802a816aab134c" translate="yes" xml:space="preserve">
          <source>subexpression. The entire match has index 0 and the parenthesized subexpressions have indexes starting from 1 (excluding non-capturing parentheses).</source>
          <target state="translated">子表达式。整个匹配的索引为0,括号内的子表达式的索引从1开始(不包括非捕获的括号)。</target>
        </trans-unit>
        <trans-unit id="335ce16b3fe40346cc3af2a4efce2ef04bc4ea55" translate="yes" xml:space="preserve">
          <source>subject</source>
          <target state="translated">subject</target>
        </trans-unit>
        <trans-unit id="4d241c1851cb9ace049ef0dc53aef277e9a20467" translate="yes" xml:space="preserve">
          <source>subject : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">主题：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b72f898a31b8606e0f5ac40aaf7a9838c825242" translate="yes" xml:space="preserve">
          <source>subject : string</source>
          <target state="translated">主题:字符串</target>
        </trans-unit>
        <trans-unit id="cc194b7720875804f3275169f7e13d606c75414d" translate="yes" xml:space="preserve">
          <source>subject string</source>
          <target state="translated">主题串</target>
        </trans-unit>
        <trans-unit id="2162c34fb0b56546a18ccc5c35e2231efbb8174b" translate="yes" xml:space="preserve">
          <source>subjectId</source>
          <target state="translated">subjectId</target>
        </trans-unit>
        <trans-unit id="6577915ac9535e930c218262f0e6fb21ba245102" translate="yes" xml:space="preserve">
          <source>subjectKeyIdentifier</source>
          <target state="translated">subjectKeyIdentifier</target>
        </trans-unit>
        <trans-unit id="bd95f3a2b2ae1023f9adb3345f357920dc147ef6" translate="yes" xml:space="preserve">
          <source>subjectRef</source>
          <target state="translated">subjectRef</target>
        </trans-unit>
        <trans-unit id="0d930828699da85d860504d8a9195efaffe3e3b6" translate="yes" xml:space="preserve">
          <source>subjectView</source>
          <target state="translated">subjectView</target>
        </trans-unit>
        <trans-unit id="081f120ed0b905452b38c73f71dfd12a257c6029" translate="yes" xml:space="preserve">
          <source>submenu</source>
          <target state="translated">submenu</target>
        </trans-unit>
        <trans-unit id="c22f9643872d18a7ba7e095b02bbc8e6a0713fa8" translate="yes" xml:space="preserve">
          <source>submenuOverlap : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">submenuOverlap：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="470cff98ce6be3bf9098fe195095e178548b7fcf" translate="yes" xml:space="preserve">
          <source>submenuPopupDelay : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">submenuPopupDelay：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="961981019b61b14d6f23dc2b15c5577938d09b80" translate="yes" xml:space="preserve">
          <source>submissionType</source>
          <target state="translated">submissionType</target>
        </trans-unit>
        <trans-unit id="493fc821bea2cef44086239d5529848632bad6f3" translate="yes" xml:space="preserve">
          <source>submitEvent(</source>
          <target state="translated">submitEvent(</target>
        </trans-unit>
        <trans-unit id="ed866f7db8a2320d3c73706c94fa70408e6e5e0c" translate="yes" xml:space="preserve">
          <source>submitEvent(string</source>
          <target state="translated">submitEvent(string</target>
        </trans-unit>
        <trans-unit id="f65a9e2c25fab97946bb08fdfb6581ac8d8bb2af" translate="yes" xml:space="preserve">
          <source>submitPolicy : &lt;a href=&quot;qdatawidgetmapper#SubmitPolicy-enum&quot;&gt;SubmitPolicy&lt;/a&gt;</source>
          <target state="translated">SubmitPolicy：&lt;a href=&quot;qdatawidgetmapper#SubmitPolicy-enum&quot;&gt;SubmitPolicy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7e2e05e561a8df7ae449ee0762bcc0a56f50134" translate="yes" xml:space="preserve">
          <source>subnet</source>
          <target state="translated">subnet</target>
        </trans-unit>
        <trans-unit id="e9316841dce71b524f33d588e4d98ca9fb660bbb" translate="yes" xml:space="preserve">
          <source>subpath. In fact, these functions are all collections of &lt;a href=&quot;qpainterpath#moveTo&quot;&gt;moveTo&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#lineTo&quot;&gt;lineTo&lt;/a&gt;() and &lt;a href=&quot;qpainterpath#cubicTo&quot;&gt;cubicTo&lt;/a&gt;() operations.</source>
          <target state="translated">子路径。实际上，这些函数都是&lt;a href=&quot;qpainterpath#moveTo&quot;&gt;moveTo&lt;/a&gt;（），&lt;a href=&quot;qpainterpath#lineTo&quot;&gt;lineTo&lt;/a&gt;（）和&lt;a href=&quot;qpainterpath#cubicTo&quot;&gt;cubicTo&lt;/a&gt;（）操作的集合。</target>
        </trans-unit>
        <trans-unit id="aaf4a80678666b62b9d42570d76c8ecefd8d0d52" translate="yes" xml:space="preserve">
          <source>subpixel</source>
          <target state="translated">subpixel</target>
        </trans-unit>
        <trans-unit id="c36982e3c205540fc91dd5ee7a3e64831d0a6992" translate="yes" xml:space="preserve">
          <source>subpixel : &lt;a href=&quot;qwaylandoutput#Subpixel-enum&quot;&gt;QWaylandOutput::Subpixel&lt;/a&gt;</source>
          <target state="translated">子像素：&lt;a href=&quot;qwaylandoutput#Subpixel-enum&quot;&gt;QWaylandOutput :: Subpixel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="343e86b3b6e2c1bdb511770ffdb1d5c817423ca4" translate="yes" xml:space="preserve">
          <source>subpixel : enum</source>
          <target state="translated">子像素:enum</target>
        </trans-unit>
        <trans-unit id="15ee1d7c98451f454c02543d85d6095fb682de5f" translate="yes" xml:space="preserve">
          <source>substituteName</source>
          <target state="translated">substituteName</target>
        </trans-unit>
        <trans-unit id="7267ff7d041a7425123a4f82069b8406348c6df5" translate="yes" xml:space="preserve">
          <source>substituteNames</source>
          <target state="translated">substituteNames</target>
        </trans-unit>
        <trans-unit id="2981dfe10e861a8ede87609b103e9850d10ca8b4" translate="yes" xml:space="preserve">
          <source>substr(start, length)</source>
          <target state="translated">substr(start,length)</target>
        </trans-unit>
        <trans-unit id="43ee3052233d21fcdf57bbe3450681876fe668ea" translate="yes" xml:space="preserve">
          <source>substring(start, end)</source>
          <target state="translated">子串(起始,结束)</target>
        </trans-unit>
        <trans-unit id="f51d3cedc5da5aceb0ec7a14a4385d9aa462a975" translate="yes" xml:space="preserve">
          <source>substrings, where</source>
          <target state="translated">子串,其中</target>
        </trans-unit>
        <trans-unit id="1e15fab06d7817b91d71326c6ad5dd2684225dde" translate="yes" xml:space="preserve">
          <source>subsurfaceHandler : object</source>
          <target state="translated">subsurfaceHandler:对象</target>
        </trans-unit>
        <trans-unit id="cf2d012e17453fc29e33afb5af3d36d671c236fb" translate="yes" xml:space="preserve">
          <source>subtract</source>
          <target state="translated">subtract</target>
        </trans-unit>
        <trans-unit id="116ee9e9b98704484e21c3b31afbbfe6609d65d5" translate="yes" xml:space="preserve">
          <source>subtracted from</source>
          <target state="translated">减去</target>
        </trans-unit>
        <trans-unit id="baf67121e40b2b85fd565c737469671344e5ba71" translate="yes" xml:space="preserve">
          <source>subtracted from this polygon.</source>
          <target state="translated">从这个多边形上减去。</target>
        </trans-unit>
        <trans-unit id="086ddd1b3c5a7e0b67059dbfdf909419dc75ddd0" translate="yes" xml:space="preserve">
          <source>subtracted from this region.</source>
          <target state="translated">从这个区域减去。</target>
        </trans-unit>
        <trans-unit id="b4060313ef1d0c2fdf014088c5f438d202722683" translate="yes" xml:space="preserve">
          <source>subtrahend</source>
          <target state="translated">subtrahend</target>
        </trans-unit>
        <trans-unit id="10276403a9ebc3fef9e4c32f39f04459ffbb034a" translate="yes" xml:space="preserve">
          <source>subtreeIdsAndTypes</source>
          <target state="translated">subtreeIdsAndTypes</target>
        </trans-unit>
        <trans-unit id="6d78c0c79d2a4f0701eb6d01d5727adfd627a806" translate="yes" xml:space="preserve">
          <source>subtype</source>
          <target state="translated">subtype</target>
        </trans-unit>
        <trans-unit id="53a5687cb26dc41f2ab4033e97e13adefd3740d6" translate="yes" xml:space="preserve">
          <source>success</source>
          <target state="translated">success</target>
        </trans-unit>
        <trans-unit id="6453f3d8d3040f88e5221e0b52255d7ffe678223" translate="yes" xml:space="preserve">
          <source>successfully returned its</source>
          <target state="translated">成功归还其</target>
        </trans-unit>
        <trans-unit id="a1610b104742451c2db93a2b7a58788a694e096f" translate="yes" xml:space="preserve">
          <source>such as &quot;Directory&quot; or &quot;JPEG file&quot;.</source>
          <target state="translated">如 &quot;目录 &quot;或 &quot;JPEG文件&quot;。</target>
        </trans-unit>
        <trans-unit id="b7976172f72061d0e854da80e0b63e930de9e6ee" translate="yes" xml:space="preserve">
          <source>such as the &lt;a href=&quot;qabstractitemview#iconSize-prop&quot;&gt;iconSize&lt;/a&gt;(), &lt;a href=&quot;qabstractitemview#textElideMode-prop&quot;&gt;textElideMode&lt;/a&gt;() and &lt;a href=&quot;qabstractitemview#alternatingRowColors-prop&quot;&gt;alternatingRowColors&lt;/a&gt;(). This can be useful when reimplementing &lt;a href=&quot;qcolumnview#createColumn&quot;&gt;createColumn&lt;/a&gt;().</source>
          <target state="translated">如&lt;a href=&quot;qabstractitemview#iconSize-prop&quot;&gt;iconSize&lt;/a&gt;（），&lt;a href=&quot;qabstractitemview#textElideMode-prop&quot;&gt;textElideMode&lt;/a&gt;（）和&lt;a href=&quot;qabstractitemview#alternatingRowColors-prop&quot;&gt;了alternatingRowColors&lt;/a&gt;（）。当重新实现&lt;a href=&quot;qcolumnview#createColumn&quot;&gt;createColumn&lt;/a&gt;（）时，这很有用。</target>
        </trans-unit>
        <trans-unit id="ec87faca4cbad909219bbcea9dbbe370a9f8c690" translate="yes" xml:space="preserve">
          <source>suffix</source>
          <target state="translated">suffix</target>
        </trans-unit>
        <trans-unit id="4bfccd63e49ee1306be60e35b3d2ba5bf8959b87" translate="yes" xml:space="preserve">
          <source>suffix : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">后缀：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba45ff63293dedcc2f2dabd00f95a8d116cfb656" translate="yes" xml:space="preserve">
          <source>suffix : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">后缀：&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a01808f8e5294874c3ea43c69a458507c0928917" translate="yes" xml:space="preserve">
          <source>suffix added to the filename if no other suffix was specified</source>
          <target state="translated">如果没有指定其他后缀,则添加到文件名的后缀。</target>
        </trans-unit>
        <trans-unit id="f7043faa43a5673587c8d84fcdeb07716947df4d" translate="yes" xml:space="preserve">
          <source>suffix is used to identify the file as containing a DITA MAP.</source>
          <target state="translated">后缀用于识别文件是否包含DITA MAP。</target>
        </trans-unit>
        <trans-unit id="927eb875a967b0b22ab684a77bc31feee9798783" translate="yes" xml:space="preserve">
          <source>suffix, run:</source>
          <target state="translated">后缀,运行。</target>
        </trans-unit>
        <trans-unit id="085d96c80ee9531ebeddf01477d0711acae31d98" translate="yes" xml:space="preserve">
          <source>suffix. You must provide the file name. qdoc can't look up the file name for you.</source>
          <target state="translated">后缀。您必须提供文件名,qdoc无法为您查找文件名。</target>
        </trans-unit>
        <trans-unit id="24011435ece47ec68aeb54deaa14b1a3fac27fdd" translate="yes" xml:space="preserve">
          <source>suffixIndex</source>
          <target state="translated">suffixIndex</target>
        </trans-unit>
        <trans-unit id="2a60e8ce03f92af64e81330d66017c8d744340c7" translate="yes" xml:space="preserve">
          <source>suffixes : const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</source>
          <target state="translated">后缀：const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="410cbb8b940bb9b6d61204c3cd6e7200d25cda10" translate="yes" xml:space="preserve">
          <source>suggestedFileName : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">proposalFileName：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd305a6148ba9651f630956a53bfa602d7260faf" translate="yes" xml:space="preserve">
          <source>suggesting where to do the insert.</source>
          <target state="translated">建议在哪里做插入。</target>
        </trans-unit>
        <trans-unit id="97e9422ac449710d62b99c252d89dbbe72ffac39" translate="yes" xml:space="preserve">
          <source>suggestion</source>
          <target state="translated">suggestion</target>
        </trans-unit>
        <trans-unit id="7ca5c1bf6d37f1e7389db34f7617b7101f65ded1" translate="yes" xml:space="preserve">
          <source>suggestions</source>
          <target state="translated">suggestions</target>
        </trans-unit>
        <trans-unit id="fae292db3a5ce312c911d4254ee489465a01aa00" translate="yes" xml:space="preserve">
          <source>suggestions : stringlist</source>
          <target state="translated">建议:字符串列表</target>
        </trans-unit>
        <trans-unit id="375d1e4b55c21756ef76d4c9f44dd12e66e54c90" translate="yes" xml:space="preserve">
          <source>sum : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">总和：&lt;a href=&quot;qml-real&quot;&gt;实数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f40fc6aea02a8878cdfc04c45b6eec73e32d040d" translate="yes" xml:space="preserve">
          <source>sum : const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">sum：const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cd57e5af0dc3ddbf6622ec8111659355c7e767a" translate="yes" xml:space="preserve">
          <source>sum : const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">sum : const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99c95b74f0d21a83b098e8d63a8b503ba755d2cb" translate="yes" xml:space="preserve">
          <source>sunken</source>
          <target state="translated">sunken</target>
        </trans-unit>
        <trans-unit id="0e1463233e0fff7f55d020b0683765e802b71fea" translate="yes" xml:space="preserve">
          <source>supercluster.hpp</source>
          <target state="translated">supercluster.hpp</target>
        </trans-unit>
        <trans-unit id="c05831d3c0ca1ffecc8f38b889841920dc2a6845" translate="yes" xml:space="preserve">
          <source>supplied by a drag and drop operation that ended with the given</source>
          <target state="translated">由拖放操作提供,最后以给定的</target>
        </trans-unit>
        <trans-unit id="59fe74c99abc0dd3746d722cad8f72fc06d70a33" translate="yes" xml:space="preserve">
          <source>supplied by an external drag and drop operation that ended with the given</source>
          <target state="translated">由外部拖放操作提供,该操作以给定的</target>
        </trans-unit>
        <trans-unit id="5259ff7b2fb8fd755f090792246f20439d1a3c5c" translate="yes" xml:space="preserve">
          <source>supplied.</source>
          <target state="translated">supplied.</target>
        </trans-unit>
        <trans-unit id="81a64f03dd118ef85bea408d4d1681c2cf560fc3" translate="yes" xml:space="preserve">
          <source>supplied. The subpaths are positioned so that the left end of the text's baseline lies at the point specified by (</source>
          <target state="translated">提供的子路径。子路径的位置是使文本基线的左端位于由(</target>
        </trans-unit>
        <trans-unit id="eaafd1d959dba639e6c467dce4dc5be9f2c473f0" translate="yes" xml:space="preserve">
          <source>supplied. The subpaths are positioned so that the left end of the text's baseline lies at the specified</source>
          <target state="translated">提供的子路径。子路径的位置是使文本基线的左端位于指定的</target>
        </trans-unit>
        <trans-unit id="e2979e759574b094b7c50f54846af43ef8eff1a0" translate="yes" xml:space="preserve">
          <source>supplier</source>
          <target state="translated">supplier</target>
        </trans-unit>
        <trans-unit id="0917fe231f823ec594cccbc5575217b85ae70958" translate="yes" xml:space="preserve">
          <source>supplier : &lt;a href=&quot;qml-qtlocation-supplier&quot;&gt;Supplier&lt;/a&gt;</source>
          <target state="translated">供应商：&lt;a href=&quot;qml-qtlocation-supplier&quot;&gt;供应商&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d593c853996a7f4726d518dbf292b89fab271a48" translate="yes" xml:space="preserve">
          <source>supplier : QPlaceSupplier</source>
          <target state="translated">供应商:QPlaceSupplier</target>
        </trans-unit>
        <trans-unit id="a31ec740c887d78b29c5250a11da4fbde490f938" translate="yes" xml:space="preserve">
          <source>supplierId : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">SupplierId：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb" translate="yes" xml:space="preserve">
          <source>support</source>
          <target state="translated">support</target>
        </trans-unit>
        <trans-unit id="2c7caa25c59d2169c2243b43315f3d4e945f6d04" translate="yes" xml:space="preserve">
          <source>support &quot;file globbing&quot;, the ability to identify a group of files by using wildcards. The &lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;() function is used to switch between regexp and wildcard mode. Wildcard matching is much simpler than full regexps and has only four features:</source>
          <target state="translated">支持&amp;ldquo;文件通配&amp;rdquo;，可以使用通配符识别一组文件。所述&lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;（）函数用于正则表达式和通配符模式之间切换。通配符匹配比完整的正则表达式简单得多，并且只有四个功能：</target>
        </trans-unit>
        <trans-unit id="01cc8c76b2dd44bb3c2dba8da949a45407897da1" translate="yes" xml:space="preserve">
          <source>support for &lt;a href=&quot;custom-types&quot;&gt;custom type&lt;/a&gt; creation.</source>
          <target state="translated">支持&lt;a href=&quot;custom-types&quot;&gt;自定义类型&lt;/a&gt;创建。</target>
        </trans-unit>
        <trans-unit id="e8f9fb3b6ac53ef5997e45bc3ba1522a1018566b" translate="yes" xml:space="preserve">
          <source>support for &lt;a href=&quot;custom-types#&quot;&gt;custom type&lt;/a&gt; creation.</source>
          <target state="translated">支持&lt;a href=&quot;custom-types#&quot;&gt;自定义类型&lt;/a&gt;创建。</target>
        </trans-unit>
        <trans-unit id="afb6a33d77b686daf951104fbeb45442b4af6c61" translate="yes" xml:space="preserve">
          <source>support inserting, prepending, appending or replacing with references to its own values. Doing so will cause your application to abort with an error message.</source>
          <target state="translated">支持插入、前缀、追加或替换对其自身值的引用。这样做将会导致你的应用程序以错误信息的方式中止。</target>
        </trans-unit>
        <trans-unit id="8505b73b3698bdefa6a57a3fbd009da079539162" translate="yes" xml:space="preserve">
          <source>support touch gesture on a specific area of the map,</source>
          <target state="translated">支持地图上特定区域的触摸手势。</target>
        </trans-unit>
        <trans-unit id="2a5e9b1b170e9456317949e40c8ae3572c9ca223" translate="yes" xml:space="preserve">
          <source>supported</source>
          <target state="translated">supported</target>
        </trans-unit>
        <trans-unit id="19a168342699a8a97f39c864a424116d05b7c56c" translate="yes" xml:space="preserve">
          <source>supported by a camera service plug-in.</source>
          <target state="translated">由相机服务插件支持。</target>
        </trans-unit>
        <trans-unit id="86b042901cbf8de77a9ab7edbc068bfbdda831ab" translate="yes" xml:space="preserve">
          <source>supported by the device and its driver.</source>
          <target state="translated">设备及其驱动程序所支持的。</target>
        </trans-unit>
        <trans-unit id="bb295259bb2203f64db00b8078652a968783390b" translate="yes" xml:space="preserve">
          <source>supported for pens and brushes with alpha components. Also, turning on the &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::Antialiasing&lt;/a&gt; render hint will effectively disable the RasterOp modes.</source>
          <target state="translated">支持具有alpha组件的钢笔和画笔。另外，打开&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: Antialiasing&lt;/a&gt;渲染提示将有效地禁用RasterOp模式。</target>
        </trans-unit>
        <trans-unit id="1254654d1c17839e004d81dbc6cc5ee59a97c99b" translate="yes" xml:space="preserve">
          <source>supported.</source>
          <target state="translated">supported.</target>
        </trans-unit>
        <trans-unit id="e02094e39d540b4e4861f48fb2526ee6c06b8da9" translate="yes" xml:space="preserve">
          <source>supported. By default, all supported GitHub-style Markdown features are included; pass &lt;code&gt;MarkdownDialectCommonMark&lt;/code&gt; for a more basic parse.</source>
          <target state="translated">支持的。默认情况下，包括所有受支持的GitHub样式的Markdown功能；通过 &lt;code&gt;MarkdownDialectCommonMark&lt;/code&gt; 获得更基本的解析。</target>
        </trans-unit>
        <trans-unit id="f52cfd570350b77108976c59488ff7e0a9e5a0ee" translate="yes" xml:space="preserve">
          <source>supportedActions</source>
          <target state="translated">supportedActions</target>
        </trans-unit>
        <trans-unit id="0f558fd7c4c587e9777bbaa4f047043d6f2743d9" translate="yes" xml:space="preserve">
          <source>supportedActions : flags</source>
          <target state="translated">supportedActions:flags</target>
        </trans-unit>
        <trans-unit id="57bec47573507808f9fd04ee68a4a7b3d3776cf0" translate="yes" xml:space="preserve">
          <source>supportedAudioRoles()</source>
          <target state="translated">supportedAudioRoles()</target>
        </trans-unit>
        <trans-unit id="4840128a06ba66adc021f397869d6b72f15ffc1e" translate="yes" xml:space="preserve">
          <source>supportedColorFilters : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;ColorFilter&amp;gt;</source>
          <target state="translated">支持的ColorFilters ：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt;ColorFilter&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4287a87c9ef4602c3fdda21cae639231f904a619" translate="yes" xml:space="preserve">
          <source>supportedDragActions() is used by &lt;a href=&quot;qabstractitemview#startDrag&quot;&gt;QAbstractItemView::startDrag&lt;/a&gt;() as the default values when a drag occurs.</source>
          <target state="translated">发生拖动时，&lt;a href=&quot;qabstractitemview#startDrag&quot;&gt;QAbstractItemView :: startDrag&lt;/a&gt;（）将默认使用默认值supportedDragActions（）。</target>
        </trans-unit>
        <trans-unit id="a5d664c046968ab248423583b7165d7b1f45f67f" translate="yes" xml:space="preserve">
          <source>supportedDropActions()</source>
          <target state="translated">supportedDropActions()</target>
        </trans-unit>
        <trans-unit id="229b0b0ea342dd664472117d1dce386ea96ad066" translate="yes" xml:space="preserve">
          <source>supportedExposureModes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;ExposureMode&amp;gt;</source>
          <target state="translated">supportedExposureModes：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt;ExposureMode&amp;gt;</target>
        </trans-unit>
        <trans-unit id="31821caac184c1710b4f5f385627a5767dd849d0" translate="yes" xml:space="preserve">
          <source>supportedFocusModes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;FocusMode&amp;gt;</source>
          <target state="translated">supportedFocusModes：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt;FocusMode&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3e670744e0a74f06ec5c07b381eecaed601c35dd" translate="yes" xml:space="preserve">
          <source>supportedFocusPointModes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;&amp;gt;</source>
          <target state="translated">supportedFocusPointModes：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-enumeration&quot;&gt;枚举&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="e9b734813893507ae47e969184c9a57c928ffec6" translate="yes" xml:space="preserve">
          <source>supportedMapTypes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qtlocation-maptype&quot;&gt;MapType&lt;/a&gt;&amp;gt;</source>
          <target state="translated">supportedMapTypes：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qtlocation-maptype&quot;&gt;MapType&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="4360e2ec30733986f44c671b4c330b715b6e6be1" translate="yes" xml:space="preserve">
          <source>supportedModes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;FlashMode&amp;gt;</source>
          <target state="translated">supportedModes：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt;FlashMode&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5c2df69bfc66e1179184e30040b849e60c43da91" translate="yes" xml:space="preserve">
          <source>supportedPositioningMethods : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">supportPositioningMethods：&lt;a href=&quot;qml-enumeration&quot;&gt;枚举&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31f3f3371b8609a03fc54d07a4fbe14b8c409511" translate="yes" xml:space="preserve">
          <source>supportedResolutions : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-size&quot;&gt;size&lt;/a&gt;&amp;gt;</source>
          <target state="translated">supportResolutions：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-size&quot;&gt;大小&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="04f5f9f1ff3291c3f325aaafd61a45a51cd09423" translate="yes" xml:space="preserve">
          <source>supportedSchemes</source>
          <target state="translated">supportedSchemes</target>
        </trans-unit>
        <trans-unit id="d123f9cd089c2889f6d4dd9fd8264a69473c13aa" translate="yes" xml:space="preserve">
          <source>supportedSchemes : &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstringlist&quot;&gt;supportSchemes&lt;/a&gt;：QStringList</target>
        </trans-unit>
        <trans-unit id="18f1f0123a96ce382955a52d288803e7322a7388" translate="yes" xml:space="preserve">
          <source>supportedWhiteBalanceModes : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;WhiteBalanceMode&amp;gt;</source>
          <target state="translated">支持的WhiteBalanceModes ：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt;WhiteBalanceMode&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8509972ed4391c9d7e3cbfce8bafdbbc293102c7" translate="yes" xml:space="preserve">
          <source>supports &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;attached properties&lt;/a&gt;.</source>
          <target state="translated">支持&lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;附加属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a3c3963f0ac86d5cce1699b0474960bcb9ee8e" translate="yes" xml:space="preserve">
          <source>supports &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;attached properties&lt;/a&gt;. QML_DECLARE_TYPEINFO() is not necessary if</source>
          <target state="translated">支持&lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;附加属性&lt;/a&gt;。如果没有QML_DECLARE_TYPEINFO（）</target>
        </trans-unit>
        <trans-unit id="6806aa63112fa736b4a7e0e2faceae61666bc6e7" translate="yes" xml:space="preserve">
          <source>supports all of the standard Qt widgets, some specialized widgets may not be available as standard for a number of reasons:</source>
          <target state="translated">支持所有标准的 Qt 小组件,但由于一些原因,一些专门的小组件可能无法作为标准配置使用。</target>
        </trans-unit>
        <trans-unit id="a60b462d036fdba43fc9122cb19a8bce71cb29d0" translate="yes" xml:space="preserve">
          <source>supports presenting to</source>
          <target state="translated">支持提交给</target>
        </trans-unit>
        <trans-unit id="2ef2bb605b85942f65f732e05034f7969a10bd1b" translate="yes" xml:space="preserve">
          <source>supportsAtlasTextures : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">supportAtlasTextures：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d81e86198d6d705a671ddac97f994fbdbeca21f1" translate="yes" xml:space="preserve">
          <source>supportsCompute : const bool</source>
          <target state="translated">supportsCompute:const bool</target>
        </trans-unit>
        <trans-unit id="14a455ddf379a50d47bfb1815e612ad9d6fc958d" translate="yes" xml:space="preserve">
          <source>supportsImageStore : const bool</source>
          <target state="translated">supportsImageStore:const bool</target>
        </trans-unit>
        <trans-unit id="9cb4d0b266968723aba147449c9d3fa9e7cea515" translate="yes" xml:space="preserve">
          <source>supportsSSBO : const bool</source>
          <target state="translated">supportsSSBO:const bool</target>
        </trans-unit>
        <trans-unit id="f1e9896b29ec63aab903b91401f1e8a2bd3c05e9" translate="yes" xml:space="preserve">
          <source>supportsUBO : const bool</source>
          <target state="translated">supportsUBO:const bool</target>
        </trans-unit>
        <trans-unit id="27562b4fc4fd2308c756a1cf9c7f19bed0bb74dc" translate="yes" xml:space="preserve">
          <source>suppress_vcproj_warnings</source>
          <target state="translated">suppress_vcproj_warnings</target>
        </trans-unit>
        <trans-unit id="c6359a7968b3cd89d5623ae601aeeeaac95cb95c" translate="yes" xml:space="preserve">
          <source>surface</source>
          <target state="translated">surface</target>
        </trans-unit>
        <trans-unit id="bb89f7ac6a167ec0cdcddbc6f198cbfc0cc15ffa" translate="yes" xml:space="preserve">
          <source>surface : &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt;</source>
          <target state="translated">表面：&lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14ec6c339aba97c7a19d28801dd15ea833482d2d" translate="yes" xml:space="preserve">
          <source>surface : &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt;*</source>
          <target state="translated">表面：&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ebd0a294624b09ecc827ff9a744001bc5d26f9ef" translate="yes" xml:space="preserve">
          <source>surface : &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt;*</source>
          <target state="translated">表面：&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3c50e855881f9d198fc7a6dc2b18c549b21e8a0c" translate="yes" xml:space="preserve">
          <source>surface : &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt;* const</source>
          <target state="translated">曲面：&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; * const</target>
        </trans-unit>
        <trans-unit id="2c16c844b4237480106e671fee3a7fc1a4868dce" translate="yes" xml:space="preserve">
          <source>surface : Object</source>
          <target state="translated">表面:对象</target>
        </trans-unit>
        <trans-unit id="4d59a5a5d45089d4886ccfc7024b0da38d425ea4" translate="yes" xml:space="preserve">
          <source>surface : QSurface</source>
          <target state="translated">Surface:QSurface</target>
        </trans-unit>
        <trans-unit id="47b4d2067a6da44a83bbb18b7ccdcd100e65e0a4" translate="yes" xml:space="preserve">
          <source>surfaceDestroyed()</source>
          <target state="translated">surfaceDestroyed()</target>
        </trans-unit>
        <trans-unit id="5651d9892cad3d0c898395ddcd505e029f4d500d" translate="yes" xml:space="preserve">
          <source>surfaceEventType</source>
          <target state="translated">surfaceEventType</target>
        </trans-unit>
        <trans-unit id="2dfa608a48c859a4ca56efef397b3b8ee554e15e" translate="yes" xml:space="preserve">
          <source>surfaceFormat</source>
          <target state="translated">surfaceFormat</target>
        </trans-unit>
        <trans-unit id="d92deca1e911f49adb4585134678021534445b65" translate="yes" xml:space="preserve">
          <source>surfaceObject</source>
          <target state="translated">surfaceObject</target>
        </trans-unit>
        <trans-unit id="381c3675f34181598951e6d06a37d5911686dc5e" translate="yes" xml:space="preserve">
          <source>surfacePixelRatio : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">surfacePixelRatio：&lt;a href=&quot;qml-real&quot;&gt;实数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25d54aea8ae7f1357ebfc5a91749e6084b3009ea" translate="yes" xml:space="preserve">
          <source>surfacePixelRatio : float</source>
          <target state="translated">surfacePixelRatio:float</target>
        </trans-unit>
        <trans-unit id="b345f06cbc28ff146858d5c7d7eea7860f298404" translate="yes" xml:space="preserve">
          <source>surfaceType</source>
          <target state="translated">surfaceType</target>
        </trans-unit>
        <trans-unit id="849bafd268181be7c4e31643915555b3278add5c" translate="yes" xml:space="preserve">
          <source>surfaces</source>
          <target state="translated">surfaces</target>
        </trans-unit>
        <trans-unit id="cc70e7a50eed519196aa701642c97889a95d82e2" translate="yes" xml:space="preserve">
          <source>surroundingText : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">周围的&lt;a href=&quot;qml-string&quot;&gt;文字&lt;/a&gt;：字符串</target>
        </trans-unit>
        <trans-unit id="1121bff9fa4848e34fc0609fe72161552c76a17f" translate="yes" xml:space="preserve">
          <source>surroundingText : const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;aroundingText&lt;/a&gt;：const QString</target>
        </trans-unit>
        <trans-unit id="b6f0c43f69fad2bd2df597f8c1f9289bf8ebf0a2" translate="yes" xml:space="preserve">
          <source>suspend</source>
          <target state="translated">suspend</target>
        </trans-unit>
        <trans-unit id="0a6190df9675de3c18b12fd3fc97648581780661" translate="yes" xml:space="preserve">
          <source>sv</source>
          <target state="translated">sv</target>
        </trans-unit>
        <trans-unit id="8d4c780fcfdc41841e5070f4c43da8958ba6aec0" translate="yes" xml:space="preserve">
          <source>sw</source>
          <target state="translated">sw</target>
        </trans-unit>
        <trans-unit id="1150df6d9de561e5f9ca91c9b529df549e67c3b3" translate="yes" xml:space="preserve">
          <source>swapBytes</source>
          <target state="translated">swapBytes</target>
        </trans-unit>
        <trans-unit id="8aa51276a98c83c8566143d6f4efc72fdc2038d7" translate="yes" xml:space="preserve">
          <source>sweepAngle : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">scanAngle：&lt;a href=&quot;qml-real&quot;&gt;实数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3f864a053f4942852151cbd73223aa2a58218a9" translate="yes" xml:space="preserve">
          <source>sweepLength</source>
          <target state="translated">sweepLength</target>
        </trans-unit>
        <trans-unit id="65e40b4d06e03c30eace18e8498e034115450645" translate="yes" xml:space="preserve">
          <source>swipe.behind : &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;</source>
          <target state="translated">swipe.behind：&lt;a href=&quot;qml-qtqml-component&quot;&gt;组件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a5aec59cf80ec36b92ebdf92fb4b633c6a66672" translate="yes" xml:space="preserve">
          <source>swipe.position : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">swipe.position：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c43c7356db5d8bc4321244646e2734c7d5e0c85c" translate="yes" xml:space="preserve">
          <source>swipeAngle : &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">swipeAngle：&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bc9f0037431402a0ffb6fca88f9a952d2576b76" translate="yes" xml:space="preserve">
          <source>swipeAngle : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">swipeAngle : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="084ed2b1c6ec4bfb9a90b533eec91f734da3bb16" translate="yes" xml:space="preserve">
          <source>swizzle</source>
          <target state="translated">swizzle</target>
        </trans-unit>
        <trans-unit id="c7fff82d4ff238624e10a856b42c5699d784a428" translate="yes" xml:space="preserve">
          <source>sx</source>
          <target state="translated">sx</target>
        </trans-unit>
        <trans-unit id="1d4daae77833ec89b7ceeb6c3a11778734e5df0d" translate="yes" xml:space="preserve">
          <source>sy</source>
          <target state="translated">sy</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="ab89ee65a2c924d1a4e1d51225ef16c588e7251f" translate="yes" xml:space="preserve">
          <source>symbolKeyPanel : &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;</source>
          <target state="translated">symbolKeyPanel：&lt;a href=&quot;qml-qtqml-component&quot;&gt;组件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b387ced110858dcbcda36edb044dc18f91a0894" translate="yes" xml:space="preserve">
          <source>sync</source>
          <target state="translated">sync</target>
        </trans-unit>
        <trans-unit id="d3ec600ff49ece15d80f320fa0287f44952c1636" translate="yes" xml:space="preserve">
          <source>sync()</source>
          <target state="translated">sync()</target>
        </trans-unit>
        <trans-unit id="5eab04b67f24f2d7fabc3314f3ba840cf9198a8f" translate="yes" xml:space="preserve">
          <source>syncData</source>
          <target state="translated">syncData</target>
        </trans-unit>
        <trans-unit id="303feafee61736b73a284a4088c7cbf52afd87a2" translate="yes" xml:space="preserve">
          <source>syncData : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">syncData：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="632ed1f4e033c34dbf3983f61dc20fd36a625f1e" translate="yes" xml:space="preserve">
          <source>syncData : bool</source>
          <target state="translated">syncData:bool</target>
        </trans-unit>
        <trans-unit id="273d6af640b0a0f53e85662c7a2467721727e269" translate="yes" xml:space="preserve">
          <source>syncDirection : Qt::Orientations</source>
          <target state="translated">syncDirection:Qt::Orientations</target>
        </trans-unit>
        <trans-unit id="c573be67e181c8b9bc6e2a0b75bd383f7004ee4c" translate="yes" xml:space="preserve">
          <source>syncTime : float</source>
          <target state="translated">同步时间:float</target>
        </trans-unit>
        <trans-unit id="9947c96ee1ab9e7af57d91ba97ef8cca3eee9846" translate="yes" xml:space="preserve">
          <source>syncView : &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;</source>
          <target state="translated">syncView : &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5be398053251c558a82986a7b8a2f27d7a463f05" translate="yes" xml:space="preserve">
          <source>synchronousDrag : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">syncDrag：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b3b44580e2ce2b74df6bf698f6b31ee1a36d2f9" translate="yes" xml:space="preserve">
          <source>synonym for Active</source>
          <target state="translated">活跃的同义词</target>
        </trans-unit>
        <trans-unit id="246a2031cb16ad5682d7d36ca8d45d9f34beea92" translate="yes" xml:space="preserve">
          <source>syntax</source>
          <target state="translated">syntax</target>
        </trans-unit>
        <trans-unit id="e9b3c674f2eded5e4017e2110d307c18391fbc16" translate="yes" xml:space="preserve">
          <source>syntax has been used, it is not necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; value of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; objects to &lt;code&gt;rect&lt;/code&gt;, and neither is it necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; values to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">使用了语法，没有必要将&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt;对象的&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标值&lt;/a&gt;设置为 &lt;code&gt;rect&lt;/code&gt; ，也不必将&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;值设置为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51392610b285a6745b07d55848bfedf9db229f07" translate="yes" xml:space="preserve">
          <source>syntax has been used, it is not necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; value of the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; objects to &lt;code&gt;rect&lt;/code&gt;, and neither is it necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; values to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">使用了语法，不必将&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt;对象的&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标值&lt;/a&gt;设置为 &lt;code&gt;rect&lt;/code&gt; ，也不必将&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;值设置为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d15a48f67a3429a45f3ebcda8e8cbeaae5b787d" translate="yes" xml:space="preserve">
          <source>syntax has been used, it is not necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; value of the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; objects to &lt;code&gt;rect&lt;/code&gt;, and neither is it necessary to set the &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; values to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">使用了语法，不必将&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt;对象的&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标值&lt;/a&gt;设置为 &lt;code&gt;rect&lt;/code&gt; ，也不必将&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;值设置为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0217d41fff97e9b8222d6f1d59c09b0efabfa2b" translate="yes" xml:space="preserve">
          <source>syntax, its child &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; objects are also automatically applied to this property and do not need to specify &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; animation values.</source>
          <target state="translated">语法，其子级&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt;对象也将自动应用于此属性，无需指定&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;动画值。</target>
        </trans-unit>
        <trans-unit id="0968780cbe1c2a446b5ee1e4181cffd8e10b799d" translate="yes" xml:space="preserve">
          <source>syntax, its child &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; objects are also automatically applied to this property and do not need to specify &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; animation values.</source>
          <target state="translated">语法，其子级&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt;对象也将自动应用于此属性，无需指定&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;动画值。</target>
        </trans-unit>
        <trans-unit id="4877e4020410f2947751609ef7384c85d32eb543" translate="yes" xml:space="preserve">
          <source>syntax, its child &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; objects are also automatically applied to this property and do not need to specify &lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;target&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; animation values.</source>
          <target state="translated">语法，其子级&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt;对象也将自动应用于此属性，无需指定&lt;a href=&quot;qml-qtquick-propertyanimation#target-prop&quot;&gt;目标&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;属性&lt;/a&gt;动画值。</target>
        </trans-unit>
        <trans-unit id="faa3302ea44035bf71343ebf9c6bdcf84cc9cfcf" translate="yes" xml:space="preserve">
          <source>syntax, they are set to running by default.</source>
          <target state="translated">语法,它们默认被设置为运行。</target>
        </trans-unit>
        <trans-unit id="7d57dd74cb051b52dd17990859aeed1766580147" translate="yes" xml:space="preserve">
          <source>syntax, which specifies the animation is to be applied as a</source>
          <target state="translated">语法,它指定了动画是作为一个</target>
        </trans-unit>
        <trans-unit id="72d972dda848bf0346e6747d47c53405d1da9100" translate="yes" xml:space="preserve">
          <source>syntaxhighlighting</source>
          <target state="translated">syntaxhighlighting</target>
        </trans-unit>
        <trans-unit id="84c57a5b3a36aaededf6445d49e65c88e70c6644" translate="yes" xml:space="preserve">
          <source>sysroot</source>
          <target state="translated">sysroot</target>
        </trans-unit>
        <trans-unit id="317f1e761f2faa8da781a4762b9dcc2c5cad209a" translate="yes" xml:space="preserve">
          <source>system</source>
          <target state="translated">system</target>
        </trans-unit>
        <trans-unit id="3608f6474d506813bfa3b0f4fd10a77f8a4c3fb6" translate="yes" xml:space="preserve">
          <source>system : &lt;a href=&quot;qml-qtquick-particles-particlesystem&quot;&gt;ParticleSystem&lt;/a&gt;</source>
          <target state="translated">系统：&lt;a href=&quot;qml-qtquick-particles-particlesystem&quot;&gt;粒子&lt;/a&gt;系统</target>
        </trans-unit>
        <trans-unit id="3852c8fe90799e42409a2ff8b895b4838a9fd77c" translate="yes" xml:space="preserve">
          <source>system defined</source>
          <target state="translated">系统定义</target>
        </trans-unit>
        <trans-unit id="fbdece8e4968a9a36a5a387dccba005db3942a73" translate="yes" xml:space="preserve">
          <source>system time when the message occurred, formatted by passing the &lt;code&gt;format&lt;/code&gt; to &lt;a href=&quot;qdatetime#toString&quot;&gt;QDateTime::toString&lt;/a&gt;(). If the format is not specified, the format of &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODate&lt;/a&gt; is used.</source>
          <target state="translated">消息发生的系统时间，通过将 &lt;code&gt;format&lt;/code&gt; 传递给&lt;a href=&quot;qdatetime#toString&quot;&gt;QDateTime :: toString&lt;/a&gt;（）进行格式化。如果未指定格式，则使用&lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt :: ISODate&lt;/a&gt;的格式。</target>
        </trans-unit>
        <trans-unit id="58a2d9fa0b59d4e0673f1152db4164d1547eb2cf" translate="yes" xml:space="preserve">
          <source>system tray</source>
          <target state="translated">系统盘</target>
        </trans-unit>
        <trans-unit id="94b52a97e0b7dba9a0b4878765a55117453df7e5" translate="yes" xml:space="preserve">
          <source>system trays</source>
          <target state="translated">系统托盘</target>
        </trans-unit>
        <trans-unit id="5473aae636c0c478aab5be2d2203a4c0ec2eb9c9" translate="yes" xml:space="preserve">
          <source>system(command)</source>
          <target state="translated">system(command)</target>
        </trans-unit>
        <trans-unit id="69d0a3232f4ae64ef4b4987ebb3cf6513b13c36a" translate="yes" xml:space="preserve">
          <source>system(command[, mode[, stsvar]])</source>
          <target state="translated">system(command[,mode[,stsvar]])</target>
        </trans-unit>
        <trans-unit id="e114267c5d88cbd681c6ab6c8cf0207c0a22a35f" translate="yes" xml:space="preserve">
          <source>systemId</source>
          <target state="translated">systemId</target>
        </trans-unit>
        <trans-unit id="2f432f4412e42041f166d15290edf56bb6169421" translate="yes" xml:space="preserve">
          <source>systemMenu</source>
          <target state="translated">systemMenu</target>
        </trans-unit>
        <trans-unit id="b85fbedcb5da875379b02dba62fd671c496985c1" translate="yes" xml:space="preserve">
          <source>systemStates : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">systemStates：&lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7db115bd8f486619e89ea508ab455333862766ec" translate="yes" xml:space="preserve">
          <source>system_path(path)</source>
          <target state="translated">system_path(path)</target>
        </trans-unit>
        <trans-unit id="78fdd8fa6b4aa7534004824497446587edcd091a" translate="yes" xml:space="preserve">
          <source>system_quote(arg)</source>
          <target state="translated">system_quote(arg)</target>
        </trans-unit>
        <trans-unit id="c57c8e6d6a0517959598de2c08de5cf8daa440ce" translate="yes" xml:space="preserve">
          <source>sz</source>
          <target state="translated">sz</target>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="75e2e0a4409520a6db242022f5b51d48e41eef0c" translate="yes" xml:space="preserve">
          <source>t : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">t：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5353879bd69bfddcb465dad176ff52db8319d6f" translate="yes" xml:space="preserve">
          <source>t1</source>
          <target state="translated">t1</target>
        </trans-unit>
        <trans-unit id="2a5bd02710e975a7fbb92da876655950fbd5e70d" translate="yes" xml:space="preserve">
          <source>t2</source>
          <target state="translated">t2</target>
        </trans-unit>
        <trans-unit id="f2daf7bf8c0100e8421f6a72dd8064cad674813a" translate="yes" xml:space="preserve">
          <source>t_</source>
          <target state="translated">t_</target>
        </trans-unit>
        <trans-unit id="673ff00163359094d5188cb3880704d3d0ddeeec" translate="yes" xml:space="preserve">
          <source>tab : &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;</source>
          <target state="translated">标签：&lt;a href=&quot;qml-qtqml-component&quot;&gt;组件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8b904da226f4ff0b04fd0de4c98d3b3b3dd8f92" translate="yes" xml:space="preserve">
          <source>tab : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">标签：&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e54ee09d082c0bdec6d266872b54b2eb9d7c314" translate="yes" xml:space="preserve">
          <source>tab order</source>
          <target state="translated">标签顺序</target>
        </trans-unit>
        <trans-unit id="9bd29fde61fe81895a78a000ffbfcfca31f50866" translate="yes" xml:space="preserve">
          <source>tabArray</source>
          <target state="translated">tabArray</target>
        </trans-unit>
        <trans-unit id="8370cd21745506d97dc13d32446c4d345d5f29b7" translate="yes" xml:space="preserve">
          <source>tabBar : &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;</source>
          <target state="translated">tabBar：&lt;a href=&quot;qml-qtqml-component&quot;&gt;组件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b3a72de4c40f50dc78677427cab23bf70095284" translate="yes" xml:space="preserve">
          <source>tabBarAutoHide : bool</source>
          <target state="translated">tabBarAutoHide:bool</target>
        </trans-unit>
        <trans-unit id="faa30526a5d8d279c59258ca61dd87a8e5574dfb" translate="yes" xml:space="preserve">
          <source>tabBarSize</source>
          <target state="translated">tabBarSize</target>
        </trans-unit>
        <trans-unit id="348537eeed2a1e215c0048c41b37faba256cb106" translate="yes" xml:space="preserve">
          <source>tabChangesFocus : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">tabChangesFocus：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94ee8286439b6d0723668355bfd08387618aed6f" translate="yes" xml:space="preserve">
          <source>tabChangesFocus : bool</source>
          <target state="translated">tabChangesFocus:bool</target>
        </trans-unit>
        <trans-unit id="978d0cedc926dfd0c2f710f1b83e610d5bccac1d" translate="yes" xml:space="preserve">
          <source>tabFocusBehavior</source>
          <target state="translated">tabFocusBehavior</target>
        </trans-unit>
        <trans-unit id="ee6c67dafd02ac4c5f483e46cb52475db1a3cae0" translate="yes" xml:space="preserve">
          <source>tabFocusBehavior : const &lt;a href=&quot;qt#TabFocusBehavior-enum&quot;&gt;Qt::TabFocusBehavior&lt;/a&gt;</source>
          <target state="translated">tabFocusBehavior：const &lt;a href=&quot;qt#TabFocusBehavior-enum&quot;&gt;Qt :: TabFocusBehavior&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ba1a85956c9fb197545933236d24ce24e1e84eb" translate="yes" xml:space="preserve">
          <source>tabIndex</source>
          <target state="translated">tabIndex</target>
        </trans-unit>
        <trans-unit id="5341819f4581b71646ccd15c775c648243f99f2b" translate="yes" xml:space="preserve">
          <source>tabKeyNavigation : bool</source>
          <target state="translated">tabKeyNavigation:bool</target>
        </trans-unit>
        <trans-unit id="42ca6a306afeb98b7cc6a05a900a855388b7cb49" translate="yes" xml:space="preserve">
          <source>tabOverlap : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">tabOverlap：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10832246299395ae89366aa7b06ed027d7833fee" translate="yes" xml:space="preserve">
          <source>tabPosition</source>
          <target state="translated">tabPosition</target>
        </trans-unit>
        <trans-unit id="f445f76c4a1ec2f61244ce06e91c97373c0d4f14" translate="yes" xml:space="preserve">
          <source>tabPosition : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">tabPosition：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2eadc4b7eb353d92a717509d0ce12b9dcd0017dc" translate="yes" xml:space="preserve">
          <source>tabPosition : &lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;QTabWidget::TabPosition&lt;/a&gt;</source>
          <target state="translated">tabPosition：&lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;QTabWidget :: TabPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfe97fbbfa2f67de68a1677bd135815ab62fdc14" translate="yes" xml:space="preserve">
          <source>tabPosition : &lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;TabPosition&lt;/a&gt;</source>
          <target state="translated">tabPosition：&lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;TabPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f36ced2a77de5fc0e457be7802c67703d530951" translate="yes" xml:space="preserve">
          <source>tabPressed(</source>
          <target state="translated">tabPressed(</target>
        </trans-unit>
        <trans-unit id="3f713d32e19bbcd200e20f3488af9af9d3f2d62a" translate="yes" xml:space="preserve">
          <source>tabPressed(&lt;a href=&quot;qml-qt3d-input-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</source>
          <target state="translated">tabPressed(&lt;a href=&quot;qml-qt3d-input-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb622262e2137c1555fc68717c7a7bd63278fe40" translate="yes" xml:space="preserve">
          <source>tabPressed(&lt;a href=&quot;qml-qtquick-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</source>
          <target state="translated">tabPressed(&lt;a href=&quot;qml-qtquick-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="041688d85b019aebf9dd8151c0d3ed48dc306bb6" translate="yes" xml:space="preserve">
          <source>tabShape</source>
          <target state="translated">tabShape</target>
        </trans-unit>
        <trans-unit id="70a60252f69003321ba94693e48b337a3a03d9ce" translate="yes" xml:space="preserve">
          <source>tabShape : &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;QTabWidget::TabShape&lt;/a&gt;</source>
          <target state="translated">tabShape：&lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;QTabWidget :: TabShape&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7919e5f2a184b5043654fdc17bc16dbcf9244ed5" translate="yes" xml:space="preserve">
          <source>tabShape : &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;TabShape&lt;/a&gt;</source>
          <target state="translated">tabShape：&lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;TabShape&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13ce81e866a56fdd0926d583383b8dafbbc0a060" translate="yes" xml:space="preserve">
          <source>tabStopDistance</source>
          <target state="translated">tabStopDistance</target>
        </trans-unit>
        <trans-unit id="585be0219936d1fec89e18f0cc6282e6e9cc13bc" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">tabStopDistance：&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a849f3568fc69220a0420173a2c1ff9a58fdc466" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">tabStopDistance：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c2ea439c61298ff0e72db35486be55a9e064857" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">tabStopDistance : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d65967b4aad55e0d8f87fbcfe2b9cb5b28dd7949" translate="yes" xml:space="preserve">
          <source>tabStops</source>
          <target state="translated">tabStops</target>
        </trans-unit>
        <trans-unit id="a1fba2cf975f9fbffdb6a4948b015f518c444251" translate="yes" xml:space="preserve">
          <source>tabType</source>
          <target state="translated">tabType</target>
        </trans-unit>
        <trans-unit id="aff38e118665408a84f0962ed361328eb2f4f4c7" translate="yes" xml:space="preserve">
          <source>tabWidth</source>
          <target state="translated">tabWidth</target>
        </trans-unit>
        <trans-unit id="c3ee137d4f22eb06ed1351d644f3674592c90836" translate="yes" xml:space="preserve">
          <source>table</source>
          <target state="translated">table</target>
        </trans-unit>
        <trans-unit id="c794f1be9a6c800fe7877a1ac76412156d73a3c1" translate="yes" xml:space="preserve">
          <source>table cell to this table cell.</source>
          <target state="translated">表单元格到本表单元格。</target>
        </trans-unit>
        <trans-unit id="de82c770a0f6fff7471d7368fa543d7ca93e8c9c" translate="yes" xml:space="preserve">
          <source>table rows and columns.</source>
          <target state="translated">表的行和列。</target>
        </trans-unit>
        <trans-unit id="a7ac4337ab85db67a994ede305d1d1640c2891cf" translate="yes" xml:space="preserve">
          <source>table selection range.</source>
          <target state="translated">表选择范围。</target>
        </trans-unit>
        <trans-unit id="8ff51f0353458e5ba87261c6e82b3dd9a78931b9" translate="yes" xml:space="preserve">
          <source>tableData</source>
          <target state="translated">tableData</target>
        </trans-unit>
        <trans-unit id="d63a6972032e06e8e7ce2904f90046c61efb86a3" translate="yes" xml:space="preserve">
          <source>tableData : &lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt;*</source>
          <target state="translated">&lt;a href=&quot;qscxmltabledata&quot;&gt;tableData&lt;/a&gt;：QScxmlTableData *</target>
        </trans-unit>
        <trans-unit id="3e70608233f4131ec786b33e204cf8da82ead1ef" translate="yes" xml:space="preserve">
          <source>tableName</source>
          <target state="translated">tableName</target>
        </trans-unit>
        <trans-unit id="5befc22162009a4edc31f8e721af0d8b82bb42f1" translate="yes" xml:space="preserve">
          <source>tableType</source>
          <target state="translated">tableType</target>
        </trans-unit>
        <trans-unit id="63ffe5849e2064c117dcf7944e6af7ea46a40c9c" translate="yes" xml:space="preserve">
          <source>tablename</source>
          <target state="translated">tablename</target>
        </trans-unit>
        <trans-unit id="32ebadba97da8c826d3f60925382e591597d1d3c" translate="yes" xml:space="preserve">
          <source>tabletTracking : bool</source>
          <target state="translated">平板电脑追踪:bool</target>
        </trans-unit>
        <trans-unit id="72a26a3e0e42e0991a18a2080c2d2796dd97f964" translate="yes" xml:space="preserve">
          <source>tabs</source>
          <target state="translated">tabs</target>
        </trans-unit>
        <trans-unit id="f20fe5024837ed449c867bbda11d27942d8fdef4" translate="yes" xml:space="preserve">
          <source>tabsAlignment : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">tabsAlignment：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f23c02b7478ad1aaf7240c6166ff607d62ce264a" translate="yes" xml:space="preserve">
          <source>tabsClosable : bool</source>
          <target state="translated">tabsClosable:bool</target>
        </trans-unit>
        <trans-unit id="8034e1d9e5430785d8a715d7fd540b47e466ab2f" translate="yes" xml:space="preserve">
          <source>tabsMovable : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">可移动：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98bd923d0be19700cbc88ff4bdb2f898cb51cf65" translate="yes" xml:space="preserve">
          <source>tabsMovable : bool</source>
          <target state="translated">tabsMovable:bool</target>
        </trans-unit>
        <trans-unit id="51ea392ac6da7ae2eff27604f44b251a5280f979" translate="yes" xml:space="preserve">
          <source>tabsVisible : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">标签：可见：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25d7d8d45aa506913db7927ccb15acb87ccdaaec" translate="yes" xml:space="preserve">
          <source>tabsize</source>
          <target state="translated">tabsize</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="ce66d249e632c7150ba96bf0ea8d6466d43b6d03" translate="yes" xml:space="preserve">
          <source>tag : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">标签：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d50daa5a5a908df8da7222a91ba5ebd8b755e1ec" translate="yes" xml:space="preserve">
          <source>tag : const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">标签：const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29c3da78b17e94bdb4aa31f593f5aa9de43fa653" translate="yes" xml:space="preserve">
          <source>tag.</source>
          <target state="translated">tag.</target>
        </trans-unit>
        <trans-unit id="3316a1b6eaffa91f3632cd41f1bc887a4c46f171" translate="yes" xml:space="preserve">
          <source>tagFound()</source>
          <target state="translated">tagFound()</target>
        </trans-unit>
        <trans-unit id="527dc848f3ee3989b8d691b4649af383f1dc7067" translate="yes" xml:space="preserve">
          <source>tagName</source>
          <target state="translated">tagName</target>
        </trans-unit>
        <trans-unit id="7d8198d2111b217017596bad3b0e3ce2df3a8168" translate="yes" xml:space="preserve">
          <source>tagRemoved()</source>
          <target state="translated">tagRemoved()</target>
        </trans-unit>
        <trans-unit id="756b34e76d8b1fc238ecbae7b13f38a9d70632b4" translate="yes" xml:space="preserve">
          <source>tagfile</source>
          <target state="translated">tagfile</target>
        </trans-unit>
        <trans-unit id="f33b5f5ffb61e6451b3b32d1fb3f949cf619ab74" translate="yes" xml:space="preserve">
          <source>tagname</source>
          <target state="translated">tagname</target>
        </trans-unit>
        <trans-unit id="ce55aa1773de006525f336ee52d81015e922764a" translate="yes" xml:space="preserve">
          <source>take exclusive ownership of certain touch points, it is also possible to have multiple MultiPointTouchAreas active at the same time, each operating on a different set of touch points.</source>
          <target state="translated">独占某些触摸点,也可以同时激活多个多点触摸区域,每个区域对不同的触摸点进行操作。</target>
        </trans-unit>
        <trans-unit id="a166526c4e7eac23da05f469ff0407c9060afee0" translate="yes" xml:space="preserve">
          <source>take ownership of</source>
          <target state="translated">主导</target>
        </trans-unit>
        <trans-unit id="c18bb1318530308eceeb59e9994a16edd5a64089" translate="yes" xml:space="preserve">
          <source>take ownership of the &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; object.</source>
          <target state="translated">取得&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;对象的所有权。</target>
        </trans-unit>
        <trans-unit id="190770e0e54d574b984cd922b92ebc32b0f6d32f" translate="yes" xml:space="preserve">
          <source>take ownership of the model unless it is the model's parent object because the model may be shared between many different views.</source>
          <target state="translated">的所有权,除非它是模型的父对象,因为模型可能在许多不同的视图之间共享。</target>
        </trans-unit>
        <trans-unit id="49321678158802105267750e81ae85c4da328edd" translate="yes" xml:space="preserve">
          <source>take ownership of the resolver. It's the callers responsibility to ensure that the resolver is valid during the entire life-time of the stream reader object, or until another resolver or &lt;code&gt;nullptr&lt;/code&gt; is set.</source>
          <target state="translated">拥有解析器的所有权。确保流解析器在流读取器对象的整个生命周期内有效，或者直到设置了另一个解析器或 &lt;code&gt;nullptr&lt;/code&gt; 时，调用者都有责任保证。</target>
        </trans-unit>
        <trans-unit id="e3aa5728c6a6b56b6f7e2a12a16ec0a65416f427" translate="yes" xml:space="preserve">
          <source>take(</source>
          <target state="translated">take(</target>
        </trans-unit>
        <trans-unit id="be9030d6796634868085da1b2ec4c56ee88f8ea6" translate="yes" xml:space="preserve">
          <source>take(&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">take(&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05c410b33e7ae75d23618ede62ae1f86e35e4057" translate="yes" xml:space="preserve">
          <source>takeOwnership</source>
          <target state="translated">takeOwnership</target>
        </trans-unit>
        <trans-unit id="ad468e0387a94cec9c5a972dbc488609270cc482" translate="yes" xml:space="preserve">
          <source>take_first(variablename)</source>
          <target state="translated">take_first(variablename)</target>
        </trans-unit>
        <trans-unit id="03145e2829b2e26afb2b1c1dc0084baed3037e31" translate="yes" xml:space="preserve">
          <source>take_last(variablename)</source>
          <target state="translated">take_last(variablename)</target>
        </trans-unit>
        <trans-unit id="079da53b59f3e068072828c268b09d8a4c014b28" translate="yes" xml:space="preserve">
          <source>taken in.</source>
          <target state="translated">采取的。</target>
        </trans-unit>
        <trans-unit id="60aed62f5f860e9462f5f3b545d65f9b3ebde0f2" translate="yes" xml:space="preserve">
          <source>takes a reference to the item, so that any modifications done to the item will appear in</source>
          <target state="translated">取一个对该项目的引用,这样对该项目的任何修改都会出现在</target>
        </trans-unit>
        <trans-unit id="e7c10eac0936bde90b18eb01b32fec54157bca93" translate="yes" xml:space="preserve">
          <source>takes a reference to the item, so that any modifications done to the item will appear in the sequence which the iterators belong to.</source>
          <target state="translated">取一个项目的引用,这样对项目的任何修改都会出现在迭代器所属的序列中。</target>
        </trans-unit>
        <trans-unit id="e2046dc856262b1be1d02d0ad157b681e07fc8b7" translate="yes" xml:space="preserve">
          <source>takes a single argument, the resulted &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; will be filled with the signal's argument value. If the</source>
          <target state="translated">接受单个参数，结果&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;将用信号的参数值填充。如果</target>
        </trans-unit>
        <trans-unit id="e81c419e4200ba0d64f272adb9aa6a7983c68a93" translate="yes" xml:space="preserve">
          <source>takes multiple arguments, the resulted &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; is filled with std::tuple storing the values of signal's arguments. If the</source>
          <target state="translated">接受多个参数，结果&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;用存储信号参数值的std :: tuple填充。如果</target>
        </trans-unit>
        <trans-unit id="d823789c5d88db5ed1d513e9a6dae53cae6c5ee1" translate="yes" xml:space="preserve">
          <source>takes no arguments, a &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; is returned. If the</source>
          <target state="translated">不接受任何参数，则返回&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt;。如果</target>
        </trans-unit>
        <trans-unit id="00595d74907911890c7bc39f00d30f3329a22848" translate="yes" xml:space="preserve">
          <source>takes ownership of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;. The thread does not begin executing until &lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;() is called.</source>
          <target state="translated">拥有&lt;a href=&quot;qthread&quot;&gt;QThread的&lt;/a&gt;所有权。在调用&lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;（）之前，线程不会开始执行。</target>
        </trans-unit>
        <trans-unit id="fed7ca36d80d43747bb98d98abdec167f49ee519" translate="yes" xml:space="preserve">
          <source>takes ownership of the QThread. The thread does not begin executing until &lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;() is called.</source>
          <target state="translated">获得QThread的所有权。在调用&lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;（）之前，线程不会开始执行。</target>
        </trans-unit>
        <trans-unit id="d16806e0530f650942ac8cfab877b38d88ef6562" translate="yes" xml:space="preserve">
          <source>takes ownership of the object.</source>
          <target state="translated">获得对象的所有权。</target>
        </trans-unit>
        <trans-unit id="33d4170a535758b9a0b0bd1481c79ffa6c5aad32" translate="yes" xml:space="preserve">
          <source>takes that into account, so be cautious when overriding the size with a fixed size. A minimal size of 64x64 should always work.</source>
          <target state="translated">会考虑到这一点,所以当用固定的大小覆盖时要小心。64x64的最小尺寸应该总是有效的。</target>
        </trans-unit>
        <trans-unit id="65ebe412cbcdb6a3cd0a04ad13f9f938dc25637a" translate="yes" xml:space="preserve">
          <source>takes the device pixel ratio into account, meaning that it is already multiplied by the correct scale factor. When moving the window containing the &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; item to a screen with different settings, the FBO is automatically recreated and this function is invoked with the correct size.</source>
          <target state="translated">考虑到设备像素比率，这意味着它已经乘以正确的比例因子。将包含&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;项目的窗口移动到具有不同设置的屏幕时，将自动重新创建FBO，并以正确的大小调用此函数。</target>
        </trans-unit>
        <trans-unit id="cc8a1220157ba36110a61bc3faa7b1ab87551a02" translate="yes" xml:space="preserve">
          <source>takes the four closest texels and bilinearly interpolates them.</source>
          <target state="translated">取最接近的四个文本,并对它们进行双线插值。</target>
        </trans-unit>
        <trans-unit id="f4654ba9f8e86e7a0ace8744780e0e24a24b6107" translate="yes" xml:space="preserve">
          <source>takes the result of this future as its argument.</source>
          <target state="translated">以这个未来的结果作为论据。</target>
        </trans-unit>
        <trans-unit id="35ca8cf12ff7ebe96d1bd7602a1968f756f4af33" translate="yes" xml:space="preserve">
          <source>tan</source>
          <target state="translated">tan</target>
        </trans-unit>
        <trans-unit id="104cd618c2f9eb378255e17bd33bdc23e652b4a4" translate="yes" xml:space="preserve">
          <source>tan(x)</source>
          <target state="translated">tan(x)</target>
        </trans-unit>
        <trans-unit id="35746d1f26303f05cda32ca6589672c37bf23b43" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qml-qt3d-core-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="translated">tangentAttribute：&lt;a href=&quot;qml-qt3d-core-attribute&quot;&gt;属性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="650be6291deb6a9753e2adaa163474dece312cfb" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="translated">tangentAttribute：&lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;属性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2c7633fd6f605f45ecdb04f1cbaf560adde2f72" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender::QAttribute&lt;/a&gt;* const</source>
          <target state="translated">tangentAttribute：&lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender :: QAttribute&lt;/a&gt; * const</target>
        </trans-unit>
        <trans-unit id="b1936704c22d48c07a77374012ecc4c36ba0c43d" translate="yes" xml:space="preserve">
          <source>tangentialPressure</source>
          <target state="translated">tangentialPressure</target>
        </trans-unit>
        <trans-unit id="160dac239a306eb6dfc8d958c89ea9e59df0c800" translate="yes" xml:space="preserve">
          <source>tanh(x)</source>
          <target state="translated">tanh(x)</target>
        </trans-unit>
        <trans-unit id="168c271113879c96011839893a24ba4bff54634c" translate="yes" xml:space="preserve">
          <source>tao_tuple</source>
          <target state="translated">tao_tuple</target>
        </trans-unit>
        <trans-unit id="ee9b5dccece6bd642a757f2f44077664169e5d14" translate="yes" xml:space="preserve">
          <source>tapCountChanged()</source>
          <target state="translated">tapCountChanged()</target>
        </trans-unit>
        <trans-unit id="5c6881b45f18ac833e44288e57eadd906cbe666e" translate="yes" xml:space="preserve">
          <source>tapDirection</source>
          <target state="translated">tapDirection</target>
        </trans-unit>
        <trans-unit id="4d3f4765f277b1d06e1545ab9f42867741170156" translate="yes" xml:space="preserve">
          <source>tapDirection : TapDirection</source>
          <target state="translated">tapDirection:TapDirection</target>
        </trans-unit>
        <trans-unit id="cdfe7a2214b1c4e945a7019df5b8e9e3182426ce" translate="yes" xml:space="preserve">
          <source>tapDirection : const &lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;TapDirection&lt;/a&gt;</source>
          <target state="translated">tapDirection：const &lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;TapDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6d313d2efc4a768c19c4f9151cc6aeeebd35555" translate="yes" xml:space="preserve">
          <source>tapped(</source>
          <target state="translated">tapped(</target>
        </trans-unit>
        <trans-unit id="2c6c819b21fb3a01c494eb60a2689277f3a61515" translate="yes" xml:space="preserve">
          <source>tapped(&lt;a href=&quot;qml-qtquick-eventpoint&quot;&gt;EventPoint&lt;/a&gt;</source>
          <target state="translated">tapped(&lt;a href=&quot;qml-qtquick-eventpoint&quot;&gt;EventPoint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521f93a6ddb1b11f62aadcbdbcb17cd26936e07" translate="yes" xml:space="preserve">
          <source>tapped(EventPoint</source>
          <target state="translated">tapped(EventPoint</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="14241cf302df03823a5eec8acdaeb2821b666010" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-core-transform&quot;&gt;Transform&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-qt3d-core-transform&quot;&gt;转换&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a6a704122313ec98eab2826a48102d58dc8c01b" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-render-geometryrenderer&quot;&gt;GeometryRenderer&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-qt3d-render-geometryrenderer&quot;&gt;GeometryRenderer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1448420040a609bc47348d0a0a3b30355a6a8277" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-render-rendertarget&quot;&gt;RenderTarget&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-qt3d-render-rendertarget&quot;&gt;RenderTarget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fec70f280f7a7473b8adb3978db2855a18a65082" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="638091827cecf642535b1cb7d4fce92a6fb826d4" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qtquick-item&quot;&gt;QtQuick::Item&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-qtquick-item&quot;&gt;QtQuick :: Item&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d68262effc5efc6b49bb0193ebc83d95c37092" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc13f67a7bcc6ab12e569e60e6ff45678e7172d6" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e74339aa33ccb97196e810ca6fdfe4f976ba6f2b" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-vector3d&quot;&gt;vector3d&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-vector3d&quot;&gt;vector3d&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d72b3e29dc732709d347d134a020333759fbd2b9" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3dcore-qtransform&quot;&gt;Qt3DCore::QTransform&lt;/a&gt;*</source>
          <target state="translated">目标：&lt;a href=&quot;qt3dcore-qtransform&quot;&gt;Qt3DCore :: QTransform&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="394956927ac7a2972860607eb383e02afd8659d8" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3drender-qgeometryrenderer&quot;&gt;Qt3DRender::QGeometryRenderer&lt;/a&gt;*</source>
          <target state="translated">目标：&lt;a href=&quot;qt3drender-qgeometryrenderer&quot;&gt;Qt3DRender :: QGeometryRenderer&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="11b873a0ff0f46db579da09dda0368ecc668df41" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3drender-qrendertarget&quot;&gt;Qt3DRender::QRenderTarget&lt;/a&gt;*</source>
          <target state="translated">目标：&lt;a href=&quot;qt3drender-qrendertarget&quot;&gt;Qt3DRender :: QRenderTarget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="07ebe948e93f65e1a4050a2215ca3ff5447ac794" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdbd44b0e016d002e9777979255e2dbe0072780d" translate="yes" xml:space="preserve">
          <source>target : Object</source>
          <target state="translated">目标:对象</target>
        </trans-unit>
        <trans-unit id="8afd40a235494336ec24fe35111e2c8eceacea94" translate="yes" xml:space="preserve">
          <source>target : const &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Target&lt;/a&gt;</source>
          <target state="translated">target：const &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44d3dc76405343e478af46452c4bb71723378541" translate="yes" xml:space="preserve">
          <source>target : var</source>
          <target state="translated">target:var</target>
        </trans-unit>
        <trans-unit id="21d9cdb9c52fd7ef95236ac91978c6f4b3339c69" translate="yes" xml:space="preserve">
          <source>targetItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">targetItem：&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fea2331e36f4856d954d22c7f7514fb2b9698687" translate="yes" xml:space="preserve">
          <source>targetName : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">targetName：&lt;a href=&quot;qml-string&quot;&gt;字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6d374f82418b9f63a05a1b710353f337bd446b" translate="yes" xml:space="preserve">
          <source>targetName : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">targetName：&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5cc7688813825ae743ff1189ccc5927e3fad5b9" translate="yes" xml:space="preserve">
          <source>targetObject : &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt;*</source>
          <target state="translated">targetObject：&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d2380969626c8e2532945ec5d6b33272a3a19594" translate="yes" xml:space="preserve">
          <source>targetOffset</source>
          <target state="translated">targetOffset</target>
        </trans-unit>
        <trans-unit id="989c40a33ff35a9ec61fa28daa6d0a9c362f9b0c" translate="yes" xml:space="preserve">
          <source>targetPositions</source>
          <target state="translated">targetPositions</target>
        </trans-unit>
        <trans-unit id="0c743f063716feab03708eb9f61d3da6dd4e3d1c" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;float&amp;gt;</source>
          <target state="translated">targetPositions : &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;float&amp;gt;</target>
        </trans-unit>
        <trans-unit id="50f86e624016853967be84f74943404f27a55e3f" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;&amp;gt;</source>
          <target state="translated">targetPositions：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="a117bf28e20ccaafeee1ed40b5033261470c6bd8" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt;</source>
          <target state="translated">targetPositions：&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;float&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60fd5ec378417511ace4b68c13fa13760ee389ff" translate="yes" xml:space="preserve">
          <source>targetRect</source>
          <target state="translated">targetRect</target>
        </trans-unit>
        <trans-unit id="11caf6161770304ba62eaf30aa21b1fbd8abf0e9" translate="yes" xml:space="preserve">
          <source>targetScaleMultiplier : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetScaleMultiplier：&lt;a href=&quot;qml-real&quot;&gt;实数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5177b23e1d678cec79006d8bf55075d65d35b910" translate="yes" xml:space="preserve">
          <source>targetScreen</source>
          <target state="translated">targetScreen</target>
        </trans-unit>
        <trans-unit id="07668b41f45649c3205e72128ecbb27bf492f9fb" translate="yes" xml:space="preserve">
          <source>targetSize</source>
          <target state="translated">targetSize</target>
        </trans-unit>
        <trans-unit id="87194d700652d391e5319a3ff0338a63b232ec7e" translate="yes" xml:space="preserve">
          <source>targetState : &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;*</source>
          <target state="translated">targetState：&lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="23b2423863063b1fb80acfe2148a90be0ce753a7" translate="yes" xml:space="preserve">
          <source>targetState : &lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;</source>
          <target state="translated">targetState：&lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45bed826934157d026521778bc2b0c6caebbd100" translate="yes" xml:space="preserve">
          <source>targetStates : &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;*&amp;gt;</source>
          <target state="translated">targetStates：&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ce404bb4be631a6086b7600b267abd14d239dfb" translate="yes" xml:space="preserve">
          <source>targetStates : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;&amp;gt;</source>
          <target state="translated">targetStates：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="bc814bad5b30a762867e802319bf18e948a160f1" translate="yes" xml:space="preserve">
          <source>targetThread</source>
          <target state="translated">targetThread</target>
        </trans-unit>
        <trans-unit id="209c348b61e3ad406cad33c3a5806925e2cd50a4" translate="yes" xml:space="preserve">
          <source>targetTransform</source>
          <target state="translated">targetTransform</target>
        </trans-unit>
        <trans-unit id="4d40a9e97f91ca3368a601c6462297dd5fdc3f6e" translate="yes" xml:space="preserve">
          <source>targetTransformAroundCursor : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">targetTransformAroundCursor：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa6b188d3101e2a5e782c1f0af6fafca10c8ba53" translate="yes" xml:space="preserve">
          <source>targetType</source>
          <target state="translated">targetType</target>
        </trans-unit>
        <trans-unit id="1d629e7268d76f08200a7660c2edf3bf295b1f75" translate="yes" xml:space="preserve">
          <source>targetTypeId</source>
          <target state="translated">targetTypeId</target>
        </trans-unit>
        <trans-unit id="f86a469d0dd8e6d77752bb78fa9e2cd6952bf695" translate="yes" xml:space="preserve">
          <source>targetValue : Variant</source>
          <target state="translated">targetValue:变量</target>
        </trans-unit>
        <trans-unit id="8ae6ae5b1e29e791f30bc32a7404eca5b4a6c516" translate="yes" xml:space="preserve">
          <source>targetVariation : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetVariation：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c66496f88b5b16ba7f295d53a9528c698cc7cf6d" translate="yes" xml:space="preserve">
          <source>targetX : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetX：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c16d88d2f32d0bbdf5377a549df01b2c5b388c51" translate="yes" xml:space="preserve">
          <source>targetY : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetY：&lt;a href=&quot;qml-real&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8c0c2ff7782c500f82a3abb92914fcf1fbf15ce" translate="yes" xml:space="preserve">
          <source>target_predeps</source>
          <target state="translated">target_predeps</target>
        </trans-unit>
        <trans-unit id="10c7238c7bc5ff147e27bc7d06b715e59acb1caa" translate="yes" xml:space="preserve">
          <source>targetexpr</source>
          <target state="translated">targetexpr</target>
        </trans-unit>
        <trans-unit id="4683e789c34cafab560170ca34013a773f2f9773" translate="yes" xml:space="preserve">
          <source>targets</source>
          <target state="translated">targets</target>
        </trans-unit>
        <trans-unit id="0a0102a0644cbb017ac2c679933c3df052fe8ba2" translate="yes" xml:space="preserve">
          <source>targets : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;&amp;gt;</source>
          <target state="translated">目标：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="4a403989e4c2e0e62092cb0deacab316328f84de" translate="yes" xml:space="preserve">
          <source>targets but</source>
          <target state="translated">目标但</target>
        </trans-unit>
        <trans-unit id="7fbb727db4b2b6715b092505673cb5922a0d63a8" translate="yes" xml:space="preserve">
          <source>task</source>
          <target state="translated">task</target>
        </trans-unit>
        <trans-unit id="56041de721987ec6cd083b648e1407e203372aba" translate="yes" xml:space="preserve">
          <source>task menu. Optionally, you can reimplement the &lt;a href=&quot;qdesignertaskmenuextension#preferredEditAction&quot;&gt;preferredEditAction&lt;/a&gt;() function to set the action that is invoked when selecting your plugin and pressing &lt;b&gt;F2&lt;/b&gt;. The preferred edit action must be one of the actions returned by &lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt;() and, if it's not defined, pressing the &lt;b&gt;F2&lt;/b&gt; key will simply be ignored.</source>
          <target state="translated">任务菜单。（可选）您可以重新实现&lt;a href=&quot;qdesignertaskmenuextension#preferredEditAction&quot;&gt;preferredEditAction&lt;/a&gt;（）函数，以设置在选择插件并按&lt;b&gt;F2&lt;/b&gt;时调用的操作。首选的edit动作必须是&lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt;（）返回的动作之一，如果未定义，按&lt;b&gt;F2&lt;/b&gt;键将被忽略。</target>
        </trans-unit>
        <trans-unit id="7c3b3a3f9efbe65f9a9eda33ade477d64c6e42c2" translate="yes" xml:space="preserve">
          <source>tasks : &lt;a href=&quot;qml-qtwinextras-jumplistcategory&quot;&gt;JumpListCategory&lt;/a&gt;</source>
          <target state="translated">任务：&lt;a href=&quot;qml-qtwinextras-jumplistcategory&quot;&gt;JumpListCategory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbce2c364a46f4c8162dfc1f0473ca824a2a2195" translate="yes" xml:space="preserve">
          <source>tb</source>
          <target state="translated">tb</target>
        </trans-unit>
        <trans-unit id="03e06c4b7a097e464b3b18a5314bb6b96855b6c4" translate="yes" xml:space="preserve">
          <source>teal</source>
          <target state="translated">teal</target>
        </trans-unit>
        <trans-unit id="83b9626c1a6906de8c7da7776d8ab47bf62a4d25" translate="yes" xml:space="preserve">
          <source>tearOffEnabled : bool</source>
          <target state="translated">tear-offEnabled:bool</target>
        </trans-unit>
        <trans-unit id="db97104db6868feea37288e94a748cca1f8da719" translate="yes" xml:space="preserve">
          <source>techniques : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qt3d-render-technique&quot;&gt;Technique&lt;/a&gt;&amp;gt;</source>
          <target state="translated">技巧：&lt;a href=&quot;qml-list&quot;&gt;列表&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qt3d-render-technique&quot;&gt;技巧&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="e829581ce522872c6d590e27428fcf8c45f8271f" translate="yes" xml:space="preserve">
          <source>technology preview</source>
          <target state="translated">技术预览</target>
        </trans-unit>
        <trans-unit id="9f453a7c9d6f6b089eb0aa59914855a27129b4c5" translate="yes" xml:space="preserve">
          <source>telling the window system.</source>
          <target state="translated">告诉窗口系统。</target>
        </trans-unit>
        <trans-unit id="84713c17986689d2369124cc90fcd46d5e79e737" translate="yes" xml:space="preserve">
          <source>tells QDoc to accept a matching target only if the traget is on a QML page. Qdoc actually finds the C++ namespace target first, but since that target is on a C++ page, QDoc ignores it and keeps looking until it finds the same target on a QML page.</source>
          <target state="translated">告诉QDoc只有当traget在QML页面上时,才会接受一个匹配的目标。Qdoc实际上是先找到C++命名空间的目标,但由于这个目标在C++页面上,所以QDoc忽略它,继续寻找,直到在QML页面上找到相同的目标。</target>
        </trans-unit>
        <trans-unit id="26661bba34fec2206b603d850891ed88c74646d0" translate="yes" xml:space="preserve">
          <source>tells if the alert was fatal or it was a warning.</source>
          <target state="translated">显示警报是致命的还是警告。</target>
        </trans-unit>
        <trans-unit id="acfa18e421cb131522e7fbe829d49b92e2a4f64b" translate="yes" xml:space="preserve">
          <source>tells qdoc to accept a matching target only if the traget is on a QML page. Qdoc actually finds the C++ namespace target first, but since that target is on a C++ page, qdoc ignores it and keeps looking until it finds the same target on a QML page.</source>
          <target state="translated">告诉qdoc只有当traget在QML页面上时,才会接受一个匹配的目标。qdoc实际上是先找到C++命名空间的目标,但由于这个目标是在C++页面上,所以qdoc忽略它,继续寻找,直到在QML页面上找到相同的目标。</target>
        </trans-unit>
        <trans-unit id="7033e90fcdda169d2f5d08da17507b0c5db52029" translate="yes" xml:space="preserve">
          <source>temperature</source>
          <target state="translated">temperature</target>
        </trans-unit>
        <trans-unit id="68f6c8d7868711562eedb0f6f1bf098954992c50" translate="yes" xml:space="preserve">
          <source>temperature : const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">温度：const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c9c7d18d0218b79e5cc0bdbc6c87f6752ec7740" translate="yes" xml:space="preserve">
          <source>temperature : const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">温度：const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de24882e3c1324c028961bbb7035f0735cb7f7ab" translate="yes" xml:space="preserve">
          <source>temperature : qreal</source>
          <target state="translated">温度:qreal</target>
        </trans-unit>
        <trans-unit id="5039d047a2545466cae5059904748e5b456f9c8f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, float&amp;gt; QMatrix4x4::toGenericMatrix() const</source>
          <target state="translated">模板&amp;lt;int N，int M&amp;gt; &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，float&amp;gt; QMatrix4x4 :: toGenericMatrix（）const</target>
        </trans-unit>
        <trans-unit id="050d61698b9ac03dc4a9039a5a45d438dd8c1a24" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QGenericMatrix&amp;lt;N, M, float&amp;gt; QMatrix4x4::toGenericMatrix()</source>
          <target state="translated">模板&amp;lt;int N，int M&amp;gt; QGenericMatrix &amp;lt;N，M，float&amp;gt; QMatrix4x4 :: toGenericMatrix（）</target>
        </trans-unit>
        <trans-unit id="4aa6783d9ce508828fa9029daf4404df12e5334f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QMatrix4x4::QMatrix4x4()</source>
          <target state="translated">模板&amp;lt;int N，int M&amp;gt; QMatrix4x4 :: QMatrix4x4（）</target>
        </trans-unit>
        <trans-unit id="fa0537af180ead7668f7545495a8133e0e16cc9e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QMatrix4x4::QMatrix4x4(const &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, float&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M&amp;gt; QMatrix4x4 :: QMatrix4x4（const &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，float&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b5c7946b8f333ec1f53e025162fab52c6c2d198b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;gt;&amp;gt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="43c7d789df52832df35ef0c099a1f0494c956c0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="29aad2efbb7a2e25179821a92db26c8ba8a05595" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator*(T</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;运算符*（T</target>
        </trans-unit>
        <trans-unit id="22d8356e68ad461fead4ac8615dfa566ea49f852" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;运算符*（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="6981621593d71033bcba430a0b2ff4c949d88462" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator+(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;运算符+（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="666add4b4efb7b2c4b1336049f4e22adbaae4b30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator-(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;运算符-（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="c6f448d2fb43140de8257eb10cec2ebe4c75af94" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator/(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;运算符/（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2e535c00ea2c0fccdba67d357e225db654a28304" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QDataStream＆operator &amp;gt;&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="c6a2d778aaa06d6af4e4a59d2c44d651b6a432eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QDataStream＆operator &amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="9edd69b3f3c87b851aa3e2c6803798da93d7db2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator*()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QGenericMatrix &amp;lt;N，M，T&amp;gt;运算符*（）</target>
        </trans-unit>
        <trans-unit id="9db156bf8256016d8824a355f5f3530cf217424e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator+()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QGenericMatrix &amp;lt;N，M，T&amp;gt;运算符+（）</target>
        </trans-unit>
        <trans-unit id="f4c079dde42446b0ab99aa97aa2845fc004ca603" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator-()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QGenericMatrix &amp;lt;N，M，T&amp;gt;运算符-（）</target>
        </trans-unit>
        <trans-unit id="f06ccf4ba42b02216efdf1e0d4d02af21106a9db" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator/()</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt; QGenericMatrix &amp;lt;N，M，T&amp;gt;运算符/（）</target>
        </trans-unit>
        <trans-unit id="f0923c125c1fcb667baffb25c15381b1e4ca2001" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; class QGenericMatrix</source>
          <target state="translated">模板&amp;lt;int N，int M，类型名称T&amp;gt;类QGenericMatrix</target>
        </trans-unit>
        <trans-unit id="f5a29a550729d8c42888d99df149ff2d02447ba2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int NN, int M1, int M2, typename TT&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;M1, M2, TT&amp;gt; operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;NN, M2, TT&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;int NN，int M1，int M2，类型名称TT&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;M1，M2，TT&amp;gt;运算符*（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;NN，M2，TT&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="1483d4f941a44074b98cb61619e4191ce3cf2f17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int NN, int M1, int M2, typename TT&amp;gt; QGenericMatrix&amp;lt;M1, M2, TT&amp;gt; operator*()</source>
          <target state="translated">模板&amp;lt;int NN，int M1，int M2，类型名称TT&amp;gt; QGenericMatrix &amp;lt;M1，M2，TT&amp;gt;运算符*（）</target>
        </trans-unit>
        <trans-unit id="e0de2d5892e9a35c1367e680c5373e344130ee6a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;qsizetype N&amp;gt; QRandomGenerator::QRandomGenerator()</source>
          <target state="translated">模板&amp;lt;qsizetype N&amp;gt; QRandomGenerator :: QRandomGenerator（）</target>
        </trans-unit>
        <trans-unit id="75ab6bc676e833343275872d44eaf7945c54062d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;qsizetype N&amp;gt; QRandomGenerator::QRandomGenerator(const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; (&amp;amp;)[N]</source>
          <target state="translated">模板&amp;lt;qsizetype N&amp;gt; QRandomGenerator :: QRandomGenerator（const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;（＆）[N]</target>
        </trans-unit>
        <trans-unit id="fee3d4717af4f43998b8b546b884fb65f5ec9d80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;size_t Size&amp;gt; QByteArrayView::QByteArrayView(const char (&amp;amp;)[Size]</source>
          <target state="translated">模板&amp;lt;size_t大小&amp;gt; QByteArrayView :: QByteArrayView（const char（＆）[Size]</target>
        </trans-unit>
        <trans-unit id="25a4c681c93b38ecb4ec323da3558d83bde9912a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;template &amp;lt;typename&amp;gt; class ApiDefinition, typename ObjectType&amp;gt; bool QRemoteObjectHostBase::enableRemoting()</source>
          <target state="translated">模板&amp;lt;template &amp;lt;typename&amp;gt;类ApiDefinition，类型名ObjectType&amp;gt; bool QRemoteObjectHostBase :: enableRemoting（）</target>
        </trans-unit>
        <trans-unit id="8a79635979c223c54293c24736fb3a981617d88f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;template &amp;lt;typename&amp;gt; class ApiDefinition, typename ObjectType&amp;gt; bool QRemoteObjectHostBase::enableRemoting(ObjectType *</source>
          <target state="translated">template &amp;lt;模板&amp;lt;typename&amp;gt;类ApiDefinition，类型名ObjectType&amp;gt; bool QRemoteObjectHostBase :: enableRemoting（ObjectType *</target>
        </trans-unit>
        <trans-unit id="2bb0e2a486134efe03916530bd985757854ca70c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator!=(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AKey，typename AT&amp;gt; QTypeTraits :: compare_eq_result &amp;lt;AKey，AT&amp;gt;运算符！=（const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="154cfa274e8d944e834d981b5357cbcb85f8b672" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator!=(const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AKey，typename AT&amp;gt; QTypeTraits :: compare_eq_result &amp;lt;AKey，AT&amp;gt;运算符！=（const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="438528e9143584e801ffd20eae066c64c1116b04" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator==(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AKey，typename AT&amp;gt; QTypeTraits :: compare_eq_result &amp;lt;AKey，AT&amp;gt;运算符==（const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b4d194df9bca7de45e49ddbfd4ad74db5996b877" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator==(const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AKey，typename AT&amp;gt; QTypeTraits :: compare_eq_result &amp;lt;AKey，AT&amp;gt;运算符==（const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="9e650c2d82df998ec26fe1798cfb8a4534e4509f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; bool QList::contains(const AT &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AT&amp;gt; bool QList :: contains（const AT＆</target>
        </trans-unit>
        <trans-unit id="0ed3032bca92be78398ac252a83f5a95d73edb2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::count(const AT &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AT&amp;gt; qsizetype QList :: count（const AT＆</target>
        </trans-unit>
        <trans-unit id="2a3b96b36659e9758b82b27f58d30223cc32ec57" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::indexOf(const AT &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AT&amp;gt; qsizetype QList :: indexOf（const AT＆</target>
        </trans-unit>
        <trans-unit id="7cde180e3a1ba6b1ea0403bf8d16cb57f0d660f7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::lastIndexOf(const AT &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename AT&amp;gt; qsizetype QList :: lastIndexOf（const AT＆</target>
        </trans-unit>
        <trans-unit id="50ab48f29809783302f93a117a9b70ee65e440c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface::call(&lt;a href=&quot;qdbus#CallMode-enum&quot;&gt;QDBus::CallMode&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface :: call（&lt;a href=&quot;qdbus#CallMode-enum&quot;&gt;QDBus :: CallMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b884498cd2913af9ab27952d841e9f1f7ef289e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface::call(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface :: call（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="55fe89606fe273242d413f81bd69c30d0aefd989" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbuspendingcall&quot;&gt;QDBusPendingCall&lt;/a&gt; QDBusAbstractInterface::asyncCall(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbuspendingcall&quot;&gt;QDBusPendingCall&lt;/a&gt; QDBusAbstractInterface :: asyncCall（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="793556e87735625a0ae131c4aea81315cbafdfed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::emplace(Key &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: emplace（键&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a73c469470940ce5aeb86e3cae74bb1dffebb67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::emplace(const Key &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: emplace（const键＆</target>
        </trans-unit>
        <trans-unit id="ee0a7d0badf5d3e88f1abc65862deb6edb08cf3a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt; QList::emplace(&lt;a href=&quot;qlist-const-iterator&quot;&gt;QList::const_iterator&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList :: iterator&lt;/a&gt; QList :: emplace（&lt;a href=&quot;qlist-const-iterator&quot;&gt;QList :: const_iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e5f43f10c9d2afb875002a2a784899d18a86983" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt; QList::emplace(qsizetype</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList :: iterator&lt;/a&gt; QList :: emplace（qsizetype</target>
        </trans-unit>
        <trans-unit id="8f6ca5406ca67829c9f8d75ef1cfe9a5fd345692" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplace(Key &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash :: iterator&lt;/a&gt; QMultiHash :: emplace（键&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e584e30f6e3d22e875be47108b89cf67f544a5c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplace(const Key &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash :: iterator&lt;/a&gt; QMultiHash :: emplace（const键＆</target>
        </trans-unit>
        <trans-unit id="00d34c651b7157c86359edd40eed77c4a97428d0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplaceReplace(Key &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash :: iterator&lt;/a&gt; QMultiHash :: emplaceReplace（Key &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c7d246831ca133bd7b82924410056e8893b9aa70" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplaceReplace(const Key &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash :: iterator&lt;/a&gt; QMultiHash :: emplaceReplace（const Key＆</target>
        </trans-unit>
        <trans-unit id="063c34f25786f371ced4bdc197f1f6473436ad7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QLatin1String::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QLatin1String :: arg（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="ffb6b9897d274b902f2566762a7b9ac73c3ccc3f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QStringView::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QStringView :: arg（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="dbbf2ca03c96911996b1ccff5f0fd0e73e6da42e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; QString::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; QString :: arg（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="ea9f8b6521dd9d12d30bcd4f10fe349fe0e9b442" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QDBusMessage QDBusAbstractInterface::call()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QDBusMessage QDBusAbstractInterface :: call（）</target>
        </trans-unit>
        <trans-unit id="82947c829f3bd1adcd3a6a2d2fd06174d578c810" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QDBusPendingCall QDBusAbstractInterface::asyncCall()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QDBusPendingCall QDBusAbstractInterface :: asyncCall（）</target>
        </trans-unit>
        <trans-unit id="ac7d163de91c94d876bd65e4be790778e6bb3d67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QList::reference QList::emplaceBack(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QList :: reference QList :: emplaceBack（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="dfd2332495dbd247964c79c4999f802dbe1fc6d2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QList::reference QList::emplace_back(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QList :: reference QList :: emplace_back（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="52bd941c495697ee7b737400167c16e08d1b1fa0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusRequest::QModbusRequest()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QModbusRequest :: QModbusRequest（）</target>
        </trans-unit>
        <trans-unit id="2a044ba420c55850ef7d20fccf8d3869fd1f6c93" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusRequest::QModbusRequest(&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu::FunctionCode&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QModbusRequest :: QModbusRequest（&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu :: FunctionCode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1664ed61bbfab997c045e688b7697b82549b9f6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusResponse::QModbusResponse()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QModbusResponse :: QModbusResponse（）</target>
        </trans-unit>
        <trans-unit id="1fb149df2b57883c23a88112e4ae04cbb6aab04a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusResponse::QModbusResponse(&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu::FunctionCode&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QModbusResponse :: QModbusResponse（&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu :: FunctionCode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="226ab82e1ef0c135369ce850796b35ea2a1a481c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QSharedPointer&amp;lt;T&amp;gt; QSharedPointer::create()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QSharedPointer &amp;lt;T&amp;gt; QSharedPointer :: create（）</target>
        </trans-unit>
        <trans-unit id="7f2858da9acff25fccb9b57c0c3e6b060aa780ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QLatin1String::arg()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QString QLatin1String :: arg（）</target>
        </trans-unit>
        <trans-unit id="bf29db165262ba11efba8e5f684192814dfe09fb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QString::arg()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QString QString :: arg（）</target>
        </trans-unit>
        <trans-unit id="b4f407100640bf3d4f315fb5043f3fb3be8a67d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QStringView::arg()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; QString QStringView :: arg（）</target>
        </trans-unit>
        <trans-unit id="d377be65c31526fd19f3068dc387e9edcac44493" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::decodeData()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; void QModbusPdu :: decodeData（）</target>
        </trans-unit>
        <trans-unit id="06b8b5a1382d36f2bc9dfc8b4742e2f8a46d989a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::decodeData(Args &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; void QModbusPdu :: decodeData（Args &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="791ccc6ec997f2a8f36fcd6bcb910d366815b802" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::encodeData()</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; void QModbusPdu :: encodeData（）</target>
        </trans-unit>
        <trans-unit id="18cac7cf1c89f23079d46aa74ad518d48266824e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::encodeData(Args...</source>
          <target state="translated">模板&amp;lt;typename Args&amp;gt; void QModbusPdu :: encodeData（Args ...</target>
        </trans-unit>
        <trans-unit id="b17f84c2b96cae01ded4e1f1d720ff4e487e4d6d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Byte&amp;gt; QByteArrayView::QByteArrayView(const Byte *</source>
          <target state="translated">模板&amp;lt;typename Byte&amp;gt; QByteArrayView :: QByteArrayView（const Byte *</target>
        </trans-unit>
        <trans-unit id="64ecfc172d80482210cf393ceab85a835a6db292" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Byte, if_compatible_byte&amp;lt;Byte&amp;gt;&amp;gt; QByteArrayView::QByteArrayView(const Byte *</source>
          <target state="translated">模板&amp;lt;类型名字节，if_compatible_byte &amp;lt;字节&amp;gt;&amp;gt; QByteArrayView :: QByteArrayView（常量字节*</target>
        </trans-unit>
        <trans-unit id="e5fbad995585bd298b0c73adcef3824803f11fc2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QAnyStringView::QAnyStringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char&amp;gt; QAnyStringView :: QAnyStringView（const Char *</target>
        </trans-unit>
        <trans-unit id="890d1f3a1c9162f72dade80362fbc0c095b37020" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QStringView::QStringView()</source>
          <target state="translated">模板&amp;lt;typename Char&amp;gt; QStringView :: QStringView（）</target>
        </trans-unit>
        <trans-unit id="5ad85af4dff4163ef3ef442e0a6bfa7541570a1a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QStringView::QStringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char&amp;gt; QStringView :: QStringView（const Char *</target>
        </trans-unit>
        <trans-unit id="6892884ba484a31ff61cbda027e649e6ae7746ca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QUtf8StringView::QUtf8StringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char&amp;gt; QUtf8StringView :: QUtf8StringView（const Char *</target>
        </trans-unit>
        <trans-unit id="5d06faa06f5111ccf6d061d4c4a03a8ca0f086ea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QAnyStringView::QAnyStringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char，if_compatible_char &amp;lt;Char &amp;gt;&amp;gt; QAnyStringView :: QAnyStringView（const Char *</target>
        </trans-unit>
        <trans-unit id="3b081b96115bacf182c85591b2b991699fd1c83a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QStringView::QStringView()</source>
          <target state="translated">模板&amp;lt;类型名Char，if_compatible_char &amp;lt;Char &amp;gt;&amp;gt; QStringView :: QStringView（）</target>
        </trans-unit>
        <trans-unit id="1557faf9a1d6229f3afadc0df9de81ea716ccbee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QStringView::QStringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char，if_compatible_char &amp;lt;Char &amp;gt;&amp;gt; QStringView :: QStringView（const Char *</target>
        </trans-unit>
        <trans-unit id="c3b4b1bc45eac51e0780d4c6abe17be359e23293" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QUtf8StringView::QUtf8StringView(const Char *</source>
          <target state="translated">模板&amp;lt;typename Char，if_compatible_char &amp;lt;Char &amp;gt;&amp;gt; QUtf8StringView :: QUtf8StringView（const Char *</target>
        </trans-unit>
        <trans-unit id="39906d4879dd7e2224f9ea4153bc4f0e8b9bb9e5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QAnyStringView::QAnyStringView(const Char (&amp;amp;)[N]</source>
          <target state="translated">模板&amp;lt;typename Char，size_t N&amp;gt; QAnyStringView :: QAnyStringView（const Char（＆）[N]</target>
        </trans-unit>
        <trans-unit id="4e633c4a0b02894726b8103762e52754d83a5970" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QStringView::QStringView()</source>
          <target state="translated">模板&amp;lt;typename Char，size_t N&amp;gt; QStringView :: QStringView（）</target>
        </trans-unit>
        <trans-unit id="96c0d3c48ebf088bbb259eb05a9f5a338ddc9598" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QStringView::QStringView(const Char (&amp;amp;)[N]</source>
          <target state="translated">模板&amp;lt;typename Char，size_t N&amp;gt; QStringView :: QStringView（const Char（＆）[N]</target>
        </trans-unit>
        <trans-unit id="cf1f6513c558a57afdbca93f211ac46b06b35d43" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QUtf8StringView::QUtf8StringView(const Char (&amp;amp;)[N]</source>
          <target state="translated">模板&amp;lt;typename Char，size_t N&amp;gt; QUtf8StringView :: QUtf8StringView（const Char（＆）[N]</target>
        </trans-unit>
        <trans-unit id="73152719e6ded9dcc7aec2d332f09c7b9f416684" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Class, typename T, auto Offset, auto Signal&amp;gt; class QObjectBindableProperty</source>
          <target state="translated">template &amp;lt;typename Class，typename T，auto Offset，auto Signal&amp;gt;类QObjectBindableProperty</target>
        </trans-unit>
        <trans-unit id="58770a0fa654b4f1cd630cd346d35bf906d24bee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;＆QDeadlineTimer :: operator =（std :: chrono :: time_point &amp;lt;时钟，持续时间&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c17c1206b374fe86b31a8bfc260c115c63f9f9c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer &amp;amp;QDeadlineTimer::operator=()</source>
          <target state="translated">模板&amp;lt;typename时钟，typename持续时间&amp;gt; QDeadlineTimer＆QDeadlineTimer :: operator =（）</target>
        </trans-unit>
        <trans-unit id="f4d5b9f7416533f425c59c5f8d641b29f1cb316d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer::QDeadlineTimer()</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; QDeadlineTimer :: QDeadlineTimer（）</target>
        </trans-unit>
        <trans-unit id="9d13c35b3864d66207bc9c86a77179d1a0e9ee40" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer::QDeadlineTimer(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; QDeadlineTimer :: QDeadlineTimer（std :: chrono :: time_point &amp;lt;Clock，Duration&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f87fefe3fba5ae44c01d11db20e426292620ea23" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; bool QMutex::try_lock_until()</source>
          <target state="translated">模板&amp;lt;typename时钟，typename持续时间&amp;gt; bool QMutex :: try_lock_until（）</target>
        </trans-unit>
        <trans-unit id="3d193e0ffecef552b529cd30537a23a306e850e3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; bool QMutex::try_lock_until(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; bool QMutex :: try_lock_until（std :: chrono :: time_point &amp;lt;时钟，持续时间&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e436dada4c1d0d1808cda60bd39f5ba47c3bcbb6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; void QDeadlineTimer::setDeadline()</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; void QDeadlineTimer :: setDeadline（）</target>
        </trans-unit>
        <trans-unit id="2a7143c1a296ec343d623e7ca0c50c8a1a653a77" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; void QDeadlineTimer::setDeadline(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">模板&amp;lt;typename Clock，typename Duration&amp;gt; void QDeadlineTimer :: setDeadline（std :: chrono :: time_point &amp;lt;Clock，Duration&amp;gt;</target>
        </trans-unit>
        <trans-unit id="aedea40a039421c2f02d98ed1da99d7b794bb440" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; class QBaseIterator</source>
          <target state="translated">模板&amp;lt;typename Container&amp;gt;类QBaseIterator</target>
        </trans-unit>
        <trans-unit id="0824ec638a644828075b03a5e965a3535bc49d0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; class QIterable</source>
          <target state="translated">template &amp;lt;typename Container&amp;gt;类QIterable</target>
        </trans-unit>
        <trans-unit id="31aabc05dc03b5ce52a09ad7a318ef7e453ab10f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt;::StringResult</source>
          <target state="translated">模板&amp;lt;类型名容器&amp;gt;结构&lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; :: StringResult</target>
        </trans-unit>
        <trans-unit id="5c346f5cd9f1135e13cdf5fd7540564f0acea632" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct QConstIterator</source>
          <target state="translated">模板&amp;lt;类型名容器&amp;gt;结构QConstIterator</target>
        </trans-unit>
        <trans-unit id="77602df4412a7c9a1f1d6cfc4b18fba9e0328556" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct QIterator</source>
          <target state="translated">模板&amp;lt;类型名容器&amp;gt;结构QIterator</target>
        </trans-unit>
        <trans-unit id="34450f59052f25f01fa75dbb1cd1a060c1627bab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; void qDeleteAll()</source>
          <target state="translated">模板&amp;lt;类型名称容器&amp;gt; void qDeleteAll（）</target>
        </trans-unit>
        <trans-unit id="8ce41b8ad881d050f68c5c6f488605afcbe9997f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; voidqDeleteAll(const Container &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Container&amp;gt; voidqDeleteAll（const Container＆</target>
        </trans-unit>
        <trans-unit id="ed85e5291eb48cba2ddac2fa2498dccf6fae0e48" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QByteArrayView::QByteArrayView(const Container &amp;amp;</source>
          <target state="translated">模板&amp;lt;类型名容器，if_compatible_container &amp;lt;容器&amp;gt;&amp;gt; QByteArrayView :: QByteArrayView（const Container＆</target>
        </trans-unit>
        <trans-unit id="80ab9e0b7595c787216eb1ad48278fc0dc871414" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QModelRoleDataSpan::QModelRoleDataSpan(Container &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Container，if_compatible_container &amp;lt;Container &amp;gt;&amp;gt; QModelRoleDataSpan :: QModelRoleDataSpan（Container＆</target>
        </trans-unit>
        <trans-unit id="0130c0a590b2c962534e22427bc4cd29306e0338" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QStringView::QStringView(const Container &amp;amp;</source>
          <target state="translated">模板&amp;lt;类型名容器，if_compatible_container &amp;lt;容器&amp;gt;&amp;gt; QStringView :: QStringView（const Container＆</target>
        </trans-unit>
        <trans-unit id="a0ed4bdad5fbb54b5a18403c2bf7a8c3635c225a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QUtf8StringView::QUtf8StringView(const Container &amp;amp;</source>
          <target state="translated">模板&amp;lt;类型名容器，if_compatible_container &amp;lt;容器&amp;gt;&amp;gt; QUtf8StringView :: QUtf8StringView（const Container＆</target>
        </trans-unit>
        <trans-unit id="d7afab277d0390c012d8a2873271bc6850b54d88" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename D, if_same_type&amp;lt;D&amp;gt;&amp;gt; QScopedArrayPointer::QScopedArrayPointer()</source>
          <target state="translated">模板&amp;lt;类型名D，if_same_type &amp;lt;D &amp;gt;&amp;gt; QScopedArrayPointer :: QScopedArrayPointer（）</target>
        </trans-unit>
        <trans-unit id="91cd1d6a48e77b7d586d9bc997f93904840575ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename D, if_same_type&amp;lt;D&amp;gt;&amp;gt; QScopedArrayPointer::QScopedArrayPointer(D *</source>
          <target state="translated">模板&amp;lt;typename D，if_same_type &amp;lt;D &amp;gt;&amp;gt; QScopedArrayPointer :: QScopedArrayPointer（D *</target>
        </trans-unit>
        <trans-unit id="6c78eef2624721413531b270a40fd1bad4353409" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; QSharedPointer::QSharedPointer(</source>
          <target state="translated">模板&amp;lt;类型名称删除器&amp;gt; QSharedPointer :: QSharedPointer（</target>
        </trans-unit>
        <trans-unit id="e42a9082344360571381c7cfdbd4d02c2479630d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; QSharedPointer::QSharedPointer()</source>
          <target state="translated">模板&amp;lt;类型名称删除器&amp;gt; QSharedPointer :: QSharedPointer（）</target>
        </trans-unit>
        <trans-unit id="568b2158ca5b473b9d34fe424087b88b9bb3db6a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; void QSharedPointer::reset()</source>
          <target state="translated">模板&amp;lt;类型名称删除器&amp;gt; void QSharedPointer :: reset（）</target>
        </trans-unit>
        <trans-unit id="c837291b68385937bcd8b255b0d633ac399d14b0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; void QSharedPointer::reset(T *</source>
          <target state="translated">模板&amp;lt;类型名称删除器&amp;gt; void QSharedPointer :: reset（T *</target>
        </trans-unit>
        <trans-unit id="c7555d61e67f2decc6549b3c37f9088a18c8db98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename DerivedType&amp;gt; QQmlPropertyMap::QQmlPropertyMap()</source>
          <target state="translated">模板&amp;lt;typename DerivedType&amp;gt; QQmlPropertyMap :: QQmlPropertyMap（）</target>
        </trans-unit>
        <trans-unit id="539b271b26aa800fce101f3bfecc7abd583b7e4c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Enum&amp;gt; class QFlags</source>
          <target state="translated">模板&amp;lt;typename Enum&amp;gt;类QFlags</target>
        </trans-unit>
        <trans-unit id="2ebe51e9faf7b84587aed98a67d0eaa083de52db" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ExtraArgs&amp;gt; &lt;a href=&quot;qtconcurrent-qtaskbuilder&quot;&gt;QTaskBuilder&lt;/a&gt;&amp;lt;Task, ExtraArgs...&amp;gt; QTaskBuilder::withArguments(ExtraArgs &amp;amp;&amp;amp;...</source>
          <target state="translated">模板&amp;lt;typename ExtraArgs&amp;gt; &lt;a href=&quot;qtconcurrent-qtaskbuilder&quot;&gt;QTaskBuilder&lt;/a&gt; &amp;lt;Task，ExtraArgs ...&amp;gt; QTaskBuilder :: withArguments（ExtraArgs &amp;amp;&amp;amp; ...</target>
        </trans-unit>
        <trans-unit id="56b9a9261481ff83d9856997dad0a1db5c11822d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; &lt;a href=&quot;qscopeguard#QScopeGuard&quot;&gt;QScopeGuard&lt;/a&gt;&amp;lt;typenamestd::decay&amp;lt;F&amp;gt;::type&amp;gt; qScopeGuard(F &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename F&amp;gt; &lt;a href=&quot;qscopeguard#QScopeGuard&quot;&gt;QScopeGuard&lt;/a&gt; &amp;lt;typenamestd :: decay &amp;lt;F&amp;gt; :: type&amp;gt; qScopeGuard（F &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="a596b3346e94411da003c92dcfb036f3a9d677c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; QScopeGuard&amp;lt;typename std::decay&amp;lt;F&amp;gt;::type&amp;gt; qScopeGuard()</source>
          <target state="translated">模板&amp;lt;typename F&amp;gt; QScopeGuard &amp;lt;typename std :: decay &amp;lt;F&amp;gt; :: type&amp;gt; qScopeGuard（）</target>
        </trans-unit>
        <trans-unit id="acf3ca8fde3c0971fb50379c6ef046ae520317af" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; class QScopeGuard</source>
          <target state="translated">模板&amp;lt;typename F&amp;gt;类QScopeGuard</target>
        </trans-unit>
        <trans-unit id="51131ca9e3aaf555651bb18379f4acdce6b7d71d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator::generate()</source>
          <target state="translated">模板&amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator :: generate（）</target>
        </trans-unit>
        <trans-unit id="1a16c592ff6d9a90900521abed0f2f92bd8ac4cc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator::generate(ForwardIterator</source>
          <target state="translated">模板&amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator :: generate（ForwardIterator</target>
        </trans-unit>
        <trans-unit id="82a1c965b06d7986e8cc45e9ebf1ebc1fd6e3112" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void qDeleteAll()</source>
          <target state="translated">模板&amp;lt;typename ForwardIterator&amp;gt; void qDeleteAll（）</target>
        </trans-unit>
        <trans-unit id="b02f63f24ae15476e38e97a5e92ac08d22f3dd36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; voidqDeleteAll(ForwardIterator</source>
          <target state="translated">模板&amp;lt;typename ForwardIterator&amp;gt; voidqDeleteAll（ForwardIterator</target>
        </trans-unit>
        <trans-unit id="387868d9220016bc66355bdd65b4b9c10c440f35" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename From, typename To&amp;gt; bool QMetaType::hasRegisteredConverterFunction()</source>
          <target state="translated">模板&amp;lt;typename From，typename To&amp;gt; bool QMetaType :: hasRegisteredConverterFunction（）</target>
        </trans-unit>
        <trans-unit id="b41f7c527e1309d2bf5da5f27cfc8af2ae1015b7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename From, typename To&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="translated">模板&amp;lt;typename From，typename To&amp;gt; bool QMetaType :: registerConverter（）</target>
        </trans-unit>
        <trans-unit id="cbc3c83355317b86ed96ca2289d34ac0f74fa219" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Frontend&amp;gt; void Qt3DCore::registerBackendType()</source>
          <target state="translated">模板&amp;lt;typename Frontend&amp;gt; void Qt3DCore :: registerBackendType（）</target>
        </trans-unit>
        <trans-unit id="5a6176d9d26cd6c9b49af0f7343e13c4d62afaca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Function&amp;gt; QThread *QThread::create()</source>
          <target state="translated">模板&amp;lt;类型名称功能&amp;gt; QThread * QThread :: create（）</target>
        </trans-unit>
        <trans-unit id="627cd08c71e468c27141bae1ef4ca59662513af4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Function, typename Args&amp;gt; QThread *QThread::create()</source>
          <target state="translated">模板&amp;lt;typename函数，类型名Args&amp;gt; QThread * QThread :: create（）</target>
        </trans-unit>
        <trans-unit id="ed9adbf0defb8d923df100bc3ce62910ab438957" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addAction（const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a576e3c8a255d9d2261f376cf9aade3597d045d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addAction（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f4a7a84d6fdf805c1a1d67349be15b1743f48a69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: addAction（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="36a7c02da3c20f9da9c8918a2fbf92951d6197ef" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * &lt;a href=&quot;qicon&quot;&gt;QToolBar&lt;/a&gt; :: addAction（const QIcon＆</target>
        </trans-unit>
        <trans-unit id="457c503d8f3ee42091144e58fc80d29e15d09701" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: addAction（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="49a3eb4f723216b59125c2c5b14b4387af836bd6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; QTimer :: callOnTimeout（Functor</target>
        </trans-unit>
        <trans-unit id="3ae87ed68df940f3615f4d6c72bf6d22a0d0dc3c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; QTimer :: callOnTimeout（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="366b15ae4c0e24326d26136c2996a4616a015f91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QObjectBindableProperty::onValueChanged(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QObjectBindableProperty :: onValueChanged（Functor</target>
        </trans-unit>
        <trans-unit id="82906baab2cadeaaf357e11959763b858e5cbe3b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QObjectBindableProperty::subscribe(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QObjectBindableProperty :: subscribe（Functor</target>
        </trans-unit>
        <trans-unit id="4ab635cf80dc2928982197c8af96895e6e0ff046" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QProperty::onValueChanged(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QProperty :: onValueChanged（Functor</target>
        </trans-unit>
        <trans-unit id="1b1f75f07c3a25e54c785d6a740e7b864eaf2725" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QProperty::subscribe(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QProperty :: subscribe（Functor</target>
        </trans-unit>
        <trans-unit id="10307811244084570808da28f750cb24af2878c3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QPropertyAlias::onValueChanged(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QPropertyAlias :: onValueChanged（Functor</target>
        </trans-unit>
        <trans-unit id="30590881cd540f30dcf2c33f23d789d05ffd0ab7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QPropertyAlias::subscribe(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt; &amp;lt;Functor&amp;gt; QPropertyAlias :: subscribe（Functor</target>
        </trans-unit>
        <trans-unit id="b3b0f69e4392aae026e7b11286bae3adcee43c95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QMenu::addAction()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QAction * QMenu :: addAction（）</target>
        </trans-unit>
        <trans-unit id="cd6f5f5a9ac14b2ddd93c46596b341c9292bc5bf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QMenuBar::addAction()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QAction * QMenuBar :: addAction（）</target>
        </trans-unit>
        <trans-unit id="db6f00768353e1297b65d05efd824703f79678bc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QToolBar::addAction()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QAction * QToolBar :: addAction（）</target>
        </trans-unit>
        <trans-unit id="8407552d36627742d1694ddbf8940cf71f5fda7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QMetaObject::Connection QTimer::callOnTimeout()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QMetaObject :: Connection QTimer :: callOnTimeout（）</target>
        </trans-unit>
        <trans-unit id="b229faca268779f2ff036b6f4718f54b23e4ed8a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QObjectBindableProperty::QObjectBindableProperty(Functor &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QObjectBindableProperty :: QObjectBindableProperty（Functor &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1ff6bb35b0437b7a7c2c97630ab76e03cb096c7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QProperty::QProperty(Functor &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QProperty :: QProperty（Functor &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1abcd299b31f05f8d0f94e01e2aed1369807514c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QObjectBindableProperty::setBinding(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QPropertyBinding &amp;lt;T&amp;gt; QObjectBindableProperty :: setBinding（Functor</target>
        </trans-unit>
        <trans-unit id="b048dab887f7b572299c039acfe06128efd09a09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QProperty::setBinding(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QPropertyBinding &amp;lt;T&amp;gt; QProperty :: setBinding（Functor</target>
        </trans-unit>
        <trans-unit id="562eba0908c3ba65c290cb6a94e3d7ed7e5f19ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QPropertyAlias::setBinding(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; QPropertyBinding &amp;lt;T&amp;gt; QPropertyAlias :: setBinding（Functor</target>
        </trans-unit>
        <trans-unit id="93a6efa509c1a601a52c9f9c090809dc7f939f6d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; bool QTest::qWaitFor()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; bool QTest :: qWaitFor（）</target>
        </trans-unit>
        <trans-unit id="18ffd51555055462e90c9c6364e55053dae59fa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; bool QTest::qWaitFor(Functor</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; bool QTest :: qWaitFor（Functor</target>
        </trans-unit>
        <trans-unit id="e1f4f39f48b0c3c9972b6dade16cb0e4d96868d0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; class QPropertyChangeHandler</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt;类QPropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="520717d72d4fbd51beb063f8b6cbedbe60a316c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; int QHostInfo::lookupHost()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; int QHostInfo :: lookupHost（）</target>
        </trans-unit>
        <trans-unit id="6a5169524ebc767dbe0c0ef78a85d2954e8f8e75" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; std::function&amp;lt;void ()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; std :: function &amp;lt;void（）</target>
        </trans-unit>
        <trans-unit id="d0e1f0e59b64af6fa26fd714d7d59d3e31b1970c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typename QtPrivate::QEnableIf&amp;lt;!QtPrivate::FunctionPointer&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, QMetaObject::Connection&amp;gt;::Type QScxmlStateMachine::connectToEvent()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt;类型名QtPrivate :: QEnableIf &amp;lt;！QtPrivate :: FunctionPointer &amp;lt;Functor&amp;gt; :: IsPointerToMemberFunction &amp;amp;&amp;amp;！std :: is_same &amp;lt;const char *，Functor&amp;gt; :: value，QMetaObject :: Connection&amp;gt; :: Type QScxmlStateMachine ::: connectToEvent（）</target>
        </trans-unit>
        <trans-unit id="5f2e04bc44efed56caf6550c5fb8cbe5307d57f4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typename QtPrivate::QEnableIf&amp;lt;!QtPrivate::FunctionPointer&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, QMetaObject::Connection&amp;gt;::Type QScxmlStateMachine::connectToState()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt;类型名QtPrivate :: QEnableIf &amp;lt;！QtPrivate :: FunctionPointer &amp;lt;Functor&amp;gt; :: IsPointerToMemberFunction &amp;amp;&amp;amp;！std :: is_same &amp;lt;const char *，Functor&amp;gt; :: value，QMetaObject :: Connection&amp;gt; :: Type QScxmlStateMachine ::: connectToState（）</target>
        </trans-unit>
        <trans-unit id="4db16f32731566df4ff7b002afbfb0aa13b6d21f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typenameQtPrivate::QEnableIf&amp;lt;!&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate::FunctionPointer&lt;/a&gt;&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt;&amp;gt;::Type QScxmlStateMachine::connectToEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; typenameQtPrivate :: QEnableIf &amp;lt;！&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate :: FunctionPointer&lt;/a&gt; &amp;lt;Functor&amp;gt; :: IsPointerToMemberFunction &amp;amp;&amp;amp;！std :: is_same &amp;lt;const char *，Functor&amp;gt; :: value，&lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; &amp;gt; :: Type QScxmlStateMachine :: connectToEvent（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="49c0c6bbb032713963c0b5383a5cbfe871c44713" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typenameQtPrivate::QEnableIf&amp;lt;!&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate::FunctionPointer&lt;/a&gt;&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt;&amp;gt;::Type QScxmlStateMachine::connectToState(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; typenameQtPrivate :: QEnableIf &amp;lt;！&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate :: FunctionPointer&lt;/a&gt; &amp;lt;Functor&amp;gt; :: IsPointerToMemberFunction &amp;amp;&amp;amp;！std :: is_same &amp;lt;const char *，Functor&amp;gt; :: value，&lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; &amp;gt; :: Type QScxmlStateMachine :: connectToState（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="607c7435805938e17a963271407d37b8706e169a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; void QTimer::singleShot()</source>
          <target state="translated">模板&amp;lt;typename Functor&amp;gt; void QTimer :: singleShot（）</target>
        </trans-unit>
        <trans-unit id="6b174ca292913fb3d1029b29830aa1ea71619c09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor, int&amp;gt; void QTimer::singleShot()</source>
          <target state="translated">模板&amp;lt;typename Functor，int&amp;gt; void QTimer :: singleShot（）</target>
        </trans-unit>
        <trans-unit id="5d4110ca34675df9a01aa22dd7293a47ab6328f6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor, typename FunctorReturnType&amp;gt; bool QMetaObject::invokeMethod()</source>
          <target state="translated">模板&amp;lt;typename Functor，typename FunctorReturnType&amp;gt; bool QMetaObject :: invokeMethod（）</target>
        </trans-unit>
        <trans-unit id="e0f621e5cdcc441eac34c8a29ec7673f008765e8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Haystack, typename Needle&amp;gt; class QStringTokenizer</source>
          <target state="translated">模板&amp;lt;typename Haystack，typename Needle&amp;gt;类QStringTokenizer</target>
        </trans-unit>
        <trans-unit id="491915a892db30a032d82e69f50f4288870b98d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHashRange(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHashRange（InputIterator</target>
        </trans-unit>
        <trans-unit id="fd9ea9444de481d9fd47defa134ebd4b1280bef6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHashRangeCommutative(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHashRangeCommutative（InputIterator</target>
        </trans-unit>
        <trans-unit id="0119fde99de5ec9906328b68f0d02d5dac20a626" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QHash::QHash()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QHash :: QHash（）</target>
        </trans-unit>
        <trans-unit id="eb5b886aec2039762e064bde2df466a2ad89af99" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QHash::QHash(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QHash :: QHash（InputIterator</target>
        </trans-unit>
        <trans-unit id="1678cf225675fb3937292c990616c81b487972b7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QLinkedList::QLinkedList()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QLinkedList :: QLinkedList（）</target>
        </trans-unit>
        <trans-unit id="b507d8e272ec8a4c11da70ece68de6426ef5bd42" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QLinkedList::QLinkedList(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QLinkedList :: QLinkedList（InputIterator</target>
        </trans-unit>
        <trans-unit id="9321f424f58121f96b539e66c118927a6bf081fc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QList::QList()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QList :: QList（）</target>
        </trans-unit>
        <trans-unit id="15bd8e6146cd61ef8ca5493fd54663e2d6046501" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QList::QList(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QList :: QList（InputIterator</target>
        </trans-unit>
        <trans-unit id="f173622de8fa5bb598df962a12a0b548711c7c14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QMultiHash::QMultiHash()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QMultiHash :: QMultiHash（）</target>
        </trans-unit>
        <trans-unit id="d0da03e1d1793ef0f2eed5549ee67dc9cb619160" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QMultiHash::QMultiHash(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QMultiHash :: QMultiHash（InputIterator</target>
        </trans-unit>
        <trans-unit id="c1319b726a2206fb0d757e1c4a4b7ad30c69d927" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QSet::QSet()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QSet :: QSet（）</target>
        </trans-unit>
        <trans-unit id="1068dfa4ce2e506d58b58cb2f557fe9b10bc32ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QSet::QSet(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QSet :: QSet（InputIterator</target>
        </trans-unit>
        <trans-unit id="f9d2d89f924414dbff30cb7e25783082ec6ee873" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QStringList::QStringList()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QStringList :: QStringList（）</target>
        </trans-unit>
        <trans-unit id="e43649d68101f7a3d7a3e5b7ff6cef05c764ce4f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QStringList::QStringList(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QStringList :: QStringList（InputIterator</target>
        </trans-unit>
        <trans-unit id="7f52bc38c1d5e1dc96350bcc4def09262e71a5c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVarLengthArray::QVarLengthArray()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QVarLengthArray :: QVarLengthArray（）</target>
        </trans-unit>
        <trans-unit id="b939af78f71b47d3b522fac77047ac665188eae3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVarLengthArray::QVarLengthArray(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QVarLengthArray :: QVarLengthArray（InputIterator</target>
        </trans-unit>
        <trans-unit id="fff803094e056889c03eae49eb66dce66e8bcb4f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVector::QVector()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QVector :: QVector（）</target>
        </trans-unit>
        <trans-unit id="d5b99c0eeef7597ae243f5554da7e525e837b23a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVector::QVector(InputIterator</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; QVector :: QVector（InputIterator</target>
        </trans-unit>
        <trans-unit id="df5a2871c574aec64828860d11315fc857d2d08e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; uint qHashRange()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; uint qHashRange（）</target>
        </trans-unit>
        <trans-unit id="514c7d051064701cc2d37f8ad435e43243477220" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; uint qHashRangeCommutative()</source>
          <target state="translated">模板&amp;lt;typename InputIterator&amp;gt; uint qHashRangeCommutative（）</target>
        </trans-unit>
        <trans-unit id="ae85db948e692b98da48768f2f3de07e6543862a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Integer, if_valid_value_type&amp;lt;Integer&amp;gt;&amp;gt; Integer QTypeRevision::toEncodedVersion() const</source>
          <target state="translated">模板&amp;lt;typename整数，if_valid_value_type &amp;lt;Integer &amp;gt;&amp;gt;整数QTypeRevision :: toEncodedVersion（）const</target>
        </trans-unit>
        <trans-unit id="84e900dd0194a8bf38da78afd1469aa52d8857fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename IteratorCategory&amp;gt; class QTaggedIterator</source>
          <target state="translated">template &amp;lt;typename Iterator，typename IteratorCategory&amp;gt;类QTaggedIterator</target>
        </trans-unit>
        <trans-unit id="5993da7f0ff83388b15a3a22bc6ca875bc61d7aa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameqValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameqValueType &amp;lt;Iterator&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dfbe9a5bbed3627e14441bce9d96cdde798ff5fe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameqValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(Iterator</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameqValueType &amp;lt;Iterator&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（Iterator</target>
        </trans-unit>
        <trans-unit id="337d59750983d3292eb08eecb4e0ab6602c1569e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; QFuture&amp;lt;typename qValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered()</source>
          <target state="translated">模板&amp;lt;类型名迭代器，类型名KeepFunctor&amp;gt; QFuture &amp;lt;类型名qValueType &amp;lt;Iterator&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（）</target>
        </trans-unit>
        <trans-unit id="20bd95d2aa2fc06b5d9d6ec6c6331ebe5f9b941e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Iterator, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;QtPrivate :: MapResultType &amp;lt;Iterator，MapFunctor&amp;gt;&amp;gt; QtConcurrent :: mapped（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8d5c427a67b7a28902d2399f8016702dbf33b14b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Iterator, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(Iterator</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;QtPrivate :: MapResultType &amp;lt;Iterator，MapFunctor&amp;gt;&amp;gt; QtConcurrent :: mapped（Iterator</target>
        </trans-unit>
        <trans-unit id="15decf5c7c9f6048183cb54507c7e1fa323b5c30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(Iterator</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameQtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（Iterator</target>
        </trans-unit>
        <trans-unit id="d1d13349f9160c15bea87014461fff536b839e52" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename迭代器，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b39c97cae54650b66f2c8ae08eb642a40fe73405" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Iterator</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（Iterator</target>
        </trans-unit>
        <trans-unit id="a922079d1ef7650f8d5e7ebdf5eae2928dad3545" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; QFuture&amp;lt;typename QtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped()</source>
          <target state="translated">模板&amp;lt;类型名称迭代器，类型名称MapFunctor&amp;gt; QFuture &amp;lt;类型名称QtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（）</target>
        </trans-unit>
        <trans-unit id="40599f6cce4e93991f4ef476dc45342890c8c0bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::map()</source>
          <target state="translated">模板&amp;lt;类型名称迭代器，类型名称MapFunctor&amp;gt; QFuture &amp;lt;void&amp;gt; QtConcurrent :: map（）</target>
        </trans-unit>
        <trans-unit id="bfc7edea9f0c9324b017f577c42dd38458a9f522" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap()</source>
          <target state="translated">模板&amp;lt;typename迭代器，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（）</target>
        </trans-unit>
        <trans-unit id="068135d9270034518dea2937d1aa642189f4b5f2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1a00c2ee9918148821b628692a96df9bca6bb69f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Iterator</source>
          <target state="translated">模板&amp;lt;typename Iterator，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（Iterator</target>
        </trans-unit>
        <trans-unit id="2673cb44894f5ff57acf398ae01f9e77121a1de7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;gt;&amp;gt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="44b45c9f7ae992a6f0f516cfff17c6e5bb165ba3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d41442a1ae98989f3f65eb9063310be096af73ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="918490247d2d3f42d727cb0dc7a557f3df08cf2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="6c82cea0ab478f1bbf169f015ea5f9df204d97bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qmultihash#QMultiHash&quot;&gt;QMultiHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const &lt;a href=&quot;qmultihash#QMultiHash&quot;&gt;QMultiHash&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="4fbb106e5b29b3cd6cecf1586cf246c4acedc8c0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="translated">模板&amp;lt;typename键，typename T&amp;gt; QDataStream＆operator &amp;gt;&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="45fee8b07b91844a7acb58199bee9c2fa552dd20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; QDataStream＆operator &amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="0297e0a421670b90d56716125c905e2da9113966" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStreamIfHasIStreamOperators&amp;lt;Key, T&amp;gt; operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename密钥，类型名称T&amp;gt; QDataStreamIfHasIStreamOperators &amp;lt;Key，T&amp;gt;运算符&amp;gt;&amp;gt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="abc90d886ae88d13d9e4431f29e7a88b9f80bb43" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStreamIfHasOStreamOperators&amp;lt;Key, T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt; QDataStreamIfHasOStreamOperators &amp;lt;Key，T&amp;gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="978770a25ac815aab0841a997d5bcdde77d725ae" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; QDebug运算符&amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="fb8fc48fac18526be6c74cc225631743c6035383" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDebugIfHasDebugStream&amp;lt;Key, T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename Key，typename T&amp;gt; QDebugIfHasDebugStream &amp;lt;Key，T&amp;gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9ee5313e51a8e8f2a5de93c948ca9c7d63b2327" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QCache</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QCache</target>
        </trans-unit>
        <trans-unit id="83f7daa501a6dd7383b6704d1d573786ca3f428f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QHash</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QHash</target>
        </trans-unit>
        <trans-unit id="277321d4246d689f719e94d397f299df3f5e2e33" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QHashIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QHashIterator</target>
        </trans-unit>
        <trans-unit id="99b48fdcbce3e38171836c26fbce659259787c52" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMap</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMap</target>
        </trans-unit>
        <trans-unit id="82379a57e2e825a832c021d652c6ae56219bb0fc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMapIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMapIterator</target>
        </trans-unit>
        <trans-unit id="c4750d20d7b5d932d331cc3c1bddd8df642ddb69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiHash</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMultiHash</target>
        </trans-unit>
        <trans-unit id="f47afbc27991c36aa7a63e4abf35c4905e494097" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiMap</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMultiMap</target>
        </trans-unit>
        <trans-unit id="50a9fe8953b1d332d600916d59c40731b9e05558" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiMapIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMultiMapIterator</target>
        </trans-unit>
        <trans-unit id="2db1e5eff4a95ce996e85cdb183024bb64082e6f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableHashIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMutableHashIterator</target>
        </trans-unit>
        <trans-unit id="33661e4a4841e402a3f7ab90671f451aeca92bd4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableMapIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMutableMapIterator</target>
        </trans-unit>
        <trans-unit id="f8716c287ecbddc052ccef4dea0290c7ef67797a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableMultiMapIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T&amp;gt;类QMutableMultiMapIterator</target>
        </trans-unit>
        <trans-unit id="075ce2948e6b732c0e4c828cc742f520320dc09a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; uint qHash()</source>
          <target state="translated">模板&amp;lt;typename密钥，typename T&amp;gt; uint qHash（）</target>
        </trans-unit>
        <trans-unit id="0bd23ea38fc55b5a143a80493e5966a280721270" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Compare, typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">template &amp;lt;typename键，typename T，typename比较，typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c04856b1b81dbfab23352394a1cf8758a4e3c3ad" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Compare, typename Alloc&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="translated">template &amp;lt;typename键，typename T，typename比较，typename Alloc&amp;gt; QDebug运算符&amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="b394aa799dcc85727c3f06e3eba0770a54a27a5d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Iterator&amp;gt; class QKeyValueIterator</source>
          <target state="translated">template &amp;lt;typename Key，typename T，typename Iterator&amp;gt;类QKeyValueIterator</target>
        </trans-unit>
        <trans-unit id="514fe6fdbdb4d7b4bc25540cb66bd657729c4781" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename LContainer&amp;gt; LContainer QStringTokenizer::toContainer(LContainer &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename LContainer&amp;gt; LContainer QStringTokenizer :: toContainer（LContainer &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1164f23488cd6bc76099afdbd99920b269a131d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename MemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; QTimer :: callOnTimeout（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="38651a8579ef28a7a19f64170a821d467500f236" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction&amp;gt; QMetaObject::Connection QTimer::callOnTimeout()</source>
          <target state="translated">模板&amp;lt;typename MemberFunction&amp;gt; QMetaObject :: Connection QTimer :: callOnTimeout（）</target>
        </trans-unit>
        <trans-unit id="a0c3286625da2a7be9f33cbba569592e06e7d11f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction, int&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="translated">模板&amp;lt;typename MemberFunction，int&amp;gt; bool QMetaType :: registerConverter（）</target>
        </trans-unit>
        <trans-unit id="7c16b56d0704a6edbb51bd892f287b13e80e35ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunctionOk, char&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="translated">模板&amp;lt;typename MemberFunctionOk，char&amp;gt; bool QMetaType :: registerConverter（）</target>
        </trans-unit>
        <trans-unit id="7aa0cb78a5041c774b19d58e939c565c34d53615" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Mutex&amp;gt; class QMutexLocker</source>
          <target state="translated">模板&amp;lt;typename Mutex&amp;gt;类QMutexLocker</target>
        </trans-unit>
        <trans-unit id="16e52af093e30c4db94353c11bd2ee70b1ba86aa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QLatin1String::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename针，typename标志&amp;gt; decltype（&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;（* this，std :: forward &amp;lt;Needle&amp;gt;（needle），flags ...））QLatin1String :: tokenize（Needle &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="59b947007f60a04a25fb3df9eb18ec72b5451bf8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QString::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename针，typename标志&amp;gt; decltype（&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;（* this，std :: forward &amp;lt;Needle&amp;gt;（needle），flags ...））QString :: tokenize（Needle &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="9c99aec38db86409eaefa964e4c3f37f8790ad31" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QStringView::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename针，typename标志&amp;gt; decltype（&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;（* this，std :: forward &amp;lt;Needle&amp;gt;（needle），flags ...））QStringView :: tokenize（Needle &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1fb232543a107992aef506e8871d6da55f26e943" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(std::move(*this), std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QString::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename针，typename标志&amp;gt; decltype（&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;（std :: move（* this），std :: forward &amp;lt;Needle&amp;gt;（needle），flags ...））QString :: tokenize（Needle &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="2e6b35af5846b241f4a1ba9fc1ae5c1adf5ef4bf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Obj, typename PointerToMemberFunctionOrFunctor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Obj，typename PointerToMemberFunctionOrFunctor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: addAction（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9cff534f1fd4fad526d686d0f73fe95ee94b728f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Obj, typename PointerToMemberFunctionOrFunctor&amp;gt; QAction *QMenuBar::addAction()</source>
          <target state="translated">模板&amp;lt;typename Obj，typename PointerToMemberFunctionOrFunctor&amp;gt; QAction * QMenuBar :: addAction（）</target>
        </trans-unit>
        <trans-unit id="69ae47b09723c8e16a77721c4c7fe41b0ed6c572" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ObjectType&amp;gt; ObjectType *QRemoteObjectNode::acquire()</source>
          <target state="translated">模板&amp;lt;typename ObjectType&amp;gt; ObjectType * QRemoteObjectNode :: acquire（）</target>
        </trans-unit>
        <trans-unit id="2a872600824a1be7b5c7d479d66deb18f1691000" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ObjectType&amp;gt; ObjectType *QRemoteObjectNode::acquire(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ObjectType&amp;gt; ObjectType * QRemoteObjectNode :: acquire（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3c3703c6bc919cc3f96c0d4c8b30740bfbb9714e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped()</source>
          <target state="translated">模板&amp;lt;类型名OutputSequence，类型名InputSequence，类型名MapFunctor&amp;gt;输出序列QtConcurrent :: blockingMapped（）</target>
        </trans-unit>
        <trans-unit id="caf3d22b054748a3e41062669dac8743403fa881" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;类型名OutputSequence，类型名InputSequence，类型名MapFunctor&amp;gt;输出序列QtConcurrent :: blockingMapped（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6d8086d6393ebd7a79d24726705283083782dbea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(InputSequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename OutputSequence，typename InputSequence，typename MapFunctor&amp;gt; OutputSequence QtConcurrent :: blockingMapped（InputSequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="84164bbc1b281d84eff8affd1a0128540e39e8c7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(const InputSequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename OutputSequence，typename InputSequence，typename MapFunctor&amp;gt; OutputSequence QtConcurrent :: blockingMapped（const InputSequence＆</target>
        </trans-unit>
        <trans-unit id="0e25e3e384eb765dc1dc52b11144b2c122a46939" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered()</source>
          <target state="translated">模板&amp;lt;类型名OutputSequence，类型名迭代器，类型名KeepFunctor&amp;gt;输出序列QtConcurrent :: blockingFiltered（）</target>
        </trans-unit>
        <trans-unit id="aa9eb44981b79c153b0ad7e8c3621248df98e0f7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;类型名OutputSequence，类型名迭代器，类型名KeepFunctor&amp;gt;输出序列QtConcurrent :: blockingFiltered（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6c827154469f410b50393c0fdd98d14dc2eea689" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered(Iterator</source>
          <target state="translated">模板&amp;lt;typename OutputSequence，typename迭代器，typename KeepFunctor&amp;gt; OutputSequence QtConcurrent :: blockingFiltered（Iterator</target>
        </trans-unit>
        <trans-unit id="e2132e651162132aba4bc963f679c554279a7baa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Pointer&amp;gt; class QVariantPointer</source>
          <target state="translated">模板&amp;lt;typename Pointer&amp;gt;类QVariantPointer</target>
        </trans-unit>
        <trans-unit id="6c692aeabb20de6f710c765b83eb833b2f1bc952" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Pointer&amp;gt; class QVariantRef</source>
          <target state="translated">模板&amp;lt;typename Pointer&amp;gt;类QVariantRef</target>
        </trans-unit>
        <trans-unit id="02a75539b89f8a50455fd8ecbc2ac331ddcf4646" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QScxmlStateMachine::connectToEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; QScxmlStateMachine :: connectToEvent（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="13ba36c91ab6501ab5d2551fbeddb533d22ef1bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QScxmlStateMachine::connectToState(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject :: Connection&lt;/a&gt; QScxmlStateMachine :: connectToState（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="96333923251533613d596aa9b51fa4b39efd485d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; *QState::addTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; * QState :: addTransition（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eec92e59412f3fb5d68a55596980955400f1026d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaMethod QMetaMethod::fromSignal()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QMetaMethod QMetaMethod :: fromSignal（）</target>
        </trans-unit>
        <trans-unit id="5c2753789141f93ec9c46c78e8d224a0bed36bb2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QObject::connect()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject :: Connection QObject :: connect（）</target>
        </trans-unit>
        <trans-unit id="9fe109373018decb96882fae3d3bd4d9392f14dc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QScxmlStateMachine::connectToEvent()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject :: Connection QScxmlStateMachine :: connectToEvent（）</target>
        </trans-unit>
        <trans-unit id="d7174853edbf32b5e41a2048567c25457db3edff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QScxmlStateMachine::connectToState()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject :: Connection QScxmlStateMachine :: connectToState（）</target>
        </trans-unit>
        <trans-unit id="d1ae1b7158733173fbfc47bfd1a32296d3edc12c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy::QSignalSpy()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy :: QSignalSpy（）</target>
        </trans-unit>
        <trans-unit id="4849790bb1a2a3b8ecc4003879b0ecb3a9fb1d69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy::QSignalSpy(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy :: QSignalSpy（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="748545a4a5777f75cbe07d8b76126bc6a7af340e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition *QState::addTransition()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition * QState :: addTransition（）</target>
        </trans-unit>
        <trans-unit id="e3edbce1cb8222ba190f6075bce3c5d0a72d5c15" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition::QSignalTransition()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition :: QSignalTransition（）</target>
        </trans-unit>
        <trans-unit id="bfe4d2a1dff8461dc2fbdcb5005fd32b52c0805d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition::QSignalTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition :: QSignalTransition（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2005a1441f8e0ed9f3cbc6307357ef60d1a95ad8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; bool QObject::disconnect()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt;布尔QObject :: disconnect（）</target>
        </trans-unit>
        <trans-unit id="c7cb7d0cecafe889b8bee49ebfbdcf766a8ba6f4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; std::function&amp;lt;void ()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; std :: function &amp;lt;void（）</target>
        </trans-unit>
        <trans-unit id="d4c13a3cc38e34cedb5820b77ee2d563f997ba16" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; void QTimer::singleShot()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction&amp;gt; void QTimer :: singleShot（）</target>
        </trans-unit>
        <trans-unit id="e7c2b9877a56303618c834d0c4b148714d49062a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction, typename Functor&amp;gt; QMetaObject::Connection QObject::connect()</source>
          <target state="translated">模板&amp;lt;typename PointerToMemberFunction，typename Functor&amp;gt; QMetaObject :: Connection QObject :: connect（）</target>
        </trans-unit>
        <trans-unit id="f04a72d052a5e71bd564efae496d8bfa95939987" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QOffscreenSurface::nativeInterface() const</source>
          <target state="translated">模板&amp;lt;typename QNativeInterface&amp;gt; QNativeInterface * QOffscreenSurface :: nativeInterface（）const</target>
        </trans-unit>
        <trans-unit id="f9dae0a8f8dd6757ab4146937f6fb1b5e8244643" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QOpenGLContext::nativeInterface() const</source>
          <target state="translated">模板&amp;lt;typename QNativeInterface&amp;gt; QNativeInterface * QOpenGLContext :: nativeInterface（）const</target>
        </trans-unit>
        <trans-unit id="13e308da5214b6babbcef89f53fd8685097be1ab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QSGTexture::nativeInterface() const</source>
          <target state="translated">模板&amp;lt;typename QNativeInterface&amp;gt; QNativeInterface * QSGTexture :: nativeInterface（）const</target>
        </trans-unit>
        <trans-unit id="86bc266a4e1d3b27c800a8e54bc629c168b33ca6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename RContainer&amp;gt; RContainer QStringTokenizer::toContainer(RContainer &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename RContainer&amp;gt; RContainer QStringTokenizer :: toContainer（RContainer &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c0256fabec412b4a9b9e0f9aa9bb1582f385e268" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">模板&amp;lt;类型名称Rep，类型名称周期&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;和QDeadlineTimer :: operator =（std :: chrono :: duration &amp;lt;Rep，Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="be21ec3b460408c2456a1bf96116f3856e5cbca6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer &amp;amp;QDeadlineTimer::operator=()</source>
          <target state="translated">模板&amp;lt;typename Rep，typename Period&amp;gt; QDeadlineTimer＆QDeadlineTimer :: operator =（）</target>
        </trans-unit>
        <trans-unit id="d836fbec5595dc79ee31721c0aa35a63569bcacd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer::QDeadlineTimer()</source>
          <target state="translated">模板&amp;lt;typename Rep，typename Period&amp;gt; QDeadlineTimer :: QDeadlineTimer（）</target>
        </trans-unit>
        <trans-unit id="5d9c939be66e4ba5d32436823d646e0acba29823" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer::QDeadlineTimer(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">模板&amp;lt;类型名Rep，类型名周期&amp;gt; QDeadlineTimer :: QDeadlineTimer（std :: chrono :: duration &amp;lt;Rep，Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b89066cba27f6f02eaa9ac5c8dd676818f933ad8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; bool QMutex::try_lock_for()</source>
          <target state="translated">模板&amp;lt;typename Rep，typename时期&amp;gt; bool QMutex :: try_lock_for（）</target>
        </trans-unit>
        <trans-unit id="ccf571904d2d2c7aaab4fae8963b01834dcea39a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; bool QMutex::try_lock_for(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">template &amp;lt;typename Rep, typename Period&amp;gt; bool QMutex::try_lock_for(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d99a1e5742c718303b3aa55b06b5980853f8ebad" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; void QDeadlineTimer::setRemainingTime()</source>
          <target state="translated">模板&amp;lt;typename Rep，typename Period&amp;gt; void QDeadlineTimer :: setRemainingTime（）</target>
        </trans-unit>
        <trans-unit id="af7de67a0b4dfb293a23b6f113971b7f48c4f4ff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; void QDeadlineTimer::setRemainingTime(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">模板&amp;lt;typename Rep，typename Period&amp;gt; void QDeadlineTimer :: setRemainingTime（std :: chrono :: duration &amp;lt;Rep，Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff8c04bb8c6156c3420085d797b70830927652c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="329b6913c4ebcc7827c7ea5ff330e676d34e41c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="5e367b069c58c35f383e3aeb6077a5b564149848" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; QFuture &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（）</target>
        </trans-unit>
        <trans-unit id="eb7abfb370f957f145325747f83d629a0bcedcf8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（）</target>
        </trans-unit>
        <trans-unit id="19925d186d39c0cf26299b755fd8c8d265a0035d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4651a590aa531e0e18af2ca6eff41978b11a9ec3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="72a1b659e3bc1d32c224ce8ada9c999f32d3e230" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bc0cd427bed049d744dd0a20cc83d22c82fe62cc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="28bd03a4f8a9bad55b94ca3eabaea3cc4ccf0ea3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1d58d47aa53a7fec262736cf5ab7474333a08e6b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="998ad57c8d4bf7f82330b121cee5c89c0aedfe20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8372f36c30a5fa6a9f7605b9e21c6dbd5372ee34" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="0b57f91e98cf0cb807082b141b341834610838d6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; QFuture &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（）</target>
        </trans-unit>
        <trans-unit id="72f15ade97edc421527772181ea20888b27fe1ff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（）</target>
        </trans-unit>
        <trans-unit id="02b90913a1b1110e9d30f0155baf2df8efd35eca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8bd144c6705b140127c5caf526486390d3858dd5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="61fea626ea8c7553e0b1b022b5c02a0e364758a5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="842df9c36397df6c4fdf00e8d0882b185aa65a86" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="0ddf44a6e3599df1827b5a2e357ab22626f39d35" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="25b74604b191b5ed0bc1c2be288a24d35c36dbd5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Iterator</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename迭代器，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（Iterator</target>
        </trans-unit>
        <trans-unit id="6f0ee143a5950bd58746a4cdc717bc0d493a8362" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5b1796293a3b8150e88f2a8a011898e5b0de0768" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="8fe25ef36785b3bd505da44b1bbb58a3f19e5e9e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(const Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename Sequence，typename KeepFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="6d15787245b573a99147039bbe0c70a6200edf74" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; QFuture &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（）</target>
        </trans-unit>
        <trans-unit id="2229476c7d64ea68d1c185459fa89146d3f17084" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（）</target>
        </trans-unit>
        <trans-unit id="a0bc7845a85c28b79cb491c3c547695eacd64a49" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7ec75cac675e231181e3042304604b27fe6986ed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（序列&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe9d57f06d159e4ba04d00ad8f89c9ea963ce10d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(const Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="2340997ed72cd4df590cf824460f7f57f92a2fc0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a5fd38733ef0fdf77e9df0d69ffa7c58ed20c02a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="02261de93ab2c111d87ae6140f862cf09db288a3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9affc791acbd891e776d34d0e9ee63e774cc97ed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename KeepFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingFilteredReduced（序列&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="a1cf1034ec145360cdd7d6a3de6b15ec5c6f7e4a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0acdb99aee53f3614b22fa7e86d92a149f4946cb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="782cc4ea2a1a9d68329b8b1e7f6625960dd4f8a1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(const Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename Sequence，typename MapFunctor，typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="a08059febcf2865dda85d5e0ce7d1400b61bc60a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; QFuture &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（）</target>
        </trans-unit>
        <trans-unit id="dcdfb82cc407de668302954bb2eab424e88d31f3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced()</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（）</target>
        </trans-unit>
        <trans-unit id="a1b9e38ed52c779a588631d10a446d9b57ccf9ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d6fa3f2d471f42854aaffa6a472113d4d41ce870" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="998145de43de44cdea4c5f5aea4605e1b87e7b8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(const Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="5e1678a6cabb776a487f8de71cc21c1bd96591eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d83b706d78f55d25b0d0d7739584c6ecb6ee8489" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="399b7523ebb8ba719ff5d3a88d4842d3b812cc17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1ca4737c1b35072b323dfdfef74137d2b4b8145e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename ResultType，typename序列，typename MapFunctor，typename ReduceFunctor，typename InitialValueType&amp;gt; ResultType QtConcurrent :: blockingMappedReduced（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="6d7702c955692b62fa119e5e3bf2262162d8821d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sender, typename Signal, typename&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ArgsType&amp;lt;Signal&amp;gt; &amp;gt; QtFuture::connect(Sender *</source>
          <target state="translated">模板&amp;lt;类型名发件人，类型名信号，类型名&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ArgsType &amp;lt;信号&amp;gt;&amp;gt; QtFuture :: connect（发件人*</target>
        </trans-unit>
        <trans-unit id="f841d20397ac872fbc3fd4588bbd05d64b29fa36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped()</source>
          <target state="translated">模板&amp;lt;typename序列，typename迭代器，typename MapFunctor&amp;gt;序列QtConcurrent :: blockingMapped（）</target>
        </trans-unit>
        <trans-unit id="9d0a2c7c0bc0e896868b1575f92b345f71c9cd7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename序列，typename迭代器，typename MapFunctor&amp;gt;序列QtConcurrent :: blockingMapped（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1dbe0f72915e0091d67785aa25fc08a21eac0bd2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped(Iterator</source>
          <target state="translated">template &amp;lt;typename Sequence，typename Iterator，typename MapFunctor&amp;gt;序列QtConcurrent :: blockingMapped（Iterator</target>
        </trans-unit>
        <trans-unit id="a9f3d2d8728d4f75963df3f3810d96ba126b9e17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameSequence::value_type&amp;gt; QtConcurrent::filtered(const Sequence &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameSequence :: value_type&amp;gt; QtConcurrent :: filtered（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="be9d7bfdc07faf1d4d6df0dc6b2e9def87464818" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenamestd::decay_t&amp;lt;Sequence&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenamestd :: decay_t &amp;lt;Sequence&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eefcf5ce5e72770f3f5f6a63c3ae41c777a84462" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenamestd::decay_t&amp;lt;Sequence&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenamestd :: decay_t &amp;lt;Sequence&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c09ef7b8565220e8681f3a17c10aed5ebacfa174" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::filter(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename序列，类型名KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: filter（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cbac9384d138c9fd2fe4a4f0f7577ba3d9d3d46c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::filter(Sequence &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: filter（Sequence＆</target>
        </trans-unit>
        <trans-unit id="0b479aaf3675455a87d7392bc1fbaf077b7c4c58" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; QFuture&amp;lt;typename Sequence::value_type&amp;gt; QtConcurrent::filtered()</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt; QFuture &amp;lt;typename序列:: value_type&amp;gt; QtConcurrent :: filtered（）</target>
        </trans-unit>
        <trans-unit id="a2d99332cdcf32a67cf4f05abbfe939b44fc752f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::filter()</source>
          <target state="translated">模板&amp;lt;typename序列，类型名KeepFunctor&amp;gt; QFuture &amp;lt;void&amp;gt; QtConcurrent :: filter（）</target>
        </trans-unit>
        <trans-unit id="0bff8f8b4051ac6756d715fe1016f7e1d43164c3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; Sequence QtConcurrent::blockingFiltered()</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt;序列QtConcurrent :: blockingFiltered（）</target>
        </trans-unit>
        <trans-unit id="dd7067015e1b5d546ee4cc42295455d89ff84ec9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; Sequence QtConcurrent::blockingFiltered(const Sequence &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename KeepFunctor&amp;gt;序列QtConcurrent :: blockingFiltered（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="e311b5d5bde5e1963f943494cc45dc02a09f695b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; std::decay_t&amp;lt;Sequence&amp;gt; QtConcurrent::blockingFiltered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt; std :: decay_t &amp;lt;Sequence&amp;gt; QtConcurrent :: blockingFiltered（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="59f5c26eda90549fe2ea5e38a332ff27b4ac6be3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; std::decay_t&amp;lt;Sequence&amp;gt; QtConcurrent::blockingFiltered(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename序列，typename KeepFunctor&amp;gt; std :: decay_t &amp;lt;Sequence&amp;gt; QtConcurrent :: blockingFiltered（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="9e8e7104e0d84ff70b63c665217d9225799a8385" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter()</source>
          <target state="translated">模板&amp;lt;类型名称序列，类型名称KeepFunctor&amp;gt; void QtConcurrent :: blockingFilter（）</target>
        </trans-unit>
        <trans-unit id="5813e5fe7f63b960968b815a15bc84806bc3bf0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;类型名称序列，类型名称KeepFunctor&amp;gt; void QtConcurrent :: blockingFilter（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3a034278e69c81b7364462f6b02ae95de33f8319" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter(Sequence &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename KeepFunctor&amp;gt; void QtConcurrent :: blockingFilter（Sequence＆</target>
        </trans-unit>
        <trans-unit id="75affc490670ad216d486eabb706b5e798eca800" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Sequence, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename序列，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;QtPrivate :: MapResultType &amp;lt;Sequence，MapFunctor&amp;gt;&amp;gt; QtConcurrent :: mapped（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b7a4bf2ca64f6ce72171928cdd9a81ba3885fbbf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Sequence, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Sequence，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;QtPrivate :: MapResultType &amp;lt;Sequence，MapFunctor&amp;gt;&amp;gt; QtConcurrent :: mapped（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="4344bbcdc464c128a622044ab582bc3eeb181a12" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(const Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Sequence，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameQtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="c026b1c31479ca3e1e001b66a880e09754ef55a2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="318308f57e681f514e494e35f53ab26e893aa201" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Sequence &amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（Sequence＆</target>
        </trans-unit>
        <trans-unit id="33604fe13f0881540061607bcab4ab4444722efd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">template &amp;lt;typename Sequence，typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（序列&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="788426b650c1759c70e16704cdfeffecc3f3ef54" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; QFuture&amp;lt;typename QtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped()</source>
          <target state="translated">模板&amp;lt;类型名称序列，类型名称MapFunctor&amp;gt; QFuture &amp;lt;类型名称QtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（）</target>
        </trans-unit>
        <trans-unit id="73b9f30f1c3c647673299b2309ab4463f50ef166" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::map()</source>
          <target state="translated">模板&amp;lt;typename序列，typename MapFunctor&amp;gt; QFuture &amp;lt;void&amp;gt; QtConcurrent :: map（）</target>
        </trans-unit>
        <trans-unit id="6e3ed8b648bec24064f1427784c031f4f619aee9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap()</source>
          <target state="translated">模板&amp;lt;typename序列，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（）</target>
        </trans-unit>
        <trans-unit id="8fd5c4ab5fb019d83c9ccda2c255d330cb223c69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename Sequence，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="700cf016c8c1a222694220129e4d4ba0772eff29" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Sequence &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Sequence，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（Sequence＆</target>
        </trans-unit>
        <trans-unit id="2d0aa8ad861f7cb3da0d5e05a9f51e1ffe46fed7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Sequence &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename Sequence，typename MapFunctor&amp;gt; void QtConcurrent :: blockingMap（Sequence &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="969dd7c28aad51135363af33a41e80d9fbbe05a8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename State&amp;gt; class QSGSimpleMaterial</source>
          <target state="translated">模板&amp;lt;typename State&amp;gt;类QSGSimpleMaterial</target>
        </trans-unit>
        <trans-unit id="a53f19e9e3423b60175971b3e47eabe88b8840a3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename State&amp;gt; class QSGSimpleMaterialShader</source>
          <target state="translated">模板&amp;lt;typename State&amp;gt;类QSGSimpleMaterialShader</target>
        </trans-unit>
        <trans-unit id="03960198a13d232db56ce0fea9950a94cbf9f017" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename StdBasicString, if_compatible_string&amp;lt;StdBasicString&amp;gt;&amp;gt; QStringView::QStringView()</source>
          <target state="translated">模板&amp;lt;类型名StdBasicString，if_compatible_string &amp;lt;StdBasicString &amp;gt;&amp;gt; QStringView :: QStringView（）</target>
        </trans-unit>
        <trans-unit id="f5a22920c74d93008e9fe9b3ada647ce4b591155" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename StdBasicString, if_compatible_string&amp;lt;StdBasicString&amp;gt;&amp;gt; QStringView::QStringView(const StdBasicString &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename StdBasicString，if_compatible_string &amp;lt;StdBasicString &amp;gt;&amp;gt; QStringView :: QStringView（const StdBasicString＆</target>
        </trans-unit>
        <trans-unit id="8f73c3f5c033d4c2b146014ad22fe5d0dcd64488" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; &amp;amp;QAndroidJniObject::operator=(T</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt;＆QAndroidJniObject :: operator =（T</target>
        </trans-unit>
        <trans-unit id="5eab0adf5fbb177ed226243763b60224aa116a82" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::callObjectMethod(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject :: callObjectMethod（const char *</target>
        </trans-unit>
        <trans-unit id="5fb5f3490a173c18cf90cd6f2cce8adcb29c14a2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::getObjectField(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject :: getObjectField（const char *</target>
        </trans-unit>
        <trans-unit id="17e047394606a7c391f568a7bf042f8871c3af3f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;gt;&amp;gt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="522dd12cd6b65ebb3dc9efc70bbc828a3a65059e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f7f54ed06fd9855cd1f6bf5d8ec05c3343b3847e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbc4e1b9f74cc49951efe23fd9a66ec55d923623" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fa7c27862713bbc0804c140e08ee3d2cf936457" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; QtConcurrent :: run（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="81c3b42a8d3c00587a12eaf5e4161138159225d3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(Function</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; QtConcurrent :: run（函数</target>
        </trans-unit>
        <trans-unit id="05defc5ca430afa30a99858c57a3bf95eab10629" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine::newQMetaObject()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine :: newQMetaObject（）</target>
        </trans-unit>
        <trans-unit id="7b61b7a5bf7c0dd96541d02b550923b1e1c68c1d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine::toScriptValue(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine :: toScriptValue（const T＆</target>
        </trans-unit>
        <trans-unit id="4b479d3000b0bab0d2bdbe9ee8355b161a60d61b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T *&amp;gt; QEntity::componentsOfType() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T *&amp;gt; QEntity :: componentsOfType（）const</target>
        </trans-unit>
        <trans-unit id="c001c6f4d1fbef15cfb35c185ee8fb37bb09ee8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; QObject::findChildren(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; QObject :: findChildren（const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="920b73a5926ff350988a04019b1f643439203c1e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; QObject::findChildren(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; QObject :: findChildren（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="28d446ef976414b8a230d3eff3095ab3047cb2fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; qFindChildren(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; qFindChildren（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f34afc2b6e93fb040251ba6ec49e1d17bf17219b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;qDBusRegisterMetaType()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt; &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; qDBusRegisterMetaType（）</target>
        </trans-unit>
        <trans-unit id="20a86ddd35c4a1a6065250652f9855f6c8a872d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *qmlAttachedPropertiesObject(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * qmlAttachedPropertiesObject（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="578f7ab18bcd4f2564c0b4114fb8a24df428ecdd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QRemoteObjectNode::instances() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QRemoteObjectNode :: instances（）const</target>
        </trans-unit>
        <trans-unit id="27a4ae041af97f445dad6a1054731df24be014c4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qt3dcore-qnodeid#QNodeIdVector-typedef&quot;&gt;Qt3DCore::QNodeIdVector&lt;/a&gt;qIdsForNodes(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qt3dcore-qnodeid#QNodeIdVector-typedef&quot;&gt;Qt3DCore :: QNodeIdVector&lt;/a&gt; qIdsForNodes（const T＆</target>
        </trans-unit>
        <trans-unit id="dc0f734d9a4a2bc2a8af6b7fcba5234fa9dc2f8a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DCore::functorTypeId()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DCore :: functorTypeId（）</target>
        </trans-unit>
        <trans-unit id="2121bc24869b9bfafa1031709f53a98ffc278631" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DRender::functorTypeId()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DRender :: functorTypeId（）</target>
        </trans-unit>
        <trans-unit id="1fd4bd0ace33c46fe908cd304fd6f367860c3f5e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="4bce048d329011492e923b7909930189782a762e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="4e411f520b542448de1d8a856a3eb6f5bf65ca67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b195309299ade7ea426cdf3190ce2a95936a15da" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const T *</target>
        </trans-unit>
        <trans-unit id="9aa744db9b88ff3c1e08c1a04cf819fddf529209" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T *&amp;gt; QEntity::componentsOfType() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T *&amp;gt; QEntity :: componentsOfType（）const</target>
        </trans-unit>
        <trans-unit id="cfae6c230231dc20051d3a8ae1e1c1be7ad5256e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject &amp;amp;QAndroidJniObject::operator=()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QAndroidJniObject＆QAndroidJniObject :: operator =（）</target>
        </trans-unit>
        <trans-unit id="d14a2c4564b23162097619a52b44d6092e57b621" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::callObjectMethod()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject :: callObjectMethod（）</target>
        </trans-unit>
        <trans-unit id="144a6f694d6ecd09746576806fd40ed24c5e6812" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::callStaticObjectMethod()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject :: callStaticObjectMethod（）</target>
        </trans-unit>
        <trans-unit id="0bbb0ef94e7a5ab51407a24fa2564b68456c47df" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::getObjectField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject :: getObjectField（）</target>
        </trans-unit>
        <trans-unit id="3c83d66d5dd879da3c7c2ac99ce65242801a2427" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::getStaticObjectField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject :: getStaticObjectField（）</target>
        </trans-unit>
        <trans-unit id="58e72d3d3b26f0c8295df4209f1e6c1fd7543806" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDataStream＆operator &amp;gt;&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="2980abf91625b728d69aa6a59dfb6645a7972235" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDataStream＆operator &amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="8f043fdc0f09ae5ecc6e8106ff4d7196b9bcf9d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStreamIfHasIStreamOperators&amp;lt;T&amp;gt; operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDataStreamIfHasIStreamOperators &amp;lt;T&amp;gt;运算符&amp;gt;&amp;gt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bc7e6578bf4411a951b9272e78d0f61317025c5f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStreamIfHasOStreamOperators&amp;lt;T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDataStreamIfHasOStreamOperators &amp;lt;T&amp;gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="eadb2ec041e04f548a1ec8c7d8df8924174eb962" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDebug运算符&amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="49fff3b87336be099daeee27841f9e09525bea91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDebugIfHasDebugStream&amp;lt;T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QDebugIfHasDebugStream &amp;lt;T&amp;gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd523ed3886f3fcef3e90107ce1404d49b807526" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QFuture&amp;lt;T&amp;gt; QtConcurrent::run()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QFuture &amp;lt;T&amp;gt; QtConcurrent :: run（）</target>
        </trans-unit>
        <trans-unit id="e374fd907da026a7a9c16c1e35f566889ac0a5cb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QJSValue QJSEngine::newQMetaObject()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QJSValue QJSEngine :: newQMetaObject（）</target>
        </trans-unit>
        <trans-unit id="46fc13caad2779277e578c05150427595cbf882d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QJSValue QJSEngine::toScriptValue()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QJSValue QJSEngine :: toScriptValue（）</target>
        </trans-unit>
        <trans-unit id="42c4e93ee53209428e7eeed8999e14e1b0c9b103" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QList&amp;lt;T&amp;gt; QObject::findChildren()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QList &amp;lt;T&amp;gt; QObject :: findChildren（）</target>
        </trans-unit>
        <trans-unit id="d4d0a11eb0c2dd2565d3dbd1bfbbb85425a7a9d5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QList&amp;lt;T&amp;gt; qFindChildren()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QList &amp;lt;T&amp;gt; qFindChildren（）</target>
        </trans-unit>
        <trans-unit id="764334c5b78e230274b7fab4f3c3bf07d650de31" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QMetaEnum QMetaEnum::fromType()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt; QMetaEnum QMetaEnum :: fromType（）</target>
        </trans-unit>
        <trans-unit id="3adff29c56c4efa52a9483cc67dc8f9cb7bf3af2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QMetaType QMetaType::fromType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QMetaType QMetaType :: fromType（）</target>
        </trans-unit>
        <trans-unit id="a1ec824534bd5e11dc1373ece6c3f0a9d9e4ade6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QObject *qmlAttachedPropertiesObject()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QObject * qmlAttachedPropertiesObject（）</target>
        </trans-unit>
        <trans-unit id="9fde58faaefebf945700eced27d8fc2be444b0fb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QStringList QRemoteObjectNode::instances()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QStringList QRemoteObjectNode :: instances（）</target>
        </trans-unit>
        <trans-unit id="27e127bed5233e8ab3410c7336bdff9242052930" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QVariant QVariant::fromValue()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QVariant QVariant :: fromValue（）</target>
        </trans-unit>
        <trans-unit id="8af2adf39b6806082f8570b111f10b90d28f3034" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QVector&amp;lt;T *&amp;gt; Qt3DCore::componentsOfType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; QVector &amp;lt;T *&amp;gt; Qt3DCore :: componentsOfType（）</target>
        </trans-unit>
        <trans-unit id="d66e5e8576a38577233799c4e678842ff18a4888" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::QNodeIdVector qIdsForNodes()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Qt3DCore :: QNodeIdVector qIdsForNodes（）</target>
        </trans-unit>
        <trans-unit id="9c5d1ce07abd0e6cd774e1bb43abebaada03c8c7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::QNodeIdVectorqIdsForNodes(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Qt3DCore :: QNodeIdVectorqIdsForNodes（const T＆</target>
        </trans-unit>
        <trans-unit id="dee37601ed611fea8029c6bf2a317693508a549a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::Qt3DCoreIdVector qIdsForNodes()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Qt3DCore :: Qt3DCoreIdVector qIdsForNodes（）</target>
        </trans-unit>
        <trans-unit id="852d9bb20fc767883229fdc71be91587f1862f80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *QSensorBackend::setReading()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T * QSensorBackend :: setReading（）</target>
        </trans-unit>
        <trans-unit id="5b10730f36a247b0f17cb8567195d4589477a549" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *QSensorBackend::setReading(T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T * QSensorBackend :: setReading（T *</target>
        </trans-unit>
        <trans-unit id="0cc10c505caa2c9616f9bca89e0b38659c082152" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *q_check_ptr()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt; T * q_check_ptr（）</target>
        </trans-unit>
        <trans-unit id="8e952ce1b41b7c7c7f0387d3727082716b862ec9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *q_check_ptr(T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T * q_check_ptr（T *</target>
        </trans-unit>
        <trans-unit id="7cfe01fb342d586bf49b8cc0dd28c5b9b52aa2b3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callMethod()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: callMethod（）</target>
        </trans-unit>
        <trans-unit id="db878dd0384f4e93e18a307809a7fab6eba57abe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callMethod(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: callMethod（const char *</target>
        </trans-unit>
        <trans-unit id="2c64c5722d41f8f1ff803fde1096cfc67e4bbd03" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callStaticMethod()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: callStaticMethod（）</target>
        </trans-unit>
        <trans-unit id="2b7934477f21709641f044ff41ac3759bb00b7f9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: getField（）</target>
        </trans-unit>
        <trans-unit id="14e6192f6ac76ec86d2b2338d5f994eefb985e2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getField(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: getField（const char *</target>
        </trans-unit>
        <trans-unit id="cc0795ef6172bd921d2a60e392b7a86cdd602d50" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getStaticField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: getStaticField（）</target>
        </trans-unit>
        <trans-unit id="4784b118a8e9481e748c8191fe3aaaf7990e8405" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::object()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: object（）</target>
        </trans-unit>
        <trans-unit id="21a6bc7963f9a79969f994ccd99ee3b30eb6ab8e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::object() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QAndroidJniObject :: object（）const</target>
        </trans-unit>
        <trans-unit id="5f368648415999741f1b93e3c06ec07ac99a2b87" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QJSEngine::fromScriptValue()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QJSEngine :: fromScriptValue（）</target>
        </trans-unit>
        <trans-unit id="6cccde344163acda23c3110b9f3bcd9e7e47aa91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QJSEngine::fromScriptValue(const &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QJSEngine :: fromScriptValue（const &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f7637f6fa4e14846969f1624239d4c040ab190c1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QMediaService::requestControl()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QMediaService :: requestControl（）</target>
        </trans-unit>
        <trans-unit id="be0058bcbb48131d82f72907b4ae761c829f117e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QObject::findChild()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QObject :: findChild（）</target>
        </trans-unit>
        <trans-unit id="4e13e600046b4a228b44989c3416989dc319a866" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QObject::findChild(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QObject :: findChild（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3f016a642a0826bc545e95429af8b2b9ebab9794" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QQmlEngine::singletonInstance()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QQmlEngine :: singletonInstance（）</target>
        </trans-unit>
        <trans-unit id="574e35fe161981968f391a721f7135a23e293137" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QQmlEngine::singletonInstance(int</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QQmlEngine :: singletonInstance（int</target>
        </trans-unit>
        <trans-unit id="d987a655b92fd1887773abc4feb89b607adc29d2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::value()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QVariant :: value（）</target>
        </trans-unit>
        <trans-unit id="17054a53cbdcdaea810fc202934c85b4a0e01a7f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::value() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QVariant :: value（）const</target>
        </trans-unit>
        <trans-unit id="8b0f1b05845e6914ce78046e94b83c4372862f1c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::view()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T QVariant :: view（）</target>
        </trans-unit>
        <trans-unit id="2e28a0332de4d44a172c4bdc3083f136fef062ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qAbs()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qAbs（）</target>
        </trans-unit>
        <trans-unit id="c1ef1e63795b9bed554f9de8949b0127af143394" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qdbus_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qdbus_cast（）</target>
        </trans-unit>
        <trans-unit id="9444dc244a418ef259760cda59d872f27746f7ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qgraphicsitem_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qgraphicsitem_cast（）</target>
        </trans-unit>
        <trans-unit id="1fd9dd1a53d7a3381c860e5b2f6dd8ef683884dc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qobject_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qobject_cast（）</target>
        </trans-unit>
        <trans-unit id="8d96c62d47762678a756feed49232f07aa492f61" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qstyleoption_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qstyleoption_cast（）</target>
        </trans-unit>
        <trans-unit id="3d4a14886e8afb0089c7292245a762cb96553e7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qt_extension()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qt_extension（）</target>
        </trans-unit>
        <trans-unit id="68435f0d137e888882c3a199221262fa6f182cbb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qvariant_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; T qvariant_cast（）</target>
        </trans-unit>
        <trans-unit id="fdcb2c9f129107e2740d9d6abc993949a8860a70" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; TqAbs(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; TqAbs（const T＆</target>
        </trans-unit>
        <trans-unit id="e589bdf359e2f318d279462b36e949b885163e46" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqdbus_cast(const &lt;a href=&quot;qdbusargument#QDBusArgument&quot;&gt;QDBusArgument&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqdbus_cast（const &lt;a href=&quot;qdbusargument#QDBusArgument&quot;&gt;QDBusArgument&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f4fc3ea75af06b82ef229a88fd58ad8d3dfa61fe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqgraphicsitem_cast(&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqgraphicsitem_cast（&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8736cdf55d378f833ca9b3846b411b9982396ef1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqobject_cast(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqobject_cast（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6d33d9e755dfbaaf1271c4f4d8f3260dd2d2e542" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqobject_cast(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqobject_cast（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="406e70745fc090f3acec41d8d8b79ca20671adac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(&lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqstyleoption_cast（&lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2bdb50e1e4c0b977f137a477578466680145755e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(&lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqstyleoption_cast（&lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a4e70508160f9f8064d22b53cb7f096f19a67617" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(const &lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqstyleoption_cast（const &lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="06cc32d196cb68391112a5696575d08bf6ec5d76" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(const &lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqstyleoption_cast（const &lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b767d780c71ba057a370fc70790328125561e039" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqt_extension(&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqt_extension（&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8ba8d164d6cc24b26d5889f67a5e59f1a78fb0f1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqvariant_cast(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; Tqvariant_cast（const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="86312a6a728f2cc9e3121e0a9ffd6b70ac95533d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qConstOverload()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; auto qConstOverload（）</target>
        </trans-unit>
        <trans-unit id="1615357b172ef1ff40378ae15146e1041854a32f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qNonConstOverload()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt;自动qNonConstOverload（）</target>
        </trans-unit>
        <trans-unit id="2f6d74bfebd1baae8a69ed97544b540136ec1e3c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qOverload()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; auto qOverload（）</target>
        </trans-unit>
        <trans-unit id="f0f2c5f2109d513a4104ca56591550cf82f20449" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqConstOverload(T</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; autoqConstOverload（T</target>
        </trans-unit>
        <trans-unit id="3539d1a3bb4f5f4597f8597b756f32b43913da95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqNonConstOverload(T</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; autoqNonConstOverload（T</target>
        </trans-unit>
        <trans-unit id="fa310d4d3e9b5506d1c97c598fd3fb8844258e7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqOverload(T</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; autoqOverload（T</target>
        </trans-unit>
        <trans-unit id="48d2b6a0674053eaa1d0e1da7b70fd2dd8f68917" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::hasRegisteredComparators()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QMetaType :: hasRegisteredComparators（）</target>
        </trans-unit>
        <trans-unit id="f8d4c1a00fcb61f7941ae7eab411a8ab67728eaa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::hasRegisteredDebugStreamOperator()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QMetaType :: hasRegisteredDebugStreamOperator（）</target>
        </trans-unit>
        <trans-unit id="cd2aa55fad91759e63f2bb55c79af09daf6d907e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerComparators()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QMetaType :: registerComparators（）</target>
        </trans-unit>
        <trans-unit id="4f1aaebb90e90b86d7fcca327ba56540ff1b0b24" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerDebugStreamOperator()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QMetaType :: registerDebugStreamOperator（）</target>
        </trans-unit>
        <trans-unit id="cf3fcd676f5bf2283349dfde83fada51f395d356" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerEqualsComparator()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QMetaType :: registerEqualsComparator（）</target>
        </trans-unit>
        <trans-unit id="a10edff1cb2c648950fd3fb108944131553140c1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QNdefRecord::isRecordType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QNdefRecord :: isRecordType（）</target>
        </trans-unit>
        <trans-unit id="6ac050a2f4b416795badeb743fb4f744bb194636" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QNdefRecord::isRecordType() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QNdefRecord :: isRecordType（）const</target>
        </trans-unit>
        <trans-unit id="1543d5619a5c5df9a3061dfb1da3de73f6d8eff4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canConvert()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QVariant :: canConvert（）</target>
        </trans-unit>
        <trans-unit id="b37fcf59eed3db7834d59ab52f63206dd1a29a25" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canConvert() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QVariant :: canConvert（）const</target>
        </trans-unit>
        <trans-unit id="0cbee56462e6dd44858943140c947af8f45b827f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canView() const</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool QVariant :: canView（）const</target>
        </trans-unit>
        <trans-unit id="914275790645dd390e2dd708cb312628bed18bb2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator!=()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符！=（）</target>
        </trans-unit>
        <trans-unit id="c106dddb5849d6203ef5eb4025f999b4ba401aae" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;gt;()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="d87e2f2b95cb26106ebf8ffce7b59ab16841f376" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;gt;=()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符&amp;gt; =（）</target>
        </trans-unit>
        <trans-unit id="7dc244e28f801bc14a8c38f7d5c7e6473bd5451c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="e7a94e4c5193b09f9d66facd1a53d127266e94b2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;lt;=()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符&amp;lt;=（）</target>
        </trans-unit>
        <trans-unit id="6a1896496da6f1b505606bc32816898c45d2539b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator==()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; bool运算符==（）</target>
        </trans-unit>
        <trans-unit id="1c4f000897b49d3fc25bd9ac7f29dd4cdc975949" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（</target>
        </trans-unit>
        <trans-unit id="96607b316694bd5376ddda3a9762e8b13af9cc02" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（T *</target>
        </trans-unit>
        <trans-unit id="c2976ddb354542b84aab0b12836ab68ab56e37a4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="5ba25f968b982915aae56a6a7596b49ad0bdc916" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b4e3bbb25a2530ee20d588edf101d101b70077d3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="8044a5b6fab012fcd51653f49a7f77a36f1bfd36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator！=（const T *</target>
        </trans-unit>
        <trans-unit id="e2cca485a2f243749f6325adde63d95e2e7d7a30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator&amp;gt;（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="5763fc0e44a30415a62abbcc113abf5f479ee3b2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator&amp;gt;（const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="ddb04732e407044d06d2482bbb75e4091e3003cf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator&amp;gt; =（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="e4e14a695ad89590d0bab3de68e467dc9f66144a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator&amp;gt; =（const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="bca62ccae3691ccb9767591c9d3763cd53a12b41" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator &amp;lt;（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="17abb1837b474b12b2e5307d6ded4cd2046780d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator &amp;lt;（const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="71a0005926f3a6351703a420cd9ec5b0533e8d25" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloprator &amp;lt;=（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="9551af2654fd5e221ded3d9c36076adcd83aeada" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloprator &amp;lt;=（const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2781e1b0da173892b11a1c06fe5a49e3547b4950" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（</target>
        </trans-unit>
        <trans-unit id="9b026de3a8733b143fb7980adc417109956b1de3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（T *</target>
        </trans-unit>
        <trans-unit id="7cf339850f918bf571787dfd75c7344c90295c53" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="1fd7a967cf9fe01c22c8ccaee65ec8813dc3bb98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="c3d3df21184b4aa8d624cf8a1b7267cfb7debafa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="208fa0be6c3887e2491f05fedf64395b0b0ef74d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const T *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; booloperator ==（const T *</target>
        </trans-unit>
        <trans-unit id="a6da778be7373cfb9fafc34b70fa8a63ea2b22ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; char *QTest::toString()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; char * QTest :: toString（）</target>
        </trans-unit>
        <trans-unit id="2e5afe0d95fcf0703c3d19ffe0e1bfcb729ed460" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; char *QTest::toString(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; char * QTest :: toString（const T＆</target>
        </trans-unit>
        <trans-unit id="e17309f7f49af629cc163efd8daf3cf8304d8ea3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class &lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dcore-module.html&quot;&gt;Qt3DCore&lt;/a&gt;::QNodeCreatedChange</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类&lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dcore-module.html&quot;&gt;Qt3DCore&lt;/a&gt; :: QNodeCreatedChange</target>
        </trans-unit>
        <trans-unit id="65351b63d349ef0bb2d061b85d6deb196ad6ae93" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QAtomicInteger</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QAtomicInteger</target>
        </trans-unit>
        <trans-unit id="658fd65352026520b3fad72a19196fb44d82f09f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QAtomicPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QAtomicPointer</target>
        </trans-unit>
        <trans-unit id="f9f31304374bd568f93ddcb4672e2bbecf91bbdb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QBEInteger</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QBEInteger</target>
        </trans-unit>
        <trans-unit id="f082a32a2303cb9b115ae6cdbb83237acd20b358" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QContiguousCache</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QContiguousCache</target>
        </trans-unit>
        <trans-unit id="2ec3fdb960dee9354c3f6c225f20777afff4bfd2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QDBusReply</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QDBusReply</target>
        </trans-unit>
        <trans-unit id="42efdd6ccb8ce98e7976a3ebc421fe83ee339033" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QEnableSharedFromThis</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QEnableSharedFromThis</target>
        </trans-unit>
        <trans-unit id="26d28073f9c6f055eb925b0f7ba7ad6ea8427421" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QExplicitlySharedDataPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QExplicitlySharedDataPointer</target>
        </trans-unit>
        <trans-unit id="336429852ac5394044624444694ca81cdc3013b9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFuture</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QFuture</target>
        </trans-unit>
        <trans-unit id="b4f862684593910df8fddd11a45a76af7ef7aca2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QFutureIterator</target>
        </trans-unit>
        <trans-unit id="75642e0225fad6f919b35ec0fda163315e7a7e7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureSynchronizer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QFutureSynchronizer</target>
        </trans-unit>
        <trans-unit id="d681cbdda6acd23c4a8954404ff63b2543075098" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureWatcher</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QFutureWatcher</target>
        </trans-unit>
        <trans-unit id="bc017ade2402d3e1fd0785368f23fd4694aeb9c4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QItemEditorCreator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QItemEditorCreator</target>
        </trans-unit>
        <trans-unit id="fd29ccbc7f9090a398ca30402f304dc8a027a546" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLEInteger</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QLEInteger</target>
        </trans-unit>
        <trans-unit id="a6cddd1722bdffb9b45788c45246a1c35d713ad6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLinkedList</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QLinkedList</target>
        </trans-unit>
        <trans-unit id="1b7a813f67e3abc9ddd64bf8159ee5e1c830810a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLinkedListIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QLinkedListIterator</target>
        </trans-unit>
        <trans-unit id="b6bd06bde585844beb5a2561b71408eabe9258c5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QList</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QList</target>
        </trans-unit>
        <trans-unit id="bd34f832346b094e11769ab1daf993604080bf14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QListIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QListIterator</target>
        </trans-unit>
        <trans-unit id="81c1d2b68c3ca45a2451a36897dd56240d06eabe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableLinkedListIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QMutableLinkedListIterator</target>
        </trans-unit>
        <trans-unit id="ab07c13fdf3cec02bdf6dea8b585fbaa69519ba1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableListIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QMutableListIterator</target>
        </trans-unit>
        <trans-unit id="d76689afd8361987b19994ff69d4f42d2066a52f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableSetIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QMutableSetIterator</target>
        </trans-unit>
        <trans-unit id="c547eb38f4c08a6ab456ad5289475f699652a358" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableVectorIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QMutableVectorIterator</target>
        </trans-unit>
        <trans-unit id="4720e62fc16f531fa117849189ca754f8970bff8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QPointer</target>
        </trans-unit>
        <trans-unit id="6d4f0d4df68fb93f93bdf488a2e902c51fb068c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPromise</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QPromise</target>
        </trans-unit>
        <trans-unit id="1f651afc2828f968926db38ee82edeca380bbc0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QProperty</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QProperty</target>
        </trans-unit>
        <trans-unit id="a6a50d5d73bb5a27b35d8b2cfcd19e0d4471a4b3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPropertyAlias</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QPropertyAlias</target>
        </trans-unit>
        <trans-unit id="ffdbe7e156abfd4de860ee4443598caf580a80b4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPropertyData</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QPropertyData</target>
        </trans-unit>
        <trans-unit id="54c1b4564f01061e814fbe5d06cbd5122f74c08f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QQmlListProperty</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QQmlListProperty</target>
        </trans-unit>
        <trans-unit id="14911d136b181d35eb7a470e04109d4f0887786a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QQueue</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QQueue</target>
        </trans-unit>
        <trans-unit id="70ea8a9ffda4b8bee82296bad4e42127e2dff937" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QRemoteObjectPendingReply</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QRemoteObjectPendingReply</target>
        </trans-unit>
        <trans-unit id="8286f1f1d6dfd4e2ef8baa9c409574c8e6236eea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QScopedValueRollback</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QScopedValueRollback</target>
        </trans-unit>
        <trans-unit id="d8f52de71e6bdc46d92cedefc1215dbffb35ec56" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSet</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QSet</target>
        </trans-unit>
        <trans-unit id="9cdb1b8d7c286a4fac76a9b726a0d541368c70d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSetIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QSetIterator</target>
        </trans-unit>
        <trans-unit id="6e2f718d76f645d2e801c75904560d4753d5dc7f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSharedDataPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QSharedDataPointer</target>
        </trans-unit>
        <trans-unit id="a8a351b72677ff9d333bc087d437e30282d8218c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSharedPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QSharedPointer</target>
        </trans-unit>
        <trans-unit id="adf9be683f29c9aa3a25a8f900352441f4cdb7a0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSqlDriverCreator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QSqlDriverCreator</target>
        </trans-unit>
        <trans-unit id="9f753d1a1b053c52e2154932e1aef8fcad297db5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QStack</source>
          <target state="translated">template &amp;lt;typename T&amp;gt;类QStack</target>
        </trans-unit>
        <trans-unit id="8945918c5e924f15d77a3626c34fe5137b1daa20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QStandardItemEditorCreator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QStandardItemEditorCreator</target>
        </trans-unit>
        <trans-unit id="dd196983691c455d0853d15c3153b1e07091de76" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QThreadStorage</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QThreadStorage</target>
        </trans-unit>
        <trans-unit id="fd5ed82537d29788df865282c8a3e25e771f8f15" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVector</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QVector</target>
        </trans-unit>
        <trans-unit id="2fa1a8708017ed42e971acec360b8af14b8aeab5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVectorIterator</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QVectorIterator</target>
        </trans-unit>
        <trans-unit id="1db3ab2eee26228bf345e5c4af5ae4367c820de4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVulkanInfoVector</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QVulkanInfoVector</target>
        </trans-unit>
        <trans-unit id="46c0652d6b870bbf454a2866c55d13569d0b49ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QWeakPointer</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt;类QWeakPointer</target>
        </trans-unit>
        <trans-unit id="a94d5f117742687aa9d1e39eaea899bf67b3070b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qBound()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qBound（）</target>
        </trans-unit>
        <trans-unit id="ba2588daf34b60a319ab54946cb49943dda9e22f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qBound(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qBound（const T＆</target>
        </trans-unit>
        <trans-unit id="28787039af332c8432f2bd93f22c4999a33da28e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMax()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qMax（）</target>
        </trans-unit>
        <trans-unit id="6a029ee27fe67613ef1bba828b352d770ee54f2a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMax(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qMax（const T＆</target>
        </trans-unit>
        <trans-unit id="ded7a1c6839f15befc31ec683416d93f294713dd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMin()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qMin（）</target>
        </trans-unit>
        <trans-unit id="8cc1c63084a4ff11e17adc42d2140c499b9b4b30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMin(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T＆qMin（const T＆</target>
        </trans-unit>
        <trans-unit id="23c1eefd6272f6056e50e1b0da85176292123ccd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *QAbstractFunctor::functor_cast(const &lt;a href=&quot;qt3dcore-qabstractfunctor&quot;&gt;Qt3DCore::QAbstractFunctor&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T * QAbstractFunctor :: functor_cast（const &lt;a href=&quot;qt3dcore-qabstractfunctor&quot;&gt;Qt3DCore :: QAbstractFunctor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f565101105a6530eeed7b4279ac5cab020489f2c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *QAbstractFunctor::functor_cast(const &lt;a href=&quot;qt3drender-qabstractfunctor&quot;&gt;Qt3DRender::QAbstractFunctor&lt;/a&gt; *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T * QAbstractFunctor :: functor_cast（const &lt;a href=&quot;qt3drender-qabstractfunctor&quot;&gt;Qt3DRender :: QAbstractFunctor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e3472ad8a249c73c08f0d974c63c13079fc27fd1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *Qt3DRender::functor_cast()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; const T * Qt3DRender :: functor_cast（）</target>
        </trans-unit>
        <trans-unit id="af5b8770e40be14355e5d2d318a117c8d0c84f22" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qDBusRegisterMetaType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qDBusRegisterMetaType（）</target>
        </trans-unit>
        <trans-unit id="3699d93365b2f5235375e540391a6f2368e245fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qMetaTypeId()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qMetaTypeId（）</target>
        </trans-unit>
        <trans-unit id="b48e101fdf74aa143ecaa83e0df0cbdb7d01172c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qRegisterMetaType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qRegisterMetaType（）</target>
        </trans-unit>
        <trans-unit id="3c255f380efc3964f0c6bccced424d16d993d836" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterAnonymousType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qmlRegisterAnonymousType（）</target>
        </trans-unit>
        <trans-unit id="065271ab8d0a32fbba295c7fa5f427c314a311b8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterInterface()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qmlRegisterInterface（）</target>
        </trans-unit>
        <trans-unit id="14e41b9b62f333a72f6b48abe64a9a7ff5468584" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterSingletonType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qmlRegisterSingletonType（）</target>
        </trans-unit>
        <trans-unit id="760ebf622a6b99df931dfb5d6c9ff139c3fb51c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qmlRegisterType（）</target>
        </trans-unit>
        <trans-unit id="f514fa89e79fabeffd13f85613f21faf07ae04fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterUncreatableType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; int qmlRegisterUncreatableType（）</target>
        </trans-unit>
        <trans-unit id="6b9f58240446423ec03c29d098a550dc176320f5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqDBusRegisterMetaType()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt; intqDBusRegisterMetaType（）</target>
        </trans-unit>
        <trans-unit id="88cecdb75f412553da0757e294e9f4cd4094f157" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqMetaTypeId()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqMetaTypeId（）</target>
        </trans-unit>
        <trans-unit id="0f3f6881b5c4256f00f53105386e18a629372eb1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqRegisterMetaType()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqRegisterMetaType（）</target>
        </trans-unit>
        <trans-unit id="a60e5533812b326ce425b98e38d7f549b00dbf98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqRegisterMetaType(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqRegisterMetaType（const char *</target>
        </trans-unit>
        <trans-unit id="bb57f17d0c8010db8123c9b797e136db1f61f05f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterAnonymousType(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqmlRegisterAnonymousType（const char *</target>
        </trans-unit>
        <trans-unit id="50f50992955b50b01379f7eb8857c9e4db1f4989" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterInterface(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqmlRegisterInterface（const char *</target>
        </trans-unit>
        <trans-unit id="26c1bbea6e8eb331b484b17513c1a2a28e8eea14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterSingletonType(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqmlRegisterSingletonType（const char *</target>
        </trans-unit>
        <trans-unit id="8fc5a1aafdb1b5e83be4f3e9cdd277896e59ef88" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterType(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqmlRegisterType（const char *</target>
        </trans-unit>
        <trans-unit id="7390338a458107f34933506e551ed45d60e3deac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterUncreatableType(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; intqmlRegisterUncreatableType（const char *</target>
        </trans-unit>
        <trans-unit id="4f86d5b99e804e74cc184162307c1c3b49a84aeb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; qintptr Qt3DRender::functorTypeId()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; qintptr Qt3DRender :: functorTypeId（）</target>
        </trans-unit>
        <trans-unit id="794392189523a67cb1af93626db49e944f67255a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; struct &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt;::StereoFrame</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; struct &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; :: StereoFrame</target>
        </trans-unit>
        <trans-unit id="49706b22dab9c8d76dd11ea17bba75d0b802ceb0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; typename std::add_const&amp;lt;T&amp;gt;::type &amp;amp;qAsConst()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; typename std :: add_const &amp;lt;T&amp;gt; :: type＆qAsConst（）</target>
        </trans-unit>
        <trans-unit id="fe6e52a48cfdc7371397035b976dd29a76d8ae28" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; typenamestd::add_const&amp;lt;T&amp;gt;::type &amp;amp;qAsConst(T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; typenamestd :: add_const &amp;lt;T&amp;gt; :: type＆qAsConst（T＆</target>
        </trans-unit>
        <trans-unit id="234ee714dd274396ed19c7505d7a1074293c0e8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; uint qHash()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; uint qHash（）</target>
        </trans-unit>
        <trans-unit id="b3af9c0b6ac15dbc80536c6bfd4addfa3c80bd48" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QAndroidJniObject :: setField（）</target>
        </trans-unit>
        <trans-unit id="7a18d0ad5d03f50ba5cc057d5c8e1d8f9bf23f2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setField(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QAndroidJniObject :: setField（const char *</target>
        </trans-unit>
        <trans-unit id="5de478c60cd9e69ba3f0d4fbb60d5951e8dcbd3a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setStaticField()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QAndroidJniObject :: setStaticField（）</target>
        </trans-unit>
        <trans-unit id="e268d6f961179c738b15ec910b6723e89225c0d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QModelRoleData::setData(T &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QModelRoleData :: setData（T &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="09247046da200d04ace62a935da2f13619d35145" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QNdefFilter::appendRecord()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QNdefFilter :: appendRecord（）</target>
        </trans-unit>
        <trans-unit id="550ab4cc3fd8dfefc0aa6b05a493509854d671ea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QNdefFilter::appendRecord(unsignedint</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QNdefFilter :: appendRecord（unsignedint</target>
        </trans-unit>
        <trans-unit id="a02f44470828a4a9f22c9db89f74b64ab9638349" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QTest::addColumn()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QTest :: addColumn（）</target>
        </trans-unit>
        <trans-unit id="a9f1fcee48f612408889703e9cd0d875d73cd383" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QTest::addColumn(const char *</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QTest :: addColumn（const char *</target>
        </trans-unit>
        <trans-unit id="a2905b1b82b0ba17bd7a4eca72f026c7508c05b6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QVariant::setValue()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QVariant :: setValue（）</target>
        </trans-unit>
        <trans-unit id="f2cd56869c32857e703771bf64993090f88f6018" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QVariant::setValue(const T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void QVariant :: setValue（const T＆</target>
        </trans-unit>
        <trans-unit id="14ac4df4c566096903520740758efa788dde287b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qAsConst()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void qAsConst（）</target>
        </trans-unit>
        <trans-unit id="521565c435cf6486035fd60f8f3e86f419dbcacf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterAnimationInterpolator()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void qRegisterAnimationInterpolator（）</target>
        </trans-unit>
        <trans-unit id="d73aca7e5ade343c27b42a4f0d5ea17cb99293c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterMetaTypeStreamOperators()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void qRegisterMetaTypeStreamOperators（）</target>
        </trans-unit>
        <trans-unit id="1c2a3e2d5e57c4278caced327e3e6ed5524bb465" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterRemoteObjectsClient()</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; void qRegisterRemoteObjectsClient（）</target>
        </trans-unit>
        <trans-unit id="9e126a18bd6dd456572e585ed89777f5faa2cf84" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterRemoteObjectsServer()</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt;无效qRegisterRemoteObjectsServer（）</target>
        </trans-unit>
        <trans-unit id="20de4e7ff700541378312a3f811054f32c2b2435" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqAsConst(const T &amp;amp;&amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; voidqAsConst（const T &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="251ca035d70c9ab8a39e0f5b402372d45a5f930b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterAnimationInterpolator(&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; (*)(const T &amp;amp;, const T &amp;amp;, &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;)</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; voidqRegisterAnimationInterpolator（&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;（*）（const T＆，const T＆，&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e83714c6bfdb01de5d16384c08b235e911882f96" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterMetaTypeStreamOperators(const char *</source>
          <target state="translated">模板&amp;lt;类型名T&amp;gt; voidqRegisterMetaTypeStreamOperators（const char *</target>
        </trans-unit>
        <trans-unit id="e5ff085801c62fc5ee1bb67cec8c902faab845bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsClient(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsClient（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3e157d5a84f3d053ff885bcba8438730473ddef2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsServer（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d407b69bd98bd922960f88198a607e4d6989302e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const QVarLengthArray&amp;lt;T, Prealloc&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc &amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt; qHash（const QVarLengthArray &amp;lt;T，Prealloc&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="d27383d615df0c1d1e0d091873f17bb91eef0a80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; class QVarLengthArray</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc&amp;gt;类QVarLengthArray</target>
        </trans-unit>
        <trans-unit id="6b95bbf89269689749288eee7752f104ac51fea2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; uint qHash()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc&amp;gt; uint qHash（）</target>
        </trans-unit>
        <trans-unit id="a67a16260affca1c39f373991a14eb5773026e2a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator!=()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符！=（）</target>
        </trans-unit>
        <trans-unit id="76b86726fe9ee99d19281d742387d141d644afa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;gt;()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="29e40bb49838a812ac3f45238fca04c69e0eed2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;gt;=()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符&amp;gt; =（）</target>
        </trans-unit>
        <trans-unit id="d57c9476b30b7216dfb643780a6aa6a8a1ebf553" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;lt;()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="1954cdf83c6a639678ce59547400ac52262d54da" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;lt;=()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符&amp;lt;=（）</target>
        </trans-unit>
        <trans-unit id="1eaf9dce92b6767f9efa379ecb6d8787225331eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator==()</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; bool运算符==（）</target>
        </trans-unit>
        <trans-unit id="72c23a7683701af5a0fcde28635ad0952eed9542" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator!=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator！=（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="5a107be1fb0234e4fbaf6c5b9b624234e8375daf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;gt;(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator&amp;gt;（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2bbf65c1cf3e02d0c450829570369d5c28c5b7c5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;gt;=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator&amp;gt; =（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="6840f38c570951b26b2d880fa54e353c3608319c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;lt;(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator &amp;lt;（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="e534b445857f59db1fc65628438f90cbeb2b122d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;lt;=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator &amp;lt;=（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="199cbc1fe4c8bd8e3935fc11493f9f5adfa3309e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator==(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，int Prealloc1，int Prealloc2&amp;gt; booloperator ==（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="4fccab84edd4b875faf41d1a74470301ef86f609" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int metaObjectRevision&amp;gt; int qmlRegisterRevision()</source>
          <target state="translated">模板&amp;lt;typename T，int metaObjectRevision&amp;gt; int qmlRegisterRevision（）</target>
        </trans-unit>
        <trans-unit id="c9b26d0046eac127f206c00cfd8e22366fa01ceb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int metaObjectRevision&amp;gt; intqmlRegisterRevision(const char *</source>
          <target state="translated">模板&amp;lt;typename T，int metaObjectRevision&amp;gt; intqmlRegisterRevision（const char *</target>
        </trans-unit>
        <trans-unit id="85c5a8af52be7c2d1bde04d0fa7813ee358b184f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc&amp;gt; class QVarLengthArray</source>
          <target state="translated">模板&amp;lt;typename T，qsizetype Prealloc&amp;gt;类QVarLengthArray</target>
        </trans-unit>
        <trans-unit id="5d5fc38933e3822ba7574d8852f10055dcf14cf4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc1, qsizetype Prealloc2&amp;gt; booloperator!=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，qsizetype Prealloc1，qsizetype Prealloc2&amp;gt; booloperator！=（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="0d809f9385f3b98aba3978281db7e3a228e8063a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc1, qsizetype Prealloc2&amp;gt; booloperator==(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，qsizetype Prealloc1，qsizetype Prealloc2&amp;gt; booloperator ==（const QVarLengthArray &amp;lt;T，Prealloc1&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="0ea4bd553fa23343a04235498322f4ac7e7d4e49" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">模板&amp;lt;typename T，typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;运算符&amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbd7f7cf5c90cc7638fbb2cd620019bdaedb7565" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Alloc&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="translated">模板&amp;lt;类型名T，类型名Alloc&amp;gt; QDebug运算符&amp;lt;&amp;lt;（）</target>
        </trans-unit>
        <trans-unit id="df30abae59d02c551eb30fd1a71b5485082e1067" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; bool operator!=()</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; bool运算符！=（）</target>
        </trans-unit>
        <trans-unit id="310b74d760d87980a0f2e9ed4bf186f6ca2e6507" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; bool operator==()</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; bool运算符==（）</target>
        </trans-unit>
        <trans-unit id="2213f0db8476eaa99156f53a1d7ed5d9f41458ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator!=(</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; booloperator！=（</target>
        </trans-unit>
        <trans-unit id="d009c73019660cf943ee76e6d3294f0a2a9b43cd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator!=(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; booloperator！=（const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt; &amp;lt;T，Cleanup&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="1eb9596e77868448c42fe7100e030aee1bc56a1e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator==(</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; booloperator ==（</target>
        </trans-unit>
        <trans-unit id="cf992793ac2c28299d2d15e6607a9947967d38d7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator==(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt; booloperator ==（const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt; &amp;lt;T，Cleanup&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="cad4d6b3e52bdd51c72bd292295d97439055ada5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; class QScopedArrayPointer</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt;类QScopedArrayPointer</target>
        </trans-unit>
        <trans-unit id="2377ff977260843d066fa26451053c61a4ffb866" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; class QScopedPointer</source>
          <target state="translated">模板&amp;lt;typename T，typename Cleanup&amp;gt;类QScopedPointer</target>
        </trans-unit>
        <trans-unit id="2ee1fd18354a9f75e5154757d24df813f9a1d900" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; int qmlRegisterExtendedType()</source>
          <target state="translated">模板&amp;lt;typename T，typename E&amp;gt; int qmlRegisterExtendedType（）</target>
        </trans-unit>
        <trans-unit id="cac18bcddd55c3154a2f4a98036f22c24801a461" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; int qmlRegisterExtendedUncreatableType()</source>
          <target state="translated">模板&amp;lt;typename T，typename E&amp;gt; int qmlRegisterExtendedUncreatableType（）</target>
        </trans-unit>
        <trans-unit id="35eb590ffcd5ced2f73d3f88a974bd323dc29aa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; intqmlRegisterExtendedType(const char *</source>
          <target state="translated">模板&amp;lt;typename T，typename E&amp;gt; intqmlRegisterExtendedType（const char *</target>
        </trans-unit>
        <trans-unit id="e7821eec5436a5d88cb3bdad1b16c7db71725b56" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; intqmlRegisterExtendedUncreatableType(const char *</source>
          <target state="translated">模板&amp;lt;typename T，typename E&amp;gt; intqmlRegisterExtendedUncreatableType（const char *</target>
        </trans-unit>
        <trans-unit id="287d294653f1ccd31161b836ef8e4937cbfb0e09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename U&amp;gt; T qExchange()</source>
          <target state="translated">模板&amp;lt;typename T，typename U&amp;gt; T qExchange（）</target>
        </trans-unit>
        <trans-unit id="1b25ea3139eafbebd4d5b31a17bc29453bee3f8c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename U&amp;gt; TqExchange(T &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename U&amp;gt; TqExchange（T＆</target>
        </trans-unit>
        <trans-unit id="3d0ace638e8a8bdb90650b4803b3054d880592c0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; bool operator!=()</source>
          <target state="translated">模板&amp;lt;typename T，typename X&amp;gt; bool运算符！=（）</target>
        </trans-unit>
        <trans-unit id="0cf02575feb268573af7126dce8280cb15e211e2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; bool operator==()</source>
          <target state="translated">模板&amp;lt;typename T，typename X&amp;gt; bool运算符==（）</target>
        </trans-unit>
        <trans-unit id="9e4a2ae5eb3c0e198e35823d1c8f70f91431b1f2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename X&amp;gt; booloperator！=（const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="0f30d0458999bff566827e2b189a99904d5efe29" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename X&amp;gt; booloperator！=（const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="bc69607c23adef076714a698e275b7b7f3de8a95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">模板&amp;lt;typename T，typename X&amp;gt; booloperator！=（const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
