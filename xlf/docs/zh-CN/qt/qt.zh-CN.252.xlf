<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="0cb02b21861cb5e6aa4dbb2dcb660099089a41bd" translate="yes" xml:space="preserve">
          <source>TiltSensor.calibrate()</source>
          <target state="translated">TiltSensor.calibrate()</target>
        </trans-unit>
        <trans-unit id="e96320baaff58e4e5cf533d7d170b3d0daffae4c" translate="yes" xml:space="preserve">
          <source>TiltShift (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774a2ea91c05d5a25cd55b95d36cfc10a1438dbb" translate="yes" xml:space="preserve">
          <source>TiltShift QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9918c7c8a81842b24699e494bb8d18b3b67fa018" translate="yes" xml:space="preserve">
          <source>TiltShift.blurAmount</source>
          <target state="translated">TiltShift.blurAmount</target>
        </trans-unit>
        <trans-unit id="236c0eddb4c8b0879684cc6c869afa507b512d46" translate="yes" xml:space="preserve">
          <source>TiltShift.focusPosition</source>
          <target state="translated">TiltShift.focusPosition</target>
        </trans-unit>
        <trans-unit id="e27f4063cc5306c35943624a256932eb4a60b6dc" translate="yes" xml:space="preserve">
          <source>TiltShift.focusWidth</source>
          <target state="translated">TiltShift.focusWidth</target>
        </trans-unit>
        <trans-unit id="52aab2aa349628f1f1152a439f8d83b76dce0133" translate="yes" xml:space="preserve">
          <source>TiltShift.isInverted</source>
          <target state="translated">TiltShift.isInverted</target>
        </trans-unit>
        <trans-unit id="b768d2d8a72d7d34005730e5b011c968436f1fcc" translate="yes" xml:space="preserve">
          <source>TiltShift.isVertical</source>
          <target state="translated">TiltShift.isVertical</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="df9f2f189f171f2004391a431fbb4e10d42a352b" translate="yes" xml:space="preserve">
          <source>Time  (in nano seconds)</source>
          <target state="translated">时间(纳秒)</target>
        </trans-unit>
        <trans-unit id="dbe0c64294419b5fef0170f7a67cb31cb0d683dc" translate="yes" xml:space="preserve">
          <source>Time - sort by time modified</source>
          <target state="translated">时间-按修改时间排序</target>
        </trans-unit>
        <trans-unit id="5f86ab85e19a02d7d3c7e99d395f0a203eb9132d" translate="yes" xml:space="preserve">
          <source>Time Zone Offsets</source>
          <target state="translated">时区偏移</target>
        </trans-unit>
        <trans-unit id="d458cd29adea646a8c3463a3bccc45a16b8250d4" translate="yes" xml:space="preserve">
          <source>Time attribute of the object being transferred.</source>
          <target state="translated">被转移对象的时间属性。</target>
        </trans-unit>
        <trans-unit id="eecacec77fd46eb2ec90c3b6a07a5f60b8e4cf81" translate="yes" xml:space="preserve">
          <source>Time stamp of GPS data.</source>
          <target state="translated">GPS数据的时间戳。</target>
        </trans-unit>
        <trans-unit id="0de70db1beefa1adababbd94b08c968a2d4e9f60" translate="yes" xml:space="preserve">
          <source>Time-based, by using timestamp, clock sequence, and MAC network card address (if available) for the node sections</source>
          <target state="translated">基于时间,通过使用时间戳、时钟序列和MAC网卡地址(如果有的话)来实现节点部分</target>
        </trans-unit>
        <trans-unit id="18530197f7f6f6937126d7540f0f7aaa7f8e88f2" translate="yes" xml:space="preserve">
          <source>TimeExample QML extension plugin</source>
          <target state="translated">TimeExample QML扩展插件</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="0fd27374c7411b33295d582909be774e2a78db2c" translate="yes" xml:space="preserve">
          <source>TimeStamp Class</source>
          <target state="translated">时间戳类</target>
        </trans-unit>
        <trans-unit id="81b8c6c243681242dc92a6d859791b3ad56a6c59" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d23495158341989fb87b416edd60e0a2ee4354db" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19ba8490e9c7d4c03208dd2253e23308c9a0136f" translate="yes" xml:space="preserve">
          <source>Timeline (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6f4c5ca4fa4bdaa5166b5bb32fd6629cc6bcb5" translate="yes" xml:space="preserve">
          <source>Timeline QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cacc334413ef3d92e1dd019bcd202b0733fa9f" translate="yes" xml:space="preserve">
          <source>Timeline for controlling animations</source>
          <target state="translated">控制动画的时间轴</target>
        </trans-unit>
        <trans-unit id="c7ba0b071946d47679be0fb2a8d5046b858ea719" translate="yes" xml:space="preserve">
          <source>Timeline.animations</source>
          <target state="translated">Timeline.animations</target>
        </trans-unit>
        <trans-unit id="d677a873281ea725c340a8fc85e4062ba6c6236d" translate="yes" xml:space="preserve">
          <source>Timeline.currentFrame</source>
          <target state="translated">Timeline.currentFrame</target>
        </trans-unit>
        <trans-unit id="14960e955f4f62ad9eb15849dfd4bc0f42b6caae" translate="yes" xml:space="preserve">
          <source>Timeline.enabled</source>
          <target state="translated">Timeline.enabled</target>
        </trans-unit>
        <trans-unit id="a3657c767e95f182f449ca19e8e5e60023a992d6" translate="yes" xml:space="preserve">
          <source>Timeline.endFrame</source>
          <target state="translated">Timeline.endFrame</target>
        </trans-unit>
        <trans-unit id="160c9919021a563df53d4059d84044212b782e69" translate="yes" xml:space="preserve">
          <source>Timeline.keyframes</source>
          <target state="translated">Timeline.keyframes</target>
        </trans-unit>
        <trans-unit id="3b1be07abb9ab86ab5a9d80210c2104599360cfd" translate="yes" xml:space="preserve">
          <source>Timeline.startFrame</source>
          <target state="translated">Timeline.startFrame</target>
        </trans-unit>
        <trans-unit id="5107834cade1a44eb6a3a1fcba24a76bcdf2b13d" translate="yes" xml:space="preserve">
          <source>TimelineAnimation (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a58dd71f1a95f83e6357152a64dfaf24c8b85c" translate="yes" xml:space="preserve">
          <source>TimelineAnimation QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a0836f7296f738ce5e6a1ba680a4ae4379fd81" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.finished()</source>
          <target state="translated">TimelineAnimation.finished()</target>
        </trans-unit>
        <trans-unit id="7d513903f365dee487612f0a51f97c0af4e5f786" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.pingPong</source>
          <target state="translated">TimelineAnimation.pingPong</target>
        </trans-unit>
        <trans-unit id="65885a7a634228e9ea2d6401b354ae3bb1b825f7" translate="yes" xml:space="preserve">
          <source>TimeoutTransition</source>
          <target state="translated">TimeoutTransition</target>
        </trans-unit>
        <trans-unit id="55a6ffceeb1e147d0ce610c500ac4544d992cce3" translate="yes" xml:space="preserve">
          <source>TimeoutTransition (QML type)</source>
          <target state="translated">超时过渡(QML类型</target>
        </trans-unit>
        <trans-unit id="a98ebcbf261e141495b4c747eefd519e988bda40" translate="yes" xml:space="preserve">
          <source>TimeoutTransition QML Type</source>
          <target state="translated">TimeoutTransition QML类型</target>
        </trans-unit>
        <trans-unit id="4fcc01790a0659db1599ae2a60afb494cf792852" translate="yes" xml:space="preserve">
          <source>TimeoutTransition is part of &lt;a href=&quot;qmlstatemachine&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da970b5ad07cc1a02dc0ec779307a5f772ff0450" translate="yes" xml:space="preserve">
          <source>TimeoutTransition.timeout</source>
          <target state="translated">TimeoutTransition.timeout</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="cf87b74e515e894f3a1db836dd9d04b0dbb942ee" translate="yes" xml:space="preserve">
          <source>Timer (QML type)</source>
          <target state="translated">定时器(QML型</target>
        </trans-unit>
        <trans-unit id="ab6f4e525fe8eaa3723f7554b2f61279c783e947" translate="yes" xml:space="preserve">
          <source>Timer QML Type</source>
          <target state="translated">定时器QML类型</target>
        </trans-unit>
        <trans-unit id="5bc4dfb8ac0e86d1780fa4cf1cfd3efe49a8a923" translate="yes" xml:space="preserve">
          <source>Timer events are sent at regular intervals to objects that have started one or more timers. Each timer has a unique identifier. A timer is started with &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;().</source>
          <target state="translated">计时器事件定期发送到已启动一个或多个计时器的对象。每个计时器都有一个唯一的标识符。使用&lt;a href=&quot;qobject#startTimer&quot;&gt;QObject :: startTimer&lt;/a&gt;（）启动计时器。</target>
        </trans-unit>
        <trans-unit id="519ab8eca94f5aae9736637347aaf35527562209" translate="yes" xml:space="preserve">
          <source>Timer events for objects</source>
          <target state="translated">对象的定时器事件</target>
        </trans-unit>
        <trans-unit id="5b5b6ac99e699a92e95ebc7551671535ee232ef7" translate="yes" xml:space="preserve">
          <source>Timer types</source>
          <target state="translated">定时器类型</target>
        </trans-unit>
        <trans-unit id="72ae00dc956dc5a1e6d4aff7c13ecbb7d79e0839" translate="yes" xml:space="preserve">
          <source>Timer.interval</source>
          <target state="translated">Timer.interval</target>
        </trans-unit>
        <trans-unit id="ec45e0cbea8d8b92cad6657591fdf2375ce1baa7" translate="yes" xml:space="preserve">
          <source>Timer.repeat</source>
          <target state="translated">Timer.repeat</target>
        </trans-unit>
        <trans-unit id="b69c30408b43f65301d2ca6bbb1d4253ff625226" translate="yes" xml:space="preserve">
          <source>Timer.restart()</source>
          <target state="translated">Timer.restart()</target>
        </trans-unit>
        <trans-unit id="dea26de05bee1dc789346800c02929ca8161f959" translate="yes" xml:space="preserve">
          <source>Timer.running</source>
          <target state="translated">Timer.running</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="fdded1eca4bccd92062623639fb22ead2d036f83" translate="yes" xml:space="preserve">
          <source>Timer.triggered()</source>
          <target state="translated">Timer.triggered()</target>
        </trans-unit>
        <trans-unit id="b3da4b736217304342be104a49c53e113a53fbaa" translate="yes" xml:space="preserve">
          <source>Timer.triggeredOnStart</source>
          <target state="translated">Timer.triggeredOnStart</target>
        </trans-unit>
        <trans-unit id="497d4d77970dc0f8cf3c3cdf9b8eb52fc9462a39" translate="yes" xml:space="preserve">
          <source>TimerInfo Struct</source>
          <target state="translated">TimerInfo结构</target>
        </trans-unit>
        <trans-unit id="41837d3d18a0f8ec43137476fdd1a1f438dde38e" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo()</source>
          <target state="translated">TimerInfo::TimerInfo()</target>
        </trans-unit>
        <trans-unit id="c2990280c73174d6dd6bcfa47f7ffa872db60cf8" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo(int</source>
          <target state="translated">TimerInfo::TimerInfo(int</target>
        </trans-unit>
        <trans-unit id="7fde205fa220e53c1f989fd481500574b7c371f1" translate="yes" xml:space="preserve">
          <source>TimerInfo::interval</source>
          <target state="translated">TimerInfo::interval</target>
        </trans-unit>
        <trans-unit id="5e0bc1c92ffd3fafc8f5364aecd3aefd01fbb69b" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerId</source>
          <target state="translated">TimerInfo::timerId</target>
        </trans-unit>
        <trans-unit id="f1dff395b38157a299b7aa9757924f8c112f2473" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerType</source>
          <target state="translated">TimerInfo::timerType</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="b5b491aac3bd26ca261e3f188a1a01228d0ddf6b" translate="yes" xml:space="preserve">
          <source>Timestamps values are microseconds since a fixed point. You can use timestamps to see how far apart two sensor readings are.</source>
          <target state="translated">时间戳的值是自固定点以来的微秒数。您可以使用时间戳来查看两个传感器读数的距离。</target>
        </trans-unit>
        <trans-unit id="ecd84ddfb662a7926d34883ae55f89c17a0f006c" translate="yes" xml:space="preserve">
          <source>Timing Considerations</source>
          <target state="translated">时间上的考虑</target>
        </trans-unit>
        <trans-unit id="0df3c5d2117fe663102f4996198057ecd01aab54" translate="yes" xml:space="preserve">
          <source>Tint is most useful when a subtle change is intended to be conveyed due to some event; you can then use tinting to more effectively tune the visible color.</source>
          <target state="translated">当由于某些事件而想要传达一种微妙的变化时,着色是最有用的;然后你可以使用着色来更有效地调整可见的颜色。</target>
        </trans-unit>
        <trans-unit id="d53e4d941a0d8d4d4277ad07d57d91297b8749b7" translate="yes" xml:space="preserve">
          <source>TinyCBOR, version 0.6+patches</source>
          <target state="translated">TinyCBOR,0.6+补丁版本。</target>
        </trans-unit>
        <trans-unit id="9f495111da803097b7b34ec71369826f0c6d2bf4" translate="yes" xml:space="preserve">
          <source>Tip end of a stylus-like device (the narrow end of the pen).</source>
          <target state="translated">类似手写笔的尖端(笔的窄端)。</target>
        </trans-unit>
        <trans-unit id="8911538c52924d154c723c7d1e6f7c9cb22c0e61" translate="yes" xml:space="preserve">
          <source>Tips For QML Application Developers</source>
          <target state="translated">给QML应用开发者的提示</target>
        </trans-unit>
        <trans-unit id="3f1d7cd80b33ea00a648efe4bbe44baacebce1fa" translate="yes" xml:space="preserve">
          <source>Tips for Porting Existing HTML5 Canvas Applications</source>
          <target state="translated">移植现有 HTML5 Canvas 应用程序的技巧</target>
        </trans-unit>
        <trans-unit id="dcd890ad3d53d8eb5a934d619caa4aa389f9c1a5" translate="yes" xml:space="preserve">
          <source>Tips for Using Layouts</source>
          <target state="translated">使用布局的技巧</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">标题栏</target>
        </trans-unit>
        <trans-unit id="cda33cd4c2e9a12d11bb3188904556c81e873947" translate="yes" xml:space="preserve">
          <source>Title for the menu as a submenu or in a menubar.</source>
          <target state="translated">作为子菜单或menubar的菜单标题。</target>
        </trans-unit>
        <trans-unit id="608fe97562074e03db3a4737b42d1567b2d29e15" translate="yes" xml:space="preserve">
          <source>Title from column axis</source>
          <target state="translated">标题从列轴</target>
        </trans-unit>
        <trans-unit id="049f3e1ee87dde6ecea41a19b6ec22bdfecb597f" translate="yes" xml:space="preserve">
          <source>Title from row axis</source>
          <target state="translated">标题来自行轴</target>
        </trans-unit>
        <trans-unit id="aba70763c45afbe7628d9df71fb42e84afbcb149" translate="yes" xml:space="preserve">
          <source>Title from value axis</source>
          <target state="translated">来自价值轴的标题</target>
        </trans-unit>
        <trans-unit id="f35e8ff8046388721784170578e6dee8fd68a29f" translate="yes" xml:space="preserve">
          <source>Title from x-axis</source>
          <target state="translated">标题来自X轴</target>
        </trans-unit>
        <trans-unit id="f1a0dfcc4afcf4f96d1a178a82f77a6981428d49" translate="yes" xml:space="preserve">
          <source>Title from y-axis</source>
          <target state="translated">标题从Y轴开始</target>
        </trans-unit>
        <trans-unit id="b5e8cd54095e433e45e8483a1d49349d827862f1" translate="yes" xml:space="preserve">
          <source>Title from z-axis</source>
          <target state="translated">标题来自Z轴</target>
        </trans-unit>
        <trans-unit id="7eb9c9460144dbc38f38419d16f277f5cb3bdff7" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;use&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f75cecf904f02abe41d1a56b16a1a591ae2602c" translate="yes" xml:space="preserve">
          <source>To abort saving due to an application error, call &lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;(), so that even a call to &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() later on will not save.</source>
          <target state="translated">要由于应用程序错误而中止保存，请调用&lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;（），这样即使以后再调用&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）也不会保存。</target>
        </trans-unit>
        <trans-unit id="97e5691d0f32e4dfd78ace3c639c1d308ab03c22" translate="yes" xml:space="preserve">
          <source>To accept or reject a request, set &lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;action&lt;/a&gt; to &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; or &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt;.</source>
          <target state="translated">要接受或拒绝请求，请将&lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;操作&lt;/a&gt;设置为 &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; 或 &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e293dbb3d776a5b1f2ed284c6fca2a8d3bc965bd" translate="yes" xml:space="preserve">
          <source>To accept other forms of data, these functions must be reimplemented:</source>
          <target state="translated">要接受其他形式的数据,必须重新实现这些函数。</target>
        </trans-unit>
        <trans-unit id="165782c939ab77fa1f04d4150188d5bff4c40caf" translate="yes" xml:space="preserve">
          <source>To access a database with &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; or &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, create and open one or more database connections. Database connections are normally identified by connection name,</source>
          <target state="translated">要使用&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;或&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;访问数据库，请创建并打开一个或多个数据库连接。数据库连接通常由连接名称标识，</target>
        </trans-unit>
        <trans-unit id="45a35c3dccd962d10443e88f26ad0c7b9a7ad91d" translate="yes" xml:space="preserve">
          <source>To access a database with &lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; or &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, create and open one or more database connections. Database connections are normally identified by connection name,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41116874bc1abc3b9f368a68ec9778bf63a52676" translate="yes" xml:space="preserve">
          <source>To access a specific row, the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#getRow-method&quot;&gt;getRow()&lt;/a&gt; function can be used. It's also possible to access the model's JavaScript data directly via the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#rows-prop&quot;&gt;rows&lt;/a&gt; property, but it is not possible to modify the model data this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6c415b7285bddbdd278bf09b46c96af58892f5" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as many implementations export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">要访问其他功能，应用程序可以使用&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt;（）和vkGetDeviceProcAddr（）。应用程序还可以决定直接链接到Vulkan库，因为许多实现会导出核心命令的功能符号。有关更多信息，请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;vkGetInstanceProcAddr的手册页&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d5be5fdb6e2b3a7c9eaf46b7f8dca39c132d2e9" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as platforms with an appropriate loader will typically export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">要访问其他功能，应用程序可以使用&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt;（）和vkGetDeviceProcAddr（）。应用程序还可以决定直接链接到Vulkan库，因为具有适当加载程序的平台通常会为核心命令导出功能符号。有关更多信息，请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;vkGetInstanceProcAddr的手册页&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2205cee1ece12f6b7a1282a11830cf39346886e" translate="yes" xml:space="preserve">
          <source>To access array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">要访问数组元素，请改用&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex，const QJSValue＆value）&lt;/a&gt;重载。</target>
        </trans-unit>
        <trans-unit id="b2c4c23a2465e91f3424ab7d6bb54b4b2ab91828" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'path.length' indicates the number of objects and 'path[index starting from zero]' gives the actual object.</source>
          <target state="translated">要访问单个片段,你可以使用标准的列表访问器。'path.length'表示对象的数量,'path[index from zero]'表示实际的对象。</target>
        </trans-unit>
        <trans-unit id="84ad53d66c568536d8e5fd405545ae4e9ac4aba0" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'segments.length' indicates the number of objects and 'segments[index starting from zero]' gives the actual objects.</source>
          <target state="translated">要访问单个段,可以使用标准的列表访问器。'segment.length'表示对象的数量,'segment[index from zero]'表示实际的对象。</target>
        </trans-unit>
        <trans-unit id="0ed7ace94bb589e27eba567ca1aa49d7d1a82b12" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="translated">要访问&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;包装的 &lt;code&gt;VkInstance&lt;/code&gt; 句柄，请调用&lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;（）。要解决Vulkan函数，请调用&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;（）。对于核心Vulkan命令，不需要手动解析，因为它们是通过&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;和&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;对象提供的，这些对象可以通过&lt;a href=&quot;qvulkaninstance#functions&quot;&gt;function&lt;/a&gt;（）和&lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;（）访问。</target>
        </trans-unit>
        <trans-unit id="100a3fef37a40843bb19d6facfa25ce617df754a" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the QVulkanInstance wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecd238d4dc3239eae697d061e4bc002d48cbc55" translate="yes" xml:space="preserve">
          <source>To access the data returned by a query, use value(int). Each field in the data returned by a &lt;code&gt;SELECT&lt;/code&gt; statement is accessed by passing the field's position in the statement, starting from 0. This makes using &lt;code&gt;SELECT *&lt;/code&gt; queries inadvisable because the order of the fields returned is indeterminate.</source>
          <target state="translated">要访问查询返回的数据，请使用value（int）。 &lt;code&gt;SELECT&lt;/code&gt; 语句返回的数据中的每个字段都可以通过传递该字段在语句中的位置（从0开始）来访问。这使得使用 &lt;code&gt;SELECT *&lt;/code&gt; 查询是不可取的，因为返回字段的顺序不确定。</target>
        </trans-unit>
        <trans-unit id="029da581aa9bfb21eda3da3cea8f7710134bc973" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; to access the child items.</source>
          <target state="translated">要访问分层类别模型，必须使用&lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;来访问子项。</target>
        </trans-unit>
        <trans-unit id="785f12eb79d50d7e0d3b8888c0839dd54e5b3e20" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a DelegateModel to access the child items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b6c42d27b7cd15328ca9a50a97846312eb051" translate="yes" xml:space="preserve">
          <source>To access the strings in a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; returned by an &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery evaluation&lt;/a&gt;, the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; must be accessed with the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt; from the instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; that was used for the evaluation.</source>
          <target state="translated">访问一个字符串&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;返回由&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery的评价&lt;/a&gt;中，&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;必须与被访问&lt;a href=&quot;qxmlnamepool&quot;&gt;的名字池&lt;/a&gt;从实例&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;曾用于评价。</target>
        </trans-unit>
        <trans-unit id="82adea037c6efc168185274af650eb77ab634cfe" translate="yes" xml:space="preserve">
          <source>To access top-level items in a model, specify a null model index as the parent index with &lt;code&gt;QModelIndex()&lt;/code&gt;.</source>
          <target state="translated">要访问模型中的顶级项目，请使用 &lt;code&gt;QModelIndex()&lt;/code&gt; 将空模型索引指定为父索引。</target>
        </trans-unit>
        <trans-unit id="7a6a0224dc1e99c5a439537b98f55da8a83b7075" translate="yes" xml:space="preserve">
          <source>To accommodate new functionality, the datastream serialization format of some Qt classes has changed in some versions of Qt. If you want to read data that was created by an earlier version of Qt, or write data that can be read by a program that was compiled with an earlier version of Qt, use this function to modify the serialization format used by &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;.</source>
          <target state="translated">为了适应新功能，某些Qt类的数据流序列化格式在某些版本的Qt中已更改。如果要读取由早期版本的Qt创建的数据，或写入可以由使用早期版本的Qt编译的程序读取的数据，请使用此函数修改&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;使用的序列化格式。</target>
        </trans-unit>
        <trans-unit id="6519201e41ad153fe9e9b937057b005076d3ae1d" translate="yes" xml:space="preserve">
          <source>To accommodate the &quot;Ask user&quot; use case the default configuration can be of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::UserChoice&lt;/a&gt;. A user choice configuration is resolved as part of the &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;() call. Note that a &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt; configuration is only ever returned via &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;() and not &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;().</source>
          <target state="translated">为了适应&amp;ldquo;询问用户&amp;rdquo;用例，默认配置可以是&lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration :: UserChoice&lt;/a&gt;类型。用户选择配置在&lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession :: open&lt;/a&gt;（）调用中得以解决。请注意，仅通过&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration&lt;/a&gt;（）而不是&lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager :: allConfigurations&lt;/a&gt;（）返回&lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="b68df3ee02ac902304a31eb7444cf0c358e42806" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#selectClientCertificate-signal&quot;&gt;WebEngineView.selectClientCertificate&lt;/a&gt; signals and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fd8f76a0c68751f3cbb80b331461d2b50f4b9a" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; signal and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="translated">要激活对客户端证书的支持，应用程序需要侦听&lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage :: selectClientCertificate&lt;/a&gt;信号并选择提供的证书之一。对于可以导航到不受信任网站的应用程序，建议始终向用户提供选择，然后再将其唯一标识给远程服务器。</target>
        </trans-unit>
        <trans-unit id="008d2023a3e72262ce922c41fdfbfd7cb8d07295" translate="yes" xml:space="preserve">
          <source>To activate the developer tools, start an application that uses Qt WebEngine with the command-line arguments:</source>
          <target state="translated">要激活开发者工具,请使用命令行参数启动一个使用Qt WebEngine的应用程序。</target>
        </trans-unit>
        <trans-unit id="ea17decfc6fb9b22fd5ae885d1a70a6c0c48cbc9" translate="yes" xml:space="preserve">
          <source>To actually make use of the custom URL scheme, a &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; must be created and registered in a profile.</source>
          <target state="translated">要实际使用自定义URL方案，必须创建&lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt;并将其注册在配置文件中。</target>
        </trans-unit>
        <trans-unit id="233e5076604c8d35a691dca9ba363ed57d67870b" translate="yes" xml:space="preserve">
          <source>To add &quot;What's This?&quot; text to a widget or an action, you simply call &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget::setWhatsThis&lt;/a&gt;() or &lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction::setWhatsThis&lt;/a&gt;().</source>
          <target state="translated">添加&amp;ldquo;这是什么？&amp;rdquo; 文本到小部件或操作，只需调用&lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget :: setWhatsThis&lt;/a&gt;（）或&lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction :: setWhatsThis&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="561cadd3bd982353e84991715bd15854465fde6e" translate="yes" xml:space="preserve">
          <source>To add a dock widget to a form, drag one from the &lt;b&gt;Containers&lt;/b&gt; section of the widget box, and drop it onto the main form area. Do not add the dock widget to an existing layout. Instead, open the &lt;b&gt;Property Editor&lt;/b&gt; and enable the &lt;b&gt;docked&lt;/b&gt; property to place it in a dock area.</source>
          <target state="translated">要将停靠窗口小部件添加到表单，请从窗口小部件框的&amp;ldquo; &lt;b&gt;容器&amp;rdquo;&lt;/b&gt;部分拖动一个窗口小部件，然后将其拖放到主表单区域。不要将停靠小部件添加到现有布局。而是打开&lt;b&gt;属性编辑器&lt;/b&gt;并启用&lt;b&gt;停靠的&lt;/b&gt;属性以将其放置在停靠区域中。</target>
        </trans-unit>
        <trans-unit id="35b4d064014acabeb9316dc5a73f08b604540da5" translate="yes" xml:space="preserve">
          <source>To add a dynamic property, click on the &lt;b&gt;Add&lt;/b&gt; button</source>
          <target state="translated">要添加动态属性，请单击&amp;ldquo; &lt;b&gt;添加&amp;rdquo;&lt;/b&gt;按钮</target>
        </trans-unit>
        <trans-unit id="a8a60b49e5dbd819d54aa15f3dd17f6a59fcd20d" translate="yes" xml:space="preserve">
          <source>To add a menu bar to the main window, we simply create the menus, and add them to the main window's menu bar. Note that the &lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow::menuBar&lt;/a&gt;() function will automatically create the menu bar the first time it is called. You can also call &lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow::setMenuBar&lt;/a&gt;() to use a custom menu bar in the main window.</source>
          <target state="translated">要将菜单栏添加到主窗口，我们只需创建菜单，然后将其添加到主窗口的菜单栏即可。请注意，&lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow :: menuBar&lt;/a&gt;（）函数将在首次调用时自动创建菜单栏。您也可以调用&lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow :: setMenuBar&lt;/a&gt;（）在主窗口中使用自定义菜单栏。</target>
        </trans-unit>
        <trans-unit id="13da36d650412cd07fe7d00c274a591a7dda9dab" translate="yes" xml:space="preserve">
          <source>To add a new page, select &lt;b&gt;Insert Page&lt;/b&gt; from the toolbox widget's context menu. You can add the page before or after the current page.</source>
          <target state="translated">要添加新页面，请从工具箱小部件的上下文菜单中选择&amp;ldquo; &lt;b&gt;插入页面&lt;/b&gt; &amp;rdquo;。您可以在当前页面之前或之后添加页面。</target>
        </trans-unit>
        <trans-unit id="14b0e14dda6ed3e43b5d89d3c4cbdd43bcc989bb" translate="yes" xml:space="preserve">
          <source>To add a new tab:</source>
          <target state="translated">要添加一个新的标签。</target>
        </trans-unit>
        <trans-unit id="25868537480596e4f22730b64ee229ad6be0c2b0" translate="yes" xml:space="preserve">
          <source>To add a placeholder, select an object of a suitable base class and choose &lt;b&gt;Promote to ...&lt;/b&gt; from the form's context menu. After entering the class name and header file in the lower part of the dialog, choose &lt;b&gt;Add&lt;/b&gt;. The placeholder class will now appear along with the base class in the upper list. Click the &lt;b&gt;Promote&lt;/b&gt; button to accept this choice.</source>
          <target state="translated">要添加占位符，请选择合适的基类的对象，然后从表单的上下文菜单中选择&amp;ldquo; &lt;b&gt;升级为...&lt;/b&gt; &amp;rdquo;。在对话框的下部输入类名和头文件后，选择&lt;b&gt;添加&lt;/b&gt;。现在，占位符类将与基类一起出现在上方列表中。点击&lt;b&gt;推广&lt;/b&gt;按钮接受这个选择。</target>
        </trans-unit>
        <trans-unit id="58ed9015ce139add70c078b408b123047c1f1c8b" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="translated">要添加系统托盘条目，请创建&lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;对象，调用&lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;（）以提供图标的上下文菜单，并调用&lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;（）以使其在系统托盘中可见。可以使用&lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;（）随时显示状态通知消息（&amp;ldquo;气球消息&amp;rdquo; ）。</target>
        </trans-unit>
        <trans-unit id="b9bacb7deb5913f022aa849724af968ff5bd30af" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a QSystemTrayIcon object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba896642afdd8acf0fd8fdf53c25f05373dad0d2" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="translated">例如，要将视觉效果添加到&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;，可以使用一种标准效果，也可以通过创建&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;的子类来创建自己的效果。然后可以使用&lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem :: setGraphicsEffect&lt;/a&gt;（）将效果安装在项目上。</target>
        </trans-unit>
        <trans-unit id="f59fc17a85900b1d7cdc39eab7beb3419faaf471" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of QGraphicsEffect. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b1d0f0c7cea6647f41635633e72115c21db2de" translate="yes" xml:space="preserve">
          <source>To add an action to a menu or a toolbar, simply press the left mouse button over the action in the action editor, and drag it to the preferred location.</source>
          <target state="translated">要将一个动作添加到菜单或工具栏,只需在动作编辑器中的动作上按下鼠标左键,然后将其拖动到首选位置即可。</target>
        </trans-unit>
        <trans-unit id="d47ec3809bf32413165beac2f60d6c251fc49a17" translate="yes" xml:space="preserve">
          <source>To add content to a group box, you can reparent it to its &lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; property.</source>
          <target state="translated">要将内容添加到组框中，您可以将其&lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;重新&lt;/a&gt;添加到其contentItem属性。</target>
        </trans-unit>
        <trans-unit id="22a6d502fb12e63290739a33467a08706c0717b5" translate="yes" xml:space="preserve">
          <source>To add custom types to the testdata, the type must be registered with &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; via &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;().</source>
          <target state="translated">要将自定义类型添加到测试数据，必须通过&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）向&lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;注册该类型。</target>
        </trans-unit>
        <trans-unit id="5f468538ee348bda3dc5cac209e1ea7fbdec6082" translate="yes" xml:space="preserve">
          <source>To add custom types to the testdata, the type must be registered with &lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaType&lt;/a&gt; via &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e7f5dfddfb2cef4b2c5072880e73ac2ffa812b" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButton() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">要向向导中添加其他按钮（例如，&amp;ldquo; &lt;b&gt;打印&amp;rdquo;&lt;/b&gt;按钮），一种方法是使用&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;到&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;调用setButton（），并使用&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;到&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt;选项使按钮可见。</target>
        </trans-unit>
        <trans-unit id="e06f9796d195ee4589416c593fba8526903832e2" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButtonText() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; to set their text, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;, and/or &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">要向向导添加其他按钮（例如，&amp;ldquo; &lt;b&gt;打印&amp;rdquo;&lt;/b&gt;按钮），一种方法是使用&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;，&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;或&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;调用setButtonText（）来设置其文本，并使用&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;，&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;和/或&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt;使按钮可见选项。</target>
        </trans-unit>
        <trans-unit id="5a1a13a545c6c805e0464273f1aa3a98701d6dad" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="translated">要将项目添加到场景，首先需要构造一个&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;对象。然后，您有两个选择：通过调用&lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;（）添加现有的&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;对象，或者可以调用便捷函数之一&lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;（ ）或&lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;（），它们都返回指向新添加的项目的指针。使用这些功能添加的项目的尺寸是相对于项目的坐标系的，并且项目位置在场景中被初始化为（0，0）。</target>
        </trans-unit>
        <trans-unit id="f7e3032bf91747ac6350f87afd86d3a8f34b5d2f" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a QGraphicsScene object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b453f1e6a25e6a7eaa1b1c990a34922fc7eb7771" translate="yes" xml:space="preserve">
          <source>To add multiple certificates, use &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;().</source>
          <target state="translated">要添加多个证书，请使用&lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="4fe72e2400ebc265c8f829e16554193020f21d10" translate="yes" xml:space="preserve">
          <source>To add new rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#appendRow-method&quot;&gt;appendRow()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#insertRow-method&quot;&gt;insertRow()&lt;/a&gt;. To modify existing rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#setRow-method&quot;&gt;setRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#moveRow-method&quot;&gt;moveRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#removeRow-method&quot;&gt;removeRow()&lt;/a&gt;, and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#clear-method&quot;&gt;clear()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bfae2ccc4b0487573533a6fd99fc094617d42f" translate="yes" xml:space="preserve">
          <source>To add or move an item to a scene, call &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene::addItem&lt;/a&gt;().</source>
          <target state="translated">要将项目添加或移动到场景，请调用&lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene :: addItem&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="4a59b8530984a752b12a22f9dc3e1c2e98daea8b" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; on the view:</source>
          <target state="translated">为了向 &lt;code&gt;MyItemModel&lt;/code&gt; 添加排序和过滤支持，我们需要创建一个&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;，使用 &lt;code&gt;MyItemModel&lt;/code&gt; 作为参数调用&lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;（），然后在视图上安装&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="709a0a3e936a9424ab4ea89d0e316de86eaf5712" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a QSortFilterProxyModel, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the QSortFilterProxyModel on the view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a585b1b5bdff862330fddcbf31d8ee821f724b2" translate="yes" xml:space="preserve">
          <source>To add support for an additional language, see &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;Adding New Keyboard Layouts&lt;/a&gt;.</source>
          <target state="translated">要增加对其他语言的支持，请参阅&amp;ldquo; &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;添加新的键盘布局&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86823dd473661cd1a813e063afc2901e0ad24fb8" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and implement the functions listed in the table below.</source>
          <target state="translated">要为Qt添加对另一种编码的支持，请创建&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;的子类并实现下表中列出的功能。</target>
        </trans-unit>
        <trans-unit id="9f2dad4a39285e1d8df972bed0536265641d4e30" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of QTextCodec and implement the functions listed in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f249c6889f0d4684fff984088d0da53c150d382" translate="yes" xml:space="preserve">
          <source>To add support for drawing of new datatypes and item data roles, it is necessary to create a custom delegate. But if you only need to support the datatypes implemented by the default delegate, a custom style does not need an accompanying delegate. The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class description gives more information on custom delegates.</source>
          <target state="translated">为了增加对绘制新数据类型和项目数据角色的支持，必须创建一个自定义委托。但是，如果仅需要支持默认委托实现的数据类型，则自定义样式不需要随附的委托。该&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;类描述给出了自定义委托的更多信息。</target>
        </trans-unit>
        <trans-unit id="e12e0ebfdd72480c154219ba3eb8fe2ef43ff91a" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from &lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt; to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="translated">为了增加对新手势的支持，您需要从&lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt;派生以创建自定义识别器类，构造该类的实例，然后通过调用&lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer :: registerRecognizer&lt;/a&gt;（）在应用程序中注册它。您还可以将&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;子类化以创建自定义手势类，或依赖于动态属性来表达要处理的手势的特定细节。</target>
        </trans-unit>
        <trans-unit id="e570c43909c161795c53e336f51abdb562daacc5" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from QGestureRecognizer to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f990f02b150bfd773ce6dea0ed57068dcebf9e" translate="yes" xml:space="preserve">
          <source>To add times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="translated">要添加精度大于1毫秒的时间，请使用&lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="d5ddbde2db777dbe8defd68af3c9749e41126dd9" translate="yes" xml:space="preserve">
          <source>To aid in such situations, a &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object can be instructed to cache the frames, at the added memory cost of keeping the frames in memory for the lifetime of the object.</source>
          <target state="translated">为了在这种情况下提供帮助，可以指示&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;对象缓存帧，这会增加在对象的生存期内将帧保留在内存中的内存消耗。</target>
        </trans-unit>
        <trans-unit id="46eaf35a925c107168e3bc75b42c44c3e12cf019" translate="yes" xml:space="preserve">
          <source>To aid writing a particle vertex shader, the following GLSL code is prepended to your vertex shader:</source>
          <target state="translated">为了帮助编写一个粒子顶点着色器,下面的GLSL代码被添加到你的顶点着色器中。</target>
        </trans-unit>
        <trans-unit id="eaf59ced55383f90bc336e2d1de3d953f4122944" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; instance as an argument.</source>
          <target state="translated">若要使视频等元素以全屏模式显示，应用程序必须设置&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: FullScreenSupportEnabled&lt;/a&gt;并连接到&lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequested&lt;/a&gt;，后者将&lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt;实例作为参数。</target>
        </trans-unit>
        <trans-unit id="799a4161751af711f231e01951e5560bf1c8d769" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a QWebEngineFullScreenRequest instance as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b28023a2f1c9829a19172150be05295545c31" translate="yes" xml:space="preserve">
          <source>To allow for measurements in all 6 directions, negative values are used.</source>
          <target state="translated">为了能够在所有6个方向上进行测量,使用负值。</target>
        </trans-unit>
        <trans-unit id="7ce9be0b2f928ffb8698ce47f34350b16ee61b1d" translate="yes" xml:space="preserve">
          <source>To allow the user to drop either internal or external items within the view, set the view's &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport()&lt;/a&gt;'s &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">要允许用户在视图中放置内部或外部项目，请将视图的&lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport（）&lt;/a&gt;的&lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt;属性设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d551f839da29ddb5f305afe593c0fccd5bce6dc" translate="yes" xml:space="preserve">
          <source>To append columns, insert them after the last column.</source>
          <target state="translated">要追加列,请在最后一列之后插入。</target>
        </trans-unit>
        <trans-unit id="a73d422347ff54dd6a4673e3cd6516f7eef7cfc7" translate="yes" xml:space="preserve">
          <source>To append rows to another parent, move them to after the last row.</source>
          <target state="translated">要将行追加到另一个父行,请将它们移动到最后一行之后。</target>
        </trans-unit>
        <trans-unit id="dcf058086e00e8943938cba4b0e39d109e2d1d39" translate="yes" xml:space="preserve">
          <source>To append rows, insert them after the last row.</source>
          <target state="translated">要追加行,请在最后一行之后插入。</target>
        </trans-unit>
        <trans-unit id="c30043e0c000838853f9933b478f1575d2d6a549" translate="yes" xml:space="preserve">
          <source>To apply a layout, you can select your choice of layout from the toolbar shown on the left, or from the context menu shown below.</source>
          <target state="translated">要应用布局,您可以从左侧显示的工具栏或从下图所示的上下文菜单中选择您所选择的布局。</target>
        </trans-unit>
        <trans-unit id="8e3341387e2959d1acc8d88687351b3b1206da01" translate="yes" xml:space="preserve">
          <source>To apply a quantifier to more than just the preceding character, use parentheses to group characters together in an expression. For example, &lt;b&gt;tag+&lt;/b&gt; matches a 't' followed by an 'a' followed by at least one 'g', whereas &lt;b&gt;(tag)+&lt;/b&gt; matches at least one occurrence of 'tag'.</source>
          <target state="translated">若要将量词不仅应用于前一个字符，请使用括号将表达式中的字符组合在一起。例如，&lt;b&gt;tag +&lt;/b&gt;匹配一个&amp;ldquo; t&amp;rdquo;，后跟一个&amp;ldquo; a&amp;rdquo;，然后是至少一个&amp;ldquo; g&amp;rdquo;，而&lt;b&gt;（tag）+&lt;/b&gt;匹配至少一个出现的&amp;ldquo; tag&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="aaa791dd6655832bec762a0f3bc8e0114bfcfb3e" translate="yes" xml:space="preserve">
          <source>To apply a skeleton to a model, set the model's &lt;a href=&quot;qml-qtquick3d-model#skeleton-prop&quot;&gt;skeleton&lt;/a&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d681eb2e8cceb01fee405a8e8a77c8a047495b5" translate="yes" xml:space="preserve">
          <source>To apply the same-origin policy to a custom URL scheme, &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; must be able to compute the origin (host and port combination) of a URL. The &lt;code&gt;Host...&lt;/code&gt; options indicate that the URL scheme conforms to the standard URL syntax (like &lt;code&gt;http&lt;/code&gt;) and automatically enable the same-origin policy. The &lt;code&gt;Path&lt;/code&gt; option indicates that the URL scheme uses a non-standard syntax and that the same-origin policy cannot be applied.</source>
          <target state="translated">要将同源策略应用于自定义URL方案，&lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt;必须能够计算URL 的来源（主机和端口组合）。该 &lt;code&gt;Host...&lt;/code&gt; 选项显示的URL方案符合标准的URL语法（如 &lt;code&gt;http&lt;/code&gt; ），并自动启用同源策略。&amp;ldquo; &lt;code&gt;Path&lt;/code&gt; 选项指示URL方案使用非标准语法，并且不能应用同源策略。</target>
        </trans-unit>
        <trans-unit id="95617429467cc07f36769ae00641408513f1f44f" translate="yes" xml:space="preserve">
          <source>To assign a different material slot to the object, or to assign several material slots to the same object, follow the steps below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154f875a2f422ad52116c20e853c9e5a3c663de4" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">要将混合树与&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator关联&lt;/a&gt;，请将动画师的&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;属性设置为指向混合树的根节点：</target>
        </trans-unit>
        <trans-unit id="de7b8ca0a938cf273383d5b93f4b49e9998f03f6" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">要将混合树与&lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator关联&lt;/a&gt;，请将动画师的&lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;属性设置为指向混合树的根节点：</target>
        </trans-unit>
        <trans-unit id="b8ec3ae39866ae6770f27cc19cf618f176d7bfe3" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a BlendedClipAnimator, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c90923fb40ded56d1065b8ce7165af43d65b98" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a QBlendedClipAnimator, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b018f5df0c693b157c3cd59c041fd1f944e039c" translate="yes" xml:space="preserve">
          <source>To associate a cursor with a widget, use &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;(). To associate a cursor with all widgets (normally for a short period of time), use &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">要将光标与窗口小部件相关联，请使用&lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget :: setCursor&lt;/a&gt;（）。要将光标与所有窗口小部件关联（通常在短时间内），请使用&lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication :: setOverrideCursor&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="d802e7742bada638ebe4da7c194b6d3c78904deb" translate="yes" xml:space="preserve">
          <source>To asynchronously invoke the &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick()&lt;/a&gt; slot on a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;:</source>
          <target state="translated">要异步调用&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;上的&lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick（）&lt;/a&gt;插槽：</target>
        </trans-unit>
        <trans-unit id="13b730de938257ee3ff62ec8e1d5637705a5fa57" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="translated">要基于&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;模型的内容（例如&lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;项）自动生成地图叠加层对象，可以使用&lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt;类型。它接受任何地图叠加层对象作为其委托，并且只能在&lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map中&lt;/a&gt;创建。</target>
        </trans-unit>
        <trans-unit id="6079f43a6def834203382c7dcfb35bdcb164b54e" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a ListModel item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ed8fa1c3b52b110e11936cd2f817f4dc1b6c41" translate="yes" xml:space="preserve">
          <source>To avoid a race condition, it is important to call this function</source>
          <target state="translated">为了避免出现竞赛条件,重要的是要调用这个函数</target>
        </trans-unit>
        <trans-unit id="f8ae891408b86343e18d1f68e67581c3ea3187cb" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other scripts executed on the page, the world in which the script is run is specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9981b8a029072a3f501de8f7b8d459614ddd0cc2" translate="yes" xml:space="preserve">
          <source>To avoid confusion with the controls in the module itself, we'll call the file &lt;code&gt;MyButton.qml&lt;/code&gt;. To use the control in your application, refer to it by its filename:</source>
          <target state="translated">为了避免与模块本身中的控件混淆，我们将文件命名为 &lt;code&gt;MyButton.qml&lt;/code&gt; 。要在应用程序中使用控件，请通过其文件名引用它：</target>
        </trans-unit>
        <trans-unit id="9bc91f87f8488391c70dd52a85a00bdc8ca13ccc" translate="yes" xml:space="preserve">
          <source>To avoid failures when your list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling other member functions. If you must pass an index value that might not be in the valid range, check that it is less than the value returned by &lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;() but</source>
          <target state="translated">为避免列表为空时失败，请在调用其他成员函数之前先调用&lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）。如果必须传递一个可能不在有效范围内的索引值，请检查该值是否小于&lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;（）返回的值，但</target>
        </trans-unit>
        <trans-unit id="09e95b506f60a8cd8c466637a56d779a0f15991c" translate="yes" xml:space="preserve">
          <source>To avoid memory leaks, the previous chart must be deleted.</source>
          <target state="translated">为了避免内存泄漏,必须删除之前的图表。</target>
        </trans-unit>
        <trans-unit id="957aa62e5c225e7652aa8a3818c966a33d3038ea" translate="yes" xml:space="preserve">
          <source>To avoid potential conflicts like these, give distinctive names to header files that will be precompiled.</source>
          <target state="translated">为了避免类似的潜在冲突,请给将被预编译的头文件起一个独特的名字。</target>
        </trans-unit>
        <trans-unit id="27e04a7bff0648b0b326c1df2d7bb891d5ce56fe" translate="yes" xml:space="preserve">
          <source>To avoid race conditions and read/write issues from two threads it is important that the renderer and the item never read or write shared variables. Communication between the item and the renderer should primarily happen via the &lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject::Renderer::synchronize&lt;/a&gt;() function. This function will be called on the render thread while the GUI thread is blocked.</source>
          <target state="translated">为了避免争用情况和两个线程的读/写问题，重要的是渲染器和项目永远不要读或写共享变量。项目和渲染器之间的通信应首先通过&lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject :: Renderer :: synchronize&lt;/a&gt;（）函数进行。GUI线程被阻塞时，将在渲染线程上调用此函数。</target>
        </trans-unit>
        <trans-unit id="2c8c1403f9d043007f4c1777ca2fc261157b5bf9" translate="yes" xml:space="preserve">
          <source>To avoid relying on dynamic array sizes, applications can use &lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt; when declaring arrays. This is guaranteed to be always equal to or greater than the value returned from &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;(). Such arrays can then be indexed by the value returned from this function.</source>
          <target state="translated">为了避免依赖动态数组大小，应用程序可以在声明数组时使用&lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt;。保证始终等于或大于从&lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;并发帧计数&lt;/a&gt;（）返回的值。然后可以通过此函数返回的值对此类数组进行索引。</target>
        </trans-unit>
        <trans-unit id="41a42386ac3ec977e79c0969af7a7bd2be274175" translate="yes" xml:space="preserve">
          <source>To avoid seeing the items loading progressively set &lt;code&gt;visible&lt;/code&gt; appropriately, e.g.</source>
          <target state="translated">为了避免看到加载的物品逐渐设置为 &lt;code&gt;visible&lt;/code&gt; ，例如</target>
        </trans-unit>
        <trans-unit id="97433bca212c3e78ab005df4e720c46fd0a9e3d7" translate="yes" xml:space="preserve">
          <source>To avoid that, the JIT is disabled by default if you compile Qt in debug mode. It is possible to override the default and enable or disable the JIT usage (both in debug or release mode) by setting the &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; environment variable to a non-zero or zero value respectively.</source>
          <target state="translated">为了避免这种情况，如果在调试模式下编译Qt，则默认情况下将禁用JIT。通过将 &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; 环境变量分别设置为非零或零值，可以覆盖默认值并启用或禁用JIT使用（在调试或释放模式下）。</target>
        </trans-unit>
        <trans-unit id="5d01c805e5387f23e7a4903c9f47d427438deefd" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; instance has been created.</source>
          <target state="translated">为避免丢失信号发射，建议在创建&lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt;实例后立即连接到该信号。</target>
        </trans-unit>
        <trans-unit id="0b7c1f1ca365a926ae81d8dc9e75d954dd9ddbb3" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; instance has been created.</source>
          <target state="translated">为避免丢失信号发射，建议在创建 &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; 实例后立即连接到该信号。</target>
        </trans-unit>
        <trans-unit id="6f092283de36ddde7aff37726fef4ccfcdf10c32" translate="yes" xml:space="preserve">
          <source>To avoid the need to know (or check) what the default sensor for a type is, the system will use the default sensor for a type. Most of the time this is what the app developer wants to do. If the app developer wants to select a specific sensor, he needs to call the &lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor::setIdentifier&lt;/a&gt;() method before starting the sensor so that the appropriate backend is used.</source>
          <target state="translated">为了避免需要知道（或检查）某种类型的默认传感器，系统将使用该缺省传感器。在大多数情况下，这就是应用程序开发人员想要做的事情。如果应用程序开发人员想要选择特定的传感器，则需要在启动传感器之前调用&lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor :: setIdentifier&lt;/a&gt;（）方法，以便使用适当的后端。</target>
        </trans-unit>
        <trans-unit id="5ffe4dad6e0465a198ba9c298e061050211df72c" translate="yes" xml:space="preserve">
          <source>To avoid the overhead of creating the layout the first time you draw the &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; after making changes, you can use the prepare() function and pass in the</source>
          <target state="translated">为了避免在进行更改后第一次绘制&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt;时创建布局的开销，可以使用prepare（）函数并传入</target>
        </trans-unit>
        <trans-unit id="852ddc71baa7f459435c9304ccb69b050b5d7e83" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;hash[i]&lt;/code&gt; with &lt;code&gt;hash.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">为避免此问题，在上面的代码 &lt;code&gt;hash.value(i)&lt;/code&gt; &lt;code&gt;hash[i]&lt;/code&gt; 替换为hash.value（i）。</target>
        </trans-unit>
        <trans-unit id="1da48f22fabbeb7f047c06a4f5d064ed5c108281" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;map[i]&lt;/code&gt; with &lt;code&gt;map.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">为避免此问题，在上面的代码 &lt;code&gt;map.value(i)&lt;/code&gt; &lt;code&gt;map[i]&lt;/code&gt; 替换为map.value（i）。</target>
        </trans-unit>
        <trans-unit id="ac46b708d7fcb58bf8706a8c1d8f6479caccfff9" translate="yes" xml:space="preserve">
          <source>To avoid this, Qt will group new touch points together using the following rules:</source>
          <target state="translated">为了避免这种情况,Qt会使用以下规则将新的接触点分组。</target>
        </trans-unit>
        <trans-unit id="51c0046bbbcd6b968b4aafd9d943186826270028" translate="yes" xml:space="preserve">
          <source>To avoid unintended usage of &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;, there were some changes to &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; API in Qt 6, which may introduce source compatibility breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a166026e97a80ebd7933e88b5571de6953aaf160" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcef05d5ef1e46a33e99afc44bd952605060be7" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="translated">为了能够检查拼写，拼写检查器需要词典。它支持来自&lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell项目的&lt;/a&gt;词典，但必须将其编译为特殊的二进制格式。Hunspell词典包含两个文件：</target>
        </trans-unit>
        <trans-unit id="d0e64a52b99814817715b0b03bb149dc47feae80" translate="yes" xml:space="preserve">
          <source>To be able to receive media dropped on a widget, call &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops(true)&lt;/a&gt; for the widget, and reimplement the &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent()&lt;/a&gt; event handler functions.</source>
          <target state="translated">为了能够接收放置在窗口小部件上的媒体，请为窗口小部件调用&lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops（true）&lt;/a&gt;，然后重新实现&lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent（）&lt;/a&gt;和&lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent（）&lt;/a&gt;事件处理函数。</target>
        </trans-unit>
        <trans-unit id="23d1045b9d70f17ba3c57dc0d2c220a91b8d925b" translate="yes" xml:space="preserve">
          <source>To be able to use your new App ID, generate a new provision profile that includes the new ID to sign and run your app. Provisioning Profiles are also managed through the &lt;b&gt;Apple Developer Certificate, Identifiers, and Profiles&lt;/b&gt; manager.</source>
          <target state="translated">为了能够使用新的应用程序ID，请生成一个包含新ID的新的配置文件，以签署和运行您的应用程序。还可以通过&lt;b&gt;Apple开发人员证书，标识符和配置文件&lt;/b&gt;管理器来管理&lt;b&gt;配置文件&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="ad37069b2a756eb35da98ea17b15a5581a4e278f" translate="yes" xml:space="preserve">
          <source>To be called after getting a &lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;(). The</source>
          <target state="translated">在获得&lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;（）之后被调用。的</target>
        </trans-unit>
        <trans-unit id="f8d265687de97e6932807a1fc8751330f8b7b526" translate="yes" xml:space="preserve">
          <source>To be implemented by custom Modbus client implementation. The default implementation ignores</source>
          <target state="translated">要由自定义的Modbus客户端实现。默认的实现会忽略</target>
        </trans-unit>
        <trans-unit id="3f2fefafba9f1d93b8e36464975da9f054ee4393" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="translated">为了可加载，文件的后缀必须是根据平台可加载的库的有效后缀，例如，Unix 上的 &lt;code&gt;.so&lt;/code&gt; ，&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS 上的 &lt;code&gt;.dylib&lt;/code&gt; ，Windows上的 &lt;code&gt;.dll&lt;/code&gt; 。可以使用&lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary :: isLibrary&lt;/a&gt;（）验证后缀。</target>
        </trans-unit>
        <trans-unit id="f775395b1d1c1dc7b311605235d9fce83faef1f7" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on macOS and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e057dbe275548f05737e527b0c6d9714d4965f" translate="yes" xml:space="preserve">
          <source>To be valid, a context must have a engine, and it's &lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;(), if any, must not have been deleted.</source>
          <target state="translated">为了有效，上下文必须具有引擎，并且它的&lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;（）（如果有的话）一定不能删除。</target>
        </trans-unit>
        <trans-unit id="c85d2cb52c798844bf3eccfe92387a667731b08f" translate="yes" xml:space="preserve">
          <source>To be valid, the latitude must be between -90 to 90 inclusive.</source>
          <target state="translated">纬度必须在-90到90(含)之间才有效。</target>
        </trans-unit>
        <trans-unit id="5f5363421e22a113fa3ee2c0f940db7688d896ca" translate="yes" xml:space="preserve">
          <source>To be valid, the longitude must be between -180 to 180 inclusive.</source>
          <target state="translated">经度必须在-180到180(含)之间才有效。</target>
        </trans-unit>
        <trans-unit id="b8b65b98f45c6e4ceda4bf9ea9b73dd252de3fbc" translate="yes" xml:space="preserve">
          <source>To begin connecting objects, enter the signals and slots editing mode by opening the &lt;b&gt;Edit&lt;/b&gt; menu and selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt;, or by pressing the &lt;b&gt;F4&lt;/b&gt; key.</source>
          <target state="translated">要开始连接对象，请通过打开&amp;ldquo; &lt;b&gt;编辑&amp;rdquo;&lt;/b&gt;菜单并选择&amp;ldquo; &lt;b&gt;编辑信号/插槽&lt;/b&gt; &amp;rdquo;或按&lt;b&gt;F4&lt;/b&gt;键进入信号和插槽编辑模式。</target>
        </trans-unit>
        <trans-unit id="b1daaa06bb54778aba4af41a0f5194cad43683fe" translate="yes" xml:space="preserve">
          <source>To begin, create a &lt;a href=&quot;https://account.qt.io/&quot;&gt;Qt Account&lt;/a&gt;. This account gives you access to a web portal to manage your licenses and access to the forums and wikis. Also, make sure you read the &lt;a href=&quot;https://doc.qt.io/qt-6.0/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; page regarding your chosen license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92682ef246d14fcefd9755af87abd1faf2ddcf85" translate="yes" xml:space="preserve">
          <source>To bind NULL values, a null &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; of the relevant type has to be added to the bound &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;; for example, &lt;code&gt;QVariant(QMetaType::QString)&lt;/code&gt; should be used if you are using strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa952e59f704bba7833c7af41a71665e4257927" translate="yes" xml:space="preserve">
          <source>To bind NULL values, a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; of the relevant type has to be added to the bound &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;; for example, &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; should be used if you are using strings.</source>
          <target state="translated">要绑定NULL值，必须将相关类型的空&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;添加到绑定的&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList中&lt;/a&gt;。例如，如果使用字符串，则应使用 &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71dfd7f9cf88270f3cd5748e82b7087a966b5c5e" translate="yes" xml:space="preserve">
          <source>To bind a NULL value, use a null &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;; for example, use &lt;code&gt;QVariant(QMetaType::QString)&lt;/code&gt; if you are binding a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e057d6e72a2262f69afed3f0038d0389b9a84d" translate="yes" xml:space="preserve">
          <source>To bind a NULL value, use a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;; for example, use &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; if you are binding a string.</source>
          <target state="translated">要绑定NULL值，请使用null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; ; 例如，如果要绑定字符串，请使用 &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8641eb7169caf9ed3873577e9c44b647a26fb3e7" translate="yes" xml:space="preserve">
          <source>To bind a value of type &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; or &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, wrap the value in a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; such that &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;'s &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; constructor is called.</source>
          <target state="translated">要绑定&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;或&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;类型的值，请将值包装在&lt;a href=&quot;qvariant&quot;&gt;QVariant中&lt;/a&gt;，以便&lt;a href=&quot;qxmlitem&quot;&gt;调用QXmlItem&lt;/a&gt;的&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="d9eef59e1de8efbb0ab3e7f73e02949fafc97c56" translate="yes" xml:space="preserve">
          <source>To break a layout, press &lt;b&gt;Ctrl+0&lt;/b&gt; or choose &lt;b&gt;Break Layout&lt;/b&gt; from the form's context menu, the &lt;b&gt;Form&lt;/b&gt; menu or the main toolbar.</source>
          <target state="translated">要中断布局，请按&lt;b&gt;Ctrl + 0&lt;/b&gt;或从窗体的上下文菜单，&amp;ldquo; &lt;b&gt;窗体&amp;rdquo;&lt;/b&gt;菜单或主工具栏中选择&amp;ldquo; &lt;b&gt;中断布局&amp;rdquo;&lt;/b&gt;。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="73b397f95db7c026bbcf06f8703b952ac1ddd8e7" translate="yes" xml:space="preserve">
          <source>To break up a string into a string list, use the &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() function:</source>
          <target state="translated">要将字符串分解为字符串列表，请使用&lt;a href=&quot;qstring#split&quot;&gt;QString :: split&lt;/a&gt;（）函数：</target>
        </trans-unit>
        <trans-unit id="96d5fbf8f8d413b59ecc5e91d42c6f8ed9e8f5cb" translate="yes" xml:space="preserve">
          <source>To browse the elements of a dom document use &lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;() and &lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;(). For example, to iterate over all child elements called &quot;entry&quot; in a root element called &quot;database&quot;, you can use:</source>
          <target state="translated">要浏览dom文档的元素，请使用&lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;（），&lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;（），&lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;（）和&lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;（）。例如，要在名为&amp;ldquo;数据库&amp;rdquo;的根元素中迭代所有名为&amp;ldquo;入口&amp;rdquo;的子元素，可以使用：</target>
        </trans-unit>
        <trans-unit id="eea21ec9c796bfe0bb187704c42fecbdd2583472" translate="yes" xml:space="preserve">
          <source>To build &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt; shared libraries that are not versioned, but with an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00add77aed28b67caf71dda17fce457e12a73a0d" translate="yes" xml:space="preserve">
          <source>To build QDoc on Debian-based Linux distributions, it is sufficient to install the &lt;code&gt;libclang-dev&lt;/code&gt; package and its dependencies. For running QDoc, the &lt;code&gt;libclang&lt;/code&gt; package is required.</source>
          <target state="translated">要在基于Debian的Linux发行版上构建QDoc，只需安装 &lt;code&gt;libclang-dev&lt;/code&gt; 软件包及其依赖项即可。要运行QDoc，需要 &lt;code&gt;libclang&lt;/code&gt; 软件包。</target>
        </trans-unit>
        <trans-unit id="2869b0834ba0a5387d41676a61fb3be92a1deb79" translate="yes" xml:space="preserve">
          <source>To build Qt Multimedia, you need the GStreamer library, base plugins, and development files for your system. To run applications that use Qt Multimedia, you might also need to install the following GStreamer plugins: 'good', 'ugly', 'bad', ffmpeg (0.10), and libav (1.x). These additional plugins contain various codecs for audio and video decoding, as well as the necessary components for using the camera APIs. The package names for GStreamer vary between Linux distributions; try searching for &lt;code&gt;gstreamer&lt;/code&gt; or &lt;code&gt;libgstreamer&lt;/code&gt; in your distribution's package repository to find suitable packages.</source>
          <target state="translated">要构建Qt Multimedia，您需要系统的GStreamer库，基本插件和开发文件。要运行使用Qt Multimedia的应用程序，您可能还需要安装以下GStreamer插件：&amp;ldquo;好&amp;rdquo;，&amp;ldquo;丑&amp;rdquo;，&amp;ldquo;坏&amp;rdquo;，ffmpeg（0.10）和libav（1.x）。这些附加插件包含用于音频和视频解码的各种编解码器，以及使用相机API的必要组件。GStreamer的软件包名称在Linux发行版之间有所不同。尝试在发行版的软件包存储库中搜索 &lt;code&gt;gstreamer&lt;/code&gt; 或 &lt;code&gt;libgstreamer&lt;/code&gt; ，以找到合适的软件包。</target>
        </trans-unit>
        <trans-unit id="0e204d395595ecb3b606d87138ab82f5940dd7df" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="translated">要构建可承载COM对象和ActiveX控件的Qt应用程序，可通过添加以下内容将应用程序与&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;模块链接起来：</target>
        </trans-unit>
        <trans-unit id="63f20d95a85aaff22bd169b51f7fe8065d5e09b8" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d560d831d02540eb6f4ba5cf3f22dc2a9ad43141" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, typical usage would be:</source>
          <target state="translated">要建立一个地狱世界GUI可执行程序,典型的用法是。</target>
        </trans-unit>
        <trans-unit id="0de956a02987d444f3fc1527d2d81f847561aafa" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, you need the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d8b9f5fba1d0957b73547db7b3557927d30ce8" translate="yes" xml:space="preserve">
          <source>To build an in-process server, use a &lt;code&gt;.pro&lt;/code&gt; file like this:</source>
          <target state="translated">要构建进程内服务器，请使用 &lt;code&gt;.pro&lt;/code&gt; 文件，如下所示：</target>
        </trans-unit>
        <trans-unit id="c1614524c5909d18dc641e5b2b4285967e4046f0" translate="yes" xml:space="preserve">
          <source>To build the ActiveX server executable run &lt;code&gt;qmake&lt;/code&gt; to generate the makefile, and use your compiler's make tool as for any other Qt application. The make process will also register the controls in the system registry by calling the resulting executable with the &lt;code&gt;-regserver&lt;/code&gt; command line option.</source>
          <target state="translated">要构建ActiveX服务器可执行文件，请运行 &lt;code&gt;qmake&lt;/code&gt; 生成makefile，并像其他任何Qt应用程序一样使用编译器的make工具。通过使用 &lt;code&gt;-regserver&lt;/code&gt; 命令行选项调用生成的可执行文件，make进程还将在系统注册表中注册控件。</target>
        </trans-unit>
        <trans-unit id="187c3080b49928df37dc613f7d01dc6c67e42b54" translate="yes" xml:space="preserve">
          <source>To build the static libraries, change into the &lt;code&gt;activeqt&lt;/code&gt; directory (usually &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt;), and run &lt;code&gt;qmake&lt;/code&gt; and your make tool in both the &lt;code&gt;container&lt;/code&gt; and the &lt;code&gt;control&lt;/code&gt; subdirectory. The &lt;code&gt;qaxcontainer&lt;/code&gt; and &lt;code&gt;qaxserver&lt;/code&gt; libraries will be linked into &lt;code&gt;QTDIR/lib&lt;/code&gt;.</source>
          <target state="translated">要构建静态库，请切换到 &lt;code&gt;activeqt&lt;/code&gt; 目录（通常为 &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt; ），然后在 &lt;code&gt;container&lt;/code&gt; 和 &lt;code&gt;control&lt;/code&gt; 子目录中运行 &lt;code&gt;qmake&lt;/code&gt; 和您的make工具。该 &lt;code&gt;qaxcontainer&lt;/code&gt; 和 &lt;code&gt;qaxserver&lt;/code&gt; 库将被链接到 &lt;code&gt;QTDIR/lib&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="94f0c2be17c91e259f3e0f43ac4876760f349cf1" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="translated">要构建该工具，您必须首先构建&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt;库。然后在 &lt;code&gt;tools/testcon&lt;/code&gt; 中运行您的make工具，并运行生成的 &lt;code&gt;testcon.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5ff3c92c87afa5ff07c3d4a06c46484e512a7fc" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="translated">要构建该工具，您必须首先构建&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;库。然后在 &lt;code&gt;tools/dumpcpp&lt;/code&gt; 中运行您的make工具。</target>
        </trans-unit>
        <trans-unit id="7b3cc49f1dc4b398c4b35a6ccd2f0e602557c774" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="translated">要构建该工具，您必须首先构建&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;库。然后在 &lt;code&gt;tools/dumpdoc&lt;/code&gt; 中运行您的make工具。</target>
        </trans-unit>
        <trans-unit id="5481917c903dc495dd10e5f5d75845cee7770ffb" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0d372c2c711889a4db972c858ca3fd4a548001" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44884b2c437b375b5ec38c90b635190254d0f274" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596d9a7c88baa44a72f65d5301d18ec6a3ed121d" translate="yes" xml:space="preserve">
          <source>To calculate the speed of the interpolation, the easing curve provides the function &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;(), where the</source>
          <target state="translated">为了计算插值的速度，缓动曲线提供了函数&lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;（），其中</target>
        </trans-unit>
        <trans-unit id="7ddbcfc7549b915f19e0ae88ce69f07720b295e1" translate="yes" xml:space="preserve">
          <source>To call functions of the COM object that can not be accessed via any of the above methods it is possible to request the COM interface directly using &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase::queryInterface&lt;/a&gt;(). To get a C++ definition of the respective interface classes use the &lt;code&gt;#import&lt;/code&gt; directive with the type library provided with the control; see your compiler manual for details.</source>
          <target state="translated">要调用无法通过上述任何一种方法访问的COM对象的函数，可以直接使用&lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase :: queryInterface&lt;/a&gt;（）请求COM接口。要获得各个接口类的C ++定义，请使用 &lt;code&gt;#import&lt;/code&gt; 指令以及控件随附的类型库；有关详细信息，请参见编译器手册。</target>
        </trans-unit>
        <trans-unit id="d4dd8cea10b120d22c91995eb8e1c82760069733" translate="yes" xml:space="preserve">
          <source>To call the methods of a COM interface described by the following IDL</source>
          <target state="translated">调用下面IDL描述的COM接口的方法。</target>
        </trans-unit>
        <trans-unit id="6e3233e4c484d2910da29a4b4c0dfa747589a488" translate="yes" xml:space="preserve">
          <source>To cancel a prepared inserted call &lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;remove&lt;/a&gt;() on the metadata's url.</source>
          <target state="translated">要取消准备好的插入呼叫，请&lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;删除&lt;/a&gt;元数据URL上的（）。</target>
        </trans-unit>
        <trans-unit id="bcbd7a07bdc6638917f260af881a7fd8dbda4d21" translate="yes" xml:space="preserve">
          <source>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with &lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(). Margins are controlled by &lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;(). Overall indentation is set with &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;(), the indentation of the first line with &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;().</source>
          <target state="translated">为了适应从左到右和从右到左的语言，您可以使用setDirection（）设置块的方向。使用&lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;（）设置段落对齐方式。边距由&lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;（），&lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;（），&lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;（），&lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;（）控制。整体缩进使用&lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;（）设置，第一行的缩进使用&lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;（）设置。</target>
        </trans-unit>
        <trans-unit id="1e00d24d3f10292a6dc92284633f8da4fc3e1787" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="translated">为了使静态插件实际被链接和实例化，应用程序代码中还需要&lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;（）宏，但是这些宏会由qmake自动生成并添加到您的应用程序项目中。</target>
        </trans-unit>
        <trans-unit id="9cd7aea4f844daa2876f2dcc6e8e873eca587ab7" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fa74a2427a59666f310118acb8c43c5e3115c1" translate="yes" xml:space="preserve">
          <source>To change model data, you can assign updated values to the &lt;code&gt;model&lt;/code&gt; properties. The QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; is editable by default whereas C++ models must implement setData() to become editable. Integer and JavaScript array models are read-only.</source>
          <target state="translated">要更改模型数据，可以将更新的值分配给 &lt;code&gt;model&lt;/code&gt; 属性。默认情况下，QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;是可编辑的，而C ++模型必须实现setData（）才可编辑。整数和JavaScript数组模型是只读的。</target>
        </trans-unit>
        <trans-unit id="0a00363765f988416bdb7cfb367b0cc2fb38426c" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">要更改此函数的行为，即修改&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;可以粘贴以及粘贴的方式，请重新实现虚拟&lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;（）和&lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="52f1e82bdd16cc15e2ed5d0bc080208f6abfaf46" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">要更改此功能的行为，即修改&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;可以粘贴的内容以及如何粘贴，请重新实现虚拟&lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;（）和&lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="becd3a6b72959ec86000882e8742c680a69d93b7" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="translated">要更改&lt;a href=&quot;qtabbar&quot;&gt;QTabWidget&lt;/a&gt;在&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget中&lt;/a&gt;的位置，请使用&lt;a href=&quot;#tab-bar-sub&quot;&gt;标签栏子&lt;/a&gt;控件（并设置subcontrol-position）。</target>
        </trans-unit>
        <trans-unit id="00dfabb7928b6e13f1261d6c1f9c1eeae2717678" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;stylesheet-reference#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c6534ff4a0108d006c4ff94615237f6f47a85f" translate="yes" xml:space="preserve">
          <source>To change these defaults for the build, without having to force a specific value at run time, the following to CMake cache variables are available once CMake has been run once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c64a9defcb46a9385be110dd92f917a63a0a053" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">要更改此位置，请使用&lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1ab847e5c531a4b8b265b3ac5dd99eff36271ed2" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">要更改此位置，请使用&lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="9720435a742525e10b9be1f28192d07456b4c60f" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">要更改此位置，请使用&lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="8ee5d4dc8efd5128635d763bc6f5e48bc5cea72b" translate="yes" xml:space="preserve">
          <source>To check at runtime what is supported, use the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderSourceType and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderCompilationType properties. Note that these are bitmasks, because some backends may support multiple approaches.</source>
          <target state="translated">若要在运行时检查支持什么，请使用&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderSourceType和&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderCompilationType属性。请注意，这些是位掩码，因为某些后端可能支持多种方法。</target>
        </trans-unit>
        <trans-unit id="640bbe38ce134e3166250195b4b4fad9fd0ea89c" translate="yes" xml:space="preserve">
          <source>To check if a file has the expected MIME type, you should use &lt;a href=&quot;qmimetype#inherits&quot;&gt;inherits&lt;/a&gt;() rather than a simple string comparison based on the &lt;a href=&quot;qmimetype#name-prop&quot;&gt;name&lt;/a&gt;(). This is because MIME types can inherit from each other: for instance a C source file is a specific type of plain text file, so text/x-csrc inherits text/plain.</source>
          <target state="translated">要检查文件是否具有预期的MIME类型，您应该使用&lt;a href=&quot;qmimetype#inherits&quot;&gt;继承&lt;/a&gt;（）而不是基于&lt;a href=&quot;qmimetype#name-prop&quot;&gt;名称&lt;/a&gt;（）的简单字符串比较。这是因为MIME类型可以彼此继承：例如，C源文件是纯文本文件的特定类型，因此text / x-csrc继承了text / plain。</target>
        </trans-unit>
        <trans-unit id="65f21b9c70339bda29ec043a4accdb914b228fbe" translate="yes" xml:space="preserve">
          <source>To check if suspension is actually in effect, use &lt;a href=&quot;qfuture#isSuspended&quot;&gt;isSuspended&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c92b5dcaf546839ecaff68da7e8008fd477d8ef" translate="yes" xml:space="preserve">
          <source>To check if suspension is actually in effect, use &lt;a href=&quot;qfuturewatcher#isSuspended&quot;&gt;isSuspended&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66850a5141a7d46203ce1106e6dfb88e25399a8" translate="yes" xml:space="preserve">
          <source>To check if the current backend supports the feature</source>
          <target state="translated">检查当前后端是否支持该功能</target>
        </trans-unit>
        <trans-unit id="9fc033fba68d185dc7bae7af0957309c9103f0de" translate="yes" xml:space="preserve">
          <source>To check if two numbers are equivalent, use normalized() on both version numbers before performing the compare.</source>
          <target state="translated">要检查两个数字是否相等,在执行比较之前,对两个版本号使用normalized()。</target>
        </trans-unit>
        <trans-unit id="21747a8db96a8d50b23ef1b8939e679ea8aab6ab" translate="yes" xml:space="preserve">
          <source>To check visibility, use !&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;() instead (notice the exclamation mark).</source>
          <target state="translated">要检查可见性，请使用！改为使用&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;（）（注意感叹号）。</target>
        </trans-unit>
        <trans-unit id="d8615a6b7aa9b08cb7180b1fddebc2cc3c03723b" translate="yes" xml:space="preserve">
          <source>To check whether a message type is enabled or not, use one of these methods: &lt;a href=&quot;qloggingcategory#isDebugEnabled&quot;&gt;isDebugEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isInfoEnabled&quot;&gt;isInfoEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isWarningEnabled&quot;&gt;isWarningEnabled&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#isCriticalEnabled&quot;&gt;isCriticalEnabled&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20209323a4b5d4933ad26616eda6a242dd066c78" translate="yes" xml:space="preserve">
          <source>To check whether a system tray is present on the user's desktop, call the &lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon::isSystemTrayAvailable&lt;/a&gt;() static function.</source>
          <target state="translated">要检查用户桌面上是否存在系统托盘，请调用&lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon :: isSystemTrayAvailable&lt;/a&gt;（）静态函数。</target>
        </trans-unit>
        <trans-unit id="cc805a6dc1c18de12edfec793bf45abfdc670417" translate="yes" xml:space="preserve">
          <source>To check whether the response came from the cache or from the network, the following can be applied:</source>
          <target state="translated">要检查响应是来自缓存还是来自网络,可以应用以下方法。</target>
        </trans-unit>
        <trans-unit id="c2170dd98311055f932a1f2f3ce4aec490fb711a" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="translated">要选择将给您的线程指定的名称（例如，在Linux上由命令 &lt;code&gt;ps -L&lt;/code&gt; 标识），可以在启动线程之前调用&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）&lt;/a&gt;。如果不调用&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）&lt;/a&gt;，则为线程提供的名称将是线程对象的运行时类型的类名（例如，对于&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;Mandelbrot Example而言&lt;/a&gt;，是 &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; ，因为这是在&lt;a href=&quot;qthread&quot;&gt;QThread的&lt;/a&gt;子类）。请注意，这在Windows上的发行版中当前不可用。</target>
        </trans-unit>
        <trans-unit id="aecb02a913a38d16d3e2c3eff90e3e0079b12f30" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-mandelbrot-example.html&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the QThread subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5593ccf3c2e7123030c9c90ad7de332ea09185f" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtcore-threads-mandelbrot-example.html&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the QThread subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9c381a077048f82ecac6868f9013140a3560c7" translate="yes" xml:space="preserve">
          <source>To claim support for http and https the above entry in the Info.plist file is not allowed. This is only possible when you add your domain to the Entitlements file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b21e7bba8f8c702540a64a1c95c63c8ec97b8" translate="yes" xml:space="preserve">
          <source>To clear an anchor value, set it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要清除锚点值，请将其设置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f1825b9c8a37a50d24ef3d20a57bce31df82588" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">为了清除该系列中的选择，将&lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;（）设置为</target>
        </trans-unit>
        <trans-unit id="429aeecebcca5aeec29093c841d6e67eade5d6cf" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; is set as the position. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</source>
          <target state="translated">为了清除该系列中的选择，将&lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt;设置为位置。如果将此系列添加到图形，图形可以根据用户交互或无效而调整选择。</target>
        </trans-unit>
        <trans-unit id="aaf607a23811745069fde6b201c651b4eac9d0e5" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;() is set as</source>
          <target state="translated">为了清除该系列中的选择，将&lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;（）设置为</target>
        </trans-unit>
        <trans-unit id="6b4ffb34de657c74ab25a489628184b27204c799" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">为了清除该系列中的选择，将&lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;（）设置为</target>
        </trans-unit>
        <trans-unit id="3547c182ba77bff841fd3ea66ba3a4f560835dac" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, set &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; as the position.</source>
          <target state="translated">要清除此系列中的选择，请将&lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt;设置为位置。</target>
        </trans-unit>
        <trans-unit id="8cef577b4897a98142ef0babd4324111d6d0632b" translate="yes" xml:space="preserve">
          <source>To clear the pointer held without deleting the object it points to (and hence take ownership of the object), use &lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;() instead.</source>
          <target state="translated">要清除持有的指针而不删除其指向的对象（并因此获得该对象的所有权），请改用&lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="2bb5744d865a5c89ea379146ea4bc698001057a3" translate="yes" xml:space="preserve">
          <source>To clear the search highlight, just pass an empty string.</source>
          <target state="translated">要清除搜索高亮,只需传递一个空字符串。</target>
        </trans-unit>
        <trans-unit id="75f37ad6da3248d89d7e621c33edbd844abcbe3d" translate="yes" xml:space="preserve">
          <source>To clear the selection, just pass an empty string.</source>
          <target state="translated">要清除选择,只需传递一个空字符串。</target>
        </trans-unit>
        <trans-unit id="4521bd570c5c0d10f60de205e7196927a1793b53" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will emit error(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">要关闭套接字，请调用&lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;DisconnectFromHost&lt;/a&gt;（）。&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: ClosingState&lt;/a&gt;。将所有未决数据写入套接字后，&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;实际上关闭套接字，进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: UnconnectedState&lt;/a&gt;，并发出&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;断开连接&lt;/a&gt;（）。如果要立即中止连接，并丢弃所有未决数据，请调用&lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;（）。如果远程主机关闭连接，则&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;将发出错误（&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: RemoteHostClosedError&lt;/a&gt;），在此期间套接字状态仍为&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;，然后&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;断开连接&lt;/a&gt;（）信号将被发射。</target>
        </trans-unit>
        <trans-unit id="7725608605ccfb01a9bfc276937b17a4daa42613" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). QAbstractSocket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, QAbstractSocket actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, QAbstractSocket will emit &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad76e35c696315e34a7861f3714d7bf48681d198" translate="yes" xml:space="preserve">
          <source>To communicate with a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; or &lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;, a client must use and set up the JavaScript API provided by &lt;code&gt;qwebchannel.js&lt;/code&gt;. For clients run inside &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;, you can load the file via &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt;. For external clients, you need to copy the file to your web server. Then instantiate a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object and pass it a transport object and a callback function, which will be invoked once the initialization of the channel finishes and the published objects become available.</source>
          <target state="translated">要与&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;或&lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;通信，客户端必须使用并设置 &lt;code&gt;qwebchannel.js&lt;/code&gt; 提供的JavaScript API 。对于在&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine中&lt;/a&gt;运行的客户端，您可以通过 &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt; 加载文件。对于外部客户端，您需要将文件复制到Web服务器。然后实例化一个&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;对象，并向其传递一个传输对象和一个回调函数，一旦通道的初始化完成并且已发布的对象可用，就会调用这些函数。</target>
        </trans-unit>
        <trans-unit id="2d7c886843b6483c6becfe351eff0447da11db72" translate="yes" xml:space="preserve">
          <source>To compile a state machine, the following lines have to be added to a .pro file:</source>
          <target state="translated">要编译一个状态机,必须在.pro文件中添加以下行。</target>
        </trans-unit>
        <trans-unit id="385fd6ee52a45816bc30f53d324d45284678cafa" translate="yes" xml:space="preserve">
          <source>To complete the connection, select a signal from the source object and a slot from the destination object, then click &lt;b&gt;OK&lt;/b&gt;. Click &lt;b&gt;Cancel&lt;/b&gt; if you wish to abandon the connection.</source>
          <target state="translated">要完成连接，请从源对象中选择一个信号，并从目标对象中选择一个插槽，然后单击&amp;ldquo; &lt;b&gt;确定&amp;rdquo;&lt;/b&gt;。如果要放弃连接，请单击&amp;ldquo; &lt;b&gt;取消&lt;/b&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1d4403ef3c0807c9173800f15ae382e772988187" translate="yes" xml:space="preserve">
          <source>To complete the installation, select the components that you want to install and follow the instructions of the installation program.</source>
          <target state="translated">要完成安装,请选择您要安装的组件,并按照安装程序的说明进行安装。</target>
        </trans-unit>
        <trans-unit id="6fd982abdeefd37c9280dd7d76e4c9e45e9ee32b" translate="yes" xml:space="preserve">
          <source>To compute the value of an attribute, enclose the expression in curly braces and embed it in the attribute value:</source>
          <target state="translated">要计算一个属性的值,将表达式用大括号括起来,并将其嵌入到属性值中。</target>
        </trans-unit>
        <trans-unit id="0c44d8989e755cc8695a68173fe5504004b8cc1f" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1accdd21abcb118fb19d47858fd3802dff230382" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms#&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="translated">要配置Qt以进行跨平台开发和部署，需要为目标平台设置开发工具链。此设置在&lt;a href=&quot;supported-platforms#&quot;&gt;受支持的平台&lt;/a&gt;之间有所不同。</target>
        </trans-unit>
        <trans-unit id="cfe01f540ed67cd62bc0496392d623bdb3291ad4" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, you need to have a matching Qt version for the host machine first. Also, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d7dc8fb66f10c0e99b4aadc3a922818a72a339" translate="yes" xml:space="preserve">
          <source>To configure the behavior of the EGLStream object used by the backend, use the &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; environment variable. This assumes that &lt;code&gt;KHR_stream_fifo&lt;/code&gt; is supported by the target system. By default the stream operates in mailbox mode. To switch to FIFO mode, set a value of 1 or greater. The value specifies the maximum number of frames the stream can hold.</source>
          <target state="translated">要配置后端使用的 &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; 对象的行为，请使用QT_QPA_EGLFS_STREAM_FIFO_LENGTH环境变量。假设目标系统支持 &lt;code&gt;KHR_stream_fifo&lt;/code&gt; 。默认情况下，流以邮箱模式运行。要切换到FIFO模式，请将值设置为1或更大。该值指定流可以容纳的最大帧数。</target>
        </trans-unit>
        <trans-unit id="7367bf0710d7158967c07c1351fc4fe0c9cc8367" translate="yes" xml:space="preserve">
          <source>To configure the module for building with qmake, add the module as a value of the &lt;code&gt;QT&lt;/code&gt; variable in the project's .pro file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851bd6fda5fe9845f49ae2f158a00e8581018025" translate="yes" xml:space="preserve">
          <source>To configure the module for building with qmake, add the module as a value of the QT variable in the project's .pro file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014a53dcdcc8b68f2c38bf196f43d6a2a06d6712" translate="yes" xml:space="preserve">
          <source>To configure which device extensions to enable (for example, for Vulkan), call &lt;a href=&quot;qquickwindow#setGraphicsConfiguration&quot;&gt;QQuickWindow::setGraphicsConfiguration&lt;/a&gt;() before this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348fe7189be0fc647a0f804a97da34178809c40a" translate="yes" xml:space="preserve">
          <source>To connect an object to the form itself, simply position the cursor over the form and release the mouse button. The end point of the connection changes to the electrical &quot;ground&quot; symbol.</source>
          <target state="translated">要将对象连接到表格本身,只需将光标放在表格上,然后松开鼠标按钮。连接的端点会变成 &quot;接地 &quot;符号。</target>
        </trans-unit>
        <trans-unit id="ecd4e0bff8add9df7b65d573b18eb28d4f311c11" translate="yes" xml:space="preserve">
          <source>To connect signals to (or receive signals from) dynamically created objects, use the signal &lt;code&gt;connect()&lt;/code&gt; method. See &lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;Connecting Signals to Methods and Signals&lt;/a&gt; for more information.</source>
          <target state="translated">要将信号连接到动态创建的对象（或从中接收信号），请使用signal &lt;code&gt;connect()&lt;/code&gt; 方法。有关更多信息，请参见&lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;将信号连接到方法和信号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8092fbe768516ca34194cc8702ac92e5d739899" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;int&lt;/code&gt; version to &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider::valueChanged&lt;/a&gt;(), the two syntaxes are:</source>
          <target state="translated">要将 &lt;code&gt;int&lt;/code&gt; 版本连接到&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider :: valueChanged&lt;/a&gt;（），两种语法为：</target>
        </trans-unit>
        <trans-unit id="f2c9772a576ce009f821c0e6f9a6307beb2b63fd" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;query&lt;/code&gt; to the custom node model, we must bind a variable name used in the query to a node in the model. The variable can then be used in the query as a starting node. First, an &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;index&lt;/a&gt; for the desired starting node is retrieved by calling &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;(). Then the index is bound to a variable name, in this case &lt;code&gt;queryRoot&lt;/code&gt;, by passing the name and the index to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;(). The query can then use a variable reference &lt;code&gt;$queryRoot&lt;/code&gt; to refer to the starting node. Note that if the &lt;a href=&quot;qxmlquery&quot;&gt;query&lt;/a&gt; uses multiple variable references, a call to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() is required to bind each different variable name to a node in the model.</source>
          <target state="translated">要将 &lt;code&gt;query&lt;/code&gt; 连接到定制节点模型，我们必须将查询中使用的变量名绑定到模型中的节点。然后，该变量可以在查询中用作起始节点。首先，通过调用&lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel :: createIndex&lt;/a&gt;（）检索所需起始节点的&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;索引&lt;/a&gt;。然后，索引被绑定到变量名，在此情况下 &lt;code&gt;queryRoot&lt;/code&gt; ，通过将名字和索引&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt;（）。然后，查询可以使用变量引用 &lt;code&gt;$queryRoot&lt;/code&gt; 引用起始节点。请注意，如果&lt;a href=&quot;qxmlquery&quot;&gt;查询&lt;/a&gt;使用多个变量引用，则调用&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt;需要（）将每个不同的变量名称绑定到模型中的节点。</target>
        </trans-unit>
        <trans-unit id="3cd249ed4ee2223b3e62e75f49e835ae0edc3be2" translate="yes" xml:space="preserve">
          <source>To connect the signal to the slot, we use &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). There are several ways to connect signal and slots. The first is to use function pointers:</source>
          <target state="translated">要将信号连接到插槽，我们使用&lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt;（）。有几种连接信号和插槽的方法。第一种是使用函数指针：</target>
        </trans-unit>
        <trans-unit id="c8b762b07916df9d837de8a328a5628b22eb6e9a" translate="yes" xml:space="preserve">
          <source>To connect to an already running object use the following pattern:</source>
          <target state="translated">要连接到一个已经运行的对象,请使用以下模式。</target>
        </trans-unit>
        <trans-unit id="a19a95cad12632ac72088c619f02487f5d463f9c" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">要考虑一个字段&amp;ldquo;填充&amp;rdquo;，&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;只需检查该字段的当前值是否不等于原始值（该值是调用&lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;（）时的值）。对于&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;和&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;子类，&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;还检查&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput（）是否&lt;/a&gt;返回true，以兑现任何验证器或掩码。</target>
        </trans-unit>
        <trans-unit id="2edee2a37dabae580c5126569c51aff2f373155d" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that their current value doesn't equal their original value (the value they had before &lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, it also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">要考虑一个&amp;ldquo;填充&amp;rdquo;字段，&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;只需检查其当前值是否不等于其原始值（它们在调用&lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;（）之前的值）。对于&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;，它还会检查&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput（）&lt;/a&gt;返回true，以兑现任何验证器或掩码。</target>
        </trans-unit>
        <trans-unit id="76b5a3e66196dbd5f7ebdd4ef8c7be3b3a548df5" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, QWizard simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, QWizard also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5912952d7c745121c584651eddefb7924ac9c1ba" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="translated">要使用内容构造&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;，请使用&lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument :: createTextNode&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="244e27a59676038dcc24c3ef5766f53925be31c8" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; reading from a device (e.g. a file), the following can be applied:</source>
          <target state="translated">要构造从设备（例如文件）读取的&lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt;，可以应用以下内容：</target>
        </trans-unit>
        <trans-unit id="c162150a543bb63880b7ef25bc3548b97e779f06" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="translated">要构造一个&lt;a href=&quot;qhttppart&quot;&gt;小巧的QHttpPart&lt;/a&gt;，请考虑以下代码片段（这将产生上面示例中显示的数据）：</target>
        </trans-unit>
        <trans-unit id="963431f81ce778790df3cb6773edd802b35ee198" translate="yes" xml:space="preserve">
          <source>To construct a QDomText with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778f189c751f9ce84b1069045c6ca737c1ad62f0" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart reading from a device (e.g. a file), the following can be applied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f062544bf5cbb527053196c1c9833980d4c830" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3c5c1cfcaedc2a4f359dbff663897263086440" translate="yes" xml:space="preserve">
          <source>To construct a URL from an encoded string, you can also use &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;():</source>
          <target state="translated">要从编码的字符串构造URL，您还可以使用&lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="cc38274e52cf92f9d8becfe61f16477fb11af2db" translate="yes" xml:space="preserve">
          <source>To construct an atomic value as element content, enclose an expression in curly braces and embed it in the element constructor:</source>
          <target state="translated">要构造一个原子值作为元素内容,请用大括号括住一个表达式,并将其嵌入元素构造函数中。</target>
        </trans-unit>
        <trans-unit id="9f12a94dd34862c121b6bab97a2a50797526acd9" translate="yes" xml:space="preserve">
          <source>To control how &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="translated">若要控制&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt;对缩放的响应，请使用&lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="d8ffe4846c01194ea5b4edc881b726ed83e75677" translate="yes" xml:space="preserve">
          <source>To control how AnimatedSprite responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b21c078f3d7ab3db5b71cafbe99b4ab2acfbca" translate="yes" xml:space="preserve">
          <source>To control how a scene is rendered, it is necessary to define a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;environment&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6f22dd2fb0bbb5ab25cfaabb87c5cc68ae69c0" translate="yes" xml:space="preserve">
          <source>To control how a scene is rendered, you can set the &lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;environment&lt;/a&gt; property. The type &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; has a number of visual properties that can be adjusted, such as background color, tone mapping, anti-aliasing and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75182c0a1c7e6c3717fc7f9e20e8c4f448b8d1b1" translate="yes" xml:space="preserve">
          <source>To control the behavior, the following environment variables can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3351cbe9e282d738a383a0621bb0aecf575536" translate="yes" xml:space="preserve">
          <source>To control what graphics API Qt Quick uses, call &lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;QQuickWindow::setGraphicsApi&lt;/a&gt;() with one of the &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;:GraphicsApi constants. That must be done before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1730513ddae2f7a26cae78ed342aed3becfdf7a6" translate="yes" xml:space="preserve">
          <source>To convert a 3D asset contained in the file &lt;code&gt;testModel.fbx&lt;/code&gt; with &lt;code&gt;balsam&lt;/code&gt; the following command would be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ad18b3df3f807a463e0902f12c6e38a95cc647" translate="yes" xml:space="preserve">
          <source>To convert a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="translated">要将&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;与HICON相互转换，可以分别使用QtWinExtras函数QtWin :: toHICON（）和QtWin :: fromHICON（）。</target>
        </trans-unit>
        <trans-unit id="18d2274fe5235c0fee5c295f52b112a8af95aa24" translate="yes" xml:space="preserve">
          <source>To convert a QPixmap to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253dc35440ac13f2db005b757af6cf58c070a3c3" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="translated">为了从这些编码之一进行转换，&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;提供了&lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;（），&lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;（）和&lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;（）。&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;类支持其他编码。</target>
        </trans-unit>
        <trans-unit id="90242867205dee8ad0043ba0240b5204598d720b" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, QString provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qstringencoder&quot;&gt;QStringEncoder&lt;/a&gt; and &lt;a href=&quot;qstringdecoder&quot;&gt;QStringDecoder&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df318eb1dd20da657377e4cf527e4c8ead0624ff" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, QString provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9353d8e93b16276c8bb026dfd3b3e0a8224d920" translate="yes" xml:space="preserve">
          <source>To convert the data to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; use &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;().</source>
          <target state="translated">要将数据转换为&lt;a href=&quot;qstring&quot;&gt;QString，请&lt;/a&gt;使用&lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString :: fromLocal8Bit&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8c0b98e8d438993f6225ef263a034f987f0f8408" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">要创建一个包含三个项目的&lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt;，并让中心项目获得多余的空间，可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="2b423b442d54e1a56f6328346069fafe0a0a62a4" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">要创建一个包含三个项目的&lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt;，并让中心项目获得多余的空间，可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="ffe94bae9af82fed893b71a5819fba6ddc4890eb" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt; that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="translated">要创建一个在长按后打开并在释放时选择项目的&lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt;，您可以使用Timer 将ActivationMode.ActivateOnRelease与&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;结合使用：</target>
        </trans-unit>
        <trans-unit id="8859e5003561fdd4ad44e9cb0de34fe8e5e72173" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="translated">要创建&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt;对象，请指定要修改其属性的&lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;目标&lt;/a&gt;项目，并定义新的属性值或绑定。例如：</target>
        </trans-unit>
        <trans-unit id="06f2b45a447e4fcc17ba2c84c4c41911d97f6589" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;coordinate&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate()&lt;/a&gt; function:</source>
          <target state="translated">要创建 &lt;code&gt;coordinate&lt;/code&gt; 值，请使用&lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate（）&lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="921b58a7a20e4f1f6e42135ab076cba8b29ccca1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;date&lt;/code&gt; value, specify it as a &quot;YYYY-MM-DDThh:mm:ss.zzzZ&quot; string. (The T is literal, YYYY is a full year number, MM and DD are month and day numbers, hh, mm and ss are hours, minutes and seconds, with .zzz as milliseconds and Z as time-zone offset. The T and following time are optional. If they are omitted, the date is handled as the start of UTC's day, which falls on other dates in some time-zones. When T is included, the :ss.zzz or just .zzz part can be omitted. With or without those, the zone offset can be omitted, in which case local time is used.) For example:</source>
          <target state="translated">要创建 &lt;code&gt;date&lt;/code&gt; 值，请将其指定为&amp;ldquo; YYYY-MM-DDThh：mm：ss.zzzZ&amp;rdquo;字符串。（T为文字，YYYY为整数，MM和DD为月和日数字，hh，mm和ss为小时，分钟和秒，.zzz为毫秒，Z为时区偏移。T和以下时间是可选的，如果省略，则将日期视为UTC的开始日期，该日期在某些时区中位于其他日期。如果包含T，则可以省略：ss.zzz或.zzz部分。不管有没有这些，都可以省略区域偏移，在这种情况下，使用本地时间。）例如：</target>
        </trans-unit>
        <trans-unit id="446fbb84f53b7754e237f55e86e35f80743230cd" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;geoshape&lt;/code&gt; value, specify it as a &quot;shape()&quot; string:</source>
          <target state="translated">要创建 &lt;code&gt;geoshape&lt;/code&gt; 值，请将其指定为&amp;ldquo; shape（）&amp;rdquo;字符串：</target>
        </trans-unit>
        <trans-unit id="9cff5a876d89bee729fad48017121368e3590e27" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;point&lt;/code&gt; value, specify it as a &quot;x,y&quot; string:</source>
          <target state="translated">要创建 &lt;code&gt;point&lt;/code&gt; 值，请将其指定为&amp;ldquo; x，y&amp;rdquo;字符串：</target>
        </trans-unit>
        <trans-unit id="dc6ac9b71a1af4e698659515cce04971a111607e" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;quaternion&lt;/code&gt; value, specify it as a &quot;scalar,x,y,z&quot; string, or define the components individually, or compose it with the Qt.quaternion() function.</source>
          <target state="translated">要创建 &lt;code&gt;quaternion&lt;/code&gt; 数值，请将其指定为&amp;ldquo; scalar，x，y，z&amp;rdquo;字符串，或单独定义组件，或使用Qt.quaternion（）函数进行组合。</target>
        </trans-unit>
        <trans-unit id="93007e8723c47bd61271059bc879a5378661092f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;rect&lt;/code&gt; value, specify it as a &quot;x, y, width x height&quot; string:</source>
          <target state="translated">要创建一个 &lt;code&gt;rect&lt;/code&gt; 值，请将其指定为&amp;ldquo; x，y，宽x高&amp;rdquo;字符串：</target>
        </trans-unit>
        <trans-unit id="aab05e5352707b4948ec04985a6a1ed66e277afe" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;size&lt;/code&gt; value, specify it as a &quot;width x height&quot; string:</source>
          <target state="translated">要创建 &lt;code&gt;size&lt;/code&gt; 值，请将其指定为&amp;ldquo;宽x高&amp;rdquo;字符串：</target>
        </trans-unit>
        <trans-unit id="8d1593183166c4771a8129d27a6bb4b9d3beda1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector2d&lt;/code&gt; value, specify it as a &quot;x,y&quot; string, or define the components individually, or compose it with the Qt.vector2d() function.</source>
          <target state="translated">若要创建 &lt;code&gt;vector2d&lt;/code&gt; 值，请将其指定为&amp;ldquo; x，y&amp;rdquo;字符串，或单独定义组件，或使用Qt.vector2d（）函数进行组合。</target>
        </trans-unit>
        <trans-unit id="3960ad797c60cbd3e7bdf33fc5e746b5446468ee" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector3d&lt;/code&gt; value, specify it as a &quot;x,y,z&quot; string:</source>
          <target state="translated">要创建 &lt;code&gt;vector3d&lt;/code&gt; 值，请将其指定为&amp;ldquo; x，y，z&amp;rdquo;字符串：</target>
        </trans-unit>
        <trans-unit id="ea3ab395d74001dde7ede58d72cb5712d8066d1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector4d&lt;/code&gt; value, specify it as a &quot;x,y,z,w&quot; string, or define the components individually, or compose it with the Qt.vector4d() function.</source>
          <target state="translated">若要创建 &lt;code&gt;vector4d&lt;/code&gt; 值，请将其指定为&amp;ldquo; x，y，z，w&amp;rdquo;字符串，或分别定义组件，或使用Qt.vector4d（）函数进行组合。</target>
        </trans-unit>
        <trans-unit id="931bc162eb1d50eb9ae02820afbe42541cae7513" translate="yes" xml:space="preserve">
          <source>To create a PieMenu that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76847880760c7c363f15e9343f1b36c20008914" translate="yes" xml:space="preserve">
          <source>To create a PropertyChanges object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efb198ed1bb9f2dc77d8859c0cf44f9371e2c25" translate="yes" xml:space="preserve">
          <source>To create a QML object from an arbitrary string of QML (instead of a file), use &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt;.</source>
          <target state="translated">要从任意QML字符串（而不是文件）创建QML对象，请使用&lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ecca92c218ee14cfdbeaa52111b3c2c621f45a2" translate="yes" xml:space="preserve">
          <source>To create a SplitView with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1448f444843668c38d94b9c442de50def080b5b" translate="yes" xml:space="preserve">
          <source>To create a Vulkan surface for a window, or retrieve an existing one, call &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(). Most platforms will only create the surface via &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; when first calling &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), but there may be platform-specific variations in the internal behavior. Once created, subsequent calls to &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;() just return the same handle. This fits the structure of typical Vulkan-enabled &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; subclasses well.</source>
          <target state="translated">要为窗口创建Vulkan曲面或检索现有的曲面，请调用&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）。大多数平台仅在首次调用&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）时才通过 &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; 创建表面，但是内部行为可能存在特定于平台的变化。创建之后，随后对&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）的调用仅返回相同的句柄。这非常适合典型的启用Vulkan的&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;子类的结构。</target>
        </trans-unit>
        <trans-unit id="864bc9dd34c447162f88d8c6a63ddc7b5eaf9b54" translate="yes" xml:space="preserve">
          <source>To create a completely circular button (the default), use a value that is equal to half of the width or height of the button, and make the button's width and height identical.</source>
          <target state="translated">要创建一个完全圆形的按钮(默认),使用一个等于按钮宽度或高度一半的值,并使按钮的宽度和高度相同。</target>
        </trans-unit>
        <trans-unit id="d222d8116ee7c4eec4c4ded1bca4ed02db1502da" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="translated">要创建与蓝牙服务的连接，请创建适当类型的套接字，然后调用&lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;（）并传递蓝牙地址和端口号。&lt;a href=&quot;qbluetoothsocket&quot;&gt;建立&lt;/a&gt;&lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;连接后，&lt;/a&gt;QBluetoothSocket将发出connected（）信号。</target>
        </trans-unit>
        <trans-unit id="8b81a040b6ad2937b15b7795db85cd2c5caae383" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. QBluetoothSocket will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e7bfba5b3728581cb792d4eb623e3460f64694" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;. For example:</source>
          <target state="translated">要创建容器扩展，扩展类必须继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;和&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="00fbb5ad0c59c8ac9b4f01ebd1f93f25d057af34" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerContainerExtension. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fb15d63ca35b4f3540ad016b3af11e5cc696ba" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;. For example:</source>
          <target state="translated">若要创建自定义任务菜单扩展，您的扩展类必须同时继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;和&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="4e8b8fce88ff1623601a79f66e65dc30fd582225" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerTaskMenuExtension. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc0ea98f1ab1c227f0ea7e83c76fba2411a0cba" translate="yes" xml:space="preserve">
          <source>To create a datagram suitable for sending in a reply, use &lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram::makeReply&lt;/a&gt;();</source>
          <target state="translated">要创建适合发送答复的数据报，请使用&lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram :: makeReply&lt;/a&gt;（）;。</target>
        </trans-unit>
        <trans-unit id="2c224c1444538d57a11108f65feb0fbea82e4fde" translate="yes" xml:space="preserve">
          <source>To create a document using DOM use code like this:</source>
          <target state="translated">要使用DOM创建一个文档,使用这样的代码。</target>
        </trans-unit>
        <trans-unit id="cfecba2b3a6932dcdf4b5f5f9302a7a6d0dea3cb" translate="yes" xml:space="preserve">
          <source>To create a menu, define at least one &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; as a child of it:</source>
          <target state="translated">要创建菜单，请至少定义一个&lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;作为其子菜单：</target>
        </trans-unit>
        <trans-unit id="96ca27048ac036978c1baf8a603ee098179432c9" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, pass &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ParallelStates&lt;/a&gt; to the &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; constructor.</source>
          <target state="translated">要创建并行状态组，&lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;请将QState :: ParallelStates&lt;/a&gt;传递给&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="d56870857a4fba8adcbc11e08fc642fd3808e56f" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, set childMode to &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ParallelStates.</source>
          <target state="translated">要创建并行状态组，请将childMode设置为&lt;a href=&quot;qstate&quot;&gt;QState .ParallelStates&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7583a1cee4a37ff29efd75ede35bae5ddfacb982" translate="yes" xml:space="preserve">
          <source>To create a property binding, a property is assigned a JavaScript expression that evaluates to the desired value. At its simplest, a binding may be a reference to another property. Take the following example, where the blue &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s height is bound to the height of its parent:</source>
          <target state="translated">为了创建属性绑定，为属性分配了一个JavaScript表达式，该表达式的计算结果为所需的值。最简单的说，绑定可以是对另一个属性的引用。以下面的示例为例，其中蓝色&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;的高度绑定到其父级的高度：</target>
        </trans-unit>
        <trans-unit id="7c32bf0f82af76f299e99cc0c6bc22c865ecfbf6" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="translated">要创建属性表扩展，您的扩展类必须同时继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;和&lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;。然后，由于我们正在实现一个接口，因此必须确保使用&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）宏将其告知元对象系统：</target>
        </trans-unit>
        <trans-unit id="7f57055df675698dac40098b34eedb81b614fffb" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerPropertySheetExtension. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c4d85861d3b5e5c4ca1fdc4fe7cda2274dda7f" translate="yes" xml:space="preserve">
          <source>To create a relatively square button that has slightly rounded corners, use a small value, such as &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">要创建一个具有稍微圆角的相对方形的按钮，请使用较小的值，例如 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06c0d7dbdf6efbf073eacf55224c1c8101c7985c" translate="yes" xml:space="preserve">
          <source>To create a service, do the following steps:</source>
          <target state="translated">要创建一个服务,请执行以下步骤。</target>
        </trans-unit>
        <trans-unit id="acd78a5e638c557eda155f6a1bd49d0933be844b" translate="yes" xml:space="preserve">
          <source>To create a state, add a &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; object to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property, which holds a list of states for that item.</source>
          <target state="translated">要创建状态，请将&lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt;对象添加到项目的&lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;状态&lt;/a&gt;属性中，该属性包含该项目的状态列表。</target>
        </trans-unit>
        <trans-unit id="7d0adc8f65d42702c08ca00af4615175e46e786f" translate="yes" xml:space="preserve">
          <source>To create a table of contents for a manual, create a subproject with a &lt;code&gt;type&lt;/code&gt; property and set it to &lt;code&gt;manual&lt;/code&gt;. The page in the documentation referred to by the &lt;code&gt;indexTitle&lt;/code&gt; property must contain a list of links that acts as a table of contents for the whole manual. QDoc will take the information in this list and create a table of contents for the subproject.</source>
          <target state="translated">要为手册创建目录，请创建一个具有 &lt;code&gt;type&lt;/code&gt; 属性的子项目，并将其设置为 &lt;code&gt;manual&lt;/code&gt; 。 &lt;code&gt;indexTitle&lt;/code&gt; 属性引用的文档中的页面必须包含一个链接列表，这些链接充当整个手册的目录。QDoc将获取此列表中的信息，并为子项目创建目录。</target>
        </trans-unit>
        <trans-unit id="36ea89fb7402d90c4b70f7cc90ff5236b5d88983" translate="yes" xml:space="preserve">
          <source>To create a vertical desktop space (that is, to stack top to bottom instead of left to right), add a &lt;code&gt;virtualDesktopLayout&lt;/code&gt; property after &lt;code&gt;device&lt;/code&gt; with the value of &lt;code&gt;vertical&lt;/code&gt;.</source>
          <target state="translated">要创建垂直桌面空间（即从上到下而不是从左到右堆叠），请在 &lt;code&gt;device&lt;/code&gt; 后面添加一个 &lt;code&gt;virtualDesktopLayout&lt;/code&gt; 属性，其值为 &lt;code&gt;vertical&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3d653b42a97efdcf98a7a0fda0db4a56f6136b7" translate="yes" xml:space="preserve">
          <source>To create an action, use the action editor's &lt;b&gt;New&lt;/b&gt; button, which will then pop up an input dialog. Provide the new action with a &lt;b&gt;Text&lt;/b&gt; -- this is the text that will appear in a menu entry and as the action's tooltip. The text is also automatically added to an &quot;action&quot; prefix, creating the action's &lt;b&gt;Object Name&lt;/b&gt;.</source>
          <target state="translated">要创建动作，请使用动作编辑器的&amp;ldquo; &lt;b&gt;新建&amp;rdquo;&lt;/b&gt;按钮，然后将弹出一个输入对话框。为新操作提供&lt;b&gt;文本&lt;/b&gt; -这是将显示在菜单项中并作为操作工具提示的文本。文本还将自动添加到&amp;ldquo;操作&amp;rdquo;前缀，从而创建操作的&amp;ldquo; &lt;b&gt;对象名称&amp;rdquo;&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="2c2a63ae45a1f157ad89e3395b12a12e4c3e9eda" translate="yes" xml:space="preserve">
          <source>To create an animation, use an appropriate animation type for the type of the property that is to be animated, and apply the animation depending on the type of behavior that is required.</source>
          <target state="translated">要创建动画,请为要动画的属性类型使用适当的动画类型,并根据需要的行为类型应用动画。</target>
        </trans-unit>
        <trans-unit id="b73aa7d03e692976c68c37bf6086ff1f95f7dee2" translate="yes" xml:space="preserve">
          <source>To create an array using &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="translated">要使用&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;创建数组，请使用&lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine :: newArray&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="7b321f5c5c0c320b77a53e11587413b91cc76b07" translate="yes" xml:space="preserve">
          <source>To create an array using QJSValue, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6ca0e70f220cea2260c3edfb777a4ff0542ad3" translate="yes" xml:space="preserve">
          <source>To create an axis step, concatenate an axis specifier and a node test. The following sections list the axis specifiers and node tests that are available.</source>
          <target state="translated">要创建一个轴步,请连接一个轴指定符和一个节点测试。下面的章节列出了可用的轴指定符和节点测试。</target>
        </trans-unit>
        <trans-unit id="7a0cbeea65a93100732eaf9424fc57d690218111" translate="yes" xml:space="preserve">
          <source>To create an extension you must inherit both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and the appropriate base class, and reimplement its functions. Since we are implementing an interface, we must ensure that it is made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro in the extension class's definition. For example:</source>
          <target state="translated">要创建扩展，必须继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;和适当的基类，并重新实现其功能。由于我们正在实现一个接口，因此必须确保使用扩展类定义中的&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）宏将其告知元对象系统。例如：</target>
        </trans-unit>
        <trans-unit id="16848dbe37048f97005540453d734b7b5ef1e5ef" translate="yes" xml:space="preserve">
          <source>To create an iTunes test user, log into &lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;.</source>
          <target state="translated">要创建iTunes测试用户，请登录&lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba4a830997f9fa33e068ab2f25bc6da685931092" translate="yes" xml:space="preserve">
          <source>To create an object type, a QML document should be placed into a text file named as</source>
          <target state="translated">要创建一个对象类型,应将一个QML文档放入一个文本文件中,命名为</target>
        </trans-unit>
        <trans-unit id="01bf512177d18ccb0d1bb9a0b187ebe4a421bbd2" translate="yes" xml:space="preserve">
          <source>To create and edit new forms, open the &lt;b&gt;File&lt;/b&gt; menu and select &lt;b&gt;New Form...&lt;/b&gt; or press &lt;b&gt;Ctrl+N&lt;/b&gt;. Existing forms can also be edited by selecting &lt;b&gt;Open Form...&lt;/b&gt; from the &lt;b&gt;File&lt;/b&gt; menu or pressing &lt;b&gt;Ctrl+O&lt;/b&gt;.</source>
          <target state="translated">要创建和编辑新的形式，打开&lt;b&gt;文件&lt;/b&gt;菜单，选择&lt;b&gt;新建表单...&lt;/b&gt;或按&lt;b&gt;Ctrl + N键&lt;/b&gt;。也可以通过从&amp;ldquo; &lt;b&gt;文件&amp;rdquo;&lt;/b&gt;菜单中选择&amp;ldquo; &lt;b&gt;打开表单...&lt;/b&gt; &amp;rdquo; 或按&lt;b&gt;Ctrl + O&lt;/b&gt;来编辑现有表单。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="82a553a6445c668db1d09f8972f4910285e3188c" translate="yes" xml:space="preserve">
          <source>To create events of a custom type, you need to define an event number, which must be greater than &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::User&lt;/a&gt;, and you may need to subclass &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; in order to pass specific information about your custom event. See the &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; documentation for further details.</source>
          <target state="translated">要创建自定义类型的事件，您需要定义一个事件编号，该事件编号必须大于&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: User&lt;/a&gt;，并且可能需要子类&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;才能传递有关自定义事件的特定信息。有关更多详细信息，请参见&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="af56d9217718b5cf4e05ffb77714d10da1c0915a" translate="yes" xml:space="preserve">
          <source>To create instances of a component in code where a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance is not available, you can use &lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;() or &lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;(). For example, in the scenario below, child items are being created within a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclass:</source>
          <target state="translated">要在无法使用&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;实例的代码中创建组件的实例，可以使用&lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;（）或&lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;（）。例如，在以下情况下，将在&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;子类中创建子项：</target>
        </trans-unit>
        <trans-unit id="de6047375051c672814ef78513a6a18676cdc441" translate="yes" xml:space="preserve">
          <source>To create material slots, follow the steps below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befc27a6b724ef04ec2e30f8e2ff5432b6395cdf" translate="yes" xml:space="preserve">
          <source>To create models that populate incrementally, you can reimplement &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;(). If the reimplementation of &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() adds rows to the model, &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows()&lt;/a&gt; must be called.</source>
          <target state="translated">要创建增量填充的模型，可以重新实现&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;（）和&lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;（）。如果重新实现&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;（）向模型添加行，则必须调用&lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows（）&lt;/a&gt;和&lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33091be195ce3f51bf1057ca78223889e43d2741" translate="yes" xml:space="preserve">
          <source>To create submenus, declare a Menu as a child of another Menu:</source>
          <target state="translated">要创建子菜单,请将一个菜单声明为另一个菜单的子菜单。</target>
        </trans-unit>
        <trans-unit id="2767df73cc666fe65bcc4086b7aaa21d6f45d320" translate="yes" xml:space="preserve">
          <source>To create the COM object when the client asks for it the server must export an implementation of a &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;. The easist way to do this is to use a set of macros:</source>
          <target state="translated">要在客户端请求时创建COM对象，服务器必须导出&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;的实现。简便的方法是使用一组宏：</target>
        </trans-unit>
        <trans-unit id="dfc05acf1ac011d738c7821397030f760b6e36d9" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="translated">要创建这些类型，请通过向&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt;命令提供 &lt;code&gt;type&lt;/code&gt; 参数来标记页面。该 &lt;code&gt;type&lt;/code&gt; 参数是第二个参数，用文件名是第一。</target>
        </trans-unit>
        <trans-unit id="0880526ee90e7f77eb6949ffc28800abe78b46cd" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbea53afd7391a0e78342a085b39bcb959cac2a3" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c36d901d4a220ea1e4fe4a5e1175f092ecd5f53" translate="yes" xml:space="preserve">
          <source>To create this &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object, we first create the definition file, &lt;code&gt;simpleswitch.rep&lt;/code&gt;. This file describes the properties and methods for the object and is input to the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; utility which is part of Qt Remote Objects. Only the interfaces that need to be exposed to &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects are defined in this file.</source>
          <target state="translated">要创建此&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;对象，我们首先创建定义文件 &lt;code&gt;simpleswitch.rep&lt;/code&gt; 。该文件描述了对象的属性和方法，并输入到Qt Remote Objects 的&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;实用程序中。在此文件中仅定义了需要公开给&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;副本&lt;/a&gt;对象的接口。</target>
        </trans-unit>
        <trans-unit id="6c0f6c8abffbd32c1f421c7de16e9910c36df192" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="translated">要创建自己的自定义效果，请创建&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;的子类（或任何其他现有的效果），然后重新实现虚拟函数&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）。每当需要重绘效果时，都会调用此函数。的&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;拉伸&lt;/a&gt;（）函数，用以绘制作为参数画家。有关更多信息，请参考&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）的文档。在&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）函数中，可以调用&lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;（）来获取图形效果源的像素图，然后可以对其进行处理。</target>
        </trans-unit>
        <trans-unit id="35dca4752e7d413a58975b36c8c53a1fc8ecdcba" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of QGraphicsEffect (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a898bd9873ed3dd0cd18e2a6f431a884c02b4b6c" translate="yes" xml:space="preserve">
          <source>To create your own custom style, see &lt;a href=&quot;qtquickcontrols2-customize#creating-a-custom-style&quot;&gt;Creating a Custom Style&lt;/a&gt;. Custom styles do not need to implement all controls. By default, the styling system uses the &lt;a href=&quot;qtquickcontrols2-basic&quot;&gt;Basic style&lt;/a&gt; as a fallback for controls that a custom style does not provide. It is possible to specify a different fallback style to customize or extend one of the built-in styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dbc39d98a3b7d47d8cd5e1882f44ef08ed68bd" translate="yes" xml:space="preserve">
          <source>To customize the appearance of each &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; without having to define your own, you can use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt; properties. To customize the drop shadow, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt; properties.</source>
          <target state="translated">要自定义每个&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt;的外观而不必定义自己的外观，可以使用&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt;属性。要自定义投影，请使用&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="e70151e99cc8552276a9e1bfec4748811fad93de" translate="yes" xml:space="preserve">
          <source>To debug an executable server, run the application in a debugger and start with the command line parameter &lt;code&gt;-activex&lt;/code&gt;. Then start your client and create an instance of your ActiveX control. COM will use the existing process for the next client trying to create an ActiveX control.</source>
          <target state="translated">要调试可执行服务器，请在调试器中运行应用程序，并从命令行参数 &lt;code&gt;-activex&lt;/code&gt; 开始。然后启动您的客户端并创建您的ActiveX控件的实例。COM将现有的过程用于下一个尝试创建ActiveX控件的客户端。</target>
        </trans-unit>
        <trans-unit id="b1a1422665b0e2d84739cf689a21e64cc0b24f35" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48715a0a1aa281de08597b22876c63f4417a3c88" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="translated">要在Visual Studio中调试进程内服务器，请将服务器项目设置为活动项目，并在项目设置中指定&amp;ldquo;调试会话可执行的客户端&amp;rdquo;（例如，使用ActiveX测试容器）。您可以在代码中设置断点，如果已安装调试版本，也可以进入&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;和Qt代码。</target>
        </trans-unit>
        <trans-unit id="8d6d53607b2d75e2cb48061d7d53b8d5288cd9cd" translate="yes" xml:space="preserve">
          <source>To debug your server run it with -dumpidl outputfile and check where it crashes.</source>
          <target state="translated">要调试你的服务器,使用-dumpidl outputfile运行它,检查它在哪里崩溃。</target>
        </trans-unit>
        <trans-unit id="66a5e71f4fa016e8b6a5350a6e3f9f3601bcbb0c" translate="yes" xml:space="preserve">
          <source>To declare a property, use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY()&lt;/a&gt; macro in a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="translated">若要声明属性，请在继承&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;的类中使用&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY（）&lt;/a&gt;宏。</target>
        </trans-unit>
        <trans-unit id="0360b68c626ea835bebf2bfc518b0780d95c3cfa" translate="yes" xml:space="preserve">
          <source>To define a buddy widget for a label, click on the label, drag the connection to another widget on the form, and release the mouse button. The connection shown indicates how input focus is passed to the buddy widget. You can use the form preview to test the connections between each label and its buddy.</source>
          <target state="translated">要为标签定义好友小组件,请单击标签,将连接拖动到窗体上的另一个小组件,然后释放鼠标按钮。所显示的连接表示如何将输入焦点传递给好友小组件。您可以使用表单预览来测试每个标签与其好友之间的连接。</target>
        </trans-unit>
        <trans-unit id="636712b0cb3960110f9c8112889e686d6afb6ed4" translate="yes" xml:space="preserve">
          <source>To define a class use the &lt;code&gt;class&lt;/code&gt; keyword, followed by the name you want for your type, and then enclose your API in brackets like so</source>
          <target state="translated">要定义类，请使用 &lt;code&gt;class&lt;/code&gt; 关键字，后跟您想要的类型名称，然后将API括在方括号中，如下所示</target>
        </trans-unit>
        <trans-unit id="12c2b34290a4cd4461c82e19bbc59fd22df515c8" translate="yes" xml:space="preserve">
          <source>To define a drawing area in the Canvas item set the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties. For example, the following code creates a Canvas item which has a drawing area with a height of 100 pixels and width of 200 pixels:</source>
          <target state="translated">要在&amp;ldquo;画布&amp;rdquo;项中定义绘图区域，请设置 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 属性。例如，以下代码创建一个Canvas项目，其Canvas绘图区域的高度为100像素，宽度为200像素：</target>
        </trans-unit>
        <trans-unit id="521230a25b19adab50149f1de957e5e1778d2cc1" translate="yes" xml:space="preserve">
          <source>To define multiple Transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237460d82f046cee21b9f4e182de5fb34d4888f3" translate="yes" xml:space="preserve">
          <source>To define multiple transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="translated">要定义多个转换，请指定&lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item :: transitions&lt;/a&gt;作为列表：</target>
        </trans-unit>
        <trans-unit id="cdd1aa6229fc5dc07c802818527d5d2a5d325dc1" translate="yes" xml:space="preserve">
          <source>To define the layout direction for a particular locale, declare the dedicated string literal &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; in context &lt;code&gt;QGuiApplication&lt;/code&gt; as either &quot;LTR&quot; or &quot;RTL&quot;.</source>
          <target state="translated">要定义特定语言环境的布局方向， &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; 在上下文 &lt;code&gt;QGuiApplication&lt;/code&gt; 中将专用字符串文字QT_LAYOUT_DIRECTION 声明为&amp;ldquo; LTR&amp;rdquo;或&amp;ldquo; RTL&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8c602695b2e00e6ebc1596ab8c081b2992c0e3ee" translate="yes" xml:space="preserve">
          <source>To delete a page, select &lt;b&gt;Delete Page&lt;/b&gt; from the toolbox widget's context menu.</source>
          <target state="translated">要删除页面，&lt;b&gt;请&lt;/b&gt;从工具箱小部件的上下文菜单中选择&amp;ldquo; &lt;b&gt;删除页面&lt;/b&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9c2e5b9cf85294ed97eb4f2b0a49a9baddaa0e1d" translate="yes" xml:space="preserve">
          <source>To delete a tab:</source>
          <target state="translated">要删除一个标签。</target>
        </trans-unit>
        <trans-unit id="3b8e9e0d2d5bb873a528c34b89848f84f1c67828" translate="yes" xml:space="preserve">
          <source>To demonstrate how data can be retrieved from a model, using model indexes, we set up a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; without a view and display the names of files and directories in a widget. Although this does not show a normal way of using a model, it demonstrates the conventions used by models when dealing with model indexes.</source>
          <target state="translated">为了演示如何使用模型索引从模型中检索数据，我们设置了没有视图的&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;，并在小部件中显示文件和目录的名称。尽管这没有显示使用模型的正常方法，但是它说明了在处理模型索引时模型使用的约定。</target>
        </trans-unit>
        <trans-unit id="23bb4f43022105d83bee84cf85192d718e4022d0" translate="yes" xml:space="preserve">
          <source>To demonstrate some of the principal features of selections, we construct an instance of a custom table model with 32 items in total, and open a table view onto its data:</source>
          <target state="translated">为了演示选择的一些主要特征,我们构建了一个共32个项目的自定义表模型实例,并在其数据上打开一个表视图。</target>
        </trans-unit>
        <trans-unit id="232c2ad79105d729fe63e677713ea96eafbdd588" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at a small example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The statechart for this machine is as follows:</source>
          <target state="translated">为了演示状态机API的核心功能，让我们看一个小例子：具有三个状态 &lt;code&gt;s1&lt;/code&gt; ， &lt;code&gt;s2&lt;/code&gt; 和 &lt;code&gt;s3&lt;/code&gt; 的状态机。状态机由单个&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;控制；单击该按钮时，机器将转换为另一种状态。最初，状态机处于状态 &lt;code&gt;s1&lt;/code&gt; 。该计算机的状态图如下：</target>
        </trans-unit>
        <trans-unit id="7d8c504baae60f12e60b66ca8ae4d452e033a100" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at an example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single Button; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The following is a state chart showing the different states in our example.</source>
          <target state="translated">为了演示状态机API的核心功能，让我们看一个示例：具有三个状态 &lt;code&gt;s1&lt;/code&gt; ， &lt;code&gt;s2&lt;/code&gt; 和 &lt;code&gt;s3&lt;/code&gt; 的状态机。状态机由单个按钮控制；单击该按钮时，机器将转换为另一种状态。最初，状态机处于状态 &lt;code&gt;s1&lt;/code&gt; 。以下是状态图，显示了我们示例中的不同状态。</target>
        </trans-unit>
        <trans-unit id="9aade4445c4a9f13cd4201b65b8311a26873dcf8" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="translated">为了演示，我们创建了一个简单的Calculator Form应用程序。它基于原始的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;计算器表单&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="be9ebb34f019d1e33e69290ec15981a99521eab0" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorform-example.html&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3506352b9653e4fb1a0e915d62bbd3ac2a7bc844" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-calculatorform-example.html&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09875b7d23305c526572d4b5302c7b3d8cdfb7e" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create two instances of our previously defined component and set the first one to have focus. The intention is that when the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys are pressed, the first of the two components receives the event and responds accordingly.</source>
          <target state="translated">为了演示，我们创建了先前定义的组件的两个实例，并将第一个实例设置为具有焦点。目的是当按下 &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; 或 &lt;code&gt;C&lt;/code&gt; 键时，两个组件中的第一个组件接收事件并做出相应的响应。</target>
        </trans-unit>
        <trans-unit id="76075a4bd6a74d00cf7c9622503b3219a28c1c87" translate="yes" xml:space="preserve">
          <source>To demonstrate, we use the Qt Widgets animation easing example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77915c725f4e90ed2d82ab53947eb39c04d3e920" translate="yes" xml:space="preserve">
          <source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</source>
          <target state="translated">为了描述算法的复杂性,我们使用以下术语,基于 &quot;大哦 &quot;符号。</target>
        </trans-unit>
        <trans-unit id="3d7889216337e1c79e0a700cf9e93146ec92e9c1" translate="yes" xml:space="preserve">
          <source>To detect other failures check the output of &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() or &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;().</source>
          <target state="translated">要检测其他故障，请检查&lt;a href=&quot;qpainter#begin&quot;&gt;QPainter :: begin&lt;/a&gt;（）或&lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter :: newPage&lt;/a&gt;（）的输出。</target>
        </trans-unit>
        <trans-unit id="f5b57b0e303bce0cb02dc3888fc360ece9199c40" translate="yes" xml:space="preserve">
          <source>To detect value changes made in the UI layer you can connect to the &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal. However, note that &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() is &lt;b&gt;NOT&lt;/b&gt; emitted when changes are made by calling &lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;() or &lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;() - it is only emitted when a value is updated from QML.</source>
          <target state="translated">要检测在UI层中进行的值更改，可以连接到&lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）信号。但是，请注意，当通过调用&lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;（）或&lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;（）进行更改时，&lt;b&gt;不会&lt;/b&gt;发出&lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）-仅当从QML更新值时才发出。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="de0644713aee6e242015906cdf56846e10af46eb" translate="yes" xml:space="preserve">
          <source>To determine the attributes of the font actually used in the window system, use a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object, e.g.</source>
          <target state="translated">要确定窗口系统中实际使用的字体的属性，请使用&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;对象，例如</target>
        </trans-unit>
        <trans-unit id="27687f31e3222b2c704e422d9733df4344fbb379" translate="yes" xml:space="preserve">
          <source>To determine the length of the array, access the &lt;code&gt;&quot;length&quot;&lt;/code&gt; property. To access array elements, use the &lt;a href=&quot;qjsvalue#property-1&quot;&gt;property&lt;/a&gt;(quint32 arrayIndex) overload. The following code reads the array we created above back into a list:</source>
          <target state="translated">要确定数组的长度，请访问 &lt;code&gt;&quot;length&quot;&lt;/code&gt; 属性。要访问数组元素，请使用&lt;a href=&quot;qjsvalue#property-1&quot;&gt;属性&lt;/a&gt;（quint32 arrayIndex）重载。以下代码将我们在上面创建的数组读回到列表中：</target>
        </trans-unit>
        <trans-unit id="db9bf2959b33b982ef422645bf01dc26957ebbf2" translate="yes" xml:space="preserve">
          <source>To determine the number of rows affected by a non-&lt;code&gt;SELECT&lt;/code&gt; statement, use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;().</source>
          <target state="translated">要确定受非 &lt;code&gt;SELECT&lt;/code&gt; 语句影响的行数，请使用&lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="49b00d09d8a313538503ace48ff3400c58d6d26d" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the +Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50e263753d1f900b27c6ac2089f568e593da545" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the -Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e793c01ffa7b30f31211ea3ee05fb08ef4b77" translate="yes" xml:space="preserve">
          <source>To determine what a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; refers to, the</source>
          <target state="translated">要确定&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;指的是什么，</target>
        </trans-unit>
        <trans-unit id="78370ad8e10a5f1550b0917e4db21701059e835e" translate="yes" xml:space="preserve">
          <source>To determine what a QXmlName refers to, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de072ff5a4f8f5f27c0ba6ad638c7dc42698c91" translate="yes" xml:space="preserve">
          <source>To determine whether a database driver supports a given feature, use &lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver::hasFeature&lt;/a&gt;(). In the following example, we call &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() to determine the size of a result set of the underlying database supports that feature; otherwise, we navigate to the last record and use the query's position to tell us how many records there are.</source>
          <target state="translated">若要确定数据库驱动程序是否支持给定功能，请使用&lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver :: hasFeature&lt;/a&gt;（）。在下面的示例中，我们调用&lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt;（）来确定基础数据库支持该功能的结果集的大小；否则，我们导航到最后一条记录，并使用查询的位置来告诉我们有多少条记录。</target>
        </trans-unit>
        <trans-unit id="f4af566d30f9855053a412d6a6ed49be993f0f25" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::NoError&lt;/a&gt;.</source>
          <target state="translated">要确定是否发生错误，请检查&lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply :: error&lt;/a&gt;（）是否等于&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply :: NoError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19dc0f738286f03277cfbb373d2c0e42a2d0d5d7" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::NoError&lt;/a&gt;.</source>
          <target state="translated">要确定是否发生错误，请检查&lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply :: error&lt;/a&gt;（）是否等于&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply :: NoError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52b2a8072d68cae4cf0f13521a3d55d8424c8bbb" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html&quot;&gt;Qt Creator: Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8152693b302591b8d689ea068dbe289b5fc1db" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="translated">要从头开始开发简单的应用程序，请参阅&lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;创建移动应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="115328fb8e6fff6dfba67f71c74424a9e9df69ae" translate="yes" xml:space="preserve">
          <source>To develop style aware widgets (i.e., widgets that conform to the style in which they are drawn), you need to draw them using the current style. This document shows how widgets draw themselves and which possibilities the style gives them.</source>
          <target state="translated">要开发样式感知的小部件(即符合绘制样式的小部件),您需要使用当前的样式来绘制它们。本文档展示了小组件是如何绘制的,以及风格给它们提供了哪些可能性。</target>
        </trans-unit>
        <trans-unit id="2b86c4e12dd9a51c3f35a31b2899bdd694654762" translate="yes" xml:space="preserve">
          <source>To disable SSL support in a Qt build, configure Qt with the &lt;code&gt;-no-openssl&lt;/code&gt; option.</source>
          <target state="translated">要在Qt构建中禁用SSL支持，请使用 &lt;code&gt;-no-openssl&lt;/code&gt; 选项配置Qt 。</target>
        </trans-unit>
        <trans-unit id="00554aac225254a9ce5222c7ed4391aff07828aa" translate="yes" xml:space="preserve">
          <source>To disable all blacklisting, set the environment variable &lt;code&gt;QT_NO_OPENGL_BUGLIST&lt;/code&gt; to any value. This will skip reading any configuration files, and instead will assume that nothing is disabled, regardless of the driver or OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d326b8d2456c6feacc013bacffe0ed2bbd45d1" translate="yes" xml:space="preserve">
          <source>To disable mouse events for an item (i.e., make it transparent for mouse events), call setAcceptedMouseButtons(0).</source>
          <target state="translated">要禁用一个项目的鼠标事件(即使其对鼠标事件透明化),调用setAcceptedMouseButtons(0)。</target>
        </trans-unit>
        <trans-unit id="b323854ba1ebb3dd7a8e3314eb85590755efe9ec" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy for this socket, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">要禁用对此套接字使用代理，请使用&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt;代理类型：</target>
        </trans-unit>
        <trans-unit id="9d00c974ae095cff55f1135181e516df84f9953e" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">要禁用代理，请使用&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt;代理类型：</target>
        </trans-unit>
        <trans-unit id="6dbeb4bca6a5e3a208cf1d780f1d01de04b0e20e" translate="yes" xml:space="preserve">
          <source>To discard all standard output from the process, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is more efficient than simply never reading the standard output, as no &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; buffers are filled.</source>
          <target state="translated">要丢弃流程中的所有标准输出，请在此处传递&lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;（）。这比根本不读取标准输出要有效，因为没有&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;缓冲区被填满。</target>
        </trans-unit>
        <trans-unit id="4c1dfa2e38837f3e182dcd3b7e1dfdd47e56f13c" translate="yes" xml:space="preserve">
          <source>To discard all standard output from the process, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is more efficient than simply never reading the standard output, as no &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; buffers are filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f52aad99eec4bf9b20f309412e90176296e7a48" translate="yes" xml:space="preserve">
          <source>To discover the nearby Bluetooth devices:</source>
          <target state="translated">要发现附近的蓝牙设备。</target>
        </trans-unit>
        <trans-unit id="a534004bdb54ac02295d4f983cabcde4eb345542" translate="yes" xml:space="preserve">
          <source>To display the given search results use the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; or build up your own one if you need more advanced functionality. Note that the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; can not be instantiated directly, you must retrieve the widget from the search engine in use as all connections will be established for you by the widget itself.</source>
          <target state="translated">要显示给定的搜索结果，请使用&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt;或在需要更多高级功能时构建自己的搜索结果。请注意，不能直接实例化&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt;，您必须从使用中的搜索引擎中检索该窗口小部件，因为窗口小部件本身将为您建立所有连接。</target>
        </trans-unit>
        <trans-unit id="102f27f6d0599b8edbfb7de3b776e4fbfe0f4450" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72881948bb70802fc5e2383d56e72743a5d55d28" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="translated">要显示由QML文档定义的图形场景，可以将其与&lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt;一起加载。对于像这样的简单UI文件，请从Qt Creator中选择&amp;ldquo; &lt;b&gt;文件&amp;rdquo;&amp;gt;&amp;ldquo;新文件&amp;rdquo;或&amp;ldquo;项目&amp;rdquo;&amp;gt;&amp;ldquo;应用程序&amp;rdquo;&amp;gt;&amp;ldquo; Qt Quick UI&amp;rdquo;&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="9f8ca203f4829cb4103f45cd63e96a58a7425c29" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="translated">要在应用程序中显示电影，可以将&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;对象传递给&lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel :: setMovie&lt;/a&gt;（）。例：</target>
        </trans-unit>
        <trans-unit id="e38862d58a567650c791ee0ffc0709d24086b6ae" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your QMovie object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677ecf257c36ecf7200ecb35423451235ef61e86" translate="yes" xml:space="preserve">
          <source>To distinguish the</source>
          <target state="translated">为了区分</target>
        </trans-unit>
        <trans-unit id="27ef7c0db92cc246e83e1d7fc6053acb2ddf2c72" translate="yes" xml:space="preserve">
          <source>To distribute the available space according to the space requirement of each column or row, call the view's &lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;() or &lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;() functions.</source>
          <target state="translated">要根据每一列或每一行的空间要求分配可用空间，请调用视图的&lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;（）或&lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="564faa3728a2dbdfd8744cb9fa46aeeaf3d47734" translate="yes" xml:space="preserve">
          <source>To do this, you have to switch to &lt;b&gt;Edit Signals/Slots&lt;/b&gt; mode, either by pressing &lt;b&gt;F4&lt;/b&gt; or selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt; from the &lt;b&gt;Edit&lt;/b&gt; menu.</source>
          <target state="translated">为此，您必须通过按&lt;b&gt;F4&lt;/b&gt;或从&amp;ldquo; &lt;b&gt;编辑&amp;rdquo;&lt;/b&gt;菜单中选择&amp;ldquo; &lt;b&gt;编辑信号/插槽&amp;rdquo;&lt;/b&gt;来切换到&amp;ldquo; &lt;b&gt;编辑信号/插槽&amp;rdquo;&lt;/b&gt;模式。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="54de2ad84d48d9d7c293176637193c14b489bca0" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="translated">要记录QML类型，请先创建一个使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\ qmltype&lt;/a&gt;命令作为其主题命令的QDoc注释。</target>
        </trans-unit>
        <trans-unit id="7c71083be4241c38fade29157a7f49b40af4be41" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5dabe7ac510664b9ae87806e54c045ea0316fbf" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09b990f013f9bdb513270267d1b6915af145c9e" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2d5583409e2053223dec82c1cab6ebcd21b467" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">要下载并安装Qt for Linux，请按照&amp;ldquo; &lt;a href=&quot;gettingstarted#&quot;&gt;Qt入门&amp;rdquo;&lt;/a&gt;页面上的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="ac66d564b4bd5e705f72559279700303f6deffa0" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6222aa165b9921f7e413be9611472ca48c9069c7" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">要下载并安装Windows版Qt，请按照&amp;ldquo; &lt;a href=&quot;gettingstarted#&quot;&gt;Qt入门&amp;rdquo;&lt;/a&gt;页面上的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="ecbd3f268c12a5a8ac1e94c135a30447563187f4" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9609377770feedc94c407c90ced6c69ada91b" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">要下载并安装适用于macOS的Qt，请按照&amp;ldquo; &lt;a href=&quot;gettingstarted#&quot;&gt;Qt入门&amp;rdquo;&lt;/a&gt;页面上的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="0d6a8eb87459e3bf1e33d477cc4243f493dd3a9c" translate="yes" xml:space="preserve">
          <source>To draw an arc or circle, call the arcTo(</source>
          <target state="translated">要绘制一个弧形或圆形,调用arcTo(</target>
        </trans-unit>
        <trans-unit id="bb88c81ea3b00b5582ff3d8ba43dda532cb5c1f9" translate="yes" xml:space="preserve">
          <source>To draw images, load them by calling the Canvas's &lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage()&lt;/a&gt; method and then request to paint them in the &lt;code&gt;onImageLoaded&lt;/code&gt; handler.</source>
          <target state="translated">要绘制图像，请通过调用Canvas的&lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage（）&lt;/a&gt;方法加载它们，然后请求在 &lt;code&gt;onImageLoaded&lt;/code&gt; 处理程序中对其进行绘制。</target>
        </trans-unit>
        <trans-unit id="42cfe2184a40f7a2069a19c867e30c635c56ee3b" translate="yes" xml:space="preserve">
          <source>To draw its up and down arrows, &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; uses the &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt; and &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt; primitive elements. Here's how to reimplement the &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;() function to draw them differently:</source>
          <target state="translated">为了绘制上下箭头，&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;使用&lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt;和&lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt;基本元素。这是重新实现&lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;（）函数以不同方式绘制它们的方法：</target>
        </trans-unit>
        <trans-unit id="c451f286685115955e2bed890f44a94ede197e03" translate="yes" xml:space="preserve">
          <source>To dynamically load a component defined in a QML file, call the &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; function in the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt object&lt;/a&gt;. This function takes the URL of the QML file as its only argument and creates a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; object from this URL.</source>
          <target state="translated">要动态加载QML文件中定义的组件，请在&lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt对象中&lt;/a&gt;调用&lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent（）&lt;/a&gt;函数。此函数将QML文件的URL作为其唯一参数，并从该URL 创建&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="097167f467a3974c7e89c1530d65692536a62c49" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="translated">要发出信号，请将其作为方法调用。发出信号时，将调用任何相关的&lt;a href=&quot;#signal-handler-attributes&quot;&gt;信号处理程序&lt;/a&gt;，并且处理程序可以使用定义的信号参数名称来访问相应的参数。</target>
        </trans-unit>
        <trans-unit id="3f53c889f6ba19e5274fd287be550737e561bab0" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;qtqml-syntax-objectattributes#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19a580f99381c23f452ddf3c4869e73c2d081ca" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to be partially transparent, it needs to be stacked on top of all other widgets. This means you cannot have other widgets partially covering the chart when using accelerated series.</source>
          <target state="translated">为了使&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;部分透明，需要将其堆叠在所有其他小部件之上。这意味着在使用加速系列时，不能有其他小部件部分覆盖图表。</target>
        </trans-unit>
        <trans-unit id="d98b5aa396be67022f1fb6f335f462dbdb0bc253" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to do anti-aliased rendering, use &lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt;().</source>
          <target state="translated">要使&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;能够进行抗锯齿渲染，请使用&lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7a2c22ee8c5d7f52e6d31deb54a373b18ea48e62" translate="yes" xml:space="preserve">
          <source>To enable &lt;code&gt;tslib&lt;/code&gt; support, set the &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; (for &lt;code&gt;eglfs&lt;/code&gt;) or &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; (for &lt;code&gt;linuxfb&lt;/code&gt;) environment variable to 1. To change the device, set the &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; environment variable or pass the device name on the command-line. Note that the &lt;code&gt;tslib&lt;/code&gt; input handler generates mouse events and supports single touch only, as opposed to &lt;code&gt;evdevtouch&lt;/code&gt; which generates true multi-touch &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; events too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9dd6084e73aed0c0f059a5ad3f096b6a66d2b1" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need to set a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with the needed sample count (see &lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat::setSamples&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874dfcc9fdaac3126976065732207effa2ed47e3" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new QGLWidget as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need OpenGL sample buffer support (see QGLFormat::sampleBuffers()).</source>
          <target state="translated">要启用OpenGL渲染，只需调用&lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: setViewport&lt;/a&gt;（）即可将新的QGLWidget设置为&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;的视口。如果要使用抗锯齿的OpenGL，则需要OpenGL样本缓冲区支持（请参阅QGLFormat :: sampleBuffers（））。</target>
        </trans-unit>
        <trans-unit id="1e53be20a052aea05d6757f3a9748a7619271c8f" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new QOpenGLWidget as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need to set a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with the needed sample count (see &lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat::setSamples&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338d65334f9a13bbbe546f8b507c5dc7534dc1d" translate="yes" xml:space="preserve">
          <source>To enable Qt Multimedia Widgets in a project, add this directive into the C++ files:</source>
          <target state="translated">要在一个项目中启用Qt多媒体Widgets,请在C++文件中添加这个指令。</target>
        </trans-unit>
        <trans-unit id="4e0ae11fd48c631a5df540e6fb36da76c615182e" translate="yes" xml:space="preserve">
          <source>To enable Qt SQL in a project, add this directive into the C++ files:</source>
          <target state="translated">要在项目中启用Qt SQL,请在C++文件中添加此指令。</target>
        </trans-unit>
        <trans-unit id="0645941442dc24eb4ff90f94b85df46b24b4017d" translate="yes" xml:space="preserve">
          <source>To enable Qt Test in a project, add this directive into the C++ files:</source>
          <target state="translated">要在项目中启用Qt Test,请在C++文件中添加此指令。</target>
        </trans-unit>
        <trans-unit id="5873c6978dbf0682c31f63e9b19264330fefbb6c" translate="yes" xml:space="preserve">
          <source>To enable a project to be built in both modes, you must add the &lt;code&gt;debug_and_release&lt;/code&gt; option to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="translated">要使项目可以在两种模式下构建，必须将 &lt;code&gt;debug_and_release&lt;/code&gt; 选项添加到 &lt;code&gt;CONFIG&lt;/code&gt; 变量：</target>
        </trans-unit>
        <trans-unit id="1ff46e8bef769bb8c1125621845ba41087f769a1" translate="yes" xml:space="preserve">
          <source>To enable additional layers and extensions, provide the list via &lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;()</source>
          <target state="translated">要启用其他图层和扩展，请通过&lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;（）和&lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;（）提供列表</target>
        </trans-unit>
        <trans-unit id="1162d7488e2af5b103ab4a85a8b657fc5cbb32da" translate="yes" xml:space="preserve">
          <source>To enable again, assign a new &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;:</source>
          <target state="translated">要再次启用，请分配一个新的&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fb1b03533866db9af8f9e815ab69ee74ae46631a" translate="yes" xml:space="preserve">
          <source>To enable also the pasting of clipboard content from JavaScript, use &lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste&lt;/a&gt;.</source>
          <target state="translated">要同时启用来自JavaScript的剪贴板内容的粘贴功能，请使用&lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e494c85ec970020aa3c30dc3d670c62740b7ecf" translate="yes" xml:space="preserve">
          <source>To enable background running, uncomment &lt;code&gt;android.app.background_running&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt; and set it to true (&lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ).</source>
          <target state="translated">要启用后台运行，请取消注释 &lt;code&gt;android.app.background_running&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 并将其设置为true（ &lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="46827c694971830b1b58a095ef0c2c4b52c57ee6" translate="yes" xml:space="preserve">
          <source>To enable compile time type registration, each Qt Quick Controls style is now a proper QML module. Previously, a single &lt;code&gt;Button.qml&lt;/code&gt; was sufficient to create your own style. While convenient, this required some non-standard API, which in turn required adaptation in tooling like Qt Designer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1272d72ae29a37e07175c513526c2874f40b62e" translate="yes" xml:space="preserve">
          <source>To enable creation of objects at run-time, call the &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;() template function to register it with the meta-object system. This also makes the type available for queued signal-slot communication as long as you call it before you make the first connection that uses the type.</source>
          <target state="translated">要在运行时启用对象创建，请调用&lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;（）模板函数以将其注册到元对象系统。只要您在建立使用该类型的第一个连接之前就调用它，这还使该类型可用于排队的信号插槽通信。</target>
        </trans-unit>
        <trans-unit id="25a6f872882df17687b295bad80c78ef3d2c7a2f" translate="yes" xml:space="preserve">
          <source>To enable debugging -- from the start or to attach a debugger later on -- start the application with the following arguments:</source>
          <target state="translated">要启用调试--从一开始就启用或者以后附加调试器--用以下参数启动应用程序。</target>
        </trans-unit>
        <trans-unit id="96c5d6206105cb45573d8cfe9d7139cb5ebf2537" translate="yes" xml:space="preserve">
          <source>To enable editing in your model, you must also implement &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;(), and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags&lt;/a&gt;() to ensure that &lt;code&gt;ItemIsEditable&lt;/code&gt; is returned. You can also reimplement &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;() to control the way the headers for your model are presented.</source>
          <target state="translated">要在模型中启用编辑，还必须实现&lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;（）和重新实现&lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;标志&lt;/a&gt;（）以确保返回 &lt;code&gt;ItemIsEditable&lt;/code&gt; 。您还可以重新实现&lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;（）和&lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;（）来控制呈现模型标头的方式。</target>
        </trans-unit>
        <trans-unit id="b9415e3b27fdbb1b4e2e9fbaffb3b077af4dba7f" translate="yes" xml:space="preserve">
          <source>To enable in process screen readers, all events must be sent after the change has happened.</source>
          <target state="translated">要启用进程中读屏器,所有事件必须在变化发生后发送。</target>
        </trans-unit>
        <trans-unit id="6dac4223acdd40a1f7d7d600929c6a6cbb9c901d" translate="yes" xml:space="preserve">
          <source>To enable item dragging, set the view's &lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">要启用项目拖动，请将视图的&lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt;属性设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b5a0e6494560eaf4882048760b2cf78e36cad80" translate="yes" xml:space="preserve">
          <source>To enable multisampling, set the number of requested samples on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; that is passed to &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;(). On systems that do not support it the request may get ignored.</source>
          <target state="translated">要启用多重采样，请在传递给&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）的&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;上设置请求的采样数。在不支持它的系统上，该请求可能会被忽略。</target>
        </trans-unit>
        <trans-unit id="1581034ebf9d51d26aa92e339cbd7c0fb6f251c3" translate="yes" xml:space="preserve">
          <source>To enable offline generation of material shaders in your project, add the following to your project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142605f19b421aaaa0c5c63389e30bd395f0d471" translate="yes" xml:space="preserve">
          <source>To enable other devices to find your service, create a &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; with the applicable attributes for your service and register it using &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo::registerService&lt;/a&gt;(). Call &lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;() to get the channel number that is being used.</source>
          <target state="translated">要使其他设备能够找到您的服务，请创建一个具有适用于您的服务的属性的&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt;，然后使用&lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo :: registerService&lt;/a&gt;（）注册它。调用&lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;（）以获取正在使用的通道号。</target>
        </trans-unit>
        <trans-unit id="1dec42b7d3cbb49bb6c6601b169b4fbf45629b6d" translate="yes" xml:space="preserve">
          <source>To enable the &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; to retrieve the proper documentation to a given link, every documentation set has to have a unique identifier. A unique identifier also makes it possible for the help collection to keep track of a documentation set without relying on its file name. The Qt help system uses a namespace as identifier which is defined by the mandatory namespace tags. In the example above, the namespace is &quot;mycompany.com.myapplication.1.0&quot;.</source>
          <target state="translated">为了使&lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt;能够检索到给定链接的正确文档，每个文档集都必须具有唯一的标识符。唯一标识符还使帮助集合可以跟踪文档集而无需依赖其文件名。Qt帮助系统使用名称空间作为标识符，该名称空间由强制名称空间标签定义。在上面的示例中，名称空间是&amp;ldquo; mycompany.com.myapplication.1.0&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2ed4fa65eb80d4af0440920652a583c187b1053c" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;. Objects that support selections can define actions to change the selection.</source>
          <target state="translated">为了使用户能够与访问对象的对象必须实现互动&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;除了&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;。支持选择的对象可以定义更改选择的动作。</target>
        </trans-unit>
        <trans-unit id="d7b309bd1d9bfd39692f28a10a2ed791b10269b9" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to QAccessibleInterface. Objects that support selections can define actions to change the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9a2ff5d07ec13b638513a8fbcd2ebc9ff4a2ab" translate="yes" xml:space="preserve">
          <source>To enable the user to move the items around within the view, we must set the list widget's &lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode&lt;/a&gt;:</source>
          <target state="translated">为了使用户能够在视图内移动项目，我们必须设置列表小部件的&lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ab021340b3b0172776086379b98cd71af66d1eb3" translate="yes" xml:space="preserve">
          <source>To enable this feature in a top-level widget, set its &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute with &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() and ensure that its background is painted with non-opaque colors in the regions you want to be partially transparent.</source>
          <target state="translated">要在顶级窗口小部件中启用此功能，请使用&lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;（）设置其&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_TranslucentBackground&lt;/a&gt;属性，并确保其背景在要部分透明的区域中涂有不透明的颜色。</target>
        </trans-unit>
        <trans-unit id="9125277fa312542eb22ae73faebcbfe60bb02a28" translate="yes" xml:space="preserve">
          <source>To enable this instead of directly using OpenGL, the following environment variables can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd0ffcf560e599409a5dc4562e76e194ff7437b" translate="yes" xml:space="preserve">
          <source>To enable this model, use the command-line argument &lt;code&gt;--process-per-site&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt;.</source>
          <target state="translated">要启用此模型，请使用命令行参数 &lt;code&gt;--process-per-site&lt;/code&gt; 。请参阅&lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;使用命令行参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93808c402beed6e0eeca237097cf151794335cb6" translate="yes" xml:space="preserve">
          <source>To enable use of &lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;() with a custom item, reimplement this function and declare a Type enum value equal to your custom item's type. Custom items must return a value larger than or equal to &lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt; (65536).</source>
          <target state="translated">要使&lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;（）与自定义项目一起使用，请重新实现此函数并声明一个Type枚举值，该值等于自定义项目的类型。自定义项必须返回一个大于或等于&lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt;（65536）的值。</target>
        </trans-unit>
        <trans-unit id="f4536380ce40a5e2a04b3479d6ae865efb72d096" translate="yes" xml:space="preserve">
          <source>To enable user interaction with the pie chart, some basic signals are emitted when users click pie slices or hover the mouse over them.</source>
          <target state="translated">为了实现用户与饼图的交互,当用户点击饼片或将鼠标悬停在饼片上时,会发出一些基本信号。</target>
        </trans-unit>
        <trans-unit id="ab2ceb31dac20e8ca1b52170d124221fb2753b95" translate="yes" xml:space="preserve">
          <source>To ensure that drawing operations are as fast as possible, &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; and its subclasses have public data members. See the &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; class documentation for details on how to use it.</source>
          <target state="translated">为了确保绘图操作尽可能快，&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;及其子类具有公共数据成员。有关如何使用它的详细信息，请参见&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;类文档。</target>
        </trans-unit>
        <trans-unit id="62ff9df43f53693353d70e441423a5dcc7762b1e" translate="yes" xml:space="preserve">
          <source>To ensure that operations with &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; are efficient, e.g., copying names and comparing them, each instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; construction time. The three components of the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="translated">为了确保使用&lt;a href=&quot;qxmlname&quot;&gt;QXmlName的&lt;/a&gt;操作高效，例如复制名称并进行比较，&lt;a href=&quot;qxmlname&quot;&gt;QXmlName的&lt;/a&gt;每个实例都与一个&lt;a href=&quot;qxmlnamepool&quot;&gt;名称池&lt;/a&gt;相关联，该名称池必须在&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;构造时指定。&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;的三个组成部分（即名称空间URI，本地名称和前缀）存储在映射到标识符的名称池中，以便可以共享。因此，创建&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;的有效实例的唯一方法是使用类构造函数，其中必须指定&lt;a href=&quot;qxmlnamepool&quot;&gt;名称池&lt;/a&gt;，本地名称，名称空间URI和前缀。</target>
        </trans-unit>
        <trans-unit id="f94d91a6637c2d7910589b0e301a66529e1daf40" translate="yes" xml:space="preserve">
          <source>To ensure that operations with QXmlName are efficient, e.g., copying names and comparing them, each instance of QXmlName is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at QXmlName construction time. The three components of the QXmlName, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of QXmlName is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1e730033532e279b8bb13f9ebfce5ed261932d" translate="yes" xml:space="preserve">
          <source>To ensure that the documentation remains synchronized with the source file, a substring of the line must be specified as an argument to the command. Note that the command considers the rest of the line as part of its argument, make sure to follow the substring with a line break.</source>
          <target state="translated">为了确保文档与源文件保持同步,必须指定行的子串作为命令的参数。注意,命令会将该行的其余部分作为其参数的一部分,请确保在子串后面加一个换行符。</target>
        </trans-unit>
        <trans-unit id="c960442894010c156bf4de0977ded475c3d7f3df" translate="yes" xml:space="preserve">
          <source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state's &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal. The &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</source>
          <target state="translated">为了确保在几何实际达到其最终值之前不会弹出消息框，我们可以使用状态的&lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned（）&lt;/a&gt;信号。该&lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned（）&lt;/a&gt;时，该属性指定的终值信号将被发出，这是否立即执行或动画后播放完毕。</target>
        </trans-unit>
        <trans-unit id="118964b2fdc07e7f94eb8e772a998b79aad17afb" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-menu#margins&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa264dc11e8254e6035f6eb159af438b211901dc" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="translated">为了确保弹出窗口位于封闭窗口的边界内，可以将&lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt;属性设置为非负值。</target>
        </trans-unit>
        <trans-unit id="9089db3084e6a9ad462d32cf5c7c0d599a312f2d" translate="yes" xml:space="preserve">
          <source>To ensure that the representation of the data is kept separate from the way it is accessed, the concept of a</source>
          <target state="translated">为了确保数据的表示方式与数据的访问方式分开,我们提出了一个概念:&quot;数据&quot;。</target>
        </trans-unit>
        <trans-unit id="7d445470a3e92e5406abb78858f44adbe012d74e" translate="yes" xml:space="preserve">
          <source>To ensure that they are laid out exactly like this in your program, you need to place these widgets into a layout. We will do this in groups of three. Select the &quot;RED&quot; label. Then, hold down &lt;b&gt;Ctrl&lt;/b&gt; while you select its corresponding spin box and slider. In the &lt;b&gt;Form&lt;/b&gt; menu, select &lt;b&gt;Lay Out in a Grid&lt;/b&gt;.</source>
          <target state="translated">为了确保它们在程序中的布局完全一样，您需要将这些小部件放置在布局中。我们将以三个为一组进行此操作。选择&amp;ldquo;红色&amp;rdquo;标签。然后，按住&lt;b&gt;Ctrl键，&lt;/b&gt;同时选择其相应的旋转框和滑块。在&amp;ldquo; &lt;b&gt;表单&amp;rdquo;&lt;/b&gt;菜单中，选择&lt;b&gt;&amp;ldquo;在网格中布局&amp;rdquo;&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="98260433cee8dca3516df592d80a0c6b941bb6b0" translate="yes" xml:space="preserve">
          <source>To ensure that we can use the user interface, we need to include the header file that &lt;code&gt;uic&lt;/code&gt; generates before referring to &lt;code&gt;Ui::CalculatorForm&lt;/code&gt;:</source>
          <target state="translated">为了确保我们可以使用用户界面，在引用 &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; 之前，需要包括 &lt;code&gt;uic&lt;/code&gt; 生成的头文件：</target>
        </trans-unit>
        <trans-unit id="fcd3f4c31c7641a86a5b31694e3f5f50d29a0881" translate="yes" xml:space="preserve">
          <source>To ensure that writers aren't blocked forever by readers, readers attempting to obtain a lock will not succeed if there is a blocked writer waiting for access, even if the lock is currently only accessed by other readers. Also, if the lock is accessed by a writer and another writer comes in, that writer will have priority over any readers that might also be waiting.</source>
          <target state="translated">为了保证写手不会永远被读者屏蔽,如果有一个被屏蔽的写手在等待访问,那么试图获得锁的读者将不会成功,即使该锁目前只有其他读者访问。此外,如果锁被一个作家访问,而另一个作家进来,该作家将比任何可能也在等待的读者有优先权。</target>
        </trans-unit>
        <trans-unit id="46e3c5bc68c45c5afd2c219309eee8a57eff434b" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d972e3d58b1e6fd218152d80fa5e9368bc655" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode#&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">要进入好友编辑模式，请打开&amp;ldquo; &lt;b&gt;编辑&amp;rdquo;&lt;/b&gt;菜单，然后选择&amp;ldquo; &lt;b&gt;编辑好友&amp;rdquo;&lt;/b&gt;。此模式以类似于&lt;a href=&quot;designer-connection-mode#&quot;&gt;信号和插槽编辑模式的&lt;/a&gt;方式在表单上显示窗口小部件，但在此模式下，连接必须从标签窗口小部件开始。理想情况下，应该将每个提供快捷方式的标签窗口小部件与适当的输入窗口小部件（例如&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit）连接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b518ef4fdcf8b4398d07eeed0ef6533f98cc04e8" translate="yes" xml:space="preserve">
          <source>To enter tab order editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Tab Order&lt;/b&gt;. In this mode, each input widget in the form is shown with a number indicating its position in the tab order. So, if the user gives the first input widget the input focus and then presses the tab key, the focus will move to the second input widget, and so on.</source>
          <target state="translated">要进入标签顺序编辑模式，请打开&amp;ldquo; &lt;b&gt;编辑&amp;rdquo;&lt;/b&gt;菜单，然后选择&amp;ldquo; &lt;b&gt;编辑标签顺序&amp;rdquo;&lt;/b&gt;。在这种模式下，表单中的每个输入窗口小部件都显示有一个数字，指示其在选项卡顺序中的位置。因此，如果用户为第一个输入窗口小部件提供输入焦点，然后按Tab键，则焦点将移至第二个输入窗口小部件，依此类推。</target>
        </trans-unit>
        <trans-unit id="9d8ae19a5c2e41ed3aedce48f94d039286b5ea0b" translate="yes" xml:space="preserve">
          <source>To evaluate script code, you create a &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; and call its evaluate() function, passing the script code (text) to evaluate as argument.</source>
          <target state="translated">要评估脚本代码，您可以创建一个&lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt;并调用其validate（）函数，并将脚本代码（文本）作为参数传递给评估。</target>
        </trans-unit>
        <trans-unit id="ea690c515cc4e700e78abd5d299185d12e596e8f" translate="yes" xml:space="preserve">
          <source>To examine the list of supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;().</source>
          <target state="translated">要检查支持的样本计数列表，请调用&lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="157fbcb04fe3114cddc9167166ef114dafe6dfa0" translate="yes" xml:space="preserve">
          <source>To execute C++ code before any of the QML tests are run, the &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; macro can be used. This can be useful for setting context properties on the QML engine, amongst other things.</source>
          <target state="translated">要在运行任何QML测试之前执行C ++代码，可以使用&lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt;宏。除其他功能外，这对于在QML引擎上设置上下文属性很有用。</target>
        </trans-unit>
        <trans-unit id="08bc24a870aa5d264037f07081e807cab7cc2c34" translate="yes" xml:space="preserve">
          <source>To execute an SQL statement, simply create a &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and call &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery::exec&lt;/a&gt;() like this:</source>
          <target state="translated">要执行一条SQL语句，只需创建一个&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;对象并像下面这样调用&lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery :: exec&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="815a3bb09129a65af3ab8908488dec538a5f71ac" translate="yes" xml:space="preserve">
          <source>To execute an SQL statement, simply create a &lt;a href=&quot;qtsql-changes-qt6#qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and call &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery::exec&lt;/a&gt;() like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef040a336e1aa63da77d02ac33fc20deef053cfb" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">要执行自己的代码，每个帧都连接到&lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction :: triggered&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="a4ba6719793a8c97c86514d91abd0adba29e08fd" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">要执行自己的代码，每个帧都连接到&lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction :: triggered&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="4212ed33351bd090749b7f8949dc1b583d0aa62f" translate="yes" xml:space="preserve">
          <source>To exit the application without a chance of being interrupted, call &lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt;() directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe2c85fbb47ed7305115c4ab50e32855eec2aa8" translate="yes" xml:space="preserve">
          <source>To explain the meaning of each value it is helpful to refer to the following diagram.</source>
          <target state="translated">为了解释每个值的含义,参考下图是有帮助的。</target>
        </trans-unit>
        <trans-unit id="75b979e23d2b01523982e9e812997edbdbde04f6" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, the &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; environment variable can be set to 1 or alternatively the &lt;code&gt;--no-sandbox&lt;/code&gt; command line argument can be passed to the user application executable.</source>
          <target state="translated">要显式禁用沙箱，可以将 &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; 环境变量设置为1，或者可以将 &lt;code&gt;--no-sandbox&lt;/code&gt; 命令行参数传递给用户应用程序可执行文件。</target>
        </trans-unit>
        <trans-unit id="a46b3b5fbafe18259301295f0fa2713f6f3337b9" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, use one of the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04740be1fa39cd1bfadbe6cea459a94ef25ab08" translate="yes" xml:space="preserve">
          <source>To explicitly enable the use of ICU in Qt Core, pass &lt;code&gt;-icu&lt;/code&gt; to &lt;code&gt;configure&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c52f83f0896e30e75603ddcae67d64181407f9" translate="yes" xml:space="preserve">
          <source>To explicitly force either dialogs based on Qt Quick Controls 1 or Qt Quick Controls 2, set the &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; environment variable to either &lt;code&gt;QtQuickControls1&lt;/code&gt; or &lt;code&gt;QtQuickControls2&lt;/code&gt;.</source>
          <target state="translated">要基于Qt Quick Controls 1或Qt Quick Controls 2显式强制任一对话框，请将 &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; 环境变量设置为 &lt;code&gt;QtQuickControls1&lt;/code&gt; 或 &lt;code&gt;QtQuickControls2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="871fc49de005b1c6c6429d55025e40c0dffe8fad" translate="yes" xml:space="preserve">
          <source>To expose preloaded textures to the effect, &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; should be used instead. These can be defined as properties of the Effect itself, and will automatically be accessible to the shaders by their property names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa250e2f4d5421f5e518bf432ad50f79f216fc3" translate="yes" xml:space="preserve">
          <source>To extend the list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ed00ef7e707970bd13c72db790ae65ad0d2484" translate="yes" xml:space="preserve">
          <source>To extract many bytes at a time, use &lt;a href=&quot;qbytearray#first&quot;&gt;first&lt;/a&gt;(), &lt;a href=&quot;qbytearray#last&quot;&gt;last&lt;/a&gt;(), or &lt;a href=&quot;qbytearray#sliced&quot;&gt;sliced&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2341487de42a5a2e3ed300b000d6a14a5df5dea" translate="yes" xml:space="preserve">
          <source>To extract many bytes at a time, use &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt;(), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;(), or &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;().</source>
          <target state="translated">要一次提取多个字节，请使用&lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt;（），&lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;（）或&lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="316ba941aafac5984a08e986533c49f01e07a992" translate="yes" xml:space="preserve">
          <source>To facilitate remembering of the naming formats and their purposes, the following table can be used:</source>
          <target state="translated">为了便于记忆命名格式及其用途,可使用下表。</target>
        </trans-unit>
        <trans-unit id="5ff245492816dc263495ad273d578bf10ba67490" translate="yes" xml:space="preserve">
          <source>To fetch an icon from the current icon theme:</source>
          <target state="translated">从当前图标主题中获取一个图标。</target>
        </trans-unit>
        <trans-unit id="bca762ec2e69c67e257674b82583f78483910859" translate="yes" xml:space="preserve">
          <source>To filter another item's events, install this item as an event filter for the other item. Example:</source>
          <target state="translated">要过滤另一个项目的事件,请将此项目安装为另一个项目的事件过滤器。例如</target>
        </trans-unit>
        <trans-unit id="e025683429ecfe8fe5bf63f7c7cda4d97aa7162c" translate="yes" xml:space="preserve">
          <source>To find a suitable route we will need to use a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; to define the selection criteria and adding any required waypoints. The &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; should return a list of &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt;s that defines the route to the destination complete with navigation advice at the joins between segments, called &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;s</source>
          <target state="translated">为了找到合适的路线，我们将需要使用&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;定义选择条件并添加任何必需的航路点。该&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;应该返回列表&lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt; s表示，定义了路由到目标完成导航意见段与段之间的连接，称为&lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;小号</target>
        </trans-unit>
        <trans-unit id="d2d2cac33bdbaad4e88784a5c47022b2e91ba8f9" translate="yes" xml:space="preserve">
          <source>To find all the &lt;code&gt;name&lt;/code&gt; attributes in the cookbook and select them all regardless of their namespace, replace the namespace prefix with the wildcard and write &lt;code&gt;name&lt;/code&gt; (the attribute name) as the local name:</source>
          <target state="translated">要在食谱中找到所有 &lt;code&gt;name&lt;/code&gt; 属性，并选择所有名称属性，而不考虑其名称空间，请使用通配符替换名称空间前缀，并将 &lt;code&gt;name&lt;/code&gt; （属性名称）写为本地名称：</target>
        </trans-unit>
        <trans-unit id="76b6ab61f80351fc5e60ce537164f149142f35c8" translate="yes" xml:space="preserve">
          <source>To find and select all the attributes of the</source>
          <target state="translated">要找到并选择所有属性的</target>
        </trans-unit>
        <trans-unit id="10df266c7a6f1ed314c658639e3c3b8a4a03e704" translate="yes" xml:space="preserve">
          <source>To find out font metrics use a &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; object, e.g.</source>
          <target state="translated">要找出字体指标，请使用&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;对象，例如</target>
        </trans-unit>
        <trans-unit id="3e76aae9bbb004f7451a228e032f6a787e47d003" translate="yes" xml:space="preserve">
          <source>To find out if a node has children use &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt;() and to get a list of all of a node's children use &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt;().</source>
          <target state="translated">要找出节点是否有子节点，请使用&lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt;（）并使用&lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt;（）来获取节点的所有子节点的列表。</target>
        </trans-unit>
        <trans-unit id="96af90d9a0d68bc4ca1331c22b670b48f19fa8d4" translate="yes" xml:space="preserve">
          <source>To find out more about using the QML language, see the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module documentation.</source>
          <target state="translated">要了解有关使用QML语言的更多信息，请参见&lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt;模块文档。</target>
        </trans-unit>
        <trans-unit id="59c106e4718093be2df3b313300ae3d290de3cf7" translate="yes" xml:space="preserve">
          <source>To find out which backend is in use, you can enable basic scene graph information logging via the &lt;code&gt;QSG_INFO&lt;/code&gt; environment variable or the &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging category. This results in some information being printed onto the debug output, during application startup.</source>
          <target state="translated">要找出正在使用的后端，可以通过 &lt;code&gt;QSG_INFO&lt;/code&gt; 环境变量或 &lt;code&gt;qt.scenegraph.general&lt;/code&gt; 日志记录类别启用基本场景图信息日志记录。在应用程序启动期间，这导致一些信息被打印到调试输出上。</target>
        </trans-unit>
        <trans-unit id="c518bbca0a12b2496d24d38d6ff55dba960f966c" translate="yes" xml:space="preserve">
          <source>To find selected files, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">要查找选定的文件，&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;与基本文件位于同一目录中。如果存在带有活动选择器的+ &amp;lt;selector&amp;gt;形式的目录，则&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;将优先使用该目录中具有相同文件名的文件，而不是基本文件。这些目录可以嵌套以检查多个选择器，例如：</target>
        </trans-unit>
        <trans-unit id="c9dbc2de9c43cf1837fa3a7047794d33756e9c55" translate="yes" xml:space="preserve">
          <source>To find selected files, QFileSelector looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, QFileSelector will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbab6e362ec3601970ba5d071d3886d2467c69e" translate="yes" xml:space="preserve">
          <source>To find the bounding rectangle of the element in logical coordinates, you can apply the matrix on the rectangle returned from &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;().</source>
          <target state="translated">要在逻辑坐标中查找元素的边界矩形，可以将矩阵应用于从&lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;（）返回的矩形上。</target>
        </trans-unit>
        <trans-unit id="075c5cac4a9b3ecb0f6a68e7f0243f48bfad35d6" translate="yes" xml:space="preserve">
          <source>To fix this, the &lt;code&gt;displaced&lt;/code&gt; transition should additionally ensure the item properties are set to the end values specified in the &lt;code&gt;add&lt;/code&gt; transition, effectively resetting these values whenever an item is displaced. In this case, it means setting the item opacity and scale to 1.0:</source>
          <target state="translated">要解决此问题， &lt;code&gt;displaced&lt;/code&gt; 过渡还应确保将物品属性设置为 &lt;code&gt;add&lt;/code&gt; 过渡中指定的最终值，并在物品被位移时有效地重置这些值。在这种情况下，这意味着将项目的不透明度和比例设置为1.0：</target>
        </trans-unit>
        <trans-unit id="a3365d1494ab00fa0ad4d287c6762e3320a264a8" translate="yes" xml:space="preserve">
          <source>To fix, store the &lt;a href=&quot;qstringtokenizer&quot;&gt;QStringTokenizer&lt;/a&gt; in a temporary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731d83545b666b6b7267ecea79d6915e8e5024bc" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">为了强制&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;使用特定的文件格式，必须使用上述自己的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;库来构建和交付自己的数据库插件。在构建&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;时，可以通过设置 &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; 定义来强制某些版本的&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;写入特定的文件格式。</target>
        </trans-unit>
        <trans-unit id="1a0ad5489df9b5d0a9f7625a777cb0870d597d63" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c591ab334b24108290fdc0987d689a6866c775" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58794de9b3fd4cf94252281b03765a671d833bc1" translate="yes" xml:space="preserve">
          <source>To force a given backend, set the &lt;code&gt;QT_GAMEPAD&lt;/code&gt; environment variable to the name of the desired backend.</source>
          <target state="translated">要强制给定后端，请将 &lt;code&gt;QT_GAMEPAD&lt;/code&gt; 环境变量设置为所需后端的名称。</target>
        </trans-unit>
        <trans-unit id="73281bc0237dc9e78e45e2cf995105af4c47f76b" translate="yes" xml:space="preserve">
          <source>To force asynchronous image loading, even for image sources that do not have the &lt;code&gt;asynchronous&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;, you may pass the &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; flag to the image provider constructor. This ensures that all image requests for the provider are handled in a separate thread.</source>
          <target state="translated">要强制进行异步图像加载，即使对于未将 &lt;code&gt;asynchronous&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; 的图像源，也可以将 &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; 标志传递给图像提供程序构造函数。这样可以确保对提供程序的所有图像请求都在单独的线程中处理。</target>
        </trans-unit>
        <trans-unit id="762d8ab0c4364d5d8237bdafbde07d17a4ecca48" translate="yes" xml:space="preserve">
          <source>To force fetching of the entire result set, you can use the following:</source>
          <target state="translated">要强制获取整个结果集,你可以使用以下方法。</target>
        </trans-unit>
        <trans-unit id="ccf3e8f2a31351053d9c1dc51d8e8bf6f396241e" translate="yes" xml:space="preserve">
          <source>To force using Direct3D's software rasterizer (WARP), set the environment variable &lt;code&gt;QSG_RHI_PREFER_SOFTWARE_RENDERER&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eab8e155640da183f2697ccb87034cb2e5b51f" translate="yes" xml:space="preserve">
          <source>To format the text as a hypertext link use &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;().</source>
          <target state="translated">要将文本格式化为超文本链接，请使用&lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="1d9cd32ebfaa8e9fd461b614b75e934522265644" translate="yes" xml:space="preserve">
          <source>To fully benefit from Unicode, we recommend using &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; for storing all user-visible strings, and performing all text file I/O using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">为了从Unicode中充分受益，我们建议使用&lt;a href=&quot;qstring&quot;&gt;QString的&lt;/a&gt;用于存储所有用户可见的字符串，并执行I / O使用的所有文本文件&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de8cbc1be9f7b1db7f2f61e902937c5c2c19afc8" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">为了进一步减轻系统负担，可以设置一些可选属性。每个监视区域可以有一个失效日期，一旦达到失效日期，该失效日期就会自动从监视源中删除要监视的区域。另一个选择是调整监视区域的持久性。甲&lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;该&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;（）将保持有效超越目前应用的寿命。如果在监视应用程序未运行时输入区域，则会启动该应用程序。请注意，此功能并非在所有平台上都可用。可以通过&lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt;（）检查其可用性。</target>
        </trans-unit>
        <trans-unit id="9249882d9b51e0e086c9f83e80ead0846ced5fef" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A QGeoAreaMonitorInfo that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcac9153dd443a67ebcfe0a84f938e955a0d4d2" translate="yes" xml:space="preserve">
          <source>To gamma correct to a standard PC color-space, set gamma to &lt;code&gt;1/2.2&lt;/code&gt;.</source>
          <target state="translated">若要将伽玛校正为标准PC色彩空间，请将伽玛设置为 &lt;code&gt;1/2.2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6627c669ad3f44b7bc1928712d0dd1bd772e250a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for a type library, call &lt;code&gt;dumpcpp&lt;/code&gt; with the following command-line parameters:</source>
          <target state="translated">要为类型库生成C ++名称空间，请使用以下命令行参数调用 &lt;code&gt;dumpcpp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a8b4eab268f978aef3b1563dd6d4e861c157bb1a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e82995ec17912679c6b0f41330b98919cb8b864" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">要为要访问的类型库生成C ++名称空间，请使用&lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt;工具。在要使用的类型库上手动运行此工具，或通过将类型库添加到应用程序的 &lt;code&gt;.pro&lt;/code&gt; 文件中的 &lt;code&gt;TYPELIBS&lt;/code&gt; 变量中，将其集成到构建系统中：</target>
        </trans-unit>
        <trans-unit id="aff2baa97b21eba568c49ce5df49a11cd8637920" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, the</source>
          <target state="translated">要生成一个自定义的键位图,请使用</target>
        </trans-unit>
        <trans-unit id="3d7730ba780b38015a5d22389113298e5fcffd56" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, use the &lt;code&gt;kmap2qmap&lt;/code&gt; utility, that can be found in the &lt;code&gt;qttools&lt;/code&gt; module. The source files have to be in standard Linux &lt;code&gt;kmap&lt;/code&gt; format, which is understood by the kernel's &lt;code&gt;loadkeys&lt;/code&gt; command. &lt;code&gt;qmap&lt;/code&gt; files can be generated in one of the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd14554f1b5d49210e2bacc49223ed904de6c2d9" translate="yes" xml:space="preserve">
          <source>To generate both the compressed help and the collection file in one go, modify the help collection project file so that it instructs the help generator to create the compressed help first:</source>
          <target state="translated">要一次性生成压缩帮助和集合文件,请修改帮助集合项目文件,使其指示帮助生成器先生成压缩帮助。</target>
        </trans-unit>
        <trans-unit id="73dbfc4ba643bb0b1b8373dd3bfe35bbd1379cae" translate="yes" xml:space="preserve">
          <source>To generate documentation, QDoc uses configuration files, with the &lt;code&gt;qdocconf&lt;/code&gt; extension, to store configuration settings.</source>
          <target state="translated">要生成的文档，使用的QDoc配置文件，与 &lt;code&gt;qdocconf&lt;/code&gt; 扩展，存储配置设置。</target>
        </trans-unit>
        <trans-unit id="ded7a7e159e28b409aaecb9984c89d4556f93791" translate="yes" xml:space="preserve">
          <source>To generate message authentication code, pass hash algorithm &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash::Algorithm&lt;/a&gt; to constructor, then set key and message by &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt;() and &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;() functions. Result can be acquired by &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;() function.</source>
          <target state="translated">为了生成消息认证码，通过哈希算法&lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash ::算法&lt;/a&gt;来构造，然后通过设置键和消息&lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;的setkey&lt;/a&gt;（）和&lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;（）函数。结果可以通过&lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;（）函数获取。</target>
        </trans-unit>
        <trans-unit id="3429fceeff154de5ef5dbf05f3fbb3cdfb26f6cc" translate="yes" xml:space="preserve">
          <source>To generate the IDL the widgets exposed as ActiveX controls need to be instantiated (the constructor is called). At this point, nothing else but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object exists. Your widget constructor must not rely on any other objects to be created, e.g. it should check for null-pointers.</source>
          <target state="translated">要生成IDL，需要实例化作为ActiveX控件公开的小部件（调用构造函数）。在这一点上，除了&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;对象之外，什么都没有。您的窗口小部件构造函数不得依赖于要创建的任何其他对象，例如，它应检查空指针。</target>
        </trans-unit>
        <trans-unit id="c942b0c284806957abe837f006bd3d262cdb45e2" translate="yes" xml:space="preserve">
          <source>To generate the documentation, QDoc goes through the source code and generates documentation for C++ types such as classes. QDoc then associates member functions, properties, and other types to the appropriate class.</source>
          <target state="translated">为了生成文档,QDoc通过源代码,为C++类型(如类)生成文档。然后QDoc将成员函数、属性和其他类型关联到相应的类。</target>
        </trans-unit>
        <trans-unit id="02b12ec3edf1f51b48b44941ce700c9aa09a5e38" translate="yes" xml:space="preserve">
          <source>To get a context compatible with a given OpenGL version or profile, or to request depth and stencil buffers, call &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;():</source>
          <target state="translated">要获得与给定OpenGL版本或配置文件兼容的上下文，或请求深度和模板缓冲区，请调用&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="185429b53eb76f72894247b2034eb8ce14ca0ae5" translate="yes" xml:space="preserve">
          <source>To get a semi-transparent &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, call this function with</source>
          <target state="translated">要获取半透明的&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;，请使用</target>
        </trans-unit>
        <trans-unit id="5b6983cdb295e452362fc97b0374125681f5d227" translate="yes" xml:space="preserve">
          <source>To get an application designed for low DPI values running on high resolution monitors quickly, consider one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccc25ead1d098d9e6a7ce10513b2a13fdd0f8a3" translate="yes" xml:space="preserve">
          <source>To get an upper- or lowercase version of a string use &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;() or &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;().</source>
          <target state="translated">要获取字符串的大写或小写版本，请使用&lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;（）或&lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="c0a29bdf30e23f5177977d968f38c4c03a4be616" translate="yes" xml:space="preserve">
          <source>To get finer control over which roles are accessible, and to make delegates more self-contained and usable outside of views,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b88184a4f13315d46eb5f58b9ef4ffdfc045881" translate="yes" xml:space="preserve">
          <source>To get finer control over which roles are accessible, and to make delegates more self-contained and usable outside of views, &lt;a href=&quot;qtqml-syntax-objectattributes#required-properties&quot;&gt;required properties&lt;/a&gt; can be used. If a delegate contains required properties, the named roles are not provided. Instead, the QML engine will check if the name of a required property matches that of a model role. If so, that property will be bound to the corresponding value from the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c974e5c914cd0d51c87101b39dc8f4b27c02ee9" translate="yes" xml:space="preserve">
          <source>To get range control (e.g., for an IP address) use masks together with &lt;a href=&quot;qlineedit#setValidator&quot;&gt;validators&lt;/a&gt;.</source>
          <target state="translated">要获得范围控制（例如，用于IP地址），请使用掩码和&lt;a href=&quot;qlineedit#setValidator&quot;&gt;验证器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c4dd71ed75db99db48d52c4fc477c81633fd6f3" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">要开始使用，请参阅&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;文档。您可能还想看看&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM书签示例&lt;/a&gt;，该示例说明了如何使用DOM读写XML书签文件（XBEL）。</target>
        </trans-unit>
        <trans-unit id="d5b60ebc81536a85eafb362c1e553663606f79dc" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtxml-dombookmarks-example.html&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d500d9cda2947f9e8b362e92d21ae5627b683de0" translate="yes" xml:space="preserve">
          <source>To get started, create an Android package directory as instructed in &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-deploying-android.html&quot;&gt;Qt Creator: Deploying Applications to Android Devices&lt;/a&gt;. This directory contains the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. Inside the package directory, create a &lt;code&gt;src&lt;/code&gt; directory, where all your Java packages and classes will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9901ff2bacaedc805ab8c3d0793aa054f5ffd7" translate="yes" xml:space="preserve">
          <source>To get started, the simplest &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass could like like the following:</source>
          <target state="translated">首先，最简单的&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;子类可能如下所示：</target>
        </trans-unit>
        <trans-unit id="17a3ad3077db935cfda8853f35a75b1a75762b5c" translate="yes" xml:space="preserve">
          <source>To get started, the simplest QOpenGLWidget subclass could like like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052797e7bb2f08a559e597c1cede0b75b887e61a" translate="yes" xml:space="preserve">
          <source>To get the MyScript SDK or additional information, please contact MyScript at &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com&lt;/a&gt;.</source>
          <target state="translated">要获取MyScript SDK或其他信息，请通过&lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com&lt;/a&gt;与MyScript联系。</target>
        </trans-unit>
        <trans-unit id="4d00a5f6a83727e15aef213e10f83136656f7f6c" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().orientation().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a13ff8fc0781e265661157e27fad5952a7dc67a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation，请&lt;/a&gt;使用&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageOrientation（）。</target>
        </trans-unit>
        <trans-unit id="544234d34d796c7ce012db54ab99220d44a86c18" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation，请&lt;/a&gt;使用&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageOrientation（）。</target>
        </trans-unit>
        <trans-unit id="bb45271b656c7827cfe29ea71e716aa6a087ec4a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagesize&quot;&gt;QPageSize，请&lt;/a&gt;使用&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）。&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5e2375b6e029300a95f427de874ed4ccc5d8f8ed" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageSize().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0796e11a9fcb2aad12f1c86d01df3b6f6c88c9ea" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagesize&quot;&gt;QPageSize，请&lt;/a&gt;使用&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）。&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="f6c048bab6dd3e9c343a3f26cb19a045e24584fe" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().margins().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eba6f5d253f33074053451beb8241c06325bc5" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">要获取当前页边距，请使用&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageMargins（）。</target>
        </trans-unit>
        <trans-unit id="5017f703627ff112f625a31d77f47879c52f553e" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">要获取当前页边距，请使用&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageMargins（）。</target>
        </trans-unit>
        <trans-unit id="3220362a19dcf18d24c386fefe43dda44c5db107" translate="yes" xml:space="preserve">
          <source>To get the definition of the COM interfaces you will have to use the header files provided with the component you want to use. Some compilers can also import type libraries using the #import compiler directive. See the component documentation to find out which type libraries you have to import, and how to use them.</source>
          <target state="translated">为了得到COM接口的定义,你必须使用你要使用的组件提供的头文件。一些编译器也可以使用#import编译器指令导入类型库。请参阅组件文档,了解哪些类型库需要导入,以及如何使用它们。</target>
        </trans-unit>
        <trans-unit id="1fdfc2261aed4e409cc98b0d730d90703abf2f9b" translate="yes" xml:space="preserve">
          <source>To get the effect of the &lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; macro, prefix the test function name with &quot;benchmark_once_&quot;.</source>
          <target state="translated">要获得 &lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; 宏的效果，请在测试函数名称前添加&amp;ldquo; benchmark_once_&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="678b74647535d082e051b6aee1b8b8b58b536d34" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">为了使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;获得最佳渲染效果，您应该使用平台无关的&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;作为绘制设备；即使用&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;将确保结果在任何平台上都具有相同的像素表示。</target>
        </trans-unit>
        <trans-unit id="e5c94c7114db448845ca5cfa0ae4f50a09b19334" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using QPainter, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c9d808bdba36fca78eaf9cfc9ffbf7c925ab1b" translate="yes" xml:space="preserve">
          <source>To get the window that currently has focus, use &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;().</source>
          <target state="translated">要获取当前具有焦点的窗口，请使用&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="9934d68cb2d8b9cca97b3fbc21af6c0f95f93f24" translate="yes" xml:space="preserve">
          <source>To give custom widgets special behavior in</source>
          <target state="translated">为了让自定义小部件在</target>
        </trans-unit>
        <trans-unit id="cd74d52af1cc6667dbe87804ee6298a63943651e" translate="yes" xml:space="preserve">
          <source>To give the user more information to help him answer the question, set the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property. If the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property is set, the &lt;b&gt;Show Details...&lt;/b&gt; button will be shown.</source>
          <target state="translated">要向用户提供更多信息以帮助他回答问题，请设置&lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;详细的文本&lt;/a&gt;属性。如果设置了&lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detail text&lt;/a&gt;属性，将&lt;b&gt;显示Show Details ...&lt;/b&gt;按钮。</target>
        </trans-unit>
        <trans-unit id="f1a5550ff85d9a528a115445951502a5c0cf0af8" translate="yes" xml:space="preserve">
          <source>To handle plural forms in the native language, you need to load a translation file for this language, too. The lupdate tool has the &lt;code&gt;-pluralonly&lt;/code&gt; command line option, which allows the creation of TS files containing only entries with plural forms.</source>
          <target state="translated">要处理母语的复数形式，您还需要加载该语言的翻译文件。 &lt;code&gt;-pluralonly&lt;/code&gt; 工具具有-pluralonly命令行选项，该选项允许创建仅包含具有多种形式的条目的TS文件。</target>
        </trans-unit>
        <trans-unit id="a15d1f729c28b2c53eb0141c43919c2a3c1dad97" translate="yes" xml:space="preserve">
          <source>To have Configure pick up OpenSSL automatically, set the following variables to point to where your OpenSSL includes and libraries are located:</source>
          <target state="translated">要让Configure自动拾取OpenSSL,请将以下变量设置为指向OpenSSL包含和库的位置。</target>
        </trans-unit>
        <trans-unit id="d2d3c0fb03da9706a95426414f1a189618414810" translate="yes" xml:space="preserve">
          <source>To have the style of toolbuttons follow the system settings, set this property to &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt;. On Unix, the user settings from the desktop environment will be used. On other platforms, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt; means icon only.</source>
          <target state="translated">要使工具按钮的样式遵循系统设置，请将此属性设置为&lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt;。在Unix上，将使用桌面环境中的用户设置。在其他平台上，&lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt;仅表示图标。</target>
        </trans-unit>
        <trans-unit id="6b574ae289007ff417d9bfd22021ddba65205964" translate="yes" xml:space="preserve">
          <source>To have the web engine view rendered correctly, it is possible to manually create a new offscreen context that is shared with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; and to call the non-public function &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt;, rather than calling &lt;code&gt;initialize()&lt;/code&gt;. If &lt;code&gt;initialize()&lt;/code&gt; is called after setting a global context, it will do nothing.</source>
          <target state="translated">为了正确呈现Web引擎视图，可以手动创建与 &lt;code&gt;QQuickRenderControl&lt;/code&gt; 共享的新的屏幕外上下文，并调用非公共函数 &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt; ，而不是调用 &lt;code&gt;initialize()&lt;/code&gt; 。如果在设置全局上下文后调用 &lt;code&gt;initialize()&lt;/code&gt; ，它将不会执行任何操作。</target>
        </trans-unit>
        <trans-unit id="58caee709dbcb3d944f3c1ef72d5c63b35bba55b" translate="yes" xml:space="preserve">
          <source>To height of the value bar is automatically resized according to &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;value&lt;/a&gt;, and does not need to be specified.</source>
          <target state="translated">到的值栏的高度是根据自动调整大小&lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;值&lt;/a&gt;，并且不需要进行指定。</target>
        </trans-unit>
        <trans-unit id="625f3c7f6db8fdb8e9e4484b84b625633e7f94a7" translate="yes" xml:space="preserve">
          <source>To help with this problem, developers pass an additional integer argument to the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function, and typically use a special notation for plurals in each translatable string.</source>
          <target state="translated">为了解决此问题，开发人员将附加的整数参数传递给&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;函数，并且通常在每个可翻译字符串中对复数使用特殊的表示法。</target>
        </trans-unit>
        <trans-unit id="006b3a904da07333ede576f23761176a2db66b09" translate="yes" xml:space="preserve">
          <source>To ignore this gesture set the &lt;code&gt;pinch.accepted&lt;/code&gt; property to false. The gesture will be canceled and no further events will be sent.</source>
          <target state="translated">要忽略此手势，请将 &lt;code&gt;pinch.accepted&lt;/code&gt; 属性设置为false。手势将被取消，并且不会发送其他事件。</target>
        </trans-unit>
        <trans-unit id="68da53be1d2a8754cc79b84f5d4aad2ccfa749ff" translate="yes" xml:space="preserve">
          <source>To illuminate a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;scene&lt;/a&gt; using an image you'll add the image as a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2af27bf8093d6dafc055574af786568bfb3cfe8" translate="yes" xml:space="preserve">
          <source>To illustrate the difference, these screenshots show the same scene as projected by a &lt;a href=&quot;qml-qtquick3d-perspectivecamera&quot;&gt;PerspectiveCamera&lt;/a&gt; and an &lt;a href=&quot;qml-qtquick3d-orthographiccamera&quot;&gt;OrthographicCamera&lt;/a&gt;. Notice how the red box is smaller than the green box in the image rendered using the perspective projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1ce23b45cece4a8dfb5c39812f0976aadd222e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side we need to:</source>
          <target state="translated">为了说明远程对象的使用,在源端我们需要。</target>
        </trans-unit>
        <trans-unit id="9d70685dbe3f211dd39faafe5f115a7f3faa166e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side, we need to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f6d688d4e050fcd5137ae1c9b6e10e959b2bb4" translate="yes" xml:space="preserve">
          <source>To illustrate what these properties refer to, we can use the following example:</source>
          <target state="translated">为了说明这些属性指的是什么,我们可以用下面的例子。</target>
        </trans-unit>
        <trans-unit id="768ad204f0f0a6f3f47784484619167f71a77167" translate="yes" xml:space="preserve">
          <source>To illustrate, we present an image of an accessible object tree. Beneath the tree is a table with examples of object relationships.</source>
          <target state="translated">为了说明这一点,我们展示了一个可访问对象树的图像。树的下面是一个表格,上面有对象关系的例子。</target>
        </trans-unit>
        <trans-unit id="f57768e2d62f32dc980fccbccbe5218e18100605" translate="yes" xml:space="preserve">
          <source>To imitate the matching of a shell we can use wildcard mode.</source>
          <target state="translated">为了模仿shell的匹配,我们可以使用通配符模式。</target>
        </trans-unit>
        <trans-unit id="4a339c65ee743637c923979807bbf7928ea94156" translate="yes" xml:space="preserve">
          <source>To implement a COM object with Qt, create a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or any existing &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. If the class is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, the COM object will be an ActiveX control.</source>
          <target state="translated">要实现使用Qt的COM对象，创建的子类&lt;a href=&quot;qobject&quot;&gt;的QObject&lt;/a&gt;或任何现有的&lt;a href=&quot;qobject&quot;&gt;QObject的&lt;/a&gt;子类。如果该类是&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;的子类，则COM对象将是ActiveX控件。</target>
        </trans-unit>
        <trans-unit id="dc4a3b3f0d257bd9b81098032ef24f8b483c7063" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">要将Qt SQL驱动程序实现为插件（以便在运行时由Qt库识别并加载），该驱动程序必须使用&lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;（）宏。阅读有关&lt;a href=&quot;plugins-howto&quot;&gt;如何创建Qt插件&lt;/a&gt;的更多信息。您还可以在 &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; 中与Qt一起提供的SQL插件中查看如何完成此操作。</target>
        </trans-unit>
        <trans-unit id="806e2cd8e5ee29a628e321d5180fba4b57c899f6" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be2ac0632b5d1649d278fea4ae2e90c25c1443" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">要为&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;实现自定义URL方案，首先必须创建&lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt;的实例，然后使用&lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt;（）对其进行注册。</target>
        </trans-unit>
        <trans-unit id="cb008345dd3366d39fcf4027b305e509737f19f7" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908e59e61babb9b5f94baa0a0cc4204987a11eba" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">要实现工厂，请子类&lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt;并实现虚拟&lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;（）方法，然后使用&lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt;（）将其分配给相关的QML引擎。</target>
        </trans-unit>
        <trans-unit id="0654515d47a54596db259731b2ce2a38be13ad9c" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass QQmlNetworkAccessManagerFactory and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bc0cc7c60c088bc88a65d035f601bc08c169f0" translate="yes" xml:space="preserve">
          <source>To implement drag and drop actions for a type of information that is not covered by the &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; convenience functions, the first and most important step is to look for existing formats that are appropriate: The Internet Assigned Numbers Authority (&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;) provides a &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;hierarchical list of MIME media types&lt;/a&gt; at the Information Sciences Institute (&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;). Using standard MIME types maximizes the interoperability of your application with other software now and in the future.</source>
          <target state="translated">要对&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;便利功能未涵盖的信息类型执行拖放操作，第一步也是最重要的一步是寻找合适的现有格式：Internet分配号码授权机构（&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;）提供了以下内容的&lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;层次结构列表：&lt;/a&gt;信息科学研究所（&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;）的MIME媒体类型。现在和将来，使用标准的MIME类型都会使您的应用程序与其他软件的互操作性最大化。</target>
        </trans-unit>
        <trans-unit id="e028b129f996e83c8c5ba5a749c702ff3b16c8cf" translate="yes" xml:space="preserve">
          <source>To implement support for a custom networked scheme, see setNetworkAccessManagerFactory.</source>
          <target state="translated">要实现对自定义网络化方案的支持,请参见setNetworkAccessManagerFactory。</target>
        </trans-unit>
        <trans-unit id="3d975aef7c3ca42a6198fe3d6145b05a438af56f" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">要实现对新后端的支持，必须从&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;派生并重新实现virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;（）函数，以告诉&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;应该使用哪个绘画引擎在此特定设备上绘制。请注意，还必须创建一个相应的绘画引擎才能在设备上进行绘制，即从&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;派生并重新实现其虚拟功能。</target>
        </trans-unit>
        <trans-unit id="aa4e184a07d00c8a162147af59d67dcd18ad802b" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from QPaintDevice and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0472f92c49677952f74acd0472c08f23c99724" translate="yes" xml:space="preserve">
          <source>To implement this function create a derivative of &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; and implement its map function instance instead.</source>
          <target state="translated">要实现此功能，请创建&lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt;的派生类，并改为实现其map函数实例。</target>
        </trans-unit>
        <trans-unit id="e57baf652275f5bd09812fc7631bed3b732be2c0" translate="yes" xml:space="preserve">
          <source>To import Qt Charts QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">要导入Qt图表QML类型，请在您的 &lt;code&gt;.qml&lt;/code&gt; 文件中添加以下导入语句：</target>
        </trans-unit>
        <trans-unit id="9706bc12bb5fecf5f24e6d2f135552b3765653c3" translate="yes" xml:space="preserve">
          <source>To import Qt Data Visualization QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">要导入Qt数据可视化QML类型，请将以下import语句添加到您的 &lt;code&gt;.qml&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="c68645c4214e6de06941f2f3b7d2ba7cf44ebd5d" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your .qml file:</source>
          <target state="translated">要将QML类型导入到您的应用程序中,请在您的.qml文件中使用以下导入语句。</target>
        </trans-unit>
        <trans-unit id="1c733e0bc774b5fabb86c96913c41b92f6160d94" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe927566ef045ad033e13343c25e44971d2af0e" translate="yes" xml:space="preserve">
          <source>To include code snippets from an external file, use the &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\snippet&lt;/a&gt; and &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\codeline&lt;/a&gt; commands.</source>
          <target state="translated">要包含来自外部文件的代码段，请使用&lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\ snippet&lt;/a&gt;和&lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\ codeline&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="8890e2e9fda00bee33179c30568651a5ef04eb3d" translate="yes" xml:space="preserve">
          <source>To include external libraries for multiple ABIs, where each ABIs has its own directory, use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3193d971b24038413842acc771855127922ec5d7" translate="yes" xml:space="preserve">
          <source>To include the &lt;code&gt;#&lt;/code&gt; character in variable assignments, it is necessary to use the contents of the built-in &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; variable.</source>
          <target state="translated">要在变量分配中包含 &lt;code&gt;#&lt;/code&gt; 字符，必须使用内置&lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt;变量的内容。</target>
        </trans-unit>
        <trans-unit id="2027ff02580e6c3a230537dd7dddda41723104b9" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following directive:</source>
          <target state="translated">要包含模块的类和函数的定义,请使用以下指令。</target>
        </trans-unit>
        <trans-unit id="dab785d8e8fcf72a49638451cfe5da33d5602994" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following include statement:</source>
          <target state="translated">要包含模块的类和函数的定义,请使用下面的include语句。</target>
        </trans-unit>
        <trans-unit id="25604e04d87942d1b1ab46483ecf24327afcedad" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">要包含模块的类的定义,请使用以下指令。</target>
        </trans-unit>
        <trans-unit id="c9fc611d452ec4a784733e0eac0de194a266727f" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's functions and classes, use the following directives:</source>
          <target state="translated">要包含模块的函数和类的定义,请使用以下指令。</target>
        </trans-unit>
        <trans-unit id="bf24b763e4224da08358c601ce5e3fdfe2817151" translate="yes" xml:space="preserve">
          <source>To include the definitions of the modules' classes, use the following directives:</source>
          <target state="translated">要包含模块类的定义,请使用以下指令。</target>
        </trans-unit>
        <trans-unit id="52e2f17553c064aeddf2e9a86d855ab01adaabb8" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</source>
          <target state="translated">为了包含文件和行号,必须传递一个对象,如果该实例没有文件和行号(要么是QML引擎没有实例化,要么是位置信息被禁用),将使用 &quot;未知位置 &quot;来代替。如果该实例没有文件和行号(要么是QML引擎没有实例化,要么是位置信息被禁用),将使用 &quot;未知位置 &quot;代替。</target>
        </trans-unit>
        <trans-unit id="15fceb8eb65ee33a1b589fd642d01c3486c72e67" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead. For example,</source>
          <target state="translated">为了包含文件和行号,必须传递一个对象,如果该实例没有文件和行号(要么是QML引擎没有实例化,要么是位置信息被禁用),将使用 &quot;未知位置 &quot;来代替。如果该实例没有文件和行号(要么是QML引擎没有实例化,要么是位置信息被禁用),将使用 &quot;未知位置 &quot;来代替。例如</target>
        </trans-unit>
        <trans-unit id="0d4a3965f288470c2d6f1e14100d7e8ef5703120" translate="yes" xml:space="preserve">
          <source>To indicate that all possible mouse buttons are to be accepted, the special value 'Qt.AllButtons' may be used:</source>
          <target state="translated">为了表明所有可能的鼠标按钮都被接受,可以使用特殊值'Qt.AllButtons'。</target>
        </trans-unit>
        <trans-unit id="0e38cb42c57654dc72cfe785a4be1f2aaf30d597" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply::ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">为了表明错误不是致命的并且应该继续进行连接，应该从连接到该信号的插槽调用&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply :: ignoreSslErrors&lt;/a&gt;（）函数。如果未调用，则在交换任何数据（包括URL）之前，将断开SSL会话。</target>
        </trans-unit>
        <trans-unit id="2b4aa01dfffaeedbbc2f003769dfb03c94500995" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">为了表明错误不是致命的并且应该继续进行连接，应该从连接到该信号的插槽中调用&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;（）函数。如果未调用，则在交换任何数据（包括URL）之前，将断开SSL会话。</target>
        </trans-unit>
        <trans-unit id="f8934fe20165efd0dfd6a5d9f226af5a9128617e" translate="yes" xml:space="preserve">
          <source>To indicate which methods are suitable for your application, set the &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; property. If the preferred methods are not available, the default source of location data for the platform will be chosen instead. If no default source is available (because none are installed for the runtime platform, or because it is disabled), the &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;valid&lt;/a&gt; property will be set to false.</source>
          <target state="translated">要指出哪种方法适合您的应用程序，请设置&lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt;属性。如果首选方法不可用，将改为选择平台的默认位置数据源。如果没有可用的默认源（因为没有为运行时平台安装任何源，或者因为已将其禁用），则&lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;有效&lt;/a&gt;属性将设置为false。</target>
        </trans-unit>
        <trans-unit id="e1559d097b634d12f53dde0cfc3de08555469dd4" translate="yes" xml:space="preserve">
          <source>To inform</source>
          <target state="translated">告知</target>
        </trans-unit>
        <trans-unit id="68b98554ab9892616328af77d7acf0a56213c458" translate="yes" xml:space="preserve">
          <source>To initialize a licensed control use the following pattern:</source>
          <target state="translated">要初始化一个许可的控件,请使用以下模式。</target>
        </trans-unit>
        <trans-unit id="a9b9000504404ed9ab779fb2be3b4dacabcf29d7" translate="yes" xml:space="preserve">
          <source>To initialize the bits to true, either pass &lt;code&gt;true&lt;/code&gt; as second argument to the constructor, or call &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;() later on.</source>
          <target state="translated">要将位初始化为true，可以将 &lt;code&gt;true&lt;/code&gt; 作为第二个参数传递给构造函数，或者稍后再调用&lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ce4ab601cb873cd7b2d2c920826fe079e26dc15b" translate="yes" xml:space="preserve">
          <source>To initialize the control before it is activated, reimplement this function and add your initialization code before you call &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;(true).</source>
          <target state="translated">要在激活控件之前对其进行初始化，请在调用&lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;（true）之前重新实现此功能并添加初始化代码。</target>
        </trans-unit>
        <trans-unit id="e924d18ae3b4a19ba53cef35e55ca35dd34110fa" translate="yes" xml:space="preserve">
          <source>To initialize the control on a different machine use the following pattern:</source>
          <target state="translated">要在不同的机器上初始化控制,请使用以下模式。</target>
        </trans-unit>
        <trans-unit id="c38ebea234d99fa40f9b4a8b2aeb30afe6ec9313" translate="yes" xml:space="preserve">
          <source>To initialize the control's properties, use</source>
          <target state="translated">要初始化控件的属性,请使用</target>
        </trans-unit>
        <trans-unit id="51cd53a47f4fe23410e0ffcdf7809fc8f559730f" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the hash, you can use operator[]():</source>
          <target state="translated">要在哈希中插入一个(键,值)对,可以使用 operator[]()。</target>
        </trans-unit>
        <trans-unit id="619f4327aafdc4c818ac746e4cdd55aa02194395" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the map, you can use operator[]():</source>
          <target state="translated">要在地图中插入一个(键,值)对,可以使用 operator[]()。</target>
        </trans-unit>
        <trans-unit id="bfbd33e498b29c927ce6639257827982f7e75552" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the multi map, you can use &lt;a href=&quot;qmultimap#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fb17b5d2391757208ab9e22124ff066120fc29" translate="yes" xml:space="preserve">
          <source>To insert a value into the set, use &lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="translated">要将值插入集合，请使用&lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="627a04eaa418ddd7ab045c696148132fa3a8eaea" translate="yes" xml:space="preserve">
          <source>To insert an item at the end, pass &lt;code&gt;menuItems.length&lt;/code&gt;.</source>
          <target state="translated">要在末尾插入项目，请传递 &lt;code&gt;menuItems.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14d2bc665c3256569dd629e9cf2dc593041cc76d" translate="yes" xml:space="preserve">
          <source>To install a specific package, use &lt;code&gt;sdkmanager&lt;/code&gt; from &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt;. For example, the following command installs the &lt;code&gt;android-10&lt;/code&gt; platforms package on Ubuntu:</source>
          <target state="translated">要安装一个特定的包，使用 &lt;code&gt;sdkmanager&lt;/code&gt; 从 &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt; 。例如，以下命令在Ubuntu上安装 &lt;code&gt;android-10&lt;/code&gt; 平台软件包：</target>
        </trans-unit>
        <trans-unit id="23acbbaf0daac2a08a16d3420a11b9ee334f5f15" translate="yes" xml:space="preserve">
          <source>To instantiate a COM object use the &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase::setControl&lt;/a&gt;() API, or pass the name of the object directly into the constructor of the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; subclass you are using.</source>
          <target state="translated">要实例化COM对象，请使用&lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase :: setControl&lt;/a&gt;（）API，或将对象的名称直接传递到所使用的&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;子类的构造函数中。</target>
        </trans-unit>
        <trans-unit id="5832ce925e1e52a8c7908a758555d393b0b036a9" translate="yes" xml:space="preserve">
          <source>To instantiate a script engine, use &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager::addObject&lt;/a&gt;() to register the COM objects you want to access from script, and &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager::load&lt;/a&gt;() to load the script code into the engine. Then call the script functions using &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager::call&lt;/a&gt;() or &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;().</source>
          <target state="translated">要实例化脚本引擎，请使用&lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager :: addObject&lt;/a&gt;（）注册要从脚本访问的COM对象，然后使用&lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager :: load&lt;/a&gt;（）将脚本代码加载到引擎中。然后使用&lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager :: call&lt;/a&gt;（）或&lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt;（）调用脚本函数。</target>
        </trans-unit>
        <trans-unit id="89213ef1ed9f24a6dccabf389fe11eaa725bac4d" translate="yes" xml:space="preserve">
          <source>To integrate a custom widget with</source>
          <target state="translated">要将自定义小组件与</target>
        </trans-unit>
        <trans-unit id="39740ededb581a7293c01b1d0675ab08b15083a6" translate="yes" xml:space="preserve">
          <source>To integrate custom Direct3D 12 rendering, use &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; in combination with &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. This approach doesn't rely on OpenGL contexts or API specifics like framebuffers, and allows exposing the graphics device and command buffer from the adaptation. It's not necessarily suitable for easy integration of all types of content, in particular true 3D, so it'll likely get complemented by an alternative to &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; in future releases.</source>
          <target state="translated">要集成自定义Direct3D 12渲染，&lt;a href=&quot;qsgrendernode&quot;&gt;请&lt;/a&gt;结合使用QSGRenderNode和&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;。这种方法不依赖于OpenGL上下文或诸如帧缓冲区之类的API细节，而是允许从适配中公开图形设备和命令缓冲区。它不一定适合轻松集成所有类型的内容，尤其是真正的3D，因此在将来的发行版中可能会用&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;的替代方法进行补充。</target>
        </trans-unit>
        <trans-unit id="31641f5e01dd170a39a5028bd9bd53ae87fe0d89" translate="yes" xml:space="preserve">
          <source>To interact with running tasks using signals and slots, use &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;.</source>
          <target state="translated">要使用信号和插槽与正在运行的任务进行交互，请使用&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c472dd814b3501e33d5d64b42a79d25792ff4b35" translate="yes" xml:space="preserve">
          <source>To intercept drag and drop events for the scene, you reimplement &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene::dragEnterEvent&lt;/a&gt;() and whichever event handlers your particular scene needs, in a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; subclass. You can read more about drag and drop in Graphics View in the documentation for each of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event handlers.</source>
          <target state="translated">要拦截场景的拖放事件，请在&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;子类中重新实现&lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene :: dragEnterEvent&lt;/a&gt;（）以及特定场景所需的任何事件处理程序。您可以在&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;的每个事件处理程序的文档中的Graphics View中阅读有关拖放的更多信息。</target>
        </trans-unit>
        <trans-unit id="e4d573df507990e2ba2b3015c9a61ea59c7463c7" translate="yes" xml:space="preserve">
          <source>To iterate over a list, you can either use index positions or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s Java-style and STL-style iterator types:</source>
          <target state="translated">要遍历列表，可以使用索引位置或&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;的Java样式和STL样式的迭代器类型：</target>
        </trans-unit>
        <trans-unit id="c846b2032dd567c323f0ac0f578838ec99896264" translate="yes" xml:space="preserve">
          <source>To iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</source>
          <target state="translated">要遍历列表，可以使用&lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;伪关键字：</target>
        </trans-unit>
        <trans-unit id="dc709163fa36baf96bb24486cd5864f83e6c07bc" translate="yes" xml:space="preserve">
          <source>To keep the behavior of dynamically created state machines and compiled state machines the same, the</source>
          <target state="translated">为了保持动态创建的状态机和编译后的状态机的行为是一样的。</target>
        </trans-unit>
        <trans-unit id="3a1accd2dff71491dc0d71a73153736fc2de834c" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; has no objects to keep track of.</source>
          <target state="translated">要跟踪某些&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;，请创建&lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;，然后&lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;添加&lt;/a&gt;（）您感兴趣的对象。如果您不再对跟踪特定对象感兴趣，请使用&lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;（）将其从清理处理程序中删除。如果由清除处理程序跟踪的对象被其他人删除，则它将自动从清除处理程序中删除。您可以使用&lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;（）或通过破坏清除处理程序来删除清除处理程序中的所有对象。如果&lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;没有要跟踪的对象，则&lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd4266377b75fe68e3d31f99451771fc0d3acd49" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a QObjectCleanupHandler, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the QObjectCleanupHandler has no objects to keep track of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a701197ececd2b1a13097aff3b0d4ce1cec4dd" translate="yes" xml:space="preserve">
          <source>To kill all the particles in the system, use an Age affector.</source>
          <target state="translated">要杀死系统中的所有粒子,请使用Age影响器。</target>
        </trans-unit>
        <trans-unit id="2ed85ef8590db93553fbb995ff96656ee42d602f" translate="yes" xml:space="preserve">
          <source>To launch your project with Visual Studio a corresponding project needs to be created. &lt;code&gt;qmake&lt;/code&gt; supports converting a &lt;code&gt;.pro&lt;/code&gt; project into Visual Studio format by passing the parameters &lt;code&gt;-tp&lt;/code&gt; vc.</source>
          <target state="translated">要使用Visual Studio启动项目，需要创建一个相应的项目。 &lt;code&gt;qmake&lt;/code&gt; 支持通过传递参数 &lt;code&gt;-tp&lt;/code&gt; vc 将 &lt;code&gt;.pro&lt;/code&gt; 项目转换为Visual Studio格式。</target>
        </trans-unit>
        <trans-unit id="3160e69c1f88ddeaffc59249b0753ae8891d79ce" translate="yes" xml:space="preserve">
          <source>To learn more about uses of QML code, there are several code samples which show how QML types are used. In addition, there are several demos which show how QML code is used in applications.</source>
          <target state="translated">要了解更多关于QML代码的用途,有几个代码样本展示了如何使用QML类型。此外,还有一些演示,展示了如何在应用程序中使用QML代码。</target>
        </trans-unit>
        <trans-unit id="ae939a15d9d0f7b8a1934cce8e1153a6450f1e95" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a horizontal view, use the following properties:</source>
          <target state="translated">要限制水平视图中项的大小,请使用以下属性。</target>
        </trans-unit>
        <trans-unit id="c54711cc61671edaa8a2d699f7474f7a251e9afe" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a vertical view, use the following properties:</source>
          <target state="translated">要限制垂直视图中项的大小,请使用以下属性。</target>
        </trans-unit>
        <trans-unit id="87840f52c7612ba77a3719aaafc72a023cc08ec8" translate="yes" xml:space="preserve">
          <source>To link Qt Network against OpenSSL libraries, set the &lt;code&gt;-openssl-linked&lt;/code&gt; configure argument. Use the &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; variable to let Qt correctly locate and build against your OpenSSL installation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d94842d6331f1df4948b7fd10483468353b67e" translate="yes" xml:space="preserve">
          <source>To link Qt Network against a static version of the OpenSSL libs, set the &lt;code&gt;-openssl-linked&lt;/code&gt; argument, and set &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt;, or &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; and &lt;code&gt;OPENSSL_LIBDIR&lt;/code&gt;. In addition, you probably need to set the &lt;code&gt;OPENSSL_LIBS&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_DEBUG&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_RELEASE&lt;/code&gt; configure arguments to let Qt correctly link against your static build of the OpenSSL libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eec605815734a511520b06c66c4f1d88038238" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">要链接到&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;库，请将以下内容添加到qmake项目文件中：</target>
        </trans-unit>
        <trans-unit id="2730f18d66677274226574d633aebee82b5773b6" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7527369a36e9b0534ac990111b0bc91ae48172e5" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f8bd669eb626c069a30c9b615d512c8ded8723" translate="yes" xml:space="preserve">
          <source>To link against the C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">要链接到C ++库，请将以下内容添加到您的 &lt;code&gt;qmake&lt;/code&gt; 项目文件中：</target>
        </trans-unit>
        <trans-unit id="a27668ad0d6b00fb6b29a4e7e90b6c0152f154ee" translate="yes" xml:space="preserve">
          <source>To link against the Qt Android Extras module, add this line to your project file:</source>
          <target state="translated">要链接Qt Android Extras模块,请在你的项目文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="041569c678412c7ad9cce1eda03aeb296c2a3531" translate="yes" xml:space="preserve">
          <source>To link against the Qt Charts module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">要链接到Qt Charts模块，请将此行添加到您的 &lt;code&gt;qmake&lt;/code&gt; 项目文件中：</target>
        </trans-unit>
        <trans-unit id="b6d0bc4b34689225615bdc1ccb98ea1b8cdea08f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Data Visualization module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">要链接到&amp;ldquo; Qt数据可视化&amp;rdquo;模块，请将此行添加到您的 &lt;code&gt;qmake&lt;/code&gt; 项目文件中：</target>
        </trans-unit>
        <trans-unit id="f5939def498999b5004ecefe7a9cd9a131e4497f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Help module, add this line to the project file:</source>
          <target state="translated">要链接到Qt帮助模块,在项目文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="d1ff20e35e1cae61dba75a517bc6afbf59bdd0f0" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network Authorization module, add this line to the project file:</source>
          <target state="translated">要链接到Qt网络授权模块,请在项目文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="a446a86eafdce44e2da40210110b22d68c122d8d" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network module, add this line to the project file:</source>
          <target state="translated">要链接Qt网络模块,请在项目文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="a82331cadd56724182404023de38b6c52c54f94c" translate="yes" xml:space="preserve">
          <source>To link against the Qt SQL module, add this line to the project file:</source>
          <target state="translated">要链接Qt SQL模块,请在项目文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="550a0072bcec6d0a4422e4f84d722a4959b14de7" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">要链接到相应的C ++库，请将以下内容添加到您的 &lt;code&gt;qmake&lt;/code&gt; 项目文件中：</target>
        </trans-unit>
        <trans-unit id="553a82fffee6fc20ca9b22ede59db116aeaac219" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your qmake project file:</source>
          <target state="translated">要链接到相应的C++库,在qmake项目文件中添加以下内容。</target>
        </trans-unit>
        <trans-unit id="ef5395256966e863a10aaefacb703c4ab74fef40" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;&lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">要链接该模块，请将以下行添加到您的&lt;a href=&quot;qmake-manual&quot;&gt;qmake &lt;/a&gt; &lt;code&gt;.pro&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="4c15c07c63b0fdb1d03e9056c8633dcf3b398744" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake .pro file:</source>
          <target state="translated">要链接模块,请在你的qmake.pro文件中添加这一行。</target>
        </trans-unit>
        <trans-unit id="05cdb606e8e440fb4c1159865d15947fe4e68a5f" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">要链接该模块，请将以下行添加到您的qmake &lt;code&gt;.pro&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="36959485c016826e8627ccff21d149b034544ef3" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536245d9ecf28fc27080b6fde95b2e9b382beda5" translate="yes" xml:space="preserve">
          <source>To link plugins statically, you need to add the required plugins to your build using &lt;code&gt;QTPLUGIN&lt;/code&gt;.</source>
          <target state="translated">要静态链接插件，您需要使用 &lt;code&gt;QTPLUGIN&lt;/code&gt; 将所需的插件添加到构建中。</target>
        </trans-unit>
        <trans-unit id="c151992632d8e5822e1428f581719db7fdf5b114" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">要链接到Qt Quick Test C ++库，请参阅&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88462081f1e6d8573886ebc07c2c418aa5d66cc7" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a8295d388279c86ea437bb0ecc241d12484181" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5720cca875b568000278f0e6e8b49a2eecf0a0fa" translate="yes" xml:space="preserve">
          <source>To list overviews that are related to a certain group, you must generate the list explicitly using the &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\generatelist&lt;/a&gt; command with the &lt;code&gt;related&lt;/code&gt; argument.</source>
          <target state="translated">要列出与某个组相关的概述，必须使用带有 &lt;code&gt;related&lt;/code&gt; 参数的&lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\ generatelist&lt;/a&gt;命令显式生成列表。</target>
        </trans-unit>
        <trans-unit id="045ef0e0517c79961b778b8bd3181a409424e7c8" translate="yes" xml:space="preserve">
          <source>To load OpenSSL at runtime, set the &lt;code&gt;-openssl-runtime&lt;/code&gt; configure argument. Qt will try to find &lt;code&gt;openssl/ssl.h&lt;/code&gt; and &lt;code&gt;openssl/opensslv.h&lt;/code&gt; in the default include path of the compiler. You can specify an additional include directory by setting &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10c29f487de310a36a9f801fb143ad5f15223a1" translate="yes" xml:space="preserve">
          <source>To load Qt Graphical Effects, add the following import statement to your .qml file:</source>
          <target state="translated">要加载Qt Graphical Effects,在你的.qml文件中添加以下导入语句。</target>
        </trans-unit>
        <trans-unit id="df7c410485f6d6cd74f0493a183a3aacc06576e4" translate="yes" xml:space="preserve">
          <source>To load a .qml file, run the tool and select the file to be opened, or provide the file path on the command prompt:</source>
          <target state="translated">要加载.qml文件,运行该工具并选择要打开的文件,或在命令提示符下提供文件路径。</target>
        </trans-unit>
        <trans-unit id="753b64b85907eae631eaca29735a401b0d3eec7d" translate="yes" xml:space="preserve">
          <source>To load a specific physical font, typically represented by a single file, use &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; instead.</source>
          <target state="translated">要加载通常由单个文件表示的特定物​​理字体，请改用&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b70dd932a4f527611b23806c442f1c16bd2862b" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler&lt;/a&gt; directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">要加载SCXML文件，应使用&lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt;或&lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData&lt;/a&gt;。仅当编译器需要使用自定义&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt;时，才需要直接使用&lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbc85945390e0b276f18bcfb0a8b59229b19f2a4" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using QScxmlCompiler directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5709ff13f4130be160f9671835547e6c540e2e2" translate="yes" xml:space="preserve">
          <source>To load the Qt Location module, add the following statement to your .qml files</source>
          <target state="translated">要加载Qt Location模块,请在你的.qml文件中添加以下语句。</target>
        </trans-unit>
        <trans-unit id="97edd80909bd4c4f57c17e539eb5e7249439ffa4" translate="yes" xml:space="preserve">
          <source>To load the Qt Positioning module, add the following statement to your .qml files</source>
          <target state="translated">要加载Qt定位模块,请在您的.qml文件中添加以下语句。</target>
        </trans-unit>
        <trans-unit id="514255d7dc0d157f5e943da95f690d92fdc65e47" translate="yes" xml:space="preserve">
          <source>To look up a host's IP addresses asynchronously, call &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;(), which takes the host name or IP address, a receiver object, and a slot signature as arguments and returns an ID. You can abort the lookup by calling &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;() with the lookup ID.</source>
          <target state="translated">要异步查找主机的IP地址，请调用&lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;（），它将主机名或IP地址，接收方对象和插槽签名作为参数并返回ID。您可以通过使用查找ID 调用&lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;（）来中止查找。</target>
        </trans-unit>
        <trans-unit id="2bfa4b8bd0fdbe6017b34ec9a4ed2b2c3782f1ea" translate="yes" xml:space="preserve">
          <source>To look up a value, use &lt;a href=&quot;qmultimap#find&quot;&gt;find&lt;/a&gt;() or &lt;a href=&quot;qmultimap#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e0f2510aef3f0994086992307fa28fcda7c6e7" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">要查找值，请使用operator []（）或&lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="465cea4289469ac456741aec62a5df63ba123129" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">要查找值，请使用operator []（）或&lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="624a94a94edc9e656cdef529278975ffbf879e7e" translate="yes" xml:space="preserve">
          <source>To look up objects in the cache, use &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;() or operator[](). This function looks up an object by its key, and returns either a pointer to the cached object (which is owned by the cache) or &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">要在缓存中查找对象，请使用&lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;（）或operator []（）。此函数通过其键查找对象，并返回指向缓存对象（由缓存拥有）的指针或 &lt;code&gt;nullptr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f437ffccca44f2ed4d4f07ca858f517debac4e8f" translate="yes" xml:space="preserve">
          <source>To make &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">为了使&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;尽可能高效，其成员函数在使用前不验证其输入。除&lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）外，成员函数始终假定列表为</target>
        </trans-unit>
        <trans-unit id="c3c955d5a17bb889417bbcdacdc44300ff117647" translate="yes" xml:space="preserve">
          <source>To make &lt;code&gt;qmake&lt;/code&gt; find the PostgreSQL header files and shared libraries, run &lt;code&gt;qmake&lt;/code&gt; the following way (assuming that the PostgreSQL client is installed in &lt;code&gt;/usr&lt;/code&gt;):</source>
          <target state="translated">要使 &lt;code&gt;qmake&lt;/code&gt; 查找PostgreSQL头文件和共享库，请按以下方式运行 &lt;code&gt;qmake&lt;/code&gt; （假设PostgreSQL客户端安装在 &lt;code&gt;/usr&lt;/code&gt; 中）：</target>
        </trans-unit>
        <trans-unit id="641ad16fa228b3ecff8a30d2d30414c971731903" translate="yes" xml:space="preserve">
          <source>To make QList as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311080827d2b898605b517a7d8251488ac146a95" translate="yes" xml:space="preserve">
          <source>To make Qt WebEngine work correctly when streaming to an AppleTV from a MacBook that supports GPU switching, it is important to add the &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; option to the application Info.plist file, with the value set to &lt;code&gt;YES&lt;/code&gt;. Otherwise rendering issues might occur when creating new web engine view instances after Airplay is switched on or off.</source>
          <target state="translated">为了使Qt WebEngine在从支持GPU切换的MacBook流到AppleTV时流媒体正常工作，将 &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; 选项添加到应用程序Info.plist文件中非常重要，其值设置为 &lt;code&gt;YES&lt;/code&gt; 。否则，在打开或关闭Airplay之后创建新的Web引擎视图实例时，可能会出现渲染问题。</target>
        </trans-unit>
        <trans-unit id="3c2391383f6f75298e80a81c87ecb970ebe24674" translate="yes" xml:space="preserve">
          <source>To make a COM server available to the COM system it must be registered in the system registry using five unique identifiers. These identifiers are provided by tools like &lt;code&gt;guidgen&lt;/code&gt; or &lt;code&gt;uuidgen&lt;/code&gt;. The registration information allows COM to localize the binary providing a requested ActiveX control, marshall remote procedure calls to the control and read type information about the methods and properties exposed by the control.</source>
          <target state="translated">若要使COM服务器可用于COM系统，必须使用五个唯一的标识符在系统注册表中注册它。这些标识符由 &lt;code&gt;guidgen&lt;/code&gt; 或 &lt;code&gt;uuidgen&lt;/code&gt; 之类的工具提供。注册信息允许COM本地化提供请求的ActiveX控件的二进制文件，将控件的远程过程进行编组，并读取有关该控件公开的方法和属性的类型信息。</target>
        </trans-unit>
        <trans-unit id="527a2d83064ef702816d23b060084472147cd9e9" translate="yes" xml:space="preserve">
          <source>To make a connectionn, press the left mouse button and drag the cursor towards the object you want to connect it to. As you do this, a line will extend from the source object to the cursor. If the cursor is over another object on the form, the line will end with an arrow head that points to the destination object. This indicates that a connection will be made between the two objects when you release the mouse button.</source>
          <target state="translated">要进行连接,按鼠标左键,将光标拖向要连接的对象。当您这样做时,一条线将从源对象延伸到光标。如果光标在表格中的另一个对象上,这条线将以指向目标对象的箭头结束。这表明,当您释放鼠标按钮时,两个对象之间将建立连接。</target>
        </trans-unit>
        <trans-unit id="d7a75f30f4018587763ee8c6eec785aaf8a06f7d" translate="yes" xml:space="preserve">
          <source>To make a custom widget available to the loader, you can use the &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;() function; to remove all available widgets, you can call the &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;() function.</source>
          <target state="translated">要使加载器可以使用自定义窗口小部件，可以使用&lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;（）函数；要删除所有可用的小部件，可以调用&lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="1c6b702f1f707c0596f03022623d88a21de1a3b7" translate="yes" xml:space="preserve">
          <source>To make a sensible surface, the x-value of each successive item in all rows must be either ascending or descending throughout the row. Similarly, the z-value of each successive item in all columns must be either ascending or descending throughout the column.</source>
          <target state="translated">要做出一个合理的曲面,所有行中每个连续项的x值必须是整个行中的上升或下降。同样,所有列中每一个连续项的z值必须是整个列的升序或降序。</target>
        </trans-unit>
        <trans-unit id="b46a6d10e5894afee0dba3a55b8ce5a45bc95ae9" translate="yes" xml:space="preserve">
          <source>To make it less abstract consider the following example:</source>
          <target state="translated">为了让它不那么抽象,可以考虑下面的例子。</target>
        </trans-unit>
        <trans-unit id="170c5b07d3e670d6bf05faa2c65ea4512b93d7b1" translate="yes" xml:space="preserve">
          <source>To make sure currency numbers are localized, use the &lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt; type. This type has similar functions as the Date type for converting numbers into localized currency strings.</source>
          <target state="translated">要确保货币编号已本地化，请使用&lt;a href=&quot;qml-qtqml-number&quot;&gt;数字&lt;/a&gt;类型。此类型具有与日期类型相似的功能，用于将数字转换为本地化的货币字符串。</target>
        </trans-unit>
        <trans-unit id="efb6c3b4d0c4b7f83e2e07f01327fe69f8b85d1e" translate="yes" xml:space="preserve">
          <source>To make the Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">为了使Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt;模块在所有平台上都能正常运行，必须在创建&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;实例后立即调用&lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="79b4186d0f0fa3cd385af1bc932cb6c9b4f030a2" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f936b611480546a951d4166cbbe1139d4339c8" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() before creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance and before window's QPlatformOpenGLContext is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6d13a263e47af71ff3489eb100003e76599e85" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">为了使Qt WebView模块在所有平台上都能正常运行，必须在创建&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;实例后立即调用&lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5704123cb0c077229327d895044209de75e9bd34" translate="yes" xml:space="preserve">
          <source>To make the Trace rendering available in the keyboard, this type must be declared as the &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; component.</source>
          <target state="translated">若要使跟踪呈现在键盘中可用，必须将这种类型声明为&lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt;组件。</target>
        </trans-unit>
        <trans-unit id="f542db24c38af13df70727a404840376c4203fcf" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as QShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a QShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262b888fdd02cde798df6f4abb6115ec06c54821" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as ShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a ShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c1fc9dd562495f4d7641d29cde6f4019b4f85a" translate="yes" xml:space="preserve">
          <source>To make the process read EOF right away, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is cleaner than using &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;() before writing any data, because it can be set up prior to starting the process.</source>
          <target state="translated">要使进程立即读取EOF，请在此处传递&lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;（）。这比在写入任何数据之前使用&lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;（）更干净，因为可以在启动该过程之前对其进行设置。</target>
        </trans-unit>
        <trans-unit id="48ae93d06a58b4cdb9ac9b01fd13498b5272f909" translate="yes" xml:space="preserve">
          <source>To make the properties bindable for the ActiveX client, use multiple inheritance from the &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; class:</source>
          <target state="translated">若要使属性对于ActiveX客户端具有可绑定性，请使用&lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt;类的多个继承：</target>
        </trans-unit>
        <trans-unit id="600b894eb9b833ba411bf23e7a914f09d85785fc" translate="yes" xml:space="preserve">
          <source>To make the target global, the code above needs to be included into every subdirs subproject. In addition, to make these targets do anything, non-subdirs subprojects need to include respective code. The easiest way to achieve this is creating a custom feature file. For example:</source>
          <target state="translated">为了使目标成为全局的,上述代码需要包含在每个subdirs子项目中。此外,为了让这些目标做任何事情,非subdirs子项目也需要包含各自的代码。最简单的方法是创建一个自定义的特性文件来实现。例如</target>
        </trans-unit>
        <trans-unit id="b33a5489ba287c8d947e06f865a21e6ead131d68" translate="yes" xml:space="preserve">
          <source>To make things easier for this example, the TimeExample source directory is in &lt;code&gt;imports/TimeExample&lt;/code&gt;, and we build &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source&lt;/a&gt;. However, the structure of the source directory is not so important, as the &lt;code&gt;qmldir&lt;/code&gt; file can specify paths to installed QML files.</source>
          <target state="translated">为了使本示例更容易理解，TimeExample源目录位于 &lt;code&gt;imports/TimeExample&lt;/code&gt; 中，并且我们构建&lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source&lt;/a&gt;。但是，源目录的结构并不重要，因为 &lt;code&gt;qmldir&lt;/code&gt; 文件可以指定安装的QML文件的路径。</target>
        </trans-unit>
        <trans-unit id="74bb33068f232a3d9bd51634644f169b20c96b53" translate="yes" xml:space="preserve">
          <source>To make this function available, you need to load the respective feature file:</source>
          <target state="translated">要使这个功能可用,你需要加载相应的功能文件。</target>
        </trans-unit>
        <trans-unit id="e74387758952d3004ccbc4dd34ebd5f60a42021a" translate="yes" xml:space="preserve">
          <source>To make this provider accessible to QML, it is registered with the QML engine with a &quot;colors&quot; identifier:</source>
          <target state="translated">为了使这个提供者能够被QML访问,它在QML引擎中注册了一个 &quot;颜色 &quot;标识符。</target>
        </trans-unit>
        <trans-unit id="1e0e265f109902a6046589b5d07e2f5e3f9a47dc" translate="yes" xml:space="preserve">
          <source>To make this type available, we create a plugin class named &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; which is a subclass of &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;. It overrides the &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes()&lt;/a&gt; method in order to register the &lt;code&gt;TimeModel&lt;/code&gt; type using &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;(). It also uses the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro in the class definition to register the plugin with the Qt meta object system using a unique identifier for the plugin.</source>
          <target state="translated">为了提供这种类型的，我们创建一个名为插件类 &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; 是的子类&lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;。为了使用&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）注册 &lt;code&gt;TimeModel&lt;/code&gt; 类型，它重写了&lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes（）&lt;/a&gt;方法。它还使用类定义中的&lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;（）宏使用插件的唯一标识符在Qt元对象系统中注册插件。</target>
        </trans-unit>
        <trans-unit id="ed67f435e7a8aae2a389d5b8cb54fb327ff71805" translate="yes" xml:space="preserve">
          <source>To make this work, the widget itself and</source>
          <target state="translated">为了实现这一工作,小组件本身和</target>
        </trans-unit>
        <trans-unit id="7949e7edf2b9ee2a3c488efdb8536e66f5829953" translate="yes" xml:space="preserve">
          <source>To make use of all that, start your service as shown in &lt;a href=&quot;android-services#start-the-service&quot;&gt;Start the Service&lt;/a&gt;, an then register the broadcast receiver by calling the method &lt;code&gt;registerServiceBroadcastReceiver()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e46a911b58cc1db1f40da4967591a42a3febe59" translate="yes" xml:space="preserve">
          <source>To make user-visible text translatable, it must be wrapped in calls to the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() function. This is explained in detail in the &lt;a href=&quot;i18n-source-translation&quot;&gt;Writing Source Code for Translation&lt;/a&gt; document.</source>
          <target state="translated">为了使用户可见的文本可翻译，必须将其包装在对&lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;（）函数的调用中。&lt;a href=&quot;i18n-source-translation&quot;&gt;编写翻译的源代码&lt;/a&gt;文档中对此进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="e9830802265edf981a47a23afe689395d24181dc" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (by executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">为了使您的应用程序执行空闲处理（通过在没有待处理事件时执行特殊功能），请使用&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;（超时时间为0）。使用&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）可以实现更高级的空闲处理方案。</target>
        </trans-unit>
        <trans-unit id="e044a4360a53be2b4c9f91ae0a1f0ce3976a9723" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (i.e. executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More sophisticated idle processing schemes can be achieved using &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">为了使您的应用程序执行空闲处理（即，在没有任何未决事件的情况下执行特殊功能），请使用超时为0 的&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;。使用&lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;（）可以实现更复杂的空闲处理方案。</target>
        </trans-unit>
        <trans-unit id="9e8a38f8844c54226669e806536dde2590387109" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, e.g., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">为了使您的应用程序执行空闲处理，例如在没有挂起事件的情况下执行特殊功能，请使用&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;（超时时间为0）。使用&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）可以实现更高级的空闲处理方案。</target>
        </trans-unit>
        <trans-unit id="074480ff18c26be3acf20c02c876cbf0ab872f4a" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, i.e., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">为了使您的应用程序执行空闲处理，即在没有任何未决事件的情况下执行特殊功能，请使用超时为0 的&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;。使用&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）可以实现更高级的空闲处理方案。</target>
        </trans-unit>
        <trans-unit id="74a77b956aceffc3c579e433de582461e71c0d9d" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">要创建自己的布局管理器，请实现函数&lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;（），&lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（），&lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;（），&lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;（）和&lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;（）。您还应该实现&lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;（），以确保在空间不足的情况下不会将布局调整为零大小。为了支持高度取决于其宽度的子代，请实现&lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;（）和&lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;（）。有关实现自定义布局管理器的更多信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="4aeb7bb489e138301b473660fc5e72592445a0a7" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbb9b282a2042f073e71309995d71dfde44e1b9" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860adb15edbf1341eeee302843d420b99f26e635" translate="yes" xml:space="preserve">
          <source>To make your project use precompiled headers, you only need to define the &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; variable in your project file:</source>
          <target state="translated">要使您的项目使用预编译头，只需在项目文件中定义&lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt;变量：</target>
        </trans-unit>
        <trans-unit id="22f7f2fdcdb3aa5aa6e65a6e95e5ff852426627f" translate="yes" xml:space="preserve">
          <source>To mark a Qt class as licensed specify a &quot;LicenseKey&quot; using the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro.</source>
          <target state="translated">要将Qt类标记为已许可，请使用&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;（）宏指定&amp;ldquo; LicenseKey&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="d3a6d12e050bc056f11633e945b965e84bf792c2" translate="yes" xml:space="preserve">
          <source>To minimize compatibility issues, any &lt;code&gt;@&lt;/code&gt; that doesn't appear at the first position in the value or that isn't followed by a Qt type (&lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, etc.) is treated as a normal character.</source>
          <target state="translated">为了尽量减少兼容性问题，任何 &lt;code&gt;@&lt;/code&gt; 不在值的第一位置出现或者不跟一个Qt类型（ &lt;code&gt;Point&lt;/code&gt; ， &lt;code&gt;Rect&lt;/code&gt; ， &lt;code&gt;Size&lt;/code&gt; 等），被视为正常字符。</target>
        </trans-unit>
        <trans-unit id="dbbc11591696f7475166d9111393a42ebd2f2511" translate="yes" xml:space="preserve">
          <source>To modify a color group you call the functions &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;() and &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;(), depending on whether you want a pure color or a pixmap pattern.</source>
          <target state="translated">要修改颜色组，请调用函数&lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;（）和&lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;（），具体取决于您要纯色还是像素图图案。</target>
        </trans-unit>
        <trans-unit id="8c0e19c04b9168dc2f39467316ebef46d282a255" translate="yes" xml:space="preserve">
          <source>To modify array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">要修改数组元素，请改用&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex，const QJSValue＆value）&lt;/a&gt;重载。</target>
        </trans-unit>
        <trans-unit id="2af6400ae7389e6c602c4d02e24f0effc3196358" translate="yes" xml:space="preserve">
          <source>To modify the form settings, open the &lt;b&gt;Form&lt;/b&gt; menu and select &lt;b&gt;Form Settings...&lt;/b&gt;</source>
          <target state="translated">要修改表单设置，请打开&amp;ldquo; &lt;b&gt;表单&amp;rdquo;&lt;/b&gt;菜单，然后选择&amp;ldquo; &lt;b&gt;表单设置...&amp;rdquo;。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ed9093ac86a35bc9b169d0053f66740ebfd8ec72" translate="yes" xml:space="preserve">
          <source>To modify the selection using the mouse, bind &lt;a href=&quot;qml-qtquick-pdf-pdfselection#fromPoint-prop&quot;&gt;fromPoint&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-pdf-pdfselection#toPoint-prop&quot;&gt;toPoint&lt;/a&gt; to the suitable properties of an input handler so that they will be set to the positions where the drag gesture begins and ends, respectively; and bind the &lt;a href=&quot;qml-qtquick-pdf-pdfselection#hold-prop&quot;&gt;hold&lt;/a&gt; property so that it will be set to &lt;code&gt;true&lt;/code&gt; during the drag gesture and &lt;code&gt;false&lt;/code&gt; when the gesture ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2fca47d7b6422125613396699ae65387f0776f" translate="yes" xml:space="preserve">
          <source>To move a widget within a layout, hold down &lt;b&gt;Shift&lt;/b&gt; and &lt;b&gt;Control&lt;/b&gt; while dragging the widget. This extends the selection to the widget's parent layout.</source>
          <target state="translated">要在布局中移动窗口小部件，请在拖动窗口小部件的同时按住&lt;b&gt;Shift&lt;/b&gt;和&lt;b&gt;Control &lt;/b&gt;&lt;b&gt;键&lt;/b&gt;。这会将选择范围扩展到小部件的父布局。</target>
        </trans-unit>
        <trans-unit id="f39318520116757e766814af45e16628a1efab6f" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QApplication::instance&lt;/a&gt;() to retrieve a pointer to the current application, and then use &lt;a href=&quot;qobject#thread&quot;&gt;QApplication::thread&lt;/a&gt;() to retrieve the thread in which the application lives. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a59e836851ee839a25c2abf177e213855dae62" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use QApplication::instance() to retrieve a pointer to the current application, and then use QApplication::thread() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">要将一个对象移动到主线程,使用QApplication::instance()检索一个指向当前应用程序的指针,然后使用QApplication::thread()检索应用程序所在的线程。例如</target>
        </trans-unit>
        <trans-unit id="a1fc7d8930b7cb6ca6e370f2e45dedcbb8d058c0" translate="yes" xml:space="preserve">
          <source>To move rows within the same parent, specify the row to move them to.</source>
          <target state="translated">要在同一父节点内移动行,请指定要移动的行。</target>
        </trans-unit>
        <trans-unit id="4cc90b9a72822229fc1d4dc495b6bcbcab697266" translate="yes" xml:space="preserve">
          <source>To navigate through a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">要浏览&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;，还可以使用&lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3f2c55e8197d44dfacd9cf997f97e3641d0dd98e" translate="yes" xml:space="preserve">
          <source>To navigate through a QSet, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0017e1db6e61eef7631032130dc4955aff4cee" translate="yes" xml:space="preserve">
          <source>To obtain a list of substitutions use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;().</source>
          <target state="translated">要获取替代列表，请使用&lt;a href=&quot;qfont#substitutes&quot;&gt;替代&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ed7652e1feb5d67022d95e8698bbafb050e81fde" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">要获取唯一键列表，其中每个键仅在地图中出现一次，请使用&lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="52798863d567b8726801f1b51967c5e6c3cddf37" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">要获取唯一键列表，其中每个键仅在地图中出现一次，请使用&lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="be5cb1c0f6c45ef422cd1e4d05c52d6c52c6eb5a" translate="yes" xml:space="preserve">
          <source>To obtain a model index that corresponds to an item of data, three properties must be specified to the model: a row number, a column number, and the model index of a parent item. The following sections describe and explain these properties in detail.</source>
          <target state="translated">为了获得对应于数据项的模型索引,必须为模型指定三个属性:行号、列号和父项的模型索引。下面的章节将详细描述和解释这些属性。</target>
        </trans-unit>
        <trans-unit id="7f6b89bf1afbacec850f7a44399ede13ee125170" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;() as the parent index.</source>
          <target state="translated">若要获取引用模型中现有项目的模型&lt;a href=&quot;qabstractitemmodel#index&quot;&gt;索引&lt;/a&gt;，请调用QAbstractItemModel :: index（），其中包含所需的行和列值以及父级的模型索引。当引用模型中的顶级项目时，请提供&lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;（）作为父索引。</target>
        </trans-unit>
        <trans-unit id="596beaa1cacc0e84368c96579274f41e69c960dd" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply QModelIndex() as the parent index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160405715496d7f87445c5eebb0e973d3613cb42" translate="yes" xml:space="preserve">
          <source>To obtain a model index, we specify the row number, column number (zero for the first column), and the appropriate model index for the parent of all the items that we want. The text stored in each item is retrieved using the model's &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data()&lt;/a&gt; function. We specify the model index and the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; to obtain data for the item in the form of a string.</source>
          <target state="translated">为了获得模型索引，我们指定行号，列号（第一列为零），并为所需的所有项的父级指定适当的模型索引。使用模型的&lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data（）&lt;/a&gt;函数检索存储在每个项目中的文本。我们指定模型索引和&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt;以获得字符串形式的项目数据。</target>
        </trans-unit>
        <trans-unit id="203cb74ec52dfb2a7c5338df8b11815c33ab59d0" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual bytes, call &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the data. The pointer is guaranteed to remain valid until a non-const function is called on the QByteArray. It is also guaranteed that the data ends with a '\0' byte unless the QByteArray was created from &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;raw data&lt;/a&gt;. This '\0' byte is automatically provided by QByteArray and is not counted in &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b606a5a9fa2e12ad16e04ebbb384d8414db88f72" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the data. The pointer is guaranteed to remain valid until a non-const function is called on the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;. It is also guaranteed that the data ends with a '\0' byte unless the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; was created from a &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;raw data&lt;/a&gt;. This '\0' byte is automatically provided by &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and is not counted in &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;().</source>
          <target state="translated">要获取指向实际字符数据的指针，请调用&lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;（）或&lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt;（）。这些函数返回一个指向数据开头的指针。保证指针保持有效，直到在&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;上调用非常量函数为止。除非&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;是由&lt;a href=&quot;qbytearray#fromRawData&quot;&gt;原始数据&lt;/a&gt;创建的，否则还可以保证数据以'\ 0'字节结尾。此'\ 0'字节由&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;自动提供，不计入&lt;a href=&quot;qbytearray#size&quot;&gt;大小&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8eeebf8ad7a0264d6a8a9169c09c113af3f8ef9c" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the data. The pointer is guaranteed to remain valid until a non-const function is called on the QByteArray. It is also guaranteed that the data ends with a '\0' byte unless the QByteArray was created from a &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;raw data&lt;/a&gt;. This '\0' byte is automatically provided by QByteArray and is not counted in &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ee1b228a32e6c965953cc98f3f75899aad5390" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qstring#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; data. The pointer is guaranteed to remain valid until a non-const function is called on the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">要获取指向实际字符数据的指针，请调用&lt;a href=&quot;qstring#data&quot;&gt;data&lt;/a&gt;（）或&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;（）。这些函数返回一个指向&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;数据开头的指针。保证指针在&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;上调用非常量函数之前一直保持有效。</target>
        </trans-unit>
        <trans-unit id="21b4494fdb863f76cbf04a4bb583f72553f6c2b2" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qstring#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; data. The pointer is guaranteed to remain valid until a non-const function is called on the QString.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf43a61623fd07ec3c37f34714761c3bef9d6e7" translate="yes" xml:space="preserve">
          <source>To obtain the contents of an environment value at the time when the generated Makefile is processed, use the &lt;code&gt;$(...)&lt;/code&gt; operator:</source>
          <target state="translated">要在处理生成的Makefile时获取环境值的内容，请使用 &lt;code&gt;$(...)&lt;/code&gt; 运算符：</target>
        </trans-unit>
        <trans-unit id="c4a149d500f63a95c6ca3162bc63f6022a1c9c9d" translate="yes" xml:space="preserve">
          <source>To obtain the contents of an environment value when qmake is run, use the &lt;code&gt;$$(...)&lt;/code&gt; operator:</source>
          <target state="translated">要在运行qmake时获取环境值的内容，请使用 &lt;code&gt;$$(...)&lt;/code&gt; 运算符：</target>
        </trans-unit>
        <trans-unit id="8c4a39c35506d0503c98c5bbbcf06b860b5035ac" translate="yes" xml:space="preserve">
          <source>To obtain the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation，请&lt;/a&gt;使用&lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageOrientation（）。</target>
        </trans-unit>
        <trans-unit id="530ed8c4db2d7f6394dd3fa584f74097d4bdaeee" translate="yes" xml:space="preserve">
          <source>To obtain the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageSize().</source>
          <target state="translated">要获取当前的&lt;a href=&quot;qpagesize&quot;&gt;QPageSize，请&lt;/a&gt;使用&lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageSize（）。</target>
        </trans-unit>
        <trans-unit id="4195d25851e3a4f9d835a1338b583d69b46af3a2" translate="yes" xml:space="preserve">
          <source>To obtain the current page margins use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">要获取当前页边距，请使用&lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）.pageMargins（）。</target>
        </trans-unit>
        <trans-unit id="9a24d0bc0536006289d50e218f90def3ff112d07" translate="yes" xml:space="preserve">
          <source>To obtain the definition size, call &lt;a href=&quot;qpagesize#definitionSize&quot;&gt;QPageSize::definitionSize&lt;/a&gt;().</source>
          <target state="translated">要获取定义大小，请调用&lt;a href=&quot;qpagesize#definitionSize&quot;&gt;QPageSize :: definitionSize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e3d70abd0d7a453a1dce6b7f9a3b4b9387117794" translate="yes" xml:space="preserve">
          <source>To obtain the definition units, call &lt;a href=&quot;qpagesize#definitionUnits&quot;&gt;QPageSize::definitionUnits&lt;/a&gt;().</source>
          <target state="translated">要获取定义单位，请调用&lt;a href=&quot;qpagesize#definitionUnits&quot;&gt;QPageSize :: definitionUnits&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="b5024ec8596aaa47c883b07a5a2876ccfbeb667e" translate="yes" xml:space="preserve">
          <source>To obtain the dimensions of a particular screen, call the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt;() function. On some desktop environments, not all of the screen is available for applications to use; for example, an application dock or menu bar may take up some space. Use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#availableGeometry&quot;&gt;availableGeometry&lt;/a&gt;() function to obtain the available area for applications.</source>
          <target state="translated">要获取特定屏幕的尺寸，请调用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt;（）函数。在某些桌面环境中，并非所有屏幕都可供应用程序使用。例如，应用程序底座或菜单栏可能会占用一些空间。使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#availableGeometry&quot;&gt;availableGeometry&lt;/a&gt;（）函数获取应用程序的可用区域。</target>
        </trans-unit>
        <trans-unit id="5b93b6b489e66624051879ccb4533d8322a1e2cf" translate="yes" xml:space="preserve">
          <source>To obtain the dimensions of a particular screen, call the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt;() function. On some desktop environments, not all of the screen is available for applications to use; for example, an application dock or menu bar may take up some space. Use the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#availableGeometry&quot;&gt;availableGeometry&lt;/a&gt;() function to obtain the available area for applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e4946ae56a282edf4759be3f0bb2eb1f303eb3" translate="yes" xml:space="preserve">
          <source>To only expose the functions and properties of the class itself, reimplement this function to return</source>
          <target state="translated">要想只暴露类本身的功能和属性,请重新实现这个函数,以返回</target>
        </trans-unit>
        <trans-unit id="7f8a6c635a01856f699395cc57db807ea443a75a" translate="yes" xml:space="preserve">
          <source>To optimize drawing with &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, Qt provides the &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt; class which can be used to store temporary pixmaps that are expensive to generate without using more storage space than the cache limit.</source>
          <target state="translated">为了使用&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;优化绘图，Qt提供了&lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt;类，该类可用于存储临时像素图，这些像素图的生成成本很高，并且不使用超出缓存限制的存储空间。</target>
        </trans-unit>
        <trans-unit id="bacc97a3f12258a9042085c60ab7571f0bbded59" translate="yes" xml:space="preserve">
          <source>To override certain aspects of the form builder's behavior, subclass &lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt; and reimplement the relevant virtual functions:</source>
          <target state="translated">要覆盖表单生成器行为的某些方面，请子类&lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt;并重新实现相关的虚函数：</target>
        </trans-unit>
        <trans-unit id="be33df880c66cbb3cffad78df41ea96027220e7a" translate="yes" xml:space="preserve">
          <source>To override certain aspects of the form builder's behavior, subclass QAbstractFormBuilder and reimplement the relevant virtual functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1570e840a4478b7a0acd2574e0b4213a6c80fb20" translate="yes" xml:space="preserve">
          <source>To override the default, assign a handler object to this property. The handler should implement a handleSubsurfaceAdded(&lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt;) function.</source>
          <target state="translated">要覆盖默认值，请将处理程序对象分配给此属性。处理程序应实现handleSubsurfaceAdded（&lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt;）函数。</target>
        </trans-unit>
        <trans-unit id="9882c793a4a6ab6ebfa68871290d53d238ba45df" translate="yes" xml:space="preserve">
          <source>To pass data between the vertex and fragment shaders, use the VARYING keyword. Internally this will then be transformed into the appropriate vertex output or fragment input declaration. The fragment shader can use the same declaration, which then allows to read the interpolated value for the current fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ada62394c9dc79a93cbb16f591763962c1c3b17" translate="yes" xml:space="preserve">
          <source>To perform runtime decisions based on the adaptation, use &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; from C++ and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; from QML. They can also be used to check the level of shader support: shading language, compilation approach, and so on.</source>
          <target state="translated">要基于自适应执行运行时决策，请使用C ++中的&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;和QML中的&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;。它们也可用于检查着色器支持的级别：着色语言，编译方法等。</target>
        </trans-unit>
        <trans-unit id="3a63cda06f00a8a2ca921e8b16cd7c66fcad735e" translate="yes" xml:space="preserve">
          <source>To place an invocation in an event loop, make a queued &lt;a href=&quot;signalsandslots&quot;&gt;signal-slot&lt;/a&gt; connection. Whenever the signal is emitted, its arguments will be recorded by the event system. The thread that the signal receiver &lt;a href=&quot;qobject#thread-affinity&quot;&gt;lives in&lt;/a&gt; will then run the slot. Alternatively, call &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() to achieve the same effect without signals. In both cases, a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;queued connection&lt;/a&gt; must be used because a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;direct connection&lt;/a&gt; bypasses the event system and runs the method immediately in the current thread.</source>
          <target state="translated">要将调用置于事件循环中，请建立排队的&lt;a href=&quot;signalsandslots&quot;&gt;信号槽&lt;/a&gt;连接。每当发出信号时，事件系统都会记录其自变量。信号接收器&lt;a href=&quot;qobject#thread-affinity&quot;&gt;所在&lt;/a&gt;的线程将运行该插槽。另外，调用&lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt;（）也可以达到相同的效果而无需发出信号。在这两种情况下，都必须使用&lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;排队连接，&lt;/a&gt;因为&lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;直接连接会&lt;/a&gt;绕过事件系统并立即在当前线程中运行该方法。</target>
        </trans-unit>
        <trans-unit id="c805fc83f313e75c1ecc9a2b58dba163895f1c33" translate="yes" xml:space="preserve">
          <source>To play a file:</source>
          <target state="translated">要播放一个文件。</target>
        </trans-unit>
        <trans-unit id="e5584f448534789fcaeb5798974920fcba6e5aa2" translate="yes" xml:space="preserve">
          <source>To play each of these frames at a speed of 500 milliseconds per frame, the following code can be used:</source>
          <target state="translated">要以每帧500毫秒的速度播放这些帧,可以使用以下代码。</target>
        </trans-unit>
        <trans-unit id="5c9b3887c9417c94b897a9022164e53bae1b55e5" translate="yes" xml:space="preserve">
          <source>To populate the column with values, &lt;a href=&quot;qtest#newRow&quot;&gt;newRow&lt;/a&gt;() can be used. Use &lt;a href=&quot;qtest#QFETCH&quot;&gt;QFETCH&lt;/a&gt;() to fetch the data in the actual test.</source>
          <target state="translated">要使用值填充列，可以使用&lt;a href=&quot;qtest#newRow&quot;&gt;newRow&lt;/a&gt;（）。使用&lt;a href=&quot;qtest#QFETCH&quot;&gt;QFETCH&lt;/a&gt;（）在实际测试中获取数据。</target>
        </trans-unit>
        <trans-unit id="181210190531c628a95b8b729a989398c7d00f88" translate="yes" xml:space="preserve">
          <source>To populate the model with the table's data, call &lt;a href=&quot;qsqltablemodel#select&quot;&gt;select&lt;/a&gt;().</source>
          <target state="translated">要用表的数据填充模型，请调用&lt;a href=&quot;qsqltablemodel#select&quot;&gt;select&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="27a7f96ea9cbdb4061f5a1ce80edb3143d38d34a" translate="yes" xml:space="preserve">
          <source>To prevent bytes from being encoded pass them to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e85ce1f6641894a3f94f2d2ab9e88efe4da050" translate="yes" xml:space="preserve">
          <source>To prevent characters from being encoded pass them to</source>
          <target state="translated">为了防止字符被编码,将它们传递给</target>
        </trans-unit>
        <trans-unit id="bb57ac565f82644afa92a4fbe8cd9d5d107e9550" translate="yes" xml:space="preserve">
          <source>To prevent loops or excessive evaluation, developers should ensure that the property change signal is only emitted when the property value has actually changed. Also, if a property or group of properties is infrequently used, it is permitted to use the same NOTIFY signal for several properties. This should be done with care to ensure that performance doesn't suffer.</source>
          <target state="translated">为了防止循环或过度评估,开发人员应确保只有当属性值实际发生变化时,才会发出属性变化信号。另外,如果一个属性或一组属性的使用频率不高,允许对多个属性使用同一个notify信号。这一点应该注意,以保证性能不受影响。</target>
        </trans-unit>
        <trans-unit id="d1691a85c1c65800800205ec53c1a12e6dbbee89" translate="yes" xml:space="preserve">
          <source>To prevent the built-in layouts from being built into the virtual keyboard plugin when using custom layouts, add &lt;code&gt;disable-layouts&lt;/code&gt; to the &lt;code&gt;CONFIG&lt;/code&gt; qmake variable. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-build.html#advanced-configuration-options&quot;&gt;Advanced Configuration Options&lt;/a&gt;.</source>
          <target state="translated">为了防止在使用自定义布局时将内置布局内置到虚拟键盘插件中，请在 &lt;code&gt;CONFIG&lt;/code&gt; qmake变量中添加 &lt;code&gt;disable-layouts&lt;/code&gt; 。有关更多信息，请参阅&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-build.html#advanced-configuration-options&quot;&gt;高级配置选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="858a287d85ce6c0416ef4c2cdca87bc0f4cbba37" translate="yes" xml:space="preserve">
          <source>To prevent the built-in layouts from being built into the virtual keyboard plugin when using custom layouts, add &lt;code&gt;disable-layouts&lt;/code&gt; to the &lt;code&gt;CONFIG&lt;/code&gt; qmake variable. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-build.html#advanced-configuration-options&quot;&gt;Advanced Configuration Options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a7f204fd711cbd12f9edb59287cb110509f346" translate="yes" xml:space="preserve">
          <source>To prevent the scenegraph from creating its own device and context objects, specify an appropriate &lt;a href=&quot;qquickgraphicsdevice&quot;&gt;QQuickGraphicsDevice&lt;/a&gt;, wrapping existing graphics objects, by calling &lt;a href=&quot;qquickwindow#setGraphicsDevice&quot;&gt;QQuickWindow::setGraphicsDevice&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7a18a95511ede21104fb439beaf50c34fd1734" translate="yes" xml:space="preserve">
          <source>To prevent this construct from compiling (and failing at runtime), qAsConst() has a second, deleted, overload which binds to rvalues.</source>
          <target state="translated">为了防止这个构造的编译(以及在运行时失败),qAsConst()有第二个被删除的重载,它与rvalues绑定。</target>
        </trans-unit>
        <trans-unit id="beef2344d7ad73db1aaf2f0a46b5b1173b7f76da" translate="yes" xml:space="preserve">
          <source>To preview your form with skins, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Preferences...&lt;/b&gt;</source>
          <target state="translated">要使用皮肤预览表单，请打开&amp;ldquo; &lt;b&gt;编辑&amp;rdquo;&lt;/b&gt;菜单，然后选择&lt;b&gt;&amp;ldquo;偏好设置...&amp;rdquo;。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4442a94181e5036a5be6b6222b4c519c25f85f63" translate="yes" xml:space="preserve">
          <source>To print a form, select the &lt;b&gt;Print...&lt;/b&gt; option.</source>
          <target state="translated">要打印表格，请选择&amp;ldquo; &lt;b&gt;打印...&amp;rdquo;&lt;/b&gt;选项。</target>
        </trans-unit>
        <trans-unit id="9c1ef17c2c607756ee60d5773adbd2571aa578ca" translate="yes" xml:space="preserve">
          <source>To print a widget, you can use the &lt;a href=&quot;qwidget#render&quot;&gt;QWidget::render&lt;/a&gt;() function. As mentioned, the printer's resolution is usually higher than the screen resolution, so you will have to scale the painter. You may also want to position the widget on the page. The following code sample shows how this may look.</source>
          <target state="translated">要打印小部件，可以使用&lt;a href=&quot;qwidget#render&quot;&gt;QWidget :: render&lt;/a&gt;（）函数。如前所述，打印机的分辨率通常高于屏幕分辨率，因此您必须缩放画家。您可能还希望将小部件放置在页面上。以下代码示例显示了外观。</target>
        </trans-unit>
        <trans-unit id="7f6dadd9647fc94e8188107643c2ef20ae605f93" translate="yes" xml:space="preserve">
          <source>To print non-printable characters without transformation, enable the &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt;() functionality. Note that some &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; backends might not be 8-bit clean.</source>
          <target state="translated">要打印不可打印的字符而不进行转换，请启用&lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt;（）功能。请注意，某些&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;后端可能不是8位干净的。</target>
        </trans-unit>
        <trans-unit id="47fd93605177749d94e49b03df2ee93e092c3eab" translate="yes" xml:space="preserve">
          <source>To produce quality API documentation, the Qt API references follow a particular language guidelines. While the contents of this page demonstrates how to create API documentation, the style guidelines demonstrate how the reference materials follow a consistent use of language.</source>
          <target state="translated">为了制作高质量的API文档,Qt API参考资料遵循特定的语言准则。本页的内容演示了如何创建API文档,而样式指南则演示了参考资料如何遵循一致的语言使用。</target>
        </trans-unit>
        <trans-unit id="a854dceef4d97b6daacc8e4046574c97e3d0db31" translate="yes" xml:space="preserve">
          <source>To project a 3D scene to a 2D viewport, it is necessary to view the scene from a camera. If a scene has more than one camera it is possible to set which camera is used to render the scene to this viewport by setting the &lt;a href=&quot;qml-qtquick3d-view3d#camera-prop&quot;&gt;camera&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9549cbbbf3aec7660a062a605b29706e3d8e22f5" translate="yes" xml:space="preserve">
          <source>To provide a list property, a C++ class must implement the operation callbacks, and then return an appropriate &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; value from the property getter. List properties should have no setter. In the example above, the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() declarative will look like this:</source>
          <target state="translated">要提供list属性，C ++类必须实现操作回调，然后从属性getter 返回适当的&lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt;值。列表属性不应包含setter。在上面的示例中，&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;（）声明将如下所示：</target>
        </trans-unit>
        <trans-unit id="ce438ebac2b77a27294e717f70cc1852125869c4" translate="yes" xml:space="preserve">
          <source>To provide a list property, a C++ class must implement the operation callbacks, and then return an appropriate QQmlListProperty value from the property getter. List properties should have no setter. In the example above, the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() declarative will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50918fec65d8b6815bd8babd7660da1a254bdb1d" translate="yes" xml:space="preserve">
          <source>To provide accessibility support for a widget or other user interface element, you need to implement the &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and distribute it in a &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;. It is also possible to compile the interface into the application and provide a &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt; for it. The factory can be used if you link statically or do not want the added complexity of plugins. This can be an advantage if you, for instance, are delivering a 3-rd party library.</source>
          <target state="translated">要为小部件或其他用户界面元素提供可访问性支持，您需要实现&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;并将其分发到&lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin中&lt;/a&gt;。也可以将接口编译到应用程序中并为其提供&lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible :: InterfaceFactory&lt;/a&gt;。如果您静态链接或不想增加插件的复杂性，则可以使用工厂。例如，如果您要交付第三方库，则这可能是一个优势。</target>
        </trans-unit>
        <trans-unit id="6a059dd211bfacdbc6cf5efdd8e17633bd74592a" translate="yes" xml:space="preserve">
          <source>To provide attributes for each COM class, use the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; macro, which is part of Qt's meta object system.</source>
          <target state="translated">要为每个COM类提供属性，请使用&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;宏，它是Qt元对象系统的一部分。</target>
        </trans-unit>
        <trans-unit id="4d4a670f1b25bb5d882d5eb88f755c50b8502bf0" translate="yes" xml:space="preserve">
          <source>To provide completions, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; needs to know the path from an index. This is provided by &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(). The default implementation of &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(), returns the data for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;edit role&lt;/a&gt; for list models and the absolute file path if the mode is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="translated">为了提供&lt;a href=&quot;qcompleter&quot;&gt;补全&lt;/a&gt;，QCompleter需要知道索引的路径。这是由&lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;（）提供的。&lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;（）的默认实现返回列表模型的&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;edit角色&lt;/a&gt;的数据，如果模式是&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;，则返回绝对文件路径。</target>
        </trans-unit>
        <trans-unit id="26d2df23a7dcf6c57bfea9a01a567715e683d470" translate="yes" xml:space="preserve">
          <source>To provide completions, QCompleter needs to know the path from an index. This is provided by &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(). The default implementation of &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(), returns the data for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;edit role&lt;/a&gt; for list models and the absolute file path if the mode is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684a6ed9fef84b7bd2f77b817e6c49d000e2b72c" translate="yes" xml:space="preserve">
          <source>To provide custom editing, there are two approaches that can be used. The first approach is to create an editor widget and display it directly on top of the item. To do this you must reimplement &lt;a href=&quot;qabstractitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt;() to provide an editor widget, &lt;a href=&quot;qabstractitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt;() to populate the editor with the data from the model, and &lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt;() so that the delegate can update the model with data from the editor.</source>
          <target state="translated">要提供自定义编辑，可以使用两种方法。第一种方法是创建一个编辑器小部件，并将其直接显示在项目顶部。为此，您必须重新实现&lt;a href=&quot;qabstractitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt;（）以提供编辑器小部件，&lt;a href=&quot;qabstractitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt;（）以使用来自模型的数据填充编辑器，以及&lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt;（）以使委托可以使用来自编辑器的数据更新模型。</target>
        </trans-unit>
        <trans-unit id="398311b8b24702ce7eeba0f9d388789b6bb360a9" translate="yes" xml:space="preserve">
          <source>To provide mipmaps at build time, the texture needs to be in a container format like KTX, as standard image formats do not have the capability of storing mipmaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b816ba21d8ec13f92d87cecb3a38bb1fd9f673c" translate="yes" xml:space="preserve">
          <source>To provide read-only access to data provided by a model, the following functions</source>
          <target state="translated">为了提供对模型提供的数据的只读访问,可以使用以下功能。</target>
        </trans-unit>
        <trans-unit id="f4772fdf23c86d89ca9620ad40f24cb15d373293" translate="yes" xml:space="preserve">
          <source>To provide the expected behavior for Qt applications on macOS, the &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_Meta&lt;/a&gt;, &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::MetaModifier&lt;/a&gt;, and &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt::META&lt;/a&gt; enum values correspond to the Control keys on the standard Apple keyboard, and the &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_Control&lt;/a&gt;, &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::ControlModifier&lt;/a&gt;, and &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt::CTRL&lt;/a&gt; enum values correspond to the Command keys.</source>
          <target state="translated">为了为macOS上的Qt应用程序提供预期的行为，&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_Meta&lt;/a&gt;，&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: MetaModifier&lt;/a&gt;和&lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt :: META&lt;/a&gt;枚举值对应于标准Apple键盘上的Control键以及&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_Control&lt;/a&gt;，&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: ControlModifier&lt;/a&gt;和&lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt :: CTRL&lt;/a&gt;枚举值对应于Command键。</target>
        </trans-unit>
        <trans-unit id="3e75c11ca7a1cb22eea34f4e846dfdf9c7e42e9d" translate="yes" xml:space="preserve">
          <source>To provide the functionality of a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; media services implement &lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; interfaces. Services typically implement one core media control which provides the core feature of a media object, and some number of additional controls which provide either optional features of the media object, or features of a secondary media object or peripheral object.</source>
          <target state="translated">为了提供&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;媒体服务的功能，请实现&lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt;接口。服务通常实现一个核心媒体控件，该控件提供媒体对象的核心功能，以及一些其他控件，这些控件提供媒体对象的可选功能，或辅助媒体对象或外围对象的功能。</target>
        </trans-unit>
        <trans-unit id="0bb1b8c33e0b4bbe52a3894cc52a4d5e6f26bad6" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-wlscaler&quot;&gt;WlScaler&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供扩展功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-wlscaler&quot;&gt;WlScaler&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="f0661f540e85bff637f5e0e199354fa53e7b999c" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgdecorationmanagerv1&quot;&gt;XdgDecorationManagerV1&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供扩展功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-xdgdecorationmanagerv1&quot;&gt;XdgDecorationManagerV1&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="4d417b550c3f8842e85266081ccf03df299d85bc" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the IdleInhibitManagerV1 component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7522e85789922ac5065e0bcb13eedc10b9db1d5c" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the WlScaler component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec2992060d29c17adaab98d70d8ef16a8b7bda4" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the XdgDecorationManagerV1 component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8055963f009effa3558f2c7d69fdae1b52cec4" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the XdgOutputManagerV1 component and add it to the list of extensions supported by the compositor, and associated each XdgOutputV1 with its &lt;a href=&quot;qml-qtwayland-compositor-waylandoutput&quot;&gt;WaylandOutput&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d8d10f4cf7249e95b7b451a13fd26d4e29a19a" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-iviapplication&quot;&gt;IviApplication&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-iviapplication&quot;&gt;IviApplication&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="f7b55873c5fe6a01d9998f8f17a49f27333c3b46" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="581dfb96e0b0a5f47fc321c0454c11ae8134eadd" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="8fae6e20d084294202124fadd42c6449ec7b8a3e" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt; component and add it as a child of the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt;组件的实例，并将其添加为合成器的子代：</target>
        </trans-unit>
        <trans-unit id="b46029233f7f35ba182ad8fe5298847dc6bb1c53" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">要在合成器中提供shell扩展的功能，请创建&lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt;组件的实例，并将其添加到合成器支持的扩展列表中：</target>
        </trans-unit>
        <trans-unit id="709b9b8d61ce34f36a794051881f55ac1e3804fb" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the IviApplication component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd2dab8475a0bbe3380f29b5f5a1885808832b7" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the WlShell component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de68837d93e7ebc02c1fb4029334794fae1ea96" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the XdgShell component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464cf04f0854792768fdb2f880962625beabfd68" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the XdgShellV5 component and add it as a child of the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe6a9bf66537d508aed67400e555507aeb89706" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the XdgShellV6 component and add it to the list of extensions supported by the compositor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a9b543a8a38cc656812a2f6bbe996a8b1e8111" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;().</source>
          <target state="translated">要提供自己的语法突出显示，您必须子类化&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;并重新实现&lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e25b781306cda9c13adebd46c71bf419f457d783" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement highlightBlock(). In your reimplementation you should parse the block's</source>
          <target state="translated">要提供自己的语法突出显示，必须将&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;子类化，然后重新实现HighlightBlock（）。在重新实现中，您应该解析块的</target>
        </trans-unit>
        <trans-unit id="69cc9e712d66a07e6204155bd2706fb9a505be48" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass QSyntaxHighlighter and reimplement &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9021b7dc49431bf4058aed26133573c3495e50f" translate="yes" xml:space="preserve">
          <source>To query if a given queue family within a physical device can be used to perform presentation to a given surface, call &lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt;(). This encapsulates both the generic &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; and the WSI-specific &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; checks.</source>
          <target state="translated">要查询物理设备中的给定队列系列是否可用于执行给定表面的演示，请调用&lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt;（）。这封装了通用的 &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; 和特定于WSI的 &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="329bfa34839f5178772b6541f8a595a32420bf6f" translate="yes" xml:space="preserve">
          <source>To query the actual format after initialization, call &lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt;().</source>
          <target state="translated">要在初始化后查询实际格式，请调用&lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="014f4a6715690fddf255b7469ab7ed9972d9539d" translate="yes" xml:space="preserve">
          <source>To query the supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;(). When the returned set contains 4, 8, ..., passing one of those values to &lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt;() requests multisample rendering.</source>
          <target state="translated">要查询支持的样本计数，请调用&lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;（）。当返回的集合包含4、8 ...时，将这些值之一传递给&lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt;（）会请求多样本渲染。</target>
        </trans-unit>
        <trans-unit id="565b2ce7b4a2dff48f9755a872062232e8f5edcf" translate="yes" xml:space="preserve">
          <source>To query what graphics API the scene graph is using to render, &lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;QSGRendererInterface::graphicsApi&lt;/a&gt;() after the scene graph &lt;a href=&quot;qquickwindow#isSceneGraphInitialized&quot;&gt;has initialized&lt;/a&gt;, which typically happens either when the window becomes visible for the first time, or when &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;QQuickRenderControl::initialize&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fac3b979a31ee87a91f02045e90d5c520d1007" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets that constantly paint over their entire areas with opaque content, e.g., video streaming widgets, it is better to set the widget's &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt;, avoiding any unnecessary overhead associated with repainting the widget's background.</source>
          <target state="translated">为了快速更新不断用不透明内容在其整个区域上绘制的自定义窗口小部件，例如视频流窗口小部件，最好设置窗口小部件的&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_OpaquePaintEvent&lt;/a&gt;，避免与重新绘制窗口小部件的背景有关的任何不必要的开销。</target>
        </trans-unit>
        <trans-unit id="df17cf20977251b7dd92221a49dbac1b87edbd76" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets with simple background colors, such as real-time plotting or graphing widgets, it is better to define a suitable background color (using &lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;() with the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Window&lt;/a&gt; role), set the &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property, and only implement the necessary drawing functionality in the widget's &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;().</source>
          <target state="translated">要使用简单的背景颜色快速更新自定义窗口小部件，例如实时绘图或图形化窗口小部件，最好定义合适的背景颜色（将&lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;（）与&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: Window&lt;/a&gt;角色一起使用），设置&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt;属性，并且仅在小部件的&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）中实现必要的绘图功能。</target>
        </trans-unit>
        <trans-unit id="73713180d489718892546c676db3a1aadd9be178" translate="yes" xml:space="preserve">
          <source>To read a date value returned from a C++ extension class, use &lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate()&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime()&lt;/a&gt;.</source>
          <target state="translated">要读取从C ++扩展类返回的日期值，请使用&lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate（）&lt;/a&gt;和&lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2b0585f5068ae36eedccf3f94663649dcbdc51f" translate="yes" xml:space="preserve">
          <source>To read an image, you start by constructing a &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;'s constructor. You can then set several options, such as the clip rect (by calling &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;()) and scaled size (by calling &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;()). &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;() returns the image if the &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; can read the image (i.e., the image format is supported and the device is open for reading). Call &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() to read the image.</source>
          <target state="translated">要读取图像，请从构造&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;对象开始。将文件名或设备指针以及图像格式传递给&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;的构造函数。然后，您可以设置多个选项，例如片段rect（通过调用&lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;（））和缩放的大小（通过调用&lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;（））。如果&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;可以读取图像（例如，支持图像格式且设备已打开以供读取），则&lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;（）返回图像。调用&lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;（）读取图像。</target>
        </trans-unit>
        <trans-unit id="af79bdd7eea1fb010891e89d2464bca0d0fd1d19" translate="yes" xml:space="preserve">
          <source>To read an image, you start by constructing a QImageReader object. Pass either a file name or a device pointer, and the image format to QImageReader's constructor. You can then set several options, such as the clip rect (by calling &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;()) and scaled size (by calling &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;()). &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;() returns the image if the QImageReader can read the image (i.e., the image format is supported and the device is open for reading). Call &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() to read the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd206fc3519b5f6fafd1c4a11582f29d0a9f2834" translate="yes" xml:space="preserve">
          <source>To read back an array, use &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;().</source>
          <target state="translated">要读回数组，请使用&lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3b1fd2fc99d1066c9770f0e4b54dda63081a62bf" translate="yes" xml:space="preserve">
          <source>To read input XML data a special class &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; is used.</source>
          <target state="translated">要读取输入XML数据，请使用特殊的类&lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4fa46efe482e401e77b226024272c8b56b1f1c9" translate="yes" xml:space="preserve">
          <source>To read or write files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec()&lt;/a&gt; function. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;Codecs&lt;/a&gt; example for an application of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; to file I/O.</source>
          <target state="translated">要读取或写入各种编码的文件，请使用&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;及其&lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec（）&lt;/a&gt;函数。有关将&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;应用于文件I / O的信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;编解码器&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="04dda6fa448cffc31b5301b9cab186965a5dacad" translate="yes" xml:space="preserve">
          <source>To read or write files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec()&lt;/a&gt; function. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-tools-codecs-example.html&quot;&gt;Codecs&lt;/a&gt; example for an application of QTextCodec to file I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459a732a89d08a446ef9662ece5ec350d3d282f0" translate="yes" xml:space="preserve">
          <source>To read or write text files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setEncoding&quot;&gt;setEncoding()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2ef3897c0f90b19494eedab7161a906b3b77ae" translate="yes" xml:space="preserve">
          <source>To receive a notification when a particular signal is emitted for a particular object, the object definition should declare a signal handler named</source>
          <target state="translated">为了在特定对象发出特定信号时接收通知,对象定义应该声明一个名为</target>
        </trans-unit>
        <trans-unit id="a2023f3fe6b383a1163fbb8bcd9e901163e64c50" translate="yes" xml:space="preserve">
          <source>To receive a notification when a state machine sends out an event, a connection can be created to the corresponding signal.</source>
          <target state="translated">要想在状态机发出事件时收到通知,可以建立一个与相应信号的连接。</target>
        </trans-unit>
        <trans-unit id="cbbba7758a3a5edf0093bcbfb9ea4821c3d38ebd" translate="yes" xml:space="preserve">
          <source>To receive data from a source, connect to its &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated()&lt;/a&gt; signal, then call either &lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates()&lt;/a&gt; or &lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate()&lt;/a&gt; to begin.</source>
          <target state="translated">要从源接收数据，请连接到其&lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated（）&lt;/a&gt;信号，然后调用&lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates（）&lt;/a&gt;或&lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate（）&lt;/a&gt;开始。</target>
        </trans-unit>
        <trans-unit id="02510da006a9932e8e43a24330998cf2b72274e3" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="eab91045a4ab2be32bcd180cc12d795ccdaaf3a4" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget::errors&lt;/a&gt;().</source>
          <target state="translated">要接收与使用&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;加载和执行QML相关的错误，可以连接到&lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;（）信号并监视&lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget :: Error&lt;/a&gt;。这些错误可通过&lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget :: errors&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="1cb868f2e4d67421fc11ed01c75b86ef5a028433" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with QQuickView, you can connect to the &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView::errors&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0622b4b41b0942c98d91700cfcbe454a566c373b" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with QQuickWidget, you can connect to the &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget::errors&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74d05b35ef0bdbab729493f205103770d0a89e4" translate="yes" xml:space="preserve">
          <source>To record to a file:</source>
          <target state="translated">要记录到文件中。</target>
        </trans-unit>
        <trans-unit id="6413e6020938a8fbd25187715d3a6b45449b8398" translate="yes" xml:space="preserve">
          <source>To refer to a specific object, provide an &lt;code&gt;id&lt;/code&gt;. For example:</source>
          <target state="translated">要引用特定对象，请提供一个 &lt;code&gt;id&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="508c3a1c79fc39cbbfcc2bab71fc89c8a732577a" translate="yes" xml:space="preserve">
          <source>To register &lt;code&gt;CppType&lt;/code&gt; version 1 for &lt;code&gt;MyTypes 1.1&lt;/code&gt;:</source>
          <target state="translated">要为 &lt;code&gt;MyTypes 1.1&lt;/code&gt; 注册 &lt;code&gt;CppType&lt;/code&gt; 版本1 ：</target>
        </trans-unit>
        <trans-unit id="72bbb0c09a08927dc0b6e3c7ad4ab7f4c3a036ba" translate="yes" xml:space="preserve">
          <source>To register a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class as an instantiable QML object type, add &lt;code&gt;QML_ELEMENT&lt;/code&gt; or &lt;code&gt;QML_NAMED_ELEMENT(&amp;lt;name&amp;gt;)&lt;/code&gt; to the class declaration and &lt;code&gt;CONFIG += qmltypes&lt;/code&gt;, a &lt;code&gt;QML_IMPORT_NAME&lt;/code&gt;, and a &lt;code&gt;QML_IMPORT_MAJOR_VERSION&lt;/code&gt; to your project file. This will register the class into the type namespace under the given major version, using either the class name or an explicitly given name as QML type name. The minor version(s) will be derived from any revisions attached to properties, methods, or signals. The default minor version is &lt;code&gt;0&lt;/code&gt;. You can explicitly restrict the type to be available only from specific minor versions by adding the &lt;code&gt;QML_ADDED_IN_MINOR_VERSION()&lt;/code&gt; macro to the class declaration. Clients can import suitable versions of the namespace in order to use the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0122e3e0b3fe7dd92827130daf9d252b87b3421" translate="yes" xml:space="preserve">
          <source>To register a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class as an instantiable QML object type, call &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() to register the class as QML type into a particular type namespace. Clients can then import that namespace in order to use the type.</source>
          <target state="translated">要将&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;派生的类注册为可实例化的QML对象类型，请调用&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）将类作为QML类型注册到特定的类型名称空间中。然后，客户端可以导入该名称空间以使用该类型。</target>
        </trans-unit>
        <trans-unit id="19fcc109b32eaf67d45cd0c02c3e3ed102bcab7f" translate="yes" xml:space="preserve">
          <source>To register a field, call &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;() field. For example:</source>
          <target state="translated">要注册一个字段，请调用&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）字段。例如：</target>
        </trans-unit>
        <trans-unit id="aa3c5090caf0a77c609f7edcf5b3f2d3f4293ce7" translate="yes" xml:space="preserve">
          <source>To register a new product, click the &lt;b&gt;Create New&lt;/b&gt; button in the top left corner of the page. The first choice you will be given is the type of in-app purchase you would like to create. The Qt Purchasing API currently only supports Consumable and Non-Consumable types so limit your selection to these. See &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; for an explanation about the different product types.</source>
          <target state="translated">要注册新产品，请单击页面左上角的&amp;ldquo; &lt;b&gt;新建&amp;rdquo;&lt;/b&gt;按钮。您将获得的第一选择是您要创建的应用内购买类型。Qt采购API当前仅支持消耗型和非消耗型，因此您只能选择这些类型。有关不同产品类型的说明，请参见&lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a50d21ffe69190248ab71c6463ee3c5ce60c0080" translate="yes" xml:space="preserve">
          <source>To register a type, it must be declared as a meta-type with the &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() macro, and then registered as in the following example:</source>
          <target state="translated">要注册类型，必须使用&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）宏将其声明为元类型，然后按照以下示例进行注册：</target>
        </trans-unit>
        <trans-unit id="06a49d11418d0fb6f855f664d658af0277efd867" translate="yes" xml:space="preserve">
          <source>To register the new class revision to a particular version the following function is used:</source>
          <target state="translated">要将新的类修订版注册到一个特定的版本,需要使用以下函数。</target>
        </trans-unit>
        <trans-unit id="ac48727e1088aa1108892814a7ecaaacd614ae8a" translate="yes" xml:space="preserve">
          <source>To remove a category ensure that the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt; properties are set and call the &lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove()&lt;/a&gt; method.</source>
          <target state="translated">要删除类别，请确保已设置&lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt;属性，然后调用&lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a6ba48e108bd16a0eac9728fdfab72dcfae0e0ed" translate="yes" xml:space="preserve">
          <source>To remove a database connection, first close the database using &lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase::close&lt;/a&gt;(), then remove it using the static method &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase::removeDatabase&lt;/a&gt;().</source>
          <target state="translated">要删除数据库连接，请首先使用&lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase :: close&lt;/a&gt;（）关闭数据库，然后使用静态方法&lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase :: removeDatabase&lt;/a&gt;（）删除数据库。</target>
        </trans-unit>
        <trans-unit id="2822de9b415cc410688346330e63c846fb52ecc2" translate="yes" xml:space="preserve">
          <source>To remove a place, ensure that a Place object with a valid &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property exists and call its &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove()&lt;/a&gt; method. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will change to Place.Removing and then to Place.Ready if the save was successful or to Place.Error if an error occurs.</source>
          <target state="translated">要删除位置，请确保存在具有有效&lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt;属性的Place对象，然后调用其&lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove（）&lt;/a&gt;方法。该&lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;状态&lt;/a&gt;属性将变为Place.Removing再到Place.Ready如果保存成功或Place.Error如果发生错误。</target>
        </trans-unit>
        <trans-unit id="92edbb266e1add1b9fca2fa727319d1179753056" translate="yes" xml:space="preserve">
          <source>To remove a temporary message, use the &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;() slot, or set a time limit when calling &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;(). For example:</source>
          <target state="translated">要删除临时消息，请使用&lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;（）插槽，或在调用&lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;（）时设置时间限制。例如：</target>
        </trans-unit>
        <trans-unit id="15fa7c332988cb7a2319f204616bbf8cc7707210" translate="yes" xml:space="preserve">
          <source>To remove a widget from a layout, call &lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt;(). Calling &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget::hide&lt;/a&gt;() on a widget also effectively removes the widget from the layout until &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() is called.</source>
          <target state="translated">要从布局中删除小部件，请调用&lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt;（）。在小部件上调用&lt;a href=&quot;qwidget#hide&quot;&gt;QWidget :: hide&lt;/a&gt;（）还可以有效地从布局中删除该小部件，直到调用&lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt;（）为止。</target>
        </trans-unit>
        <trans-unit id="fa15a90fdc4f766410d16201fd608cdef4bdb3dd" translate="yes" xml:space="preserve">
          <source>To remove an item (row) from the list entirely, either delete the item or use &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;().</source>
          <target state="translated">要从列表中完全删除一个项目（行），请删除该项目或使用&lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="837bbf98eb769a1a2a26382645937a23f7c25711" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">要删除以前设置的更新间隔，请调用值为0的&lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ef0cb5458bba8024e553144d0a60d2c35ed2b623" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">要删除以前设置的更新间隔，请调用值为0的&lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="affd1f635705924fa2f6375f5c2939170d9b83da" translate="yes" xml:space="preserve">
          <source>To remove constraints, set the size to &lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX&lt;/a&gt;.</source>
          <target state="translated">要删除约束，请将大小设置为&lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c3f90f91f48eeff28a80626cf3604ede8ec0e01" translate="yes" xml:space="preserve">
          <source>To remove the default connection, which may have been created with a call to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;() not specifying a connection name, you can retrieve the default connection name by calling &lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt;() on the database returned by &lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;(). Note that if a default database hasn't been created an invalid database will be returned.</source>
          <target state="translated">要删除默认连接（可能是通过调用&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;（）来创建的，但未指定连接名称），则可以通过在&lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;（）返回的数据库上调用&lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt;（）来检索默认连接名称。请注意，如果尚未创建默认数据库，则将返回无效数据库。</target>
        </trans-unit>
        <trans-unit id="8a47ae9cd8aed8f07ba5786f138d84ae5ac1deda" translate="yes" xml:space="preserve">
          <source>To rename a page in a toolbox, make the toolbox your current pange and change its &lt;code&gt;currentItemText&lt;/code&gt; property from the &lt;b&gt;Property Editor&lt;/b&gt;.</source>
          <target state="translated">要重命名工具箱中的页面，请将工具箱设置为当前窗格，然后从&amp;ldquo; &lt;b&gt;属性编辑器&amp;rdquo;中&lt;/b&gt;更改其 &lt;code&gt;currentItemText&lt;/code&gt; 属性。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dbeba5e767f18e9b46ce3c7d2617733b7fff8d30" translate="yes" xml:space="preserve">
          <source>To render an item in a custom way, you must implement &lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;() and &lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(). The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class provides default implementations for these functions; if you do not need custom rendering, subclass that class instead.</source>
          <target state="translated">要以自定义方式渲染项目，必须实现&lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;（）和&lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）。所述&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;类提供了这些功能的默认的实现; 如果不需要自定义呈现，请改为该类的子类。</target>
        </trans-unit>
        <trans-unit id="2a9d1b36aa1cae0d6a0d8473d26d40898454494c" translate="yes" xml:space="preserve">
          <source>To render into the FBO, the user should subclass the Renderer class and reimplement its &lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer::render&lt;/a&gt;() function. The Renderer subclass is returned from &lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt;().</source>
          <target state="translated">要渲染到FBO中，用户应将Renderer类子类化，并重新实现其&lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer :: render&lt;/a&gt;（）函数。Renderer子类从&lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="86e94297cce091110d19c0725926d4c8e7f56a1d" translate="yes" xml:space="preserve">
          <source>To replace the current selection with a new selection, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Current&lt;/a&gt; flag. A command using this flag instructs the selection model to replace its current collection of model indexes with those specified in a call to &lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select()&lt;/a&gt;. To clear all selections before you start adding new ones, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Clear&lt;/a&gt; flag. This has the effect of resetting the selection model's collection of model indexes.</source>
          <target state="translated">要将当前选择替换为新选择，请将其他选择标志与&lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;当前&lt;/a&gt;标志组合。使用此标志的命令指示选择模型将其当前模型索引集合替换为对&lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select（）&lt;/a&gt;的调用中指定的模型索引集合。要在开始添加新选择之前清除所有选择，请将其他选择标记与&amp;ldquo; &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;清除&amp;rdquo;&lt;/a&gt;标记结合使用。这具有重置选择模型的模型索引集合的作用。</target>
        </trans-unit>
        <trans-unit id="4a749a4f31090e7dbc16ae253d1eaa04cd7283ec" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="translated">要将其替换为真实数据，请使用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）将真实数据对象绑定到C ++中的根上下文。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;集成QML和C ++中&lt;/a&gt;对此进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="7a7c5025b2435b9ec8f7a24e68aafc22b114917c" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f99e9b9a28192767a8c1d7ae021c0147d5008f" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594a9ea7e7f4a4a294e83aafd44c2a922b50a7b8" translate="yes" xml:space="preserve">
          <source>To request a specific configuration for the context, use &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;() like for any other &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;. This allows, among others, requesting a given OpenGL version and profile, or enabling depth and stencil buffers.</source>
          <target state="translated">要请求上下文的特定配置，请像其他任何&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;一样使用&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）。除其他外，这允许请求给定的OpenGL版本和配置文件，或启用深度和模板缓冲区。</target>
        </trans-unit>
        <trans-unit id="a0578ff5d14b41149be5152760e184c40c9ee443" translate="yes" xml:space="preserve">
          <source>To request using Vulkan or OpenGL, both of which require a Vulkan or OpenGL driver to be installed, set the environment variable &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; to &lt;code&gt;vulkan&lt;/code&gt; or &lt;code&gt;opengl&lt;/code&gt;, or use the equivalent &lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;C++ API&lt;/a&gt; in &lt;code&gt;main()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c324bc2d7754687deaa6daf1bedf5481a68c0f52" translate="yes" xml:space="preserve">
          <source>To reset an anchor you can assign &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">要重置锚点，您可以分配 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e433303c99c0b096d2c938a107c0ff70a3cfd2ea" translate="yes" xml:space="preserve">
          <source>To reset this property back to the default value, set its value to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要将此属性重置为默认值，请将其值设置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ccc12302b08c6000e0e262d64ce361031e0ab04" translate="yes" xml:space="preserve">
          <source>To resolve such a URL, it's necessary to remove the scheme beforehand:</source>
          <target state="translated">要想解析这样的URL,就必须事先删除该方案。</target>
        </trans-unit>
        <trans-unit id="d75ef3ec1110d073e8dd85d376695718f5646afd" translate="yes" xml:space="preserve">
          <source>To respond to clicks on the &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; itself, use its &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">要响应&lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt;本身的&lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;单击&lt;/a&gt;，请使用其clicked（）信号。</target>
        </trans-unit>
        <trans-unit id="64d58c3d7d37b3c8f977577463f6949cfee15e4d" translate="yes" xml:space="preserve">
          <source>To restore geometry saved using &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, you can use code like this:</source>
          <target state="translated">要恢复使用&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;保存的几何，可以使用如下代码：</target>
        </trans-unit>
        <trans-unit id="5b80ec36ed4a98d0d43de3fcae10ebba1e3b37ac" translate="yes" xml:space="preserve">
          <source>To restore the default network configuration set the network configuration to the value returned from &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;().</source>
          <target state="translated">要恢复默认的网络配置，请将网络配置设置为&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration&lt;/a&gt;（）返回的值。</target>
        </trans-unit>
        <trans-unit id="80b95619de770057cc4fddc28765d88e8523aee4" translate="yes" xml:space="preserve">
          <source>To restore the message handler, call &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt;.</source>
          <target state="translated">要恢复消息处理程序，请调用 &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17974335d1d2d2ac666686d65e67c80e2461b06d" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value and</source>
          <target state="translated">要恢复保存的状态,通过返回值和</target>
        </trans-unit>
        <trans-unit id="6f5797e3fc705f2f1c8ba903b8335ddcade92718" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value to &lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt;().</source>
          <target state="translated">要恢复保存的状态，请将返回值传递给&lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="03f140f0708c3476da51d90c225039df55ebf8ab" translate="yes" xml:space="preserve">
          <source>To retrieve a single candidate string, call &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt;() with the text that needs to be completed and call &lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;(). You can iterate through the list of completions as below:</source>
          <target state="translated">要检索单个候选字符串，请调用&lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt;（）和需要完成的文本，然后调用&lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;（）。您可以迭代完成列表，如下所示：</target>
        </trans-unit>
        <trans-unit id="f31ceceb5c5591e3e937b7dcb86a978a24b91af4" translate="yes" xml:space="preserve">
          <source>To retrieve results asynchronously, connect to the &lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt;() signal. To get a list of all discovered devices, call &lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;discoveredDevices&lt;/a&gt;() after the &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;finished&lt;/a&gt;() signal.</source>
          <target state="translated">要异步检索结果，请连接到&lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt;（）信号。要获取所有已发现设备的列表，请在&lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;finish&lt;/a&gt;（）信号之后调用&lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;foundDevices&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7b632de8df6719a26e27cb47b343bf0a4bec9471" translate="yes" xml:space="preserve">
          <source>To retrieve the instance, you can use &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;:</source>
          <target state="translated">要检索实例，可以使用&lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e5dc91419bdf35c045e6e9f54df9be47ab53a4e2" translate="yes" xml:space="preserve">
          <source>To retrieve the name of the local host, use the static &lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo::localHostName&lt;/a&gt;() function.</source>
          <target state="translated">要检索本地主机的名称，请使用静态&lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo :: localHostName&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="98a69fdd54276a2643fbcfb8300e0a3fd69b77ac" translate="yes" xml:space="preserve">
          <source>To retrieve the permissons for a directory, use the &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt;() function to get the associated &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; objects and then use the QFileInfo::permissons() to obtain the permissions and ownership for each file.</source>
          <target state="translated">要检索目录的&lt;a href=&quot;qdir#entryInfoList&quot;&gt;权限&lt;/a&gt;，请使用entryInfoList（）函数获取关联的&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;对象，然后使用QFileInfo :: permissons（）获取每个文件的权限和所有权。</target>
        </trans-unit>
        <trans-unit id="8d740df668787dabeea4c9050f73d7b4ecae1287" translate="yes" xml:space="preserve">
          <source>To retrieve the top level categories we use the &lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager::childCategories&lt;/a&gt;() function but do not provide a category identifier.</source>
          <target state="translated">要检索顶级类别，我们使用&lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager :: childCategories&lt;/a&gt;（）函数，但不提供类别标识符。</target>
        </trans-unit>
        <trans-unit id="301c8599ed4e2148ec01a3f9309c4f8580e00ea0" translate="yes" xml:space="preserve">
          <source>To retrieve values from a query, &lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;() should be used since its index-based lookup is faster.</source>
          <target state="translated">要从查询中检索值，应使用&lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;（），因为其基于索引的查找速度更快。</target>
        </trans-unit>
        <trans-unit id="f114d02c380f770276d07316fe3958c457eeff0c" translate="yes" xml:space="preserve">
          <source>To return from full-screen mode, call &lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;().</source>
          <target state="translated">要从全屏模式返回，请调用&lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e9d2d426738b2ef826206cd5312ecf0c270e8702" translate="yes" xml:space="preserve">
          <source>To rotate the graph, hold down the right mouse button and move the mouse. Zooming is done using mouse wheel. Both assume the default input handler is in use.</source>
          <target state="translated">要旋转图形,按住鼠标右键并移动鼠标。缩放是通过鼠标滚轮完成的。两者都假定使用了默认的输入处理程序。</target>
        </trans-unit>
        <trans-unit id="faf053fda86937f709dbd23e090450b828e1ae11" translate="yes" xml:space="preserve">
          <source>To run QDoc in single execution mode, add &lt;code&gt;-single-exec&lt;/code&gt; to the command line and pass QDoc a master &lt;code&gt;qdocconf&lt;/code&gt; file that is simply a list of file paths for qdocconf files of all the Qt5 modules. For example:</source>
          <target state="translated">要在单执行模式下运行QDoc，请在命令行中添加 &lt;code&gt;-single-exec&lt;/code&gt; 并将QDoc传递给主 &lt;code&gt;qdocconf&lt;/code&gt; 文件，该文件只是所有Qt5模块的qdoc​​conf文件的文件路径的列表。例如：</target>
        </trans-unit>
        <trans-unit id="f4b2d3fc93465d369458eb006c495cace372090d" translate="yes" xml:space="preserve">
          <source>To run QDoc, the project configuration file is supplied as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c427a83b2fdd6ff329d10b2d5f1ceb6ede8c6b" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use &lt;a href=&quot;concurrent-changes-qt6#qtconcurrent-run&quot;&gt;QtConcurrent::run&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050e671c76b6d3f03bd57e5f6e7a6508d0aefa80" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use &lt;a href=&quot;qtconcurrent-qtaskbuilder#spawn&quot;&gt;QtConcurrent::QTaskBuilder::spawn&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f39f8063cc48f6eafc2328867bad942a20aacc" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use QtConcurrent::run():</source>
          <target state="translated">要在另一个线程中运行一个函数,使用QtConcurrent::run()。</target>
        </trans-unit>
        <trans-unit id="c17fa1519956cbfd9a6a69ceee1349ccad4ddbd4" translate="yes" xml:space="preserve">
          <source>To run a query set up with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, call one of the evaluation functions.</source>
          <target state="translated">要运行使用&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;设置的查询，请调用评估功能之一。</target>
        </trans-unit>
        <trans-unit id="39e7ff29947a1add0b0622eb460529d487abc701" translate="yes" xml:space="preserve">
          <source>To run a query set up with QXmlQuery, call one of the evaluation functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d100097e87bc294e856d23038617a87a135b4df2" translate="yes" xml:space="preserve">
          <source>To run a service at boot time, you need a &lt;a href=&quot;https://developer.android.com/reference/android/content/BroadcastReceiver&quot;&gt;BroadcastReceiver&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e13daaf2bce4ef9814bfbc7cabb087f4ccf722a" translate="yes" xml:space="preserve">
          <source>To run a service in a dedicated process, declare the service header as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7911e91188982f065831314f6efae7e9647c5551" translate="yes" xml:space="preserve">
          <source>To run a service in the same process as QtActivity, declare the service header as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1345b9fc13c06b046aab0ee6ed652cb8ebf18d" translate="yes" xml:space="preserve">
          <source>To run an application with the Fusion style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c07f96a13eec13286a78e391273783fe5668c7" translate="yes" xml:space="preserve">
          <source>To run an application with the Fusion style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有Fusion样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1782bea0781b174b12320f04ea03982b969ecaaf" translate="yes" xml:space="preserve">
          <source>To run an application with the Imagine style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eaf063a44e37cddb38cdb6aef7f9b4539314127" translate="yes" xml:space="preserve">
          <source>To run an application with the Imagine style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有Imagine样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a811d99cc7e40deb112c8a740b7d60d6733bfd45" translate="yes" xml:space="preserve">
          <source>To run an application with the Material style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa686bc109ea11b8d0a8ca092a586b5859780e2d" translate="yes" xml:space="preserve">
          <source>To run an application with the Material style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要使用Material样式运行应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ddde64bc77b1488d392dfbe1f0e1db65b410c2b" translate="yes" xml:space="preserve">
          <source>To run an application with the Universal style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;Using Styles in Qt Quick Controls&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2621857427f32875d53773918b0c6256a7157317" translate="yes" xml:space="preserve">
          <source>To run an application with the Universal style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">要运行具有通用样式的应用程序，请参阅&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;在Qt Quick Controls 2中使用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa84d73af734a236eb2c1d65cbcb2955c762e5f2" translate="yes" xml:space="preserve">
          <source>To run code in one of a &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s threads, reimplement &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() and instantiate the subclassed &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;. Use &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;() to put the &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; in the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s run queue. When a thread becomes available, the code within &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() will execute in that thread.</source>
          <target state="translated">要在&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;的线程之一中运行代码，请重新实现&lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt;（）并实例&lt;a href=&quot;qrunnable&quot;&gt;化子&lt;/a&gt;类QRunnable。使用&lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: start&lt;/a&gt;（）将&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;放入&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;的运行队列中。当线程可用时，&lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt;（）中的代码将在该线程中执行。</target>
        </trans-unit>
        <trans-unit id="8010ec276c059111b8a503e306b3de8fe9e85674" translate="yes" xml:space="preserve">
          <source>To run qdoc, the project configuration file is supplied as an argument.</source>
          <target state="translated">要运行qdoc,需要提供项目配置文件作为参数。</target>
        </trans-unit>
        <trans-unit id="fd08642f6fde01ff07c97539dc977653ee85462b" translate="yes" xml:space="preserve">
          <source>To run the Android emulator, the following dependencies are also necessary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a18d49c7209db6d41a9da7f0b66f3110568d29" translate="yes" xml:space="preserve">
          <source>To run the emulator, the following dependencies are also necessary:</source>
          <target state="translated">要运行仿真器,还需要以下的依赖关系。</target>
        </trans-unit>
        <trans-unit id="feba6d02fec904ca1f39bde7ed78b0b473b31b68" translate="yes" xml:space="preserve">
          <source>To run the installer, you need a Qt Account. You can use your Qt Account credentials to sign-in to all Qt services, including the forums and wiki. If you do not already have a Qt Account, you can create one during the installation process.</source>
          <target state="translated">要运行安装程序,你需要一个Qt账户。你可以使用你的Qt账户凭证来登录所有的Qt服务,包括论坛和wiki。如果你还没有Qt账户,你可以在安装过程中创建一个。</target>
        </trans-unit>
        <trans-unit id="a8fc222c6977e8c4b622da8c6e1179b9f92b5908" translate="yes" xml:space="preserve">
          <source>To save a form as an image, choose the &lt;b&gt;Save Image...&lt;/b&gt; option. The file will be saved in &lt;code&gt;.png&lt;/code&gt; format.</source>
          <target state="translated">要将表单另存为图像，请选择&amp;ldquo; &lt;b&gt;保存图像...&amp;rdquo;&lt;/b&gt;选项。该文件将以 &lt;code&gt;.png&lt;/code&gt; 格式保存。</target>
        </trans-unit>
        <trans-unit id="adf5710f3147d770530b0e8a94c68b95a6d1f2a7" translate="yes" xml:space="preserve">
          <source>To save the geometry when the window closes, you can implement a close event like this:</source>
          <target state="translated">为了在窗口关闭时保存几何体,你可以实现这样的关闭事件。</target>
        </trans-unit>
        <trans-unit id="657fcc107faeb4dc2548a4b026b5645c58172172" translate="yes" xml:space="preserve">
          <source>To save writing many nested scopes, you can nest scopes using the &lt;code&gt;:&lt;/code&gt; operator. The nested scopes in the above example can be rewritten in the following way:</source>
          <target state="translated">为了节省编写许多嵌套范围的工作，可以使用 &lt;code&gt;:&lt;/code&gt; 运算符来嵌套范围。上面示例中的嵌套作用域可以通过以下方式重写：</target>
        </trans-unit>
        <trans-unit id="740b79019e52ead788ce7271a3007ab284569676" translate="yes" xml:space="preserve">
          <source>To schedule a repaint, call the &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() function. Note that this will not immediately result in a call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(). Calling &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() multiple times in a row will not change the behavior in any way.</source>
          <target state="translated">要计划重绘，请调用&lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;（）函数。请注意，这不会立即导致对&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）的调用。连续多次调用&lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;（）不会以任何方式更改行为。</target>
        </trans-unit>
        <trans-unit id="4112effc0505763565e689e43abce6a12702903b" translate="yes" xml:space="preserve">
          <source>To see examples on how to implement actions and methods, you could examine the implementations for Qt's standard widgets such as QAccessiblePushButton.</source>
          <target state="translated">要查看如何实现动作和方法的例子,你可以检查Qt标准部件的实现,如QAccessiblePushButton。</target>
        </trans-unit>
        <trans-unit id="ea954213c0b59ba32179e738434af803430a08b7" translate="yes" xml:space="preserve">
          <source>To see if your favorite Qt class has similar stream operators defined, check the &lt;b&gt;Related Non-Members&lt;/b&gt; section of the class's documentation page.</source>
          <target state="translated">若要查看您喜欢的Qt类是否定义了类似的流运算符，请查看该类的文档页面的&amp;ldquo; &lt;b&gt;相关非成员&amp;rdquo;&lt;/b&gt;部分。</target>
        </trans-unit>
        <trans-unit id="a2d5f269d290a4fc1784f9011adeed78a671f7a5" translate="yes" xml:space="preserve">
          <source>To see the configuration options, run &lt;code&gt;qmlscene&lt;/code&gt; with the &lt;code&gt;-help&lt;/code&gt; argument.</source>
          <target state="translated">要查看配置选项， &lt;code&gt;qmlscene&lt;/code&gt; 使用 &lt;code&gt;-help&lt;/code&gt; 参数运行qmlscene。</target>
        </trans-unit>
        <trans-unit id="387c460aab59a4761085ef8da897247d5ca40a43" translate="yes" xml:space="preserve">
          <source>To see the order in which events are received when using forwardTo, see &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;Key Handling Priorities&lt;/a&gt;.</source>
          <target state="translated">要查看使用forwardTo时接收事件的顺序，请参阅&amp;ldquo; &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;密钥处理优先级&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ada1b74eb9c990f8387bf96cd3bb81be4593870" translate="yes" xml:space="preserve">
          <source>To select (mark) text hold down the Shift key whilst pressing one of the movement keystrokes, for example,</source>
          <target state="translated">要选择(标记)文本,按住Shift键,同时按其中一个移动键,例如。</target>
        </trans-unit>
        <trans-unit id="83a3f7e991c5ff32e37902eff353c5567714c0a0" translate="yes" xml:space="preserve">
          <source>To select a new language, use the &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt; property.</source>
          <target state="translated">若要选择一种新语言，请使用&lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="01f6b6be77da816361a14a66a2d3e9b1a30b5f39" translate="yes" xml:space="preserve">
          <source>To select additional objects, hold down the &lt;b&gt;Control&lt;/b&gt; key and click on them. If more than one object is selected, the current object will be displayed with resize handles of a different color.</source>
          <target state="translated">要选择其他对象，请按住&lt;b&gt;Control&lt;/b&gt;键并单击它们。如果选择了多个对象，则将使用不同颜色的调整大小手柄显示当前对象。</target>
        </trans-unit>
        <trans-unit id="7e00290ff9716d93bbc6824cab2592ce802d10bf" translate="yes" xml:space="preserve">
          <source>To select all items in a model, it is necessary to create a selection for each level of the model that covers all items in that level. We do this by retrieving the indexes corresponding to the top-left and bottom-right items with a given parent index:</source>
          <target state="translated">要选择一个模型中的所有项目,必须为模型的每一级创建一个覆盖该级所有项目的选择。我们通过检索给定父索引的左上角和右下角项目对应的索引来实现这一目的。</target>
        </trans-unit>
        <trans-unit id="ab55f11c0c605de56bf8d152ca1e768df5f6b837" translate="yes" xml:space="preserve">
          <source>To select these items in the model, and see the corresponding change in the table view, we need to construct a selection object then apply it to the selection model:</source>
          <target state="translated">为了在模型中选择这些项目,并在表视图中看到相应的变化,我们需要构造一个选择对象,然后应用到选择模型中。</target>
        </trans-unit>
        <trans-unit id="eef51061a6ed9bb97de593d90b78f46a795a0d72" translate="yes" xml:space="preserve">
          <source>To send events, for example mouse or keyboard events, to the scene, use &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication::sendEvent&lt;/a&gt;() with the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance as the receiver.</source>
          <target state="translated">要将事件（例如鼠标或键盘事件）发送到场景，请使用&lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication :: sendEvent&lt;/a&gt;（）（以&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;实例为接收器）。</target>
        </trans-unit>
        <trans-unit id="fa9cf6864de2d8bdae98579d3f163308a991736b" translate="yes" xml:space="preserve">
          <source>To set &quot;What's This?&quot; help on a menu item (with or without a shortcut key), set the help on the item's action.</source>
          <target state="translated">要在菜单项上设置 &quot;这是什么?&quot;帮助(无论是否有快捷键),请在项的操作上设置帮助。</target>
        </trans-unit>
        <trans-unit id="f7d136789ae52fb9598afb09acf7a2bd8827d4fe" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">要将&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;值设置为着色器中的4x4矩阵，请使用 &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c48c8a40e8eecd6a32b4700c2856d0171f5e191" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">要将&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;值设置为着色器中的4x4矩阵，请使用 &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f40d31fed3e23edc15483954b98d9007af6b89" translate="yes" xml:space="preserve">
          <source>To set a continuous byte stream mode, instantiate &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; and call &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;() with a negative value. This gives the ability to use &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; as a regular buffered &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can call &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() to initiate connection with endpoint, &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to transmit and &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() to receive data from the peer, but you cannot distinguish message boundaries.</source>
          <target state="translated">要设置连续字节流模式，请实例化&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;并使用负值调用&lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;（）。这样就可以将&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt;用作常规的缓冲&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;。您可以调用&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）来发起与端点的连接，可以&lt;a href=&quot;qiodevice#write&quot;&gt;写&lt;/a&gt;（）进行传输，而&lt;a href=&quot;qiodevice#read&quot;&gt;读&lt;/a&gt;（）来从对等方接收数据，但是您无法区分消息边界。</target>
        </trans-unit>
        <trans-unit id="df514d8803d92aad8382f1ee7f5fbb863839a85b" translate="yes" xml:space="preserve">
          <source>To set a continuous byte stream mode, instantiate QSctpSocket and call &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;() with a negative value. This gives the ability to use QSctpSocket as a regular buffered &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can call &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() to initiate connection with endpoint, &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to transmit and &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() to receive data from the peer, but you cannot distinguish message boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f53ea5a48de53c822c012aeefc61014f8be3030" translate="yes" xml:space="preserve">
          <source>To set a cursor shape use &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor::setShape&lt;/a&gt;() or use the &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; constructor which takes the shape as argument, or you can use one of the predefined cursors defined in the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; enum.</source>
          <target state="translated">要设置光标形状，请使用&lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor :: setShape&lt;/a&gt;（）或使用将形状作为参数的&lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt;构造函数，或者您可以使用&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;枚举中定义的预定义光标之一。</target>
        </trans-unit>
        <trans-unit id="74f1c5b408e90cfa5494d751d64d390c9276cea1" translate="yes" xml:space="preserve">
          <source>To set a cursor shape use &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor::setShape&lt;/a&gt;() or use the QCursor constructor which takes the shape as argument, or you can use one of the predefined cursors defined in the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69874207da40c8e57ed138d99db0538c16cf43f4" translate="yes" xml:space="preserve">
          <source>To set an arbitrary transform origin point use the &lt;a href=&quot;qml-qtquick-scale&quot;&gt;Scale&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt; transform types with &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">要设置任意变换原点，请使用带有&lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-scale&quot;&gt;Scale&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt;变换类型。</target>
        </trans-unit>
        <trans-unit id="9e74fbab69caa9e4bc36beb8e1da3ff403d89ff6" translate="yes" xml:space="preserve">
          <source>To set an item as the current item without selecting it, call</source>
          <target state="translated">要将一个项目设置为当前项目而不选择它,请调用</target>
        </trans-unit>
        <trans-unit id="5756c23b411752a7da105100cbd843b8260faf10" translate="yes" xml:space="preserve">
          <source>To set individual elements in the array, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload. For example, to fill the array above with integers:</source>
          <target state="translated">要设置数组中的各个元素，请使用&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex，const QJSValue＆value）&lt;/a&gt;重载。例如，用整数填充上面的数组：</target>
        </trans-unit>
        <trans-unit id="ff62840c5182229261dd22a4c53ae6422f856183" translate="yes" xml:space="preserve">
          <source>To set only one property, the other can be set to &lt;code&gt;-1&lt;/code&gt;. For example, if you only want to animate the duration and not velocity, use the following code:</source>
          <target state="translated">要仅设置一个属性，可以将另一个属性设置为 &lt;code&gt;-1&lt;/code&gt; 。例如，如果只想对持续时间进行动画处理而不是对速度进行动画处理，请使用以下代码：</target>
        </trans-unit>
        <trans-unit id="84c632306b3da38aa41c054e86c9547b6c98182a" translate="yes" xml:space="preserve">
          <source>To set or get the position of the mouse cursor use the static methods &lt;a href=&quot;qcursor#pos&quot;&gt;QCursor::pos&lt;/a&gt;() and &lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor::setPos&lt;/a&gt;().</source>
          <target state="translated">要设置或获取鼠标光标的位置，请使用静态方法&lt;a href=&quot;qcursor#pos&quot;&gt;QCursor :: pos&lt;/a&gt;（）和&lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor :: setPos&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ad1e14311abaed179f60e85c9666e783bb25cb3d" translate="yes" xml:space="preserve">
          <source>To set or query properties the following functions are provided: &lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader::setProperty&lt;/a&gt;(), &lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader::property&lt;/a&gt;() and &lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader::hasProperty&lt;/a&gt;().</source>
          <target state="translated">要设置或查询属性，提供了以下功能：&lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader :: setProperty&lt;/a&gt;（），&lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader :: property&lt;/a&gt;（）和&lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader :: hasProperty&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="83e2fbf9df9bb17ebc7d4c3cb3f0842c14429c8b" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a &lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;PluginParameter&lt;/a&gt; inside a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt;.</source>
          <target state="translated">要设置这样的参数，&lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;请&lt;/a&gt;在&lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;对象内声明一个PluginParameter，并为其指定&lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;名称&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;值&lt;/a&gt;属性。可从&lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;插件参考页面中&lt;/a&gt;获得每个插件的有效参数名称的列表。</target>
        </trans-unit>
        <trans-unit id="0070c4295202c0dfd6fb103c9c4f1d021d7f1f6d" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a PluginParameter inside an element that accepts plugin parameters as configuration objects, such as a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, or a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt; for geoservice plugins, and Qt Positioning plugins#Default plugins for position plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6c5e5005265df19fbe694009fa1aed337cc02d" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a PluginParameter inside an element that accepts plugin parameters as configuration objects, such as a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, or a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtpositioning-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtpositioning-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt; for geoservice plugins, and &lt;a href=&quot;qtpositioning-plugins#default-plugins&quot;&gt;Qt Positioning plugins#Default plugins&lt;/a&gt; for position plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c570b9629a12a412d70288fd0a7d25be92044e41" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the &lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient&lt;/a&gt;.</source>
          <target state="translated">要设置渐变色标，请将其定义为&lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient的&lt;/a&gt;子级。</target>
        </trans-unit>
        <trans-unit id="e8832bab5c4648d704fac44703f71ddc4b1762ad" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the Gradient.</source>
          <target state="translated">要设置渐变停止,请将它们定义为渐变的子代。</target>
        </trans-unit>
        <trans-unit id="061a46bcaf8a6753e9a88ff9b74e803b1f3b051e" translate="yes" xml:space="preserve">
          <source>To set the item's ellipse, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current ellipse geometry.</source>
          <target state="translated">要设置项目的椭圆，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;（）。的&lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前椭圆的几何形状。</target>
        </trans-unit>
        <trans-unit id="62db30bb851aa4c180c2fa57ad92a2e8a1e486a3" translate="yes" xml:space="preserve">
          <source>To set the item's ellipse, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to QGraphicsEllipseItem's constructor, or call &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current ellipse geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7391f1638e013db097fc80c158b3cce41bd56035" translate="yes" xml:space="preserve">
          <source>To set the item's line, pass a &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; to &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;line&lt;/a&gt;() function returns the current line. By default the line is black with a width of 0, but you can change this by calling &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;().</source>
          <target state="translated">要设置项目的行，&lt;a href=&quot;qlinef&quot;&gt;请将QLineF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;（）函数。所述&lt;a href=&quot;qgraphicslineitem#line&quot;&gt;线&lt;/a&gt;（）函数返回当前行。默认情况下，该行为黑色，宽度为0，但是您可以通过调用&lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;（）来更改它。</target>
        </trans-unit>
        <trans-unit id="c56b4bb12220ac0419673f3e026037bbf1142141" translate="yes" xml:space="preserve">
          <source>To set the item's line, pass a &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; to QGraphicsLineItem's constructor, or call the &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;line&lt;/a&gt;() function returns the current line. By default the line is black with a width of 0, but you can change this by calling &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4dffe0dc7f4f180f9dac44388f85e4511d2009" translate="yes" xml:space="preserve">
          <source>To set the item's path, pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to &lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;path&lt;/a&gt;() function returns the current path.</source>
          <target state="translated">要设置项目的路径，请将&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspathitem#path&quot;&gt;路径&lt;/a&gt;（）函数返回当前路径。</target>
        </trans-unit>
        <trans-unit id="f57629e406ce37fb84abd9a4d77d2b583b1aabe5" translate="yes" xml:space="preserve">
          <source>To set the item's path, pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to QGraphicsPathItem's constructor, or call the &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;path&lt;/a&gt;() function returns the current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00e99aa772027e3ccc76894ae38b9ff4aa0cf2" translate="yes" xml:space="preserve">
          <source>To set the item's pixmap, pass a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;pixmap&lt;/a&gt;() function returns the current pixmap.</source>
          <target state="translated">要设置项目的像素图，请将&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;像素图&lt;/a&gt;（）函数返回当前像素图。</target>
        </trans-unit>
        <trans-unit id="2287a05f182ee8af11e17d2a7c26c70d069fba1d" translate="yes" xml:space="preserve">
          <source>To set the item's pixmap, pass a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to QGraphicsPixmapItem's constructor, or call the &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;pixmap&lt;/a&gt;() function returns the current pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f4ee9f46b0b051febda9f8f589f38ea30da233" translate="yes" xml:space="preserve">
          <source>To set the item's polygon, pass a &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; to &lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;polygon&lt;/a&gt;() function returns the current polygon.</source>
          <target state="translated">要设置项目的多边形，&lt;a href=&quot;qpolygonf&quot;&gt;请将QPolygonF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;（）函数。该&lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;多边形&lt;/a&gt;（）函数返回当前的多边形。</target>
        </trans-unit>
        <trans-unit id="131f29ee62875ada437dd6320bfab8d7d74e38b7" translate="yes" xml:space="preserve">
          <source>To set the item's polygon, pass a &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; to QGraphicsPolygonItem's constructor, or call the &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;polygon&lt;/a&gt;() function returns the current polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f5784688f2afd1aef4d7327f48ad6368ed3b7a" translate="yes" xml:space="preserve">
          <source>To set the item's rectangle, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current rectangle.</source>
          <target state="translated">要设置项目的矩形，&lt;a href=&quot;qrectf&quot;&gt;请将QRectF&lt;/a&gt;传递给&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;（）函数。的&lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;矩形&lt;/a&gt;（）函数返回当前矩形。</target>
        </trans-unit>
        <trans-unit id="50fd6b7b52f68d846cec2535b087f4f59f81e732" translate="yes" xml:space="preserve">
          <source>To set the item's rectangle, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to QGraphicsRectItem's constructor, or call the &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8fc84a401eb2427dff60845c0f471b47250427" translate="yes" xml:space="preserve">
          <source>To set the item's text, pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;()/&lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，请将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;的构造函数，或调用&lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;（）/ &lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="46330fad71f8360e489b220b0eee12ebf925ed8b" translate="yes" xml:space="preserve">
          <source>To set the item's text, pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to QGraphicsTextItem's constructor, or call &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;()/&lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587f0fd211f7b78a3e68f7e794a9eac713cc32cf" translate="yes" xml:space="preserve">
          <source>To set the item's text, you can either pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;() to change the text later. To set the text fill color, call &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="translated">要设置项目的文本，可以将&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;传递给&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;的构造函数，也可以稍后调用&lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;（）来更改文本。要设置文本填充颜色，请调用&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ad6cc3106f3d35656f12af7be7cfa9f0e821a494" translate="yes" xml:space="preserve">
          <source>To set the item's text, you can either pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to QGraphicsSimpleTextItem's constructor, or call &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;() to change the text later. To set the text fill color, call &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d916691cc9eb71bea7a6f2a778d879468953d17f" translate="yes" xml:space="preserve">
          <source>To set the layout direction based on the &lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;default layout direction&lt;/a&gt; of the application, use the following code:</source>
          <target state="translated">要基于应用程序的&lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;默认布局方向设置布局方向&lt;/a&gt;，请使用以下代码：</target>
        </trans-unit>
        <trans-unit id="eccb229829bfa9f57f9793f404bde79fa899ca61" translate="yes" xml:space="preserve">
          <source>To set the model on which &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; should operate, call &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;(). By default, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; will attempt to match the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completion prefix&lt;/a&gt; (i.e., the word that the user has started typing) against the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; data stored in column 0 in the model case sensitively. This can be changed using &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;(), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;(), and &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;().</source>
          <target state="translated">要设置&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;应该在其上运行的模型，请调用&lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;（）。默认情况下，&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;会尝试将&lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;完成前缀&lt;/a&gt;（即用户已开始键入的单词）与模型案例中存储在第0列中的&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt;数据进行敏感匹配。可以使用&lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;（），&lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;（）和&lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;（）进行更改。</target>
        </trans-unit>
        <trans-unit id="6a9c18be67d7974ecb7e0072fa2d5843ab7a4f00" translate="yes" xml:space="preserve">
          <source>To set the model on which QCompleter should operate, call &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;(). By default, QCompleter will attempt to match the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completion prefix&lt;/a&gt; (i.e., the word that the user has started typing) against the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; data stored in column 0 in the model case sensitively. This can be changed using &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;(), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;(), and &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25aca77bc8cba7ebf1fe31e73a6d8925ae6f65cc" translate="yes" xml:space="preserve">
          <source>To set the scheme, the following call is used:</source>
          <target state="translated">要设置方案,请使用以下调用。</target>
        </trans-unit>
        <trans-unit id="d62fa8d99c112b8a3751341565b723b5a0cfaa13" translate="yes" xml:space="preserve">
          <source>To set the size of the minor tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">要设置次要刻度线的大小，指定&lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="069ea43437d6360614bbc10e8d01b9d929eaabdf" translate="yes" xml:space="preserve">
          <source>To set the size of the tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">要设置刻度线的大小，指定&lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd524d036c8a4f5cddad01412bc6de37c11220b5" translate="yes" xml:space="preserve">
          <source>To set the value to NULL, use &lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">要将值设置为NULL，请使用&lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a1ce87cc40a0b03b8c578fd75cf3bf38eba46af8" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt; or &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt; depending on the platform. However when reading the visibility property you will always get the actual state, never &lt;code&gt;AutomaticVisibility&lt;/code&gt;.</source>
          <target state="translated">将可见性设置为&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;意味着为窗口提供默认的可见状态，根据平台的不同，该状态可能是&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt;或&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt;。但是，在读取可见性属性时，您将始终获得实际状态，而不会获得 &lt;code&gt;AutomaticVisibility&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1aafea08b3c916e1992413898c75c9f79481775" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be fullscreen or windowed depending on the platform. When reading the visibility property you will always get the actual state, never &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;.</source>
          <target state="translated">将可见性设置为&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;意味着为窗口提供默认的可见状态，根据平台的不同，该状态可以是全屏显示或窗口显示。读取可见性属性时，您将始终获得实际状态，而不会获得&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d6d3a9a9257b6f0202e1e54ab22cd17fead68eb" translate="yes" xml:space="preserve">
          <source>To set up a manual tab focus chain, see &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;. Tab key events used by Keys or &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt; have precedence over focus chain behavior; ignore the events in other key handlers to allow it to propagate.</source>
          <target state="translated">要设置手动选项卡焦点链，请参见&lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;。Keys或&lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;使用的Tab键事件优先于焦点链行为。忽略其他键处理程序中的事件以使其传播。</target>
        </trans-unit>
        <trans-unit id="01c4ad4edfdba3b201f1ef8c84325ca2b659e814" translate="yes" xml:space="preserve">
          <source>To set up sharing between &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances belonging to different windows, set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; application attribute before instantiating &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. This will trigger sharing between all &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances without any further steps.</source>
          <target state="translated">要设置属于不同窗口的&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;实例之间的共享，请在实例化&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;之前设置&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt;应用程序属性。这将触发所有&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;实例之间的共享，而无需任何其他步骤。</target>
        </trans-unit>
        <trans-unit id="6b5c013d60fc059d064628966760cebcd4ec5a82" translate="yes" xml:space="preserve">
          <source>To set up sharing between QOpenGLWidget instances belonging to different windows, set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; application attribute before instantiating &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. This will trigger sharing between all QOpenGLWidget instances without any further steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034c0e0fe9d9ff64eff3b21ad06690f5712f2144" translate="yes" xml:space="preserve">
          <source>To set/get the default horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;, use the property &lt;code&gt;horizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">要设置/获取&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;的默认水平对齐方式，请使用属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d52ba65fb99d53387a22a3723f50a76c2a635201" translate="yes" xml:space="preserve">
          <source>To share an action between a menu and a toolbar, drag its icon from the action editor to the toolbar rather than from the menu where its entry is located. See &lt;a href=&quot;#adding-an-action&quot;&gt;Adding an Action&lt;/a&gt; for more information about this process.</source>
          <target state="translated">要在菜单和工具栏之间共享动作，请将其图标从动作编辑器拖到工具栏，而不是从其条目所在的菜单拖到工具栏。有关此过程的更多信息，请参见&lt;a href=&quot;#adding-an-action&quot;&gt;添加操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68317695f20357b58121004fcc3c02fc0a97ea24" translate="yes" xml:space="preserve">
          <source>To share an action between a menu and a toolbar, drag its icon from the action editor to the toolbar rather than from the menu where its entry is located. See &lt;a href=&quot;designer-creating-mainwindows#adding-an-action&quot;&gt;Adding an Action&lt;/a&gt; for more information about this process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d78a9f9e3b90f51a061c86d0ee458532d95585" translate="yes" xml:space="preserve">
          <source>To show a color dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property can be used to determine the currently selected color in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示颜色对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt;属性可以用来确定在对话框中当前选定的颜色。该&lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;颜色&lt;/a&gt;最终选择已被接受对话框仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="2a92527fa1b3a1ecd63b9312c94fca44a3ec763a" translate="yes" xml:space="preserve">
          <source>To show a color dialog, construct an instance of ColorDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property can be used to determine the currently selected color in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71729f75e4443319235925fd9226815efc10e752" translate="yes" xml:space="preserve">
          <source>To show a file dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; properties can be used to determine the currently selected file(s) in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; properties are updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt;或&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt;属性可以被用来确定在对话框中当前选中的文件（多个）。该&lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;文件&lt;/a&gt;与&lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;文件&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="90767e48d8beff292f9a342239e78bb009a3c7d8" translate="yes" xml:space="preserve">
          <source>To show a file dialog, construct an instance of FileDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; properties can be used to determine the currently selected file(s) in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; properties are updated only after the final selection has been made by accepting the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ab49efa2c138d458a1399fedd68c2a5f3304f8" translate="yes" xml:space="preserve">
          <source>To show a folder dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property can be used to determine the currently selected folder in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示文件夹对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt;属性可以用来确定在对话框中当前选定的文件夹中。该&lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;文件夹&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="efee9f8714f8ae44f786bc48ce2b963621df0f6b" translate="yes" xml:space="preserve">
          <source>To show a folder dialog, construct an instance of FolderDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property can be used to determine the currently selected folder in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ed6039ad770d1428b099b03e4736029a600ee6" translate="yes" xml:space="preserve">
          <source>To show a font dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property can be used to determine the currently selected font in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">要显示字体对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。所述&lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt;属性可以被用来确定在对话框中当前选定的字体。该&lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;字体&lt;/a&gt;最后的选择已经通过接受对话仅取得后属性更新。</target>
        </trans-unit>
        <trans-unit id="a980d317ef8453320976925faf00c32aed3ede9e" translate="yes" xml:space="preserve">
          <source>To show a font dialog, construct an instance of FontDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property can be used to determine the currently selected font in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d11e62870bad9a2050193f62497908b10ce192" translate="yes" xml:space="preserve">
          <source>To show a message dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="translated">要显示消息对话框，请构造&lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt;的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ccfeb83c45a591aa7e832db3bb0bc57286e8b7" translate="yes" xml:space="preserve">
          <source>To show a message dialog, construct an instance of MessageDialog, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39302e102fd32e71d3964641a606110a61c7374" translate="yes" xml:space="preserve">
          <source>To show a native dialog, construct an instance of one of the concrete Dialog implementations, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. Dialog emits &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;rejected()&lt;/a&gt; when the user is done with the dialog.</source>
          <target state="translated">要显示本机对话框，请构造其中一个具体Dialog实现的实例，设置所需的属性，然后调用&lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open（）&lt;/a&gt;。当用户完成对话框后，Dialog会发出&lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted（）&lt;/a&gt;或&lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;rejected（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="474bae090b1b4ad6eddb58dd990af0ff53114ff1" translate="yes" xml:space="preserve">
          <source>To show the user where the item currently being dragged will be placed if dropped, set the view's &lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt; property. This provides the user with continuously updating information about item placement within the view.</source>
          <target state="translated">要向用户显示当前被拖动的项目（如果被放置）将放置在何处，请设置视图的&lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt;属性。这为用户提供了有关视图内项目放置的连续更新信息。</target>
        </trans-unit>
        <trans-unit id="1d6b729f39a0d778d1390b62b1b22e0037272a87" translate="yes" xml:space="preserve">
          <source>To show this in practice, we review the source code for the implicitly shared &lt;code&gt;Employee&lt;/code&gt; class. In the header file we define the two classes &lt;code&gt;Employee&lt;/code&gt; and &lt;code&gt;EmployeeData&lt;/code&gt;.</source>
          <target state="translated">为了在实践中证明这一点，我们回顾了隐式共享的 &lt;code&gt;Employee&lt;/code&gt; 类的源代码。在头文件中，我们定义了两个类 &lt;code&gt;Employee&lt;/code&gt; 和 &lt;code&gt;EmployeeData&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec028b5bea51403f894a79512d68b65fac732666" translate="yes" xml:space="preserve">
          <source>To signify that a document is an article, you append the article keyword to the \page command:</source>
          <target state="translated">为了表示一个文档是一篇文章,你可以在\page命令后面加上文章关键字。</target>
        </trans-unit>
        <trans-unit id="5cd6c16df56cfe8a544abfbd6c403c5179b933e1" translate="yes" xml:space="preserve">
          <source>To simplify binding and maintaining larger data sets, a context object can be set on a &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;. All the properties of the context object are available by name in the context, as though they were all individually added through calls to &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). Changes to the property's values are detected through the property's notify signal. Setting a context object is both faster and easier than manually adding and maintaining context property values.</source>
          <target state="translated">为了简化绑定和维护更大的数据集，可以在&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;上设置上下文对象。上下文对象的所有属性都可以在上下文中按名称使用，就好像它们都是通过调用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）单独添加的一样。通过属性的通知信号来检测对属性值的更改。与手动添加和维护上下文属性值相比，设置上下文对象既快捷又容易。</target>
        </trans-unit>
        <trans-unit id="d7975065cf6e4c14a70a82368bc5b551e5a79d70" translate="yes" xml:space="preserve">
          <source>To simplify binding and maintaining larger data sets, a context object can be set on a QQmlContext. All the properties of the context object are available by name in the context, as though they were all individually added through calls to &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). Changes to the property's values are detected through the property's notify signal. Setting a context object is both faster and easier than manually adding and maintaining context property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcda5108eab727100439171d3b81357d07b893d" translate="yes" xml:space="preserve">
          <source>To simplify interaction with items using a transformed view, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; provides mapTo... and mapFrom... functions that can translate between items' and the scene's coordinates. For example, you can call &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map an item coordiate to a scene coordinate, or &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from scene coordinates to item coordinates.</source>
          <target state="translated">为了简化使用转换视图与项目的交互，&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;提供了mapTo ...和mapFrom ...函数，可以在项目坐标和场景坐标之间转换。例如，您可以调用&lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）将项目坐标映射到场景坐标，或&lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;调用mapFromScene&lt;/a&gt;（）从场景坐标映射到项目坐标。</target>
        </trans-unit>
        <trans-unit id="9dbe3d702108cae56c138601d5a2e9e05e21bd36" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordiate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">要使用转化视图简化与项目互为作用，&lt;a href=&quot;qgraphicsview&quot;&gt;的QGraphicsView&lt;/a&gt;提供&lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ......和&lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ......可以现场和查看坐标之间的转换功能。例如，您可以调用&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）将视图坐标映射到浮点场景坐标，或&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;调用mapFromScene&lt;/a&gt;（）从浮点场景坐标映射到视图坐标。</target>
        </trans-unit>
        <trans-unit id="57598bda0e6694e6cad632af86c2fae4b551dea2" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordinate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">要使用转化视图简化与项目互为作用，&lt;a href=&quot;qgraphicsview&quot;&gt;的QGraphicsView&lt;/a&gt;提供&lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ......和&lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ......可以现场和查看坐标之间的转换功能。例如，你可以调用&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;（）来映射视图坐标为浮点现场协调，或&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;（）从浮点场景坐标，查看坐标映射。</target>
        </trans-unit>
        <trans-unit id="6e12dc82e4ef2269cf9a3dadd1da6b316999cffb" translate="yes" xml:space="preserve">
          <source>To simulate a sequence of touch events on a specific device for a window or widget, call &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt; to create a &lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt; instance. Add touch events to the sequence by calling &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;() and &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;stationary&lt;/a&gt;(), and let the instance run out of scope to commit the sequence to the event system.</source>
          <target state="translated">要在特定设备上模拟窗口或窗口小部件的触摸事件序列，请调用&lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest :: touchEvent&lt;/a&gt;创建&lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt;实例。通过调用&lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;（），&lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;（）和&lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;平稳&lt;/a&gt;（）来将触摸事件添加到序列中，并让实例用完范围以将该序列提交给事件系统。</target>
        </trans-unit>
        <trans-unit id="e9f1b53f773d7d523f8a647544af2996e3985a90" translate="yes" xml:space="preserve">
          <source>To simulate a sequence of touch events on a specific device for a window or widget, call &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt; to create a QTouchEventSequence instance. Add touch events to the sequence by calling &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;() and &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;stationary&lt;/a&gt;(), and let the instance run out of scope to commit the sequence to the event system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfe1b2df557306e9615c93910faf54c2c481a32" translate="yes" xml:space="preserve">
          <source>To skip the post-processing step, also set the &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; configuration.</source>
          <target state="translated">要跳过后处理步骤，还要设置 &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="0890ac3690cc3e62db27d971329d2444400b2e61" translate="yes" xml:space="preserve">
          <source>To solve this problem, QML introduces a concept known as a</source>
          <target state="translated">为了解决这个问题,QML引入了一个概念,即称为</target>
        </trans-unit>
        <trans-unit id="84bd264dac6221c57df0588e686273701a1f917f" translate="yes" xml:space="preserve">
          <source>To solve this problem, a QWindowsWindowFunction can be used to enable a native Windows flag which will set &lt;code&gt;WS_BORDER&lt;/code&gt; when showing in full screen mode. This can be utilized as follows:</source>
          <target state="translated">为了解决此问题，可以使用QWindowsWindowFunction启用本机Windows标志，该标志在以全屏模式显示时将设置 &lt;code&gt;WS_BORDER&lt;/code&gt; 。可以使用以下方法：</target>
        </trans-unit>
        <trans-unit id="6e82604c703aadd313f71d9e180c259c4952eb2b" translate="yes" xml:space="preserve">
          <source>To solve this problem, the model/view framework uses proxy models to manage the information supplied between individual models and views. Proxy models are components that behave like ordinary models from the perspective of a view, and access data from source models on behalf of that view. The signals and slots used by the model/view framework ensure that each view is updated appropriately no matter how many proxy models are placed between itself and the source model.</source>
          <target state="translated">为了解决这个问题,模型/视图框架使用代理模型来管理各个模型和视图之间提供的信息。代理模型是一种组件,从视图的角度看,它的行为就像普通模型一样,并代表该视图访问源模型的数据。模型/视图框架所使用的信号和插槽确保每个视图都能得到适当的更新,无论在其自身和源模型之间放置了多少个代理模型。</target>
        </trans-unit>
        <trans-unit id="c60a655e10c297046db74a287893a4657a33ba59" translate="yes" xml:space="preserve">
          <source>To sort the model, you can use &lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;sort&lt;/a&gt;().</source>
          <target state="translated">要对模型进行排序，可以使用&lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;sort&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3eeb0c559edbf750f79f0828b87e8a3726c85cdb" translate="yes" xml:space="preserve">
          <source>To specify a path containing spaces, quote the path using the technique described in &lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;Whitespace&lt;/a&gt;.</source>
          <target state="translated">要指定包含空格的路径，请使用&lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;Whitespace中&lt;/a&gt;描述的技术对路径进行引用。</target>
        </trans-unit>
        <trans-unit id="0c48b21c10573e2a264dea371254b7ddff165494" translate="yes" xml:space="preserve">
          <source>To specify a prefix for a file name, prepend the prefix followed by a single colon (e.g., &quot;images:undo.png&quot;, &quot;xmldocs:books.xml&quot;).</source>
          <target state="translated">要为文件名指定前缀,请在前缀后面加上一个冒号(例如,&quot;images:undo.png&quot;,&quot;xmldocs:books.xml&quot;)。</target>
        </trans-unit>
        <trans-unit id="3346a542382eae5a86e880b742328e298a629ee9" translate="yes" xml:space="preserve">
          <source>To specify a relative path to a local directory:</source>
          <target state="translated">指定本地目录的相对路径。</target>
        </trans-unit>
        <trans-unit id="e545fbaadb3b69bbde547c14aac9d4eddbbd8b02" translate="yes" xml:space="preserve">
          <source>To specify a resource file you must enable the resource editor by opening the &lt;b&gt;Tools&lt;/b&gt; menu, and switching on the &lt;b&gt;Resource Browser&lt;/b&gt; option.</source>
          <target state="translated">要指定资源文件，必须通过打开&amp;ldquo; &lt;b&gt;工具&amp;rdquo;&lt;/b&gt;菜单并打开&amp;ldquo; &lt;b&gt;资源浏览器&amp;rdquo;&lt;/b&gt;选项来启用资源编辑&lt;b&gt;器&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="35035e0edf62baf5ecb6820217e25b7360c33864" translate="yes" xml:space="preserve">
          <source>To specify additional search paths in project files, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; like that, instead:</source>
          <target state="translated">要在项目文件中指定其他搜索路径，请使用类似&lt;a href=&quot;#libs&quot;&gt;LIBS的方法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1fab0f58ad5a95f7d65d4399e97dcb1a591245e5" translate="yes" xml:space="preserve">
          <source>To specify additional search paths in project files, use &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt; like that, instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f21ec14504f11bdc55c4492d35a9bba2b6d4a82" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot (more details provided after the table). The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">要指定缓动曲线，您至少需要指定类型。对于某些曲线，您还可以指定幅度，周期和/或过冲（表格后提供更多详细信息）。默认的缓动曲线为 &lt;code&gt;Easing.Linear&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9ff38837a7ea116a36039fd78691d73de16f78b" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot. The default easing curve is Linear.</source>
          <target state="translated">要指定一条缓和曲线,你至少需要指定类型,对于一些曲线,你还可以指定振幅、周期和/或过冲。对于一些曲线,你还可以指定振幅、周期和/或过冲。默认的缓和曲线是线性曲线。</target>
        </trans-unit>
        <trans-unit id="b55c8f792411648a6b1e6b210856ad80cbeb4b3a" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period, overshoot or custom bezierCurve data. The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">要指定缓动曲线，您至少需要指定类型。对于某些曲线，您还可以指定幅度，周期，超调或自定义bezierCurve数据。默认的缓动曲线为 &lt;code&gt;Easing.Linear&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c136a976e0449347c6070972df1785288009f156" translate="yes" xml:space="preserve">
          <source>To specify layout functions for the form's margin and spacing, check the &lt;b&gt;Layout Function&lt;/b&gt; group box to enable the line edits.</source>
          <target state="translated">要为表单的边距和间距指定布局功能，请选中&amp;ldquo; &lt;b&gt;布局功能&amp;rdquo;&lt;/b&gt;组框以启用线编辑。</target>
        </trans-unit>
        <trans-unit id="6310bae4a9abdb8764d23aa8dd3c2ba64094c463" translate="yes" xml:space="preserve">
          <source>To specify libraries in a project file, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; instead.</source>
          <target state="translated">要在项目文件中指定库，请改用&lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6b402496658657e6108b2fffbdfb91206c9e6f3" translate="yes" xml:space="preserve">
          <source>To specify libraries in a project file, use &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef33dbb768004e1ae60d3b67b7fe2372c07789c" translate="yes" xml:space="preserve">
          <source>To specify private libraries in a library project file, use &lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt; instead.</source>
          <target state="translated">要在库项目文件中指定私有库，请改用&lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ba363a2a9ef2e47ab371ce9ff5d6bd2ed3514c7" translate="yes" xml:space="preserve">
          <source>To specify private libraries in a library project file, use &lt;a href=&quot;qmake-variable-reference#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5504f767acf757dcf5f76e49d05a524bb92d9ce9" translate="yes" xml:space="preserve">
          <source>To specify that an image should be loaded by an image provider, use the &lt;b&gt;&quot;image:&quot;&lt;/b&gt; scheme for the URL source of the image, followed by the identifiers of the image provider and the requested image. For example:</source>
          <target state="translated">若要指定图像提供者应加载图像，请对&lt;b&gt;图像&lt;/b&gt;的URL源使用&lt;b&gt;&amp;ldquo; image：&amp;rdquo;&lt;/b&gt;方案，然后使用图像提供者的标识符和请求的图像。例如：</target>
        </trans-unit>
        <trans-unit id="129ff86d1373f6aac61895fe9c95304a28982bf6" translate="yes" xml:space="preserve">
          <source>To specify that the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; will react to multiple buttons, &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButtons&lt;/a&gt; flag values are combined using the &quot;|&quot; (or) operator:</source>
          <target state="translated">为了指定&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;将对多个按钮做出反应，使用&amp;ldquo; |&amp;rdquo;组合&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButtons&lt;/a&gt;标志值。（或）运算符：</target>
        </trans-unit>
        <trans-unit id="1857cbb7066a66a4a1747a66d5e39c6089f70938" translate="yes" xml:space="preserve">
          <source>To specify the location of a server, use the CODEBASE attribute in the OBJECT tag of your web-site. The value can point to the server file itself, to an INF file listing other files the server requires (e.g. the Qt DLL), or a compressed CAB archive.</source>
          <target state="translated">要指定服务器的位置,请使用网站OBJECT标签中的CODEBASE属性。这个值可以指向服务器文件本身,也可以指向一个INF文件,其中列出了服务器需要的其他文件(例如Qt DLL),或者是一个压缩的CAB存档。</target>
        </trans-unit>
        <trans-unit id="8cfe9e57af5c38f5f3595c0979fe0e2147668e27" translate="yes" xml:space="preserve">
          <source>To specify the rectangle, it requires a &lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt; point, both given by a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;.</source>
          <target state="translated">要指定矩形，它需要一个&lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt;点，它们均由&lt;a href=&quot;qml-coordinate&quot;&gt;坐标&lt;/a&gt;给出。</target>
        </trans-unit>
        <trans-unit id="40a52e8cffdce1eee35ed71af0879cd00219e085" translate="yes" xml:space="preserve">
          <source>To specify the style and color of lines and outlines, use the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s &lt;a href=&quot;qpen&quot;&gt;pen&lt;/a&gt; combined with &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::GlobalColor&lt;/a&gt;:</source>
          <target state="translated">要指定线条和轮廓的样式和颜色，请使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的&lt;a href=&quot;qpen&quot;&gt;笔&lt;/a&gt;结合&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;和&lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: GlobalColor&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7656f79f83810d490b78e1988007f5eac22de6f5" translate="yes" xml:space="preserve">
          <source>To start a computation, use one of the APIs in the &lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt; framework.</source>
          <target state="translated">要开始计算，请使用&lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt;框架中的API之一。</target>
        </trans-unit>
        <trans-unit id="a8c378962136265b66dbf6a3c002cccbe95b16cd" translate="yes" xml:space="preserve">
          <source>To start a drag from an item, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, passing a pointer to the widget that starts the drag. Items can be observed by many views at the same time, but only one view can start the drag. Drags are in most cases started as a result of pressing or moving the mouse, so in mousePressEvent() or mouseMoveEvent(), you can get the originating widget pointer from the event. For example:</source>
          <target state="translated">要从项目开始拖动，请创建&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;对象，并将指针传递到开始拖动的小部件。可以同时通过多个视图观察项目，但是只有一个视图可以开始拖动。在大多数情况下，拖动是由于按下或移动鼠标而开始的，因此在mousePressEvent（）或mouseMoveEvent（）中，您可以从事件中获取原始的窗口小部件指针。例如：</target>
        </trans-unit>
        <trans-unit id="e8f7e82e0b3188fc04a7621f02019209a9dbf12a" translate="yes" xml:space="preserve">
          <source>To start a drag, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, and call its exec() function. In most applications, it is a good idea to begin a drag and drop operation only after a mouse button has been pressed and the cursor has been moved a certain distance. However, the simplest way to enable dragging from a widget is to reimplement the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; and start a drag and drop operation:</source>
          <target state="translated">要开始拖动，请创建&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;对象，然后调用其exec（）函数。在大多数应用程序中，最好仅在按下鼠标按钮并且将光标移动了一定距离后才开始拖放操作。但是，启用从窗口小部件拖动的最简单方法是重新实现窗口小部件的&lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent（）&lt;/a&gt;并开始拖放操作：</target>
        </trans-unit>
        <trans-unit id="85ec5a6cf778da62e136c4057f68658caf8edd56" translate="yes" xml:space="preserve">
          <source>To start a process, pass the name and command line arguments of the program you want to run as arguments to &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;(). Arguments are supplied as individual strings in a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;.</source>
          <target state="translated">要启动进程，请将要运行的程序的名称和命令行参数作为参数传递给&lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;（）。参数作为单独的字符串提供在&lt;a href=&quot;qstringlist&quot;&gt;QStringList中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec55cc9fc62d63b86b8930cbf8185f96c71e483b" translate="yes" xml:space="preserve">
          <source>To start a top-level animation group, you simply use the &lt;a href=&quot;qabstractanimation#start&quot;&gt;start()&lt;/a&gt; function from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;. By a top-level animation group, we think of a group that itself is not contained within another group. Starting sub groups directly is not supported, and may lead to unexpected behavior.</source>
          <target state="translated">要启动顶级动画组，只需使用&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation中&lt;/a&gt;的&lt;a href=&quot;qabstractanimation#start&quot;&gt;start（）&lt;/a&gt;函数。在顶级动画组中，我们想到了一个本身不包含在另一个组中的组。不支持直接启动子组，这可能会导致意外行为。</target>
        </trans-unit>
        <trans-unit id="c94556b9382ed54894af0dd84a15e528118af92a" translate="yes" xml:space="preserve">
          <source>To start at another page than the page with the lowest ID, call &lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt;().</source>
          <target state="translated">要从另一个具有最低ID的页面开始，请调用&lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="420072f9c8f654c269ce68fbd7e572dce58e9c54" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, call the &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;() function. This emits the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore::transactionReady&lt;/a&gt;() signal for each of the application's unlockable products that were purchased previously by the current user. The status of these transactions will be &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction::PurchaseRestored&lt;/a&gt;.</source>
          <target state="translated">要开始恢复购买的过程，请调用&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore :: restorePurchases&lt;/a&gt;（）函数。这&lt;a href=&quot;qinappstore#transactionReady&quot;&gt;将为&lt;/a&gt;当前用户先前购买的每个应用程序的可解锁产品发出QInAppStore :: transactionReady（）信号。这些交易的状态将为&lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction :: PurchaseRestored&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea4b611b1a6307b87a8584d6fb48284ea0fdde97" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, you should call the restorePurchases() method in the &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; object. This will cause the onPurchaseRestored handler to be called in each of the application's unlockable products that has previously been purchased by the current user.</source>
          <target state="translated">To start the process of restoring purchases, you should call the restorePurchases() method in the &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; object. This will cause the onPurchaseRestored handler to be called in each of the application's unlockable products that has previously been purchased by the current user.</target>
        </trans-unit>
        <trans-unit id="0d72b8fc568c51fec8123ea8efb181ac03bdc0f7" translate="yes" xml:space="preserve">
          <source>To state the problem more formally, using States and Behaviors together can cause unexpected behavior when:</source>
          <target state="translated">更正式地说明问题,将State和Behaviors一起使用,可能会引起意外的行为,当。</target>
        </trans-unit>
        <trans-unit id="e3d843022091463e248a1657150850cf239ec969" translate="yes" xml:space="preserve">
          <source>To store an image, you start by constructing a &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;'s constructor. You can then set several options, such as the gamma level (by calling &lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt;()) and quality (by calling &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;()). &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; can write the image (i.e., the image format is supported and the device is open for writing). Call &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() to write the image to the device.</source>
          <target state="translated">要存储图像，请从构造&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;对象开始。将文件名或设备指针以及图像格式传递给&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;的构造函数。然后，您可以设置几个选项，例如伽玛级别（通过调用&lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt;（））和质量（通过调用&lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;（））。如果&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;可以写入图像，则&lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; （即，支持图像格式并且设备已打开以进行写入）。调用&lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;（）将图像写入设备。</target>
        </trans-unit>
        <trans-unit id="85ed1e553b545ce9ef5c805abcadbfbfd37358f6" translate="yes" xml:space="preserve">
          <source>To store an image, you start by constructing a QImageWriter object. Pass either a file name or a device pointer, and the image format to QImageWriter's constructor. You can then set several options, such as quality (by calling &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;()). &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if QImageWriter can write the image (i.e., the image format is supported and the device is open for writing). Call &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() to write the image to the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20893195962fbd627c933d0c81a7c8d0ea367c59" translate="yes" xml:space="preserve">
          <source>To style a button in Qt Quick Controls 2:</source>
          <target state="translated">在Qt快速控件中设置按钮的样式 2:</target>
        </trans-unit>
        <trans-unit id="88a4ee909c23d03593382b5a0648ddf66979bc61" translate="yes" xml:space="preserve">
          <source>To style a button in Qt Quick Controls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e69f212adb059d4de637b8ca4025ac03b9dca7" translate="yes" xml:space="preserve">
          <source>To style individual sections of the menu, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; component:</source>
          <target state="translated">要设置菜单的各个部分的样式，请使用&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt;组件：</target>
        </trans-unit>
        <trans-unit id="93b9ff68b94ed04a953808de1201686a3e2c296b" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, you must reimplement at least &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to draw the button's outline and its text or pixmap. It is generally advisable to reimplement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() as well, and sometimes &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;() (to determine whether a button press is within the button). For buttons with more than two states (like tri-state buttons), you will also have to reimplement &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;().</source>
          <target state="translated">要&lt;a href=&quot;qabstractbutton&quot;&gt;继承QAbstractButton&lt;/a&gt;，必须至少重新实现&lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）才能绘制按钮的轮廓及其文本或像素图。通常建议重新实现&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;（），有时也重新实现&lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;（）（以确定按钮是否在按钮内）。对于具有两个以上状态的按钮（例如三状态按钮），还必须重新实现&lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;（）和&lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a7860d026fa9322b6ee12c5adfed72a2d4a653cd" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, you need to implement &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;(). The &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;() functions only need to be reimplemented if you need a behavior different from the default behavior.</source>
          <target state="translated">要子类化&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;，您需要实现&lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;（）。该&lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;（）和&lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;只需要（）函数来重新实现，如果你需要从默认行为行为不同。</target>
        </trans-unit>
        <trans-unit id="149744c580078e2470b5984978b47d607e7208ca" translate="yes" xml:space="preserve">
          <source>To subclass QAbstractButton, you must reimplement at least &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to draw the button's outline and its text or pixmap. It is generally advisable to reimplement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() as well, and sometimes &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;() (to determine whether a button press is within the button). For buttons with more than two states (like tri-state buttons), you will also have to reimplement &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a689c6b8d2e5eeca29d32e5439ff79376cfde70" translate="yes" xml:space="preserve">
          <source>To subclass QAbstractProxyModel, you need to implement &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;(). The &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;() functions only need to be reimplemented if you need a behavior different from the default behavior.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
