<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="9451ac611f62ec333a7336c4764b5527bc500cd1" translate="yes" xml:space="preserve">
          <source>The delegate that styles each week number.</source>
          <target state="translated">样式每个周号的代表。</target>
        </trans-unit>
        <trans-unit id="2136b82927e2bf7812778b44a9632a4dedd99d71" translate="yes" xml:space="preserve">
          <source>The delegate that styles each weekday.</source>
          <target state="translated">代表,风格每个工作日。</target>
        </trans-unit>
        <trans-unit id="a1b170ac20f84abe0875eac52ba263fe3375d56a" translate="yes" xml:space="preserve">
          <source>The delegate used by a view is returned by the &lt;a href=&quot;qabstractitemview#itemDelegate&quot;&gt;itemDelegate()&lt;/a&gt; function. The &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;setItemDelegate()&lt;/a&gt; function allows you to install a custom delegate for a standard view, and it is necessary to use this function when setting the delegate for a custom view.</source>
          <target state="translated">视图使用的委托由&lt;a href=&quot;qabstractitemview#itemDelegate&quot;&gt;itemDelegate（）&lt;/a&gt;函数返回。该&lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;setItemDelegate（）&lt;/a&gt;功能可让您安装自定义委托的标准视图，并且有必要设置为代表的自定义视图时使用此功能。</target>
        </trans-unit>
        <trans-unit id="e940b71e3646d0f08b4e0cf81206910ed2c58de2" translate="yes" xml:space="preserve">
          <source>The deleter parameter</source>
          <target state="translated">删除器参数</target>
        </trans-unit>
        <trans-unit id="393c00273f3a48ba8dcc96429e60eae877ceccaa" translate="yes" xml:space="preserve">
          <source>The departure time to be used when querying for the route. The default value is an invalid date, meaning no departure time will be used in the query.</source>
          <target state="translated">查询航线时使用的出发时间。默认值为无效日期,即查询时不使用出发时间。</target>
        </trans-unit>
        <trans-unit id="756b2be461294d48f21d5d4ec278903026e19d87" translate="yes" xml:space="preserve">
          <source>The dependencies for the output only get generated from the depends member and from nowhere else.</source>
          <target state="translated">输出的依赖关系只能从依赖成员中产生,而不能从其他地方产生。</target>
        </trans-unit>
        <trans-unit id="f96acdfcf9440b00ce3d51b71c144542fad0a346" translate="yes" xml:space="preserve">
          <source>The deployment procedure for each platform is different and they are covered in greater detail in their platform pages. Meanwhile, there is a deployment article for summarizing the deployment procedure in general.</source>
          <target state="translated">每个平台的部署流程都不一样,在其平台页面会有更详细的介绍。同时,有一篇部署文章对部署程序进行了总体总结。</target>
        </trans-unit>
        <trans-unit id="16166a8138ac11d04479beddcac58a32f1640e20" translate="yes" xml:space="preserve">
          <source>The depth buffer value corresponding to the far clip plane. Valid values for are between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea44d05abbbb2ede69e024c74817ef1369a4a3dd" translate="yes" xml:space="preserve">
          <source>The depth buffer value corresponding to the near clip plane. Valid values for are between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a802ef5fad52db5750f21c25b89e070a6577186e" translate="yes" xml:space="preserve">
          <source>The depth direction. Equivalent to GL_TEXTURE_WRAP_R</source>
          <target state="translated">深度方向。相当于GL_TEXTURE_WRAP_R。</target>
        </trans-unit>
        <trans-unit id="04ea9116520753f36dbe6f63cf620191d15b22e1" translate="yes" xml:space="preserve">
          <source>The depth of nested quoting on this block: 1 means the block is a top-level block quote. Blocks that are not block quotes should not have this property. This enum value has been added in Qt 5.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8928e0840d3a9fb635827e247dfc2a5ecf97c779" translate="yes" xml:space="preserve">
          <source>The depth of the 3D texture defining the volume content in pixels. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">3D纹理的深度，以像素为单位定义体积内容。默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a58e5eaa2e9f2ecd71459bbd531c02ebb7f6308" translate="yes" xml:space="preserve">
          <source>The depth of the tree and the size of the scene rectangle decide the granularity of the scene's partitioning. The size of each scene segment is determined by the following algorithm:</source>
          <target state="translated">树的深度和场景矩形的大小决定了场景分割的粒度。每个场景分割的大小由以下算法决定。</target>
        </trans-unit>
        <trans-unit id="debdb774545fdd045c282d91462fe14afd2ec622" translate="yes" xml:space="preserve">
          <source>The derived classes have additional properties and data members which are needed for certain features such as geo value support in &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; or acceleration mode support in &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;. These features will only work properly when creating a sensor instance from a &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; subclass.</source>
          <target state="translated">派生类具有附加属性和数据所需要的某些特性，如在地理值支撑构件&lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt;或加速模式支持&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;。这些功能仅在从&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt;子类创建传感器实例时才能正常使用。</target>
        </trans-unit>
        <trans-unit id="4138cff9496ae296ce95c9a6e9cd40f21c20adb3" translate="yes" xml:space="preserve">
          <source>The derived classes have additional properties and data members which are needed for certain features such as geo value support in &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; or acceleration mode support in &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;. These features will only work properly when creating a sensor instance from a QSensor subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384472a87d0e746e06f057e5e982086383eb703e" translate="yes" xml:space="preserve">
          <source>The descent is the distance from the base line to the lowest point characters extend to. (Note that this is different from X, which adds 1 pixel.) In practice, some font designers break this rule, e.g. to accommodate an unusual character in an exotic language, so it is possible (though rare) that this value will be too small.</source>
          <target state="translated">后裔是指从基线到字符延伸到的最低点的距离。(注意,这与X不同,X增加了1个像素。)在实践中,一些字体设计者打破了这一规则,例如,为了适应一种外来语言中的特殊字符,所以这个值有可能(虽然很少)会太小。</target>
        </trans-unit>
        <trans-unit id="1573a1ac7dfec57e0f4e203f2d5be0e7814badd4" translate="yes" xml:space="preserve">
          <source>The descent is the distance from the base line to the lowest point characters extend to. In practice, some font designers break this rule, e.g. to accommodate an unusual character in an exotic language, so it is possible (though rare) that this value will be too small.</source>
          <target state="translated">后裔是指从基线到字符延伸到的最低点的距离。在实践中,一些字体设计者打破了这一规则,例如,为了适应外来语言中的特殊字符,因此,这个值有可能(虽然很少)太小。</target>
        </trans-unit>
        <trans-unit id="d600279bda47b2114bf6c99eb0f1aede87bed49f" translate="yes" xml:space="preserve">
          <source>The description is set to</source>
          <target state="translated">描述被设置为</target>
        </trans-unit>
        <trans-unit id="6caad29ace57858f25c7b0a0d6f2e388b944b184" translate="yes" xml:space="preserve">
          <source>The description is used by &lt;a href=&quot;qcommandlineparser#showHelp&quot;&gt;QCommandLineParser::showHelp&lt;/a&gt;().</source>
          <target state="translated">该描述由&lt;a href=&quot;qcommandlineparser#showHelp&quot;&gt;QCommandLineParser :: showHelp&lt;/a&gt;（）使用。</target>
        </trans-unit>
        <trans-unit id="59ffebf05c2e9829a98dfa65283d00fe5684e5b6" translate="yes" xml:space="preserve">
          <source>The description of a table column, typically found in the column's header, has been changed.</source>
          <target state="translated">表列的描述(通常在列头中)已被更改。</target>
        </trans-unit>
        <trans-unit id="4246e6b113df5674c8cbd6cdd20cff5502e314ac" translate="yes" xml:space="preserve">
          <source>The description of a table row, typically found in the row's header, has been changed.</source>
          <target state="translated">表行的描述,通常在行头中,已经被改变。</target>
        </trans-unit>
        <trans-unit id="65f3f64d5ecd4da2411351200a3741974eb142a4" translate="yes" xml:space="preserve">
          <source>The description of the link.</source>
          <target state="translated">链接的描述;</target>
        </trans-unit>
        <trans-unit id="608685f6e972d198d989f34eebab46040a29d0bc" translate="yes" xml:space="preserve">
          <source>The description of triggered gestures</source>
          <target state="translated">触发手势的描述</target>
        </trans-unit>
        <trans-unit id="6714d13a6f27e8f3b7eb4a62c44ab5f035ab350c" translate="yes" xml:space="preserve">
          <source>The description variable holds a short description of the associated project.</source>
          <target state="translated">描述变量拥有相关项目的简短描述。</target>
        </trans-unit>
        <trans-unit id="1f3060c070bf152f95f25fc9c6c83dcd8e3de461" translate="yes" xml:space="preserve">
          <source>The descriptor type is unknown.</source>
          <target state="translated">描述符类型不明。</target>
        </trans-unit>
        <trans-unit id="5b1fa2b591fa22b5c44798e40a7ae3559526dcbb" translate="yes" xml:space="preserve">
          <source>The descriptor value may be written via the &lt;a href=&quot;qlowenergyservice&quot;&gt;QLowEnergyService&lt;/a&gt; instance that manages the service to which this descriptor belongs. The &lt;a href=&quot;qlowenergyservice#writeDescriptor&quot;&gt;QLowEnergyService::writeDescriptor&lt;/a&gt;() function writes the new value. The &lt;a href=&quot;qlowenergyservice#descriptorWritten&quot;&gt;QLowEnergyService::descriptorWritten&lt;/a&gt;() signal is emitted upon success. The cached &lt;a href=&quot;qlowenergydescriptor#value&quot;&gt;value&lt;/a&gt;() of this object is updated accordingly.</source>
          <target state="translated">可以通过管理该描述符所属的服务的&lt;a href=&quot;qlowenergyservice&quot;&gt;QLowEnergyService&lt;/a&gt;实例写入描述符值。该&lt;a href=&quot;qlowenergyservice#writeDescriptor&quot;&gt;QLowEnergyService :: writeDescriptor&lt;/a&gt;（）函数写入新值。所述&lt;a href=&quot;qlowenergyservice#descriptorWritten&quot;&gt;QLowEnergyService :: descriptorWritten&lt;/a&gt;（）信号在成功时被发射。该对象的缓存&lt;a href=&quot;qlowenergydescriptor#value&quot;&gt;值&lt;/a&gt;（）会相应更新。</target>
        </trans-unit>
        <trans-unit id="148e54be6661ba558222f0973a9f18d8d9e4fd6f" translate="yes" xml:space="preserve">
          <source>The design height of the keyboard.</source>
          <target state="translated">键盘的设计高度。</target>
        </trans-unit>
        <trans-unit id="1ecc6782726483f050eff78aa3fd4c10928e9292" translate="yes" xml:space="preserve">
          <source>The design of the XML classes follows the &lt;a href=&quot;http://www.saxproject.org/&quot;&gt;SAX2 Java interface&lt;/a&gt;, with the names adapted to fit Qt naming conventions. It should be very easy for anybody who has worked with SAX2 to get started with the Qt XML classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9665e804365ad06a664142e89ef7c3de71fd5232" translate="yes" xml:space="preserve">
          <source>The design of the XML classes follows the &lt;a href=&quot;http://www.saxproject.org/#&quot;&gt;SAX2 Java interface&lt;/a&gt;, with the names adapted to fit Qt naming conventions. It should be very easy for anybody who has worked with SAX2 to get started with the Qt XML classes.</source>
          <target state="translated">XML类的设计遵循&lt;a href=&quot;http://www.saxproject.org/#&quot;&gt;SAX2 Java接口&lt;/a&gt;，其名称适用于Qt命名约定。对于使用SAX2的任何人来说，开始使用Qt XML类都应该非常容易。</target>
        </trans-unit>
        <trans-unit id="558dc9a3993090461dce7cad74a16c8c95ce4bf8" translate="yes" xml:space="preserve">
          <source>The design size specifies the aspect ratio of the virtual keyboard. Styles are scalable according to &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#scaleHint-prop&quot;&gt;scaleHint&lt;/a&gt;, which is calculated from the keyboard's actual height and design height.</source>
          <target state="translated">设计大小指定虚拟键盘的纵横比。可以根据&lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#scaleHint-prop&quot;&gt;scaleHint&lt;/a&gt;缩放样式，该缩放比例是根据键盘的实际高度和设计高度计算得出的。</target>
        </trans-unit>
        <trans-unit id="274671ea9915ec8dde3f19411141605afbe87194" translate="yes" xml:space="preserve">
          <source>The design width of the keyboard.</source>
          <target state="translated">键盘的设计宽度。</target>
        </trans-unit>
        <trans-unit id="113e87141a41ba5fc981abde58e4ea650c0e0efc" translate="yes" xml:space="preserve">
          <source>The desktop may be composed of multiple screens, so it would be incorrect, for example, to attempt to</source>
          <target state="translated">桌面可能是由多个屏幕组成的,因此,例如,如果试图在桌面上进行</target>
        </trans-unit>
        <trans-unit id="3ede7f41c867b164777a5e97332bfd4bca11a58c" translate="yes" xml:space="preserve">
          <source>The destination color is brightened to reflect the source color. A black source color leaves the destination color unchanged.</source>
          <target state="translated">目的色会变亮以反映源色。黑色的源色会使目标色保持不变。</target>
        </trans-unit>
        <trans-unit id="4c0b010de4e91e33ec3368aa66909947c131e01b" translate="yes" xml:space="preserve">
          <source>The destination color is darkened to reflect the source color. A white source color leaves the destination color unchanged.</source>
          <target state="translated">目的色会变暗以反映源色。白色的源色使目标色保持不变。</target>
        </trans-unit>
        <trans-unit id="97ca789bd477d9b2f70c431f403a7e4d1055f7d8" translate="yes" xml:space="preserve">
          <source>The destination host name is the host in the connection in the case of outgoing connection sockets. It is the &lt;code&gt;hostName&lt;/code&gt; parameter passed to &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;QTcpSocket::connectToHost&lt;/a&gt;() or the host component of a URL requested with &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt;.</source>
          <target state="translated">如果是传出连接套接字，则目标主机名是连接中的主机。它是传递给&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;QTcpSocket :: connectToHost&lt;/a&gt;（）的 &lt;code&gt;hostName&lt;/code&gt; 参数，或者是&lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt;请求的URL的主机组件。</target>
        </trans-unit>
        <trans-unit id="8ea9116c1b88d6f34acd8c8645539a62b23ba75f" translate="yes" xml:space="preserve">
          <source>The destination pixel is blended on top of the source, with the alpha of the destination pixel is reduced by the alpha of the destination pixel. This mode is the inverse of CompositionMode_SourceAtop.</source>
          <target state="translated">在源像素的基础上混合目的像素,目的像素的alpha被目的像素的alpha减少。这个模式是CompositionMode_SourceAtop的反转。</target>
        </trans-unit>
        <trans-unit id="0ecf7e47f8323c877c6ea0636b2a7904c1fcc172" translate="yes" xml:space="preserve">
          <source>The destination port number is the requested port to connect to in the case of outgoing sockets, while the local port number is the port the socket wishes to use locally before attempting the external connection. In most cases, the local port number is used by listening sockets only (&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;) or by datagram sockets (&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;).</source>
          <target state="translated">目的端口号是套接字输出时请求连接的端口，而本地端口号是套接字在尝试进行外部连接之前希望在本地使用的端口。在大多数情况下，仅侦听套接字（&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;）或数据报套接字（&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;）使用本地端口号。</target>
        </trans-unit>
        <trans-unit id="cf5a092dd0e3fd6204823853a66cfd6ce0a56084" translate="yes" xml:space="preserve">
          <source>The destructor clears the key, which forces the shared memory object to &lt;a href=&quot;qsharedmemory#detach&quot;&gt;detach&lt;/a&gt; from its underlying shared memory segment. If this shared memory object is the last one connected to the shared memory segment, the &lt;a href=&quot;qsharedmemory#detach&quot;&gt;detach&lt;/a&gt;() operation destroys the shared memory segment.</source>
          <target state="translated">析构函数清除键，这将迫使共享内存对象与其基础共享内存段&lt;a href=&quot;qsharedmemory#detach&quot;&gt;分离&lt;/a&gt;。如果此共享内存对象是连接到共享内存段的最后一个对象，则&lt;a href=&quot;qsharedmemory#detach&quot;&gt;detach&lt;/a&gt;（）操作将破坏共享内存段。</target>
        </trans-unit>
        <trans-unit id="b95ca23ac425bd2d533d3a906a1e440123b407b2" translate="yes" xml:space="preserve">
          <source>The destructor destroys the &lt;a href=&quot;qsystemsemaphore&quot;&gt;QSystemSemaphore&lt;/a&gt; object, but the underlying system semaphore is not removed from the system unless this instance of &lt;a href=&quot;qsystemsemaphore&quot;&gt;QSystemSemaphore&lt;/a&gt; is the last one existing for that system semaphore.</source>
          <target state="translated">析构函数销毁&lt;a href=&quot;qsystemsemaphore&quot;&gt;QSystemSemaphore&lt;/a&gt;对象，但不会从系统中删除基础系统信号，除非&lt;a href=&quot;qsystemsemaphore&quot;&gt;QSystemSemaphore的&lt;/a&gt;该实例是该系统信号的最后一个实例。</target>
        </trans-unit>
        <trans-unit id="5c04b06da8f131c70052106014ea8eaf937e80a7" translate="yes" xml:space="preserve">
          <source>The destructor is called internally by Qt.</source>
          <target state="translated">Destructor是由Qt内部调用的。</target>
        </trans-unit>
        <trans-unit id="60e805ab7acd0e141e27fb13398b28d7b2675ad2" translate="yes" xml:space="preserve">
          <source>The destructor is virtual, and &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; is an abstract base class. This destructor does not call &lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;(), but the subclass destructor might. If you are in doubt, call &lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;() before destroying the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;.</source>
          <target state="translated">析构函数是虚拟的，而&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;是抽象的基类。该析构函数不调用&lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;（），但是子类析构函数可以。如果您有疑问，请在销毁&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;之前调用&lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5616a61b2bfa5fe9d1cfae183e86f540a5d940a1" translate="yes" xml:space="preserve">
          <source>The destructor of a parent object destroys all child objects.</source>
          <target state="translated">父对象的destructor会销毁所有的子对象。</target>
        </trans-unit>
        <trans-unit id="1cdce5514fd3802501489f8720f74e2631b19d2f" translate="yes" xml:space="preserve">
          <source>The destructor will not affect the current I/O device, unless it is an internal I/O device (e.g. a &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;) processing a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; passed in the</source>
          <target state="translated">析构函数将不会影响当前的I / O装置中，除非它是一个内部I / O设备（例如，&lt;a href=&quot;qbuffer&quot;&gt;Q缓冲器&lt;/a&gt;）处理&lt;a href=&quot;qbytearray&quot;&gt;的QByteArray&lt;/a&gt;在传递</target>
        </trans-unit>
        <trans-unit id="765375387bfb214323cc088a8da3b5b077548c2e" translate="yes" xml:space="preserve">
          <source>The detach() function returns immediately if there is just a single reference or if the pixmap has not been initialized yet.</source>
          <target state="translated">如果只有一个引用或者pixmap还没有被初始化,detach()函数会立即返回。</target>
        </trans-unit>
        <trans-unit id="ea3186ffdb8370568c032041477e5c36c57dd12c" translate="yes" xml:space="preserve">
          <source>The detail consists of a label and value. The label is a localized string that can be presented to the end user that describes that detail value which is the actual phone number, email address and so on.</source>
          <target state="translated">细节由标签和值组成。标签是一个本地化的字符串,可以呈现给最终用户,描述该细节值,也就是实际的电话号码、电子邮件地址等。</target>
        </trans-unit>
        <trans-unit id="bd1f6783dc9751800a5932f963b741379933f5ca" translate="yes" xml:space="preserve">
          <source>The detailed information about the compressed help file can be fetched by calling the &lt;a href=&quot;qcompressedhelpinfo#fromCompressedHelpFile&quot;&gt;fromCompressedHelpFile&lt;/a&gt;() static method, providing the path to the compressed help file.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;qcompressedhelpinfo#fromCompressedHelpFile&quot;&gt;fromCompressedHelpFile&lt;/a&gt;（）静态方法来获取有关压缩帮助文件的详细信息，并提供压缩帮助文件的路径。</target>
        </trans-unit>
        <trans-unit id="f5a37f18139805eb6e65038638e0f542e679ffde" translate="yes" xml:space="preserve">
          <source>The detailed view icon in a file dialog.</source>
          <target state="translated">文件对话框中的详细视图图标。</target>
        </trans-unit>
        <trans-unit id="59af68191ca30c09a419288101bba0e51d91dc67" translate="yes" xml:space="preserve">
          <source>The details of how these properties are interpreted in different situations is covered in the &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;corresponding&lt;/a&gt;&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;相应的&lt;/a&gt;&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt;文档中涵盖了如何在不同情况下解释这些属性的详细信息。</target>
        </trans-unit>
        <trans-unit id="4bfbbef2187efd002fa59d287e7aa0ceba590b8e" translate="yes" xml:space="preserve">
          <source>The details of how these properties are interpreted in different situations is covered in the &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;corresponding&lt;/a&gt;&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777286e162dfaddf19eac980e07ca8b73b37a4db" translate="yes" xml:space="preserve">
          <source>The details of using a &lt;a href=&quot;#camera&quot;&gt;Camera&lt;/a&gt; are described in further depth in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/cameraoverview.html#&quot;&gt;Camera Overview&lt;/a&gt; and in the corresponding reference documentation.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;https://doc.qt.io/qt-5.13/cameraoverview.html#&quot;&gt;摄像机概述&amp;rdquo;&lt;/a&gt;和相应的参考文档中进一步详细介绍了使用&lt;a href=&quot;#camera&quot;&gt;摄像机&lt;/a&gt;的详细信息。</target>
        </trans-unit>
        <trans-unit id="401048274bef9ae6f64a457d0d63ea15452063f8" translate="yes" xml:space="preserve">
          <source>The details of using a &lt;a href=&quot;qml-multimedia#camera&quot;&gt;Camera&lt;/a&gt; are described in further depth in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/cameraoverview.html&quot;&gt;Camera Overview&lt;/a&gt; and in the corresponding reference documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db529a0f93e6ea2b4911257d9863d7e6b280c351" translate="yes" xml:space="preserve">
          <source>The developer only needs to provide implementations for the &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;setFoo()&lt;/code&gt; functions that parse and set the contents of the NDEF record's payload.</source>
          <target state="translated">开发人员仅需要为 &lt;code&gt;foo()&lt;/code&gt; 和 &lt;code&gt;setFoo()&lt;/code&gt; 函数提供实现，这些函数就可以解析和设置NDEF记录的有效内容。</target>
        </trans-unit>
        <trans-unit id="4efefa7eaa7a1ae0558d5b1e9a4f4490398b3ff1" translate="yes" xml:space="preserve">
          <source>The developer tools are accessed as a local web page using a Chromium or Qt WebEngine based browser, such as the Chrome browser.</source>
          <target state="translated">使用基于Chromium或Qt WebEngine的浏览器(如Chrome浏览器),可以将开发者工具作为本地网页访问。</target>
        </trans-unit>
        <trans-unit id="2fa791f91a6e70069d0a3ff767fb1189d1285ab8" translate="yes" xml:space="preserve">
          <source>The device can only be set once and must be set before calling &lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;(), &lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qimageiohandler#write&quot;&gt;write&lt;/a&gt;(), etc. If you need to read multiple files, construct multiple instances of the appropriate &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; subclass.</source>
          <target state="translated">设备只能设置一次，并且必须在调用&lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;（），&lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt;（），&lt;a href=&quot;qimageiohandler#write&quot;&gt;write&lt;/a&gt;（）等之前进行设置。如果需要读取多个文件，请构造适当的&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt;子类的多个实例。</target>
        </trans-unit>
        <trans-unit id="1ce7b22d03060bee5da2a9bc49b8a05127d4c4cc" translate="yes" xml:space="preserve">
          <source>The device does not provide any services.</source>
          <target state="translated">该设备不提供任何服务。</target>
        </trans-unit>
        <trans-unit id="b56e7c078d28b8af659c0d7e311e665ec84cf705" translate="yes" xml:space="preserve">
          <source>The device is a Bluetooth Low Energy device.</source>
          <target state="translated">该设备是一款蓝牙低能设备。</target>
        </trans-unit>
        <trans-unit id="3b68449f3125d03235185887159e78297f6958f0" translate="yes" xml:space="preserve">
          <source>The device is a Bluetooth Smart device with support for standard and Low Energy device.</source>
          <target state="translated">该设备是一款蓝牙智能设备,支持标准设备和低能耗设备。</target>
        </trans-unit>
        <trans-unit id="eb0449a2a3021d3ab7ae21ff0a498a167c6c0c15" translate="yes" xml:space="preserve">
          <source>The device is a standard Bluetooth device.</source>
          <target state="translated">该设备是一个标准的蓝牙设备。</target>
        </trans-unit>
        <trans-unit id="67163a666a844852bef0d3052088b40fc3c1d889" translate="yes" xml:space="preserve">
          <source>The device is being closed.</source>
          <target state="translated">设备正在关闭。</target>
        </trans-unit>
        <trans-unit id="47020bf05dd14213b748d496ed9e3de755323367" translate="yes" xml:space="preserve">
          <source>The device is being connected.</source>
          <target state="translated">设备正在连接。</target>
        </trans-unit>
        <trans-unit id="d71d896ecda8af7a3210f4f49ab557fecf9ec35d" translate="yes" xml:space="preserve">
          <source>The device is connected to the CAN bus.</source>
          <target state="translated">该设备连接到CAN总线。</target>
        </trans-unit>
        <trans-unit id="c952c853c5ed66737d7eedfee009b5832a5fafc6" translate="yes" xml:space="preserve">
          <source>The device is connected to the Modbus network.</source>
          <target state="translated">设备连接到Modbus网络。</target>
        </trans-unit>
        <trans-unit id="5fcd0c78c2af86ffb1f6f02729d814967c523f52" translate="yes" xml:space="preserve">
          <source>The device is disconnected.</source>
          <target state="translated">该设备已被断开。</target>
        </trans-unit>
        <trans-unit id="333d13ab619a6d3fb15adb042395a1e2ff3e81b6" translate="yes" xml:space="preserve">
          <source>The device is not open.</source>
          <target state="translated">设备没有打开。</target>
        </trans-unit>
        <trans-unit id="e0e166bc1fdb014783a61c162039b90a19e492de" translate="yes" xml:space="preserve">
          <source>The device is open for reading and writing.</source>
          <target state="translated">设备是开放的,可以进行阅读和写作。</target>
        </trans-unit>
        <trans-unit id="ca514481b0e94fb348bc800689ed7f01bf2278c9" translate="yes" xml:space="preserve">
          <source>The device is open for reading.</source>
          <target state="translated">该设备是开放阅读的。</target>
        </trans-unit>
        <trans-unit id="490e5a66bb7783891b146c854481fdcc4a225019" translate="yes" xml:space="preserve">
          <source>The device is open for writing. Note that, for file-system subclasses (e.g. &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;), this mode implies Truncate unless combined with ReadOnly, Append or NewOnly.</source>
          <target state="translated">该设备可进行写入操作。请注意，对于文件系统子类（例如&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;），除非与ReadOnly，Append或NewOnly结合使用，否则此模式暗含Truncate。</target>
        </trans-unit>
        <trans-unit id="5dda77478b1d28083ad0f11672e6824194068799" translate="yes" xml:space="preserve">
          <source>The device is opened in append mode so that all data is written to the end of the file.</source>
          <target state="translated">设备是以追加模式打开的,这样所有的数据都会写入文件的最后。</target>
        </trans-unit>
        <trans-unit id="b601454e8d48868b92a840a86f602919aaaddfad" translate="yes" xml:space="preserve">
          <source>The device pixel ratio for device. Common values are 1 for normal-dpi displays and 2 for high-dpi &quot;retina&quot; displays.</source>
          <target state="translated">设备的设备像素比。对于正常dpi显示器来说,常用值是1,对于高dpi &quot;视网膜 &quot;显示器来说,常用值是2。</target>
        </trans-unit>
        <trans-unit id="5bdd4161de9f969cd1142a17a134e8b299d26bed" translate="yes" xml:space="preserve">
          <source>The device pixel ratio of the screen the item is on has changed. ItemChangedData::realValue contains the new device pixel ratio.</source>
          <target state="translated">项目所在屏幕的设备像素比发生了变化。ItemChangedData::realValue包含新的设备像素比。</target>
        </trans-unit>
        <trans-unit id="059d3f9fa32a441955a561a0ff4c768f7ec0cceb" translate="yes" xml:space="preserve">
          <source>The device provides audio services.</source>
          <target state="translated">该设备提供音频服务。</target>
        </trans-unit>
        <trans-unit id="a4ab7f2988cc1ef473ba412184a42c9594964171" translate="yes" xml:space="preserve">
          <source>The device provides capturing services.</source>
          <target state="translated">该设备提供采集服务。</target>
        </trans-unit>
        <trans-unit id="e53f0309543c7effc8165394d00f2fc2d74f8662" translate="yes" xml:space="preserve">
          <source>The device provides information services.</source>
          <target state="translated">该设备提供信息服务。</target>
        </trans-unit>
        <trans-unit id="c40b34d07abff4a5b6cde9a436932155a3e84587" translate="yes" xml:space="preserve">
          <source>The device provides networking services.</source>
          <target state="translated">该设备提供网络服务。</target>
        </trans-unit>
        <trans-unit id="ae371fed8c1e86790855d6b65a3b875d8cc9051f" translate="yes" xml:space="preserve">
          <source>The device provides object transfer services.</source>
          <target state="translated">该设备提供对象传输服务。</target>
        </trans-unit>
        <trans-unit id="2dbb3052af6aa2d59650bb2bc1d8361e60e1a91b" translate="yes" xml:space="preserve">
          <source>The device provides positioning services.</source>
          <target state="translated">该设备提供定位服务。</target>
        </trans-unit>
        <trans-unit id="f711e474689e5bf178bde6566c83870e102711bd" translate="yes" xml:space="preserve">
          <source>The device provides rendering services.</source>
          <target state="translated">该设备提供渲染服务。</target>
        </trans-unit>
        <trans-unit id="86ce6ec2df863e9b13f8ad4a9f4046ef03b83c03" translate="yes" xml:space="preserve">
          <source>The device provides services of all types.</source>
          <target state="translated">该设备提供各种类型的服务。</target>
        </trans-unit>
        <trans-unit id="76985c4b507d73e9b13b1edcc4a7882882594723" translate="yes" xml:space="preserve">
          <source>The device provides telephony services.</source>
          <target state="translated">该设备提供电话服务。</target>
        </trans-unit>
        <trans-unit id="36a52e413d9e95bc015987edfa0e0a77827792ab" translate="yes" xml:space="preserve">
          <source>The device should remain available at least as long as the job exists. When calling this method with a newly constructed device, one solution is to make the device as a child of the job or delete itself when job is deleted, like this:</source>
          <target state="translated">至少在作业存在期间,该设备应该保持可用。当使用新构建的设备调用该方法时,一种解决方案是将设备作为作业的子设备,或者在删除作业时删除它自己,就像这样。</target>
        </trans-unit>
        <trans-unit id="a3c25dbb7fb35511b3f850e449af89012894f2d5" translate="yes" xml:space="preserve">
          <source>The device's name and address.</source>
          <target state="translated">设备的名称和地址。</target>
        </trans-unit>
        <trans-unit id="005a6338bea6298db00804f1c28f81899edc251b" translate="yes" xml:space="preserve">
          <source>The diagnostic register of the server. &lt;code&gt;quint16&lt;/code&gt;</source>
          <target state="translated">服务器的诊断寄存器。 &lt;code&gt;quint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f62073d762dd1e7cad124ca505380b6496f58bc7" translate="yes" xml:space="preserve">
          <source>The diagram above shows a &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; widget being used to hold various child widgets in a layout provided by &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;. The &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; child widgets have been outlined to indicate their full sizes.</source>
          <target state="translated">上图显示了&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;小部件，该部件用于在&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;提供的布局中保存各种子小部件。该&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;子控件的草案已经完成，以表明自己的全尺寸。</target>
        </trans-unit>
        <trans-unit id="52be731891a7b73428f98fd83262f73bed48c4c7" translate="yes" xml:space="preserve">
          <source>The diagram below illustrates the effect of calling &lt;a href=&quot;qlistiterator#next&quot;&gt;next()&lt;/a&gt; and &lt;a href=&quot;qlistiterator#previous&quot;&gt;previous()&lt;/a&gt; on an iterator:</source>
          <target state="translated">下图说明了在迭代器上调用&lt;a href=&quot;qlistiterator#next&quot;&gt;next（）&lt;/a&gt;和&lt;a href=&quot;qlistiterator#previous&quot;&gt;previous（）&lt;/a&gt;的效果：</target>
        </trans-unit>
        <trans-unit id="6b847aadd51f07c9bcba2bf2e21f2f214d7bd883" translate="yes" xml:space="preserve">
          <source>The diagram below shows the valid iterator positions as red arrows for a vector containing four items:</source>
          <target state="translated">下图显示了包含四个项目的向量的有效迭代器位置为红色箭头。</target>
        </trans-unit>
        <trans-unit id="662b0bb7e9405f9912a8eebeb96d286518d541d9" translate="yes" xml:space="preserve">
          <source>The diagram belows shows how &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; renders these attributes, assuming they are all present and &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt; is used:</source>
          <target state="translated">下图显示了&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;如何呈现这些属性，假设它们都存在并且使用了&lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="542785aae204de56ce61a5c6f41fcb89c330e455" translate="yes" xml:space="preserve">
          <source>The diagram belows shows how QWizard renders these attributes, assuming they are all present and &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt; is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6981b97dc7798ff258297e7b376c674719130c5" translate="yes" xml:space="preserve">
          <source>The diagram shows a representation of a basic table model in which each item is located by a pair of row and column numbers. We obtain a model index that refers to an item of data by passing the relevant row and column numbers to the model.</source>
          <target state="translated">该图显示了一个基本表模型的表示,其中每个项目由一对行号和列号定位。我们通过将相关的行号和列号传递给模型,得到一个模型索引,该索引指向某项数据。</target>
        </trans-unit>
        <trans-unit id="ecfe844955dc2e50a462917daa1a4a9fe76a8de4" translate="yes" xml:space="preserve">
          <source>The diagram shows a representation of a tree model in which each item is referred to by a parent, a row number, and a column number.</source>
          <target state="translated">该图显示了一个树形模型的表示,其中每个项目由一个父号、一个行号和一个列号来表示。</target>
        </trans-unit>
        <trans-unit id="d3a5cf26fa5e9eec9a099ac5034cd0004cd9359d" translate="yes" xml:space="preserve">
          <source>The dial also emits &lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed&lt;/a&gt;() and &lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased&lt;/a&gt;() signals when the mouse button is pressed and released. Note that the dial's value can change without these signals being emitted since the keyboard and wheel can also be used to change the value.</source>
          <target state="translated">当按下和释放鼠标按钮时，转盘还会发出&lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed&lt;/a&gt;（）和&lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased&lt;/a&gt;（）信号。请注意，由于键盘和滚轮也可用于更改值，因此可以在不发出这些信号的情况下更改转盘的值。</target>
        </trans-unit>
        <trans-unit id="94e4813a26f89c144c8e46f68b363ccbd8e040b9" translate="yes" xml:space="preserve">
          <source>The dial can be manipulated with a keyboard. It supports the following actions:</source>
          <target state="translated">转盘可以用键盘进行操作。它支持以下操作:</target>
        </trans-unit>
        <trans-unit id="2e6da7ca47f85803533f77b7624c88e284ca1556" translate="yes" xml:space="preserve">
          <source>The dial does not snap (default).</source>
          <target state="translated">刻度盘不扣动(默认)。</target>
        </trans-unit>
        <trans-unit id="b78982983c52043ed6d5e92363d12bf9110a2eb1" translate="yes" xml:space="preserve">
          <source>The dial does not snap while being dragged, but only after the handle is released.</source>
          <target state="translated">在被拖动的过程中,表盘不会弹出,只有在松开手柄后才会弹出。</target>
        </trans-unit>
        <trans-unit id="b07378e985938b29442ceee5b691d812c129978b" translate="yes" xml:space="preserve">
          <source>The dial initially emits &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signals continuously while the slider is being moved; you can make it emit the signal less often by disabling the &lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;tracking&lt;/a&gt; property. The &lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved&lt;/a&gt;() signal is emitted continuously even when tracking is disabled.</source>
          <target state="translated">拨盘最初在移动滑块时连续发出&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）信号；您可以通过禁用&lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;跟踪&lt;/a&gt;属性，使其发出信号的频率降低。即使禁用跟踪，&lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved&lt;/a&gt;（）信号也会连续发出。</target>
        </trans-unit>
        <trans-unit id="653da53e65ef065265953be92356910edf27ab55" translate="yes" xml:space="preserve">
          <source>The dial is rotated by clicking and dragging, with the handle indicating the value of the dial.</source>
          <target state="translated">通过点击和拖动来旋转转盘,手柄显示转盘的数值。</target>
        </trans-unit>
        <trans-unit id="7ddda2cb7619688b7252e7b809a2522e9de38e60" translate="yes" xml:space="preserve">
          <source>The dial snaps while the handle is dragged.</source>
          <target state="translated">在拖动手柄的同时,表盘也会卡住。</target>
        </trans-unit>
        <trans-unit id="4f171c08bcc122aa167794646dfc1060cb501fa6" translate="yes" xml:space="preserve">
          <source>The dial will be pressed when either the mouse is pressed over it, or a key such as &lt;code&gt;Qt.Key_Left&lt;/code&gt; is held down. If you'd prefer not to have the dial be pressed upon key presses (due to styling reasons, for example), you can use the &lt;a href=&quot;qml-qtquick-keys&quot;&gt;Keys attached property&lt;/a&gt;:</source>
          <target state="translated">当在其上按下鼠标或 &lt;code&gt;Qt.Key_Left&lt;/code&gt; 的键时，将按下该拨盘。如果您不想在按键时按下转盘（例如，由于样式原因），则可以使用&amp;ldquo; &lt;a href=&quot;qml-qtquick-keys&quot;&gt;按键附加&amp;rdquo;属性&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3402f195a3b5a8eeccdd739e500b37b4e97bf2fe" translate="yes" xml:space="preserve">
          <source>The dial's keyboard interface is fairly simple: The &lt;b&gt;left&lt;/b&gt;/&lt;b&gt;up&lt;/b&gt; and &lt;b&gt;right&lt;/b&gt;/&lt;b&gt;down&lt;/b&gt; arrow keys adjust the dial's &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;value&lt;/a&gt; by the defined &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt;, &lt;b&gt;Page Up&lt;/b&gt; and &lt;b&gt;Page Down&lt;/b&gt; by the defined &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;, and the &lt;b&gt;Home&lt;/b&gt; and &lt;b&gt;End&lt;/b&gt; keys set the value to the defined &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;minimum&lt;/a&gt; and &lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;maximum&lt;/a&gt; values.</source>
          <target state="translated">拨号的键盘界面相当简单：&lt;b&gt;向左&lt;/b&gt; / &lt;b&gt;向上&lt;/b&gt;和&lt;b&gt;向右&lt;/b&gt; / &lt;b&gt;下&lt;/b&gt;箭头键调整拨盘的&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;值&lt;/a&gt;由定义的&lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;单步&lt;/a&gt;，&lt;b&gt;Page Up键&lt;/b&gt;和&lt;b&gt;Page Down键&lt;/b&gt;被定义&lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;，以及&lt;b&gt;家庭&lt;/b&gt;和&lt;b&gt;结束&lt;/b&gt;键的值设置为定义的&lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;最小&lt;/a&gt;和&lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;最大值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64366c1eed5aa772b60844c216d54a85c43f10fc" translate="yes" xml:space="preserve">
          <source>The dialog allows users to change document-related settings, such as the paper size and orientation, type of print (color or grayscale), range of pages, and number of copies to print.</source>
          <target state="translated">该对话框允许用户更改与文档相关的设置,如纸张大小和方向、打印类型(彩色或灰度)、页数范围和打印份数。</target>
        </trans-unit>
        <trans-unit id="5afe7122d10e82a9aef33ccfcfc6d7d0e6774e29" translate="yes" xml:space="preserve">
          <source>The dialog automatically resets and hides itself at the end of the operation. Use &lt;a href=&quot;qprogressdialog#autoReset-prop&quot;&gt;setAutoReset&lt;/a&gt;() and &lt;a href=&quot;qprogressdialog#autoClose-prop&quot;&gt;setAutoClose&lt;/a&gt;() to change this behavior. Note that if you set a new maximum (using &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() or &lt;a href=&quot;qprogressdialog#setRange&quot;&gt;setRange&lt;/a&gt;()) that equals your current &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;value&lt;/a&gt;(), the dialog will not close regardless.</source>
          <target state="translated">该对话框会在操作结束时自动重置并隐藏。使用&lt;a href=&quot;qprogressdialog#autoReset-prop&quot;&gt;setAutoReset&lt;/a&gt;（）和&lt;a href=&quot;qprogressdialog#autoClose-prop&quot;&gt;setAutoClose&lt;/a&gt;（）可以更改此行为。请注意，如果您设置了一个新的最大值（使用&lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;（）或&lt;a href=&quot;qprogressdialog#setRange&quot;&gt;setRange&lt;/a&gt;（）），该&lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;最大值&lt;/a&gt;等于当前值（），则无论如何该对话框都不会关闭。</target>
        </trans-unit>
        <trans-unit id="7426767f07340e7c4962ba845bd2e38372d4b1a7" translate="yes" xml:space="preserve">
          <source>The dialog can also be used to set a widget's font directly:</source>
          <target state="translated">对话框也可用于直接设置小组件的字体。</target>
        </trans-unit>
        <trans-unit id="46adaccd8c14a49dcca47c4460b5db000e12bb88" translate="yes" xml:space="preserve">
          <source>The dialog has no buttons.</source>
          <target state="translated">该对话框没有按钮。</target>
        </trans-unit>
        <trans-unit id="6ab62711151d61fbba4ef37f3494e8f50c0a6d0d" translate="yes" xml:space="preserve">
          <source>The dialog is constructed with the given</source>
          <target state="translated">对话框是由给定的</target>
        </trans-unit>
        <trans-unit id="8783a54964ebe2365f2afc835ceb2d088248aff3" translate="yes" xml:space="preserve">
          <source>The dialog is modal to a single window hierarchy and blocks input to its parent window, all grandparent windows, and all siblings of its parent and grandparent windows.</source>
          <target state="translated">对话框对单个窗口层次结构是模态的,并阻止输入到它的父窗口,所有的祖父母窗口,以及它的父窗口和祖父母窗口的所有兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="97afd12d5e5afa26024f0d0cd56d6cc0d3e857e7" translate="yes" xml:space="preserve">
          <source>The dialog is modal to the application and blocks input to all windows.</source>
          <target state="translated">对话框对应用程序来说是模态的,并阻止所有窗口的输入。</target>
        </trans-unit>
        <trans-unit id="ab9ca924cf657d86466031391dc89630d2ca99dc" translate="yes" xml:space="preserve">
          <source>The dialog is not modal and does not block input to other windows.</source>
          <target state="translated">对话框不是模态的,也不会阻止其他窗口的输入。</target>
        </trans-unit>
        <trans-unit id="1d95f26415c000030b229071081d1f04eb135037" translate="yes" xml:space="preserve">
          <source>The dialog is used to select an existing file (default).</source>
          <target state="translated">该对话框用于选择现有文件(默认)。</target>
        </trans-unit>
        <trans-unit id="e62e9e39ca3d568becbc579532e9720a00b0b00f" translate="yes" xml:space="preserve">
          <source>The dialog is used to select any file. The file does not have to exist.</source>
          <target state="translated">该对话框用于选择任何文件。该文件不一定要存在。</target>
        </trans-unit>
        <trans-unit id="92736eb5378c2470014f6678ba36aee10c3ffa65" translate="yes" xml:space="preserve">
          <source>The dialog is used to select multiple existing files.</source>
          <target state="translated">该对话框用于选择多个现有文件。</target>
        </trans-unit>
        <trans-unit id="ed2c92acc001a838f1e5c885f8b20c20cb65f0c6" translate="yes" xml:space="preserve">
          <source>The dialog was accepted.</source>
          <target state="translated">该对话被接受。</target>
        </trans-unit>
        <trans-unit id="5abec19efaf2605a2761173d140084db056d5512" translate="yes" xml:space="preserve">
          <source>The dialog was rejected.</source>
          <target state="translated">该对话框被拒绝。</target>
        </trans-unit>
        <trans-unit id="1cc37011c99dab40551a4e73cf6a36b080d07275" translate="yes" xml:space="preserve">
          <source>The dialog would then be declared:</source>
          <target state="translated">然后,将声明该对话框。</target>
        </trans-unit>
        <trans-unit id="701a6e701e7b56acf8f81d85352ca263d2f76666" translate="yes" xml:space="preserve">
          <source>The dialog's caption is set to</source>
          <target state="translated">对话框的标题被设置为</target>
        </trans-unit>
        <trans-unit id="c02b98c9d4be54f9cb712dba532939b8d50f4e64" translate="yes" xml:space="preserve">
          <source>The dialog's working directory can be set with &lt;a href=&quot;qfiledialog#setDirectory&quot;&gt;setDirectory&lt;/a&gt;(). Each file in the current directory can be selected using the &lt;a href=&quot;qfiledialog#selectFile&quot;&gt;selectFile&lt;/a&gt;() function.</source>
          <target state="translated">可以使用&lt;a href=&quot;qfiledialog#setDirectory&quot;&gt;setDirectory&lt;/a&gt;（）设置对话框的工作目录。可以使用&lt;a href=&quot;qfiledialog#selectFile&quot;&gt;selectFile&lt;/a&gt;（）函数选择当前目录中的每个文件。</target>
        </trans-unit>
        <trans-unit id="332d75a64739d3716edebcb392c070618196f8ed" translate="yes" xml:space="preserve">
          <source>The dialog's working directory is set to</source>
          <target state="translated">对话框的工作目录设置为</target>
        </trans-unit>
        <trans-unit id="f681ef1c47a21e7a3bc6c708e6e6ab97a786f839" translate="yes" xml:space="preserve">
          <source>The diameter of the rounding circle at the corners of the chart background.</source>
          <target state="translated">图表背景四角的圆圈直径。</target>
        </trans-unit>
        <trans-unit id="e9de9d613aa364e0a09e8dced8ebaffa970a35a0" translate="yes" xml:space="preserve">
          <source>The difference becomes significant when using &lt;code&gt;PartialUpdateBlend&lt;/code&gt;, where an extra framebuffer object is used. There, &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() targets this additional framebuffer object, which preserves its contents, while paintUnderGL() and &lt;a href=&quot;qopenglwindow#paintOverGL&quot;&gt;paintOverGL&lt;/a&gt;() target the default framebuffer, i.e. directly the window surface, the contents of which is lost after each displayed frame.</source>
          <target state="translated">使用 &lt;code&gt;PartialUpdateBlend&lt;/code&gt; 时，区别变得很明显，其中使用了额外的帧缓冲对象。在这里，&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）指向此保留其内容的附加帧缓冲区对象，而paintUnderGL（）和&lt;a href=&quot;qopenglwindow#paintOverGL&quot;&gt;paintOverGL&lt;/a&gt;（）则指向默认帧缓冲区，即直接针对窗口表面，其内容在每个显示的帧之后丢失。</target>
        </trans-unit>
        <trans-unit id="5f6bfe486bcd9bb7ce9df46a8b88280038dfc08d" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() is as follows. When the user clicks a toggle button to check it, the button is first</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;（）和&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（）之间的区别如下。当用户单击切换按钮进行检查时，该按钮是第一个</target>
        </trans-unit>
        <trans-unit id="ce9eee9e887cf7bdbcbbeb09db3857336f1ccf99" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;qml-qtquick-window-window#activeFocusItem-prop&quot;&gt;Window::activeFocusItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#activeFocusControl-attached-prop&quot;&gt;ApplicationWindow::activeFocusControl&lt;/a&gt; is that the former may point to a building block of a control, whereas the latter points to the enclosing control. For example, when &lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt; has focus, activeFocusItem points to the editor and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#activeFocusControl-attached-prop&quot;&gt;activeFocusControl&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt; itself.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-window-window#activeFocusItem-prop&quot;&gt;Window :: activeFocusItem&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#activeFocusControl-attached-prop&quot;&gt;ApplicationWindow :: activeFocusControl&lt;/a&gt;之间的区别在于，前者可能指向控件的构造块，而后者则指向封闭的控件。例如，当&lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt;具有焦点时，activeFocusItem指向编辑器，&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#activeFocusControl-attached-prop&quot;&gt;activeFocusControl&lt;/a&gt;指向&lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt;本身。</target>
        </trans-unit>
        <trans-unit id="32b2fdb0416e933b16833a4914201f979d6e7d53" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;qml-qtquick-window-window#activeFocusItem-prop&quot;&gt;Window::activeFocusItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#activeFocusControl-attached-prop&quot;&gt;ApplicationWindow::activeFocusControl&lt;/a&gt; is that the former may point to a building block of a control, whereas the latter points to the enclosing control. For example, when &lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt; has focus, activeFocusItem points to the editor and activeFocusControl to the &lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8864435ceba658d626bc9259426055ddb2014e11" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;QObject::setProperty()&lt;/code&gt; and &lt;code&gt;QQmlProperty::write()&lt;/code&gt; is that the latter will also remove the binding in addition to setting the property value. For example, suppose the &lt;code&gt;width&lt;/code&gt; assignment above had been a binding to &lt;code&gt;height&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;QObject::setProperty()&lt;/code&gt; 和 &lt;code&gt;QQmlProperty::write()&lt;/code&gt; 之间的区别在于，后者除了设置属性值外还将删除绑定。例如，假设上面的 &lt;code&gt;width&lt;/code&gt; 分配是对 &lt;code&gt;height&lt;/code&gt; 的绑定：</target>
        </trans-unit>
        <trans-unit id="be54b73532ee07920449fbd28b0deafb440e1a22" translate="yes" xml:space="preserve">
          <source>The difference between UTC and the local time in a time zone is expressed as an offset in seconds from UTC, i.e. the number of seconds to add to UTC to obtain the local time. The total offset is comprised of two component parts, the standard time offset and the daylight-saving time offset. The standard time offset is the number of seconds to add to UTC to obtain standard time in the time zone. The daylight-saving time offset is the number of seconds to add to the standard time offset to obtain daylight-saving time (abbreviated DST and sometimes called &quot;daylight time&quot; or &quot;summer time&quot;) in the time zone.</source>
          <target state="translated">在一个时区,世界协调时和当地时间之间的差异用世界协调时的秒数来表示,即在世界协调时的基础上增加几秒才能得到当地时间。总偏移量由两部分组成,即标准时间偏移量和夏令时偏移量。标准时间偏移是指为获得该时区的标准时间而在UTC基础上增加的秒数。夏令时偏移量是在标准时间偏移量的基础上增加几秒,以获得该时区的夏令时(缩写为DST,有时也称为 &quot;日光时 &quot;或 &quot;夏令时&quot;)。</target>
        </trans-unit>
        <trans-unit id="4feb47a5c283faf65facebb89bc49a948407aeab" translate="yes" xml:space="preserve">
          <source>The difference between the scene and view rendering functions is that one operates in scene coordinates, and the other in view coordinates. &lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene::render&lt;/a&gt;() is often preferred for printing whole segments of a scene untransformed, such as for plotting geometrical data, or for printing a text document. &lt;a href=&quot;qgraphicsview#render&quot;&gt;QGraphicsView::render&lt;/a&gt;(), on the other hand, is suitable for taking screenshots; its default behavior is to render the exact contents of the viewport using the provided painter.</source>
          <target state="translated">场景和视图渲染功能之间的区别在于，一个在场景坐标中运行，另一个在视图坐标中运行。&lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene :: render&lt;/a&gt;（）通常是打印未变换的场景的整个片段（例如，绘制几何数据或打印文本文档）的首选。另一方面，&lt;a href=&quot;qgraphicsview#render&quot;&gt;QGraphicsView :: render&lt;/a&gt;（）适合截图。它的默认行为是使用提供的painter渲染视口的确切内容。</target>
        </trans-unit>
        <trans-unit id="1561f0294a2aadd581e5904378f7b1713abf3013" translate="yes" xml:space="preserve">
          <source>The difference between the window and the content orientation determines how much to rotate the content by.</source>
          <target state="translated">窗口和内容方向之间的差异决定了内容旋转的幅度。</target>
        </trans-unit>
        <trans-unit id="b605cbdc99144028ae4a71f5d033d568b8c3a99a" translate="yes" xml:space="preserve">
          <source>The difference between the window and the content orientation determines how much to rotate the content by. &lt;a href=&quot;qscreen#angleBetween&quot;&gt;QScreen::angleBetween&lt;/a&gt;(), &lt;a href=&quot;qscreen#transformBetween&quot;&gt;QScreen::transformBetween&lt;/a&gt;(), and &lt;a href=&quot;qscreen#mapBetween&quot;&gt;QScreen::mapBetween&lt;/a&gt;() can be used to compute the necessary transform.</source>
          <target state="translated">窗口和内容方向之间的差异决定了旋转内容的程度。&lt;a href=&quot;qscreen#angleBetween&quot;&gt;QScreen :: angleBetween&lt;/a&gt;（），QScreen &lt;a href=&quot;qscreen#transformBetween&quot;&gt;:: transformBetween&lt;/a&gt;（）和&lt;a href=&quot;qscreen#mapBetween&quot;&gt;QScreen :: mapBetween&lt;/a&gt;（）可用于计算必要的变换。</target>
        </trans-unit>
        <trans-unit id="c5ee5d3d4b0dc4bbcfa2cf02f4b7d4ced9959c36" translate="yes" xml:space="preserve">
          <source>The difference from a disabled text field is that it will appear to be active, and text can be selected and copied.</source>
          <target state="translated">与禁用文本字段的区别是,它将看起来是活动的,并且可以选择和复制文本。</target>
        </trans-unit>
        <trans-unit id="3df93dfe5572cd907e7454b7aaa2a862f033b03d" translate="yes" xml:space="preserve">
          <source>The different comments may reside in different files and QDoc will collect them depending on their topic and their context. The resulting documentation from the snippets are generated into the &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; class documentation.</source>
          <target state="translated">不同的注释可能驻留在不同的文件中，并且QDoc将根据其主题和上下文来收集它们。片段产生的文档会生成到&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;类文档中。</target>
        </trans-unit>
        <trans-unit id="47c17848c4e2453e7b4054432488ef7709606357" translate="yes" xml:space="preserve">
          <source>The different defined versions of the WebSocket protocol.</source>
          <target state="translated">WebSocket协议的不同定义版本。</target>
        </trans-unit>
        <trans-unit id="9bd52618718cbb0ca0874946891ec7b57bb73258" translate="yes" xml:space="preserve">
          <source>The diffuse texture map. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/concentric_milled_steel.png&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b65a0cf8d4367a64f6846463412774f2a4a31c" translate="yes" xml:space="preserve">
          <source>The diffuse texture map. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/paper_diffuse.png&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb77dd472e080f86f433b256cd49a9dbe1967f7e" translate="yes" xml:space="preserve">
          <source>The dimensions of a model can be found using &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount()&lt;/a&gt;. These functions generally require a parent model index to be specified.</source>
          <target state="translated">可以使用&lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount（）&lt;/a&gt;和&lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount（）&lt;/a&gt;找到模型的尺寸。这些功能通常需要指定父模型索引。</target>
        </trans-unit>
        <trans-unit id="7c469ce3b361e8b6160ee86ae79cd573f57f945d" translate="yes" xml:space="preserve">
          <source>The dimensions of an image or video.</source>
          <target state="translated">图像或视频的尺寸。</target>
        </trans-unit>
        <trans-unit id="025fe2e42113b7980b27cbe897739b631e3026a5" translate="yes" xml:space="preserve">
          <source>The dimensions of the child table can be set with &lt;a href=&quot;qstandarditem#setRowCount&quot;&gt;setRowCount&lt;/a&gt;() and &lt;a href=&quot;qstandarditem#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;(). Items can be positioned in the child table with &lt;a href=&quot;qstandarditem#setChild&quot;&gt;setChild&lt;/a&gt;(). Get a pointer to a child item with &lt;a href=&quot;qstandarditem#child&quot;&gt;child&lt;/a&gt;(). New rows and columns of children can also be inserted with &lt;a href=&quot;qstandarditem#insertRow&quot;&gt;insertRow&lt;/a&gt;() and &lt;a href=&quot;qstandarditem#insertColumn&quot;&gt;insertColumn&lt;/a&gt;(), or appended with &lt;a href=&quot;qstandarditem#appendRow&quot;&gt;appendRow&lt;/a&gt;() and &lt;a href=&quot;qstandarditem#appendColumn&quot;&gt;appendColumn&lt;/a&gt;(). When using the append and insert functions, the dimensions of the child table will grow as needed.</source>
          <target state="translated">可以使用&lt;a href=&quot;qstandarditem#setRowCount&quot;&gt;setRowCount&lt;/a&gt;（）和&lt;a href=&quot;qstandarditem#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;（）设置子表的尺寸。可以使用&lt;a href=&quot;qstandarditem#setChild&quot;&gt;setChild&lt;/a&gt;（）在子表中定位项目。获取带有&lt;a href=&quot;qstandarditem#child&quot;&gt;child&lt;/a&gt;（）的子项的指针。也可以使用&lt;a href=&quot;qstandarditem#insertRow&quot;&gt;insertRow&lt;/a&gt;（）和&lt;a href=&quot;qstandarditem#insertColumn&quot;&gt;insertColumn&lt;/a&gt;（）插入子级的新行和子列，也可以使用&lt;a href=&quot;qstandarditem#appendRow&quot;&gt;appendRow&lt;/a&gt;（）和&lt;a href=&quot;qstandarditem#appendColumn&quot;&gt;appendColumn&lt;/a&gt;（）附加子级。使用append和insert函数时，子表的尺寸将根据需要增加。</target>
        </trans-unit>
        <trans-unit id="15d729667cafcb586312888d7997755b6ac30827" translate="yes" xml:space="preserve">
          <source>The dimensions of the content (the surface controlled by Flickable). This should typically be set to the combined size of the items placed in the Flickable.</source>
          <target state="translated">内容的尺寸(Flickable控制的表面)。通常应该设置为放置在Flickable中的项目的组合尺寸。</target>
        </trans-unit>
        <trans-unit id="539abd2b4a9d4113adf7c507f8d891f717f79303" translate="yes" xml:space="preserve">
          <source>The direct approach provides a quick and easy way to use simple, self-contained components in your applications. However, componens created with</source>
          <target state="translated">直接的方法提供了一种在应用程序中使用简单、自足的组件的快速和简单的方法。然而,使用</target>
        </trans-unit>
        <trans-unit id="c7e734c81404cd5942f326a3c7bc3a81dd211bb2" translate="yes" xml:space="preserve">
          <source>The direction in which to scatter the pixels. Set to &lt;code&gt;0&lt;/code&gt; for both horizontal and vertical, &lt;code&gt;1&lt;/code&gt; for horizontal, and &lt;code&gt;2&lt;/code&gt; for vertical. &lt;code&gt;0&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0822990a6d83958108a507097726c2d0209b0a6e" translate="yes" xml:space="preserve">
          <source>The direction of layouts changed.</source>
          <target state="translated">屿岥的方向改变了。</target>
        </trans-unit>
        <trans-unit id="863cefe2655a00fd3144d00fdc64707cdde92282" translate="yes" xml:space="preserve">
          <source>The direction to lay out items is determined automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12493e859014e0842b264823f3a753f2ad0d454" translate="yes" xml:space="preserve">
          <source>The directional light emits light in one direction from an unidentifiable source located infinitely far away. This is similar to the way sunlight works in real life. A directional light has infinite range and does not diminish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fa97efba9a2a1b46c1eda32d0954634e140cfd" translate="yes" xml:space="preserve">
          <source>The director of the media.</source>
          <target state="translated">媒体的主任。</target>
        </trans-unit>
        <trans-unit id="149bd894282e62d7d91f7a47f90521832ef60add" translate="yes" xml:space="preserve">
          <source>The directories where to search for the executable can be set in the</source>
          <target state="translated">搜索可执行文件的目录可以在</target>
        </trans-unit>
        <trans-unit id="1bec268541f7d77f73a4555544935cd0f3988204" translate="yes" xml:space="preserve">
          <source>The directory</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="7c70fb23e64dc82d7df9c7658c010a32c0490c35" translate="yes" xml:space="preserve">
          <source>The directory containing the user's movies and videos.</source>
          <target state="translated">包含用户的电影和视频的目录。</target>
        </trans-unit>
        <trans-unit id="35c2dabbdea725160c15639036dc35c316ccd60d" translate="yes" xml:space="preserve">
          <source>The directory containing the user's music or other audio files.</source>
          <target state="translated">包含用户的音乐或其他音频文件的目录。</target>
        </trans-unit>
        <trans-unit id="4562a5b3e0afe4d7660dfbb670b15790544569c1" translate="yes" xml:space="preserve">
          <source>The directory containing the user's pictures or photos. It is always a kind of &lt;code&gt;file&lt;/code&gt;: URL; but on some platforms, it will be specialized, such that the &lt;a href=&quot;qml-qtquick-dialogs-filedialog&quot;&gt;FileDialog&lt;/a&gt; will be realized as a gallery browser dialog.</source>
          <target state="translated">包含用户图片或照片的目录。它始终是一种 &lt;code&gt;file&lt;/code&gt; ：URL; 但在某些平台上，它将是专门的，因此&lt;a href=&quot;qml-qtquick-dialogs-filedialog&quot;&gt;FileDialog&lt;/a&gt;将实现为图库浏览器对话框。</target>
        </trans-unit>
        <trans-unit id="7865f361d73dddf2af256b7a1e9f8bc5842d60ad" translate="yes" xml:space="preserve">
          <source>The directory containing user document files.</source>
          <target state="translated">包含用户文档文件的目录。</target>
        </trans-unit>
        <trans-unit id="214951bf0d3ff23b996dd75b0188ae8680a4bee7" translate="yes" xml:space="preserve">
          <source>The directory icon.</source>
          <target state="translated">目录图标。</target>
        </trans-unit>
        <trans-unit id="cd3d94668ef7b9c0dac4e06304a5b6e83747b0b4" translate="yes" xml:space="preserve">
          <source>The directory in which the executable or binary file will be placed.</source>
          <target state="translated">放置可执行文件或二进制文件的目录。</target>
        </trans-unit>
        <trans-unit id="8d711d61d53daea8a4ed1e3bf34040e73dc1a190" translate="yes" xml:space="preserve">
          <source>The directory is constructed using the absolute canonical path of the temporary directory, ensuring that its &lt;a href=&quot;qdir#path&quot;&gt;path&lt;/a&gt;() will be the same as its &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;().</source>
          <target state="translated">该目录是使用临时目录的绝对规范路径构造的，请确保其&lt;a href=&quot;qdir#path&quot;&gt;路径&lt;/a&gt;（）与其&lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）相同。</target>
        </trans-unit>
        <trans-unit id="fe0babce7a358c02f5de299546f7b83bf36b380f" translate="yes" xml:space="preserve">
          <source>The directory is constructed using the absolute path of the current directory, ensuring that its &lt;a href=&quot;qdir#path&quot;&gt;path&lt;/a&gt;() will be the same as its &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;().</source>
          <target state="translated">该目录是使用当前目录的绝对路径构造的，请确保其&lt;a href=&quot;qdir#path&quot;&gt;路径&lt;/a&gt;（）与其&lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）相同。</target>
        </trans-unit>
        <trans-unit id="6067559462cf3dad8199da6d995e13f44d280941" translate="yes" xml:space="preserve">
          <source>The directory is constructed using the absolute path of the home directory, ensuring that its &lt;a href=&quot;qdir#path&quot;&gt;path&lt;/a&gt;() will be the same as its &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;().</source>
          <target state="translated">该目录是使用主目录的绝对路径构造的，请确保其&lt;a href=&quot;qdir#path&quot;&gt;路径&lt;/a&gt;（）与&lt;a href=&quot;qdir#absolutePath&quot;&gt;绝对&lt;/a&gt;路径（）相同。</target>
        </trans-unit>
        <trans-unit id="1d07b65cfb1238e9fe5cd1057c3706f2d0888054" translate="yes" xml:space="preserve">
          <source>The directory is constructed using the absolute path of the root directory, ensuring that its &lt;a href=&quot;qdir#path&quot;&gt;path&lt;/a&gt;() will be the same as its &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;().</source>
          <target state="translated">该目录是使用根目录的绝对路径构造的，请确保其&lt;a href=&quot;qdir#path&quot;&gt;路径&lt;/a&gt;（）与&lt;a href=&quot;qdir#absolutePath&quot;&gt;绝对&lt;/a&gt;路径（）相同。</target>
        </trans-unit>
        <trans-unit id="4124ffc4b9b85d250363bb8ce52d4b66a17f3312" translate="yes" xml:space="preserve">
          <source>The directory may be imported into a qualified local namespace, in which case uses of any types provided in the directory must be qualified:</source>
          <target state="translated">目录可以导入到一个限定的本地命名空间中,在这种情况下,目录中提供的任何类型的使用都必须是限定的。</target>
        </trans-unit>
        <trans-unit id="7c223e169b5ae98395afaa503e0855f2948d3848" translate="yes" xml:space="preserve">
          <source>The directory must be empty for rmdir() to succeed.</source>
          <target state="translated">rmdir()必须是空目录才能成功。</target>
        </trans-unit>
        <trans-unit id="b703f838c6da81cd63d94df266fa7e2d4f30fb4a" translate="yes" xml:space="preserve">
          <source>The directory of the current file</source>
          <target state="translated">当前文件的目录</target>
        </trans-unit>
        <trans-unit id="2ba32d7e173ebccb478b5d88d70ae6f9788d087e" translate="yes" xml:space="preserve">
          <source>The directory or file name is too long.</source>
          <target state="translated">目录或文件名太长。</target>
        </trans-unit>
        <trans-unit id="c15fbfffae458de1718bd2abda5129dffdb1fdca" translate="yes" xml:space="preserve">
          <source>The discoverability of the advertising device as defined by the Generic Access Profile.</source>
          <target state="translated">通用访问配置文件所定义的广告设备的可发现性。</target>
        </trans-unit>
        <trans-unit id="2195c99f8dae4deb92a77573599e9783cb7e84e6" translate="yes" xml:space="preserve">
          <source>The discovery is not possible. None of the available methods are supported.</source>
          <target state="translated">发现是不可能的。现有方法均不支持。</target>
        </trans-unit>
        <trans-unit id="eadabe5d6dae7b03182f2894ebc3cead8b472883" translate="yes" xml:space="preserve">
          <source>The discovery of its included services, characteristics and descriptors is triggered when calling &lt;a href=&quot;qlowenergyservice#discoverDetails&quot;&gt;discoverDetails&lt;/a&gt;(). During the discovery the &lt;a href=&quot;qlowenergyservice#state&quot;&gt;state&lt;/a&gt;() transitions from &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequired&lt;/a&gt; via &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveringServices&lt;/a&gt; to its final &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt; state. This transition is advertised via the &lt;a href=&quot;qlowenergyservice#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal. Once the details are known, all of the contained characteristics, descriptors and included services are known and can be read or written.</source>
          <target state="translated">调用&lt;a href=&quot;qlowenergyservice#discoverDetails&quot;&gt;discoverDetails&lt;/a&gt;（）时会触发对其包含的服务，特征和描述符的发现。在发现期间，&lt;a href=&quot;qlowenergyservice#state&quot;&gt;状态&lt;/a&gt;（）从&lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequired&lt;/a&gt;通过&lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveringServices&lt;/a&gt;转换为其最终&lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt;状态。此过渡通过&lt;a href=&quot;qlowenergyservice#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）信号发布。一旦了解了详细信息，所有包含的特征，描述符和包含的服务都是已知的，并且可以读取或写入。</target>
        </trans-unit>
        <trans-unit id="068312aa684209d92e8fea18daf280b640e6bc0f" translate="yes" xml:space="preserve">
          <source>The discovery process relies on the Bluetooth Service Discovery Process (SDP). The following steps are required to query the services provided by all contactable Bluetooth devices:</source>
          <target state="translated">发现过程依赖于蓝牙服务发现过程(SDP)。查询所有可接触的蓝牙设备提供的服务需要以下步骤。</target>
        </trans-unit>
        <trans-unit id="932671b1a23f9b603d074a732033775f3a3b3fbb" translate="yes" xml:space="preserve">
          <source>The discovery process searches for Bluetooth Classic (BaseRate) devices.</source>
          <target state="translated">发现过程搜索蓝牙经典(BaseRate)设备。</target>
        </trans-unit>
        <trans-unit id="f36249be76b01eb7cd906acafae514dd20ccaecf" translate="yes" xml:space="preserve">
          <source>The discovery process searches for Bluetooth Low Energy devices.</source>
          <target state="translated">发现过程搜索蓝牙低能耗设备。</target>
        </trans-unit>
        <trans-unit id="03a384dc88b4b3622e679fd2a5bf657d9429d9bd" translate="yes" xml:space="preserve">
          <source>The discovery progress is indicated via the &lt;a href=&quot;qlowenergycontroller#serviceDiscovered&quot;&gt;serviceDiscovered&lt;/a&gt;() signal. The &lt;a href=&quot;qlowenergycontroller#discoveryFinished&quot;&gt;discoveryFinished&lt;/a&gt;() signal is emitted when the process has finished.</source>
          <target state="translated">发现进度通过&lt;a href=&quot;qlowenergycontroller#serviceDiscovered&quot;&gt;serviceDiscovered&lt;/a&gt;（）信号指示。该过程完成后，将发出&lt;a href=&quot;qlowenergycontroller#discoveryFinished&quot;&gt;DiscoveryFinished&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="9c17282fb451bc2392116f950ddc5f3b1b267665" translate="yes" xml:space="preserve">
          <source>The disk caching behavior can be fine tuned using the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb66c0bcda4ad47daa17faf5d77930d06e065cc4" translate="yes" xml:space="preserve">
          <source>The dispatch mechanism allows only one custom handler to be used for each URL scheme; this is set using the &lt;a href=&quot;qdesktopservices#setUrlHandler&quot;&gt;setUrlHandler&lt;/a&gt;() function. Each handler is implemented as a slot which accepts only a single &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; argument.</source>
          <target state="translated">分配机制仅允许每个URL方案使用一个自定义处理程序；这是使用&lt;a href=&quot;qdesktopservices#setUrlHandler&quot;&gt;setUrlHandler&lt;/a&gt;（）函数设置的。每个处理程序都实现为仅接受单个&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;参数的插槽。</target>
        </trans-unit>
        <trans-unit id="d2183ecd993c0756318455e9f8099e1884664814" translate="yes" xml:space="preserve">
          <source>The displace data is interpreted in the RGBA format. For every pixel: the red channel stores the x-axis displacement, and the green channel stores the y-axis displacement. Blue and alpha channels are ignored for this effect.</source>
          <target state="translated">Displace数据以RGBA格式解释。对于每个像素:红色通道存储X轴的位移,绿色通道存储Y轴的位移。蓝色和alpha通道在此效果下被忽略。</target>
        </trans-unit>
        <trans-unit id="96c2e4e3b7e6176ef20bcfdab422a07d97968971" translate="yes" xml:space="preserve">
          <source>The display device's pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6808a37a152e5f3ef77ce806072d5d626af324e" translate="yes" xml:space="preserve">
          <source>The display name may change depending on DST or historical events.</source>
          <target state="translated">显示名称可能会根据DST或历史事件而改变。</target>
        </trans-unit>
        <trans-unit id="8101f9d0c5ff0a2cf95de5fdadbdd17e1ad69ab2" translate="yes" xml:space="preserve">
          <source>The display text for a hypertext link has changed.</source>
          <target state="translated">超文本链接的显示文字已经改变。</target>
        </trans-unit>
        <trans-unit id="7365d03151430fb398e31d18bdbf17eb886c3b41" translate="yes" xml:space="preserve">
          <source>The display's primary orientation.</source>
          <target state="translated">显示器的主要方向。</target>
        </trans-unit>
        <trans-unit id="207f3d6971704876485bcdfc5b161ee93032fe16" translate="yes" xml:space="preserve">
          <source>The displayed value can be prepended and appended with arbitrary strings indicating, for example, currency or the unit of measurement. See &lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;setPrefix&lt;/a&gt;() and &lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;setSuffix&lt;/a&gt;(). The text in the spin box is retrieved with &lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;text&lt;/a&gt;() (which includes any &lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;prefix&lt;/a&gt;() and &lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;suffix&lt;/a&gt;()), or with &lt;a href=&quot;qdoublespinbox#cleanText-prop&quot;&gt;cleanText&lt;/a&gt;() (which has no &lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;prefix&lt;/a&gt;(), no &lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;suffix&lt;/a&gt;() and no leading or trailing whitespace).</source>
          <target state="translated">可以在显示的值之前和之后附加任意字符串，这些字符串指示例如货币或度量单位。请参见&lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;setPrefix&lt;/a&gt;（）和&lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;setSuffix&lt;/a&gt;（）。使用&lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;文本&lt;/a&gt;（）（包括任何&lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;前缀&lt;/a&gt;（）和&lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;后缀&lt;/a&gt;（））或使用&lt;a href=&quot;qdoublespinbox#cleanText-prop&quot;&gt;cleanText&lt;/a&gt;（）（不带&lt;a href=&quot;qdoublespinbox#prefix-prop&quot;&gt;前缀&lt;/a&gt;（），&lt;a href=&quot;qdoublespinbox#suffix-prop&quot;&gt;后缀&lt;/a&gt;（）且没有前导或尾随空格）来检索旋转框中的文本。</target>
        </trans-unit>
        <trans-unit id="c152814c1aa5a7c8058d7a181441daedb5704d5c" translate="yes" xml:space="preserve">
          <source>The displayed value can be prepended and appended with arbitrary strings indicating, for example, currency or the unit of measurement. See &lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;setPrefix&lt;/a&gt;() and &lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;setSuffix&lt;/a&gt;(). The text in the spin box is retrieved with &lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;text&lt;/a&gt;() (which includes any &lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;prefix&lt;/a&gt;() and &lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;suffix&lt;/a&gt;()), or with &lt;a href=&quot;qspinbox#cleanText-prop&quot;&gt;cleanText&lt;/a&gt;() (which has no &lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;prefix&lt;/a&gt;(), no &lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;suffix&lt;/a&gt;() and no leading or trailing whitespace).</source>
          <target state="translated">可以在显示的值之前和之后附加任意字符串，这些字符串指示例如货币或度量单位。请参见&lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;setPrefix&lt;/a&gt;（）和&lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;setSuffix&lt;/a&gt;（）。使用&lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;文本&lt;/a&gt;（）（包括任何&lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;前缀&lt;/a&gt;（）和&lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;后缀&lt;/a&gt;（））或使用&lt;a href=&quot;qspinbox#cleanText-prop&quot;&gt;cleanText&lt;/a&gt;（）（不带&lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;前缀&lt;/a&gt;（），&lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;后缀&lt;/a&gt;（）且没有前导或尾随空格）来检索旋转框中的文本。</target>
        </trans-unit>
        <trans-unit id="ec5c8b165eb841f7de03ec1af4fe42cbc1aa6315" translate="yes" xml:space="preserve">
          <source>The distance around the &lt;a href=&quot;qml-qtquick3d-effects-depthoffieldhqblur#focusDistance-prop&quot;&gt;focusDistance&lt;/a&gt; where items are fully in focus. The focus then fades away to fully blurred by the same distance on both the near and far sides. &lt;code&gt;100&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495a06110b7f38bece8fd306ac08131c9a476a5a" translate="yes" xml:space="preserve">
          <source>The distance at which an object is considered close is device-specific. This distance may be available in the &lt;a href=&quot;qsensor#outputRanges-prop&quot;&gt;QSensor::outputRanges&lt;/a&gt; property.</source>
          <target state="translated">物体靠近的距离是特定于设备的。此距离可能在&lt;a href=&quot;qsensor#outputRanges-prop&quot;&gt;QSensor :: outputRanges&lt;/a&gt;属性中可用。</target>
        </trans-unit>
        <trans-unit id="860c460ac266df7b714ca9f4b9f2681e588d551b" translate="yes" xml:space="preserve">
          <source>The distance between the bottom-most keys and the bottom edge of the keyboard container, expressed as a percentage (&lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt;) of the keyboard's height.</source>
          <target state="translated">最底部键和键盘容器的底部边缘之间的距离，表示为百分比（ &lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt; ）键盘的高度。</target>
        </trans-unit>
        <trans-unit id="4726b8f72589250a0191d1b8a1542e92d9c08903" translate="yes" xml:space="preserve">
          <source>The distance between the left and right buttons in a tab bar.</source>
          <target state="translated">标签栏中左、右按钮之间的距离。</target>
        </trans-unit>
        <trans-unit id="731fc9cb53838877be6be7956b6b02879513054b" translate="yes" xml:space="preserve">
          <source>The distance between the left-most keys and the left edge of the keyboard, expressed as a percentage (&lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt;) of the keyboard's width.</source>
          <target state="translated">最左边的键和键盘的左侧边缘之间的距离，表示为百分比（ &lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt; ）键盘的宽度的。</target>
        </trans-unit>
        <trans-unit id="be305f1b264551022652f79dc6d337038c92979a" translate="yes" xml:space="preserve">
          <source>The distance between the right-most keys and the right edge of the keyboard, expressed as a percentage (&lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt;) of the keyboard's width.</source>
          <target state="translated">最右侧的键和键盘的右边缘之间的距离，表示为百分比（ &lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt; ）键盘的宽度的。</target>
        </trans-unit>
        <trans-unit id="0ff5b99f824f0bf2d5106592c8f88107f7f52251" translate="yes" xml:space="preserve">
          <source>The distance between the top-most keys and the top edge of the keyboard, expressed as a percentage (&lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt;) of the keyboard's height.</source>
          <target state="translated">最顶部的键和键盘的顶部边缘，以百分比表示（之间的距离 &lt;code&gt;0.0&lt;/code&gt; - &lt;code&gt;1.0&lt;/code&gt; 键盘的高度）。</target>
        </trans-unit>
        <trans-unit id="22ef05e4d07e542d6c4ce5e220b2e7c01ff6c29c" translate="yes" xml:space="preserve">
          <source>The distance from the camera where the content is in perfect focus. &lt;code&gt;600&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d809400c366abcecf20faf01fac11ac2b3dc9811" translate="yes" xml:space="preserve">
          <source>The distance from the center of the dial to the outer edge of the dial.</source>
          <target state="translated">从表盘中心到表盘外缘的距离。</target>
        </trans-unit>
        <trans-unit id="7f9bb667a1c0cba414c222109956fab8134bfb70" translate="yes" xml:space="preserve">
          <source>The distance from the center of the gauge to the outer edge of the gauge.</source>
          <target state="translated">仪器中心到仪器外缘的距离。</target>
        </trans-unit>
        <trans-unit id="cafc1cca9a87507622c95f8a49a579d7702ba8fb" translate="yes" xml:space="preserve">
          <source>The distance from the center of the menu to the outer edge of the menu.</source>
          <target state="translated">从菜单中心到菜单外缘的距离。</target>
        </trans-unit>
        <trans-unit id="35309d74e18bf5624ff7918b8455186b49d61552" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the dial (&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the center of the value marker text is drawn.</source>
          <target state="translated">距刻度盘外部（&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;）的距离（以像素为单位），在该刻度盘处绘制值标记文本的中心。</target>
        </trans-unit>
        <trans-unit id="badc884c7fcd1983e3afb7c056c81b96f7bc6059" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the dial (&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the outermost point of the minor tickmark line is drawn.</source>
          <target state="translated">距次刻度线最外面的刻度盘外部（&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;）的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="235bbfd105129eea5d0413740c3cc40eeb36925c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the dial (&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the outermost point of the tickmark line is drawn.</source>
          <target state="translated">距刻度线最外点的刻度盘外部（&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;）的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="b98c12c09609bf74a0ca07574b3a04910b0a92d8" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the dial (&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) to the center of the handle.</source>
          <target state="translated">从刻度盘外部（&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#outerRadius-prop&quot;&gt;externalRadius&lt;/a&gt;）到手柄中心的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="c4658649b1a4f522ad1dd791050855f9ef32cab9" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the gauge (&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the center of the value marker text is drawn.</source>
          <target state="translated">距测量仪外部（&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;externalRadius&lt;/a&gt;）的距离（以像素为单位），在该处绘制值标记文本的中心。</target>
        </trans-unit>
        <trans-unit id="b748c4bde9aadc5b1d0b4b5c3c97395ece15f07e" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the gauge (&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the outermost point of the minor tickmark line is drawn.</source>
          <target state="translated">距测量仪外部（&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;）的距离（以像素为单位），在该处绘制次刻度线的最外点。</target>
        </trans-unit>
        <trans-unit id="aee1add51c700a3e137011ef954db39549060202" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the outside of the gauge (&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt;) at which the outermost point of the tickmark line is drawn.</source>
          <target state="translated">距刻度线最外面的点距仪表的外部距离（&lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;externalRadius&lt;/a&gt;），以像素为单位。</target>
        </trans-unit>
        <trans-unit id="0142e339b496476fb05e904e9b4a44c40d3fcc17" translate="yes" xml:space="preserve">
          <source>The distance in pixels that the user must drag an event point in order to have it treated as a drag gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b998ff049c63cc50fb2a36b63bfcce1fada492c8" translate="yes" xml:space="preserve">
          <source>The distance is measured in cm</source>
          <target state="translated">距离以厘米为单位</target>
        </trans-unit>
        <trans-unit id="a5c90edb9792b4e00731f439c0b6c79662f033b1" translate="yes" xml:space="preserve">
          <source>The distance of the place from the user's current location is important to the user. This hint is only meaningful when a circular search area is used.</source>
          <target state="translated">该地与用户当前位置的距离对用户来说很重要。这个提示只有在使用圆形搜索区域时才有意义。</target>
        </trans-unit>
        <trans-unit id="d03fd9918da4d580828f995812db05ea2f48d4cf" translate="yes" xml:space="preserve">
          <source>The distance sensor is typically located in the front face of a device, and thus will measure the distance of an object from the device's front face.</source>
          <target state="translated">距离传感器通常位于设备的正面,因此将测量物体与设备正面的距离。</target>
        </trans-unit>
        <trans-unit id="15f259bfdbd5094774affc8843283f00c85ba441" translate="yes" xml:space="preserve">
          <source>The distance to the subject, given in meters.</source>
          <target state="translated">与主体的距离,以米为单位。</target>
        </trans-unit>
        <trans-unit id="72b66ac2d47373f9582259d2a55b880d7a0bd869" translate="yes" xml:space="preserve">
          <source>The distance, in pixels, from the baseline origin of the first character of the text item, to the baseline origin of the first character in a text item occurring directly after this one in a text flow.</source>
          <target state="translated">从文本项的第一个字符的基线原点到文本流中直接出现在这个字符之后的文本项的第一个字符的基线原点的距离,以像素为单位。</target>
        </trans-unit>
        <trans-unit id="1aa9b4988bf3d86cd5df9ce9d5bf110162c20fe2" translate="yes" xml:space="preserve">
          <source>The distinguished name qualifier</source>
          <target state="translated">专门的名称修饰语</target>
        </trans-unit>
        <trans-unit id="f4a27cce5dbac67a31cc42b088963b52de472c47" translate="yes" xml:space="preserve">
          <source>The distortion amount. Range is &lt;code&gt;[-1...1&lt;/code&gt;. &lt;code&gt;0.5&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95034fca4d2ca8488f65eee81b522cef5c5df92" translate="yes" xml:space="preserve">
          <source>The distortion amount. Range is &lt;code&gt;[-10...10&lt;/code&gt;. &lt;code&gt;1.0&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6ccd3799bbd95c89f13aef10c51e177bbbc504" translate="yes" xml:space="preserve">
          <source>The distortion amount. Sensible values are in the range &lt;code&gt;[0...100]&lt;/code&gt;. &lt;code&gt;10&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fd478cae74f34d82f5d548815efde937c3768b" translate="yes" xml:space="preserve">
          <source>The dock widget border can be styled using the &lt;a href=&quot;#border-prop&quot;&gt;border&lt;/a&gt; property. The &lt;a href=&quot;#title-sub&quot;&gt;::title&lt;/a&gt; subcontrol can be used to customize the title bar. The close and float buttons are positioned with respect to the &lt;a href=&quot;#title-sub&quot;&gt;::title&lt;/a&gt; subcontrol using the &lt;a href=&quot;#close-button-sub&quot;&gt;::close-button&lt;/a&gt; and &lt;a href=&quot;#float-button-sub&quot;&gt;::float-button&lt;/a&gt; respectively.</source>
          <target state="translated">可以使用&lt;a href=&quot;#border-prop&quot;&gt;border&lt;/a&gt;属性设置停靠窗口小部件边框的样式。该&lt;a href=&quot;#title-sub&quot;&gt;::标题&lt;/a&gt;子控件可以用于自定义标题栏。关闭和浮动按钮分别相对于&lt;a href=&quot;#title-sub&quot;&gt;:: title子&lt;/a&gt;控件使用&lt;a href=&quot;#close-button-sub&quot;&gt;:: close-button&lt;/a&gt;和&lt;a href=&quot;#float-button-sub&quot;&gt;:: float-button定位&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2134e77312b72a3202fb461855df7ed6c015a67d" translate="yes" xml:space="preserve">
          <source>The dock widget border can be styled using the &lt;a href=&quot;stylesheet-reference#border-prop&quot;&gt;border&lt;/a&gt; property. The &lt;a href=&quot;stylesheet-reference#title-sub&quot;&gt;::title&lt;/a&gt; subcontrol can be used to customize the title bar. The close and float buttons are positioned with respect to the &lt;a href=&quot;stylesheet-reference#title-sub&quot;&gt;::title&lt;/a&gt; subcontrol using the &lt;a href=&quot;stylesheet-reference#close-button-sub&quot;&gt;::close-button&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#float-button-sub&quot;&gt;::float-button&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0585caf0e65d4d1b96a07c67ef1b10dfc40cdc" translate="yes" xml:space="preserve">
          <source>The dock widget can be closed. On some systems the dock widget always has a close button when it's floating (for example on &lt;a href=&quot;internationalization#macos&quot;&gt;MacOS&lt;/a&gt; 10.5).</source>
          <target state="translated">停靠小部件可以关闭。在某些系统上，dock小部件在浮动时始终具有关闭按钮（例如，在&lt;a href=&quot;internationalization#macos&quot;&gt;MacOS&lt;/a&gt; 10.5上）。</target>
        </trans-unit>
        <trans-unit id="65668e3881ef319df3c073d9644a950f7715f408" translate="yes" xml:space="preserve">
          <source>The dock widget can be detached from the main window, and floated as an independent window.</source>
          <target state="translated">停靠部件可以从主窗口中分离出来,并作为一个独立的窗口浮动。</target>
        </trans-unit>
        <trans-unit id="28651255a644cf3393fef045a7603a530a6f9373" translate="yes" xml:space="preserve">
          <source>The dock widget can be moved between docks by the user.</source>
          <target state="translated">用户可以在码头之间移动码头小部件。</target>
        </trans-unit>
        <trans-unit id="927bdd8e66990da377b628ef9bc8b6505e96b3bd" translate="yes" xml:space="preserve">
          <source>The dock widget cannot be closed, moved, or floated.</source>
          <target state="translated">停靠部件不能被关闭、移动或浮动。</target>
        </trans-unit>
        <trans-unit id="4b8ea3b0037beb46810abc2f3f927f60d6e0b06b" translate="yes" xml:space="preserve">
          <source>The dock widget displays a vertical title bar on its left side. This can be used to increase the amount of vertical space in a &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;.</source>
          <target state="translated">停靠小部件在其左侧显示垂直标题栏。这可以用来增加&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow中&lt;/a&gt;的垂直空间。</target>
        </trans-unit>
        <trans-unit id="238811e975dd2f769cf2d1d6b2da78592ecf648d" translate="yes" xml:space="preserve">
          <source>The document contents commands identify parts of the documentation, parts with a special rendering, conceptual meaning or function.</source>
          <target state="translated">文档内容命令用于识别文档中的部分,具有特殊渲染、概念意义或功能的部分。</target>
        </trans-unit>
        <trans-unit id="b2933f09c95ff07484dd42ba21f6b14d096db3f9" translate="yes" xml:space="preserve">
          <source>The document is obtained from the text editor, and a QPrinter is constructed then configured using a QPrintDialog. If the user accepts the printer's configuration then the document is formatted and printed using the &lt;a href=&quot;qtextdocument#print&quot;&gt;print()&lt;/a&gt; function.</source>
          <target state="translated">该文档是从文本编辑器中获得的，然后使用QPrintDialog构造QPrinter。如果用户接受打印机的配置，则使用&lt;a href=&quot;qtextdocument#print&quot;&gt;print（）&lt;/a&gt;函数对文档进行格式化和打印。</target>
        </trans-unit>
        <trans-unit id="60918838c705b06f22d27661814037502cce4ca9" translate="yes" xml:space="preserve">
          <source>The document is sent to the printer, or written to a local file, when we call &lt;a href=&quot;qpainter#end&quot;&gt;end()&lt;/a&gt;.</source>
          <target state="translated">当我们调用&lt;a href=&quot;qpainter#end&quot;&gt;end（）&lt;/a&gt;时，文档将发送到打印机或写入本地文件。</target>
        </trans-unit>
        <trans-unit id="46ed38684be843a00d025432fb301fce3e304ddd" translate="yes" xml:space="preserve">
          <source>The document must have a document layout that inherits &lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt; (see &lt;a href=&quot;qtextdocument#setDocumentLayout&quot;&gt;QTextDocument::setDocumentLayout&lt;/a&gt;()).</source>
          <target state="translated">该文档必须具有继承&lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt;的文档布局（请参见&lt;a href=&quot;qtextdocument#setDocumentLayout&quot;&gt;QTextDocument :: setDocumentLayout&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="b59ca2a90bc354b2872fec95aca6dbd2745e82fe" translate="yes" xml:space="preserve">
          <source>The document structure is not manipulated directly. Editing is performed through a cursor-based interface. The &lt;a href=&quot;richtext-cursor&quot;&gt;text cursor interface&lt;/a&gt; automatically inserts new document elements into the root frame, and ensures that it is padded with empty blocks where necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e5eb49ead8ab046e15adeb5e42effd9614fe74" translate="yes" xml:space="preserve">
          <source>The document structure is not manipulated directly. Editing is performed through a cursor-based interface. The &lt;a href=&quot;richtext-cursor#&quot;&gt;text cursor interface&lt;/a&gt; automatically inserts new document elements into the root frame, and ensures that it is padded with empty blocks where necessary.</source>
          <target state="translated">文档结构不能直接操作。通过基于光标的界面进行编辑。在&lt;a href=&quot;richtext-cursor#&quot;&gt;文本光标接口&lt;/a&gt;自动插入新文档元素到根帧，并确保它被填充以空块在必要。</target>
        </trans-unit>
        <trans-unit id="f596d238ba7779b383759a39cbddd25f6e73a8a4" translate="yes" xml:space="preserve">
          <source>The document structuring commands are for dividing your document into sections. QDoc supports four levels of section: &lt;code&gt;\section1&lt;/code&gt;, &lt;code&gt;\section2&lt;/code&gt;, &lt;code&gt;\section3&lt;/code&gt;, and &lt;code&gt;\section4&lt;/code&gt;. The section commands correspond to the traditional section, subsection, etc used in outlining.</source>
          <target state="translated">文档结构化命令用于将文档划分为多个部分。QDoc支持section的四个级别： &lt;code&gt;\section1&lt;/code&gt; ， &lt;code&gt;\section2&lt;/code&gt; ， &lt;code&gt;\section3&lt;/code&gt; 和 &lt;code&gt;\section4&lt;/code&gt; 。section命令对应于大纲中使用的传统section，subsection等。</target>
        </trans-unit>
        <trans-unit id="7580d6f40fe8aa1d50edf763a98594eff41d5e61" translate="yes" xml:space="preserve">
          <source>The document to which the node belongs is returned by &lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;().</source>
          <target state="translated">节点所属的文档由&lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="497ec716041ebf422acd851df2e3fbbf0d5c6251" translate="yes" xml:space="preserve">
          <source>The document will be created using landscape orientation.</source>
          <target state="translated">文件将使用横向方向创建。</target>
        </trans-unit>
        <trans-unit id="87110312d7586b2207c64918f75a8fd3125280b7" translate="yes" xml:space="preserve">
          <source>The document will be created using portrait orientation.</source>
          <target state="translated">文件将使用纵向方向创建。</target>
        </trans-unit>
        <trans-unit id="751a446b0e70b8d778aa80644f3d7e8ee5b38b2f" translate="yes" xml:space="preserve">
          <source>The document's title as &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01961e29feb62bf14323e820025a8a430181321f" translate="yes" xml:space="preserve">
          <source>The documentation for each module contains detailed information about any exceptions the module has from the general platform and configuration support as described on this page.</source>
          <target state="translated">每个模块的文档都包含了关于该模块与一般平台和配置支持的任何例外的详细信息,如本页所述。</target>
        </trans-unit>
        <trans-unit id="593c102d5f139361ed6083f695d1c6ac9a73e179" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html#&quot;&gt;Styles&lt;/a&gt; example covers this topic in more detail.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html#&quot;&gt;样式&lt;/a&gt;示例的文档更详细地介绍了此主题。</target>
        </trans-unit>
        <trans-unit id="488e90a8031ff48ec593aa48c12f00d10069a50c" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example covers this topic in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc40c9cde1e96ba41ff66139fc4d154084ccc92" translate="yes" xml:space="preserve">
          <source>The documentation for this function will be included on the reference page for class &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;.</source>
          <target state="translated">该函数的文档将包含在&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;类的参考页上。</target>
        </trans-unit>
        <trans-unit id="8eeb5fb057c455b9bf3ff85cd581cbd2006e12a0" translate="yes" xml:space="preserve">
          <source>The documentation generated from this command will be similar to the what is generated for the &lt;a href=&quot;#reentrant-command&quot;&gt;\reentrant&lt;/a&gt; command. See the example above in the &lt;a href=&quot;#reentrant-example&quot;&gt;introduction&lt;/a&gt;.</source>
          <target state="translated">从此命令生成的文档将类似于为&lt;a href=&quot;#reentrant-command&quot;&gt;\ reentrant&lt;/a&gt;命令生成的文档。请参阅上面的&lt;a href=&quot;#reentrant-example&quot;&gt;简介中&lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="b4b632b3ec7ecd9cf0a37a0402faed2798c26137" translate="yes" xml:space="preserve">
          <source>The documentation generated from this command will be similar to the what is generated for the &lt;a href=&quot;17-qdoc-commands-thread#reentrant-command&quot;&gt;\reentrant&lt;/a&gt; command. See the example above in the &lt;a href=&quot;17-qdoc-commands-thread#reentrant-example&quot;&gt;introduction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93459ea7ce0b4cd43baa7c0bcda4bf4744c87d70" translate="yes" xml:space="preserve">
          <source>The documentation of certain container class functions refer to</source>
          <target state="translated">某些容器类函数的文档参考了</target>
        </trans-unit>
        <trans-unit id="f61c6b1f57fa60a45cc5690dbea8d9b12218fa6c" translate="yes" xml:space="preserve">
          <source>The documentation set (one per QDoc project) can have any number of filter attributes assigned to it. A filter attribute is an ordinary string which can be freely chosen. Additionally, custom filters that reference above attributes can be defined. Qt Assistant will display the name of the custom filter in its &lt;b&gt;Filtered by&lt;/b&gt; drop-down list. Only the documentation sets that have their filter attributes match the attributes of the selected custom filter will be shown.</source>
          <target state="translated">文档集（每个QDoc项目一个）可以分配任意数量的过滤器属性。过滤器属性是可以自由选择的普通字符串。此外，可以定义引用上述属性的自定义过滤器。Qt Assistant将在其&amp;ldquo; &lt;b&gt;筛选依据&amp;rdquo;&lt;/b&gt;下拉列表中显示自定义过滤器的名称。仅显示具有过滤器属性的文档集与所选自定义过滤器的属性匹配。</target>
        </trans-unit>
        <trans-unit id="fc4a484c14cfeaa7fb25b31e17ed63625ad06ce9" translate="yes" xml:space="preserve">
          <source>The documentation set may include one or more subprojects, which are added to the table of contents under the name specified by &lt;code&gt;title&lt;/code&gt;. The page in the documentation referred to by the &lt;code&gt;indexTitle&lt;/code&gt; acts as the index page for the subproject. The page types to list under the subproject are specified by &lt;code&gt;selectors&lt;/code&gt;. The entries are alphabetically sorted if &lt;code&gt;sortPages&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">文档集可能包含一个或多个子项目，这些子项目以 &lt;code&gt;title&lt;/code&gt; 指定的名称添加到目录中。 &lt;code&gt;indexTitle&lt;/code&gt; 引用的文档中的页面充当子项目的索引页面。子项目下要列出的页面类型由 &lt;code&gt;selectors&lt;/code&gt; 指定。如果将 &lt;code&gt;sortPages&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,则条目将按字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="08f969a14e6ec7f3f6296dfda60785aa0df5d9e7" translate="yes" xml:space="preserve">
          <source>The documentation will be located in the associated class, header file or namespace documentation. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#enum-command&quot;&gt;\enum&lt;/a&gt; documentation for an example.</source>
          <target state="translated">该文档将位于相关的类，头文件或名称空间文档中。有关示例，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#enum-command&quot;&gt;\ enum&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="111b6422c5d5571941c763a3e9c65c15b7699640" translate="yes" xml:space="preserve">
          <source>The documentation will be located in the associated class, header file or namespace documentation. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#enum-command&quot;&gt;\enum&lt;/a&gt; documentation for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2443320468d8bfc1fea1e2f256a28bcfe201ecd" translate="yes" xml:space="preserve">
          <source>The dollar signifies the end of the string. For example &lt;b&gt;\d\s*$&lt;/b&gt; will match strings which end with a digit optionally followed by whitespace. If you wish to match a literal &lt;code&gt;$&lt;/code&gt; you must escape it by writing &lt;code&gt;\\$&lt;/code&gt;.</source>
          <target state="translated">美元表示字符串的结尾。例如，&lt;b&gt;\ d \ s * $&lt;/b&gt;将匹配以数字结尾的字符串，并可选地后面跟空格。如果要匹配文字 &lt;code&gt;$&lt;/code&gt; ，则必须通过写 &lt;code&gt;\\$&lt;/code&gt; 对其进行转义。</target>
        </trans-unit>
        <trans-unit id="0eebc4b45ad8747e93a8d3bd6043004c3635d42f" translate="yes" xml:space="preserve">
          <source>The donut hole size.</source>
          <target state="translated">的甜甜圈孔大小。</target>
        </trans-unit>
        <trans-unit id="44d23286d14ffd36350411d6796fbad97fe2c2d9" translate="yes" xml:space="preserve">
          <source>The dot expression ('.') can be used in predicates and path expressions to refer to the current context node. The following query uses the dot expression to refer to the current &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; element. The query selects the empty &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; elements from the cookbook.</source>
          <target state="translated">点表达式（'。'）可在谓词和路径表达式中使用以引用当前上下文节点。以下查询使用点表达式来引用当前的 &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; 元素。该查询从食谱中选择空的 &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="a10c204906fa53d3ade5c4fc9cc52356de616f76" translate="yes" xml:space="preserve">
          <source>The dot metacharacter (&lt;code&gt;.&lt;/code&gt;) in the pattern string is allowed to match any character in the subject string, including newlines (normally, the dot does not match newlines). This option corresponds to the &lt;code&gt;/s&lt;/code&gt; modifier in Perl regular expressions.</source>
          <target state="translated">模式字符串中的点元字符（ &lt;code&gt;.&lt;/code&gt; ）可以匹配主题字符串中的任何字符，包括换行符（通常，点不匹配换行符）。此选项对应于Perl正则表达式中的 &lt;code&gt;/s&lt;/code&gt; 修饰符。</target>
        </trans-unit>
        <trans-unit id="5b01f3becd83bbde3dafceb22c118fcc9907506c" translate="yes" xml:space="preserve">
          <source>The dotted lines indicate that the &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt; contains a tab bar, but does not draw it itself. &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; only draws its base line when not part of a tab widget, and it keeps two tool buttons that scroll the bar when all tabs do not fit; see &lt;a href=&quot;#tool-buttons&quot;&gt;Tool Buttons&lt;/a&gt; for their element tree. Also note that since the buttons are children of the tab bar, they are drawn after the bar. The tabs' bounding rectangles overlap the base by &lt;code&gt;PM_TabBarBaseOverlap&lt;/code&gt;.</source>
          <target state="translated">虚线表示&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;包含一个选项卡栏，但自身并未绘制。&lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;仅在不属于选项卡小部件的部分时才绘制其基线，并且保留两个工具按钮，当所有选项卡都不适合时滚动该栏；有关其元素树，请参见&lt;a href=&quot;#tool-buttons&quot;&gt;工具按钮&lt;/a&gt;。还要注意，由于按钮是选项卡栏的子项，因此它们在栏的后面绘制。选项卡的边界矩形与 &lt;code&gt;PM_TabBarBaseOverlap&lt;/code&gt; 重叠。</target>
        </trans-unit>
        <trans-unit id="4610d9fbeebab801e125bf4aeae5257ea0441511" translate="yes" xml:space="preserve">
          <source>The dotted lines indicate that the &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt; contains a tab bar, but does not draw it itself. &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; only draws its base line when not part of a tab widget, and it keeps two tool buttons that scroll the bar when all tabs do not fit; see &lt;a href=&quot;style-reference#tool-buttons&quot;&gt;Tool Buttons&lt;/a&gt; for their element tree. Also note that since the buttons are children of the tab bar, they are drawn after the bar. The tabs' bounding rectangles overlap the base by &lt;code&gt;PM_TabBarBaseOverlap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7799b591355b837f260d3b87511f9e27d8e83d4d" translate="yes" xml:space="preserve">
          <source>The dotted lines indicate that the &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; keeps an instance of QToolBarLayout and that QToolBarSeparators are kept by QToolBarLayout. When the toolbar is floating (i.e., has its own window) the &lt;code&gt;PE_FrameMenu&lt;/code&gt; element is drawn, else &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; draws &lt;code&gt;CE_ToolBar&lt;/code&gt;.</source>
          <target state="translated">虚线表示&lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;保留QToolBarLayout的实例，而QToolBarSeparators由QToolBarLayout保留。当工具栏浮动（即，有它自己的窗口）的 &lt;code&gt;PE_FrameMenu&lt;/code&gt; 元素绘制，否则&lt;a href=&quot;qtoolbar&quot;&gt;在QToolBar&lt;/a&gt;吸引 &lt;code&gt;CE_ToolBar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="723a097c37ec9114b92abca5818913c9d85bdd86" translate="yes" xml:space="preserve">
          <source>The dotted lines indicate that the sender keeps instances of the recipient of the arrow (i.e., it is not a style element to draw). The dock widget only draws &lt;code&gt;PE_frameDockWidget&lt;/code&gt; when it is detached from its main window (i.e., it is a top level window). If it is docked it draws the indicator dock widget resize handle. We show a dock widget in both docked and floating state in the plastique style:</source>
          <target state="translated">虚线表示发送方保留了箭头接收方的实例（即，它不是要绘制的样式元素）。停靠小部件仅在从其主窗口（即，它是顶层窗口）分离时才绘制 &lt;code&gt;PE_frameDockWidget&lt;/code&gt; 。如果停靠，它将绘制指示器停靠窗口部件调整大小手柄。我们以塑体样式显示停靠和浮动状态的停靠小部件：</target>
        </trans-unit>
        <trans-unit id="2bf92e5304f28a17e5a1dbca5b6b7810320e35d6" translate="yes" xml:space="preserve">
          <source>The down arrow of a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; (sort indicator), &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; or &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;，&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;（排序指示器），&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;或&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;的向下箭头。</target>
        </trans-unit>
        <trans-unit id="a5b0f88ba3527ca252d2fab7dbd4d62a6efb1deb" translate="yes" xml:space="preserve">
          <source>The down button and arrow can be styled using the &lt;a href=&quot;#down-button-sub&quot;&gt;::down-button&lt;/a&gt; and &lt;a href=&quot;#down-arrow-sub&quot;&gt;::down-arrow&lt;/a&gt; subcontrols. By default, the down-button is placed in the bottom right corner in the Padding rectangle of the widget. Without an explicit size, it occupies half the height of its reference rectangle. The bottom-arrow is placed in the center of the Contents rectangle of the bottom-button.</source>
          <target state="translated">可以使用&lt;a href=&quot;#down-button-sub&quot;&gt;:: down-button&lt;/a&gt;和&lt;a href=&quot;#down-arrow-sub&quot;&gt;:: down-arrow子&lt;/a&gt;控件设置向下按钮和箭头的样式。默认情况下，向下按钮位于小部件的&amp;ldquo;填充&amp;rdquo;矩形的右下角。如果没有明确的尺寸，则它占据其参考矩形高度的一半。底部箭头位于底部按钮的&amp;ldquo;内容&amp;rdquo;矩形的中心。</target>
        </trans-unit>
        <trans-unit id="50d8651dc78d15100ff17ab59cff265c50270185" translate="yes" xml:space="preserve">
          <source>The down button and arrow can be styled using the &lt;a href=&quot;stylesheet-reference#down-button-sub&quot;&gt;::down-button&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#down-arrow-sub&quot;&gt;::down-arrow&lt;/a&gt; subcontrols. By default, the down-button is placed in the bottom right corner in the Padding rectangle of the widget. Without an explicit size, it occupies half the height of its reference rectangle. The bottom-arrow is placed in the center of the Contents rectangle of the bottom-button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01328db045a3707a5f47186aee13567388f0d361" translate="yes" xml:space="preserve">
          <source>The down button of a &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; or a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;或&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;的向下按钮。</target>
        </trans-unit>
        <trans-unit id="81d3d6a3bfbbf485ef8d9061d3b7cafe4da057d9" translate="yes" xml:space="preserve">
          <source>The download directory can only be set in the &lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; handler before the download is accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4186a7f9cf3248b98e544e878ff9b8d9b05b4d7b" translate="yes" xml:space="preserve">
          <source>The download directory path can only be set in response to the &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile::downloadRequested&lt;/a&gt;() signal before the download is accepted. Past that point, this function has no effect on the download item's state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5931cdb7cd8de312a1b1fa3f5b7060daafb78ad" translate="yes" xml:space="preserve">
          <source>The download file name can only be set in response to the &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile::downloadRequested&lt;/a&gt;() signal before the download is accepted. Past that point, this function has no effect on the download item's state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934ec4d472af325e8a3ceec7bd4d8f531fe03085" translate="yes" xml:space="preserve">
          <source>The download file name can only be set in the &lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; handler before the download is accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc33a6398a40b14b332efa37ecbc4cb817463499" translate="yes" xml:space="preserve">
          <source>The download is finished when</source>
          <target state="translated">下载完成时</target>
        </trans-unit>
        <trans-unit id="b03972acea93143c493b55c2b6ad606e70310ac0" translate="yes" xml:space="preserve">
          <source>The download path can only be set in the &lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; handler before the download is accepted.</source>
          <target state="translated">在接受&lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;下载&lt;/a&gt;之前，只能在downloadRequested处理程序中设置下载路径。</target>
        </trans-unit>
        <trans-unit id="96fa15a59e31d71bf1acabdb8a97423095649a80" translate="yes" xml:space="preserve">
          <source>The downside to using vertex antialiasing is that each primitive with antialiasing enabled will have to be blended. In terms of batching, this means that the renderer needs to do more work to figure out if the primitive can be batched or not and due to overlaps with other elements in the scene, it may also result in less batching, which could impact performance.</source>
          <target state="translated">使用顶点抗锯齿的缺点是,每个启用抗锯齿的基元都必须被混合。在批处理方面,这意味着渲染器需要做更多的工作来弄清楚基元是否可以被批处理,由于与场景中的其他元素重叠,也可能导致批处理的数量减少,这可能会影响性能。</target>
        </trans-unit>
        <trans-unit id="3b55b295a64099465f7582525590f897cb46b583" translate="yes" xml:space="preserve">
          <source>The drag data is passed as MIME-encoded information in</source>
          <target state="translated">拖动数据以MIME编码信息的形式在</target>
        </trans-unit>
        <trans-unit id="f1f93159eb5a74b1098122633b7c75d09f818659" translate="yes" xml:space="preserve">
          <source>The drag will only be applied to objects with a velocity above the threshold velocity. The drag applied will bring objects down to the threshold velocity, but no further.</source>
          <target state="translated">拖曳只适用于速度高于阈值速度的物体。施加的拖曳将使物体下降到阈值速度,但不会再进一步。</target>
        </trans-unit>
        <trans-unit id="6950b7e694d549a8fac6617d271ce97687db778e" translate="yes" xml:space="preserve">
          <source>The dragEnterEvent() function is typically used to inform Qt about the types of data that the widget accepts. You must reimplement this function if you want to receive either &lt;a href=&quot;qdragmoveevent&quot;&gt;QDragMoveEvent&lt;/a&gt; or &lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt; in your reimplementations of &lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent()&lt;/a&gt;.</source>
          <target state="translated">dragEnterEvent（）函数通常用于通知Qt小部件接受的数据类型。如果要在&lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent（）&lt;/a&gt;和&lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent（）的&lt;/a&gt;重新实现中接收&lt;a href=&quot;qdragmoveevent&quot;&gt;QDragMoveEvent&lt;/a&gt;或&lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt;，则必须重新实现此函数。</target>
        </trans-unit>
        <trans-unit id="dcfc5bb7d5f9e6625e84312fc4f31ce4cc469041" translate="yes" xml:space="preserve">
          <source>The dragMoveEvent() can also be used if you need to give visual feedback during a drag and drop operation, to scroll the window, or whatever is appropriate.</source>
          <target state="translated">如果您需要在拖放操作过程中给出视觉反馈,滚动窗口或任何合适的东西,也可以使用dragMoveEvent()。</target>
        </trans-unit>
        <trans-unit id="14fc3e16fc602ce1a3bd1cbfa0bd3968ec92c85c" translate="yes" xml:space="preserve">
          <source>The drawer can be positioned at any of the four edges of the screen. It allows the user to add navigation without taking up valuable screen space. The user can show and hide the drawer at any time with a simple swipe movement.</source>
          <target state="translated">抽屉可以放置在屏幕的四个边缘的任何一个位置。它允许用户在不占用宝贵的屏幕空间的情况下添加导航。用户可以在任何时候通过简单的滑动动作显示和隐藏抽屉。</target>
        </trans-unit>
        <trans-unit id="d0b04aa5eefd2ef1516a3a7c5fe8a647e3f71935" translate="yes" xml:space="preserve">
          <source>The drawing capabilities of &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; are currently implemented by the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, QGLPixelBuffer, &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;, and QPrinter subclasses.</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;的绘制功能当前由&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;，&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;，&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;，QGLPixelBuffer，&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;和QPrinter子类实现。</target>
        </trans-unit>
        <trans-unit id="a2188ed554862aa46f0aefe629e0a5afd9e0cd2f" translate="yes" xml:space="preserve">
          <source>The drawing capabilities of QPaintDevice are currently implemented by the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, QGLPixelBuffer, &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;, and QPrinter subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4cd104360b05694986f8a69bfd8545ec3759a4" translate="yes" xml:space="preserve">
          <source>The drawing mode of the surface. Values of this enumeration can be combined with the OR operator.</source>
          <target state="translated">曲面的绘制模式。这个枚举的值可以和OR运算符组合。</target>
        </trans-unit>
        <trans-unit id="a0b6cd58891004acd56fc50c20b3e4d9a3c84e3b" translate="yes" xml:space="preserve">
          <source>The drawing mode.</source>
          <target state="translated">绘图模式。</target>
        </trans-unit>
        <trans-unit id="b1cbc67f25cb9971a6af6847f34fd5c0ff48a3b0" translate="yes" xml:space="preserve">
          <source>The drawing of item view headers is also done by the style, giving control over size of header items and row and column sizes.</source>
          <target state="translated">项目视图标题的绘制也是由样式来完成的,可以控制标题项的大小和行、列的大小。</target>
        </trans-unit>
        <trans-unit id="6b405a317cbbccc87ba6ae1d8a140f77bf4604c8" translate="yes" xml:space="preserve">
          <source>The drawing of labels often gets somewhat involved. Luckily, it can usually be handled by the base class. The Java style implements its own push button label, since Java centers button contents also when the button has an icon. You can examine that implementation if you need an example of reimplementing label drawing.</source>
          <target state="translated">标签的绘制往往会有些麻烦。幸运的是,它通常可以由基类来处理。Java风格实现了自己的按钮标签,因为当按钮有图标时,Java也会将按钮内容居中。如果你需要一个重新实现标签绘制的例子,你可以研究这个实现。</target>
        </trans-unit>
        <trans-unit id="190741080e09dcd54ffa88cafa5e6198c114735e" translate="yes" xml:space="preserve">
          <source>The driver is locked for updates while a select is executed. This may cause problems when using &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; because Qt's item views fetch data as needed (with QSqlQuery::fetchMore() in the case of &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;).</source>
          <target state="translated">执行选择时，驱动程序被锁定以进行更新。使用时，这可能会导致问题&lt;a href=&quot;qsqltablemodel&quot;&gt;与QSqlTableModel&lt;/a&gt;因为Qt的项目视图获取的（在的情况下，与QSqlQuery :: fetchMore（）所需要的数据&lt;a href=&quot;qsqltablemodel&quot;&gt;与QSqlTableModel&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="43f7077717293861567d16ed9a3b02329d85119d" translate="yes" xml:space="preserve">
          <source>The drop action may be one of:</source>
          <target state="translated">滴滴行动可能是其中之一。</target>
        </trans-unit>
        <trans-unit id="7582df07d0e33de76f1f0cc977f4ee59a13dc0fb" translate="yes" xml:space="preserve">
          <source>The drop event contains a proposed action, available from &lt;a href=&quot;qdropevent#proposedAction&quot;&gt;proposedAction&lt;/a&gt;(), for the widget to either accept or ignore. If the action can be handled by the widget, you should call the &lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;() function. Since the proposed action can be a combination of &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::DropAction&lt;/a&gt; values, it may be useful to either select one of these values as a default action or ask the user to select their preferred action.</source>
          <target state="translated">drop事件包含一个提议的操作，该操作可从&lt;a href=&quot;qdropevent#proposedAction&quot;&gt;proposalAction&lt;/a&gt;（）获得，供小部件接受或忽略。如果该动作可以由小部件处理，则应调用&lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;（）函数。由于建议的操作可以是&lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt :: DropAction&lt;/a&gt;值的组合，因此选择这些值之一作为默认操作或要求用户选择其首选操作可能很有用。</target>
        </trans-unit>
        <trans-unit id="ad1e512f596290b2126c175e6affa68b39f57111" translate="yes" xml:space="preserve">
          <source>The drop-down button of a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;的下拉按钮。</target>
        </trans-unit>
        <trans-unit id="1f434caca20ad8d13d2fef36810413e729243c03" translate="yes" xml:space="preserve">
          <source>The dual stack any-address. A socket bound with this address will listen on both IPv4 and IPv6 interfaces.</source>
          <target state="translated">双栈任意地址。与该地址绑定的套接字将同时监听IPv4和IPv6接口。</target>
        </trans-unit>
        <trans-unit id="afe2db2f95b4c06dbd61433801acc9a465db05d7" translate="yes" xml:space="preserve">
          <source>The dumpcpp Tool (ActiveQt)</source>
          <target state="translated">dumpcpp工具(ActiveQt)</target>
        </trans-unit>
        <trans-unit id="16c11f75f755f70afa6ea1d0f13a621c99368a41" translate="yes" xml:space="preserve">
          <source>The dumpdoc Tool (ActiveQt)</source>
          <target state="translated">dumpdoc工具(ActiveQt)</target>
        </trans-unit>
        <trans-unit id="76bccd2ce1d66843940258da68c146ffcfd68d6e" translate="yes" xml:space="preserve">
          <source>The duration in millseconds of the media.</source>
          <target state="translated">介质的持续时间(毫秒)。</target>
        </trans-unit>
        <trans-unit id="d7e75b226ad5c00e6a898f60249dcf8f59a5b1fd" translate="yes" xml:space="preserve">
          <source>The duration of a frame in the animation can vary by up to this amount. Variation will never decrease the length of the animation to less than 0.</source>
          <target state="translated">动画中一帧的持续时间最多可以变化这个量。变化绝不会使动画的长度减少到小于0。</target>
        </trans-unit>
        <trans-unit id="d331c3ad3c716e8d3c4275cd863d7d65a236e2b4" translate="yes" xml:space="preserve">
          <source>The duration of the animation can vary by up to this amount. Variation will never decrease the length of the animation to less than 0.</source>
          <target state="translated">动画的持续时间最多可以改变这个数量。变化绝不会使动画的长度减少到小于0。</target>
        </trans-unit>
        <trans-unit id="9d84c6483548ac539fcb530a8d59a660eb020e47" translate="yes" xml:space="preserve">
          <source>The duration of the animation for the chart.</source>
          <target state="translated">图表动画的持续时间。</target>
        </trans-unit>
        <trans-unit id="456dc9e02380c230fd17c3c5b7186e9689df5be5" translate="yes" xml:space="preserve">
          <source>The duration of the pause. The duration should not be negative. The default duration is 250 milliseconds.</source>
          <target state="translated">暂停的持续时间。暂停时间不应该是负数,默认为250毫秒。默认持续时间为250毫秒。</target>
        </trans-unit>
        <trans-unit id="8b5aabebe254a351963b72e65d005327e775851e" translate="yes" xml:space="preserve">
          <source>The dynamic loading has a significant impact on applications that contain native OpenGL calls: they may fail to link since &lt;code&gt;qmake&lt;/code&gt; no longer automatically adds opengl32.lib or libGLESv2.lib. Instead, applications are expected to use the OpenGL functions via the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; class. Thus the direct dependency on the OpenGL library is removed and all calls will be routed during runtime to the implementation chosen by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b5f9ecb09873e06f97d8b5dd1abeff4757a9a6" translate="yes" xml:space="preserve">
          <source>The dynamicRoles property must be set before any data is added to the &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;, and must be set from the main thread.</source>
          <target state="translated">必须在将任何数据添加到&lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;之前设置dynamicRoles属性，并且必须从主线程进行设置。</target>
        </trans-unit>
        <trans-unit id="e56968fbb2e48ffec755421aab2b5bf80ed7dd98" translate="yes" xml:space="preserve">
          <source>The earlier parts of this year are representable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0504adaee01060d45939a1ff0bc8fc38723467" translate="yes" xml:space="preserve">
          <source>The earliest date that this calendar will accept.</source>
          <target state="translated">本日历所能接受的最早日期。</target>
        </trans-unit>
        <trans-unit id="67dc76994fdc3cf0629b3c3dbdce471ae71b4e69" translate="yes" xml:space="preserve">
          <source>The easiest fix is to repeat the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; for both Behaviors. If the repeated animation is rather complex, you might also consider creating a custom animation component and assigning an instance to each Behavior, for example:</source>
          <target state="translated">最简单的解决方法是对两种行为都重复&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;。如果重复的动画非常复杂，则您还可以考虑创建一个自定义动画组件，并为每个Behavior分配一个实例，例如：</target>
        </trans-unit>
        <trans-unit id="ce121ec7546bf7ea67d58453a0f532e9dc71cd00" translate="yes" xml:space="preserve">
          <source>The easiest pattern of use for this class is to create a reader instance, define an input source, specify the handlers to be used by the reader, and parse the data.</source>
          <target state="translated">这个类最简单的使用模式是创建一个阅读器实例,定义一个输入源,指定阅读器要使用的处理程序,并解析数据。</target>
        </trans-unit>
        <trans-unit id="f688f29bac10071922fddde4d0501c8d3486c859" translate="yes" xml:space="preserve">
          <source>The easiest way to create a &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; is to use one of the convenience classes, e.g. &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; (for &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Horizontal&lt;/a&gt; boxes) or &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt; (for &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt; boxes). You can also use the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; constructor directly, specifying its direction as &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;LeftToRight&lt;/a&gt;, &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;RightToLeft&lt;/a&gt;, &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;TopToBottom&lt;/a&gt;, or &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;BottomToTop&lt;/a&gt;.</source>
          <target state="translated">创建&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;的最简单方法是使用便利类之一，例如&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;（用于&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Horizo​​ntal&lt;/a&gt;框）或&lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;（用于&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Vertical&lt;/a&gt;框）。您还可以直接使用&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;构造函数，将其方向指定为&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;LeftToRight&lt;/a&gt;，&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;RightToLeft&lt;/a&gt;，&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;TopToBottom&lt;/a&gt;或&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;BottomToTop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b699c7488124272397fa6df209dcad757917fd72" translate="yes" xml:space="preserve">
          <source>The easiest way to create a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt; is to use the static functions.</source>
          <target state="translated">创建&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;的最简单方法是使用静态函数。</target>
        </trans-unit>
        <trans-unit id="a2561689745cacd6ae429b059c32d33a097d1911" translate="yes" xml:space="preserve">
          <source>The easiest way to create a QBoxLayout is to use one of the convenience classes, e.g. &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; (for &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Horizontal&lt;/a&gt; boxes) or &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt; (for &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt; boxes). You can also use the QBoxLayout constructor directly, specifying its direction as &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;LeftToRight&lt;/a&gt;, &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;RightToLeft&lt;/a&gt;, &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;TopToBottom&lt;/a&gt;, or &lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;BottomToTop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca4714d94668a43c7409c0eceb83b42cdf6f239" translate="yes" xml:space="preserve">
          <source>The easiest way to create a QFileDialog is to use the static functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4e495584cdccfcb090c45a60446ee3adacdb85" translate="yes" xml:space="preserve">
          <source>The easiest way to demonstrate this is with inline sub-components whose component scopes are implicitly scoped as children of the outer component.</source>
          <target state="translated">最简单的方法是用内联子组件来证明这一点,它的组件作用域被隐式地限定为外部组件的子组件。</target>
        </trans-unit>
        <trans-unit id="33a28c04e92ff76710ecba7b18e72730e9dad8ae" translate="yes" xml:space="preserve">
          <source>The easiest way to develop with Qt for Android is to use &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-developing-android.html&quot;&gt;Qt Creator&lt;/a&gt;. When you apply a &lt;b&gt;Qt for Android Kit&lt;/b&gt; to a Qt Creator project, it will create and maintain a set of files which are required to make your application run on Android.</source>
          <target state="translated">使用Qt for Android开发的最简单方法是使用&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-developing-android.html&quot;&gt;Qt Creator&lt;/a&gt;。当您将&lt;b&gt;Qt for Android Kit&lt;/b&gt;应用于Qt Creator项目时，它将创建并维护一组文件，这些文件使您的应用程序在Android上运行。</target>
        </trans-unit>
        <trans-unit id="bea8ec6fa28358825c22dfea35f1d9a1945e2e32" translate="yes" xml:space="preserve">
          <source>The easiest way to develop with Qt for Android is to use &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-developing-android.html&quot;&gt;Qt Creator&lt;/a&gt;. When you use an &lt;b&gt;Android Kit&lt;/b&gt; with a Qt Creator project, it builds your code in addition to some Android specific files that are required for enabling Qt on Android and generating your application bundle. Qt Creator adds these files in a subdirectory of your project called &lt;b&gt;android&lt;/b&gt;. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/deployment-android.html#android-package-templates&quot;&gt;Android Package Templates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605485c092e17cb0dbbef139f520fc8dd62fb621" translate="yes" xml:space="preserve">
          <source>The easiest way to give your widgets a good layout is to use the built-in layout managers: &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;, &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;, &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;, and &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;. These classes inherit from &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;, which in turn derives from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (not &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;). They take care of geometry management for a set of widgets. To create more complex layouts, you can nest layout managers inside each other.</source>
          <target state="translated">为小部件提供良好布局的最简单方法是使用内置布局管理器：&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;，&lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;，&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;和&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;。这些类继承自&lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;，而QLayout继承自&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;（不是&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;）。他们负责一组小部件的几何管理。要创建更复杂的布局，可以将布局管理器相互嵌套。</target>
        </trans-unit>
        <trans-unit id="799a31cf917ffea4fa9133bc82ef805ef09db4a8" translate="yes" xml:space="preserve">
          <source>The easiest way to render SVG files is to construct a &lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt; and load an SVG file using one of the &lt;a href=&quot;qsvgwidget#load&quot;&gt;QSvgWidget::load&lt;/a&gt;() functions.</source>
          <target state="translated">呈现SVG文件的最简单方法是构造&lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt;并使用&lt;a href=&quot;qsvgwidget#load&quot;&gt;QSvgWidget :: load&lt;/a&gt;（）函数之一加载SVG文件。</target>
        </trans-unit>
        <trans-unit id="7ef96463dff7dfe72f0a2dc0024c477da18d55b7" translate="yes" xml:space="preserve">
          <source>The easiest way to set up the labels for each section is to supply a string list. For more sophisticated headers, you can construct a tree item, decorate it as you wish, and use that as the tree widget's header.</source>
          <target state="translated">为每个部分设置标签的最简单方法是提供一个字符串列表。对于更复杂的标题,你可以构造一个树项目,按照你的意愿装饰它,并将其用作树小组件的标题。</target>
        </trans-unit>
        <trans-unit id="175b8e781c37bbfd01dcb82e0dcb33d47639e99e" translate="yes" xml:space="preserve">
          <source>The easiest way to use a rich text document is through the &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; class, providing an editable view onto a document. The code below imports HTML into a document, and displays the document using a text edit widget.</source>
          <target state="translated">使用富文本文档的最简单方法是通过&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;类，从而在文档上提供可编辑的视图。下面的代码将HTML导入到文档中，并使用文本编辑小部件显示该文档。</target>
        </trans-unit>
        <trans-unit id="d19137dbf38538c7ddd1d84ae9ef7d52782969ba" translate="yes" xml:space="preserve">
          <source>The easiest way to use these models is to use them in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; as illustrated by the following code snippet:</source>
          <target state="translated">使用这些模型的最简单方法是在&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView中&lt;/a&gt;使用它们，如以下代码片段所示：</target>
        </trans-unit>
        <trans-unit id="30f9f042ca15a05c7397f8e86b0201a1a8f03c4d" translate="yes" xml:space="preserve">
          <source>The easing curve attached to the keyframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872e6360ba6a2e340f30f1ff25c5b097febdf2f0" translate="yes" xml:space="preserve">
          <source>The easing curve is used with the interpolator, the &lt;a href=&quot;qvariantanimation#interpolated&quot;&gt;interpolated&lt;/a&gt;() virtual function, and the animation's duration to control how the current value changes as the animation progresses.</source>
          <target state="translated">缓动曲线与插值器，&lt;a href=&quot;qvariantanimation#interpolated&quot;&gt;interpolated&lt;/a&gt;（）虚拟函数以及动画的持续时间一起使用，以控制当前值如何随着动画的进行而变化。</target>
        </trans-unit>
        <trans-unit id="d160fa972a58d157099e64d468439137d704bcd3" translate="yes" xml:space="preserve">
          <source>The easing curve of the animation for the chart.</source>
          <target state="translated">图的动画的缓和曲线。</target>
        </trans-unit>
        <trans-unit id="667b0aa1a1121d637aa16aa6b14b66018b34f8de" translate="yes" xml:space="preserve">
          <source>The echo mode determines how the text entered in the line edit is displayed (or echoed) to the user.</source>
          <target state="translated">回声模式决定了在行编辑中输入的文本如何显示(或回声)给用户。</target>
        </trans-unit>
        <trans-unit id="aece8dbc10d278d7f33287914d05735ca10082ab" translate="yes" xml:space="preserve">
          <source>The echoserver example implements a WebSocket server that echoes back everything that is sent to it.</source>
          <target state="translated">echoserver 示例实现了一个 WebSocket 服务器,该服务器会回传发送到它的所有内容。</target>
        </trans-unit>
        <trans-unit id="4d4ea539db7142d8d339377ac47f940e47deae58" translate="yes" xml:space="preserve">
          <source>The edge keyframe value is used.</source>
          <target state="translated">使用的是边缘关键帧值。</target>
        </trans-unit>
        <trans-unit id="373ec8bdd6f1dd4cde03dba3743c98b6e961c360" translate="yes" xml:space="preserve">
          <source>The edges of geometry are super-sampled, resulting in smoother silhouettes. This technique has no effect on the materials inside geometry, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e9a0822d42d74bfbf1ba01dc09d33390b6b4b0" translate="yes" xml:space="preserve">
          <source>The editor must provide a user property that will contain the editing data. The property is used by &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;s to set and retrieve the data (using Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt;). You set the user property with the USER keyword:</source>
          <target state="translated">编辑器必须提供将包含编辑数据的用户属性。&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; s 使用该属性来设置和检索数据（使用Qt的&lt;a href=&quot;metaobjects&quot;&gt;元对象系统&lt;/a&gt;）。您可以使用USER关键字设置用户属性：</target>
        </trans-unit>
        <trans-unit id="dc578d62a7d7e6034ed6e11177fe2eb7412b6e3a" translate="yes" xml:space="preserve">
          <source>The editorial's textual description of the place. It can be either rich (HTML based) text or plain text depending upon the provider.</source>
          <target state="translated">小编对这个地方的文字描述。它可以是丰富的(基于HTML的)文本,也可以是纯文本,这取决于提供者。</target>
        </trans-unit>
        <trans-unit id="be518bea5fbdd93bfa5dae15e3850099f08052f7" translate="yes" xml:space="preserve">
          <source>The effect is installed on a source.</source>
          <target state="translated">效果安装在一个源头上。</target>
        </trans-unit>
        <trans-unit id="8286b65ddbfa6d79723b03c678dc66832f006957" translate="yes" xml:space="preserve">
          <source>The effect is similar to what happens when a colorized glass is put on top of a grayscale image. Colorize uses the hue, saturation, and lightness (HSL) color space. You can specify a desired value for each property. You can shift all HSL values with the &lt;a href=&quot;qml-qtgraphicaleffects-huesaturation&quot;&gt;HueSaturation&lt;/a&gt; effect.</source>
          <target state="translated">该效果类似于将彩色玻璃放在灰度图像顶部时发生的情况。Colorize使用色相，饱和度和亮度（HSL）颜色空间。您可以为每个属性指定所需的值。您可以使用&lt;a href=&quot;qml-qtgraphicaleffects-huesaturation&quot;&gt;HueSaturation&lt;/a&gt;效果移动所有HSL值。</target>
        </trans-unit>
        <trans-unit id="42a2545d92a14cfb7a96f12e8bbc9e4f54802f49" translate="yes" xml:space="preserve">
          <source>The effect is similar to what happens when a colorized glass is put on top of a grayscale image. The color for the overlay is given in the RGBA format.</source>
          <target state="translated">这种效果类似于在灰度图像上放置一个彩色玻璃时的效果。叠加的颜色是以RGBA格式给出的。</target>
        </trans-unit>
        <trans-unit id="a7d08caa39a215207de3e401c953432f9342e0eb" translate="yes" xml:space="preserve">
          <source>The effect is typically a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; component, although any &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; component can be assigned. The effect should have a source texture property with a name matching &lt;a href=&quot;qml-qtquick-item#layer.samplerName-prop&quot;&gt;layer.samplerName&lt;/a&gt;.</source>
          <target state="translated">该效果通常是一个&lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;组件，尽管可以分配任何&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;组件。该效果应具有名称纹理&lt;a href=&quot;qml-qtquick-item#layer.samplerName-prop&quot;&gt;layer_samplerName&lt;/a&gt;匹配的源纹理属性。</target>
        </trans-unit>
        <trans-unit id="042fd97282f6b9344c23639be7e0a9c046423764" translate="yes" xml:space="preserve">
          <source>The effect is uninstalled on a source.</source>
          <target state="translated">效果是在源头上卸载的。</target>
        </trans-unit>
        <trans-unit id="1333493083fe29dc69664c49833b6f8b23892db5" translate="yes" xml:space="preserve">
          <source>The effect may vary between input method implementations.</source>
          <target state="translated">不同的输入法实施例的效果可能不同。</target>
        </trans-unit>
        <trans-unit id="51933cb0551642e2d32b041a7a76441fb9879c7b" translate="yes" xml:space="preserve">
          <source>The effect of an import applies to every property binding, and JavaScript function in the QML document, even those in nested inline components. The following example shows a simple QML file that accesses some enumeration values and calls an imported JavaScript function.</source>
          <target state="translated">导入的效果适用于QML文档中的每一个属性绑定和JavaScript函数,即使是那些嵌套的内联组件。下面的例子显示了一个简单的QML文件,它访问一些枚举值并调用一个导入的JavaScript函数。</target>
        </trans-unit>
        <trans-unit id="9deecb59803979852e322379b21e3fad77d804ea" translate="yes" xml:space="preserve">
          <source>The effect of the</source>
          <target state="translated">的影响。</target>
        </trans-unit>
        <trans-unit id="c36798066c562145ad388ab99c4e6f2a9fe413da" translate="yes" xml:space="preserve">
          <source>The effect of this function is undefined when the pixmap is being painted on.</source>
          <target state="translated">当pixmap正在被绘制时,这个函数的效果没有定义。</target>
        </trans-unit>
        <trans-unit id="7c2f5b370763f15d26cbd9e0e953cc81a9cc4cb6" translate="yes" xml:space="preserve">
          <source>The effect of this is that if project C depends on library B which depends on library A privately, but C also wants to use symbols from A directly, it needs to link to A explicitly. Put differently, libraries linked privately are not exposed transitively at build time.</source>
          <target state="translated">这样做的效果是,如果项目C依赖于库B,而库B私下依赖于库A,但C也想直接使用A的符号,就需要显式链接到A。换句话说,私自链接的库在构建时是不会被中转暴露的。</target>
        </trans-unit>
        <trans-unit id="fbc5844345acfd1b2b95e6b4269e4941eec6cff0" translate="yes" xml:space="preserve">
          <source>The effect varies from flag to flag; see the &lt;a href=&quot;qgraphicsview#OptimizationFlag-enum&quot;&gt;OptimizationFlags&lt;/a&gt; documentation for details.</source>
          <target state="translated">效果因标志而异；有关详细信息，请参见&lt;a href=&quot;qgraphicsview#OptimizationFlag-enum&quot;&gt;OptimizationFlags&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="f1e063d521f36f4024111a36ffabd7ddc2cdb6d1" translate="yes" xml:space="preserve">
          <source>The effective opacity can be retrieved with &lt;a href=&quot;qsgrendernode#inheritedOpacity&quot;&gt;inheritedOpacity&lt;/a&gt;().</source>
          <target state="translated">可以使用&lt;a href=&quot;qsgrendernode#inheritedOpacity&quot;&gt;InheritedOpacity&lt;/a&gt;（）来检索有效不透明度。</target>
        </trans-unit>
        <trans-unit id="b9fa2141e62a18864fb7cbcb1f566e69fc4b7c26" translate="yes" xml:space="preserve">
          <source>The effective value for the key weight will be 160. For the sake of the example, we add another key which specifies a custom key weight:</source>
          <target state="translated">密钥权重的有效值将是160。在本例中,我们添加了另一个键,指定了自定义键的权重。</target>
        </trans-unit>
        <trans-unit id="88677848f0dd425f669c2242bf42fe7465c0f597" translate="yes" xml:space="preserve">
          <source>The element selected in the graph.</source>
          <target state="translated">图中选择的元素。</target>
        </trans-unit>
        <trans-unit id="181c054ed87af7cca7d92d4d5622788ed2240b43" translate="yes" xml:space="preserve">
          <source>The element tree contains the primitive, control, and complex style elements. By doing a top-down traversal of the element tree, you get the sequence in which the elements should be drawn. In the nodes, we have written the sub element rectangles, sub control elements, and pixel metrics that should be considered when drawing the element of the node.</source>
          <target state="translated">元素树包含了基元、控制和复杂的样式元素,通过对元素树进行自上而下的遍历,可以得到元素的绘制顺序。通过对元素树进行自上而下的遍历,可以得到元素的绘制顺序。在节点中,我们写了绘制该节点元素时应该考虑的子元素矩形、子控制元素和像素指标。</target>
        </trans-unit>
        <trans-unit id="aa8fef5ba7c2b16f22e7618b2dd6b470887da4d9" translate="yes" xml:space="preserve">
          <source>The elements are automatically initialized with a &lt;a href=&quot;containers#default-constructed-value&quot;&gt;default-constructed value&lt;/a&gt;. If you want to initialize the vector with a different value, pass that value as the second argument to the constructor:</source>
          <target state="translated">元素会使用&lt;a href=&quot;containers#default-constructed-value&quot;&gt;默认构造的值&lt;/a&gt;自动初始化。如果要使用其他值初始化向量，请将该值作为第二个参数传递给构造函数：</target>
        </trans-unit>
        <trans-unit id="edfe7233f9321164f6e7354d13a0f62819166638" translate="yes" xml:space="preserve">
          <source>The elements are initialized with a &lt;a href=&quot;containers#default-constructed-value&quot;&gt;default-constructed value&lt;/a&gt;.</source>
          <target state="translated">元素使用&lt;a href=&quot;containers#default-constructed-value&quot;&gt;默认构造的值&lt;/a&gt;初始化。</target>
        </trans-unit>
        <trans-unit id="f9389c3ba96d5781daf017e52413989b5e67a2bc" translate="yes" xml:space="preserve">
          <source>The elevation of the satellite, in degrees.</source>
          <target state="translated">卫星的高度,以度为单位。</target>
        </trans-unit>
        <trans-unit id="3d13156e0919cfb854502c994e56a579cb77c2a4" translate="yes" xml:space="preserve">
          <source>The elide mark follows the &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;layoutdirection&lt;/a&gt;. For example, it will be on the right side of the text for right-to-left layouts if the</source>
          <target state="translated">&lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;省略号&lt;/a&gt;遵循布局方向。例如，如果从右到左布局，则它将在文本的右侧。</target>
        </trans-unit>
        <trans-unit id="c1fcfc1a0199209bf57052c025e569c5926892e5" translate="yes" xml:space="preserve">
          <source>The ellipse is composed of a clockwise curve, starting and finishing at zero degrees (the 3 o'clock position).</source>
          <target state="translated">椭圆是由一条顺时针方向的曲线组成,起点和终点都是零度(3点钟的位置)。</target>
        </trans-unit>
        <trans-unit id="c6ab0aa584df247f5d378d1f252993e18a54302b" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the beginning of the text.</source>
          <target state="translated">省略号应出现在文本的开头。</target>
        </trans-unit>
        <trans-unit id="fa30930b8e93aa8e8cfa6132ecb27a1c119ec948" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the end of the text.</source>
          <target state="translated">省略号应出现在文末。</target>
        </trans-unit>
        <trans-unit id="402bdfd72e13146c9556ad7dbf39e7149865ad37" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear in the middle of the text.</source>
          <target state="translated">省略号应出现在文本的中间。</target>
        </trans-unit>
        <trans-unit id="2d4c3c4e3a557d3e1e2beab56b83aa7539cc2eac" translate="yes" xml:space="preserve">
          <source>The email address associated with the certificate</source>
          <target state="translated">与证书相关的电子邮件地址</target>
        </trans-unit>
        <trans-unit id="109c2b9e13da9bdc75da327a085a3d24e6276ff7" translate="yes" xml:space="preserve">
          <source>The embedded widget overrides the proxy widget cursor. The proxy cursor changes depending on which embedded subwidget is currently under the mouse.</source>
          <target state="translated">嵌入的小组件会覆盖代理小组件的光标。代理游标的变化取决于当前鼠标下的嵌入式子部件。</target>
        </trans-unit>
        <trans-unit id="424d034c77252bbd57638923e38806846cb0fafb" translate="yes" xml:space="preserve">
          <source>The emissive aluminum material has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2e647ded51f54976067aa33b478e44993d0558" translate="yes" xml:space="preserve">
          <source>The emissive texture map mask. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive_mask.png&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec4815c32e8303758531c9b2d970953670e77c3" translate="yes" xml:space="preserve">
          <source>The emissive texture map. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive.png&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1840aa46fa7aba16b36afa1909f346a93f9dc9fa" translate="yes" xml:space="preserve">
          <source>The empty area of a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;的空白区域。</target>
        </trans-unit>
        <trans-unit id="2d498004ce85cdff2f5439a8d34aed0178c79c4e" translate="yes" xml:space="preserve">
          <source>The empty area of the menu.</source>
          <target state="translated">菜单的空白区域。</target>
        </trans-unit>
        <trans-unit id="a8af533b61b8623da90303095e6d0a59eacab10a" translate="yes" xml:space="preserve">
          <source>The empty label is the topmost element in the list of commands, which represents the state of the document before any commands were pushed on the stack. The default is the string &quot;&amp;lt;empty&amp;gt;&quot;.</source>
          <target state="translated">空标签是命令列表中最顶层的元素，它表示将任何命令压入堆栈之前的文档状态。默认值为字符串&amp;ldquo; &amp;lt;empty&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="95040e66f6b6b73c02518e0f5efd586f639f8bc2" translate="yes" xml:space="preserve">
          <source>The enabled state of the group affects the enabled state of each item in the group, except that explicitly disabled items are not enabled even if the group is enabled.</source>
          <target state="translated">组的启用状态会影响组中每个项目的启用状态,只是即使组被启用,显式禁用的项目也不会被启用。</target>
        </trans-unit>
        <trans-unit id="e6b9007fd7edd59e6489381c651cb939d2d296bc" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the &lt;b&gt;Next&lt;/b&gt; and/or &lt;b&gt;Finish&lt;/b&gt; buttons is one way to perform validation on the user input. Another way is to reimplement &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt;() (or &lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage::validatePage&lt;/a&gt;()) to perform some last-minute validation (and show an error message if the user has entered incomplete or invalid information). If the function returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">&amp;ldquo; &lt;b&gt;下一步&amp;rdquo;&lt;/b&gt;和/或&amp;ldquo; &lt;b&gt;完成&amp;rdquo;&lt;/b&gt;按钮的启用/禁用状态是对用户输入执行验证的一种方法。另一种方法是重新实现&lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt;（）（或&lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage :: validatePage&lt;/a&gt;（））以执行最后一刻的验证（如果用户输入的信息不完整或无效，则显示错误消息）。如果该函数返回 &lt;code&gt;true&lt;/code&gt; ，则显示下一页（或向导完成）；否则，该页面结束。否则，当前页面会停留。</target>
        </trans-unit>
        <trans-unit id="3e761359f054baf5c8fdc120e80fed770d442164" translate="yes" xml:space="preserve">
          <source>The encoded query string can be obtained again using &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(). This will take all the internally-stored items and encode the string using the delimiters.</source>
          <target state="translated">可以使用&lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;（）再次获取编码后的查询字符串。这将采用所有内部存储的项目，并使用定界符对字符串进行编码。</target>
        </trans-unit>
        <trans-unit id="9d984263fdcc8872be7fd2f2ad554ba506344cc5" translate="yes" xml:space="preserve">
          <source>The encoder converts Unicode into another format, remembering any state that is required between calls.</source>
          <target state="translated">编码器将Unicode转换为另一种格式,记住调用之间需要的任何状态。</target>
        </trans-unit>
        <trans-unit id="05fae25d52fe683cca6b42fc8a9b778368cf6f62" translate="yes" xml:space="preserve">
          <source>The encoding information is stored in the initial xml tag which gets written when you call &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;(). Call this function before calling &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;().</source>
          <target state="translated">编码信息存储在初始xml标记中，该标记在您调用&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;（）时写入。在调用&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;（）之前先调用此函数。</target>
        </trans-unit>
        <trans-unit id="e67420893a9aab0625964b83512548335bd3f51f" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">编码是从&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;获取的。</target>
        </trans-unit>
        <trans-unit id="8e15a940567cdf980267aefde0fe4fd8803f54dd" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the document.</source>
          <target state="translated">编码是从文档中获取的。</target>
        </trans-unit>
        <trans-unit id="661f34dcb7a353a52aa7e655afabd9787338bf87" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea020eb7c7c084118f2cfced41342079d7879e4" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="translated">所述的编码&lt;a href=&quot;xmlprocessing#&quot;&gt;的XQuery&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="5b893fa7e4511862e9b68ac0c0e0d73de501df64" translate="yes" xml:space="preserve">
          <source>The encoding options from &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOption&lt;/a&gt; don't make much sense for this method, nor does &lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl::PreferLocalFile&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: ComponentFormattingOption&lt;/a&gt;的编码选项对该方法没有多大意义，而&lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl :: PreferLocalFile&lt;/a&gt;也没有意义。</target>
        </trans-unit>
        <trans-unit id="62a178bf3b8d6341baebd9d47e478445a364d0a1" translate="yes" xml:space="preserve">
          <source>The end of the device data is detected.</source>
          <target state="translated">检测到设备数据的结束。</target>
        </trans-unit>
        <trans-unit id="0c6edc9ab8e6291c45a61685222951963ab772bc" translate="yes" xml:space="preserve">
          <source>The end of the input stream was unexpectedly reached while processing an element.</source>
          <target state="translated">在处理一个元素时,意外地到达了输入流的终点。</target>
        </trans-unit>
        <trans-unit id="df0f70dd44eaaec3d9ac90200a9c283c2186011b" translate="yes" xml:space="preserve">
          <source>The end of the timeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8d0d7049c4ff8ea50271ca8ae32cb76da4f40a" translate="yes" xml:space="preserve">
          <source>The end position of the display text for a hypertext link has changed.</source>
          <target state="translated">超文本链接的显示文字的结束位置已经改变。</target>
        </trans-unit>
        <trans-unit id="3247f67cf3bc0f249c493ff7c60e4b0dc582d980" translate="yes" xml:space="preserve">
          <source>The end result:</source>
          <target state="translated">最终的结果。</target>
        </trans-unit>
        <trans-unit id="f93cd9e10ee38e8343575bc3472e2e9e55624ace" translate="yes" xml:space="preserve">
          <source>The endianness of the image. Certain image formats can be stored as BigEndian or LittleEndian. A handler that supports Endianness uses the value of this option to determine how the image should be stored.</source>
          <target state="translated">图像的endianness。某些图像格式可以存储为BigEndian或LittleEndian。支持 Endianness 的处理程序使用此选项的值来决定图像的存储方式。</target>
        </trans-unit>
        <trans-unit id="bad04f573d7f9a9088e6c60308d3a6dafa6b9bcc" translate="yes" xml:space="preserve">
          <source>The ending angle of the pie.</source>
          <target state="translated">派的结局角度。</target>
        </trans-unit>
        <trans-unit id="02e16ccdfe04a16295ef1401736157039b47ec90" translate="yes" xml:space="preserve">
          <source>The ending location, in pixels from the upper-left corner of the page, from which to find selected text. This can be bound to the &lt;code&gt;centroid.position&lt;/code&gt; of a &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; to end selection of text at the position where the user is currently dragging the mouse, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90622ba6b1a39f2a360f9bec3029564299aefc5" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Once a class is registered as a QML type, it can be used as a data type for exchanging data between QML and C++. See &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;Registering C++ types with the QML type system&lt;/a&gt; for further details on type registration.</source>
          <target state="translated">该引擎允许实例化和非实例化类型的注册。一旦将一个类注册为QML类型，就可以将其用作在QML和C ++之间交换数据的数据类型。有关类型注册的更多详细信息，请参见&lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;在QML类型系统中注册C ++类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="720139e6ac703c3043f5d959258cd9a45414c4f9" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Registering an instantiable type enables a C++ class to be used as the definition of a QML object type, allowing it to be used in object declarations from QML code to create objects of this type. Registration also provides the engine with additional type metadata, enabling the type (and any enums declared by the class) to be used as a data type for property values, method parameters and return values, and signal parameters that are exchanged between QML and C++.</source>
          <target state="translated">该引擎允许注册可实例化和不可实例化类型。注册一个可实例化的类型可以使一个C++类被用作QML对象类型的定义,允许它在QML代码的对象声明中被用于创建该类型的对象。注册还为引擎提供了额外的类型元数据,使该类型(以及该类声明的任何枚举)能够作为QML和C++之间交换的属性值、方法参数和返回值以及信号参数的数据类型。</target>
        </trans-unit>
        <trans-unit id="51d863387a04e972ffcd5d6d2784f77dbf76557c" translate="yes" xml:space="preserve">
          <source>The engine behavior can be further tweaked by using the inherited methods from &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="translated">可以通过使用&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;的继承方法来进一步调整引擎行为。</target>
        </trans-unit>
        <trans-unit id="cfc8c4dcd154899362805dd36fc1c185de8b1d33" translate="yes" xml:space="preserve">
          <source>The engine can alpha blend primitives.</source>
          <target state="translated">引擎可以alpha混合基元。</target>
        </trans-unit>
        <trans-unit id="c7804cedb9d0d97075666543a2a21b7f25fd044b" translate="yes" xml:space="preserve">
          <source>The engine can transform pixmaps, including rotation and shearing.</source>
          <target state="translated">该引擎可以转换像素图,包括旋转和剪切。</target>
        </trans-unit>
        <trans-unit id="a2054896ebe86335faca2aa5407e39419c85cd10" translate="yes" xml:space="preserve">
          <source>The engine can use antialising to improve the appearance of rendered primitives.</source>
          <target state="translated">引擎可以使用抗锯齿来改善渲染基元的外观。</target>
        </trans-unit>
        <trans-unit id="1366a5920352a5b477d36518b3915e820778f5a3" translate="yes" xml:space="preserve">
          <source>The engine has native support for gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::ObjectBoundingMode&lt;/a&gt;. Otherwise, if QPaintEngine::PatternTransform is supported, object bounding mode gradients are converted to gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::LogicalMode&lt;/a&gt; and a brush transform for the coordinate mapping.</source>
          <target state="translated">该引擎对坐标模式为&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: ObjectBoundingMode的&lt;/a&gt;渐变具有本机支持。否则，如果支持QPaintEngine :: PatternTransform，则将对象边界模式渐变转换为具有坐标模式&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: LogicalMode&lt;/a&gt;和用于坐标映射的画笔变换的渐变。</target>
        </trans-unit>
        <trans-unit id="1f19e23cff640288b5fd681bc6e3de50c2881d45" translate="yes" xml:space="preserve">
          <source>The engine has path support.</source>
          <target state="translated">引擎有路径支持。</target>
        </trans-unit>
        <trans-unit id="7544e249c01a8bb51b7adba13492dd21c2084354" translate="yes" xml:space="preserve">
          <source>The engine has support for performing perspective transformations on primitives.</source>
          <target state="translated">该引擎支持在基元上执行透视转换。</target>
        </trans-unit>
        <trans-unit id="aa8edcfaa325e6b34cc91845dd06f9d610179e43" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming brush patterns.</source>
          <target state="translated">该引擎支持转换画笔模式。</target>
        </trans-unit>
        <trans-unit id="2002e317c350cbc01793a8304d2cd49afc1a825e" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming drawing primitives.</source>
          <target state="translated">该引擎支持转换绘图基元。</target>
        </trans-unit>
        <trans-unit id="ddb881e11767e2fede628fcb54feecbae516a838" translate="yes" xml:space="preserve">
          <source>The engine is capable of painting outside of paint events.</source>
          <target state="translated">引擎能够在油漆事件之外进行涂装。</target>
        </trans-unit>
        <trans-unit id="00164342113ddf2cd8b998d5e81afc937ea0aebb" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes that has a texture with an alpha channel or a mask.</source>
          <target state="translated">引擎能够渲染具有alpha通道或遮罩的纹理的笔刷。</target>
        </trans-unit>
        <trans-unit id="1d0001750fbd738e633b7a10463c5dc04363b945" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes with the brush patterns specified in &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;.</source>
          <target state="translated">引擎能够使用&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyle中&lt;/a&gt;指定的画笔图案渲染画笔。</target>
        </trans-unit>
        <trans-unit id="99d00682fb052e82177021b0ec567cd923b23a28" translate="yes" xml:space="preserve">
          <source>The engine supports Porter-Duff operations</source>
          <target state="translated">发动机支持波特-达夫操作</target>
        </trans-unit>
        <trans-unit id="87ded81b061b2946f13287d597756e46943c9084" translate="yes" xml:space="preserve">
          <source>The engine supports bitwise raster operations.</source>
          <target state="translated">引擎支持位面光栅操作。</target>
        </trans-unit>
        <trans-unit id="65bb85077b4d6fa1dccb275571cafc4af1db315b" translate="yes" xml:space="preserve">
          <source>The engine supports blending modes.</source>
          <target state="translated">引擎支持混合模式。</target>
        </trans-unit>
        <trans-unit id="fc9b4b46a13d3128c545d2a4e7c259c86fad03a2" translate="yes" xml:space="preserve">
          <source>The engine supports conical gradient fills.</source>
          <target state="translated">引擎支持锥形渐变填充。</target>
        </trans-unit>
        <trans-unit id="506bfc270bf86930ca3dcefd249379c64e9cc7f8" translate="yes" xml:space="preserve">
          <source>The engine supports drawing strokes that contain brushes as fills, not just solid colors (e.g. a dashed gradient line of width 2).</source>
          <target state="translated">引擎支持绘制包含笔刷作为填充的笔触,而不仅仅是纯色(例如宽度为2的虚线渐变线)。</target>
        </trans-unit>
        <trans-unit id="0998fa11cfa09716b0e03b4c9a80580c38d06385" translate="yes" xml:space="preserve">
          <source>The engine supports linear gradient fills.</source>
          <target state="translated">引擎支持线性渐变填充。</target>
        </trans-unit>
        <trans-unit id="376be70242c7b62769dc21e8a2f1d6b4314e3bf6" translate="yes" xml:space="preserve">
          <source>The engine supports radial gradient fills.</source>
          <target state="translated">引擎支持径向渐变填充。</target>
        </trans-unit>
        <trans-unit id="ce76db00f5bcaa85ee59925df635704a8e8bd985" translate="yes" xml:space="preserve">
          <source>The engine supports the feature provided by &lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter::setOpacity&lt;/a&gt;().</source>
          <target state="translated">该引擎支持&lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter :: setOpacity&lt;/a&gt;（）提供的功能。</target>
        </trans-unit>
        <trans-unit id="fcbe868d6c9bb17053d1fe53e54b994792f0764f" translate="yes" xml:space="preserve">
          <source>The entire byte array is returned if</source>
          <target state="translated">整个字节数组被返回,如果</target>
        </trans-unit>
        <trans-unit id="44dd94095c084496acc266bb75cddef50c586e15" translate="yes" xml:space="preserve">
          <source>The entire content of the document is set with &lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt;(). This function parses the string it is passed as an XML document and creates the DOM tree that represents the document. The root element is available using &lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt;(). The textual representation of the document can be obtained using &lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt;().</source>
          <target state="translated">使用&lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt;（）设置文档的全部内容。此函数解析作为XML文档传递的字符串，并创建表示该文档的DOM树。可以使用&lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt;（）获得根元素。可以使用&lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt;（）获得文档的文本表示形式。</target>
        </trans-unit>
        <trans-unit id="166ba4bdb552f1e9af70d535181f424010e63e3c" translate="yes" xml:space="preserve">
          <source>The entire path to be navigated.</source>
          <target state="translated">要导航的整个路径。</target>
        </trans-unit>
        <trans-unit id="0981124fa2317c1d56882ff4e369f2d3be8d39fc" translate="yes" xml:space="preserve">
          <source>The entire string is returned if</source>
          <target state="translated">整个字符串被返回,如果</target>
        </trans-unit>
        <trans-unit id="aedbd873cf1161c1f33e4eba05fa5f12907cd49f" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">可以将使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt;的实体与类型相关联，以实现与项目的交互。如果实体具有&lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt;组件，则来自该选择器的选择事件将发送到&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D，&lt;/a&gt;并转换为鼠标事件，最后发送到该项目。</target>
        </trans-unit>
        <trans-unit id="530504d4e52a8143b9fae1d68c4c2800946a2374" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">可以将使用&lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt;的实体与该类相关联，以实现与项目的交互。如果实体具有&lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt;组件，则来自该选择器的选择事件将发送到&lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D，&lt;/a&gt;并转换为鼠标事件，最后发送到该项目。</target>
        </trans-unit>
        <trans-unit id="1608dfbfd1c511c0d48f4bade18ca3a555b16e60" translate="yes" xml:space="preserve">
          <source>The entities using the QScene2D can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the QScene2D and converted to mouse events and finally sent to the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792268b95359987f40571bcc5c056331f536df06" translate="yes" xml:space="preserve">
          <source>The entities using the Scene2D can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the Scene2D and converted to mouse events and finally sent to the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047edff496dbe5ba90326a3dbe9f6e06737125fb" translate="yes" xml:space="preserve">
          <source>The entity can be positionned in the scene by adding a transform component.</source>
          <target state="translated">实体可以通过添加变换组件在场景中定位。</target>
        </trans-unit>
        <trans-unit id="1021f16fa2cf35765282bb9918a660554cdacbd9" translate="yes" xml:space="preserve">
          <source>The entity that the picked geometry belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32780723d84c51e7407a879de34eaebd2c6b1e2a" translate="yes" xml:space="preserve">
          <source>The entries have the following meaning:</source>
          <target state="translated">这些条目具有以下含义:</target>
        </trans-unit>
        <trans-unit id="a577f506b49f1b757f4fbfd8f0364361e2361b2e" translate="yes" xml:space="preserve">
          <source>The enum describes attributes of a type supported by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;.</source>
          <target state="translated">枚举描述了&lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;支持的类型的属性。</target>
        </trans-unit>
        <trans-unit id="8f85e45fae6a8617a57fd58de98feee1f55ee710" translate="yes" xml:space="preserve">
          <source>The enum specifies the kinds of test log messages.</source>
          <target state="translated">该枚举指定了测试日志消息的种类。</target>
        </trans-unit>
        <trans-unit id="bb6efa8cea701e8cebce64731b732971471bbf78" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; is not an accepted parameter.</source>
          <target state="translated">枚举值&lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt;不是可接受的参数。</target>
        </trans-unit>
        <trans-unit id="ce5bb651c5d506e895c9756374580a7fba48a30e" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; should not be set.</source>
          <target state="translated">枚举值&lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt;不应设置。</target>
        </trans-unit>
        <trans-unit id="e396ae7af1b3b869415528600e5b94935cb6f017" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox::Icon&lt;/a&gt;.</source>
          <target state="translated">枚举值与&lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox :: Icon中的&lt;/a&gt;值相同。</target>
        </trans-unit>
        <trans-unit id="05cd4b54141681f75bf3d2d29334357aa43b8b7c" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox::StandardButtons&lt;/a&gt;.</source>
          <target state="translated">枚举值与&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox :: StandardButtons中的&lt;/a&gt;值相同。</target>
        </trans-unit>
        <trans-unit id="65e70534fbac463c12c74e8c87349af9ecf41410" translate="yes" xml:space="preserve">
          <source>The enumeration values are mapped from and must match &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::PageSizeId&lt;/a&gt;. They are also duplicated in &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; and &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;.</source>
          <target state="translated">枚举值从映射，并且必须匹配&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize :: PageSizeId&lt;/a&gt;。它们也在&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt;和&lt;a href=&quot;qprinter&quot;&gt;QPrinter中&lt;/a&gt;重复。</target>
        </trans-unit>
        <trans-unit id="396eef62edbdfe5276a89f6d85a88d47f263f0d1" translate="yes" xml:space="preserve">
          <source>The environment and working directory are inherited from the calling process.</source>
          <target state="translated">环境和工作目录是由调用过程继承的。</target>
        </trans-unit>
        <trans-unit id="53ad95327c77f4d3266824e405f84fad84000b94" translate="yes" xml:space="preserve">
          <source>The environment of the calling process can be obtained using &lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment::systemEnvironment&lt;/a&gt;().</source>
          <target state="translated">调用过程的环境可以使用&lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment :: systemEnvironment&lt;/a&gt;（）获得。</target>
        </trans-unit>
        <trans-unit id="84d9719df7f3ee8ceb0916769043beae4ef1f87a" translate="yes" xml:space="preserve">
          <source>The environment texture map. Enabled when &lt;code&gt;uEnvironmentMappingEnabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/spherical_checker.png&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94352f94a6536f71b782212fc69159270cff8ec" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;QT_MULTIMEDIA_PREFERRED_PLUGINS&lt;/code&gt; can be used to control the priority of the plugins. For example, setting it to &quot;windowsmediafoundation&quot; or &quot;directshow&quot; will cause the corresponding plugin to be the preferred one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a4fc89ef1bf056e38a0d0801cd0fcef8e62db6" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25ed68ca569b4e35fadaac699f5e19aa837cbb5" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">环境变量 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 可用于微调JIS，Shift-JIS和EUC-JP编解码器。在&lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP（JIS）编解码器的文本&lt;/a&gt;文件描述了如何使用这个变量。</target>
        </trans-unit>
        <trans-unit id="e0a28a7f1b00af61083f66a6359a0b0cbae0ff46" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a060837d9d758a80e9d9c5c406a57ccff7d9c01" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="translated">环境变量 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 可用于微调JIS，Shift-JIS和EUC-JP编解码器。映射名称与Japanese XML工作组的&lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML Japanese Profile相同&lt;/a&gt;，因为它命名并解释了所有广泛使用的映射。这是由Serika Kurusugawa撰写的简短说明：</target>
        </trans-unit>
        <trans-unit id="d708f5d851beb0a48a9dea8ff4a8cd7d42daa411" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adad2c8160b5117447f41a5b4bee830ef7282fd3" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">环境变量 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 可用于微调编解码器。在&lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP（JIS）编解码器的文本&lt;/a&gt;文件描述了如何使用这个变量。</target>
        </trans-unit>
        <trans-unit id="9f58fa8d1650c05c837cdbb2e9b0ae6a4eab32a8" translate="yes" xml:space="preserve">
          <source>The ephemeral key is only available when running in client mode, i.e. &lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslClientMode&lt;/a&gt;. When running in server mode or using a cipher algorithm without forward secrecy a null key is returned. The ephemeral server key will be set before emitting the encrypted() signal.</source>
          <target state="translated">临时密钥仅在以客户端模式运行时才可用，即&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket :: SslClientMode&lt;/a&gt;。在服务器模式下运行或使用无前向保密性的密码算法时，将返回空密钥。临时服务器密钥将在发出cryptod（）信号之前设置。</target>
        </trans-unit>
        <trans-unit id="686c08f3dceb6e4347b2690c6d3c818eb2219c69" translate="yes" xml:space="preserve">
          <source>The epsilon is the rate and amount of change in the value which is close enough to 0 to be considered equal to zero. This will depend on the usage of the value. For pixel positions, 0.25 would suffice. For scale, 0.005 will suffice.</source>
          <target state="translated">epsilon是数值的变化率和数量,它足够接近0,被认为等于零。这将取决于该值的用途。对于像素位置,0.25就足够了。对于比例尺,0.005就足够了。</target>
        </trans-unit>
        <trans-unit id="3bf4cd7ad649db9d1daf54e345ad9e8f3ebcc9c5" translate="yes" xml:space="preserve">
          <source>The equivalent of Perl's &lt;code&gt;/i&lt;/code&gt; option is &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseInsensitive&lt;/a&gt;).</source>
          <target state="translated">Perl的 &lt;code&gt;/i&lt;/code&gt; 选项的等效项是&lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;（&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseInsensitive&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="075dc8b10128e21ebf43ad3ef9f61e4ff9c4652e" translate="yes" xml:space="preserve">
          <source>The error code is set to the default &lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort::NoError&lt;/a&gt; after a call to clearError()</source>
          <target state="translated">调用clearError（）之后，错误代码被设置为默认的&lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort :: NoError。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d66aacbc92ca28156f0ee63de478eb1ea9755b67" translate="yes" xml:space="preserve">
          <source>The error code of the error that occurred.</source>
          <target state="translated">发生错误的错误代码。</target>
        </trans-unit>
        <trans-unit id="bf53247c28f57a7307c7f1d88ee60fe369328b59" translate="yes" xml:space="preserve">
          <source>The error message is sent to the &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;().</source>
          <target state="translated">错误消息将发送到&lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5fab51d0197686c970d7c8559b0cd6d4d203e28c" translate="yes" xml:space="preserve">
          <source>The error message returned by this function is technical in nature and may not be understood by end users. It is mostly useful to developers trying to understand why &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will not accept some input.</source>
          <target state="translated">此函数返回的错误消息本质上是技术性的，最终用户可能不理解。对于试图了解&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;为什么不接受某些输入的开发人员而言，它最有用。</target>
        </trans-unit>
        <trans-unit id="2a484483bf7f032de82ccc58aa5ffdc72775b605" translate="yes" xml:space="preserve">
          <source>The error state of this state.</source>
          <target state="translated">这个状态的错误状态。</target>
        </trans-unit>
        <trans-unit id="5534b3b34687787fed7e7dccf95ed094dfa2923d" translate="yes" xml:space="preserve">
          <source>The error status is never reset. Writes happening after the error occurred may be ignored, even if the error condition is cleared.</source>
          <target state="translated">错误状态永远不会被重置。即使错误条件被清除,错误发生后发生的写入也可能被忽略。</target>
        </trans-unit>
        <trans-unit id="a1696116f5a99b699cfcebefdbfe850aecb610ab" translate="yes" xml:space="preserve">
          <source>The error string of this state machine.</source>
          <target state="translated">该状态机的错误字符串。</target>
        </trans-unit>
        <trans-unit id="fa5bee8fec3fecee4cec028c93c3c43506c68838" translate="yes" xml:space="preserve">
          <source>The error will be described by the error code</source>
          <target state="translated">该错误将由错误代码描述</target>
        </trans-unit>
        <trans-unit id="861106b5cdb21f0cfd7c8f1cdbe030687c145674" translate="yes" xml:space="preserve">
          <source>The errors are derived from &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket::SocketError&lt;/a&gt;. This property is read-only.</source>
          <target state="translated">错误是从&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket :: SocketError&lt;/a&gt;派生的。该属性是只读的。</target>
        </trans-unit>
        <trans-unit id="c7f17013e5024ccf3812a68c681b22b8ffd9aebe" translate="yes" xml:space="preserve">
          <source>The errors that can occur are serious problems, such as these:</source>
          <target state="translated">可能出现的错误是严重的问题,比如这些。</target>
        </trans-unit>
        <trans-unit id="eaa681aac73600ba737617cff2a14e202d51fada" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; tries to find one using these rules:</source>
          <target state="translated">可以使用&lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;（）指定&lt;b&gt;退出&lt;/b&gt;按钮（按下&lt;b&gt;Esc&lt;/b&gt;时激活的按钮）。如果未指定转义按钮，则&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;尝试使用以下规则找到一个：</target>
        </trans-unit>
        <trans-unit id="ea38361d62a30c8d3a141b8c4069ad66db6ca671" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, QMessageBox tries to find one using these rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4915fe4d33cd0e7001f6b1f2f047fa1a335c613" translate="yes" xml:space="preserve">
          <source>The evaluation of</source>
          <target state="translated">评价</target>
        </trans-unit>
        <trans-unit id="b21e33caa12852166948635429af3f31e647e8cb" translate="yes" xml:space="preserve">
          <source>The evdev keyboard handler supports the following extra parameters:</source>
          <target state="translated">evdev键盘处理程序支持以下额外参数。</target>
        </trans-unit>
        <trans-unit id="61c4e5321be488393232ebfc2c998015598d95d3" translate="yes" xml:space="preserve">
          <source>The event</source>
          <target state="translated">本次活动</target>
        </trans-unit>
        <trans-unit id="08af4c2779a1f2648e7c1a3ceae97e16e7784d3f" translate="yes" xml:space="preserve">
          <source>The event changed the internal state of the recognizer, but it isn't clear yet if it is a gesture or not. The recognizer needs to filter more events to decide. Gesture recognizers in the MayBeGesture state may be reset automatically if they take too long to recognize gestures.</source>
          <target state="translated">该事件改变了识别器的内部状态,但目前还不清楚它是否是一个手势。识别器需要过滤更多的事件来决定。处于MayBeGesture状态的手势识别器,如果识别手势的时间过长,可能会被自动重置。</target>
        </trans-unit>
        <trans-unit id="9fb92028b4d4098b6c9bd6cb5c72c3b45381c040" translate="yes" xml:space="preserve">
          <source>The event contains a &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;() that needs to be updated, and a &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() that is the bounding rectangle of that region. Both are provided because many widgets cannot make much use of &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;(), and &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() can be much faster than &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;().boundingRect().</source>
          <target state="translated">该事件包含一个需要更新的&lt;a href=&quot;qpaintevent#region&quot;&gt;区域&lt;/a&gt;（）和一个&lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;（），即该区域的边界矩形。两者都提供是因为许多小部件无法充分利用&lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;（），而&lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;（）可能比&lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;（）.boundingRect（）快得多。</target>
        </trans-unit>
        <trans-unit id="a6839f078ec346eec5b960376ac591c222a2eab4" translate="yes" xml:space="preserve">
          <source>The event does not change the state of the recognizer.</source>
          <target state="translated">该事件不会改变识别器的状态。</target>
        </trans-unit>
        <trans-unit id="a016c01cdbba3e638ecff77863fe569dd20bb7ed" translate="yes" xml:space="preserve">
          <source>The event during which the media was captured.</source>
          <target state="translated">事件中,媒体拍摄的。</target>
        </trans-unit>
        <trans-unit id="f55e097bd36ac0a1e3ec0603f9ef8b03b2e6d0d8" translate="yes" xml:space="preserve">
          <source>The event filter</source>
          <target state="translated">事件过滤器</target>
        </trans-unit>
        <trans-unit id="826d53f3051c5a1841aa838511286042365a72b3" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() receives timer events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject :: timerEvent&lt;/a&gt;（）接收计时器事件。</target>
        </trans-unit>
        <trans-unit id="abead7fbd352c7383ea7c482942b4723653f2af6" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget::closeEvent&lt;/a&gt;() receives close events. The default implementation of this event handler accepts the close event. If you do not want your widget to be hidden, or want some special handling, you should reimplement the event handler and &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;() the event.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget :: closeEvent&lt;/a&gt;（）接收关闭事件。此事件处理程序的默认实现接受close事件。如果您不希望隐藏小部件或进行某些特殊处理，则应重新实现事件处理程序，并&lt;a href=&quot;qevent#ignore&quot;&gt;忽略&lt;/a&gt;（）事件。</target>
        </trans-unit>
        <trans-unit id="d3abe2ec387f9013cfb56fafa7abc3020cc29a3e" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget::moveEvent&lt;/a&gt;() receives move events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget :: moveEvent&lt;/a&gt;（）接收移动事件。</target>
        </trans-unit>
        <trans-unit id="5dd325abadeab5c50a9499098f2e1f8096622657" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget::resizeEvent&lt;/a&gt;() receives resize events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget :: resizeEvent&lt;/a&gt;（）接收调整大小的事件。</target>
        </trans-unit>
        <trans-unit id="671578ea2a5bd7feef77c3fcf12c9cd7285cd191" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget::tabletEvent&lt;/a&gt;() receives &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt; events. Qt will first send a tablet event, then if it is not accepted by any widget, it will send a mouse event. This allows users of applications that are not designed for tablets to use a tablet like a mouse. However high-resolution drawing applications should handle the tablet events, because they can occur at a higher frequency, which is a benefit for smooth and accurate drawing. If the tablet events are rejected, the synthetic mouse events may be compressed for efficiency.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget :: tabletEvent&lt;/a&gt;（）接收&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt;，&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt;和&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt;事件。Qt将首先发送一个平板电脑事件，然后，如果任何小部件不接受它，它将发送一个鼠标事件。这使非平板电脑应用程序的用户可以使用平板电脑（例如鼠标）。但是，高分辨率绘图应用程序应处理数位板事件，因为它们可能以较高的频率发生，这对于平滑准确的绘图是有好处的。如果拒绝了数位板事件，则可以压缩合成鼠标事件以提高效率。</target>
        </trans-unit>
        <trans-unit id="0f28c16ebcfb93ab1612f20609ed8496088e1b5d" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget::wheelEvent&lt;/a&gt;() receives wheel events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget :: wheelEvent&lt;/a&gt;（）接收wheel事件。</target>
        </trans-unit>
        <trans-unit id="5e837443d824e8c3bb2db5cce0cb5dec73bf186b" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow::exposeEvent&lt;/a&gt;() receives expose events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow :: exposeEvent&lt;/a&gt;（）接收公开事件。</target>
        </trans-unit>
        <trans-unit id="1c394912e86c09b0aef10d8c3704c14e0c183e3c" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget::focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget::focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem::focusInEvent&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem::focusOutEvent&lt;/a&gt;() receive focus events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget :: focusInEvent&lt;/a&gt;（），&lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget :: focusOutEvent&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem :: focusInEvent&lt;/a&gt;和&lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem :: focusOutEvent&lt;/a&gt;（）接收焦点事件。</target>
        </trans-unit>
        <trans-unit id="5fac5755d1112b61138f2fe0d7652d63d2794903" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget::keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget::keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem::keyPressEvent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem::keyReleaseEvent&lt;/a&gt;() receive key events.</source>
          <target state="translated">事件处理程序&lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget :: keyPressEvent&lt;/a&gt;（），&lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget :: keyReleaseEvent&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem :: keyPressEvent&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem :: keyReleaseEvent&lt;/a&gt;（）接收键事件。</target>
        </trans-unit>
        <trans-unit id="3f6a3297ea86f83ad4069552d5b1b096c17aa0ba" translate="yes" xml:space="preserve">
          <source>The event has high priority.</source>
          <target state="translated">该活动具有较高的优先级。</target>
        </trans-unit>
        <trans-unit id="affde00e5992937ecf05d63205b5571d00dd5a9a" translate="yes" xml:space="preserve">
          <source>The event has normal priority.</source>
          <target state="translated">该事件具有正常的优先级。</target>
        </trans-unit>
        <trans-unit id="1b336b760676bd7a01be3c72accf409df58e16d8" translate="yes" xml:space="preserve">
          <source>The event interface ID. No signals are exposed as COM events if not specified.</source>
          <target state="translated">事件接口ID。如果没有指定,则不会有信号作为COM事件暴露。</target>
        </trans-unit>
        <trans-unit id="5a39a04e1e8f531e2e769a14fa37f53412466964" translate="yes" xml:space="preserve">
          <source>The event is</source>
          <target state="translated">该活动是</target>
        </trans-unit>
        <trans-unit id="ac2d476d5e8bf78ff0d4c23af919e8dbc61fc527" translate="yes" xml:space="preserve">
          <source>The event is &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;()d for items that are neither &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;movable&lt;/a&gt; nor &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;selectable&lt;/a&gt;.</source>
          <target state="translated">对于既不可&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;移动&lt;/a&gt;又不&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;可选择的&lt;/a&gt;项目，事件为&lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt;（）d 。</target>
        </trans-unit>
        <trans-unit id="99d9820e08de97d0252f4d547e2bc4f0d9ee75b6" translate="yes" xml:space="preserve">
          <source>The event is a wrapper for, i.e., contains, another event (&lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine::WrappedEvent&lt;/a&gt;).</source>
          <target state="translated">该事件是另一个事件（&lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine :: WrappedEvent&lt;/a&gt;）的包装，即包含另一个事件。</target>
        </trans-unit>
        <trans-unit id="42301aa5af9d57ce290d1f7b3bf689a51515831b" translate="yes" xml:space="preserve">
          <source>The event is accepted by default, so it is not necessary to explicitly accept the event if you reimplement this function. If you don't accept the event, call &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt;.</source>
          <target state="translated">默认情况下会接受该事件，因此，如果重新实现此功能，则不必显式接受该事件。如果您不接受该事件，请调用 &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b63b9ff234225ebbd42faa6495062b10059e36" translate="yes" xml:space="preserve">
          <source>The event is delivered in sync with the display vsync on platforms where this is possible. Otherwise, the event is delivered after a delay of 5 ms. The additional time is there to give the event loop a bit of idle time to gather system events, and can be overridden using the QT_QPA_UPDATE_IDLE_TIME environment variable.</source>
          <target state="translated">在可能的平台上,事件会与显示vsync同步传送,否则,事件会在延迟5毫秒后传送。否则,事件会在5毫秒的延迟后被传送。额外的时间是为了让事件循环有一点空闲时间来收集系统事件,可以使用QT_QPA_UPDATE_IDLE_TIME环境变量来覆盖。</target>
        </trans-unit>
        <trans-unit id="8eced82aeebdce54e5cec70ec689e9f2be9fa721" translate="yes" xml:space="preserve">
          <source>The event is sent only if the item is enabled.</source>
          <target state="translated">只有当项目被启用时,才会发送该事件。</target>
        </trans-unit>
        <trans-unit id="4bbece77219752dc9cdea38009d6537b8cb61b4e" translate="yes" xml:space="preserve">
          <source>The event loop is started with a call to &lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt;(). Long-running operations can call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;() to keep the application responsive.</source>
          <target state="translated">事件循环通过调用&lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt;（）开始。长时间运行的操作可以调用&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）来保持应用程序的响应速度。</target>
        </trans-unit>
        <trans-unit id="5e56ad83688ee0c6418e9fe82030789b9423d170" translate="yes" xml:space="preserve">
          <source>The event made it clear that it is not a gesture. If the gesture recognizer was in GestureTriggered state before, then the gesture is canceled and the appropriate &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object will be delivered to the target as a part of a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;.</source>
          <target state="translated">该事件清楚地表明这不是手势。如果手势识别器之前处于GestureTriggered状态，则取消手势，并将适当的&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;对象作为&lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;的一部分传递给目标。</target>
        </trans-unit>
        <trans-unit id="696b03750a8d73dddec3592d8410d51c4af0ab01" translate="yes" xml:space="preserve">
          <source>The event must be allocated on the heap since the post event queue will take ownership of the event and delete it once it has been posted. It is</source>
          <target state="translated">该事件必须在堆上分配,因为post事件队列将获得该事件的所有权,并在事件发布后删除它。它是</target>
        </trans-unit>
        <trans-unit id="4b857998cc7d89771720dc7ab176e1ca33cd9d9b" translate="yes" xml:space="preserve">
          <source>The event point currently being handled. When no point is currently being handled, this object is reset to default values (all coordinates are 0).</source>
          <target state="translated">当前正在处理的事件点。当当前没有点被处理时,此对象被重置为默认值(所有坐标为0)。</target>
        </trans-unit>
        <trans-unit id="0825b9bf62fe2d0832950e6d03549b46913cb20a" translate="yes" xml:space="preserve">
          <source>The event type is one of the values of &lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible::Event&lt;/a&gt;. There are a number of subclasses that should be used to provide more details about the event.</source>
          <target state="translated">事件类型是&lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible :: Event&lt;/a&gt;的值之一。有许多子类可用于提供有关事件的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="d2f5a88fab38d29660044c3328ad25032b8f1573" translate="yes" xml:space="preserve">
          <source>The event was sent by some other means (i.e. not by the mouse or keyboard).</source>
          <target state="translated">该事件是通过其他方式(即不是通过鼠标或键盘)发送的。</target>
        </trans-unit>
        <trans-unit id="72c1f32d58eff8d9700be5edfa255e4dee6420cd" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">该事件将发送到&lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt;窗口，如果有多个窗口，则发送到当前活动窗口。有关更多详细信息，请参见&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59223ce11af6cfe10f591bb2a37c99706430e373" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">该事件将发送到&lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt;窗口，如果有多个窗口，则发送到当前活动窗口。有关更多详细信息，请参见&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66f8b568bddf13cf4070a88085140b44e3cc3d97" translate="yes" xml:space="preserve">
          <source>The event() function can be reimplemented to customize the behavior of an object.</source>
          <target state="translated">可以重新实现event()函数来定制对象的行为。</target>
        </trans-unit>
        <trans-unit id="84984bb966924c79b11bcb068cb5c5280dc4fb69" translate="yes" xml:space="preserve">
          <source>The events are</source>
          <target state="translated">这些活动是</target>
        </trans-unit>
        <trans-unit id="dbe39191d76e3a330b73caff8817f69879b96319" translate="yes" xml:space="preserve">
          <source>The events are of interest to authors of keyboard entry widgets who want to be able to correctly handle languages with complex character input. Text input in such languages is usually a three step process:</source>
          <target state="translated">键盘输入部件的作者对这些事件很感兴趣,他们希望能够正确处理具有复杂字符输入的语言。这种语言的文本输入通常有三个步骤:</target>
        </trans-unit>
        <trans-unit id="0bd1d33ea8cec83b6692908b56d918b703605221" translate="yes" xml:space="preserve">
          <source>The events in the lexical handler apply to the entire document, not just to the document element, and all lexical handler events appear between the content handler's startDocument and endDocument events.</source>
          <target state="translated">词汇处理程序中的事件适用于整个文档,而不仅仅是文档元素,而且所有词汇处理程序事件都出现在内容处理程序的startDocument和endDocument事件之间。</target>
        </trans-unit>
        <trans-unit id="aa80f52f030ead3963f0707eb6647c53c6d6403a" translate="yes" xml:space="preserve">
          <source>The example above defines a toString() specialization for a class called &lt;code&gt;MyPoint&lt;/code&gt;. Whenever a comparison of two instances of &lt;code&gt;MyPoint&lt;/code&gt; fails, &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;() will call this function to output the contents of &lt;code&gt;MyPoint&lt;/code&gt; to the test log.</source>
          <target state="translated">上面的示例为名为 &lt;code&gt;MyPoint&lt;/code&gt; 的类定义了toString（）特化。每当比较 &lt;code&gt;MyPoint&lt;/code&gt; 的两个实例失败时，&lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;（）就会调用此函数以将 &lt;code&gt;MyPoint&lt;/code&gt; 的内容输出到测试日志。</target>
        </trans-unit>
        <trans-unit id="d7ad1ee5595d42e11968618a848dd4bfb2384e33" translate="yes" xml:space="preserve">
          <source>The example above inserts four new rows into &lt;code&gt;myTable&lt;/code&gt;:</source>
          <target state="translated">上面的示例在 &lt;code&gt;myTable&lt;/code&gt; 中插入了四个新行：</target>
        </trans-unit>
        <trans-unit id="e4ce9b39dae7f6284e224bb1f91732bb0fb631fb" translate="yes" xml:space="preserve">
          <source>The example above shows a simple QML component that displays a rich text title string at the top, and a smaller copy of the same text at the bottom. The first &lt;code&gt;Text&lt;/code&gt; type directly accesses the component's &lt;code&gt;title&lt;/code&gt; property when forming the text to display. That the root type's properties are directly accessible makes it trivial to distribute data throughout the component.</source>
          <target state="translated">上面的示例显示了一个简单的QML组件，该组件在顶部显示一个富文本标题字符串，在底部显示一个较小的相同文本副本。在形成要显示的文本时，第一个 &lt;code&gt;Text&lt;/code&gt; 类型直接访问组件的 &lt;code&gt;title&lt;/code&gt; 属性。根类型的属性是可直接访问的，这使得在整个组件中分布数据变得微不足道。</target>
        </trans-unit>
        <trans-unit id="da9898f7f8aa20b0b0e72d1d3a91db46fc9eeb26" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; support to any item.</source>
          <target state="translated">上面的示例显示了向任何项目添加&lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt;支持所需的最少代码。</target>
        </trans-unit>
        <trans-unit id="c09c7da9aa34484a32efd91509a7d0f43575eb60" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add ExclusiveGroup support to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fcf9d5d4468f7b83f2a731049444314551962a" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上面的示例模拟 &lt;code&gt;a&lt;/code&gt; 在 &lt;code&gt;myWidget&lt;/code&gt; 上单击而没有任何键盘修饰符并且没有测试延迟的情况。</target>
        </trans-unit>
        <trans-unit id="5e2bb7d754676fcb070c1ddfa7a42fb9c230e70d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上面的示例模拟 &lt;code&gt;a&lt;/code&gt; 在 &lt;code&gt;myWindow&lt;/code&gt; 上单击而没有任何键盘修饰符并且没有测试延迟的情况。</target>
        </trans-unit>
        <trans-unit id="b4d1593d1c0ea78891ea7a115ebc0a2837cfc67d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking the sequence of keys representing &quot;hello world&quot; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上面的示例模拟在 &lt;code&gt;myWidget&lt;/code&gt; 上单击表示&amp;ldquo; hello world&amp;rdquo;的键的顺序，而无需任何键盘修饰符，也不会延迟测试。</target>
        </trans-unit>
        <trans-unit id="b3c74859e50485743824a62c48e2fed9103d1c7e" translate="yes" xml:space="preserve">
          <source>The example above simulates the user entering the character &lt;code&gt;a&lt;/code&gt; followed by a backspace, waiting for 200 milliseconds and repeating it.</source>
          <target state="translated">上面的示例模拟了用户输入字符 &lt;code&gt;a&lt;/code&gt; 后跟一个退格键，等待200毫秒并重复该操作。</target>
        </trans-unit>
        <trans-unit id="35447f18d02880527b06a0e3968bc544854214af" translate="yes" xml:space="preserve">
          <source>The example above tests that &lt;a href=&quot;qdir#mkdir&quot;&gt;QDir::mkdir&lt;/a&gt;() outputs the right warning when invoked with an invalid file name.</source>
          <target state="translated">上面的示例测试了&lt;a href=&quot;qdir#mkdir&quot;&gt;QDir :: mkdir&lt;/a&gt;（）使用无效的文件名调用时是否输出正确的警告。</target>
        </trans-unit>
        <trans-unit id="4afc31d2b7202cef7a48490ca5a94a6273596a6d" translate="yes" xml:space="preserve">
          <source>The example above uses a function called &lt;code&gt;readElementAsString&lt;/code&gt; to read the map's keys and obtain a string. That is because CBOR maps may contain any type as keys, not just strings. User code needs to either perform this conversion, reject non-string keys, or instead use a different container besides &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; and &lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt;. For example, if the map is expected to contain integer keys, which is recommended as it reduces stream size and parsing, the correct container would be &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; or &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">上面的示例使用一个名为 &lt;code&gt;readElementAsString&lt;/code&gt; 的函数来读取地图的键并获取字符串。这是因为CBOR映射可以包含任何类型的键，而不仅仅是字符串。用户代码需要执行此转换，拒绝非字符串键，或者使用&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;和&lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt;之外的其他容器。例如，如果期望该映射包含整数键，建议使用该整数键，因为这会减小流大小和解析，则正确的容器应为 &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; 或 &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03c31d2e5be8490900aeb08320d09c38a018f802" translate="yes" xml:space="preserve">
          <source>The example below catches a signal from a custom object:</source>
          <target state="translated">下面的例子从一个自定义对象中捕捉到一个信号。</target>
        </trans-unit>
        <trans-unit id="78b9a3975c8ca8a01b8d8a259585467cc5162f61" translate="yes" xml:space="preserve">
          <source>The example below creates a Package containing two named items;</source>
          <target state="translated">下面的例子创建了一个包含两个命名项目的包。</target>
        </trans-unit>
        <trans-unit id="7901ddd2588150db7f85a2a8505c43e0412e1f04" translate="yes" xml:space="preserve">
          <source>The example below creates a high voltage symbol by adding each path of the symbol to the list of paths. The coordinates of the vertices are normalized, and through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c501c01371b080fb52ab1c57f63188ba99c32bf1" translate="yes" xml:space="preserve">
          <source>The example below creates a list with one item, showing the color of the</source>
          <target state="translated">下面的例子创建了一个有一个项目的列表,显示了颜色。</target>
        </trans-unit>
        <trans-unit id="f5a132f95418baf1c6b1efd84372798496f54272" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of a straight line from 0,100 to 200,100:</source>
          <target state="translated">下面的例子创建了一条由0,100到200,100的直线组成的路径。</target>
        </trans-unit>
        <trans-unit id="3aace1dd1ee0e4384396f86285c4626daaee3585" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of two horizontal lines with some empty space between them. All three segments have a width of 100:</source>
          <target state="translated">下面的示例创建了一个由两条水平线组成的路径,它们之间有一些空隙。三条线段的宽度都是100。</target>
        </trans-unit>
        <trans-unit id="b3ca4f895b7a4408d2bbda15d3c6076bc2e724d7" translate="yes" xml:space="preserve">
          <source>The example below creates a triangular path consisting of four vertices on the edge of the containing Shape's bounding box. Through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dffe32796ec2c8e17d2771e1dc2e01c8fdf0d4d" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how this could be done.</source>
          <target state="translated">下面的例子展示了如何做到这一点。</target>
        </trans-unit>
        <trans-unit id="5db8f7b02af2ff9817933b37e0f4799761aa2469" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to call two different static functions.</source>
          <target state="translated">下面的例子演示了如何调用两个不同的静态函数。</target>
        </trans-unit>
        <trans-unit id="dd2feae7be254bb0a3f44e485af25eb345eeb794" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to use the struct:</source>
          <target state="translated">下面的例子演示了如何使用 struct:</target>
        </trans-unit>
        <trans-unit id="6877420a6dbd5dbec220239f72fc58e1d8be5eb0" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;.</source>
          <target state="translated">下面的示例并排显示一个大红色矩形和一个小蓝色矩形。当 &lt;code&gt;blueRect&lt;/code&gt; 被点击时，则切换到&amp;ldquo;重设父&amp;rdquo;状态：它的父改变为 &lt;code&gt;redRect&lt;/code&gt; 红色矩形内，并且它被定位在（10，10），在指定的&lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="570b1e8ede54f123925835562fa681aeaae908b3" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the ParentChange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e9d4b8a9b72286c4a0934a4691239222383706" translate="yes" xml:space="preserve">
          <source>The example below filters on PNG and JPEG files:</source>
          <target state="translated">下面的例子是对PNG和JPEG文件进行过滤。</target>
        </trans-unit>
        <trans-unit id="fbc6c175a4f9005fb81519695b93b6dea4839d8c" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">下面的示例说明将&lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;与&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView结合使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cadbcd64aa78e090ecca9b02c609787ab5f63bc4" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a DelegateModel with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39086c3a77ddadeaa6c512c5d702bbf60816b786" translate="yes" xml:space="preserve">
          <source>The example below places three colored rectangles in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">下面的示例在&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;中放置三个彩色矩形。</target>
        </trans-unit>
        <trans-unit id="1302c959d22a54ed0907a64ae8515a33522457d6" translate="yes" xml:space="preserve">
          <source>The example below shows a fairly typical relationship between two MouseAreas, with &lt;code&gt;mouseArea2&lt;/code&gt; on top of &lt;code&gt;mouseArea1&lt;/code&gt;. Moving the mouse into &lt;code&gt;mouseArea2&lt;/code&gt; from &lt;code&gt;mouseArea1&lt;/code&gt; will cause &lt;code&gt;mouseArea1&lt;/code&gt; to emit the &lt;code&gt;exited&lt;/code&gt; signal.</source>
          <target state="translated">下面示出了例如两个MouseAreas之间的相当典型的关系，与 &lt;code&gt;mouseArea2&lt;/code&gt; 之上 &lt;code&gt;mouseArea1&lt;/code&gt; 。将鼠标从 &lt;code&gt;mouseArea1&lt;/code&gt; 移动到 &lt;code&gt;mouseArea2&lt;/code&gt; 将导致 &lt;code&gt;mouseArea1&lt;/code&gt; 发出 &lt;code&gt;exited&lt;/code&gt; 信号。</target>
        </trans-unit>
        <trans-unit id="e91ac17a2ecbec260a778a1b805af83e4fd610ef" translate="yes" xml:space="preserve">
          <source>The example below shows a path with the items scaled to 30% with opacity 50% at the top of the path and scaled 100% with opacity 100% at the bottom. Note the use of the &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconScale and &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconOpacity attached properties to set the scale and opacity of the delegate.</source>
          <target state="translated">以下示例显示了一条路径，其中项目的比例缩放为30％，顶部的不透明度为50％，底部的比例为100％，不透明度为100％。请注意使用&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; .iconScale和&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; .iconOpacity附加属性来设置委托的比例和不透明度。</target>
        </trans-unit>
        <trans-unit id="b544648bf21471a2fc6063674f764be3e1ed542e" translate="yes" xml:space="preserve">
          <source>The example below shows how different localizations can affect the user interface. When a localization requires more space for longer text strings the Qt layout automatically scales to accommodate this, while ensuring that the user interface looks presentable and still matches the platform guidelines.</source>
          <target state="translated">下面的例子显示了不同的本地化是如何影响用户界面的。当本地化需要更多的空间来放置较长的文本字符串时,Qt布局会自动调整以适应这种情况,同时确保用户界面看起来很好,并且仍然符合平台指南。</target>
        </trans-unit>
        <trans-unit id="8b2aafc6948d44288d4f0ca9933bc172da0bc682" translate="yes" xml:space="preserve">
          <source>The example below uses an item's contents as a drag image:</source>
          <target state="translated">下面的例子使用项目的内容作为拖动图像。</target>
        </trans-unit>
        <trans-unit id="d83767c45ad9a2e3fd5bf1406d97c14b2dacc3f6" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with three points (4,5), (6,7) and (8,9), by expanding the polygon from 1 to 3 points:</source>
          <target state="translated">该示例代码通过将多边形从1点扩展到3点,创建了一个具有三个点(4,5)、(6,7)和(8,9)的多边形。</target>
        </trans-unit>
        <trans-unit id="8d5f881ad62463d92d06ca710912aa3e3d217e7d" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with two points (10, 20) and (30, 40):</source>
          <target state="translated">该示例代码创建了一个具有两个点(10,20)和(30,40)的多边形。</target>
        </trans-unit>
        <trans-unit id="6a2fc46d796001fda75fda7e03843fe0792378d8" translate="yes" xml:space="preserve">
          <source>The example code will display the text &quot;See the &lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project website&lt;/a&gt;.&quot;</source>
          <target state="translated">该示例代码将显示文本&amp;ldquo;请参阅&lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project网站&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bc375fc1b97407ed42b1655588dd79e2427ccb5" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">该示例演示了将&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;的子类与&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;结合使用以执行&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;的标准模式。</target>
        </trans-unit>
        <trans-unit id="2cb45fcfa5bab580acabbcc90c3f2ec2e90c9ffa" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of QAbstractXmlNodeModel in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56406b0077c72e613bdbb4a39cfa95f41ac968b6" translate="yes" xml:space="preserve">
          <source>The example here from &lt;a href=&quot;qml-qtquick3d-materials-coppermaterial&quot;&gt;CopperMaterial&lt;/a&gt; shows how the material is built. First, the shader parameters are specified as properties. The names and types must match the names in the shader code. Textures use &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; to assign &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;texture&lt;/a&gt; into the shader variable. The &lt;a href=&quot;qml-qtquick3d-materials-custommaterial#shaderInfo-prop&quot;&gt;shaderInfo&lt;/a&gt; property specifies more information about the shader and also configures some of its features on or off when the custom material is built by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D&lt;/a&gt; shader generator. Then the material can use Shader type to specify shader source and shader stage. These are used with &lt;a href=&quot;qml-qtquick3d-pass&quot;&gt;passes&lt;/a&gt; to create the resulting material. The passes can contain multiple rendering passes and also other commands. Normally only the fragment shader needs to be passed to a pass. The material library generates the vertex shader for the material. The material can also create &lt;a href=&quot;qml-qtquick3d-buffer&quot;&gt;buffers&lt;/a&gt; to store intermediate rendering results. Here is an example from &lt;a href=&quot;qml-qtquick3d-materials-glassrefractivematerial&quot;&gt;GlassRefractiveMaterial&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390fcc3a14f94dcb796729bc331020cbcbca9cf" translate="yes" xml:space="preserve">
          <source>The example illustrates the two typical uses, that of sending error replies and that of delayed replies.</source>
          <target state="translated">这个例子说明了两种典型的用法,即发送错误回复和延迟回复。</target>
        </trans-unit>
        <trans-unit id="044e20559eb0affaab9ed998f58ef27b96ba92fa" translate="yes" xml:space="preserve">
          <source>The example removes all (key, value) pairs where the key and the value are the same.</source>
          <target state="translated">这个例子删除了所有键和值相同的(键,值)对。</target>
        </trans-unit>
        <trans-unit id="22aa706b0e1f6d5a161421b227b746975b41fd0f" translate="yes" xml:space="preserve">
          <source>The example shows a battery level characteristic which updates the central on every value change. The notifications are provided via the &lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;characteristicChanged&lt;/a&gt;() signal. More details about this mechanism are provided by the &lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;Bluetooth Specification&lt;/a&gt;.</source>
          <target state="translated">该示例显示了电池电量水平特性，该特性会在每次值更改时更新中心值。通知是通过&lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;attributeChanged&lt;/a&gt;（）信号提供的。&lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;蓝牙规范&lt;/a&gt;提供了有关此机制的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="a2acd17a244723bcf7d4e6eb8e826b9edd6a488d" translate="yes" xml:space="preserve">
          <source>The example shows how to retrieve all available filesystems, skipping read-only ones.</source>
          <target state="translated">这个例子展示了如何检索所有可用的文件系统,跳过只读系统。</target>
        </trans-unit>
        <trans-unit id="da58a6b66ea20e8730c1cfaa0a25c5be053e5c37" translate="yes" xml:space="preserve">
          <source>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</source>
          <target state="translated">该示例展示了如何使用信号和插槽来实现计算器widget的功能,以及如何使用QGridLayout在网格中放置子widget。</target>
        </trans-unit>
        <trans-unit id="debbf02e4ddfdb4813ee0988b4587ccc0d6b1c6c" translate="yes" xml:space="preserve">
          <source>The example traverses a list, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">这个例子遍历一个列表,用它们的绝对值替换负数,并消除零。</target>
        </trans-unit>
        <trans-unit id="7fb5c20b454aec9bcd86d7ff6fb7f5c45240e709" translate="yes" xml:space="preserve">
          <source>The example traverses a vector, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">这个例子遍历一个向量,用它们的绝对值替换负数,并消除零。</target>
        </trans-unit>
        <trans-unit id="2cceeaf7c4424d0ab364e4846d40a4aa5741bcbe" translate="yes" xml:space="preserve">
          <source>The example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="translated">该示例使用&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;来匹配XML文档的第一段，然后&lt;a href=&quot;qxmlserializer&quot;&gt;将结果&lt;/a&gt;作为XML 输出到设备。</target>
        </trans-unit>
        <trans-unit id="c03ff169223daaa4f14aa38d4436678c795e66dc" translate="yes" xml:space="preserve">
          <source>The example uses QXmlQuery to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8905d57d7e26d7afbb3dc0cb737ab0874c69a9b6" translate="yes" xml:space="preserve">
          <source>The example uses a script that is an ECMAScript module, because it has the &quot;.mjs&quot; extension. It can use import statements to access functionality from other modules and it is run in JavaScript strict mode.</source>
          <target state="translated">这个例子使用了一个ECMAScript模块的脚本,因为它的扩展名是&quot;.mjs&quot;。它可以使用导入语句来访问其他模块的功能,并且它是在JavaScript严格模式下运行的。</target>
        </trans-unit>
        <trans-unit id="890c681856263f054fd3c6f1de0967df2cab3e42" translate="yes" xml:space="preserve">
          <source>The example will output 1, 2, 3 in that order.</source>
          <target state="translated">本例将依次输出1、2、3。</target>
        </trans-unit>
        <trans-unit id="683ff0c7c0661873021f7367a26cc755d614df35" translate="yes" xml:space="preserve">
          <source>The example will output 3, 2, 1 in that order.</source>
          <target state="translated">本例将依次输出3、2、1。</target>
        </trans-unit>
        <trans-unit id="c0d997cb199a9af4955bf219b99b18709e05f651" translate="yes" xml:space="preserve">
          <source>The examples are packaged with the &lt;a href=&quot;gettingstarted&quot;&gt;Qt installers&lt;/a&gt; and are accessed through Qt Creator. For more information about running examples in Qt Creator, visit the &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;Building and Running an Example&lt;/a&gt; page.</source>
          <target state="translated">这些示例与&lt;a href=&quot;gettingstarted&quot;&gt;Qt安装程序&lt;/a&gt;打包在一起，可以通过Qt Creator访问。有关在Qt Creator中运行示例的更多信息，请访问&amp;ldquo; &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;构建和运行示例&amp;rdquo;&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="286efee015f31b6b39c9832ec8c9ce6e54ef74b7" translate="yes" xml:space="preserve">
          <source>The examples below show the normal distribution of items along a path compared to a distribution which places 50% of the items along the &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt; section of the path.</source>
          <target state="translated">下面的示例显示了沿着路径的项目的正态分布，而沿着路径的&lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt;部分放置了50％的项目的分布。</target>
        </trans-unit>
        <trans-unit id="beca088c54139c17ca7bb84f94b4a58688117a06" translate="yes" xml:space="preserve">
          <source>The examples below will show both &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. The examples will also show direct connections as well as connections using a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</source>
          <target state="translated">下面的示例将显示&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;编译的静态对象和动态源对象。这些示例还将显示直接连接以及在节点之间使用&lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;注册表的&lt;/a&gt;连接。</target>
        </trans-unit>
        <trans-unit id="9ae266dec3db2a2e58e7d935cc2b842a8dac4027" translate="yes" xml:space="preserve">
          <source>The exception is when &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError&lt;/a&gt;. This error is reported when the end of an otherwise well-formed chunk of XML is reached, but the chunk doesn't represent a complete XML document. In that case, parsing</source>
          <target state="translated">例外是&lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;（）返回&lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError时&lt;/a&gt;。当到达原本格式正确的XML块的末尾时报告此错误，但是该块不代表完整的XML文档。在这种情况下，解析</target>
        </trans-unit>
        <trans-unit id="fb3bfbdcb1730e31f0a11b63959356eb56ebc63e" translate="yes" xml:space="preserve">
          <source>The exception status byte offset of the server. &lt;code&gt;quint16&lt;/code&gt;</source>
          <target state="translated">服务器的异常状态字节偏移量。 &lt;code&gt;quint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaba812fa7f09d8e931907794cec497f57e46e34" translate="yes" xml:space="preserve">
          <source>The exceptions are the objects returned by &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;() and &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(): those objects are thread-safe and may be used by any thread without external locking. Note that thread-safety does not extend to copying those objects: they should always be used by reference.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator :: global&lt;/a&gt;（）和&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）返回的对象是例外：这些对象是线程安全的，并且任何线程都可以使用而无需外部锁定。请注意，线程安全性并不限于复制那些对象：它们应始终由引用使用。</target>
        </trans-unit>
        <trans-unit id="a9a024dcba130e7c09cc3f7a9cd0db43f7f7b8bb" translate="yes" xml:space="preserve">
          <source>The execution of the &lt;code&gt;check&lt;/code&gt; target may be customized by certain Makefile variables. These variables are:</source>
          <target state="translated">可以通过某些Makefile变量自定义 &lt;code&gt;check&lt;/code&gt; 目标的执行。这些变量是：</target>
        </trans-unit>
        <trans-unit id="57d04137eb90a4e604977c52433beb80d8911543" translate="yes" xml:space="preserve">
          <source>The existence of specific drag types can be determined using the &lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt; properties.</source>
          <target state="translated">可以使用&lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt;属性确定特定拖动类型的存在。</target>
        </trans-unit>
        <trans-unit id="04ac281a986a85343e1a5374b782d87dbe36d021" translate="yes" xml:space="preserve">
          <source>The existing actions held by a menu can be found with &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;().</source>
          <target state="translated">菜单中现有的动作可以通过&lt;a href=&quot;qwidget#actions&quot;&gt;动作&lt;/a&gt;（）找到。</target>
        </trans-unit>
        <trans-unit id="a8f14c38669cb2ae397a13ffaed40d2ccb27896f" translate="yes" xml:space="preserve">
          <source>The existing build targets that the custom build target depends on.</source>
          <target state="translated">自定义构建目标所依赖的现有构建目标。</target>
        </trans-unit>
        <trans-unit id="ae4b0da5e85b97fe52c13fba92d32d45da2cca38" translate="yes" xml:space="preserve">
          <source>The existing handlers for each scheme can be removed with the &lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt;() function. This returns the handling behavior for the given scheme to the default behavior.</source>
          <target state="translated">可以使用&lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt;（）函数删除每个方案的现有处理程序。这会将给定方案的处理行为返回到默认行为。</target>
        </trans-unit>
        <trans-unit id="2550353120c1ecadafe129a43c57242844e8178d" translate="yes" xml:space="preserve">
          <source>The exit code of the automated test will be ignored. Only relevant if &lt;code&gt;testcase&lt;/code&gt; is also set.</source>
          <target state="translated">自动测试的退出代码将被忽略。仅当还设置了 &lt;code&gt;testcase&lt;/code&gt; 时才相关。</target>
        </trans-unit>
        <trans-unit id="3d909f1f3fd0f968529698df55a378b5f15ceb96" translate="yes" xml:space="preserve">
          <source>The exit code of the test will be ignored during &lt;code&gt;make check&lt;/code&gt;.</source>
          <target state="translated">在进行 &lt;code&gt;make check&lt;/code&gt; 时,将忽略测试的退出代码。</target>
        </trans-unit>
        <trans-unit id="5a3924108fd29746b7c8322f2fbe53f1c1f3b240" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Calendar module provides a set of types that can be used to build calendars in Qt Quick. The module was introduced in Qt 5.7.</source>
          <target state="translated">实验性的Qt Labs Calendar模块提供了一组类型,可用于在Qt Quick中构建日历。该模块在Qt 5.7中被引入。</target>
        </trans-unit>
        <trans-unit id="6bc36f91d9c0a825b2b82dc87c3dd2ed6aa33300" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Platform module provides QML types for native platform extensions. The module was introduced in Qt 5.8.</source>
          <target state="translated">实验性的Qt Labs Platform模块为本地平台扩展提供了QML类型。该模块在Qt 5.8中被引入。</target>
        </trans-unit>
        <trans-unit id="6c41ce5d9e5bc759540fad7876eec9a05f6705bb" translate="yes" xml:space="preserve">
          <source>The expiration date corresponds to the parameters of the &quot;expires&quot; entry in the cookie string.</source>
          <target state="translated">过期日期与cookie字符串中的 &quot;expires &quot;条目参数相对应。</target>
        </trans-unit>
        <trans-unit id="c8ff44f2e7d87b2392f1b5354c1cb9c8bbe86492" translate="yes" xml:space="preserve">
          <source>The explicit state is also symmetric.</source>
          <target state="translated">明文状态也是对称的。</target>
        </trans-unit>
        <trans-unit id="68ba39a3b9c7ebcc711fa1193e08616a564f1d8e" translate="yes" xml:space="preserve">
          <source>The exporter accepts the &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; returned by the &lt;a href=&quot;qgeojson#importing-geojson&quot;&gt;importer&lt;/a&gt;, and returns a JSON document. The exporter is complementary to the importer because it executes the inverse action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd7ad1492e3ff151894efb5dcee06599d9cd187" translate="yes" xml:space="preserve">
          <source>The expose event (</source>
          <target state="translated">曝光事件(</target>
        </trans-unit>
        <trans-unit id="7be7f6b1536dfc8b655f6c0ccbdd6ebd7441191b" translate="yes" xml:space="preserve">
          <source>The exposure bias. The unit is the APEX (Additive System of Photographic Exposure) setting.</source>
          <target state="translated">曝光偏向。单位是APEX(摄影曝光加成系统)设置。</target>
        </trans-unit>
        <trans-unit id="efe24ea9cd9b41a675c9d4b47d0c845a29739407" translate="yes" xml:space="preserve">
          <source>The extended RGB color model, also known as the scRGB color space, is the same the RGB color model except it allows values under 0.0, and over 1.0. This makes it possible to represent colors that would otherwise be outside the range of the RGB colorspace but still use the same values for colors inside the RGB colorspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be490840d35de4ad82644243e076467fdc03daee" translate="yes" xml:space="preserve">
          <source>The extended attributes and rich content of places are not permitted to be saved. For QML this is related to &lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place::extendedAttributes&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;, and &lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModel&lt;/a&gt;. For C++ this relates to &lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace::extendedAttribute&lt;/a&gt;(), &lt;a href=&quot;qplace#content&quot;&gt;QPlace::content&lt;/a&gt;() and &lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager::getPlaceContent&lt;/a&gt;().</source>
          <target state="translated">不允许保存扩展属性和场所的丰富内容。对于QML，这与&lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place :: extendedAttributes&lt;/a&gt;，&lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt;，&lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModel有关&lt;/a&gt;。对于C ++，这与&lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace :: extendedAttribute&lt;/a&gt;（），&lt;a href=&quot;qplace#content&quot;&gt;QPlace :: content&lt;/a&gt;（）和&lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager :: getPlaceContent&lt;/a&gt;（）有关。</target>
        </trans-unit>
        <trans-unit id="27487702ff25cf3cc3efb1a52dac1f2b011ac1d2" translate="yes" xml:space="preserve">
          <source>The extensions are given as standard wildcard expressions. You can add a file extension to the filter using '+='. For example:</source>
          <target state="translated">扩展名是以标准的通配符表达式给出的。您可以使用'+='来添加文件扩展名到过滤器中。例如</target>
        </trans-unit>
        <trans-unit id="419d8aaff850915b38bda9d98e2bad3496ad5b99" translate="yes" xml:space="preserve">
          <source>The extensions are installed on the given</source>
          <target state="translated">分机安装在给定的</target>
        </trans-unit>
        <trans-unit id="a20d0533162d80710437020c3ae20cbf4942e69c" translate="yes" xml:space="preserve">
          <source>The extensions currently supported, and the structure of the value returned are as follows:</source>
          <target state="translated">目前支持的扩展,返回的值结构如下。</target>
        </trans-unit>
        <trans-unit id="11a1ed4512f5fdd02f81ea48df8a40f2f4dab4f0" translate="yes" xml:space="preserve">
          <source>The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits).</source>
          <target state="translated">该设备的外观。该值由类别(10位)和子类别(6位)组成。</target>
        </trans-unit>
        <trans-unit id="a5fcf64ea9a5a3cf41af649502541b94058d3ca6" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (e.g., when the code is in a shared library) and able to be stored in ROM with the application.</source>
          <target state="translated">额外的 &lt;code&gt;const&lt;/code&gt; 使整个定义为只读，这样效率更高（例如，当代码在共享库中时），并且可以与应用程序一起存储在ROM中。</target>
        </trans-unit>
        <trans-unit id="1b03091ddd7401af2a97ecd350684494ead0c8be" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (for example, when the code is in a shared library) and ROMable when the application is to be stored in ROM.</source>
          <target state="translated">额外的 &lt;code&gt;const&lt;/code&gt; 可使整个定义为只读，这样效率更高（例如，当代码位于共享库中时），并且在将应用程序存储在ROM中时可以变为ROM。</target>
        </trans-unit>
        <trans-unit id="e94fa010245c44408e32e290c5c7d1a4d0eab9bd" translate="yes" xml:space="preserve">
          <source>The extra data required to describe a curve in a CurveToElement element.</source>
          <target state="translated">在CurveToElement元素中描述曲线所需的额外数据。</target>
        </trans-unit>
        <trans-unit id="e00f9b6a4a06d496b8d33601ca2053e8b7f0cd18" translate="yes" xml:space="preserve">
          <source>The extra information takes the form of a</source>
          <target state="translated">额外信息的形式是</target>
        </trans-unit>
        <trans-unit id="ec8ddacd4a5656a7ba084394b938fd2c9673edbf" translate="yes" xml:space="preserve">
          <source>The factory function should return a null node.</source>
          <target state="translated">工厂函数应该返回一个空节点。</target>
        </trans-unit>
        <trans-unit id="e1409fe9edcb06844ff54c55c17ee1d0f9c3c0b2" translate="yes" xml:space="preserve">
          <source>The factory must be set before executing the engine.</source>
          <target state="translated">在执行发动机之前,必须先设置工厂。</target>
        </trans-unit>
        <trans-unit id="7320f8a548fafc3037a14c84ca46b1649ddd5619" translate="yes" xml:space="preserve">
          <source>The factory that produces accessibility interfaces for QObjects is a function of type &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt;. It is possible to have several factories installed. The last factory installed will be the first to be asked for interfaces. &lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface()&lt;/a&gt; uses the factories to create interfaces for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s. Normally, you need not be concerned about factories because you can implement plugins that produce interfaces. We will give examples of both approaches later.</source>
          <target state="translated">为&lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QObjects&lt;/a&gt;生成可访问性接口的工厂是QAccessible :: InterfaceFactory类型的函数。可能会安装多个工厂。最后安装的工厂将是第一个要求提供接口的工厂。&lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface（）&lt;/a&gt;使用工厂为&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;创建接口。通常，您不必担心工厂，因为您可以实现产生接口的插件。稍后我们将给出这两种方法的示例。</target>
        </trans-unit>
        <trans-unit id="081dde1c924d6fd751e45b13911caed844eee9bd" translate="yes" xml:space="preserve">
          <source>The failures will be reported as warning messages in the &lt;code&gt;qt.modeltest&lt;/code&gt; logging category.</source>
          <target state="translated">故障将在 &lt;code&gt;qt.modeltest&lt;/code&gt; 日志记录类别中报告为警告消息。</target>
        </trans-unit>
        <trans-unit id="de7784fbee2f1ce0759143b6c45de08a63fe3909" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">将通过&lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;的日志记录机制报告失败。</target>
        </trans-unit>
        <trans-unit id="ae83f930a32fcda281b0b0049ef449f512d5d125" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3743ec3b198f6c96268e2bc565e3adb016a773" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af16c0965c7ddf13399c8519438b0c6223b25f1" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">还可以通过设置 &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;环境变量&lt;/a&gt;来指定后备样式。</target>
        </trans-unit>
        <trans-unit id="c695b98c8ef6133f47df0a1c6d5d3c1f21b96724" translate="yes" xml:space="preserve">
          <source>The family name is case insensitive and may optionally include a foundry name, e.g. &quot;Helvetica [Cronyx]&quot;. If the family is available from more than one foundry and the foundry isn't specified, an arbitrary foundry is chosen. If the family isn't available a family will be set using the font matching algorithm.</source>
          <target state="translated">族名不区分大小写,可以选择包含一个铸造厂名称,例如 &quot;Helvetica [Cronyx]&quot;。如果字体族可以从一个以上的铸造厂获得,并且没有指定铸造厂,则会选择一个任意的铸造厂。如果没有可用的字体系列,将使用字体匹配算法设置一个字体系列。</target>
        </trans-unit>
        <trans-unit id="7c9de3bad49fa50ba1a1193d09c6c4715c9c6430" translate="yes" xml:space="preserve">
          <source>The family name of the font that has been resolved for the current font and &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt;.</source>
          <target state="translated">当前字体和&lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt;已解析的字体的系列名称。</target>
        </trans-unit>
        <trans-unit id="ed817248c7744f6a7e612abc2da0de1d37fd08d4" translate="yes" xml:space="preserve">
          <source>The feature file needs to be injected into each subproject, for example by .qmake.conf:</source>
          <target state="translated">特征文件需要注入到每个子项目中,例如通过.qmake.conf。</target>
        </trans-unit>
        <trans-unit id="89367d7a675cd8fa3aea31a7b21fd216582687e5" translate="yes" xml:space="preserve">
          <source>The feature is not supported.</source>
          <target state="translated">不支持该功能。</target>
        </trans-unit>
        <trans-unit id="be0c38b405788b555c74fb6ac649ce0d398fa092" translate="yes" xml:space="preserve">
          <source>The feature is probably supported.</source>
          <target state="translated">该功能可能是支持的。</target>
        </trans-unit>
        <trans-unit id="e3529dc1e8cbfe0aacdb5abcc186c70c7d738bd7" translate="yes" xml:space="preserve">
          <source>The feature may be supported.</source>
          <target state="translated">可支持该功能。</target>
        </trans-unit>
        <trans-unit id="d632d7204272182e505ccac2ca91680a91af1aa5" translate="yes" xml:space="preserve">
          <source>The features common to all sensor types are:</source>
          <target state="translated">所有类型的传感器的共同特点是:</target>
        </trans-unit>
        <trans-unit id="c8c07ebb9de2053f2eaf44333421590b0ae3a6cb" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;的功能包括：</target>
        </trans-unit>
        <trans-unit id="e5083f6590c34035d84c3c061cc6b51d55fe9308" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt;的功能是：</target>
        </trans-unit>
        <trans-unit id="9b71dfd6fbe33473f441a8e639af0bc10a3daf15" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt;的功能包括：</target>
        </trans-unit>
        <trans-unit id="d1fa64e038a2d67bf78d6b36c840ab819aae1517" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt;的功能是：</target>
        </trans-unit>
        <trans-unit id="cb8dddff1869e7da8628f8f12e7a7b4f65b467dd" translate="yes" xml:space="preserve">
          <source>The features of all orientable sensors are:</source>
          <target state="translated">所有可定向传感器的特点是:</target>
        </trans-unit>
        <trans-unit id="668b59d8088c757547347d4f29fef8529894a5c6" translate="yes" xml:space="preserve">
          <source>The fetch macro creates a local variable named</source>
          <target state="translated">fetch宏创建了一个名为</target>
        </trans-unit>
        <trans-unit id="ca2c7b0e49784c7c955679dcfbf3f777dccbf8a2" translate="yes" xml:space="preserve">
          <source>The fewer elements that are in a delegate, the faster they can be created, and thus the faster the view can be scrolled.</source>
          <target state="translated">委托中的元素越少,创建的速度就越快,从而使视图的滚动速度越快。</target>
        </trans-unit>
        <trans-unit id="dc70528f0bb76c7e0db594b3efe04fb6e8aab212" translate="yes" xml:space="preserve">
          <source>The fibonacci function is run whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; emits a &lt;code&gt;tapped&lt;/code&gt; signal.</source>
          <target state="translated">每当&lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;发出 &lt;code&gt;tapped&lt;/code&gt; 信号时，都会运行fibonacci函数。</target>
        </trans-unit>
        <trans-unit id="93715eb9d91478ab6a8d62b940cdf02e19c10b9c" translate="yes" xml:space="preserve">
          <source>The field layouts for the DCE versions listed in the table above are specified in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;Network Working Group UUID Specification&lt;/a&gt;.</source>
          <target state="translated">上表中列出的DCE版本的字段布局在&lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;网络工作组UUID规范&lt;/a&gt;中指定。</target>
        </trans-unit>
        <trans-unit id="6a5ace88dd35cb522e512b8e4598020831d059d4" translate="yes" xml:space="preserve">
          <source>The field must be specified when inserting records.</source>
          <target state="translated">插入记录时必须指定该字段。</target>
        </trans-unit>
        <trans-unit id="c2ded0882fd026a5c419d0941f9c37e913903bff" translate="yes" xml:space="preserve">
          <source>The fields are numbered from left to right using the text of the &lt;code&gt;SELECT&lt;/code&gt; statement, e.g. in</source>
          <target state="translated">字段使用 &lt;code&gt;SELECT&lt;/code&gt; 语句的文本从左到右编号，例如</target>
        </trans-unit>
        <trans-unit id="a705dae1d4aada45995947a3d6b26ee8a8838e3f" translate="yes" xml:space="preserve">
          <source>The fields doesn't have to be specified when inserting records.</source>
          <target state="translated">插入记录时不必指定字段。</target>
        </trans-unit>
        <trans-unit id="9668959dce390adf51ef8bf9cbf2e7037c112711" translate="yes" xml:space="preserve">
          <source>The fields never grow beyond their &lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;effective size hint&lt;/a&gt;. This is the default for QMacStyle.</source>
          <target state="translated">这些字段永远不会超出其&lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;有效大小提示&lt;/a&gt;。这是QMacStyle的默认设置。</target>
        </trans-unit>
        <trans-unit id="413827f9146e09327e10578cb4a3a901cd0b3e7a" translate="yes" xml:space="preserve">
          <source>The fields of any page are accessible from any other page. For example:</source>
          <target state="translated">任何页面的字段都可以从任何其他页面访问。例如:</target>
        </trans-unit>
        <trans-unit id="20171732ed95203eeee69c2baaa55fa1987b2748" translate="yes" xml:space="preserve">
          <source>The figure shows the exclusive or of two elliptical regions.</source>
          <target state="translated">图中显示的是两个椭圆区域的专属或。</target>
        </trans-unit>
        <trans-unit id="e280c08422a6e6ab92a49e27d2b7ae96b7292601" translate="yes" xml:space="preserve">
          <source>The figure shows the intersection of two elliptical regions.</source>
          <target state="translated">图为两个椭圆区域的交点。</target>
        </trans-unit>
        <trans-unit id="74d7e9d212d652f86f56bcc0427b413a1ce2ed03" translate="yes" xml:space="preserve">
          <source>The figure shows the result when the ellipse on the right is subtracted from the ellipse on the left (&lt;code&gt;left - right&lt;/code&gt;).</source>
          <target state="translated">该图显示了从左侧的椭圆（ &lt;code&gt;left - right&lt;/code&gt; ）减去右侧的椭圆时的结果。</target>
        </trans-unit>
        <trans-unit id="24f0e0195aa6d69b7d8d97f712ac81cd5cdb7e9d" translate="yes" xml:space="preserve">
          <source>The figure shows the union of two elliptical regions.</source>
          <target state="translated">图中显示的是两个椭圆区域的结合。</target>
        </trans-unit>
        <trans-unit id="04fbc7508d5d457aedc840547581d13fb785d13c" translate="yes" xml:space="preserve">
          <source>The file</source>
          <target state="translated">该文件</target>
        </trans-unit>
        <trans-unit id="87b8bb0d506174c10132f9b154047e227fadc07a" translate="yes" xml:space="preserve">
          <source>The file can either be a local file or in a &lt;a href=&quot;resources&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">该文件可以是本地文件，也可以是&lt;a href=&quot;resources&quot;&gt;资源中的&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="b7f92d71bca12ea4eb379423da9a3fff5e5e13b1" translate="yes" xml:space="preserve">
          <source>The file cannot be written locally, due to access restrictions.</source>
          <target state="translated">由于访问限制,文件不能写入本地。</target>
        </trans-unit>
        <trans-unit id="17a29bd38d8731d1238d1f090aa4db91cfeee762" translate="yes" xml:space="preserve">
          <source>The file content is used to look for a match</source>
          <target state="translated">文件内容是用来寻找匹配的。</target>
        </trans-unit>
        <trans-unit id="289d08fb6086ce7f84fd8608ebb75393e410ea13" translate="yes" xml:space="preserve">
          <source>The file could not be accessed.</source>
          <target state="translated">该文件无法被访问。</target>
        </trans-unit>
        <trans-unit id="c6781003b0d485483594ddf4be6950de9167e23a" translate="yes" xml:space="preserve">
          <source>The file could not be copied.</source>
          <target state="translated">该文件无法复制。</target>
        </trans-unit>
        <trans-unit id="ace801f7ac43821b215005cc7963f51a41366f3a" translate="yes" xml:space="preserve">
          <source>The file could not be opened.</source>
          <target state="translated">该文件无法打开。</target>
        </trans-unit>
        <trans-unit id="97a70e37571728ba37e51a44c9f1629967feaf10" translate="yes" xml:space="preserve">
          <source>The file could not be removed.</source>
          <target state="translated">该文件无法删除。</target>
        </trans-unit>
        <trans-unit id="46323538908f56bcc6322b88467249ea5c0e32be" translate="yes" xml:space="preserve">
          <source>The file could not be renamed.</source>
          <target state="translated">该文件无法重命名。</target>
        </trans-unit>
        <trans-unit id="ffa64cc5e00ef6a4c9a9121bd85ac47c080c00c3" translate="yes" xml:space="preserve">
          <source>The file could not be resized.</source>
          <target state="translated">文件无法调整大小。</target>
        </trans-unit>
        <trans-unit id="6de0e789e4869da84fda442f9d9a569e7760bf41" translate="yes" xml:space="preserve">
          <source>The file dialog has two view modes: &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; and &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt;. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; presents the contents of the current directory as a list of file and directory names. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt; also displays a list of file and directory names, but provides additional information alongside each name, such as the file size and modification date. Set the mode with &lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt;():</source>
          <target state="translated">文件对话框有两种查看模式：&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt;和&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt;。&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;列表&lt;/a&gt;将当前目录的内容显示为文件和目录名称的列表。&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;&amp;ldquo;详细信息&amp;rdquo;&lt;/a&gt;还显示文件和目录名称的列表，但是在每个名称旁边提供其他信息，例如文件大小和修改日期。使用&lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt;（）设置模式：</target>
        </trans-unit>
        <trans-unit id="fb319ead782636ae34c098a5e5c515388203236f" translate="yes" xml:space="preserve">
          <source>The file dialog will then look like this:</source>
          <target state="translated">然后,文件对话框就会变成这样。</target>
        </trans-unit>
        <trans-unit id="8f8d5852011cc348fc09a4dd8d06984e8b30e934" translate="yes" xml:space="preserve">
          <source>The file dialog's working directory will be set to</source>
          <target state="translated">文件对话框的工作目录将被设置为</target>
        </trans-unit>
        <trans-unit id="dea6ec74a83b82907426f38c113761d189da5d6d" translate="yes" xml:space="preserve">
          <source>The file format is XML-based. For a better understanding of the format we will discuss the following example:</source>
          <target state="translated">文件格式是基于XML的。为了更好地理解该格式,我们将讨论下面的例子。</target>
        </trans-unit>
        <trans-unit id="e745a0ac2ccd6f20c4ae3226590b48293ba4e830" translate="yes" xml:space="preserve">
          <source>The file format support is provided transparently, through plugins for Qt's image I/O system. As such, this module provides no API of its own. Instead, the functionality is accessed in the same way as other image I/O in Qt: through &lt;a href=&quot;qimage#load&quot;&gt;QImage::load&lt;/a&gt;() and &lt;a href=&quot;qimage#save&quot;&gt;QImage::save&lt;/a&gt;(). Or, for more detailed control, through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;.</source>
          <target state="translated">通过Qt图像I / O系统的插件，透明地提供了文件格式支持。因此，此模块不提供自己的API。取而代之的是，通过&lt;a href=&quot;qimage#load&quot;&gt;QImage :: load&lt;/a&gt;（）和&lt;a href=&quot;qimage#save&quot;&gt;QImage :: save&lt;/a&gt;（），以与Qt：中其他图像I / O相同的方式访问功能。或者，通过&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;和&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;获得更详细的控制。</target>
        </trans-unit>
        <trans-unit id="ae6e6d3aa5638b389d0f06ddd264a5ab4a87f94f" translate="yes" xml:space="preserve">
          <source>The file formats accepted by the sprite engine are the same as the file formats accepted by other QML types, such as &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;. In order to animate the image, however, the sprite engine requires the image file to contain all of the frames of the animation. They should be arranged in a contiguous line, which may wrap from the right edge of the file to a lower row starting from the left edge of the file (and which is placed directly below the previous row).</source>
          <target state="translated">Sprite引擎接受的文件格式与其他QML类型（例如&lt;a href=&quot;qml-qtquick-image&quot;&gt;Image）&lt;/a&gt;接受的文件格式相同。但是，为了使图像动画化，精灵引擎要求图像文件包含动画的所有帧。它们应布置在连续的行中，该行可以从文件的右边缘环绕到从文件的左边缘开始的较低行（并直接位于前一行的下面）。</target>
        </trans-unit>
        <trans-unit id="c47796e6a5bcf6195c81d42bbec97b436cab59d3" translate="yes" xml:space="preserve">
          <source>The file handle passed into &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() should be closed by &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), the default behavior is that close just flushes the file and the application is responsible for closing the file handle. When opening a file by name, this flag is ignored as Qt always owns the file handle and must close it.</source>
          <target state="translated">传递给&lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;（）的文件句柄应由&lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;（）关闭，默认行为是close仅刷新文件，而应用程序负责关闭文件句柄。当按名称打开文件时，此标志将被忽略，因为Qt始终拥有文件句柄并且必须将其关闭。</target>
        </trans-unit>
        <trans-unit id="89ebe3a5abf90e1f1d9b0397f1aafe659fdd15fb" translate="yes" xml:space="preserve">
          <source>The file icon.</source>
          <target state="translated">文件图标。</target>
        </trans-unit>
        <trans-unit id="afa85386d788fb0d7fff3b7e5741d5a921e6f033" translate="yes" xml:space="preserve">
          <source>The file info icon in a file dialog.</source>
          <target state="translated">对话框文件中的信息图标文件。</target>
        </trans-unit>
        <trans-unit id="b81c9975252c0e516aa5ffbb352e8f60c7c1ec06" translate="yes" xml:space="preserve">
          <source>The file is closed before it is removed.</source>
          <target state="translated">文件被关闭后才会被删除。</target>
        </trans-unit>
        <trans-unit id="982cfb714bac8dc9c048460ce089c9a0dbbb9a93" translate="yes" xml:space="preserve">
          <source>The file is closed before it is renamed.</source>
          <target state="translated">在重命名之前,文件已经被关闭。</target>
        </trans-unit>
        <trans-unit id="8c9565d7547b0c97710ee573412b8bb14e389d8a" translate="yes" xml:space="preserve">
          <source>The file is executable by anyone.</source>
          <target state="translated">该文件可由任何人执行。</target>
        </trans-unit>
        <trans-unit id="0aa41dc5fbccda08ab119783bd9257a6181e13b9" translate="yes" xml:space="preserve">
          <source>The file is executable by the group.</source>
          <target state="translated">该文件可由集团执行。</target>
        </trans-unit>
        <trans-unit id="443038a845cf12682c8c5e5da53ca0b0956371f6" translate="yes" xml:space="preserve">
          <source>The file is executable by the owner of the file.</source>
          <target state="translated">该文件的所有者可以执行该文件。</target>
        </trans-unit>
        <trans-unit id="f53084bc2769836579a360e203e609b9910bfcfd" translate="yes" xml:space="preserve">
          <source>The file is executable by the user.</source>
          <target state="translated">该文件可由用户执行。</target>
        </trans-unit>
        <trans-unit id="d39c65ac65e71fa0090e698b565d4cad4cbaea3f" translate="yes" xml:space="preserve">
          <source>The file is expected to contain a serialized QRhiShader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516c92d23c55c12c9399e3c1f1da3c104cbdbad9" translate="yes" xml:space="preserve">
          <source>The file is infected with a virus.</source>
          <target state="translated">该文件已被病毒感染。</target>
        </trans-unit>
        <trans-unit id="b0245d29a06621f24fcb73bbd611e934b6311355" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="translated">该文件用&lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;（）打开，用&lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;（）关闭，并用&lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;（）刷新。通常使用&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;或&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;读写数据，但您也可以调用&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;继承的函数&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（），&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（），&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（），&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;还继承了&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（），&lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;（）和&lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;（），它们一次只工作一个字符。</target>
        </trans-unit>
        <trans-unit id="a98035dfe527362ccc75d55e5e4e186d578a4ffe" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). QFile also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaccbcbbe1966f0ecd4d1ee4623ad28195e8def9" translate="yes" xml:space="preserve">
          <source>The file is readable by anyone.</source>
          <target state="translated">该文件是任何人都可以阅读的。</target>
        </trans-unit>
        <trans-unit id="43a15110b7509f5d7b670b8ff3f6a632d8fed2df" translate="yes" xml:space="preserve">
          <source>The file is readable by the group.</source>
          <target state="translated">该文件可由该组读取。</target>
        </trans-unit>
        <trans-unit id="722abac4e42d21969d135844160eae2a1fe94c43" translate="yes" xml:space="preserve">
          <source>The file is readable by the owner of the file.</source>
          <target state="translated">该文件的所有者可以阅读该文件。</target>
        </trans-unit>
        <trans-unit id="fbbab456259833f10f65b10c415d51fe271dea4b" translate="yes" xml:space="preserve">
          <source>The file is readable by the user.</source>
          <target state="translated">该文件可被用户读取。</target>
        </trans-unit>
        <trans-unit id="bb640cb9db20736720461cb520679e61679607da" translate="yes" xml:space="preserve">
          <source>The file is then accessible as &lt;code&gt;:/cut-img.png&lt;/code&gt; from the application. It is also possible to specify a path prefix for all files in the &lt;code&gt;.qrc&lt;/code&gt; file using the &lt;code&gt;qresource&lt;/code&gt; tag's &lt;code&gt;prefix&lt;/code&gt; attribute:</source>
          <target state="translated">然后，可以从应用程序中以 &lt;code&gt;:/cut-img.png&lt;/code&gt; 格式访问该文件。也可以到指定的路径前缀的所有文件 &lt;code&gt;.qrc&lt;/code&gt; 使用文件 &lt;code&gt;qresource&lt;/code&gt; 标签的 &lt;code&gt;prefix&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="68c29315f7113874a6bf775ac3a596e41d0ee7c7" translate="yes" xml:space="preserve">
          <source>The file is writable by anyone.</source>
          <target state="translated">该文件是任何人都可以写的。</target>
        </trans-unit>
        <trans-unit id="69e8ad90f794f4caf0a458a450f4786e2d69a6bc" translate="yes" xml:space="preserve">
          <source>The file is writable by the group.</source>
          <target state="translated">该文件是可以被组写的。</target>
        </trans-unit>
        <trans-unit id="5ecd454f5284aebfac91f735a168651b68580e8e" translate="yes" xml:space="preserve">
          <source>The file is writable by the owner of the file.</source>
          <target state="translated">文件的所有者可以写文件。</target>
        </trans-unit>
        <trans-unit id="9a3726362d6c3aaeb5dd7bc5c39aed12a3918e9f" translate="yes" xml:space="preserve">
          <source>The file is writable by the user.</source>
          <target state="translated">该文件是可以被用户写入的。</target>
        </trans-unit>
        <trans-unit id="4842c74e8be618bd5d85d8111452641ea3a2df0e" translate="yes" xml:space="preserve">
          <source>The file mode defines the number and type of items that the user is expected to select in the dialog.</source>
          <target state="translated">文件模式定义了用户在对话框中要选择的项目数量和类型。</target>
        </trans-unit>
        <trans-unit id="0af5a6a4619125359c00d8fc1ae35bf7e3b51c1e" translate="yes" xml:space="preserve">
          <source>The file must reference a TrueType or OpenType font.</source>
          <target state="translated">该文件必须引用TrueType或OpenType字体。</target>
        </trans-unit>
        <trans-unit id="cba7c43d020e049525e6b24706c643c90aa4b520" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">文件名可以引用磁盘上的实际文件，也可以引用应用程序的嵌入式资源之一。有关如何在应用程序的可执行文件中嵌入图像和其他资源文件的详细信息，请参见&lt;a href=&quot;resources&quot;&gt;资源系统&lt;/a&gt;概述。</target>
        </trans-unit>
        <trans-unit id="d6f1bce46d0313d1d9d1d6b571d69189e3e972cb" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed pixmaps and other resource files in the application's executable.</source>
          <target state="translated">文件名可以引用磁盘上的实际文件，也可以引用应用程序的嵌入式资源之一。有关如何在应用程序的可执行文件中嵌入像素图和其他资源文件的详细信息，请参见&lt;a href=&quot;resources&quot;&gt;资源系统&lt;/a&gt;概述。</target>
        </trans-unit>
        <trans-unit id="0f8956d85a1bd69e0e0e70386a0969b26bee3925" translate="yes" xml:space="preserve">
          <source>The file name can refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">文件名可以引用磁盘上的实际文件或应用程序的嵌入式资源之一。有关如何在应用程序的可执行文件中嵌入图像和其他资源文件的详细信息，请参见&lt;a href=&quot;resources&quot;&gt;资源系统&lt;/a&gt;概述。</target>
        </trans-unit>
        <trans-unit id="c18e8813eab0e372abf488d58b0832e6dcd6fd1e" translate="yes" xml:space="preserve">
          <source>The file name is used for error reporting and for resolving relative path URIs.</source>
          <target state="translated">文件名用于错误报告和解析相对路径URI。</target>
        </trans-unit>
        <trans-unit id="76f0a934d296e541342b5ef7f42be2027247ba01" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="translated">文件名通常在构造函数中传递，但可以随时使用&lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;（）进行设置。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;期望文件分隔符为'/'，而不管操作系统是什么。不支持使用其他分隔符（例如，&amp;ldquo; \&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="bf69d031901b33afef27fbee56fe1a28e1df50b5" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). QFile expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76560e8016b96254ccd4a34bd7dcaf02a68c5dbb" translate="yes" xml:space="preserve">
          <source>The file name of the temporary file can be found by calling &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;(). Note that this is only defined after the file is first opened; the function returns an empty string before this.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）找到临时文件的文件名。请注意，仅在首次打开文件后才定义。该函数在此之前返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="9d0ca0cfcf6aa3686cf27fa63705c73f1ec87a65" translate="yes" xml:space="preserve">
          <source>The file path is empty if no translation was loaded yet, the loading failed, or if the translation was not loaded from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc92d732eb84487ccd02784ba46bd680728446c6" translate="yes" xml:space="preserve">
          <source>The file referenced should be linear PCM (WAV format).</source>
          <target state="translated">引用的文件应该是线性PCM(WAV格式)。</target>
        </trans-unit>
        <trans-unit id="16b9e5ca37f860e9c916612d228be84e9d4a9e3f" translate="yes" xml:space="preserve">
          <source>The file should have a &lt;code&gt;Paths&lt;/code&gt; group which contains the entries that correspond to each value of the &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo::LibraryLocation&lt;/a&gt; enum. See the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; documentation for details on the meaning of the various locations.</source>
          <target state="translated">该文件应具有一个 &lt;code&gt;Paths&lt;/code&gt; 组，其中包含与&lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo :: LibraryLocation&lt;/a&gt;枚举的每个值相对应的条目。有关各个位置的含义的详细信息，请参见&lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="ce76b5a74d570300449990c23aea2977705937f3" translate="yes" xml:space="preserve">
          <source>The file size exceeds the file system limitation.</source>
          <target state="translated">文件大小超过了文件系统的限制。</target>
        </trans-unit>
        <trans-unit id="770f5847642a8b9fe5bc330359a27b3fe682324e" translate="yes" xml:space="preserve">
          <source>The file system is usually encoded in UTF-8 on all modern Linux distributions and should not pose a problem. File I/O defaults to UTF-8.</source>
          <target state="translated">在所有现代Linux发行版上,文件系统通常以UTF-8编码,应该不会造成问题。文件I/O默认为UTF-8。</target>
        </trans-unit>
        <trans-unit id="e3f76ecb61bc795df43d9106b7edc7d417a108d9" translate="yes" xml:space="preserve">
          <source>The file that the &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo处理&lt;/a&gt;的文件是在构造函数中设置的，或以后使用&lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;（）设置。使用&lt;a href=&quot;qfileinfo#exists&quot;&gt;exist&lt;/a&gt;（）查看文件是否存在，使用&lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;（）获取其大小。</target>
        </trans-unit>
        <trans-unit id="7f8728bc6896fec6079ad50ff6d3cbce00b5f4dd" translate="yes" xml:space="preserve">
          <source>The file that the QFileInfo works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1dc260e13d2946c6e7668a2c0d9af4e5541b4" translate="yes" xml:space="preserve">
          <source>The file was blocked due to local policy.</source>
          <target state="translated">由于当地的政策,该文件被阻止。</target>
        </trans-unit>
        <trans-unit id="68a10fb14dff51881ae2ec9b65a46be2030e1752" translate="yes" xml:space="preserve">
          <source>The file will start playing assuming that the audio system and output device support it. If you run out of luck, check what's up with the &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() function.</source>
          <target state="translated">假设音频系统和输出设备支持该文件，则该文件将开始播放。如果运气不佳，请检查&lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;（）函数的问题。</target>
        </trans-unit>
        <trans-unit id="a3ac39201e58098b5bf97b970df018ec51e712d4" translate="yes" xml:space="preserve">
          <source>The file's contents is rendered in a separate paragraph, using a monospace font and the standard indentation. The code is shown verbatim.</source>
          <target state="translated">该文件的内容以单独的段落呈现,使用单倍区字体和标准缩进。代码逐字显示。</target>
        </trans-unit>
        <trans-unit id="b9473ce53bf62875482d029c2f8783cd2c191df4" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by &lt;a href=&quot;qfileinfo#birthTime&quot;&gt;birthTime&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0e78131cd8bed43d0c23737fcdf76080d25c59" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by created(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="translated">该文件的日期是由返回（）创建的，&lt;a href=&quot;qfileinfo#lastModified&quot;&gt;上次更改时间&lt;/a&gt;（），&lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;（）和&lt;a href=&quot;qfileinfo#fileTime&quot;&gt;FILETIME&lt;/a&gt;（）。有关文件访问权限的信息可通过&lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;（），&lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;（）和&lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;（）获得。可通过&lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;（），&lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;（），&lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;（）和&lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;（）获得文件的所有权。您可以使用&lt;a href=&quot;qfileinfo#permission&quot;&gt;权限&lt;/a&gt;（）函数在单个语句中检查文件的权限和所有权。</target>
        </trans-unit>
        <trans-unit id="1c2ac615e1ab1f8b79c2d68294a17e1d9fb61476" translate="yes" xml:space="preserve">
          <source>The file's type is obtained with &lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;isSymLink&lt;/a&gt;(). The &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt;() function provides the name of the file the symlink points to.</source>
          <target state="translated">通过&lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt;（），&lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt;（）和&lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;isSymLink&lt;/a&gt;（）获得文件的类型。该&lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt;（）函数提供该文件的符号链接指向的名字。</target>
        </trans-unit>
        <trans-unit id="a9e33e8712649581ddc060a2bf56125a60991c61" translate="yes" xml:space="preserve">
          <source>The filename (i.e. everything after the last '/' in the path) is removed. The trailing '/' is kept, unless StripTrailingSlash is set. Only valid if RemovePath is not set.</source>
          <target state="translated">文件名(即路径中最后一个'/'之后的所有内容)被删除。除非设置了StripTrailingSlash,否则会保留后面的'/'。只有当RemovePath没有被设置时有效。</target>
        </trans-unit>
        <trans-unit id="d8f8c656699bfdab741f34e4d657f8c3737a4e4d" translate="yes" xml:space="preserve">
          <source>The filename or source of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b59fc0a6132c7d17fdc1bfbebf1ca218dc2e573" translate="yes" xml:space="preserve">
          <source>The filename that is created from the custom compiler.</source>
          <target state="translated">由自定义编译器创建的文件名。</target>
        </trans-unit>
        <trans-unit id="8893d1706c9be794247f1c0a5dfddfda62099613" translate="yes" xml:space="preserve">
          <source>The files &lt;code&gt;qaxserver.rc&lt;/code&gt; and &lt;code&gt;qaxserver.def&lt;/code&gt; are part of the framework and can be used from their usual location (specify a path in the &lt;code&gt;.pro&lt;/code&gt; file), or copied into the project directory. You can modify these files as long as it includes any file as the type library entry, ie. you can add version information or specify a different toolbox icon.</source>
          <target state="translated">文件 &lt;code&gt;qaxserver.rc&lt;/code&gt; 和 &lt;code&gt;qaxserver.def&lt;/code&gt; 是框架的一部分，可以从其通常位置（在 &lt;code&gt;.pro&lt;/code&gt; 文件中指定路径）使用，也可以将其复制到项目目录中。您可以修改这些文件，只要它包含任何文件作为类型库条目即可。您可以添加版本信息或指定其他工具箱图标。</target>
        </trans-unit>
        <trans-unit id="92fee63d2a5af9b89f1ccfefa9fa58da602b91f0" translate="yes" xml:space="preserve">
          <source>The files added to your project are:</source>
          <target state="translated">添加到您的项目中的文件是:</target>
        </trans-unit>
        <trans-unit id="825e433162a80c586eb8062b829d6aa9df3cb6de" translate="yes" xml:space="preserve">
          <source>The files must be in a directory in the filesystem or in the &lt;a href=&quot;resources&quot;&gt;resource system&lt;/a&gt;.</source>
          <target state="translated">这些文件必须位于文件系统或&lt;a href=&quot;resources&quot;&gt;资源系统&lt;/a&gt;中的目录中。</target>
        </trans-unit>
        <trans-unit id="acf3e99396fda9962e8a0858b6dc3d16e90bb8a6" translate="yes" xml:space="preserve">
          <source>The files to be selected are placed in directories named with a &lt;code&gt;'+'&lt;/code&gt; and a selector name. In the above example you could have the platform configurations selected by placing them in the following locations:</source>
          <target state="translated">要选择的文件放置在以 &lt;code&gt;'+'&lt;/code&gt; 和选择器名称命名的目录中。在上面的示例中，您可以通过将平台配置放在以下位置来选择平台配置：</target>
        </trans-unit>
        <trans-unit id="868964705b30f1901fe92e61ffe16758f2b309a2" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the axis shades.</source>
          <target state="translated">轴阴影的填充(笔刷)颜色。</target>
        </trans-unit>
        <trans-unit id="b7d44bfbe5728c3f5e289c8480f88b17785c72ec" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the bar set.</source>
          <target state="translated">条形图的填充(刷子)颜色。</target>
        </trans-unit>
        <trans-unit id="553b02c912031f130c2f29bfc692302539f18576" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the slice.</source>
          <target state="translated">切片的填充(刷子)颜色。</target>
        </trans-unit>
        <trans-unit id="c5733dc70615bc0e56a53874caa8e12f7bd0a73e" translate="yes" xml:space="preserve">
          <source>The filter can modify the reading.</source>
          <target state="translated">过滤器可以修改读数。</target>
        </trans-unit>
        <trans-unit id="33e5b6182a24936979dc8e63596c8cba17da2e36" translate="yes" xml:space="preserve">
          <source>The filter engine allows for adding new filters and changing the existing filters' data through the &lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt;() method. An existing filter can be removed through the &lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt;() method.</source>
          <target state="translated">筛选器引擎允许通过&lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt;（）方法添加新的筛选器并更改现有筛选器的数据。可以通过&lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt;（）方法删除现有的过滤器。</target>
        </trans-unit>
        <trans-unit id="a44f23ace8e9953d62f0222e6150ee596c913548" translate="yes" xml:space="preserve">
          <source>The filter engine allows the management of filters associated with a &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; instance. The help engine internally creates an instance of the filter engine, which can be accessed by calling &lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore::filterEngine&lt;/a&gt;(). Therefore, the public constructor of this class is disabled.</source>
          <target state="translated">筛选器引擎允许管理与&lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt;实例关联的筛选器。帮助引擎在内部创建过滤器引擎的实例，可以通过调用&lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore :: filterEngine&lt;/a&gt;（）对其进行访问。因此，该类的公共构造函数被禁用。</target>
        </trans-unit>
        <trans-unit id="5e0d4bc3125aef7c21fe298cb367b393849770de" translate="yes" xml:space="preserve">
          <source>The filter function must be of the form:</source>
          <target state="translated">过滤器功能必须是以下形式:</target>
        </trans-unit>
        <trans-unit id="4d54bddf2e1b434d87011febd774ca0af87588e4" translate="yes" xml:space="preserve">
          <source>The filter is a SQL &lt;code&gt;WHERE&lt;/code&gt; clause without the keyword &lt;code&gt;WHERE&lt;/code&gt; (for example, &lt;code&gt;name='Josephine')&lt;/code&gt;.</source>
          <target state="translated">筛选器是一个不含关键字 &lt;code&gt;WHERE&lt;/code&gt; 的SQL &lt;code&gt;WHERE&lt;/code&gt; 子句（例如， &lt;code&gt;name='Josephine')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a1cebe74b94bb2dc48932dbc3342ba4e66ec08" translate="yes" xml:space="preserve">
          <source>The filter might be called from different threads, but never concurrently. The filter shall not call any static functions of &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">过滤器可以从不同的线程中调用，但绝不能同时调用。过滤器不得调用&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory的&lt;/a&gt;任何静态函数。</target>
        </trans-unit>
        <trans-unit id="9f43548552a57a2f6ab2db0c5ee4b2f772ef8a6e" translate="yes" xml:space="preserve">
          <source>The filter should be case sensitive.</source>
          <target state="translated">过滤器应区分大小写。</target>
        </trans-unit>
        <trans-unit id="5b4920d6bad6e0d2b28c43f0ad0b970d5e026eb2" translate="yes" xml:space="preserve">
          <source>The filtering mode is set on the texture instance just before the texture is bound for rendering.</source>
          <target state="translated">滤波模式是在纹理绑定渲染之前对纹理实例进行设置的。</target>
        </trans-unit>
        <trans-unit id="4bc83e005e4bbd0cdc333278a9404167626687f8" translate="yes" xml:space="preserve">
          <source>The filters are identified by a filter name string. Filter details are described by the &lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; class.</source>
          <target state="translated">过滤器由过滤器名称字符串标识。筛选器详细信息由&lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt;类描述。</target>
        </trans-unit>
        <trans-unit id="fb3445c4984fbf8ccd1b41230c636dfdf7e90974" translate="yes" xml:space="preserve">
          <source>The final appearance of a paused progress indicator depends on the active Windows theme. Typically, a paused progress indicator turns yellow to indicate that the progress is currently paused. Unlike a &lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;stopped&lt;/a&gt; progress indicator, a paused progress should not be used to indicate an error.</source>
          <target state="translated">进度指示器暂停的最终外观取决于活动的Windows主题。通常，已暂停的进度指示器会变为黄色，以指示进度当前已暂停。与已&lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;停止的&lt;/a&gt;进度指示器不同，不应将已暂停的进度用于指示错误。</target>
        </trans-unit>
        <trans-unit id="83b59d3c9d98b206219dc424663cf51e143bdb8b" translate="yes" xml:space="preserve">
          <source>The final appearance of a stopped progress indicator depends on the active Windows theme. Typically, a stopped progress indicator turns red to indicate that the progress is currently stopped. Unlike a &lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;paused&lt;/a&gt; progress indicator, a stopped progress may be used to indicate an error.</source>
          <target state="translated">停止进度指示器的最终外观取决于活动的Windows主题。通常，已停止的进度指示器会变为红色，以指示进度当前已停止。与&lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;暂停的&lt;/a&gt;进度指示器不同，停止的进度可用于指示错误。</target>
        </trans-unit>
        <trans-unit id="0ff08c092a13ab85ecb55f1065fefa61e1c4fd04" translate="yes" xml:space="preserve">
          <source>The final step is to run the example application with your custom style:</source>
          <target state="translated">最后一步是用您的自定义样式运行示例应用程序。</target>
        </trans-unit>
        <trans-unit id="c54ac6f0d1251abaf1aa7e8267cc3e54b680cd9d" translate="yes" xml:space="preserve">
          <source>The final step is to use the &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; variable to instruct qmake that this object is a target to be built:</source>
          <target state="translated">最后一步是使用 &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; 变量来指示qmake该对象是要构建的目标：</target>
        </trans-unit>
        <trans-unit id="1e679b89cdb4c2ac43fb8717455ba0f51b35cf7d" translate="yes" xml:space="preserve">
          <source>The finished product:</source>
          <target state="translated">成品。</target>
        </trans-unit>
        <trans-unit id="b6cb2c534ec2e20be9da399f5fc21fa1eb9df2b4" translate="yes" xml:space="preserve">
          <source>The first '\n' character is read.</source>
          <target state="translated">第一个&quot;\n &quot;字符被读取。</target>
        </trans-unit>
        <trans-unit id="28d324a240bf361f38714c29315ec9fadad6b539" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">角度&lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt;上的第一个和最后一个刻度线位于0/360度角处。</target>
        </trans-unit>
        <trans-unit id="cb6f560797736264a953ddb2b22e4c702fe6fd60" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">角度&lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;上的第一个和最后一个刻度线位于0/360度角处。</target>
        </trans-unit>
        <trans-unit id="daa5d163982af16a52507ae4c73764b4f2fbc5dd" translate="yes" xml:space="preserve">
          <source>The first argument is the string of QML to create. Just like in a new file, you will need to import any types you wish to use. The second argument is the parent object for the new object, and the parent argument semantics which apply to components are similarly applicable for &lt;code&gt;createQmlObject()&lt;/code&gt;. The third argument is the file path to associate with the new object; this is used for error reporting.</source>
          <target state="translated">第一个参数是要创建的QML字符串。就像在新文件中一样，您将需要导入想要使用的任何类型。第二个参数是新对象的父对象，适用于组件的父参数语义同样适用于 &lt;code&gt;createQmlObject()&lt;/code&gt; 。第三个参数是与新对象关联的文件路径。这用于错误报告。</target>
        </trans-unit>
        <trans-unit id="5e5f3bfbf052aa89c5b19a0bfee21bbb08862692" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel::removeRows&lt;/a&gt;() is the index of the first row to delete.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel :: removeRows&lt;/a&gt;（）的第一个参数是要删除的第一行的索引。</target>
        </trans-unit>
        <trans-unit id="fbb3df0828e8cadf50a633491f04c4543382e25c" translate="yes" xml:space="preserve">
          <source>The first available value for user defined resource types.</source>
          <target state="translated">用户定义资源类型的第一个可用值。</target>
        </trans-unit>
        <trans-unit id="f988ecb145d27773b92f9e06ffd0f9a163923195" translate="yes" xml:space="preserve">
          <source>The first child added is the &lt;a href=&quot;qlist#first&quot;&gt;first&lt;/a&gt; object in the list and the last child added is the &lt;a href=&quot;qlist#last&quot;&gt;last&lt;/a&gt; object in the list, i.e. new children are appended at the end.</source>
          <target state="translated">添加的第一个子项是列表中的&lt;a href=&quot;qlist#first&quot;&gt;第一个&lt;/a&gt;对象，添加的&lt;a href=&quot;qlist#last&quot;&gt;最后&lt;/a&gt;一个子项是列表中的最后一个对象，即，新的子项将附加在末尾。</target>
        </trans-unit>
        <trans-unit id="b93b22efe02fa3c2df8717527d3b00cde733641b" translate="yes" xml:space="preserve">
          <source>The first child of the context node</source>
          <target state="translated">语境节点的第一个子节点</target>
        </trans-unit>
        <trans-unit id="09a04284732e4460cb7827816c51cae01ed33ff4" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls 2. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="translated">第一列列出了&lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;，&lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;和&lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras中&lt;/a&gt;可用的所有类型。第二列记录了Qt Quick Controls 2中的相应类型。当没有直接替代方法时，第三列包含提供相关功能的替代方法。最后一列包含有关不同模块中类型之间差异的一些说明。</target>
        </trans-unit>
        <trans-unit id="4235febdbf662cbc4cfb9e8c4279759dd8353ff0" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c15c2f568ab7afe9cef57d55b72e89a501c20c" translate="yes" xml:space="preserve">
          <source>The first element in the pair.</source>
          <target state="translated">该对中的第一个元素。</target>
        </trans-unit>
        <trans-unit id="2cc48778ee738c240b2c59f6c3a9c3bb6a195dd1" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">上面的第一个示例模拟了在 &lt;code&gt;myWidget&lt;/code&gt; 上单击 &lt;code&gt;escape&lt;/code&gt; 键而没有任何键盘修饰符且没有延迟。第二个示例模拟在200毫秒的测试延迟后单击 &lt;code&gt;myWidget&lt;/code&gt; 上的 &lt;code&gt;shift-escape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edb4467d19af406d10730a4715a5f223c08c5944" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">上述模拟第一示例点击 &lt;code&gt;escape&lt;/code&gt; 上键 &lt;code&gt;myWindow&lt;/code&gt; 而没有任何键盘改性剂和没有延迟。第二个示例模拟在200毫秒的测试延迟后单击 &lt;code&gt;myWindow&lt;/code&gt; 上的 &lt;code&gt;shift-escape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11fda7d38d8154e036a7fc8ae78fff26351efed8" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;.</source>
          <target state="translated">第一个示例演示了&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;的最简单用法。</target>
        </trans-unit>
        <trans-unit id="a95baa0133851c6a2ffe7ff91114afdca6431488" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of ScrollView.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327e93d4edb11c8904aa8170ab8a6ac08d818af4" translate="yes" xml:space="preserve">
          <source>The first group of functions insert block-level elements, and update the cursor position, but they do not return the element that was inserted:</source>
          <target state="translated">第一组函数插入块级元素,并更新光标位置,但它们不返回被插入的元素。</target>
        </trans-unit>
        <trans-unit id="c564c45eb40718aa95fe324af06a38e4dc0dd84a" translate="yes" xml:space="preserve">
          <source>The first is the parent for the new object. The parent can be a graphical object (i.e. of the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type) or non-graphical object (i.e. of the &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt; or C++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type). Only graphical objects with graphical parent objects will be rendered to the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; visual canvas. If you wish to set the parent later you can safely pass &lt;code&gt;null&lt;/code&gt; to this function.</source>
          <target state="translated">第一个是新对象的父对象。父对象可以是图形对象（即&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;类型）或非图形对象（即&lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt;或C ++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;类型）。只有带有图形父对象的图形对象才会呈现到&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;可视画布。如果您希望稍后设置父级，则可以安全地将 &lt;code&gt;null&lt;/code&gt; 传递给此函数。</target>
        </trans-unit>
        <trans-unit id="154aef0d831a4d87aaddbeef5a1b063b857cc96c" translate="yes" xml:space="preserve">
          <source>The first isolated world to be used by scripts set by users if the application is not making use of more worlds. As a rule of thumb, if that functionality is exposed to the application users, each individual script should probably get its own isolated world.</source>
          <target state="translated">如果应用程序没有利用更多的世界,用户设置的脚本将使用的第一个隔离世界。作为经验法则,如果该功能暴露给应用程序用户,每个单独的脚本可能应该得到自己的隔离世界。</target>
        </trans-unit>
        <trans-unit id="24ce409ea2a6d5fc171a9ab2df71d0ef952e7d83" translate="yes" xml:space="preserve">
          <source>The first item in the list is the most preferred one.</source>
          <target state="translated">列表中的第一项是最喜欢的。</target>
        </trans-unit>
        <trans-unit id="951fde176698c58abb83a5702aff8b468cbed78d" translate="yes" xml:space="preserve">
          <source>The first item that should be shown when the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; is created.</source>
          <target state="translated">创建&lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;时应显示的第一项。</target>
        </trans-unit>
        <trans-unit id="2546748da1a0ea931a556608f61ef52e9aadb6dd" translate="yes" xml:space="preserve">
          <source>The first line creates the connection object, and the last line opens it for use. In between, we initialize some connection information, including the &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;database name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;host name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;user name&lt;/a&gt;, and the &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;password&lt;/a&gt;. In this case, we are connecting to the MySQL database &lt;code&gt;flightdb&lt;/code&gt; on the host &lt;code&gt;bigblue&lt;/code&gt;. The &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; argument to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase()&lt;/a&gt; specifies the type of database driver to use for the connection. The set of database drivers included with Qt are shown in the table of &lt;a href=&quot;sql-driver#supported-databases&quot;&gt;supported database drivers&lt;/a&gt;.</source>
          <target state="translated">第一行创建连接对象，最后一行将其打开以供使用。在这之间，我们初始化一些连接信息，包括&lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;数据库名称&lt;/a&gt;，&lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;主机名&lt;/a&gt;，&lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;用户名&lt;/a&gt;和&lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;密码&lt;/a&gt;。在这种情况下，我们连接到MySQL数据库 &lt;code&gt;flightdb&lt;/code&gt; 上的主机 &lt;code&gt;bigblue&lt;/code&gt; 。&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase（）&lt;/a&gt;的 &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; 参数指定用于连接的数据库驱动程序的类型。 Qt附带的数据库驱动程序集显示在&lt;a href=&quot;sql-driver#supported-databases&quot;&gt;受支持的数据库驱动程序&lt;/a&gt;表中。</target>
        </trans-unit>
        <trans-unit id="67aa8bb55f9ed9c7e4f2ee092c8754a721afbacb" translate="yes" xml:space="preserve">
          <source>The first linking step has to link a dummy type library into the executable that can later be replaced by idc. Add a resource file with a type library to your project as demonstrated in the examples.</source>
          <target state="translated">第一步链接必须将一个虚拟类型库链接到可执行文件中,以后可以用idc代替。在你的项目中添加一个带有类型库的资源文件,如示例所示。</target>
        </trans-unit>
        <trans-unit id="fdd760c7804ff4b330fbdacc74e5fb6a5f6d8c3f" translate="yes" xml:space="preserve">
          <source>The first macro defines the \gui command to render its argument using a bold font. The second macro defines the \raisedaster command to render a superscript asterisk, but only when generating HTML.</source>
          <target state="translated">第一个宏定义了\gui命令,使其参数使用粗体字。第二个宏定义了\raisedaster命令来渲染上标星号,但只在生成HTML的时候。</target>
        </trans-unit>
        <trans-unit id="a27081eeb76b5693672503f544e1a04499bf4b4b" translate="yes" xml:space="preserve">
          <source>The first object controls the second object.</source>
          <target state="translated">第一对象控制第二对象。</target>
        </trans-unit>
        <trans-unit id="5b36183f6f24dbfa76d4777566056d2f7f2ee001" translate="yes" xml:space="preserve">
          <source>The first object is controlled by the second object.</source>
          <target state="translated">第一对象由第二对象控制。</target>
        </trans-unit>
        <trans-unit id="0f82dfcd3e257be0012a0a1ca747d4ebe594e4a3" translate="yes" xml:space="preserve">
          <source>The first object is labelled by the second object.</source>
          <target state="translated">第一个对象被第二个对象贴上了标签。</target>
        </trans-unit>
        <trans-unit id="7cfd6e98366e71b20981f793f5dd13aca18d45ae" translate="yes" xml:space="preserve">
          <source>The first object is the label of the second object.</source>
          <target state="translated">第一个对象是第二个对象的标签。</target>
        </trans-unit>
        <trans-unit id="7b19098f4e0905451ef211035dcfa03ead4f6230" translate="yes" xml:space="preserve">
          <source>The first object that can be used for application-specific purposes.</source>
          <target state="translated">第一个可用于特定用途的对象。</target>
        </trans-unit>
        <trans-unit id="79802702a1e2a094fd94475aa69d6d01fa9676bf" translate="yes" xml:space="preserve">
          <source>The first option that can be used for user-specific purposes.</source>
          <target state="translated">第一个可用于用户特定目的的选项。</target>
        </trans-unit>
        <trans-unit id="e267d632b2e626b77c4d977aa272d2df75523629" translate="yes" xml:space="preserve">
          <source>The first page in a document does not need to be preceded by a call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;(). You only need to calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() if you need to insert a blank page at the beginning of a printed document. Similarly, calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after the last page in a document is painted will result in a trailing blank page appended to the end of the printed document.</source>
          <target state="translated">文档的第一页不需要在调用&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）之前。如果您需要在打印文档的开头插入空白页，则只需在&lt;a href=&quot;qpainter#begin&quot;&gt;QPainter :: begin&lt;/a&gt;（）之后调用&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）。同样，在绘制文档的最后一页之后调用&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）会导致在打印文档的末尾附加空白的空白页。</target>
        </trans-unit>
        <trans-unit id="4538ec64f8ec2b1ffdb5f9a00f6ba1fadbc56157" translate="yes" xml:space="preserve">
          <source>The first parameter that can be used for user-specific purposes. &lt;code&gt;QVariant&lt;/code&gt;</source>
          <target state="translated">可以用于用户特定目的的第一个参数。 &lt;code&gt;QVariant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ac463776739c5c91e6aefa43e2247bdfdc77fec" translate="yes" xml:space="preserve">
          <source>The first part of the function, which we have omitted, uses the current &lt;a href=&quot;qstyle&quot;&gt;style&lt;/a&gt; to calculate the slider handle's bounding rectangle; it is stored in &lt;code&gt;srect&lt;/code&gt;. Notice that child 0, covered in the default case in the above code, is the slider itself, so we can simply return the &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; bounding rectangle obtained from the superclass, which is effectively the value obtained from &lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget::rect&lt;/a&gt;().</source>
          <target state="translated">该函数的第一部分（我们已省略）使用当前&lt;a href=&quot;qstyle&quot;&gt;样式&lt;/a&gt;来计算滑块手柄的边界矩形。它存储在 &lt;code&gt;srect&lt;/code&gt; 中。请注意，上面的代码中默认情况下覆盖的子0是滑块本身，因此我们可以简单地返回从超类获得的&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;边界矩形，它实际上是从&lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget :: rect&lt;/a&gt;（）获得的值。</target>
        </trans-unit>
        <trans-unit id="1ba33c845e57254781098f1fbfea501d02d4ccb1" translate="yes" xml:space="preserve">
          <source>The first pass allows for optimal z-culling for normal opaque 3D objects and the second pass allows for correct blending of transparent objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e302406e06f31c8dc885df504140e5b320d6b21e" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;().</source>
          <target state="translated">第一个点隐式连接到最后一个点，并且多边形用当前的&lt;a href=&quot;qpainter#brush&quot;&gt;笔刷&lt;/a&gt;（）填充。</target>
        </trans-unit>
        <trans-unit id="d5e697648dac9738c5612614fc4418811388ec05" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;(). If the supplied polygon is not convex, i.e. it contains at least one angle larger than 180 degrees, the results are undefined.</source>
          <target state="translated">第一个点隐式连接到最后一个点，并且多边形用当前的&lt;a href=&quot;qpainter#brush&quot;&gt;笔刷&lt;/a&gt;（）填充。如果提供的多边形不是凸的，即它包含至少一个大于180度的角度，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="3e7cf2e5136b76965afeda9d720b65e99caa6567" translate="yes" xml:space="preserve">
          <source>The first point of the line will be on the origin.</source>
          <target state="translated">线的第一点将在原点上。</target>
        </trans-unit>
        <trans-unit id="4d18b952a7b0019def24d59b2b6f719b2c990b52" translate="yes" xml:space="preserve">
          <source>The first position in a string is always a valid boundary and refers to the position before the first character. The last position at the length of the string is also valid and refers to the position after the last character.</source>
          <target state="translated">字符串中的第一个位置总是有效的边界,指的是第一个字符之前的位置。字符串长度的最后一个位置也是有效的,指的是最后一个字符之后的位置。</target>
        </trans-unit>
        <trans-unit id="8599d3fa03dae88293ae228e3762a282638ff6d2" translate="yes" xml:space="preserve">
          <source>The first requirement when using &lt;code&gt;CMake&lt;/code&gt; is to use &lt;code&gt;find_package&lt;/code&gt; to locate the libraries and header files shipped with Qt. These libraries and header files can then be used to build libraries and applications based on Qt.</source>
          <target state="translated">使用 &lt;code&gt;CMake&lt;/code&gt; 时的第一个要求是使用 &lt;code&gt;find_package&lt;/code&gt; 来查找Qt附带的库和头文件。这些库和头文件然后可以用于基于Qt构建库和应用程序。</target>
        </trans-unit>
        <trans-unit id="41a1ee4893b0b0bf6d3cb0d45b24d44bf77b04c2" translate="yes" xml:space="preserve">
          <source>The first role that can be used for application-specific purposes.</source>
          <target state="translated">第一个可用于特定应用的角色。</target>
        </trans-unit>
        <trans-unit id="2378d5834e47b9e1c494bc1c67839735262521d6" translate="yes" xml:space="preserve">
          <source>The first semantic is conceptually correct, given that a particular script might be imported by any number of QML files. The second semantic is retained for the purposes of backwards-compatibility. The third semantic remains unchanged from the current semantics for shared scripts, but is clarified here in respect to the newly possible case (where the script imports other scripts or modules).</source>
          <target state="translated">第一个语义在概念上是正确的,因为一个特定的脚本可能被任何数量的QML文件导入。第二种语义是为了向后兼容的目的而保留的。第三种语义与当前共享脚本的语义保持不变,但在这里针对新的可能情况(脚本导入其他脚本或模块)进行了澄清。</target>
        </trans-unit>
        <trans-unit id="e16739955f8ec6a0b63cfd01f657927c40cbe7a8" translate="yes" xml:space="preserve">
          <source>The first step in designing the style was to select the base class. We chose to subclass &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;. This class implements most of the functionality we need, other than performing the actual drawing.</source>
          <target state="translated">设计样式的第一步是选择基类。我们选择子类&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;。除了执行实际的绘图之外，此类还实现了我们所需的大多数功能。</target>
        </trans-unit>
        <trans-unit id="aaf1164e08eb381d06a4c7b1ba65690e06b06c68" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="translated">静态方法的第一步是选择Qt提供的一种样式，您将从这些样式中构建自定义样式。您选择的&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;类将取决于哪种样式最符合您的期望样式。可以用作基础的最通用的类​​是&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;（不是&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;）。这是因为Qt要求其样式为&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9bb5308054d2b22284762efe45dc8a422c17fc6" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of QStyle class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not QStyle). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdff64ae77e8d4a08c2c7fd9cc992a2725cc8fd0" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;create a new Qt Quick Controls 2 application&lt;/a&gt; in Qt Creator. After that, we &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;add a C++ type&lt;/a&gt; that stores the elevation. Since the type will be used for every control supported by our style, and because we may wish to add other attached properties later on, we'll call it MyStyle. Here is &lt;code&gt;MyStyle.h&lt;/code&gt;:</source>
          <target state="translated">第一步是在Qt Creator中&lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;创建一个新的Qt Quick Controls 2应用程序&lt;/a&gt;。之后，我们&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;添加了一个C ++类型&lt;/a&gt;来存储高程。由于该类型将用于样式支持的每个控件，并且由于我们以后可能希望添加其他附加属性，因此将其称为MyStyle。这是 &lt;code&gt;MyStyle.h&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e4f64faf0e07500065a210625385355a29130a51" translate="yes" xml:space="preserve">
          <source>The first step is to create a Qt Help Collection Project file. Since a Qt help collection stores primarily references to compressed help files, the project</source>
          <target state="translated">第一步是创建一个Qt帮助集合项目文件。由于Qt帮助集主要是存储对压缩帮助文件的引用,所以项目的</target>
        </trans-unit>
        <trans-unit id="9efbec90cb81676c8d16c25bd92235031881a782" translate="yes" xml:space="preserve">
          <source>The first step is to enable dependency tracking in the library itself. To do this you must tell qmake to save information about the library:</source>
          <target state="translated">第一步是在库本身启用依赖性跟踪。要做到这一点,你必须让qmake保存库的信息。</target>
        </trans-unit>
        <trans-unit id="f1e7b148b0ed34a75cfc8dd5a98a11810da4fbb2" translate="yes" xml:space="preserve">
          <source>The first step is to get a publisher account, if you do not already have one. Go to &lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;the Google Play developer console&lt;/a&gt;, log in with the Google account of your choice, and follow the steps as directed.</source>
          <target state="translated">第一步是获取发布者帐户（如果您还没有）。转到&lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;Google Play开发者控制台&lt;/a&gt;，使用您选择的Google帐户登录，然后按照指示进行操作。</target>
        </trans-unit>
        <trans-unit id="7825236b8f5dc60810c60e960e51d6a8ea36ea39" translate="yes" xml:space="preserve">
          <source>The first string in the list is the entire matched string. Each subsequent list element contains a string that matched a (capturing) subexpression of the regexp.</source>
          <target state="translated">列表中的第一个字符串是整个匹配的字符串。之后的每个列表元素都包含一个与regexp的(捕获)子表达式相匹配的字符串。</target>
        </trans-unit>
        <trans-unit id="e21b10440a61a3512646f36ce0c125f59b9ca46c" translate="yes" xml:space="preserve">
          <source>The first thing we did in the &lt;code&gt;main()&lt;/code&gt; function was to create a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">我们在 &lt;code&gt;main()&lt;/code&gt; 函数中所做的第一件事是创建一个&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;对象 &lt;code&gt;app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a998c1523d70f0673dcdd599bc0f4bba42ae5cc" translate="yes" xml:space="preserve">
          <source>The first thing you need to do is resize your image to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8917ebbca80bb52a7bc56c7c30d909a8b09cb1e3" translate="yes" xml:space="preserve">
          <source>The first time your App makes a request to the sandbox App Store it will request that you login. This is where you should log in using your iTunes test user credentials.</source>
          <target state="translated">您的App第一次向沙盒App Store提出请求时,会要求您登录。这时您应该使用您的iTunes测试用户凭证进行登录。</target>
        </trans-unit>
        <trans-unit id="6bff8abd6ed0b61faa4762e2d8b736b2194e8af4" translate="yes" xml:space="preserve">
          <source>The first two patterns can be combined, e.g. to initialize a licensed control on a remote machine:</source>
          <target state="translated">前两种模式可以结合起来,例如,在远程机器上初始化一个授权控制。</target>
        </trans-unit>
        <trans-unit id="417332cc781ae22cffabb141f5ad3e9739a19294" translate="yes" xml:space="preserve">
          <source>The first user-defined button (see also &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;)</source>
          <target state="translated">第一个用户定义的按钮（另请参见&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b60cbdccec816968a84bb08ff6632b10a2a49169" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined roles.</source>
          <target state="translated">用于用户定义角色的第一个值。</target>
        </trans-unit>
        <trans-unit id="bbf026464b8d91b2d86d99ea68ba8ddf926a2ae2" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined text.</source>
          <target state="translated">用于用户定义文本的第一个值。</target>
        </trans-unit>
        <trans-unit id="beb32503a36ed7cc11abcaa27758c62d0bb76d97" translate="yes" xml:space="preserve">
          <source>The first way to create this button is to simply define it in-place, wherever it is needed. For example, perhaps you're not satisfied with the default style's Button having square corners. To make them rounded, you can override the &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; item and set the radius property of Rectangle:</source>
          <target state="translated">创建此按钮的第一种方法是在需要的地方简单地就地定义它。例如，也许您不满意默认样式的带有角的Button。要使它们四舍五入，您可以覆盖&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;背景&lt;/a&gt;项并设置Rectangle的radius属性：</target>
        </trans-unit>
        <trans-unit id="2c2859f522986b5acef90493dc4c1090c845fcf5" translate="yes" xml:space="preserve">
          <source>The five items are: An element, an atomic value (binary data encoded in base64), a date, a float, and an attribute.</source>
          <target state="translated">这五个项目是:一个元素,一个原子值(以base64编码的二进制数据),一个日期,一个浮点数和一个属性。</target>
        </trans-unit>
        <trans-unit id="55cce75df9a3b5d75ec83ef8b5823d7a5bbda191" translate="yes" xml:space="preserve">
          <source>The fixed font that the system recommends.</source>
          <target state="translated">系统推荐的固定字体。</target>
        </trans-unit>
        <trans-unit id="d984be12bfdd01f44473291871cdf14d70fc058b" translate="yes" xml:space="preserve">
          <source>The flags &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsMaterial&lt;/a&gt;, &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsOpaqueMaterial&lt;/a&gt; and &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsGeometry&lt;/a&gt; decides whether the geometry node should also delete the materials and geometry. By default, these flags are disabled.</source>
          <target state="translated">标志&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsMaterial&lt;/a&gt;，&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsOpaqueMaterial&lt;/a&gt;和&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsGeometry&lt;/a&gt;确定几何节点是否也应删除材质和几何。默认情况下，这些标志是禁用的。</target>
        </trans-unit>
        <trans-unit id="f3772a53e01002aae29af5447eae983210a5dee6" translate="yes" xml:space="preserve">
          <source>The flags which you read from this property might differ from the ones that you set if the requested flags could not be fulfilled.</source>
          <target state="translated">从这个属性中读取的标志可能与你设置的标志不同,如果所要求的标志不能被满足。</target>
        </trans-unit>
        <trans-unit id="47bf85ea95dc3b63185292fe358ac44c0a28cb60" translate="yes" xml:space="preserve">
          <source>The flash time is the time required to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time, but this may vary.</source>
          <target state="translated">闪烁时间是指显示、反转和恢复光标显示所需的时间。通常文本光标显示时间为光标闪烁时间的一半,然后在同样的时间内隐藏,但这可能会有所不同。</target>
        </trans-unit>
        <trans-unit id="8152bcd56aa40699db99a9b9f7fbdd63aec639c5" translate="yes" xml:space="preserve">
          <source>The flash time is the time used to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time.</source>
          <target state="translated">闪烁时间是指显示、反转和恢复光标显示的时间。通常文本光标的显示时间为光标闪动时间的一半,然后隐藏同样的时间。</target>
        </trans-unit>
        <trans-unit id="fa0520b97cc20fb4d7335b156d5ac20a35cbe413" translate="yes" xml:space="preserve">
          <source>The flat color material respects both current opacity and current matrix when updating its rendering state.</source>
          <target state="translated">平面色彩材质在更新其渲染状态时,同时尊重当前不透明度和当前矩阵。</target>
        </trans-unit>
        <trans-unit id="17859886cb72234304b86345a4ad57a54e51a4af" translate="yes" xml:space="preserve">
          <source>The flat color material will fill every pixel in a geometry using a solid color. The color can contain transparency.</source>
          <target state="translated">平面颜色材料将使用纯色填充几何体中的每个像素。颜色可以包含透明度。</target>
        </trans-unit>
        <trans-unit id="f57aa301a17bbfee15f06f62bd05b191517d07fe" translate="yes" xml:space="preserve">
          <source>The flickableItem of the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt;. If the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; provided to the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; is a Flickable, it will be the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt;的flickableItem 。如果提供给&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;是Flickable，则它将是&lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2671c63d751427e872a0de801f69312f39694fa5" translate="yes" xml:space="preserve">
          <source>The float button of a &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;的浮动按钮</target>
        </trans-unit>
        <trans-unit id="feb41fdec4ade060ec1f3a669c81ddc694e04b15" translate="yes" xml:space="preserve">
          <source>The float button of a dock widget.</source>
          <target state="translated">dock widget的浮动按钮。</target>
        </trans-unit>
        <trans-unit id="5d1d3e099fd263a27d8e71f89eb2b6bcf4fe1507" translate="yes" xml:space="preserve">
          <source>The floor level for the bar graph in Y-axis data coordinates.</source>
          <target state="translated">以Y轴数据为坐标的条形图的底层。</target>
        </trans-unit>
        <trans-unit id="e71e8194104f15a6cfccebde32e9fbe2dbc5bec9" translate="yes" xml:space="preserve">
          <source>The floppy icon.</source>
          <target state="translated">软盘图标。</target>
        </trans-unit>
        <trans-unit id="dfc4524042b6f212135b13e7dd79a29ed55e46fd" translate="yes" xml:space="preserve">
          <source>The focus can be accessed using the context item expression, i.e., dot (&quot;.&quot;).</source>
          <target state="translated">可以使用上下文项表达式访问焦点,即点(&quot;.&quot;)。</target>
        </trans-unit>
        <trans-unit id="d502baf7b647caed0505ecaf3877ff7bfc9d1a50" translate="yes" xml:space="preserve">
          <source>The focus frame will not monitor</source>
          <target state="translated">对焦框不会监控</target>
        </trans-unit>
        <trans-unit id="1744e06d7eea968c5f0c8d41f5e60d8a13103723" translate="yes" xml:space="preserve">
          <source>The focus item receives keyboard input when the scene receives a key event.</source>
          <target state="translated">当场景接收到按键事件时,焦点项接收键盘输入。</target>
        </trans-unit>
        <trans-unit id="e52ac6cd4cdba0b1514162e619cbcf5bdd502124" translate="yes" xml:space="preserve">
          <source>The focus point of the distortion. &lt;code&gt;Qt.vector2d(0.5, 0.5)&lt;/code&gt; (i.e. the center of the scene) by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd039b61be661acaed89e4e28b69258ecd40cb7a" translate="yes" xml:space="preserve">
          <source>The focus policy is &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::TabFocus&lt;/a&gt; if the widget accepts keyboard focus by tabbing, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::ClickFocus&lt;/a&gt; if the widget accepts focus by clicking, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::StrongFocus&lt;/a&gt; if it accepts both, and &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::NoFocus&lt;/a&gt; (the default) if it does not accept focus at all.</source>
          <target state="translated">重点政策&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;的Qt :: TabFocus&lt;/a&gt;如果部件由黏合接受键盘焦点，&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt的:: ClickFocus&lt;/a&gt;如果控件接受焦点通过点击，&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt的:: StrongFocus&lt;/a&gt;如果同时接受和&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt的:: NoFocus&lt;/a&gt;（默认值），如果它根本不接受焦点。</target>
        </trans-unit>
        <trans-unit id="96054cc7b4f834d567d7bffd6281301827dab790" translate="yes" xml:space="preserve">
          <source>The focus proxy</source>
          <target state="translated">焦点代理</target>
        </trans-unit>
        <trans-unit id="17c41709a0148ba07a5c410d3f18cf7b90169c74" translate="yes" xml:space="preserve">
          <source>The focus widget is not affected, except that it doesn't receive any keyboard events. &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;() moves the focus as usual, but the new focus widget receives keyboard events only after &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called.</source>
          <target state="translated">焦点小部件不受影响，只是它不接收任何键盘事件。&lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;（）照常移动焦点，但是新的焦点小部件仅在&lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;调用releaseKeyboard&lt;/a&gt;（）之后才接收键盘事件。</target>
        </trans-unit>
        <trans-unit id="accfeb65f15ff2b63fec7c8d9d461603c0e321a5" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using &lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="translated">以下示例显示了一个&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;使用&lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;跟踪另一个矩形的位置。绿色矩形的 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 值绑定到红色矩形的x和y值。只要这些值发生变化，绿色矩形就会平滑地动画到其新位置：</target>
        </trans-unit>
        <trans-unit id="58b7c65f8e7bbee1e3682547508d15b36ac7831e" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using SmoothedAnimation. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cbd9d9e7aca525d66ea82f95cfcc77308c0447" translate="yes" xml:space="preserve">
          <source>The following .sci file sets the borders to 10 on each side for the image &lt;code&gt;picture.png&lt;/code&gt;:</source>
          <target state="translated">以下.sci文件将image &lt;code&gt;picture.png&lt;/code&gt; 的每一边的边框设置为10 ：</target>
        </trans-unit>
        <trans-unit id="7fe5c80fee24ced10f78c2411b6a8388fa8c2ef6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ca8ca07faf37addbefba72eaca164404821b54" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="translated">下面&lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;的Greasemonkey&lt;/a&gt;属性的支持，因为Qt的5.8： &lt;code&gt;@exclude&lt;/code&gt; ， &lt;code&gt;@include&lt;/code&gt; ， &lt;code&gt;@name&lt;/code&gt; ， &lt;code&gt;@match&lt;/code&gt; ，并 &lt;code&gt;@run-at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="226b4d6234a638ae67e26b517c4b33f436ab9dde" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; should be applied.</source>
          <target state="translated">单击鼠标时，下面的&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;使用&lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt;移动到鼠标的位置。在 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 值上使用&lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior的行为&lt;/a&gt;表明，只要更改这些值，&lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;就&lt;/a&gt;应应用SpringAnimation。</target>
        </trans-unit>
        <trans-unit id="2301020875ce4aaef4b5b257b03d007c896993a6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a SpringAnimation when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a SpringAnimation should be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2a1bd1143e4365535d3d1a1c8ea1c39db5b2eb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compilation flags:</source>
          <target state="translated">以下 &lt;code&gt;CONFIG&lt;/code&gt; 值控制编译标志：</target>
        </trans-unit>
        <trans-unit id="907294b71f1dc063a4dcdb52cb0c1344d3187db3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compiler and linker flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb167ffc07db24362b3fcb91fd91ba1c08cc046" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Message&lt;/code&gt; class definition includes these members:</source>
          <target state="translated">以下 &lt;code&gt;Message&lt;/code&gt; 类定义包括这些成员：</target>
        </trans-unit>
        <trans-unit id="7e46e1884f1abd31589841203bc4af1226a78f31" translate="yes" xml:space="preserve">
          <source>The following C++ modules are in still development but are available as technology previews:</source>
          <target state="translated">以下C++模块仍在开发中,但可作为技术预览。</target>
        </trans-unit>
        <trans-unit id="54cf010fc5db732daad8c168f9a04830bfcba89b" translate="yes" xml:space="preserve">
          <source>The following Modbus function codes are filtered out as they are serial line only according to the Modbus Application Protocol Specification 1.1b:</source>
          <target state="translated">根据Modbus应用协议规范1.1b,以下Modbus功能代码被过滤掉,因为它们只是串行线路。</target>
        </trans-unit>
        <trans-unit id="a1c838cccc27d2e05c82587f7b209c595a6f17c2" translate="yes" xml:space="preserve">
          <source>The following QML can produce either of the two illustrated arcs below by changing the value of direction.</source>
          <target state="translated">下面的QML通过改变方向的值,可以产生下面两个图示弧线中的任何一个。</target>
        </trans-unit>
        <trans-unit id="062d0f2082dfb39129bac1904d8676f6a1559866" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; &lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QML type, and displays the detected gesture in a text type.</source>
          <target state="translated">以下QML代码创建&amp;ldquo;摇动&amp;rdquo;和&amp;ldquo; SecondCounter&amp;rdquo; &lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QML类型，并以文本类型显示检测到的手势。</target>
        </trans-unit>
        <trans-unit id="a9e6d67c42236eb350325fd59cc3fa5be6623ed1" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; SensorGesture QML type, and displays the detected gesture in a text type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a83e5752f88aecf92b362e09b71568611a179e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a chart with two simple scatter series:</source>
          <target state="translated">下面的QML代码显示了如何用两个简单的散点序列创建一个图表。</target>
        </trans-unit>
        <trans-unit id="95e7c58385f56c5b8a06e4cc371983b417548d19" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a polar chart with a spline and scatter series and two value axes:</source>
          <target state="translated">下面的QML代码显示了如何创建一个带有花键和散点序列以及两个值轴的极坐标图。</target>
        </trans-unit>
        <trans-unit id="5e831363910ede32ba38a9d62cd854e37e4740f1" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple chart with one pie series:</source>
          <target state="translated">下面的QML代码显示了如何用一个饼状系列创建一个简单的图表。</target>
        </trans-unit>
        <trans-unit id="fb9808564bf50c6b584aeae38488933cea0bc18e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple spline chart:</source>
          <target state="translated">下面的QML代码显示了如何创建一个简单的花键图。</target>
        </trans-unit>
        <trans-unit id="2ed13ccb6eb26d51de3072449c842bfb232e9edc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four columns). Each bar set contains data starting from row 1. The name of a bar set is defined by the column header.</source>
          <target state="translated">下面的QML代码片段创建了一个有三个条形集的条形序列(假设模型至少有四列)。每个条形集包含从第1行开始的数据。 条形集的名称由列头定义。</target>
        </trans-unit>
        <trans-unit id="17094c8324539da05fa1dc42ab8fe6ca1efd6279" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four rows). Each bar set contains data starting from column 1. The name of a bar set is defined by the row header.</source>
          <target state="translated">下面的QML代码片段创建了一个带有三个条形集的条形序列(假设模型至少有四行)。每个条形集包含从第1列开始的数据。条形图集的名称由行头定义。</target>
        </trans-unit>
        <trans-unit id="417fa70588c9f7d6844efbf5dd80ae8a8a2e9589" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four columns). Each box-and-whiskers item contains data starting from row 1. The name of an item is defined by the column header.</source>
          <target state="translated">下面的QML代码片段创建了一个包含三个盒须项的盒形图系列(假设模型至少有四列)。每个盒须项目包含从第1行开始的数据。 项目的名称由列头定义。</target>
        </trans-unit>
        <trans-unit id="6024a2c9c1f82fa990008c6b070e49e546c9c9bc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four rows). Each box-and-whiskers item contains data starting from column 1. The name of an item is defined by the row header.</source>
          <target state="translated">下面的QML代码片段创建了一个包含三个盒须项的盒形图系列(假设模型至少有四行)。每个盒须项包含从第1列开始的数据。项目的名称由行头定义。</target>
        </trans-unit>
        <trans-unit id="a3a2702c83e0f57e9060e89df4f1257a9c094203" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple box-and-whiskers chart:</source>
          <target state="translated">下面的QML代码片段展示了如何创建一个简单的盒须图。</target>
        </trans-unit>
        <trans-unit id="3844b89d232cf9b21d4f673f578deb93ee5c6470" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple grouped bar chart:</source>
          <target state="translated">下面的QML代码片段展示了如何创建一个简单的分组条形图。</target>
        </trans-unit>
        <trans-unit id="3392aa0bb40844d525ece6431a8a269d8eaf3fad" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal bar chart:</source>
          <target state="translated">以下QML代码片段展示了如何创建一个简单的水平条形图。</target>
        </trans-unit>
        <trans-unit id="c2d9ec565a943b0ce041cc51caab1860714d6698" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal percent bar chart:</source>
          <target state="translated">下面的QML代码片段展示了如何创建一个简单的水平百分比条形图。</target>
        </trans-unit>
        <trans-unit id="c774990bc3b704a7db9ea8f4a8f11a3d9fce5114" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal stacked bar chart:</source>
          <target state="translated">下面的QML代码片段展示了如何创建一个简单的水平堆叠条形图。</target>
        </trans-unit>
        <trans-unit id="0a712af6b855c745f5b65cd238618691134c4d74" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple percent bar chart:</source>
          <target state="translated">下面的QML代码片段展示了如何创建一个简单的百分比条形图。</target>
        </trans-unit>
        <trans-unit id="21a596b692cc687c74054e1ae0c272a4a225abf1" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to use the &lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; type to create a simple bar chart:</source>
          <target state="translated">以下QML代码片段显示了如何使用&lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt;和&lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;类型创建简单的条形图：</target>
        </trans-unit>
        <trans-unit id="0d953364b6323e5628960ee406f0c07ea0990705" translate="yes" xml:space="preserve">
          <source>The following QML demonstrates how different radius values can be used to change the shape of the arc:</source>
          <target state="translated">下面的QML演示了如何使用不同的半径值来改变圆弧的形状。</target>
        </trans-unit>
        <trans-unit id="1c28c443ea12f98af7e5a036c07b16d2c3f80cd3" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four columns). Each candlestick item contains data defined by the timestamp, open, high, low, and close rows. The name of an item is defined by the horizontal header of the column.</source>
          <target state="translated">下面的QML示例创建了一个有三个蜡烛图项目的蜡烛图系列(假设模型至少有四列)。每个蜡烛图项目包含由时间戳、开盘、最高、最低和收盘行定义的数据。一个项目的名称由列的水平标题定义。</target>
        </trans-unit>
        <trans-unit id="4fcf5a4813ab23b413bd1b2bd2094094988a70ea" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four rows). Each candlestick item contains data defined by the timestamp, open, high, low, and close columns. The name of an item is defined by the vertical header of the row.</source>
          <target state="translated">下面的 QML 示例创建了一个有三个蜡烛图项的蜡烛图系列(假设模型至少有四行)。每个蜡烛图项目包含由时间戳、开盘、最高、最低和收盘列定义的数据。一个项目的名称由行的垂直标题定义。</target>
        </trans-unit>
        <trans-unit id="c82486bf68e6a5c936f42cf926aeaa77f7b7cbb7" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five columns). Each slice gets a label from row 1 and a value from row 2.</source>
          <target state="translated">下面的QML示例创建了一个有四个切片的饼系列(假设模型至少有五列)。每个切片从第1行获得一个标签,从第2行获得一个值。</target>
        </trans-unit>
        <trans-unit id="0141836a92ba9bea9ff2dc0d93898a0abcf688c2" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five rows). Each slice gets a label from column 1 and a value from column 2.</source>
          <target state="translated">下面的QML示例创建了一个有四个切片的饼系列(假设模型至少有五行)。每个切片从第1列获得一个标签,从第2列获得一个值。</target>
        </trans-unit>
        <trans-unit id="039fa9b418ca6fc7d163144f9131a7b77846e8bd" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple line chart:</source>
          <target state="translated">下面的QML示例展示了如何创建一个简单的线图。</target>
        </trans-unit>
        <trans-unit id="1ce666050ef41e00442d3317324a5f7f64e6bd98" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple pie chart.</source>
          <target state="translated">下面的QML示例展示了如何创建一个简单的饼图。</target>
        </trans-unit>
        <trans-unit id="ab8d6591bbd42c9ccf14fd748c4dee3914e66090" translate="yes" xml:space="preserve">
          <source>The following QML modules are in still development but are available as technology previews:</source>
          <target state="translated">以下QML模块仍在开发中,但可作为技术预览。</target>
        </trans-unit>
        <trans-unit id="1592f6b32c8cf11ffaf8cdc8198f782f5189d61f" translate="yes" xml:space="preserve">
          <source>The following QML produces the path shown below:</source>
          <target state="translated">下面的QML产生了下面的路径。</target>
        </trans-unit>
        <trans-unit id="a40c08ad8491821cff38b05e14df666683daa396" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple area chart:</source>
          <target state="translated">下面的QML展示了如何创建一个简单的区域图。</target>
        </trans-unit>
        <trans-unit id="1b7f676e4c6e06f6b9d30c4431507ee0553537ad" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple candlestick chart:</source>
          <target state="translated">下面的QML展示了如何创建一个简单的蜡烛图。</target>
        </trans-unit>
        <trans-unit id="9d7ff299fd6b1bdc2e4e813aa66fbea589ad7f77" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple stacked bar chart:</source>
          <target state="translated">下面的QML展示了如何创建一个简单的堆叠条形图。</target>
        </trans-unit>
        <trans-unit id="9ac28a4e87c773bb66d36d757c1b09da2dad6e98" translate="yes" xml:space="preserve">
          <source>The following QML shows how to display an animated image and obtain information about its state, such as the current frame and total number of frames. The result is an animated image with a simple progress indicator underneath it.</source>
          <target state="translated">下面的QML展示了如何显示一个动画图像并获取其状态的信息,如当前帧和总帧数。结果是一个动画图像,下面有一个简单的进度指示器。</target>
        </trans-unit>
        <trans-unit id="cb004f44d7b08ae9ba136bb41589c7a29bd0e0c2" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route maneuver:</source>
          <target state="translated">下面的QML代码段演示了如何打印有关航线操纵的信息。</target>
        </trans-unit>
        <trans-unit id="cc03741f4e4a3621db304a4fd95c8baec5f8b583" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route segment:</source>
          <target state="translated">下面的QML片段演示了如何打印途径段的信息。</target>
        </trans-unit>
        <trans-unit id="7f81948a6ed552d952cc06f068e9e0a7321e3bb8" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">以下QML代码段说明了如何使用&lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ff1b27cdb6094c440f72fb9b459715c4e7e1d58b" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use BarCategoryAxis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779c30ae404503796a26b6ecc6120c4bff3a4441" translate="yes" xml:space="preserve">
          <source>The following Repeater creates three instances of a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item within a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;:</source>
          <target state="translated">以下Repeater 在&lt;a href=&quot;qml-qtquick-row&quot;&gt;Row中&lt;/a&gt;创建一个&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;项目的三个实例：</target>
        </trans-unit>
        <trans-unit id="bf9ed96ba0bd26eef7655c16b0fa04124a3e9ae5" translate="yes" xml:space="preserve">
          <source>The following YouTube video gives a complete walk-through of the installation process:</source>
          <target state="translated">下面的YouTube视频提供了一个完整的安装过程。</target>
        </trans-unit>
        <trans-unit id="fa03151bcbf9dcd54600161f47b97c238d37545c" translate="yes" xml:space="preserve">
          <source>The following abridged code snippet shows the basic use of the class to write formatted XML with indentation:</source>
          <target state="translated">下面的删节代码片断显示了该类的基本用途,以编写带缩进的格式化XML。</target>
        </trans-unit>
        <trans-unit id="9589dd5200c84a5b85ad295a701be92c1e2eeaba" translate="yes" xml:space="preserve">
          <source>The following animation runs two number animations in parallel. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to (50,50) by animating its &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties at the same time.</source>
          <target state="translated">下面的动画并行运行两个数字动画。的&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;移动到（50,50）由动画其 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 同时性质。</target>
        </trans-unit>
        <trans-unit id="ef337fd25abaeb8301fc879090c517d3e313de83" translate="yes" xml:space="preserve">
          <source>The following application creates a &lt;code&gt;DataObject&lt;/code&gt; class with &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; values that will be accessible as named roles when a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;DataObject*&amp;gt; is exposed to QML:</source>
          <target state="translated">以下应用程序使用&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;值创建一个 &lt;code&gt;DataObject&lt;/code&gt; 类，当&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;Da​​taObject *&amp;gt;暴露给QML 时，这些名称可以作为命名角色进行访问：</target>
        </trans-unit>
        <trans-unit id="7fd186ecaaa322c35ea9b054d141d78130c3b9b7" translate="yes" xml:space="preserve">
          <source>The following are examples of custom MIME types:</source>
          <target state="translated">以下是自定义MIME类型的例子。</target>
        </trans-unit>
        <trans-unit id="d25a40c0218f9c333e6fe8d21f3ff959463dfc6b" translate="yes" xml:space="preserve">
          <source>The following are functionally equivalent:</source>
          <target state="translated">以下是功能等同的:</target>
        </trans-unit>
        <trans-unit id="7168187697701fdcafd838531fa103fcad3f7d8b" translate="yes" xml:space="preserve">
          <source>The following are lists of the classes and UI components provided by the module, with example applications to demonstrate their usage:</source>
          <target state="translated">以下是该模块提供的类和UI组件的列表,并通过应用实例来展示它们的用法。</target>
        </trans-unit>
        <trans-unit id="de2a21093fd5424e8dc980220af8fc7e282b250f" translate="yes" xml:space="preserve">
          <source>The following are standard keys that are defined by the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys. Custom keys should be qualified by a unique prefix to avoid clashes.</source>
          <target state="translated">以下是API定义的标准密钥。&lt;a href=&quot;location-places-qml#plugin&quot;&gt;插件&lt;/a&gt;实现可自由定义其他键。自定义键应以唯一的前缀限定，以避免冲突。</target>
        </trans-unit>
        <trans-unit id="471e1c2baad85d69bd0069a2f15efaad2d812024" translate="yes" xml:space="preserve">
          <source>The following are the different encoding methods used:</source>
          <target state="translated">以下是使用的不同编码方法。</target>
        </trans-unit>
        <trans-unit id="2cf6534505291b367e5d49e37d7ac0c3f9434b98" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;/opt/interbase&lt;/code&gt;:</source>
          <target state="translated">以下假设InterBase或Firebird安装在 &lt;code&gt;/opt/interbase&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="c4c81ccbf930ca9c4172a9c65c63e9349b9c22c9" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;C:\interbase&lt;/code&gt;:</source>
          <target state="translated">以下假设InterBase或Firebird安装在 &lt;code&gt;C:\interbase&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7036ac29bf0c41e961d9de06a94d257324ab3dd7" translate="yes" xml:space="preserve">
          <source>The following attribute is supported by the &lt;code&gt;ol&lt;/code&gt; and &lt;code&gt;ul&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;ol&lt;/code&gt; 和 &lt;code&gt;ul&lt;/code&gt; 标签支持以下属性：</target>
        </trans-unit>
        <trans-unit id="7963a27dd2c2f52f5987c821d3f0e0cc96c3f4f8" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;dt&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt;, &lt;code&gt;h5&lt;/code&gt;, &lt;code&gt;h6&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;div&lt;/code&gt; ， &lt;code&gt;dl&lt;/code&gt; ， &lt;code&gt;dt&lt;/code&gt; ， &lt;code&gt;h1&lt;/code&gt; ， &lt;code&gt;h2&lt;/code&gt; ， &lt;code&gt;h3&lt;/code&gt; ， &lt;code&gt;h4&lt;/code&gt; ， &lt;code&gt;h5&lt;/code&gt; ， &lt;code&gt;h6&lt;/code&gt; ， &lt;code&gt;p&lt;/code&gt; 标签支持以下属性：</target>
        </trans-unit>
        <trans-unit id="5d5d61095f65042402059860f91db33b5a420a1e" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;td&lt;/code&gt; and &lt;code&gt;th&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;td&lt;/code&gt; 和 &lt;code&gt;th&lt;/code&gt; 标签支持以下属性：</target>
        </trans-unit>
        <trans-unit id="2161cbb02a66d68d57757bc4c59404224c7d2c55" translate="yes" xml:space="preserve">
          <source>The following backends are supported:</source>
          <target state="translated">支持以下后端:</target>
        </trans-unit>
        <trans-unit id="73403ee03f358918f1eca9c9e082896a935f22c7" translate="yes" xml:space="preserve">
          <source>The following casts are done automatically:</source>
          <target state="translated">下面的投稿是自动完成的。</target>
        </trans-unit>
        <trans-unit id="f2e2f222dbb35608d2df2df4e9473ded4c7d8cb0" translate="yes" xml:space="preserve">
          <source>The following categories are informative in Unicode:</source>
          <target state="translated">在Unicode中,以下类别的信息。</target>
        </trans-unit>
        <trans-unit id="eaa218b35266a04e6a973de95b1b38a419143119" translate="yes" xml:space="preserve">
          <source>The following characters are normative in Unicode:</source>
          <target state="translated">在Unicode中,以下字符是规范的。</target>
        </trans-unit>
        <trans-unit id="805897dbe8fc240097bce136949485c792f29990" translate="yes" xml:space="preserve">
          <source>The following classes add scripting capabilities to Qt applications.</source>
          <target state="translated">以下类为Qt应用程序添加了脚本功能。</target>
        </trans-unit>
        <trans-unit id="b248fc7e8ad961a43d1e8dea544a4204c7fde123" translate="yes" xml:space="preserve">
          <source>The following classes support the selecting and setting up of printers and printing output.</source>
          <target state="translated">下面的类支持选择和设置打印机和打印输出。</target>
        </trans-unit>
        <trans-unit id="152a3fa1df3a1e63a479f2189ec9d3c764483535" translate="yes" xml:space="preserve">
          <source>The following code allocates and destructs an instance of &lt;code&gt;MyClass&lt;/code&gt;:</source>
          <target state="translated">以下代码分配和销毁 &lt;code&gt;MyClass&lt;/code&gt; 的实例：</target>
        </trans-unit>
        <trans-unit id="29923af26a8102ea5224fa752cdeb2285d843496" translate="yes" xml:space="preserve">
          <source>The following code can be used as a skeleton for a SQL driver:</source>
          <target state="translated">下面的代码可以作为一个SQL驱动的骨架。</target>
        </trans-unit>
        <trans-unit id="b37ba9689c10ea6e7b41611b5534804a9777fadf" translate="yes" xml:space="preserve">
          <source>The following code constructs a &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; containing 200 bits initialized to false (0):</source>
          <target state="translated">以下代码构造了一个&lt;a href=&quot;qbitarray&quot;&gt;QBitArray，&lt;/a&gt;其中包含200位初始化为false（0）的位：</target>
        </trans-unit>
        <trans-unit id="17c52a5cdfe2cf03a9dd0c9879033a770dae8f91" translate="yes" xml:space="preserve">
          <source>The following code constructs a QBitArray containing 200 bits initialized to false (0):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d5cf67f34f8c8e9997cdd30ad3ac0200228592" translate="yes" xml:space="preserve">
          <source>The following code creates a &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; that manages the geometry of five &lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt;, as shown on the first screenshot above:</source>
          <target state="translated">以下代码创建一个&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;，它管理五个&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;的几何，如上面的第一个屏幕截图所示：</target>
        </trans-unit>
        <trans-unit id="85264396902fd246c375c65bb69d739136d78a3e" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to set a single and multiple locales:</source>
          <target state="translated">下面的代码演示了如何设置一个和多个locales。</target>
        </trans-unit>
        <trans-unit id="c4e4e05d234a7e4763a3135274cf7b3bb3b6fa61" translate="yes" xml:space="preserve">
          <source>The following code does work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a022eccd1589fa377d9f33e232b1910eec41184" translate="yes" xml:space="preserve">
          <source>The following code doubles the horizontal size of an object drawn on the canvas and halves its vertical size:</source>
          <target state="translated">以下代码将画布上绘制的对象的水平尺寸增加一倍,垂直尺寸减少一半。</target>
        </trans-unit>
        <trans-unit id="fe4e937d7a7849d700b0eb797314b2eb25a77f1c" translate="yes" xml:space="preserve">
          <source>The following code evaluates a JavaScript expression in the context of the above QML:</source>
          <target state="translated">下面的代码在上述QML的上下文中评估了一个JavaScript表达式。</target>
        </trans-unit>
        <trans-unit id="5301c6be98ebf4de24f7b1f5daeb206c48e946c0" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="translated">以下代码示例仅是&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;Map Viewer（QML）&lt;/a&gt;示例中 &lt;code&gt;map&lt;/code&gt; 组件的一小部分。这些片段演示了&lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt;组件的声明。</target>
        </trans-unit>
        <trans-unit id="9febf8be7dbd0b9003bfb2741c874dfb3eda31d5" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-mapviewer-example.html&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a349e1ed3604dff924e8b747530df2b1fb21f0a9" translate="yes" xml:space="preserve">
          <source>The following code fragment shows a safe way to remove all items from a layout:</source>
          <target state="translated">下面的代码片段显示了一种从布局中删除所有项目的安全方法。</target>
        </trans-unit>
        <trans-unit id="3793f884131930e349131b4582a91bb94d382094" translate="yes" xml:space="preserve">
          <source>The following code has the same result, but here the putPoints() function overwrites rather than extends:</source>
          <target state="translated">下面的代码也有同样的结果,但这里的putPoints()函数是覆盖而不是扩展。</target>
        </trans-unit>
        <trans-unit id="043e15681fa36029257711b4647dea86a27d79d2" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">以下代码说明了如何使用&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="03a9476347778d7aa8fc046e0ffb028739341aa9" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use QBarCategoryAxis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a46bb338608f525ab43fbd77bc5952d090ef10" translate="yes" xml:space="preserve">
          <source>The following code instantiates the second node on the network and connects it with the source host node:</source>
          <target state="translated">以下代码实例化了网络上的第二个节点,并将其与源主机节点连接。</target>
        </trans-unit>
        <trans-unit id="f172e46f9d66d22472c1c0651821cba496f046f0" translate="yes" xml:space="preserve">
          <source>The following code loads this QML file as a component, creates an instance of this component using &lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;(), and then queries the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;'s &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; value:</source>
          <target state="translated">以下代码将此QML文件作为组件加载，使用&lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;（）创建此组件的实例，然后查询&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt;值：</target>
        </trans-unit>
        <trans-unit id="a8198c87c631ac4a6a8ce8da78cab3e143d35189" translate="yes" xml:space="preserve">
          <source>The following code performs all those checks, except for the denormal one, which is expected to be taken into account by the system FPU or floating point emulation directly.</source>
          <target state="translated">下面的代码除了反常态的检查外,其他的检查都会执行,预计系统FPU或浮点仿真会直接考虑到这一点。</target>
        </trans-unit>
        <trans-unit id="ac75d94af397cea73e943a7bdb23a2b1fcf80180" translate="yes" xml:space="preserve">
          <source>The following code shows how &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; can be reimplemented to tell the drag and drop system that we can only handle plain text:</source>
          <target state="translated">以下代码显示了如何重新实现&lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent（）&lt;/a&gt;来告诉拖放系统我们只能处理纯文本：</target>
        </trans-unit>
        <trans-unit id="bda50a4241f6719840d500340f5419ca65684a6c" translate="yes" xml:space="preserve">
          <source>The following code shows how an image with an alpha channel can be used to generate a mask for a widget:</source>
          <target state="translated">下面的代码显示了如何使用具有alpha通道的图像为widget生成遮罩。</target>
        </trans-unit>
        <trans-unit id="9b898e52098db9910b5be0f8a0c5dc66348d1514" translate="yes" xml:space="preserve">
          <source>The following code shows how each item of data, corresponding to a given list of indexes, is encoded as plain text and stored in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object.</source>
          <target state="translated">以下代码显示了与给定索引列表相对应的每一项数据如何被编码为纯文本并存储在&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;对象中。</target>
        </trans-unit>
        <trans-unit id="1fcdb5bc79e2f8016a52495136785e15cbc462ee" translate="yes" xml:space="preserve">
          <source>The following code shows how it can be implemented; in this example we simply display a message box when &lt;code&gt;s3&lt;/code&gt; is entered, then immediately return to the previous child state of &lt;code&gt;s1&lt;/code&gt; via the history state.</source>
          <target state="translated">以下代码显示了如何实现它；在此示例中，我们仅在输入 &lt;code&gt;s3&lt;/code&gt; 时显示一个消息框，然后立即通过历史记录状态返回到 &lt;code&gt;s1&lt;/code&gt; 的先前子状态。</target>
        </trans-unit>
        <trans-unit id="b590fb955591f0b182f22cd5c3650795716b8b24" translate="yes" xml:space="preserve">
          <source>The following code shows how to display a 64x64 pixel icon:</source>
          <target state="translated">以下代码显示了如何显示一个64x64像素的图标。</target>
        </trans-unit>
        <trans-unit id="cdb371047988ee1515fbe9e1266b8bf30fb2e6b5" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates how to perform a mathematical operation of &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; in a remote application called &lt;code&gt;com.example.Calculator&lt;/code&gt;, accessed via the session bus.</source>
          <target state="translated">以下代码段演示了如何在通过会话总线访问的名为 &lt;code&gt;com.example.Calculator&lt;/code&gt; 的远程应用程序中执行 &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; 的数学运算。</target>
        </trans-unit>
        <trans-unit id="5f069042ffb2a23936d5c0a334156a911e5f751d" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;:</source>
          <target state="translated">以下代码段说明了如何将系列添加到图表并设置&lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9f26c361a31c3b9976230277bc735bee880a0bb0" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up QDateTimeAxis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39031a87a5c922933791e9a1a9f6390d1b4d915c" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic scatter chart:</source>
          <target state="translated">下面的代码片段说明了如何创建一个基本的散点图。</target>
        </trans-unit>
        <trans-unit id="27a6450f38edc567378333b6c51fcb8f6a2a3551" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic spline chart:</source>
          <target state="translated">下面的代码片段说明了如何创建一个基本的花键图。</target>
        </trans-unit>
        <trans-unit id="7ce500357262455677e69d3ce7176dc98a482463" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to set a cookie filter:</source>
          <target state="translated">以下代码片段说明了如何设置cookie过滤器。</target>
        </trans-unit>
        <trans-unit id="28d455079cdec048bb4a260f7b86ddee8e2e2c53" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to draw the focus rectangle from a custom widget's paintEvent():</source>
          <target state="translated">以下代码段说明了如何使用&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;从自定义小部件的paintEvent（）绘制焦点矩形：</target>
        </trans-unit>
        <trans-unit id="78cec12c37e053d0b1f3bbf954acb96bccdb1440" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates the main .cpp file of the project:</source>
          <target state="translated">下面的代码片段说明了项目的主.cpp文件。</target>
        </trans-unit>
        <trans-unit id="6cdddd17dcaeb8349e957ad358a7488490690032" translate="yes" xml:space="preserve">
          <source>The following code snippet loads a library, resolves the symbol &quot;mysymbol&quot;, and calls the function if everything succeeded. If something goes wrong, e.g. the library file does not exist or the symbol is not defined, the function pointer will be &lt;code&gt;nullptr&lt;/code&gt; and won't be called.</source>
          <target state="translated">下面的代码片段加载一个库，解析符号&amp;ldquo; mysymbol&amp;rdquo;，并在一切成功的情况下调用该函数。如果出现问题，例如库文件不存在或未定义符号，则函数指针将为 &lt;code&gt;nullptr&lt;/code&gt; 且不会被调用。</target>
        </trans-unit>
        <trans-unit id="98f381cceec1251eb4ce86fb58d9eb779a3b21d4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how a script function can be defined and then invoked from C++ using &lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue::call&lt;/a&gt;():</source>
          <target state="translated">以下代码段显示了如何定义脚本函数，然后使用&lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue :: call&lt;/a&gt;（）从C ++调用脚本函数：</target>
        </trans-unit>
        <trans-unit id="2660e5e38bb8f6b9689c658829a3ed8e20a49437" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; was set up:</source>
          <target state="translated">以下代码片段显示了如何设置&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bdfb414b5845fbef3e67ad79a35ee3c2b10f2627" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the QSqlRelationalTableModel was set up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d598fded3da2a6333709571182b561d0d90798a" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass to paint a push button:</source>
          <target state="translated">下面的代码片段显示了如何使用特定的&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;子类来绘制按钮：</target>
        </trans-unit>
        <trans-unit id="b4f94882d5a0bae22fe818046c82f3c26b11114c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific QStyleOption subclass to paint a push button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89d58f09898697119341d12921596614c437b8c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;:</source>
          <target state="translated">以下代码片段显示了如何使用&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;和&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;将数据写入&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="032c2bda2ef9324cfb58f49341f96069c0a1dd6e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and QBuffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52c54c334b5058d97e9cca91d5ffae062c13b61" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you could select an appropriate icon that represents the language of the current locale.</source>
          <target state="translated">下面的代码片段显示了如何选择一个合适的图标来代表当前的语言。</target>
        </trans-unit>
        <trans-unit id="5268efeefe91998d10f64755e31fd5ef59fbbfdc" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the declaration of an Address object.</source>
          <target state="translated">下面的代码片段显示了地址对象的声明。</target>
        </trans-unit>
        <trans-unit id="767c4a394d5ff52abc62fa8d00954645322004b4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the invocation of the test:</source>
          <target state="translated">下面的代码片段显示了测试的调用。</target>
        </trans-unit>
        <trans-unit id="4eecdff8d00b92eb892303a7ebe474ba908ea027" translate="yes" xml:space="preserve">
          <source>The following code uses a custom dialog to handle the request:</source>
          <target state="translated">下面的代码使用一个自定义对话框来处理请求。</target>
        </trans-unit>
        <trans-unit id="a639eb22142b3cf48dee8ff6b83f201bf0a75a8c" translate="yes" xml:space="preserve">
          <source>The following code uses a custom menu to handle the request:</source>
          <target state="translated">下面的代码使用一个自定义菜单来处理请求。</target>
        </trans-unit>
        <trans-unit id="c205a1952e147705c9a68ccb81a21b9b337e105d" translate="yes" xml:space="preserve">
          <source>The following code uses the &lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView::action()&lt;/a&gt; method to check if the the copy action is enabled:</source>
          <target state="translated">以下代码使用&lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView :: action（）&lt;/a&gt;方法检查是否启用了复制操作：</target>
        </trans-unit>
        <trans-unit id="c669973805f8ec791d616d68fbe25e905b5a7432" translate="yes" xml:space="preserve">
          <source>The following code will create a &lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt; where only the 'plum' rectangle is visible.</source>
          <target state="translated">以下代码将创建一个&lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt;，其中仅显示&amp;ldquo;李子&amp;rdquo;矩形。</target>
        </trans-unit>
        <trans-unit id="926a5bf26dc168504ab08b75b68bcbff2f7e755d" translate="yes" xml:space="preserve">
          <source>The following code will create a StackLayout where only the 'plum' rectangle is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd0c0478b45646ec6cd90bfb5b3f0d86953dccd" translate="yes" xml:space="preserve">
          <source>The following code will map the columns of the model to widgets called &lt;code&gt;mySpinBox&lt;/code&gt;, &lt;code&gt;myLineEdit&lt;/code&gt; and &lt;code&gt;myCountryChooser&lt;/code&gt;:</source>
          <target state="translated">以下代码将模型的列映射到名为 &lt;code&gt;mySpinBox&lt;/code&gt; ， &lt;code&gt;myLineEdit&lt;/code&gt; 和 &lt;code&gt;myCountryChooser&lt;/code&gt; 的小部件：</target>
        </trans-unit>
        <trans-unit id="666faf82255da6fd3ed385bf4df72750e02a817c" translate="yes" xml:space="preserve">
          <source>The following code would create a &lt;code&gt;Button&lt;/code&gt; with a defined text string for the child &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object:</source>
          <target state="translated">以下代码将为子&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;对象创建一个带有已定义文本字符串的 &lt;code&gt;Button&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dfbdd901ff25d6291f838d640691dd6d62dd4884" translate="yes" xml:space="preserve">
          <source>The following colors are defined in the &lt;code&gt;QColorConstants&lt;/code&gt; namespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128b2739f57896afad7b7ed5e7b1bbb671d99ef" translate="yes" xml:space="preserve">
          <source>The following commands are used to render source code without formatting. The source code begins on a new line, rendered in the code.</source>
          <target state="translated">以下命令用于渲染源代码而不进行格式化。源代码从新的一行开始,呈现在代码中。</target>
        </trans-unit>
        <trans-unit id="69e8c6d23a472e53d606dd9bd07f599414c67dff" translate="yes" xml:space="preserve">
          <source>The following commands enable you to include code snippets from external files. You can make QDoc include the complete contents of a file, or you can quote specific parts of the file and skip others. The typical use of the latter is to quote a file chunk by chunk.</source>
          <target state="translated">下面的命令可以让您从外部文件中包含代码片段,您可以让QDoc包含文件的全部内容,也可以引用文件的特定部分而跳过其他部分。你可以让QDoc包含一个文件的完整内容,或者你可以引用文件的特定部分而跳过其他部分。后者的典型用法是逐块引用一个文件。</target>
        </trans-unit>
        <trans-unit id="ff62511c97370bc92280fbd456fa386d2aa28671" translate="yes" xml:space="preserve">
          <source>The following concepts are supported by the framework:</source>
          <target state="translated">该框架支持以下概念:</target>
        </trans-unit>
        <trans-unit id="88a5c0700dcdcd92921e10d41dddbdb63a575073" translate="yes" xml:space="preserve">
          <source>The following configurations are supported.</source>
          <target state="translated">支持以下配置:</target>
        </trans-unit>
        <trans-unit id="8fe90b1288f44498fb756129bc5a0a2af786bb67" translate="yes" xml:space="preserve">
          <source>The following configurations are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a494ba6c43caeca0ccafe62f9a851008e8e4c4" translate="yes" xml:space="preserve">
          <source>The following constructs are illegal. All of them have alternatives which we think are usually better, so removing these limitations is not a high priority for us.</source>
          <target state="translated">以下结构是非法的。所有这些结构都有我们认为通常更好的替代方案,因此消除这些限制对我们来说不是一个高度优先事项。</target>
        </trans-unit>
        <trans-unit id="6e6fcf23f5a940bb6fa265af687c9357e8989051" translate="yes" xml:space="preserve">
          <source>The following contrived example illustrates this point:</source>
          <target state="translated">下面这个人为的例子可以说明这一点。</target>
        </trans-unit>
        <trans-unit id="f04fbe636c682711bdcd9e60c5df11270f5ec431" translate="yes" xml:space="preserve">
          <source>The following custom cleanup handlers exist:</source>
          <target state="translated">存在以下自定义清理处理程序。</target>
        </trans-unit>
        <trans-unit id="ecfa53e4c2678533026b3059637b6eb015864860" translate="yes" xml:space="preserve">
          <source>The following declares version 2.0 of a class that exposes only its own API, and is available in the &quot;Insert Objects&quot; dialog of Microsoft Office applications.</source>
          <target state="translated">下面声明2.0版本的一个类,该类只暴露了自己的API,在Microsoft Office应用程序的 &quot;插入对象 &quot;对话框中可用。</target>
        </trans-unit>
        <trans-unit id="1508ac5b8249c498bcd3690f3eea41d2ea457487" translate="yes" xml:space="preserve">
          <source>The following demonstrates favorite removal:</source>
          <target state="translated">下面演示删除收藏夹。</target>
        </trans-unit>
        <trans-unit id="f6c3b288961376c9cea8e19e718eeea33fe045d1" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to assign multiple phone numbers to a place in JavaScript:</source>
          <target state="translated">下面演示了如何在JavaScript中把多个电话号码分配到一个地方。</target>
        </trans-unit>
        <trans-unit id="7591375e17b65673aba90205187132347fbe5d26" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to save a new favorite instance. A call is made to create/initialize the favorite instance and then the instance is saved.</source>
          <target state="translated">下面演示了如何保存一个新的收藏夹实例。调用创建/初始化收藏夹实例,然后保存实例。</target>
        </trans-unit>
        <trans-unit id="09ea97e5f665055fa43da3e7a758337d948f5e38" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a popup within a window:</source>
          <target state="translated">下图说明了窗口内弹出窗口的布局。</target>
        </trans-unit>
        <trans-unit id="8ad4e192a221f0cba404da5dc9e5e281728b1827" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a typical control:</source>
          <target state="translated">下图说明了一个典型的控制器的布局。</target>
        </trans-unit>
        <trans-unit id="d1622058272d86d465912f50ccaa0b7e54c9a85c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the configuration produced by the above code. Note that the left and right dock widgets will occupy the top and bottom corners of the main window in this layout.</source>
          <target state="translated">下图显示了上述代码所产生的配置。请注意,在此布局中,左、右停靠部件将占据主窗口的顶角和底角。</target>
        </trans-unit>
        <trans-unit id="a8a6c288cc52a3dff47e75db8095e251df392b8e" translate="yes" xml:space="preserve">
          <source>The following diagram shows the state machine after the interrupt mechanism has been added.</source>
          <target state="translated">下图是加入中断机制后的状态机。</target>
        </trans-unit>
        <trans-unit id="9212d0bde1264613ef95585ca5def65b8e0bb41d" translate="yes" xml:space="preserve">
          <source>The following documents contain information about Qt's D-Bus integration features, and provide details about the mechanisms used to send and receive type information over the bus:</source>
          <target state="translated">以下文档包含了有关Qt的D-Bus集成特性的信息,并提供了通过总线发送和接收类型信息的机制的细节。</target>
        </trans-unit>
        <trans-unit id="769d27cb354cbe0e7b29711fb4012187ccef06ce" translate="yes" xml:space="preserve">
          <source>The following entry in &lt;code&gt;project.pro&lt;/code&gt; ensures that the resources are built into the application binary, making them available when needed:</source>
          <target state="translated">&lt;code&gt;project.pro&lt;/code&gt; 中的以下条目可确保将资源内置到应用程序二进制文件中，并在需要时使其可用：</target>
        </trans-unit>
        <trans-unit id="4a321cbf3b29c620343d628dcaf485d9e7654ce9" translate="yes" xml:space="preserve">
          <source>The following enumeration values can be used as values of</source>
          <target state="translated">以下枚举值可以作为以下值的值使用</target>
        </trans-unit>
        <trans-unit id="35062726c8c7835d7a147656e6f2d2bd7135f019" translate="yes" xml:space="preserve">
          <source>The following example adds a button to be used with the example product in the previous section:</source>
          <target state="translated">下面的例子增加了一个按钮,与上一节中的示例产品一起使用。</target>
        </trans-unit>
        <trans-unit id="0f312079a1e70935716efd12082111dcc7a20f0d" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it enters the screen:</source>
          <target state="translated">下面的例子是在弹出窗口进入屏幕时,对其不透明度进行动画处理。</target>
        </trans-unit>
        <trans-unit id="e2b0d5514bb42998a3f979b580bff29f328eeed9" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it exits the screen:</source>
          <target state="translated">下面的例子是当弹出屏幕时,弹出窗口的不透明度的动画。</target>
        </trans-unit>
        <trans-unit id="2007de81cf2d470bc6b7f0e9331a28aa7f12a137" translate="yes" xml:space="preserve">
          <source>The following example appends a simple string to the stream:</source>
          <target state="translated">下面的例子将一个简单的字符串附加到流中。</target>
        </trans-unit>
        <trans-unit id="6e513167bdac3397fa5487a0d9820836fb9cf411" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; passed as input:</source>
          <target state="translated">下面的示例附加在&lt;a href=&quot;qmap&quot;&gt;QMap中&lt;/a&gt;找到的所有字符串作为输入传递：</target>
        </trans-unit>
        <trans-unit id="5f1507bded6dc8f04646b20de92ec8482d36cb39" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; passed as input:</source>
          <target state="translated">下面的示例附加在&lt;a href=&quot;qstringlist&quot;&gt;QStringList中&lt;/a&gt;找到的所有字符串作为输入传递：</target>
        </trans-unit>
        <trans-unit id="58ac2cedd3334b713ea7d2f3034b00b4cb8bad9c" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of int and string pairs passed as input:</source>
          <target state="translated">下面的例子从作为输入的int和字符串对的链接列表中追加元素。</target>
        </trans-unit>
        <trans-unit id="6e6967b0eea2626bc8398f7afa8cea91bb707bd3" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of strings passed as input:</source>
          <target state="translated">下面的例子是从作为输入的字符串的链接列表中追加元素。</target>
        </trans-unit>
        <trans-unit id="e003c2419afff47850810afeb3a7e2b3217f9296" translate="yes" xml:space="preserve">
          <source>The following example attempts to store the purchase state of a consumable product using a custom made function. It only finalizes the transaction if saving the data was successful. Otherwise, it calls another custom function to display an error message to the user.</source>
          <target state="translated">下面的例子试图使用一个自定义的函数来存储消耗品的购买状态。只有在保存数据成功的情况下,它才会最终完成交易。否则,它将调用另一个自定义函数向用户显示错误信息。</target>
        </trans-unit>
        <trans-unit id="321f9fa2f06863b13a3d5e063ab02b59ae74aacb" translate="yes" xml:space="preserve">
          <source>The following example bundles an icon theme called</source>
          <target state="translated">下面的例子捆绑了一个名为</target>
        </trans-unit>
        <trans-unit id="789a644db1d9395f4b9de02daa9780c883f500e7" translate="yes" xml:space="preserve">
          <source>The following example calls a custom function which either saves the information about the purchase or verifies that it is already saved. When the data has been verified, it finalizes the transaction. If it could not be verified, it calls another custom function to display an error message to the user. If the transaction is not finalized, the handler will be called again for the same transaction the next time the product is registered (on application start-up).</source>
          <target state="translated">下面的例子调用了一个自定义函数,该函数要么保存购买信息,要么验证已经保存的信息。当数据被验证后,它就完成了交易。如果无法验证,则调用另一个自定义函数向用户显示错误信息。如果交易没有最终完成,那么在下一次注册产品时(在应用程序启动时),该处理程序将被再次调用,用于相同的交易。</target>
        </trans-unit>
        <trans-unit id="6936ef2d15d1d5946cef9e61335821d72ee453fe" translate="yes" xml:space="preserve">
          <source>The following example calls custom methods to save data about a succeeded purchase so that it survives across application runs. After verifying that the data has been stored, it finalizes the transaction. When the transaction has failed, it displays information about the failure to the user and finalizes the transaction.</source>
          <target state="translated">下面的例子调用自定义方法来保存成功购买的数据,使其在应用程序运行过程中得以保存。在验证数据已被存储后,它最终完成交易。当交易失败时,它向用户显示失败的信息并最终完成交易。</target>
        </trans-unit>
        <trans-unit id="9a83bd0ff7ce1f15b046fe99b2dac1a7d14a7b2d" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; type:</source>
          <target state="translated">以下示例代码说明了如何使用&lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt;类型：</target>
        </trans-unit>
        <trans-unit id="efe3a2c14b84c5f2ba4e0a585c768d225bb22b93" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; class:</source>
          <target state="translated">以下示例代码说明了如何使用&lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;类：</target>
        </trans-unit>
        <trans-unit id="6308c8afbc2fb7cad7c021934cb90a1e96ed8cbd" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="translated">下面的示例代码说明了如何使用&lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt;和&lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt;类来调整任务栏按钮的外观：</target>
        </trans-unit>
        <trans-unit id="9001b0d6725de4fbc7aee65597c392b690422e16" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QValueAxis class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80661600a7b4843e0b3c5876648f4daf025b6073" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QWinTaskbarButton and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb0797c1ea6f6b9d13d33bfae5477e8211dcbd4" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the ValueAxis type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefc97157f19f5289a81b8fed60b5df32fd5e273" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt; and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="translated">下面的示例代码说明了如何使用&lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt;和&lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt;类中的函数来实现缩略图工具栏：</target>
        </trans-unit>
        <trans-unit id="cf6f0c83480f486835856efc735f1ab84d5fd510" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the QWinThumbnailToolBar and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33923f84776b95ca304d2788d87fdec5cc0ce1a" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with five elements:</source>
          <target state="translated">下面的示例创建一个具有五个元素的&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="32d80cefdbc0088c84740e0a1b1082d3f60e3334" translate="yes" xml:space="preserve">
          <source>The following example creates a palette from the &lt;code&gt;Active&lt;/code&gt; color group and uses this to color the window and text items appropriately:</source>
          <target state="translated">以下示例从&amp;ldquo; &lt;code&gt;Active&lt;/code&gt; 颜色组中创建一个调色板，并使用该调色板为窗口和文本项正确着色：</target>
        </trans-unit>
        <trans-unit id="90fa58ca4101a85bcd3df5a18bf54d10c96d3011" translate="yes" xml:space="preserve">
          <source>The following example creates a vertex shader program using the supplied source &lt;code&gt;code&lt;/code&gt;. Once compiled and linked, the shader program is activated in the current &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; by calling &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram::bind&lt;/a&gt;():</source>
          <target state="translated">以下示例使用提供的源 &lt;code&gt;code&lt;/code&gt; 创建一个顶点着色器程序。编译并链接后，&lt;a href=&quot;qopenglcontext&quot;&gt;可&lt;/a&gt;通过调用&lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram :: bind&lt;/a&gt;（）在当前QOpenGLContext中激活着色器程序：</target>
        </trans-unit>
        <trans-unit id="93c96c6c408a634c6e6054cbb728d2b6f1ffd18a" translate="yes" xml:space="preserve">
          <source>The following example creates a view based on an SQL data model:</source>
          <target state="translated">以下示例基于SQL数据模型创建了一个视图。</target>
        </trans-unit>
        <trans-unit id="59b5d4440985280dd7578090609cbcb09f7d4c11" translate="yes" xml:space="preserve">
          <source>The following example declares a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item with a gradient starting with red, blending to yellow at one third of the height of the rectangle, and ending with green:</source>
          <target state="translated">下面的示例声明一个&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;项，该项的渐变以红色开始，在矩形高度的三分之一处融合为黄色，并以绿色结束：</target>
        </trans-unit>
        <trans-unit id="9081678b9419eb58f8254c031612400fbec8c684" translate="yes" xml:space="preserve">
          <source>The following example defines a Behavior fading out and fading in its target object when the property it controls changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6874a5fb9612a0fa6ef90bb3b79e40e2bf027db2" translate="yes" xml:space="preserve">
          <source>The following example defines two contexts - &lt;code&gt;context1&lt;/code&gt; and &lt;code&gt;context2&lt;/code&gt;. The second context overrides the &quot;b&quot; context property inherited from the first with a new value.</source>
          <target state="translated">以下示例定义了两个上下文 &lt;code&gt;context1&lt;/code&gt; 和 &lt;code&gt;context2&lt;/code&gt; 。第二个上下文使用新值覆盖从第一个上下文继承的&amp;ldquo; b&amp;rdquo;上下文属性。</target>
        </trans-unit>
        <trans-unit id="f196eace9f08d98b8ec3afdb932443152cf8b9cb" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5c3ce81872a0281a5c72d213bdf0961a8e0ecd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="translated">下面的示例演示了一个自定义的圆形按钮，该按钮在&lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material样式&lt;/a&gt;中具有样式化的阴影，而在其他样式中则看起来很平坦。对文件进行组织，以便将 &lt;code&gt;CustomButton.qml&lt;/code&gt; 的Material版本放置在 &lt;code&gt;+material&lt;/code&gt; 子目录中。</target>
        </trans-unit>
        <trans-unit id="48ab40f0d947a5a2925f13551f0d4b5f697a9a02" translate="yes" xml:space="preserve">
          <source>The following example demonstrates appending content to an editable combo box by reacting to the &lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;accepted&lt;/a&gt; signal.</source>
          <target state="translated">下面的示例演示如何通过对&lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;接受的&lt;/a&gt;信号做出反应，将内容附加到可编辑的组合框中。</target>
        </trans-unit>
        <trans-unit id="8b3c8b177b1a92b1349c4a8ae0c81a1bbc007b7a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how the macro can be used to set context properties on the QML engine:</source>
          <target state="translated">下面的例子演示了如何使用宏来设置QML引擎上的上下文属性。</target>
        </trans-unit>
        <trans-unit id="2aa9fdd767515675f7d459b3c8f8961f000d2d3c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to assign a single phone number to a place in JavaScript:</source>
          <target state="translated">下面的例子演示了如何在JavaScript中为一个地方分配一个电话号码。</target>
        </trans-unit>
        <trans-unit id="a270b47356ae438755a16ab33fe6cac410dff601" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to pass custom flags to &lt;code&gt;CreateProcess&lt;/code&gt;. When starting a console process B from a console process A, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; will reuse the console window of process A for process B by default. In this example, a new console window with a custom color scheme is created for the child process B instead.</source>
          <target state="translated">下面的示例演示如何将自定义标志传递给 &lt;code&gt;CreateProcess&lt;/code&gt; 。从控制台进程A 启动控制台进程B时，默认情况下，&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;将为进程B重用进程A的控制台窗口。在此示例中，将为子进程B创建具有自定义配色方案的新控制台窗口。</target>
        </trans-unit>
        <trans-unit id="3c8716cd3d5e195e9e26ce67de17f84792d466d6" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use an incubator:</source>
          <target state="translated">下面的例子演示了如何使用孵化器。</target>
        </trans-unit>
        <trans-unit id="e8d610cbc5024360e7e361e6b034f5a0267b6e07" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the lighting effect on an object using an HDR image vs a single directional light:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e2e23e8c39dcb82b548f498561006250ba9caa" translate="yes" xml:space="preserve">
          <source>The following example displays a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that can be dragged along the X-axis. The opacity of the rectangle is reduced when it is dragged to the right.</source>
          <target state="translated">下面的示例显示一个可以沿X轴拖动的&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;。当矩形向右拖动时，其不透明度会降低。</target>
        </trans-unit>
        <trans-unit id="72809dcb71e91c9f048109c1967c27dffd1fd78d" translate="yes" xml:space="preserve">
          <source>The following example displays a flat list of all available categories:</source>
          <target state="translated">下面的例子显示了所有可用类别的平面列表。</target>
        </trans-unit>
        <trans-unit id="1b3e70b6e6e8c14fc3276fec873ace7a4359cbc5" translate="yes" xml:space="preserve">
          <source>The following example displays a single &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;. In the default state, the rectangle is colored black. In the &quot;clicked&quot; state, a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object changes the rectangle's color to red. Clicking within the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; toggles the rectangle's state between the default state and the &quot;clicked&quot; state, thus toggling the color of the rectangle between black and red.</source>
          <target state="translated">以下示例显示一个&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;。在默认状态下，矩形被涂成黑色。在&amp;ldquo;单击&amp;rdquo;状态下，&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt;对象将矩形的颜色更改为红色。在&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea中&lt;/a&gt;单击可在默认状态和&amp;ldquo;单击&amp;rdquo;状态之间切换矩形的状态，从而在黑色和红色之间切换矩形的颜色。</target>
        </trans-unit>
        <trans-unit id="8b9ac8dff6be8dee0fefb5784d9556ccb2df9de3" translate="yes" xml:space="preserve">
          <source>The following example displays the specified number in the correct format for the default locale:</source>
          <target state="translated">下面的例子以正确的格式显示指定的数字,以适应默认的地域。</target>
        </trans-unit>
        <trans-unit id="5bcb14d84e4150978eb5d7781f0eab34eb80c5f8" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch and pan gestures on the map, but not flicking. So the map scrolling will halt immediately on releasing the mouse button / touch.</source>
          <target state="translated">下面的例子可以在地图上实现捏住和平移的手势,但不能轻触。因此,当释放鼠标按钮/触摸时,地图滚动将立即停止。</target>
        </trans-unit>
        <trans-unit id="c543fccab3e6f3cb9422e2c015ff69eaae712651" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch gesture on a map and reacts to the finished event.</source>
          <target state="translated">下面的例子是在地图上启用捏手势,并对完成的事件做出反应。</target>
        </trans-unit>
        <trans-unit id="f11a5072827cb9854f65cc323b8fa0d222fdd82f" translate="yes" xml:space="preserve">
          <source>The following example encodes the equivalent of this JSON content:</source>
          <target state="translated">下面的例子对这个JSON内容进行了等价的编码。</target>
        </trans-unit>
        <trans-unit id="d524036093e34a90a79161e6dc3192e97c564efb" translate="yes" xml:space="preserve">
          <source>The following example function takes a variable name as its only argument, extracts a list of values from the variable with the &lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval()&lt;/a&gt; built-in function, and compiles a list of files:</source>
          <target state="translated">下面的示例函数将变量名作为唯一参数，使用内置的&lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval（）函数&lt;/a&gt;从变量中提取值列表，并编译文件列表：</target>
        </trans-unit>
        <trans-unit id="31b4e6b5d8e2722c3d8ee9d58963cd07c10414ff" translate="yes" xml:space="preserve">
          <source>The following example has the same effect as the previous one, but it uses a context object.</source>
          <target state="translated">下面的例子与前一个例子有同样的效果,但它使用了一个上下文对象。</target>
        </trans-unit>
        <trans-unit id="214783ff38465c2242067ede39dce8207156d48f" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d028f954d51e1eaa768a2c94d1b7debdeddd99" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="translated">以下示例说明了将项目动态插入&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar的过程&lt;/a&gt;，这是Container的具体实现之一。</target>
        </trans-unit>
        <trans-unit id="1a46a75e8cca25bf2b466e27890d64aaedf09224" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca40164f9ec6d68590386dcdad42f196b5dd3773" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="translated">以下示例说明了如何使用&lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus类型系统&lt;/a&gt;构造包含整数和字符串的结构：</target>
        </trans-unit>
        <trans-unit id="d6c4cdd0cf3326dfb454a3df45462585caf89c96" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the combined check state of children can be bound to the check state of the parent checkbox:</source>
          <target state="translated">下面的例子说明了如何将子代的组合检查状态绑定到父代检查框的检查状态。</target>
        </trans-unit>
        <trans-unit id="cace15d6bf210e8d74cdacf78bfc9b2e3aaa9a0e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to assign a &lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;Menu&lt;/a&gt; to a system tray icon:</source>
          <target state="translated">以下示例说明了如何将&lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;菜单&lt;/a&gt;分配给系统任务栏图标：</target>
        </trans-unit>
        <trans-unit id="8258dcf46b8314f3a0b64c66af0bb96b737d1fe6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">以下示例说明了如何创建向导页面并将其添加到向导中。有关更多高级示例，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;类向导&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;许可证向导&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e14ea9942cf768336832a16bd124c14fa69ded42" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82968110ae89ab7dc1b61419d67c4b267a87a658" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to keep each tab button at their implicit size instead of being resized to fit the tabbar:</source>
          <target state="translated">下面的例子说明了如何保持每个标签按钮的隐式大小,而不是调整大小以适应标签栏。</target>
        </trans-unit>
        <trans-unit id="61c2b18dd286130d0d4274f7eb8da86c32127fb4" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to update all widgets with new data whenever the selection of a &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; named &lt;code&gt;myTableView&lt;/code&gt; changes:</source>
          <target state="translated">以下示例说明了每当名为 &lt;code&gt;myTableView&lt;/code&gt; 的&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;的选择发生更改时，如何使用新数据更新所有小部件：</target>
        </trans-unit>
        <trans-unit id="abbd8aa7425bd9f6a6782fe6b02bd522cd9092ff" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; directly:</source>
          <target state="translated">以下示例说明了如何直接使用&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f04b7c4dfc10dd1edd0ebeedc997270525959c7f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt; in QML:</source>
          <target state="translated">以下示例说明了如何在QML中使用&lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4833ffd6f9c31280862b657e0348cc5754df8a0f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use QLocale directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264b2968512a67703454e35352da4b63b167c995" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use TaskbarButton in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65a096e1eff2ce5fe13f5b9dd6c2e6b51985d3a" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use this function to calibrate a parameter to a slow operation (for example, an iteration count) so that this operation takes at least 250 milliseconds:</source>
          <target state="translated">下面的例子说明了如何使用这个函数来校准一个慢速操作(例如,迭代次数)的参数,使这个操作至少需要250毫秒。</target>
        </trans-unit>
        <trans-unit id="bb6211c1a8f1b66d524d0c15c471892e72931709" translate="yes" xml:space="preserve">
          <source>The following example illustrates the lack of name resolution. &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput::stateChanged&lt;/a&gt;() is declared with an argument of type &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;. Thus, string-based connections must also specify &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;, even if &lt;code&gt;&quot;State&quot;&lt;/code&gt; is already visible. This issue does not apply to functor-based connections because argument types are not part of the connection.</source>
          <target state="translated">下面的示例说明了缺少名称解析的问题。&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput :: stateChanged&lt;/a&gt;（）使用类型为&amp;ldquo; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; &amp;rdquo; 的参数声明。因此，即使 &lt;code&gt;&quot;State&quot;&lt;/code&gt; 已经可见，基于字符串的连接也必须指定&amp;ldquo; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; &amp;rdquo; 。因为参数类型不是连接的一部分，所以此问题不适用于基于仿函数的连接。</target>
        </trans-unit>
        <trans-unit id="b6a30af2da96b9d30dccf92a49276b388fa30fab" translate="yes" xml:space="preserve">
          <source>The following example illustrates the problem:</source>
          <target state="translated">下面的例子说明了这个问题。</target>
        </trans-unit>
        <trans-unit id="e9a17ce562e7cbe5caff950348f7ad7a745502c6" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of push and pop transitions with replace().</source>
          <target state="translated">下面的例子说明了使用replace()的推送和弹出转换。</target>
        </trans-unit>
        <trans-unit id="cfbac71634e3a264a3fd7e6117c677184e092d18" translate="yes" xml:space="preserve">
          <source>The following example illustrates this wrong usage in context of a class that may contain invalid data:</source>
          <target state="translated">下面的例子说明了在一个可能包含无效数据的类的上下文中的这种错误用法。</target>
        </trans-unit>
        <trans-unit id="dcdac71fea17b7473a1a9a3d39ce385bbb8c8630" translate="yes" xml:space="preserve">
          <source>The following example illustrates using groups to select items in a model.</source>
          <target state="translated">下面的例子说明了如何使用组来选择模型中的项目。</target>
        </trans-unit>
        <trans-unit id="7f66d896289163fb2467640c8c754a07756db892" translate="yes" xml:space="preserve">
          <source>The following example is a hypothetical role-playing game, which provides two in-app products to the user.</source>
          <target state="translated">下面的例子是一个假设的角色扮演游戏,它为用户提供了两个应用内产品。</target>
        </trans-unit>
        <trans-unit id="b5339db37fea7f735b72083b63132b397a5289ab" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies a flip effect when flicked over horizontal bounds:</source>
          <target state="translated">下面的例子将内容保持在边界内,而当在水平边界上翻转时,则应用翻转效果。</target>
        </trans-unit>
        <trans-unit id="f9723a0265582b139ed4d722cb7eb6d860782230" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies an opacity effect when dragged over vertical bounds:</source>
          <target state="translated">下面的示例将内容保持在范围内,而当拖动到垂直范围上时,则应用不透明效果。</target>
        </trans-unit>
        <trans-unit id="bf2c39d611daebb3a7d083ce5cdbf30bda0f6e9a" translate="yes" xml:space="preserve">
          <source>The following example keeps the vertical scroll bar always visible:</source>
          <target state="translated">下面的例子使垂直滚动条始终可见。</target>
        </trans-unit>
        <trans-unit id="8c91ff631fb6780786f32c7615216c30c06c1da6" translate="yes" xml:space="preserve">
          <source>The following example looks for the first element in an XML document and prints the names of all the elements that are its direct children.</source>
          <target state="translated">下面的例子寻找XML文档中的第一个元素,并打印出作为其直接子元素的所有元素的名称。</target>
        </trans-unit>
        <trans-unit id="f1ba3897b3a0cb65804b2a61cff86e324662f925" translate="yes" xml:space="preserve">
          <source>The following example makes a copy of the char* returned by data(), but it will corrupt the heap and cause a crash because it does not allocate a byte for the '\0' at the end:</source>
          <target state="translated">下面的例子对data()返回的char*进行复制,但它会破坏堆并导致崩溃,因为它没有为最后的'\0'分配一个字节。</target>
        </trans-unit>
        <trans-unit id="51360adb4c2868929c0ce57e1b796e0197fed192" translate="yes" xml:space="preserve">
          <source>The following example moves the Y axis of the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; items while still allowing the &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; to lay the items out as if they had not been transformed:</source>
          <target state="translated">下面的示例移动&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;项的Y轴，同时仍然允许&lt;a href=&quot;qml-qtquick-row&quot;&gt;Row对其&lt;/a&gt;进行布局，就好像它们尚未转换一样：</target>
        </trans-unit>
        <trans-unit id="513269504bca412fec4ae0b14763dc29725f9ef1" translate="yes" xml:space="preserve">
          <source>The following example opens a file on the Windows file system residing on a path that contains spaces:</source>
          <target state="translated">下面的例子是在Windows文件系统中打开一个文件,该文件的路径中含有空格。</target>
        </trans-unit>
        <trans-unit id="75a44a5e4cdd0f72a0334b5df5b53297319455d0" translate="yes" xml:space="preserve">
          <source>The following example plays a WAV file on mouse click.</source>
          <target state="translated">下面的例子是通过鼠标点击播放WAV文件。</target>
        </trans-unit>
        <trans-unit id="557e57b7bb4ac250f8c4178d80ca578777bfbd8d" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; given the array's size for more efficient decoding:</source>
          <target state="translated">以下示例在给定数组大小的情况下预分配了&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList，&lt;/a&gt;以进行更有效的解码：</target>
        </trans-unit>
        <trans-unit id="3af0ab72f7032b4ad36c48527b0a1d2fd9d854f0" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; given the map's size for more efficient decoding:</source>
          <target state="translated">以下示例根据地图的大小预先分配了&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap，&lt;/a&gt;以进行更有效的解码：</target>
        </trans-unit>
        <trans-unit id="2c2089a4179fec95c239c0fd321e6f3f78e4fdc9" translate="yes" xml:space="preserve">
          <source>The following example presents how to show a notification message using &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt;, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked()&lt;/a&gt; signal:</source>
          <target state="translated">下面的示例演示如何使用&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage（）&lt;/a&gt;显示通知消息，以及如何利用&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked（）&lt;/a&gt;信号：</target>
        </trans-unit>
        <trans-unit id="4350a2e8e7ff8ea6cf23ef5c497764c249f3fce0" translate="yes" xml:space="preserve">
          <source>The following example provides a module that can add numbers:</source>
          <target state="translated">下面的例子提供了一个可以添加数字的模块。</target>
        </trans-unit>
        <trans-unit id="c7429581e102dfb191ef654ae09ac2ab917a51c3" translate="yes" xml:space="preserve">
          <source>The following example provides key navigation for a 2x2 grid of items:</source>
          <target state="translated">下面的例子提供了一个2x2网格项目的关键导航。</target>
        </trans-unit>
        <trans-unit id="8953d76100e0ebfa41204e302eb67adc0ebb4de9" translate="yes" xml:space="preserve">
          <source>The following example queries an unlockable product named &quot;myUnlockableProduct&quot; from the external market place.</source>
          <target state="translated">下面的例子是从外部市场查询一个名为 &quot;myUnlockableProduct &quot;的可解锁产品。</target>
        </trans-unit>
        <trans-unit id="26616f6353920f8959c6621807f02e6eae71c83a" translate="yes" xml:space="preserve">
          <source>The following example reacts to a failed purchase attempt by calling a custom function to display a message to the user.</source>
          <target state="translated">下面的例子是通过调用一个自定义函数向用户显示一条消息来应对一次失败的购买尝试。</target>
        </trans-unit>
        <trans-unit id="ae005e6ca85a3901fbe2ce93a49742de9aef1aab" translate="yes" xml:space="preserve">
          <source>The following example reads a text file line by line:</source>
          <target state="translated">下面的例子是逐行读取一个文本文件。</target>
        </trans-unit>
        <trans-unit id="74bb4ba52c1627192c71b409c394fd691c4b1f14" translate="yes" xml:space="preserve">
          <source>The following example records all signal emissions for the &lt;code&gt;clicked()&lt;/code&gt; signal of a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;:</source>
          <target state="translated">下面的示例记录&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;的 &lt;code&gt;clicked()&lt;/code&gt; 信号的所有信号发射：</target>
        </trans-unit>
        <trans-unit id="ca61b8bb5c409621b5c9f6a8ba91d4c740f0da48" translate="yes" xml:space="preserve">
          <source>The following example registers a store with three products, two consumable products and one unlockable.</source>
          <target state="translated">下面的例子注册一个商店,有三个产品,两个消耗品,一个解锁品。</target>
        </trans-unit>
        <trans-unit id="3ae624641f1701f62cdd5da464e7815b2f584503" translate="yes" xml:space="preserve">
          <source>The following example removes all (capital, country) pairs where the capital's name ends with &quot;City&quot;:</source>
          <target state="translated">下面的例子删除了所有首都名称以 &quot;City &quot;结尾的(首都,国家)对。</target>
        </trans-unit>
        <trans-unit id="4339d457d4854018d0db03920337e2b2b80ba932" translate="yes" xml:space="preserve">
          <source>The following example retrieves the most common information about the root volume of the system, and prints information about it.</source>
          <target state="translated">下面的例子检索了系统根卷的最常见信息,并打印了相关信息。</target>
        </trans-unit>
        <trans-unit id="23de676a2cd224d8cb5359853c054281d779a552" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle 45 degress (PI/4):</source>
          <target state="translated">下面的例子是将一个矩形旋转45度(PI/4)。</target>
        </trans-unit>
        <trans-unit id="65333a7cadf6bc62d1d4c4ab90fa342719942d45" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle around its interior point (25, 25):</source>
          <target state="translated">下面的例子是将一个矩形绕其内点(25,25)旋转。</target>
        </trans-unit>
        <trans-unit id="71699ef293fec3faa7d2790bcc71f67d088a8177" translate="yes" xml:space="preserve">
          <source>The following example runs &lt;code&gt;gzip&lt;/code&gt; to compress the string &quot;Qt rocks!&quot;, without an event loop:</source>
          <target state="translated">以下示例运行 &lt;code&gt;gzip&lt;/code&gt; 压缩字符串&amp;ldquo; Qt rock！&amp;rdquo;，而没有事件循环：</target>
        </trans-unit>
        <trans-unit id="c5dab2919a061964bc0198aedf576f2c74a4b030" translate="yes" xml:space="preserve">
          <source>The following example runs two number animations in a sequence. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; animates to a &lt;code&gt;x&lt;/code&gt; position of 50, then to a &lt;code&gt;y&lt;/code&gt; position of 50.</source>
          <target state="translated">以下示例按顺序运行两个数字动画。的&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;动画到 &lt;code&gt;x&lt;/code&gt; 的50位，然后到达 &lt;code&gt;y&lt;/code&gt; 50的位置。</target>
        </trans-unit>
        <trans-unit id="2b29151d13a941955c42ede9b81b3015f9b1ad23" translate="yes" xml:space="preserve">
          <source>The following example scales the X axis of the Rectangle, relative to its interior point (25, 25):</source>
          <target state="translated">下面的例子是将矩形的X轴相对于它的内点(25,25)进行缩放。</target>
        </trans-unit>
        <trans-unit id="2ac78949462a2b81a2f63c17daa9554174b55774" translate="yes" xml:space="preserve">
          <source>The following example sets a dark Holo theme, and the result can be seen in the screenshot above.</source>
          <target state="translated">下面的例子设置了一个黑暗的Halo主题,结果可以从上面的截图中看到。</target>
        </trans-unit>
        <trans-unit id="2449b58c1a1ed6989f26c09f1a970ba1e971829c" translate="yes" xml:space="preserve">
          <source>The following example sets an Australian locale:</source>
          <target state="translated">下面的例子设置了一个澳大利亚的区域。</target>
        </trans-unit>
        <trans-unit id="b0cddd187310ec0bc7df4109b3cda105ff8c31cd" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel&lt;/a&gt; being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">以下示例显示一个&lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel，&lt;/a&gt;它用于在&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView中&lt;/a&gt;提供QML文件的列表：</target>
        </trans-unit>
        <trans-unit id="b5f1c749b4a3dac2e8c564c65b83d1ffe025af38" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="translated">下面的示例显示一个&lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel，&lt;/a&gt;其中包含三个元素，其角色分别为&amp;ldquo;名称&amp;rdquo;和&amp;ldquo;成本&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2b735c5f3c12a80dee8eab5f21df3e87ebe43489" translate="yes" xml:space="preserve">
          <source>The following example shows a Flipable item that flips whenever it is clicked, rotating about the y-axis.</source>
          <target state="translated">下面的例子显示了一个可翻转的项目,只要点击它就会翻转,围绕y轴旋转。</target>
        </trans-unit>
        <trans-unit id="7fdec566f2c2804382d66f46214f50172b1d2637" translate="yes" xml:space="preserve">
          <source>The following example shows a Flow item containing a number of &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; child items. These are arranged in a similar way to those shown in the screenshots.</source>
          <target state="translated">以下示例显示了一个Flow项目，其中包含许多&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;子项目。这些设置的方式与屏幕快照中显示的方式类似。</target>
        </trans-unit>
        <trans-unit id="c29c72591cae91b2f007f4af64f703045b27ab75" translate="yes" xml:space="preserve">
          <source>The following example shows a FolderListModel being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f609049f1304621e97ca95e7578d059e6e61c5e7" translate="yes" xml:space="preserve">
          <source>The following example shows a ListModel containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c6f6b88c8eb63ab62f818c0c0e0aa7d4e4f70c" translate="yes" xml:space="preserve">
          <source>The following example shows a URL where the scheme is &quot;ftp&quot;:</source>
          <target state="translated">下面的例子显示了一个方案为 &quot;ftp &quot;的URL。</target>
        </trans-unit>
        <trans-unit id="76b891fc64d366955a188d498567a1d26d2315bc" translate="yes" xml:space="preserve">
          <source>The following example shows a chord that will be triggered by pressing the A and S keys together with a tolerance of 10 miliseconds between presses.</source>
          <target state="translated">下面的例子显示了一个通过按A和S键触发的和弦,按键之间的公差为10毫秒。</target>
        </trans-unit>
        <trans-unit id="6d6a86b66009ed3f00b52bcf4006d9a598bc33c7" translate="yes" xml:space="preserve">
          <source>The following example shows a datetime being parsed from a datetime string in a certain format using the default locale:</source>
          <target state="translated">下面的例子显示了使用默认的locale从特定格式的日期时间字符串中解析出的日期时间。</target>
        </trans-unit>
        <trans-unit id="04821c7da1a7b444db6dab2915f87836eaca6046" translate="yes" xml:space="preserve">
          <source>The following example shows a delegate that animates a spinning rectangle. When it is pooled, the animation is temporarily paused:</source>
          <target state="translated">下面的例子显示了一个代表,它可以为一个旋转的矩形制作动画。当它被池化时,动画会暂时暂停。</target>
        </trans-unit>
        <trans-unit id="309db721a234dfdcc2e1834805c969dcecd4a034" translate="yes" xml:space="preserve">
          <source>The following example shows a number formatted for the German locale:</source>
          <target state="translated">下面的例子显示了一个德国地区的数字格式。</target>
        </trans-unit>
        <trans-unit id="7fd59d1748028f68695a01a229f4ca317f27ef52" translate="yes" xml:space="preserve">
          <source>The following example shows a repeater used with a Grid item to arrange a set of Rectangle items. The Repeater item creates a series of 24 rectangles for the Grid item to position in a 5 by 5 arrangement.</source>
          <target state="translated">下面的例子显示了一个与网格项一起使用的中继器来排列一组矩形项。中继器项目为网格项目创建一系列24个矩形,以5乘5的排列方式定位。</target>
        </trans-unit>
        <trans-unit id="a5da7652fa9d6b03fcb7a7bf452645d018e0270a" translate="yes" xml:space="preserve">
          <source>The following example shows a simple &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="translated">以下示例显示了一个简单的&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource，&lt;/a&gt;用于每秒接收更新，并将经度和纬度打印到控制台。</target>
        </trans-unit>
        <trans-unit id="43949d4305f186fd39d8b548154566aeeee5ab90" translate="yes" xml:space="preserve">
          <source>The following example shows a simple Location object being declared:</source>
          <target state="translated">下面的例子显示了一个简单的Location对象被声明。</target>
        </trans-unit>
        <trans-unit id="8382a28721e964c363d7c6e36c38fd706b4d0bbe" translate="yes" xml:space="preserve">
          <source>The following example shows a simple PositionSource used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7f146857fb04cfd88daa9517c3c48e9fbfd9f" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the &lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt; type</source>
          <target state="translated">以下示例显示了&lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt;类型的简单用法</target>
        </trans-unit>
        <trans-unit id="ce77675d624900efa11f89627f8708fa2beee61d" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the LottieAnimation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ec72f691cedce3f675dd46cf9e9937e861e5c0" translate="yes" xml:space="preserve">
          <source>The following example shows a small view onto a large image in which the user can drag or flick the image in order to view different parts of it.</source>
          <target state="translated">下面的例子显示了一个大图像上的小视图,用户可以拖动或轻弹图像以查看图像的不同部分。</target>
        </trans-unit>
        <trans-unit id="8f2a4e71f1ccd8626eaf5fc5b14150d5c438326b" translate="yes" xml:space="preserve">
          <source>The following example shows a valid authority string:</source>
          <target state="translated">下面的例子显示了一个有效的权限字符串。</target>
        </trans-unit>
        <trans-unit id="a2a6ab7cc66940b6c8eb13ba102a4e9339ff5a1f" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b798f1249e131b3ed48ec80f9c488a0458aef6" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="translated">以下示例显示了具有映射API 的&lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt;插件的实例化</target>
        </trans-unit>
        <trans-unit id="2c4621627939ad17a4d97d9a89959aa825e0142b" translate="yes" xml:space="preserve">
          <source>The following example shows an sequence that will be triggered by pressing the G, D, and J keys in that order with a maximum time between key presses of 1 second and overall maximum input time of 3 seconds.</source>
          <target state="translated">下面的例子显示了一个按G、D和J键的顺序触发的序列,按键之间的最长时间为1秒,整体最大输入时间为3秒。</target>
        </trans-unit>
        <trans-unit id="26f80249134ce7c7586cdfb578ccc9192ce07be8" translate="yes" xml:space="preserve">
          <source>The following example shows how a translation is obtained for the class shown in the previous section:</source>
          <target state="translated">下面的例子显示了如何获得上一节所示类的翻译。</target>
        </trans-unit>
        <trans-unit id="635a003629be3753abd2a9f44f4221e7c4586718" translate="yes" xml:space="preserve">
          <source>The following example shows how the general onPressed handler can be used to test for a certain key; in this case, the left cursor key:</source>
          <target state="translated">下面的示例显示了如何使用通用的onPressed处理程序来测试某个特定的键,在本例中,左光标键。</target>
        </trans-unit>
        <trans-unit id="5247005db1331dfb91ee0bc6e4fcd906b8a93bd0" translate="yes" xml:space="preserve">
          <source>The following example shows how the volume value from a UI volume control can be converted so that the perceived increase in loudness is the same when increasing the volume control from 0.2 to 0.3 as it is from 0.5 to 0.6:</source>
          <target state="translated">下面的例子显示了如何转换来自UI音量控制的音量值,以便在将音量控制从0.2增加到0.3时,感知到的响度增加与从0.5增加到0.6时是一样的。</target>
        </trans-unit>
        <trans-unit id="40a09f328ced922ccf3392016879abf01933b29a" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt; and print them to the console:</source>
          <target state="translated">以下示例显示如何访问所有&lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt;并将它们打印到控制台：</target>
        </trans-unit>
        <trans-unit id="fc227a757e94eb8762456b1d27f63af49693be1b" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt; and print them to the console:</source>
          <target state="translated">以下示例显示如何访问所有&lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt;并将它们打印到控制台：</target>
        </trans-unit>
        <trans-unit id="5413e88bcea080cf4e298a541c62b1a2064d5245" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the effect.</source>
          <target state="translated">下面的例子展示了如何应用该效果。</target>
        </trans-unit>
        <trans-unit id="ae840d84d69477cf08478ae7efb8502bd6e6200c" translate="yes" xml:space="preserve">
          <source>The following example shows how to assign and modify an attribute:</source>
          <target state="translated">下面的例子显示了如何分配和修改一个属性。</target>
        </trans-unit>
        <trans-unit id="28eaca1949f768a0601947b34299c6cb84d7d6f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to convert the volume value from a slider control before passing it to a &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;. As a result, the perceived increase in volume is the same when increasing the volume slider from 20 to 30 as it is from 50 to 60:</source>
          <target state="translated">下面的示例演示如何在将音量值传递到&lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;之前从滑块控件转换音量值。结果，当将音量滑块从20增加到30时（从50增加到60），感觉到的音量增加是相同的：</target>
        </trans-unit>
        <trans-unit id="d993d04f08f9f2d93d82ac20fbb675c7742c844c" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a custom Rectangle component, in which the color property always needs to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c516f3c8f4a099a97af91fc2aacc905748858c84" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a model from C++ with multiple columns:</source>
          <target state="translated">下面的例子展示了如何用C++创建一个多列的模型。</target>
        </trans-unit>
        <trans-unit id="3056b17baa68700189f119c2636a05704e1af4eb" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system tray icon, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;activated()&lt;/a&gt; signal:</source>
          <target state="translated">以下示例显示了如何创建系统任务栏图标以及如何使用&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;Activated（）&lt;/a&gt;信号：</target>
        </trans-unit>
        <trans-unit id="e6bf8c2f4e2e37ae0996d21e7258185d6cc0ff8d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an OSM plugin instance with parameters supplied for an useragent, and if necessary, a custom server url plus the corresponding copyright information for the tile provider. Additionally, it is possible to choose another routing server than the public osrm one.</source>
          <target state="translated">下面的例子展示了如何使用为用户代理提供的参数来创建一个OSM插件实例,如果需要的话,还需要一个自定义的服务器url加上相应的瓦片提供者的版权信息。此外,还可以选择公共osrm服务器以外的另一个路由服务器。</target>
        </trans-unit>
        <trans-unit id="2b62dc5ac03aedab89d662b46b331b3630f88864" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and display a supplier in QML:</source>
          <target state="translated">下面的例子显示了如何在QML中创建和显示一个供应商。</target>
        </trans-unit>
        <trans-unit id="2fc7495739a5a95d5cf16a0ee5b221f23f530a9c" translate="yes" xml:space="preserve">
          <source>The following example shows how to display a list of available cameras. The user can change the active camera by selecting one of the items in the list.</source>
          <target state="translated">下面的示例显示了如何显示可用摄像机的列表。用户可以通过选择列表中的一个项目来更改活动中的摄像机。</target>
        </trans-unit>
        <trans-unit id="16b34320057472b0dde8b3849d29b59e747a8488" translate="yes" xml:space="preserve">
          <source>The following example shows how to display all attributes in a list:</source>
          <target state="translated">下面的例子显示了如何在列表中显示所有属性。</target>
        </trans-unit>
        <trans-unit id="e5fbe76f534d0e808fe40a4ed2c5a32761df25d4" translate="yes" xml:space="preserve">
          <source>The following example shows how to display editorials for a place:</source>
          <target state="translated">下面的例子显示了如何显示一个地方的编辑。</target>
        </trans-unit>
        <trans-unit id="05fbaf0b8a86c660a68f2e0b43b08ac75af52676" translate="yes" xml:space="preserve">
          <source>The following example shows how to display images for a place:</source>
          <target state="translated">下面的例子显示了如何显示一个地方的图像。</target>
        </trans-unit>
        <trans-unit id="a642063a5cab284a1cd2f2e083c0d0076d92331b" translate="yes" xml:space="preserve">
          <source>The following example shows how to display information about the user who submitted an editorial:</source>
          <target state="translated">下面的例子显示了如何显示提交编辑的用户信息。</target>
        </trans-unit>
        <trans-unit id="0e44540662fff7cc82086313814519a43aa5a86d" translate="yes" xml:space="preserve">
          <source>The following example shows how to find a list of child &lt;code&gt;QWidget&lt;/code&gt;s of the specified &lt;code&gt;parentWidget&lt;/code&gt; named &lt;code&gt;widgetname&lt;/code&gt;:</source>
          <target state="translated">下面的示例演示如何找到的孩子名单 &lt;code&gt;QWidget&lt;/code&gt; 的指定第 &lt;code&gt;parentWidget&lt;/code&gt; 命名 &lt;code&gt;widgetname&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3bcccc6565c8fbfa3abbb910d5f043a0a604673c" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the volume on which the application is located. It is recommended to always check that the volume is ready and valid.</source>
          <target state="translated">下面的例子显示了如何获得应用程序所在的卷。建议始终检查该卷是否准备好并有效。</target>
        </trans-unit>
        <trans-unit id="d44a659e37217ad9e85507221d339e6551ae1663" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="translated">下面的示例演示如何从网络资源加载QML文件。创建&lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent后&lt;/a&gt;，它将测试组件是否正在加载。如果是，它将连接到&lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent :: statusChanged&lt;/a&gt;（）信号，否则直接调用 &lt;code&gt;continueLoading()&lt;/code&gt; 方法。请注意，如果网络组件已被缓存并立即就绪，则&lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent :: isLoading&lt;/a&gt;（）对于网络组件可能为false。</target>
        </trans-unit>
        <trans-unit id="2369875d7c086881917a795ee8d15667fceb9083" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the QQmlComponent, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a36bfcd7a4914761e42ed9ee809b00c63e2f6d2" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema file from the network and test whether it is a valid schema document:</source>
          <target state="translated">下面的例子展示了如何从网络中加载一个XML Schema文件,并测试它是否是一个有效的模式文档。</target>
        </trans-unit>
        <trans-unit id="073d2ff96ccfe9b01a399d4575a630092408ec64" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema from a local file, check whether it is a valid schema document and use it for validation of an XML instance document:</source>
          <target state="translated">下面的例子展示了如何从本地文件中加载一个XML Schema,检查它是否是一个有效的模式文档,并使用它来验证一个XML实例文档。</target>
        </trans-unit>
        <trans-unit id="3c5f311ecc00834b657e4e01f2eb021589723b0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to override the shortcut underline behavior on any platform:</source>
          <target state="translated">下面的例子显示了如何在任何平台上覆盖快捷方式下划线行为。</target>
        </trans-unit>
        <trans-unit id="846cedadc24d199bdd626e60799d16ba56c8b0ea" translate="yes" xml:space="preserve">
          <source>The following example shows how to set a simple &lt;code&gt;columnWidthProvider&lt;/code&gt; together with a timer that modifies the values the function returns. When the array is modified, &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt; is called to let the changes take effect:</source>
          <target state="translated">下面的示例演示如何设置简单的 &lt;code&gt;columnWidthProvider&lt;/code&gt; 以及用于修改函数返回值的计时器。修改数组后，将调用&lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt;以使更改生效：</target>
        </trans-unit>
        <trans-unit id="cc792c7de6358a0c1af7b1247bf6bd30b2de6e84" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="translated">下面的示例演示如何使用&lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;在给定位置附近搜索披萨餐厅。甲&lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;SEARCHTERM&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt;被提供给模型和&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;更新（）&lt;/a&gt;被用于执行一个查找查询。请注意，该模型不会以增量方式获取搜索结果，而是在运行&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update（）&lt;/a&gt;时执行一次获取。该&lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;计数&lt;/a&gt;被设置为在获取返回的搜索结果的数量。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
