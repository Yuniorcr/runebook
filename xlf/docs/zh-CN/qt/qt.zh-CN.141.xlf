<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="c2fcae4dcacd12ff5100719cb762cf063fbb85d2" translate="yes" xml:space="preserve">
          <source>Note: The QAndroidJniObject will hold a reference to the Java object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86db8b9ac04af938f965ba16f93089f22762f61" translate="yes" xml:space="preserve">
          <source>Note: The actual behaviour if an overflow occurs is driver specific. The Oracle database just returns an error in this case.</source>
          <target state="translated">注意:发生溢出时的实际行为是特定于驱动程序的。在这种情况下,Oracle数据库只是返回一个错误。</target>
        </trans-unit>
        <trans-unit id="0ab7b79e1f9a2ddec2fdb06eaa3b14f7b4328a47" translate="yes" xml:space="preserve">
          <source>Note: The empty (default) prefix is never included in this list; to check for the presence of a default namespace, call &lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt;() with &quot;&quot; as the argument.</source>
          <target state="translated">注意：此列表中永远不会包含空（默认）前缀；要检查是否存在默认名称空间，请使用&amp;ldquo;&amp;rdquo;作为参数调用&lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8e227f0adddcc229f5176586bedcb57ada68d250" translate="yes" xml:space="preserve">
          <source>Note: The maximum and minimum values will be rounded to match the decimals property.</source>
          <target state="translated">注意:最大和最小值将被四舍五入以匹配小数属性。</target>
        </trans-unit>
        <trans-unit id="47301e6c49ee57a0fee090e4d52e916169d7707c" translate="yes" xml:space="preserve">
          <source>Note: The maximum value will be rounded to match the decimals property.</source>
          <target state="translated">注:最大值将被四舍五入以匹配小数属性。</target>
        </trans-unit>
        <trans-unit id="5e7268ef6a20efb90b09064ed3f374023645a3f6" translate="yes" xml:space="preserve">
          <source>Note: The maximum, minimum and value might change as a result of changing this property.</source>
          <target state="translated">注:最大值、最小值和数值可能会因改变此属性而改变。</target>
        </trans-unit>
        <trans-unit id="dd4afcb854f418a9b88e824e9a6e9efb1fe757cb" translate="yes" xml:space="preserve">
          <source>Note: The minimum value will be rounded to match the decimals property.</source>
          <target state="translated">注:最小值将被四舍五入以匹配小数属性。</target>
        </trans-unit>
        <trans-unit id="1a1f5acb014e678d493d35fc841720eeb02fe4e3" translate="yes" xml:space="preserve">
          <source>Note: The native modifiers may be 0, even if the key event contains extended information.</source>
          <target state="translated">注意:即使键事件包含扩展信息,本机修饰符也可以为0。</target>
        </trans-unit>
        <trans-unit id="1eb8d2d5ec422275aec2de509bdada03cb2ad2b9" translate="yes" xml:space="preserve">
          <source>Note: The native scan code may be 0, even if the key event contains extended information.</source>
          <target state="translated">注意:即使密钥事件包含扩展信息,本机扫描码也可能为0。</target>
        </trans-unit>
        <trans-unit id="d10827b158d22b580bf59a846fee4e9a366a4261" translate="yes" xml:space="preserve">
          <source>Note: The native virtual key may be 0, even if the key event contains extended information.</source>
          <target state="translated">注意:即使密钥事件包含扩展信息,本机虚拟密钥也可能为0。</target>
        </trans-unit>
        <trans-unit id="907ba64e174a0575f21b9fa584b252518465f2c8" translate="yes" xml:space="preserve">
          <source>Note: The per-thread data stored is not deleted. Any data left in &lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt; is leaked. Make sure that all threads using &lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt; have exited before deleting the &lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt;.</source>
          <target state="translated">注意：不会删除按线程存储的数据。保留在&lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage中的&lt;/a&gt;所有数据都将泄漏。在删除&lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt;之前，请确保所有使用&lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage的&lt;/a&gt;线程都已退出。</target>
        </trans-unit>
        <trans-unit id="8299371722751a1e97afecc9d0d681bda59d4fd7" translate="yes" xml:space="preserve">
          <source>Note: The returned &lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; object cannot be used from another thread.</source>
          <target state="translated">注意：返回的&lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt;对象不能在另一个线程中使用。</target>
        </trans-unit>
        <trans-unit id="3b353eb316210c871c2ffd9eb2e9b96e804de2e0" translate="yes" xml:space="preserve">
          <source>Note: The table's primary key may not contain a relation to another table.</source>
          <target state="translated">注意:表的主键可能不包含与另一个表的关系。</target>
        </trans-unit>
        <trans-unit id="3840dc20cfd5fdc07ea5d746ae2f42e58bf0d0e3" translate="yes" xml:space="preserve">
          <source>Note: The use of &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;() and &lt;a href=&quot;qdir#Q_CLEANUP_RESOURCE&quot;&gt;Q_CLEANUP_RESOURCE&lt;/a&gt;() is not necessary when the resource is built as part of the application.</source>
          <target state="translated">注意：当资源作为应用程序的一部分构建时，不需要使用&lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;（）和&lt;a href=&quot;qdir#Q_CLEANUP_RESOURCE&quot;&gt;Q_CLEANUP_RESOURCE&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ec2f1091c5560a3634fa246cf7b1ce10e45a51be" translate="yes" xml:space="preserve">
          <source>Note: The value will be rounded so it can be displayed with the current setting of decimals.</source>
          <target state="translated">注:该值将被四舍五入,因此可以用当前设置的小数显示。</target>
        </trans-unit>
        <trans-unit id="5231075cd422ce6151d27df74d445e82000bbb1a" translate="yes" xml:space="preserve">
          <source>Note: There are different date formats with different understandings of negative years. Common human language does not have a year 0. The year after 1BC is 1AD. This understanding is reflected when printing or parsing dates in one of the formats not standardized by ECMAScript. That is: toString(), &lt;a href=&quot;qml-qtqml-date#toLocaleString-method&quot;&gt;toLocaleString()&lt;/a&gt;, toUTCString() and friends. ECMAScript does standardize one format: ISO 8601. This is what you get when you call toISOString(). This format does include a year 0, which is 1BC in other formats. Thus you get different years when printing negative dates with toISOString() and toString().</source>
          <target state="translated">注意：有不同的日期格式，对负年有不同的理解。通用人类语言没有年份0。1BC之后的年份是1AD。当以ECMAScript未标准化的格式之一打印或解析日期时，会反映出这种理解。即：toString（），&lt;a href=&quot;qml-qtqml-date#toLocaleString-method&quot;&gt;toLocaleString（）&lt;/a&gt;，toUTCString（）和朋友。 ECMAScript确实标准化了一种格式：ISO8601。这是在调用toISOString（）时所得到的。此格式确实包含年份0，其他格式为1BC。因此，使用toISOString（）和toString（）打印否定日期时，会得到不同的年份。</target>
        </trans-unit>
        <trans-unit id="4e7cfff4dd81ab1993ad11501200382a59be3a1c" translate="yes" xml:space="preserve">
          <source>Note: There is no way for the view to know that the contents of a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; has changed. If the &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; changes, it is necessary to reset the model by calling &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;() again.</source>
          <target state="translated">注意：视图无法知道&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;的内容已更改。如果&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;更改，则必须通过再次调用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt;（）来重置模型。</target>
        </trans-unit>
        <trans-unit id="97feade5825fbdbeff72e97cf8288957cdc5678f" translate="yes" xml:space="preserve">
          <source>Note: This function can be called anytime before &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(), calls to this are ignored after &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(). It should not be assumed that the buffer size set is the actual buffer size used, calling &lt;a href=&quot;qaudioinput#bufferSize&quot;&gt;bufferSize&lt;/a&gt;() anytime after &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;() will return the actual buffer size being used.</source>
          <target state="translated">注：此功能可以随时叫之前&lt;a href=&quot;qaudioinput#start-1&quot;&gt;开始&lt;/a&gt;（），这个呼叫后忽略&lt;a href=&quot;qaudioinput#start-1&quot;&gt;启动&lt;/a&gt;（）。不应假定缓冲区大小集是使用的实际缓冲区大小，在&lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;（）之后的任何时候调用&lt;a href=&quot;qaudioinput#bufferSize&quot;&gt;bufferSize&lt;/a&gt;（）都会返回正在使用的实际缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="eb4ccaa0bae3191f3c09c1335517de218b6fb82c" translate="yes" xml:space="preserve">
          <source>Note: This function is not reentrant, only one test can run at a time. A test that was executed with qExec() can't run another test via qExec() and threads are not allowed to call qExec() simultaneously.</source>
          <target state="translated">注意:此函数不重入,一次只能运行一个测试。一个用qExec()执行的测试不能通过qExec()运行另一个测试,线程也不允许同时调用qExec()。</target>
        </trans-unit>
        <trans-unit id="f30873e34cf4608d4535f9d1f95d913d3a97ae7c" translate="yes" xml:space="preserve">
          <source>Note: This function returns true even if the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that this &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; wraps has been deleted.</source>
          <target state="translated">注意：即使已删除此&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;包装的&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;，此函数也会返回true 。</target>
        </trans-unit>
        <trans-unit id="7165b39115966b2b555efbbb37e2bec9cb2a0687" translate="yes" xml:space="preserve">
          <source>Note: This is not intended to prevent overwriting of items. The model's implementation of flags() should do that by not returning &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsDropEnabled&lt;/a&gt;.</source>
          <target state="translated">注意：这并不是要防止项目被覆盖。模型的flags（）的实现应通过不返回&lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsDropEnabled来实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="080c7cf7c251021d23858c561c9e995b1d687906" translate="yes" xml:space="preserve">
          <source>Note: This is platform specific</source>
          <target state="translated">注:这是平台特有的</target>
        </trans-unit>
        <trans-unit id="e901b4e31ede36978c043da18eac84ec3d00d209" translate="yes" xml:space="preserve">
          <source>Note: This is the recommended read size in bytes.</source>
          <target state="translated">注:这是建议的读取大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="eb95e5137414e58398235720b280de0af028b4ba" translate="yes" xml:space="preserve">
          <source>Note: This macro cannot be used in a namespace. It should be called from main(). If that is not possible, the following workaround can be used to init the resource &lt;code&gt;myapp&lt;/code&gt; from the function &lt;code&gt;MyNamespace::myFunction&lt;/code&gt;:</source>
          <target state="translated">注意：此宏不能在名称空间中使用。应该从main（）调用它。如果这不可能，则可以使用以下解决方法从函数 &lt;code&gt;MyNamespace::myFunction&lt;/code&gt; 初始化资源 &lt;code&gt;myapp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="50494017012c56e4e4ab7a8894682a95d9e9590d" translate="yes" xml:space="preserve">
          <source>Note: This macro cannot be used in a namespace. Please see the &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt; documentation for a workaround.</source>
          <target state="translated">注意：此宏不能在名称空间中使用。请参阅&lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;文档以获取解决方法。</target>
        </trans-unit>
        <trans-unit id="f83db0c7f230e3d8ae99d9afba3bb1040e862518" translate="yes" xml:space="preserve">
          <source>Note: This method should have been called &quot;safePrepare()&quot;.</source>
          <target state="translated">注意:这个方法应该叫做 &quot;safePrepare()&quot;。</target>
        </trans-unit>
        <trans-unit id="ee0c7780e8b10d097a2d5158c34d5954a87f3561" translate="yes" xml:space="preserve">
          <source>Note: This property makes most sense for sliders and dials. For scroll bars, the visual effect of the scroll bar subcontrols depends on whether or not the styles understand inverted appearance; most styles ignore this property for scroll bars.</source>
          <target state="translated">注意:这个属性对滑块和转盘最有意义。对于滚动条,滚动条子控件的视觉效果取决于样式是否理解倒置外观;大多数样式忽略滚动条的这个属性。</target>
        </trans-unit>
        <trans-unit id="f919932338ca62061eae222d54e731bb1bcd6e84" translate="yes" xml:space="preserve">
          <source>Note: This signal will still be emitted in a case where part of the text is accepted but not all of it is. For example, if there is a maximum length set and the clipboard text is longer than the maximum length when it is pasted.</source>
          <target state="translated">注意:在部分文本被接受而非全部文本被接受的情况下,该信号仍然会发出。例如,如果设置了最大长度,而剪贴板上的文字在粘贴时超过了最大长度。</target>
        </trans-unit>
        <trans-unit id="1e882cd8a54a25ea565a9e033d4b6a5c0da2f550" translate="yes" xml:space="preserve">
          <source>Note: To prevent inserting only partly initialized rows into the database, &lt;code&gt;OnFieldChange&lt;/code&gt; will behave like &lt;code&gt;OnRowChange&lt;/code&gt; for newly inserted rows.</source>
          <target state="translated">注意：为了防止仅将部分初始化的行插入数据库，对于新插入的行， &lt;code&gt;OnFieldChange&lt;/code&gt; 的行为类似于 &lt;code&gt;OnRowChange&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd6b357731ba6aaa973da2813d4a32eb08e989e0" translate="yes" xml:space="preserve">
          <source>Note: Unlike the &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;, the Canvas API uses the winding fill as the default fill rule. The fillRule property is part of the context rendering state.</source>
          <target state="translated">注意：与&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;不同，Canvas API使用绕组填充作为默认填充规则。 fillRule属性是上下文呈现状态的一部分。</target>
        </trans-unit>
        <trans-unit id="ca99011da016b46a9b5232cf15f94cf491807369" translate="yes" xml:space="preserve">
          <source>Note: Using the locale-aware functions to perform date or time formatting can result in incorrectly formatted times, due to an inconsistency in specification between Qt and JS. ECMA-262 specifies that historical dates should be intrepreted by projecting the current rules for daylight-saving onto past years, while Qt uses historical data (where available) to determine whether daylight-saving was in effect for a given date. Therefore, constructing a Date value in JS and converting it to a string using the locale-aware functions can yield a result incorrect by one hour, if DST is currently in effect, while it was not for the time specified, or vice versa.</source>
          <target state="translated">注意:由于Qt和JS之间的规范不一致,使用本地感知功能来执行日期或时间格式化可能会导致错误的时间格式化。ECMA-262规定,历史日期应该通过将当前的夏令时规则投射到过去的年份来解释,而Qt则使用历史数据(如果有的话)来确定某个日期是否有夏令时。因此,在JS中构建一个Date值,并使用本地感知函数将其转换为字符串,如果DST当前有效,而指定的时间没有生效,则结果可能会错误一个小时,反之亦然。</target>
        </trans-unit>
        <trans-unit id="862dcd96643b4ef94796f1175f6a5ce36da56b6a" translate="yes" xml:space="preserve">
          <source>Note: You should use &lt;a href=&quot;qaction#visible-prop&quot;&gt;QAction::setVisible&lt;/a&gt;() to change the visibility of the widget. Using &lt;a href=&quot;qwidget#visible-prop&quot;&gt;QWidget::setVisible&lt;/a&gt;(), &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() and &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget::hide&lt;/a&gt;() does not work.</source>
          <target state="translated">注意：您应该使用&lt;a href=&quot;qaction#visible-prop&quot;&gt;QAction :: setVisible&lt;/a&gt;（）更改小部件的可见性。使用&lt;a href=&quot;qwidget#visible-prop&quot;&gt;QWidget :: setVisible&lt;/a&gt;（），&lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt;（）和&lt;a href=&quot;qwidget#hide&quot;&gt;QWidget :: hide&lt;/a&gt;（）无效。</target>
        </trans-unit>
        <trans-unit id="f9d24af9fea6d8bc9655c52b9af0f055a644bd7f" translate="yes" xml:space="preserve">
          <source>Note: as of Qt 5.14, change messages are deprecated and should not be used, in particular for properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b923e4c210c7f9aaed196d6d6837c7d0e73a22" translate="yes" xml:space="preserve">
          <source>Note: because C++ transforms \'s they must be written</source>
          <target state="translated">注意:因为C++转换了\'s,它们必须写成</target>
        </trans-unit>
        <trans-unit id="68e1985ed0edc769c4c732a0346fbdd01601ce55" translate="yes" xml:space="preserve">
          <source>Note: calling this method will force painting the whole canvas, not just the current canvas visible window.</source>
          <target state="translated">注意:调用此方法将强制绘制整个画布,而不仅仅是当前画布可见窗口。</target>
        </trans-unit>
        <trans-unit id="ac849d8583ef5be2d44dfa3ef506e19e3b6eef7f" translate="yes" xml:space="preserve">
          <source>Note: components derived from &lt;a href=&quot;qml-qt3d-render-abstractraycaster&quot;&gt;AbstractRayCaster&lt;/a&gt; should not be shared amount multiple entities.</source>
          <target state="translated">注意：不应将派生自&lt;a href=&quot;qml-qt3d-render-abstractraycaster&quot;&gt;AbstractRayCaster的&lt;/a&gt;组件共享多个实体。</target>
        </trans-unit>
        <trans-unit id="04e9883e0f84b55da215fdacdd20e38639cb210a" translate="yes" xml:space="preserve">
          <source>Note: components derived from AbstractRayCaster should not be shared amount multiple entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a402f2f8e3f820595297f1a03a1b19f79e568af" translate="yes" xml:space="preserve">
          <source>Note: do not delete the pointer returned by this function or pass it to another function that could delete it, including creating &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; or &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects.</source>
          <target state="translated">注意：请勿删除此函数返回的指针或将其传递给可能删除它的另一个函数，包括创建&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;或&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="52c2b4ac15d8b9b4a612f76f51386d8066e7c7b1" translate="yes" xml:space="preserve">
          <source>Note: do not subclass &lt;a href=&quot;qdbuscontext&quot;&gt;QDBusContext&lt;/a&gt; and &lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt; at the same time. &lt;a href=&quot;qdbuscontext&quot;&gt;QDBusContext&lt;/a&gt; should appear in the real object, not the adaptor. If it's necessary from the adaptor code to determine the context, use a public inheritance and access the functions via &lt;a href=&quot;qobject#parent&quot;&gt;QObject::parent&lt;/a&gt;().</source>
          <target state="translated">注意：不要同时子类化&lt;a href=&quot;qdbuscontext&quot;&gt;QDBusContext&lt;/a&gt;和&lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt;。&lt;a href=&quot;qdbuscontext&quot;&gt;QDBusContext&lt;/a&gt;应该出现在实际对象中，而不是适配器中。如果有必要从适配器代码确定上下文，请使用公共继承并通过&lt;a href=&quot;qobject#parent&quot;&gt;QObject :: parent&lt;/a&gt;（）访问函数。</target>
        </trans-unit>
        <trans-unit id="370e9e16faf64767f2448b9344b1a33a15eb34d4" translate="yes" xml:space="preserve">
          <source>Note: do not subclass QDBusContext and &lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt; at the same time. QDBusContext should appear in the real object, not the adaptor. If it's necessary from the adaptor code to determine the context, use a public inheritance and access the functions via &lt;a href=&quot;qobject#parent&quot;&gt;QObject::parent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b265356b6831e6a9e72c3cdb38e5b285251f0d57" translate="yes" xml:space="preserve">
          <source>Note: if &lt;a href=&quot;qprocess#setProcessChannelMode&quot;&gt;setProcessChannelMode&lt;/a&gt;() was called with an argument of &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess::MergedChannels&lt;/a&gt;, this function has no effect.</source>
          <target state="translated">注意：如果使用&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess :: MergedChannels&lt;/a&gt;的参数调用&lt;a href=&quot;qprocess#setProcessChannelMode&quot;&gt;setProcessChannelMode&lt;/a&gt;（），则此功能无效。</target>
        </trans-unit>
        <trans-unit id="ff6c801fb5ecd2c86ff89caf02a8dc54b4757713" translate="yes" xml:space="preserve">
          <source>Note: if the path component of this URL contains a non-UTF-8 binary sequence (such as %80), the behaviour of this function is undefined.</source>
          <target state="translated">注意:如果这个URL的路径成分包含一个非UTF-8的二进制序列(比如%80),这个函数的行为是未定义的。</target>
        </trans-unit>
        <trans-unit id="f61abd2e1b79ab02fae5fe0ef0b76f6dc36d1779" translate="yes" xml:space="preserve">
          <source>Note: returned value is only valid while in &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::ActiveState&lt;/a&gt; or &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::IdleState&lt;/a&gt; state, otherwise returns zero.</source>
          <target state="translated">注意：返回值仅在&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: ActiveState&lt;/a&gt;或&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: IdleState&lt;/a&gt;状态下有效，否则返回零。</target>
        </trans-unit>
        <trans-unit id="1b7d3e3f2e581cfd40fa99cf21129360424a976e" translate="yes" xml:space="preserve">
          <source>Note: setting the drag cursor for IgnoreAction may not work on all platforms. X11 and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; has been tested to work. Windows does not support it.</source>
          <target state="translated">注意：为IgnoreAction设置拖动光标可能不适用于所有平台。X11和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;已经过测试工作。Windows不支持它。</target>
        </trans-unit>
        <trans-unit id="5495738edada8af98c914ad646124a067e71c061" translate="yes" xml:space="preserve">
          <source>Note: setting the drag cursor for IgnoreAction may not work on all platforms. X11 and macOS has been tested to work. Windows does not support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f915849c9d13bb240cbebb2628a205376dcb32a1" translate="yes" xml:space="preserve">
          <source>Note: the &lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt::YAxis&lt;/a&gt; rotation for &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; is inverted from the correct mathematical rotation in 3D space. The &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt; class implements a correct mathematical rotation. The following two sequences of code will perform the same transformation:</source>
          <target state="translated">注：&lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt的:: Y轴&lt;/a&gt;旋转&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;从在三维空间中正确的数学旋转倒置。该&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;类实现了一个正确的数学旋转。以下两个代码序列将执行相同的转换：</target>
        </trans-unit>
        <trans-unit id="a4fa48ad1e947bc059c3be6c49b0537fe933921d" translate="yes" xml:space="preserve">
          <source>Note: the coordinates will be used for every available render surface as long as they are in the valid range.</source>
          <target state="translated">注意:坐标将用于每个可用的渲染面,只要它们在有效范围内。</target>
        </trans-unit>
        <trans-unit id="76e45982cb3ecdf2cf3c580a6a13f2bd7e245b20" translate="yes" xml:space="preserve">
          <source>Note: the final rotation is the combined effect of a rotation in 3D space followed by a projection back to 2D. If several rotations are performed in succession, they will not behave as expected unless they were all around the Z axis.</source>
          <target state="translated">注:最后的旋转是在三维空间中旋转后再投影回二维空间的综合效果。如果连续进行了几次旋转,除非它们都是围绕Z轴进行的,否则将不会有预期的表现。</target>
        </trans-unit>
        <trans-unit id="65876d2ebdc6e5f946603197c0f002209a34cb54" translate="yes" xml:space="preserve">
          <source>Note: the string is not translated. Applications whose interface allow users to parse CBOR streams need to provide their own, translated strings.</source>
          <target state="translated">注意:该字符串没有被翻译。如果应用程序的界面允许用户解析CBOR流,则需要提供他们自己的、经过翻译的字符串。</target>
        </trans-unit>
        <trans-unit id="da29b558e382c1e29c7dacdb12ab54b89d89cfaf" translate="yes" xml:space="preserve">
          <source>Note: the template type &lt;code&gt;X&lt;/code&gt; must have the same const and volatile qualifiers as the template of this object, or the cast will fail. Use &lt;a href=&quot;qsharedpointer#constCast&quot;&gt;constCast&lt;/a&gt;() if you need to drop those qualifiers.</source>
          <target state="translated">注意：模板类型 &lt;code&gt;X&lt;/code&gt; 必须与此对象的模板具有相同的const和volatile限定符，否则转换将失败。如果需要删除这些限定符，请使用&lt;a href=&quot;qsharedpointer#constCast&quot;&gt;constCast&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="26ce4a9840bd1302d0e81dffaf937801009bb77a" translate="yes" xml:space="preserve">
          <source>Note: there will always be an &lt;a href=&quot;qml-qtaudioengine-audiocategory&quot;&gt;AudioCategory&lt;/a&gt; named &lt;code&gt;default&lt;/code&gt; whether you explicitly define it or not. If you do not specify any category for a &lt;a href=&quot;qml-qtaudioengine-sound&quot;&gt;Sound&lt;/a&gt;, it will be grouped into the &lt;code&gt;default&lt;/code&gt; category.</source>
          <target state="translated">注意：无论是否明确定义，始终会有一个名为 &lt;code&gt;default&lt;/code&gt; 的&lt;a href=&quot;qml-qtaudioengine-audiocategory&quot;&gt;AudioCategory&lt;/a&gt;。如果您未为&lt;a href=&quot;qml-qtaudioengine-sound&quot;&gt;Sound&lt;/a&gt;指定任何类别，它将被分组为 &lt;code&gt;default&lt;/code&gt; 类别。</target>
        </trans-unit>
        <trans-unit id="928f7923179b4eba4c5a07b088fb28d93c48610a" translate="yes" xml:space="preserve">
          <source>Note: there will always be an AudioCategory named &lt;code&gt;default&lt;/code&gt; whether you explicitly define it or not. If you do not specify any category for a &lt;a href=&quot;qml-qtaudioengine-sound&quot;&gt;Sound&lt;/a&gt;, it will be grouped into the &lt;code&gt;default&lt;/code&gt; category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c305bdfff93445e8350fe38014a65da155a61aeb" translate="yes" xml:space="preserve">
          <source>Note: this constructor just creates the &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; instance. The actual buffer object in the OpenGL server is not created until &lt;a href=&quot;qopenglbuffer#create&quot;&gt;create&lt;/a&gt;() is called.</source>
          <target state="translated">注意：此构造函数仅创建&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;实例。在调用&lt;a href=&quot;qopenglbuffer#create&quot;&gt;create&lt;/a&gt;（）之前，不会创建OpenGL服务器中的实际缓冲区对象。</target>
        </trans-unit>
        <trans-unit id="825e0d321663e7aec105ece0641d433a267bb9d7" translate="yes" xml:space="preserve">
          <source>Note: this constructor just creates the QOpenGLBuffer instance. The actual buffer object in the OpenGL server is not created until &lt;a href=&quot;qopenglbuffer#create&quot;&gt;create&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8404a546af066ec1dcae4433df2a21d1b5b1bf4b" translate="yes" xml:space="preserve">
          <source>Note: this function is meant for removing a small application-internal directory (such as a temporary directory), but not user-visible directories. For user-visible operations, it is rather recommended to report errors more precisely to the user, to offer solutions in case of errors, to show progress during the deletion since it could take several minutes, etc.</source>
          <target state="translated">注意:这个功能是为了删除一个小的应用程序内部目录(如临时目录),但不是用户可见的目录。对于用户可见的操作,建议更精确地向用户报告错误,在出现错误时提供解决方案,并在删除过程中显示进度,因为可能需要几分钟时间等。</target>
        </trans-unit>
        <trans-unit id="6653079f1063115d641ace31d88de930c5be9ed8" translate="yes" xml:space="preserve">
          <source>Note: this function was part of Qt 3 support in Qt 4.6 and earlier. It has been promoted to official API status in 4.7 to support updating the pixmap's image without creating a new &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; as &lt;a href=&quot;qpixmap#fromImage&quot;&gt;fromImage&lt;/a&gt;() would.</source>
          <target state="translated">注意：此功能是Qt 4.6及更早版本中Qt 3支持的一部分。它已在4.7中提升为官方API状态，以支持更新pixmap的图像而无需像&lt;a href=&quot;qpixmap#fromImage&quot;&gt;fromImage&lt;/a&gt;（）那样创建新的&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f678a24fcf808a6ae45cd174af7bd26f1c80475" translate="yes" xml:space="preserve">
          <source>Note: this is not the same as the &lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;() of</source>
          <target state="translated">注意：这与的&lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;（）不同</target>
        </trans-unit>
        <trans-unit id="b6f6e924b699f7006065e1ff6b3e043c83dc9052" translate="yes" xml:space="preserve">
          <source>Note: this is not the same as the &lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;() of this vector and</source>
          <target state="translated">注意：这与此向量的&lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;（）不同，并且</target>
        </trans-unit>
        <trans-unit id="32a63c72a58db3c866295ae3e78a540e25076793" translate="yes" xml:space="preserve">
          <source>Note: this method may be called by multiple threads, so ensure the implementation of this method is reentrant.</source>
          <target state="translated">注意:本方法可能会被多个线程调用,所以要保证本方法的实现是重入式的。</target>
        </trans-unit>
        <trans-unit id="14272495586217615cc25adeab4b04ae9a865953" translate="yes" xml:space="preserve">
          <source>Note: this method returns true only for elements that can be rendered. Which implies that elements that are considered part of the fill/stroke style properties, e.g. radialGradients even tough marked with &quot;id&quot; attributes will not be found by this method.</source>
          <target state="translated">注意:本方法只对可以渲染的元素返回true,这意味着被认为是填充/描边样式属性的一部分的元素,如radialGradients甚至是带有 &quot;id &quot;属性的强硬标记,将不会被本方法发现。这意味着被认为是填充/描边样式属性的一部分的元素,例如radialGradients,即使是带有 &quot;id &quot;属性的强硬标记,也不会被该方法找到。</target>
        </trans-unit>
        <trans-unit id="d2df7ff48333ab0e5ac40d21cc942342ad585da5" translate="yes" xml:space="preserve">
          <source>Note: this property's changed() signal is currently emitted only if the whole object changes, not if only the contents of the object change.</source>
          <target state="translated">注意:该属性的changed()信号目前只在整个对象发生变化时才会发出,而不是只在对象的内容发生变化时才会发出。</target>
        </trans-unit>
        <trans-unit id="7a0b92f2bf074539fdba05ade552b7bd53ca85ff" translate="yes" xml:space="preserve">
          <source>Note: to check for a default prefix, use the &lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt;() function with an argument of &quot;&quot;.</source>
          <target state="translated">注意：要检查默认前缀，请使用&lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt;（）函数，参数为&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="14ec88f8d6a68fdf9b6f6991bc8d60e334c60463" translate="yes" xml:space="preserve">
          <source>Note: when dealing with remote objects, it is not always possible to determine if it exists when creating a &lt;a href=&quot;qdbusinterface&quot;&gt;QDBusInterface&lt;/a&gt;.</source>
          <target state="translated">注意：在处理远程对象时，在创建&lt;a href=&quot;qdbusinterface&quot;&gt;QDBusInterface&lt;/a&gt;时并不总是能够确定它是否存在。</target>
        </trans-unit>
        <trans-unit id="2d608877188f5242e67358cea581b38a5a3bfa95" translate="yes" xml:space="preserve">
          <source>Note:An animation controlled by &lt;a href=&quot;qml-qtquick-animationcontroller&quot;&gt;AnimationController&lt;/a&gt; will always have its &lt;code&gt;running&lt;/code&gt; and &lt;code&gt;paused&lt;/code&gt; properties set to true. It can not be manually started or stopped (much like an animation in a Behavior can not be manually started or stopped).</source>
          <target state="translated">注意：由&lt;a href=&quot;qml-qtquick-animationcontroller&quot;&gt;AnimationController&lt;/a&gt;控制的动画将始终将其 &lt;code&gt;running&lt;/code&gt; 和 &lt;code&gt;paused&lt;/code&gt; 属性设置为true。它不能手动启动或停止（就像不能手动启动或停止行为中的动画一样）。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="b374c1b47330d231078bb4413a030c5c6e9f5525" translate="yes" xml:space="preserve">
          <source>Notes for Perl Users</source>
          <target state="translated">Perl用户须知</target>
        </trans-unit>
        <trans-unit id="4154d75f46826d0d055fd5241282b19935616711" translate="yes" xml:space="preserve">
          <source>Notes for QRegExp Users</source>
          <target state="translated">QRegExp用户须知</target>
        </trans-unit>
        <trans-unit id="932b4cd8d94de09811f785619b04c9d56612ff6d" translate="yes" xml:space="preserve">
          <source>Notes for Universal Windows Platform Users</source>
          <target state="translated">通用Windows平台用户须知</target>
        </trans-unit>
        <trans-unit id="9128e4dc19fdcbce3767684f6724986d863634bf" translate="yes" xml:space="preserve">
          <source>Notes for Windows Users</source>
          <target state="translated">Windows用户须知</target>
        </trans-unit>
        <trans-unit id="f8065561874bdf8cf5ca3acfd4a06a024ed512b7" translate="yes" xml:space="preserve">
          <source>Notes for Windows and macOS Users</source>
          <target state="translated">Windows和macOS用户须知</target>
        </trans-unit>
        <trans-unit id="15e123abf3898680713e4321c628318d06dc6f4e" translate="yes" xml:space="preserve">
          <source>Notes for X11 Users</source>
          <target state="translated">X11用户须知</target>
        </trans-unit>
        <trans-unit id="f5895a8c3ecb8567fef9e814c81890589257c61a" translate="yes" xml:space="preserve">
          <source>Notes for macOS Users</source>
          <target state="translated">macOS用户须知</target>
        </trans-unit>
        <trans-unit id="2b580f8081df45d58ecf613f9b4e7ae11540fec7" translate="yes" xml:space="preserve">
          <source>Notes on Locale</source>
          <target state="translated">关于地域的说明</target>
        </trans-unit>
        <trans-unit id="f038ea8701df29241a73c1e6e1de3fee1570e938" translate="yes" xml:space="preserve">
          <source>Notes on Possible Issues</source>
          <target state="translated">关于可能存在的问题的说明</target>
        </trans-unit>
        <trans-unit id="171ac5a3205710042a8cbb0da69a3c49668788cb" translate="yes" xml:space="preserve">
          <source>Notes on Qt Classes</source>
          <target state="translated">Qt类笔记</target>
        </trans-unit>
        <trans-unit id="74d47d24cb761b24134a09fda747ebc80ed57f58" translate="yes" xml:space="preserve">
          <source>Notes on Use of Notify Signals</source>
          <target state="translated">通知信号的使用注意事项</target>
        </trans-unit>
        <trans-unit id="026124a1f897d289b0c34a8914fc074da1fea84b" translate="yes" xml:space="preserve">
          <source>Notes on the &lt;code&gt;domXml()&lt;/code&gt; Function</source>
          <target state="translated">关于 &lt;code&gt;domXml()&lt;/code&gt; 函数的注释</target>
        </trans-unit>
        <trans-unit id="15a36c675a3fd9923d39fae085bf5c897edc8d7d" translate="yes" xml:space="preserve">
          <source>Notes to Desktop Users</source>
          <target state="translated">桌面用户须知</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="4481948392a8846400c954e77f58d76cdaa73963" translate="yes" xml:space="preserve">
          <source>Nothing</source>
          <target state="translated">Nothing</target>
        </trans-unit>
        <trans-unit id="b0aa33f02aefe3d763eef2da98aa3d318eb7e0ef" translate="yes" xml:space="preserve">
          <source>Nothing done yet.</source>
          <target state="translated">还没有做什么。</target>
        </trans-unit>
        <trans-unit id="87bf71867fcaeaada1d0e2d72f0b00dce542f8de" translate="yes" xml:space="preserve">
          <source>Nothing happens; the mouse event is ignored.</source>
          <target state="translated">什么都不会发生;鼠标事件被忽略。</target>
        </trans-unit>
        <trans-unit id="c7ec4abc840bf0e4b54c1deb9d38f9a5936d7d35" translate="yes" xml:space="preserve">
          <source>Notice how the default value is now specified in the persistent setting property, and the actual property is bound to the setting in order to get the initial value from the persistent settings.</source>
          <target state="translated">请注意,现在如何在持久化设置属性中指定默认值,并且实际属性与设置绑定,以便从持久化设置中获得初始值。</target>
        </trans-unit>
        <trans-unit id="dfe1917f18e5b26391344899687c6a1b328679d1" translate="yes" xml:space="preserve">
          <source>Notice how the sizes of the page items are set by hand. This is because the example uses a plain Container, which does not make any assumptions on the visual layout. It is typically not necessary to specify sizes for items in concrete Container implementations, such as &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfeb5f715ee7224660bc8e6fae8823708d439b7" translate="yes" xml:space="preserve">
          <source>Notice how the sizes of the page items are set by hand. This is because the example uses a plain Container, which does not make any assumptions on the visual layout. It is typically not necessary to specify sizes for items in concrete Container implementations, such as &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt; and &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;.</source>
          <target state="translated">请注意如何手动设置页面项目的大小。这是因为该示例使用一个普通的Container，该容器对视觉布局没有任何假设。通常不需要为具体Container实现中的项目指定尺寸，例如&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;和&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="051a8a4207d6e90badc250ab22ffb86723eeffe8" translate="yes" xml:space="preserve">
          <source>Notice how the the rounded corners keep their original size, as they are outside the range of the lines.</source>
          <target state="translated">请注意圆角如何保持原来的大小,因为它们在线条的范围之外。</target>
        </trans-unit>
        <trans-unit id="fffb1c32cd0d20c8c8d313553b42beb83ae4b4e7" translate="yes" xml:space="preserve">
          <source>Notice in both instances, &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; is called with &lt;code&gt;appWindow&lt;/code&gt; passed as the parent argument, since the dynamically created object is a visual (Qt Quick) object. The created object will become a child of the &lt;code&gt;appWindow&lt;/code&gt; object in &lt;code&gt;main.qml&lt;/code&gt;, and appear in the scene.</source>
          <target state="translated">请注意，在这两种情况下，由于动态创建的对象是可视（Qt Quick）对象， &lt;code&gt;appWindow&lt;/code&gt; 将createWindow &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;（）&lt;/a&gt;与作为父参数传递的appWindow一起调用。创建的对象将成为一个孩子 &lt;code&gt;appWindow&lt;/code&gt; 在对象 &lt;code&gt;main.qml&lt;/code&gt; ，并出现在现场。</target>
        </trans-unit>
        <trans-unit id="4cfb568e49b2c6b28b42072911eaf9c2e06d4e5f" translate="yes" xml:space="preserve">
          <source>Notice in the example above that unhandled events are passed to the base class's eventFilter() function, since the base class might have reimplemented eventFilter() for its own internal purposes.</source>
          <target state="translated">请注意,在上面的例子中,未处理的事件被传递给基类的eventFilter()函数,因为基类可能已经为自己的内部目的重新实现了eventFilter()。</target>
        </trans-unit>
        <trans-unit id="6f333808bd82420a615128b3e13ffe515c8a7857" translate="yes" xml:space="preserve">
          <source>Notice that</source>
          <target state="translated">请注意</target>
        </trans-unit>
        <trans-unit id="e516ae82234af9c4d594398e5101f9fea96882a3" translate="yes" xml:space="preserve">
          <source>Notice that &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; does not filter key events of the Flickable it is attached to. The following example illustrates how to implement scrolling with up and down keys:</source>
          <target state="translated">请注意，&lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;不会过滤附加到其的Flickable的键事件。以下示例说明了如何使用向上和向下键实现滚动：</target>
        </trans-unit>
        <trans-unit id="799db98bca2028bd15e94d904f94e3883d961f62" translate="yes" xml:space="preserve">
          <source>Notice that ScrollBar does not filter key events of the Flickable it is attached to. The following example illustrates how to implement scrolling with up and down keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921aed1c6a8c5d44ea24b7d50d64e99e10cb52f9" translate="yes" xml:space="preserve">
          <source>Notice that a URL can be absolute while containing a relative path, and vice versa:</source>
          <target state="translated">请注意,一个URL可以是绝对的,同时包含一个相对的路径,反之亦然。</target>
        </trans-unit>
        <trans-unit id="ef9dfb8cebce27b2d7a89f4af6c3697a06cceef2" translate="yes" xml:space="preserve">
          <source>Notice that all painter settings (&lt;a href=&quot;qpainter#setPen&quot;&gt;setPen&lt;/a&gt;(), &lt;a href=&quot;qpainter#setBrush&quot;&gt;setBrush&lt;/a&gt;() etc.) are reset to default values when begin() is called.</source>
          <target state="translated">请注意，在调用begin（）时，所有绘画工具设置（&lt;a href=&quot;qpainter#setPen&quot;&gt;setPen&lt;/a&gt;（），&lt;a href=&quot;qpainter#setBrush&quot;&gt;setBrush&lt;/a&gt;（）等）都重置为默认值。</target>
        </trans-unit>
        <trans-unit id="64f6b2e6843e244f70d2e311c4f5a4cad263884c" translate="yes" xml:space="preserve">
          <source>Notice that colorCount() returns 0 for 32-bpp images because these images do not use color tables, but instead encode pixel values as ARGB quadruplets.</source>
          <target state="translated">请注意,colorCount()对32-bpp图像返回0,因为这些图像不使用颜色表,而是将像素值编码为ARGB四元组。</target>
        </trans-unit>
        <trans-unit id="358a4f242f26241665405b9f9c5590f599c8622a" translate="yes" xml:space="preserve">
          <source>Notice that part of this &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; can be outise the visual viewport. It can e.g contain negative values.</source>
          <target state="translated">请注意，此&lt;a href=&quot;qrect&quot;&gt;QRect的&lt;/a&gt;一部分可以超出可视视口。例如，它可以包含负值。</target>
        </trans-unit>
        <trans-unit id="cb3ce21abee2ea6955b6722f2a2f4fe66112f9a6" translate="yes" xml:space="preserve">
          <source>Notice that qDeleteAll() doesn't remove the items from the container; it merely calls &lt;code&gt;delete&lt;/code&gt; on them. In the example above, we call clear() on the container to remove the items.</source>
          <target state="translated">注意，qDeleteAll（）不会从容器中删除项目。它只是要求 &lt;code&gt;delete&lt;/code&gt; 它们。在上面的示例中，我们在容器上调用clear（）删除项目。</target>
        </trans-unit>
        <trans-unit id="e932a7417bbd2e5d5dcf3bdfd0652267becd7808" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; objects above do not need to specify a &lt;code&gt;target&lt;/code&gt; to animate the appropriate item. Also, the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; in the &lt;code&gt;addTransition&lt;/code&gt; does not need to specify the &lt;code&gt;to&lt;/code&gt; value to move the item to its correct position in the view. This is because the view implicitly sets the &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; values with the correct item and final item position values if these properties are not explicitly defined.</source>
          <target state="translated">请注意，上面的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;对象不需要指定 &lt;code&gt;target&lt;/code&gt; 来制作适当项目的动画。另外，&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;addTransition&lt;/a&gt;中的 &lt;code&gt;addTransition&lt;/code&gt; 无需指定 &lt;code&gt;to&lt;/code&gt; 值即可将项目移动到视图中的正确位置。这是因为视图隐式设置 &lt;code&gt;target&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 如果没有明确定义这些属性值与正确的项目和最后一个项目位置值。</target>
        </trans-unit>
        <trans-unit id="783a9605d0185646cedd6ee8d4597feda8812ed1" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro is mandatory for any object that implements signals, slots or properties. You also need to run the &lt;a href=&quot;moc&quot;&gt;Meta Object Compiler&lt;/a&gt; on the source file. We strongly recommend the use of this macro in all subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; regardless of whether or not they actually use signals, slots and properties, since failure to do so may lead certain functions to exhibit strange behavior.</source>
          <target state="translated">注意，对于实现信号，插槽或属性的任何对象，&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;宏都是必需的。您还需要在源文件上运行&lt;a href=&quot;moc&quot;&gt;Meta Object Compiler&lt;/a&gt;。我们强烈建议在&lt;a href=&quot;qobject&quot;&gt;QObject的&lt;/a&gt;所有子类中都使用此宏，而不管它们是否实际使用信号，插槽和属性，因为不这样做可能会导致某些功能表现出奇怪的行为。</target>
        </trans-unit>
        <trans-unit id="92220c4bac050d2322c2739024a1d23f844477b4" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro is mandatory for any object that implements signals, slots or properties. You also need to run the &lt;a href=&quot;moc&quot;&gt;Meta Object Compiler&lt;/a&gt; on the source file. We strongly recommend the use of this macro in all subclasses of QObject regardless of whether or not they actually use signals, slots and properties, since failure to do so may lead certain functions to exhibit strange behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996372cb44362c51c39218414f18924193fffaad" translate="yes" xml:space="preserve">
          <source>Notice that the last conversion returns 1234.0, because '.' is the thousands group separator in the German locale.</source>
          <target state="translated">请注意,最后一次转换的结果是1234.0,因为'.'是德语中的千组分隔符。</target>
        </trans-unit>
        <trans-unit id="56c0275dae4c44e356cf9be5d26967b463d073ea" translate="yes" xml:space="preserve">
          <source>Notice that the returned item therefore might not belong to this layout, but to a sub-layout.</source>
          <target state="translated">因此,请注意,返回的项目可能不属于这个布局,而是属于一个子布局。</target>
        </trans-unit>
        <trans-unit id="3a79c1342250a66bcd0681c638ea39ca041d95ce" translate="yes" xml:space="preserve">
          <source>Notice that the value &lt;code&gt;999&lt;/code&gt; returns Intermediate. Values consisting of a number of digits equal to or less than the max value are considered intermediate. This is intended because the digit that prevents a number from being in range is not necessarily the last digit typed. This also means that an intermediate number can have leading zeros.</source>
          <target state="translated">请注意，值 &lt;code&gt;999&lt;/code&gt; 返回中级。由等于或小于最大值的数字组成的值被视为中间值。这是因为阻止数字不在范围内的数字不一定是最后输入的数字。这也意味着中间数可以具有前导零。</target>
        </trans-unit>
        <trans-unit id="8b94f5a054fac52cdc15d198f546c7b6b44609e2" translate="yes" xml:space="preserve">
          <source>Notice that there is no need to implement a copy constructor or an assignment operator for the &lt;code&gt;Employee&lt;/code&gt; class, because the copy constructor and assignment operator provided by the C++ compiler will do the</source>
          <target state="translated">注意，不需要为 &lt;code&gt;Employee&lt;/code&gt; 类实现复制构造函数或赋值运算符，因为C ++编译器提供的复制构造函数和赋值运算符将执行</target>
        </trans-unit>
        <trans-unit id="9e7eaf1accd82d81afa12a149e8280b58a574ef7" translate="yes" xml:space="preserve">
          <source>Notice that we don't use the &lt;code&gt;widget&lt;/code&gt; argument, except to pass it on to the QWindowStyle::drawPrimitive() function. As mentioned earlier, the information about what is to be drawn and how it should be drawn is specified by a &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; object, so there is no need to ask the widget.</source>
          <target state="translated">注意，除了将其传递给QWindowStyle :: drawPrimitive（）函数外，我们不使用 &lt;code&gt;widget&lt;/code&gt; 参数。如前所述，有关要绘制的内容以及应如何绘制的信息是由&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;对象指定的，因此无需询问窗口小部件。</target>
        </trans-unit>
        <trans-unit id="a4327a529092d6042e6848488acc5a896af35a0e" translate="yes" xml:space="preserve">
          <source>Notice that we use a &lt;a href=&quot;qstyleoptionprogressbar&quot;&gt;QStyleOptionProgressBar&lt;/a&gt; and initialize its members. We can then use the current &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to draw it.</source>
          <target state="translated">注意，我们使用&lt;a href=&quot;qstyleoptionprogressbar&quot;&gt;QStyleOptionProgressBar&lt;/a&gt;并初始化其成员。然后，我们可以使用当前的&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;进行绘制。</target>
        </trans-unit>
        <trans-unit id="4c6ed32a1e528364de2dafc821200655eede755e" translate="yes" xml:space="preserve">
          <source>Notice that when using this &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; as part of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; this method will have no effect.</source>
          <target state="translated">注意，使用该时&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;作为一部分&lt;a href=&quot;qtextdocument&quot;&gt;另外，QTextDocument&lt;/a&gt;该方法将不起作用。</target>
        </trans-unit>
        <trans-unit id="36827750343dacc8babe5c6490b79f7e72fedfca" translate="yes" xml:space="preserve">
          <source>Notice that while a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; by itself would be automatically rendered and displayed, this is not the case for the above rectangle because it is defined inside a &lt;code&gt;Component&lt;/code&gt;. The component encapsulates the QML types within, as if they were defined in a separate QML file, and is not loaded until requested (in this case, by the two &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; objects). Because Component is not derived from Item, you cannot anchor anything to it.</source>
          <target state="translated">注意，虽然&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;本身会自动呈现和显示，但上述矩形却不是这种情况，因为它是在 &lt;code&gt;Component&lt;/code&gt; 内部定义的。该组件将QML类型封装在其中，就好像它们是在单独的QML文件中定义的一样，并且直到请求时才加载（在这种情况下，由两个&lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt;对象）。由于Component不是从Item派生的，因此您无法将任何内容锚定到它。</target>
        </trans-unit>
        <trans-unit id="e9599176e8d8e535c298cec6cc986010a0d0fabd" translate="yes" xml:space="preserve">
          <source>Notice the &lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;() and &lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;() arguments for &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() must be specified as &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types, as this is the generic data type used for QML method parameters and return values.</source>
          <target state="translated">注意，必须将&lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt;（）的&lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;（）和&lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;（）参数指定为&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;类型，因为这是用于QML方法参数和返回值的通用数据类型。</target>
        </trans-unit>
        <trans-unit id="1acdea36df9b60315c148a5214948c56dc80a427" translate="yes" xml:space="preserve">
          <source>Notice the &lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt; did not need to set a &lt;code&gt;target&lt;/code&gt; value. As a convenience, when used in a transition, &lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt; will rotate all properties named &quot;rotation&quot; or &quot;angle&quot;. You can override this by providing your own properties via &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt;不需要设置 &lt;code&gt;target&lt;/code&gt; 。为方便起见，在过渡中使用时，&lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt;将旋转所有名为&amp;ldquo; rotation&amp;rdquo;或&amp;ldquo; angle&amp;rdquo;的属性。您可以通过&lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt;提供自己的属性来覆盖它。</target>
        </trans-unit>
        <trans-unit id="d88a59b43c1dc89b3dd34dd500db544659a544d4" translate="yes" xml:space="preserve">
          <source>Notice the RotationAnimation did not need to set a &lt;code&gt;target&lt;/code&gt; value. As a convenience, when used in a transition, RotationAnimation will rotate all properties named &quot;rotation&quot; or &quot;angle&quot;. You can override this by providing your own properties via &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a0a4d5436d9bd18606a9976301235abace1e6a" translate="yes" xml:space="preserve">
          <source>Notice the default state is referred to using an empty string (&quot;&quot;).</source>
          <target state="translated">请注意,默认状态是用一个空字符串(&quot;&quot;)来表示的。</target>
        </trans-unit>
        <trans-unit id="09d6f6673cc58f9bbc80d0d53337c40495ad9340" translate="yes" xml:space="preserve">
          <source>Notice the example does not require &lt;a href=&quot;qml-qtquick-propertyanimation#to-prop&quot;&gt;to&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-propertyanimation#from-prop&quot;&gt;from&lt;/a&gt; values for the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;. As a convenience, these properties are automatically set to the values of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; before and after the state change; the &lt;code&gt;from&lt;/code&gt; values are provided by the current values of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, and the &lt;code&gt;to&lt;/code&gt; values are provided by the &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object. If you wish, you can provide &lt;a href=&quot;qml-qtquick-propertyanimation#to-prop&quot;&gt;to&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-propertyanimation#from-prop&quot;&gt;from&lt;/a&gt; values anyway to override the default values.</source>
          <target state="translated">注意，例如不需要&lt;a href=&quot;qml-qtquick-propertyanimation#to-prop&quot;&gt;以&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-propertyanimation#from-prop&quot;&gt;从&lt;/a&gt;该值&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;。为方便起见，这些属性在状态更改前后自动设置为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的值；在 &lt;code&gt;from&lt;/code&gt; 值由的当前值提供 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ，并且 &lt;code&gt;to&lt;/code&gt; 值由提供&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt;对象。如果你愿意，你可以提供&lt;a href=&quot;qml-qtquick-propertyanimation#to-prop&quot;&gt;给&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-propertyanimation#from-prop&quot;&gt;从&lt;/a&gt;值反正覆盖默认值。</target>
        </trans-unit>
        <trans-unit id="a4ed2379c2375a3a4b43ea3203698f5a79e3bb23" translate="yes" xml:space="preserve">
          <source>Notice the parameter and return type specified after the colon. You can use &lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;basic types&lt;/a&gt; and &lt;a href=&quot;qtqml-typesystem-objecttypes&quot;&gt;object types&lt;/a&gt; as type names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301a28dd35706dd94188caf5732576f4fcfd0b24" translate="yes" xml:space="preserve">
          <source>Notice, however, that assigning a &lt;code&gt;currentIndex&lt;/code&gt; value in JavaScript removes the respective binding. In order to retain the bindings, use the following methods to alter the current index:</source>
          <target state="translated">但是请注意，在JavaScript中分配 &lt;code&gt;currentIndex&lt;/code&gt; 值会删除相应的绑定。为了保留绑定，请使用以下方法来更改当前索引：</target>
        </trans-unit>
        <trans-unit id="608a0641d7bdd92cb95ef256ba25681da29dffae" translate="yes" xml:space="preserve">
          <source>Notice: this can change the length of the byte array.</source>
          <target state="translated">注意:这可以改变字节数组的长度。</target>
        </trans-unit>
        <trans-unit id="30ef0e1394740601cf26701a4ea5795a88609657" translate="yes" xml:space="preserve">
          <source>Noticeable differences between &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;和&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;之间的明显区别是：</target>
        </trans-unit>
        <trans-unit id="9eb2e69230a3f8fb632b4a4beebb6a9094c322ae" translate="yes" xml:space="preserve">
          <source>Noticeable differences between QGraphicsWidget and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df8c0589830f636ac9b26d2ab95652cec513937" translate="yes" xml:space="preserve">
          <source>Notification messages</source>
          <target state="translated">通知信息</target>
        </trans-unit>
        <trans-unit id="c4510c4d2ce942975c3872cac559615d1262cea6" translate="yes" xml:space="preserve">
          <source>Notification that a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; is about to be closed. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">通知&lt;a href=&quot;qml-qtquick-window-window&quot;&gt;窗口&lt;/a&gt;即将关闭。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c419caaa36ff0b8fcae8637be5d1503c551b1bda" translate="yes" xml:space="preserve">
          <source>Notification that a window is about to be closed by the windowing system (e.g. the user clicked the title bar close button). The &lt;a href=&quot;qml-qtquick-window-closeevent&quot;&gt;CloseEvent&lt;/a&gt; contains an accepted property which can be set to false to abort closing the window.</source>
          <target state="translated">通知窗口即将被窗口系统关闭（例如，用户单击标题栏关闭按钮）。所述&lt;a href=&quot;qml-qtquick-window-closeevent&quot;&gt;的closeEvent&lt;/a&gt;包含可设置为false以中止关闭所述窗口的接受性。</target>
        </trans-unit>
        <trans-unit id="11984d4a0b103cde0ab28d81e73b46ad89989299" translate="yes" xml:space="preserve">
          <source>Notification that a window is about to be closed by the windowing system (e.g. the user clicked the title bar close button). The CloseEvent contains an accepted property which can be set to false to abort closing the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4de0a2ea1f8fb289240f48a6991fd6bcdd41961" translate="yes" xml:space="preserve">
          <source>Notification, such as an incoming e-mail or a chat request</source>
          <target state="translated">通知,如收到的电子邮件或聊天请求。</target>
        </trans-unit>
        <trans-unit id="a89bdc8b4c76dad33197fd6a72ea0efcb0791742" translate="yes" xml:space="preserve">
          <source>NotificationRole - notification, such as an incoming e-mail or a chat request.</source>
          <target state="translated">NotificationRole-通知,如收到的电子邮件或聊天请求。</target>
        </trans-unit>
        <trans-unit id="3d07659efe8328b7900d2dbc28d0730d51c73224" translate="yes" xml:space="preserve">
          <source>Notifications for added/removed places/categories</source>
          <target state="translated">新增/删除地点/类别的通知。</target>
        </trans-unit>
        <trans-unit id="db2035ff2dbde4d3fb8a66eefce1115ea04d5af8" translate="yes" xml:space="preserve">
          <source>Notifications of place and category changes is supported.</source>
          <target state="translated">支持地方和类别变更的通知。</target>
        </trans-unit>
        <trans-unit id="8700e9a6f8044b4edf9a336f37179cf7fcbe215b" translate="yes" xml:space="preserve">
          <source>Notifications on incoming new connections can be received by installing a &lt;a href=&quot;qmodbustcpconnectionobserver&quot;&gt;QModbusTcpConnectionObserver&lt;/a&gt; via &lt;a href=&quot;qmodbustcpserver#installConnectionObserver&quot;&gt;installConnectionObserver&lt;/a&gt;().</source>
          <target state="translated">通过&lt;a href=&quot;qmodbustcpserver#installConnectionObserver&quot;&gt;installConnectionObserver&lt;/a&gt;（）安装&lt;a href=&quot;qmodbustcpconnectionobserver&quot;&gt;QModbusTcpConnectionObserver&lt;/a&gt;可以接收有关传入的新连接的通知。</target>
        </trans-unit>
        <trans-unit id="0bfacd0e4948553023fe1a031da56e2425dfc2e8" translate="yes" xml:space="preserve">
          <source>Notifies &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; that the scene's scene rect has changed.</source>
          <target state="translated">通知&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;场景的场景矩形已更改。</target>
        </trans-unit>
        <trans-unit id="d3b1348426df0bd9235f66a574bb1d3c08ca3baf" translate="yes" xml:space="preserve">
          <source>Notifies about a change that might be relevant for accessibility clients.</source>
          <target state="translated">通知可能与可访问性客户相关的变化。</target>
        </trans-unit>
        <trans-unit id="18f22244c309a222b570b44e6d80617be15c2a84" translate="yes" xml:space="preserve">
          <source>Notifies all connected renderers that the node has dirty</source>
          <target state="translated">通知所有连接的渲染器该节点有脏污。</target>
        </trans-unit>
        <trans-unit id="a5dc10ecc52b17f8bfd34c57fe2f40b608e48771" translate="yes" xml:space="preserve">
          <source>Notifies observers of scene change</source>
          <target state="translated">通知观察者场景变化</target>
        </trans-unit>
        <trans-unit id="96c4c7c784572a4d671015f0ffb45c7578cbe226" translate="yes" xml:space="preserve">
          <source>Notifies that this transform operation has changed its parameters in such a way that &lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;applyTo&lt;/a&gt;() will return a different result than before.</source>
          <target state="translated">通知此转换操作已更改其参数，从而&lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;applyTo&lt;/a&gt;（）将返回与以前不同的结果。</target>
        </trans-unit>
        <trans-unit id="fc6cbfb31efc6d1d86482f4b112b2971441ff29c" translate="yes" xml:space="preserve">
          <source>Notifies the attached sensor (if any) that the filter is being destroyed.</source>
          <target state="translated">通知所连接的传感器(如果有的话),过滤器正在被销毁。</target>
        </trans-unit>
        <trans-unit id="65b074b3f524475fa0e3b36b0a9240510b37a9d2" translate="yes" xml:space="preserve">
          <source>Notifies the layout system that this widget has changed and may need to change geometry.</source>
          <target state="translated">通知布局系统该小组件已更改,可能需要更改几何体。</target>
        </trans-unit>
        <trans-unit id="0fe668534b0c3627f437220f47c1f4c8486cde95" translate="yes" xml:space="preserve">
          <source>Notifies you when the geometry of the layout is set. You can store the geometry in your own layout class in a reimplementation of this function.</source>
          <target state="translated">当布局的几何体被设置时通知你。你可以将几何体存储在你自己的布局类中,在此函数的重新实现中。</target>
        </trans-unit>
        <trans-unit id="9f79af4520f90c6792580eda73038648f198214c" translate="yes" xml:space="preserve">
          <source>Notify input method on updated query values if needed.</source>
          <target state="translated">必要时通知输入法更新查询值。</target>
        </trans-unit>
        <trans-unit id="d5ab18dcc84c48e8636bdced3422891e7427ee35" translate="yes" xml:space="preserve">
          <source>Notify that both &lt;a href=&quot;qt3drender-qblendequationarguments#destinationRgb-prop&quot;&gt;destinationRgb&lt;/a&gt; and &lt;a href=&quot;qt3drender-qblendequationarguments#destinationAlpha-prop&quot;&gt;destinationAlpha&lt;/a&gt; properties have changed to</source>
          <target state="translated">通知&lt;a href=&quot;qt3drender-qblendequationarguments#destinationRgb-prop&quot;&gt;destinationRgb&lt;/a&gt;和&lt;a href=&quot;qt3drender-qblendequationarguments#destinationAlpha-prop&quot;&gt;destinationAlpha&lt;/a&gt;属性都已更改为</target>
        </trans-unit>
        <trans-unit id="21fbad56849646ffa4eeaadf69c76d517b9fb66e" translate="yes" xml:space="preserve">
          <source>Notify that both &lt;a href=&quot;qt3drender-qblendequationarguments#sourceRgb-prop&quot;&gt;sourceRgb&lt;/a&gt; and &lt;a href=&quot;qt3drender-qblendequationarguments#sourceAlpha-prop&quot;&gt;sourceAlpha&lt;/a&gt; properties have changed to</source>
          <target state="translated">通知&lt;a href=&quot;qt3drender-qblendequationarguments#sourceRgb-prop&quot;&gt;sourceRgb&lt;/a&gt;和&lt;a href=&quot;qt3drender-qblendequationarguments#sourceAlpha-prop&quot;&gt;sourceAlpha&lt;/a&gt;属性都已更改为</target>
        </trans-unit>
        <trans-unit id="6452884aa35fe617ac701e02fabe909fa0b0cf08" translate="yes" xml:space="preserve">
          <source>Notify the &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; class that a new reading is available.</source>
          <target state="translated">通知&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt;类新的读数可用。</target>
        </trans-unit>
        <trans-unit id="8f91bb394c0242cbf37ac2bce6c581dd193d61ea" translate="yes" xml:space="preserve">
          <source>November (10)</source>
          <target state="translated">11月(10)</target>
        </trans-unit>
        <trans-unit id="aee655620aa23c92d0397381050cd566a5bbade9" translate="yes" xml:space="preserve">
          <source>Now &lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt; is ready to receive data to be rendered. Create a series with one row of 5 values:</source>
          <target state="translated">现在&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt;准备接收要渲染的数据。用5个值的一行创建一个系列：</target>
        </trans-unit>
        <trans-unit id="9be3eba733b149dcecd1825ffa838e3b93c31cc6" translate="yes" xml:space="preserve">
          <source>Now &lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt; is ready to receive data to be rendered. Add one series of 3 &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; items:</source>
          <target state="translated">现在&lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt;已准备好接收要渲染的数据。添加一系列3个&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;项：</target>
        </trans-unit>
        <trans-unit id="331c0db8cef25cfe0cebfe904f7923432bb91b78" translate="yes" xml:space="preserve">
          <source>Now &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt; is ready to receive data to be rendered. Create data elements to receive values:</source>
          <target state="translated">现在&lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;准备接收要渲染的数据。创建数据元素以接收值：</target>
        </trans-unit>
        <trans-unit id="2db0a3fc9fe56423c21081ea7b6602b05a9ffae8" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;delegateItem.ListView.isCurrentItem&lt;/code&gt; correctly refers to the &lt;code&gt;isCurrentItem&lt;/code&gt; attached property of the delegate.</source>
          <target state="translated">现在， &lt;code&gt;delegateItem.ListView.isCurrentItem&lt;/code&gt; &lt;code&gt;isCurrentItem&lt;/code&gt; 正确地引用了委托的isCurrentItem附加属性。</target>
        </trans-unit>
        <trans-unit id="8d3217923237246bece6e90e72225f9d002e3b9a" translate="yes" xml:space="preserve">
          <source>Now Q3DBars is ready to receive data to be rendered. Create a series with one row of 5 values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0613ae27546eb9ba4aef344636b76831be0f30e2" translate="yes" xml:space="preserve">
          <source>Now Q3DScatter is ready to receive data to be rendered. Add one series of 3 &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bbb217e2f7f973ec29a750c5ce955c33b2b2bb" translate="yes" xml:space="preserve">
          <source>Now Q3DSurface is ready to receive data to be rendered. Create data elements to receive values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805c4ae4d8ce078bc70d4e5781b4c02679f5347" translate="yes" xml:space="preserve">
          <source>Now any objects of the &lt;code&gt;SquareButton&lt;/code&gt; can connect to the &lt;code&gt;activated&lt;/code&gt; signal using an &lt;code&gt;onActivated&lt;/code&gt; signal handler:</source>
          <target state="translated">现在， &lt;code&gt;SquareButton&lt;/code&gt; 的任何对象都可以使用 &lt;code&gt;onActivated&lt;/code&gt; 信号处理程序连接到 &lt;code&gt;activated&lt;/code&gt; 信号：</target>
        </trans-unit>
        <trans-unit id="4284fa172b913371a5257f480b33e7d4da6ac738" translate="yes" xml:space="preserve">
          <source>Now it is possible to use named icons from the bundled icon theme without having to specify any fallback source:</source>
          <target state="translated">现在可以使用捆绑的图标主题中的命名图标,而无需指定任何后备源。</target>
        </trans-unit>
        <trans-unit id="5a98c2cb6750505b0d8e04eacbe54cd5621f5726" translate="yes" xml:space="preserve">
          <source>Now let's do the same for the three highest tickmarks:</source>
          <target state="translated">现在让我们对最高的三个刻度线做同样的处理。</target>
        </trans-unit>
        <trans-unit id="cd339253fdd7193e403f5dc115d2bd057c1cfdfa" translate="yes" xml:space="preserve">
          <source>Now suppose we want to link to the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt QML type&lt;/a&gt;. At the time QDoc generated this HTML page, that link was also correct, but we had to use this link command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a405e2933f9a35bab3dc4fb4e4e924e944a6ce" translate="yes" xml:space="preserve">
          <source>Now suppose we want to link to the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt QML type&lt;/a&gt;. At the time qdoc generated this HTML page, that link was also correct, but we had to use this link command:</source>
          <target state="translated">现在假设我们要链接到&lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt QML类型&lt;/a&gt;。在qdoc生成此HTML页面时，该链接也是正确的，但是我们必须使用此链接命令：</target>
        </trans-unit>
        <trans-unit id="c0b05e9a167be56f4aad9a5d38b085899866ddc6" translate="yes" xml:space="preserve">
          <source>Now that you have IBL set up for your scene, let us have a look at the different properties for the probe. In many cases the default values provide a satisfying result, but you can tweak the following property values depending on the image and desired result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a133c99da11e95a417ef7b4d7dfb7dea30049c" translate="yes" xml:space="preserve">
          <source>Now that you have seen QML in action, you are ready to take your next step. The follow page will lead you in your journey with QML.</source>
          <target state="translated">现在你已经看到了QML的作用,你已经准备好进行下一步了。下面的页面将带领你踏上QML的旅程。</target>
        </trans-unit>
        <trans-unit id="9bf71c6330f6d223169fb14131fc31d8ba31e68c" translate="yes" xml:space="preserve">
          <source>Now that you have successfully connected the objects for the &quot;RED&quot; component of the RGB Controller, do the same for the &quot;GREEN&quot; and &quot;BLUE&quot; components as well.</source>
          <target state="translated">现在您已经成功连接了RGB控制器的 &quot;RED &quot;组件的对象,对 &quot;GREEN &quot;和 &quot;BLUE &quot;组件也进行同样的操作。</target>
        </trans-unit>
        <trans-unit id="e21b96c54bf1c97a402bf9ebbaf1b0d2d9ac037a" translate="yes" xml:space="preserve">
          <source>Now that you know the rules to abide by when writing a framegraph tree, we will go over a few examples and break them down.</source>
          <target state="translated">现在你知道了写框架图树时要遵守的规则,我们将介绍几个例子,并对它们进行分解。</target>
        </trans-unit>
        <trans-unit id="751d20c329ec64db069ad0b321dda5ed3f36291e" translate="yes" xml:space="preserve">
          <source>Now the MY_DEFINES variable contains what is in the DEFINES variable at this point in the project file. This is also equivalent to:</source>
          <target state="translated">现在,MY_DEFINES变量包含了项目文件中此时DEFINES变量中的内容。这也相当于:</target>
        </trans-unit>
        <trans-unit id="f5c1142a192642e38cc288100f9e53ccc06cc40c" translate="yes" xml:space="preserve">
          <source>Now the images can be successfully loaded in QML:</source>
          <target state="translated">现在,图像可以在QML中成功加载。</target>
        </trans-unit>
        <trans-unit id="bc4e54c1c64a54da47872c9ae3eefef136b71fb4" translate="yes" xml:space="preserve">
          <source>Now the total key weight of a row is</source>
          <target state="translated">现在一行的总键权重为</target>
        </trans-unit>
        <trans-unit id="75eea6953174c82ec38c97658560369e148815ab" translate="yes" xml:space="preserve">
          <source>Now we can compile and start the project, which will open a user interface with our two Qt widgets. If we can resize the dialog, the widgets will resize appropriately.</source>
          <target state="translated">现在我们可以编译并启动该项目,它将打开一个带有两个Qt widgets的用户界面。如果我们可以调整对话框的大小,那么小部件也会适当地调整大小。</target>
        </trans-unit>
        <trans-unit id="d112c9d27092ebd1c813b59a6446a56b2f7ea30e" translate="yes" xml:space="preserve">
          <source>Now we can write an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; to find all the XML files and parse them to find the ones that don't contain well-formed XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e93438e0c47d51130b0c52a38f0a11f498cf21f" translate="yes" xml:space="preserve">
          <source>Now we can write an XQuery to find all the XML files and parse them to find the ones that don't contain well-formed XML.</source>
          <target state="translated">现在我们可以写一个XQuery来查找所有的XML文件,并对它们进行解析,找到那些不包含格式良好的XML的文件。</target>
        </trans-unit>
        <trans-unit id="ed9fd3ad5439ee536cffd08491c78b3a1bafcff2" translate="yes" xml:space="preserve">
          <source>Now when we try to run the previous &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; example, no output is produced! The path expression no longer matches anything in the cookbook file because our &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; doesn't yet know about the namespace declaration we added to the cookbook document. There are two ways we can declare the namespace in the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;. We can give it a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bc3eb1112afd6bd39d30bffaf552565ec10df9" translate="yes" xml:space="preserve">
          <source>Now when we try to run the previous &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; example, no output is produced! The path expression no longer matches anything in the cookbook file because our &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; doesn't yet know about the namespace declaration we added to the cookbook document. There are two ways we can declare the namespace in the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;. We can give it a</source>
          <target state="translated">现在，当我们尝试运行前面的&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;示例时，不会产生任何输出！路径表达式不再与菜谱文件中的任何内容匹配，因为我们的&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;尚不知道我们添加到菜谱文档中的名称空间声明。我们可以通过两种方法在&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery中&lt;/a&gt;声明名称空间。我们可以给它一个</target>
        </trans-unit>
        <trans-unit id="8e9bee6f717fbc24994b0890dfd7fd1b16b68177" translate="yes" xml:space="preserve">
          <source>Now you can test your development setup by running the examples shipped with the Qt installation. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-android.html&quot;&gt;Qt for Android Examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a546371797b5748135f1ad79247f1f130c24b1" translate="yes" xml:space="preserve">
          <source>Now you can test your development setup by running the examples that came with the Qt 5 installation. You can browse these examples in Qt Creator &lt;b&gt;Welcome&lt;/b&gt; mode. Use the &lt;code&gt;android&lt;/code&gt; filter in the search field to list all the examples tested on Android.</source>
          <target state="translated">现在，您可以通过运行Qt 5安装随附的示例来测试开发设置。您可以在Qt Creator &lt;b&gt;欢迎&lt;/b&gt;模式下浏览这些示例。在搜索字段中使用 &lt;code&gt;android&lt;/code&gt; 过滤器列出所有在Android上测试过的示例。</target>
        </trans-unit>
        <trans-unit id="0e9e9fe835b1353248af7280ca779de75d0d1856" translate="yes" xml:space="preserve">
          <source>Now your application is available to other Android device users via Google Play. You can also choose to publish the application to a smaller group, so that you can test and improve the application before publishing it to a larger audience.</source>
          <target state="translated">现在你的应用程序可以通过Google Play向其他Android设备用户发布。你也可以选择将应用程序发布到一个较小的群体中,这样你就可以在发布给更多的受众之前测试和改进应用程序。</target>
        </trans-unit>
        <trans-unit id="4f6e1017174f7e2d156a7e546c1b8c19d62236c4" translate="yes" xml:space="preserve">
          <source>Now, a &lt;code&gt;Message&lt;/code&gt; type can access the properties and signals of the attached object type:</source>
          <target state="translated">现在， &lt;code&gt;Message&lt;/code&gt; 类型可以访问附加对象类型的属性和信号：</target>
        </trans-unit>
        <trans-unit id="3764460d9a256bfb9eddc4788d15262cb97b19d0" translate="yes" xml:space="preserve">
          <source>Now, a displaced item will first move to a position of (20, 50) relative to its starting position, and then to its final, correct position in the view:</source>
          <target state="translated">现在,一个位移的物品将首先移动到相对于其起始位置的(20,50)的位置,然后移动到其在视图中的最终正确位置。</target>
        </trans-unit>
        <trans-unit id="06322c5960762faf21f5be048b2a8e4389c77ea3" translate="yes" xml:space="preserve">
          <source>Now, after the space key is pressed, the rectangle's height will continue auto-updating to always be three times its width.</source>
          <target state="translated">现在,在按下空格键后,矩形的高度将继续自动更新,始终为其宽度的三倍。</target>
        </trans-unit>
        <trans-unit id="c7626e581161b9b33ee067e61fb988c97e96afb5" translate="yes" xml:space="preserve">
          <source>Now, geometry is specified in device independent pixels. This includes widget and item geometry, event geometry, desktop, window and screen geometry, as well as animation velocities. The output is rendered in device pixels, which corresponds to the display resolution. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d532067038fbb056220a95c58c55f26dc5d05e9" translate="yes" xml:space="preserve">
          <source>Now, if you move the cursor from the top to the bottom in the middle of A, you will get the following &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::MouseMove&lt;/a&gt; events:</source>
          <target state="translated">现在，如果将光标从A的顶部移动到底部，您将获得以下&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: MouseMove&lt;/a&gt;事件：</target>
        </trans-unit>
        <trans-unit id="e481844fe754938a92b7bad4d082a76299170b34" translate="yes" xml:space="preserve">
          <source>Now, the logical coordinates (-50,-50) correspond to the paint device's physical coordinates (0, 0). Independent of the paint device, your painting code will always operate on the specified logical coordinates.</source>
          <target state="translated">现在,逻辑坐标(-50,-50)对应于涂装设备的物理坐标(0,0)。独立于涂装设备,您的涂装代码将始终在指定的逻辑坐标上运行。</target>
        </trans-unit>
        <trans-unit id="6fd2fc7870ed44d5e0bb30d58d403b9ebf9e0073" translate="yes" xml:space="preserve">
          <source>Now, the mutex will always be unlocked when the &lt;a href=&quot;qmutexlocker&quot;&gt;QMutexLocker&lt;/a&gt; object is destroyed (when the function returns since &lt;code&gt;locker&lt;/code&gt; is an auto variable).</source>
          <target state="translated">现在，当&lt;a href=&quot;qmutexlocker&quot;&gt;QMutexLocker&lt;/a&gt;对象被销毁时（由于 &lt;code&gt;locker&lt;/code&gt; 是自动变量，函数返回时），互斥锁将始终被解锁。</target>
        </trans-unit>
        <trans-unit id="5ce633495e58b859c74d5362bc4641135a91da6e" translate="yes" xml:space="preserve">
          <source>Now, the mutex will always be unlocked when the QMutexLocker object is destroyed (when the function returns since &lt;code&gt;locker&lt;/code&gt; is an auto variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83855bd860aa914a5c93e57a2cf1745228a1f284" translate="yes" xml:space="preserve">
          <source>Now, we preview your form to see how it would look in your application - press &lt;b&gt;Ctrl + R&lt;/b&gt; or select &lt;b&gt;Preview&lt;/b&gt; from the &lt;b&gt;Form&lt;/b&gt; menu. Try dragging the slider - the spin box will mirror its value too (and vice versa). Also, you can resize it to see how the layouts that are used to manage the child widgets, respond to different window sizes.</source>
          <target state="translated">现在，我们预览您的表单以查看其在应用程序中的外观-按&lt;b&gt;Ctrl + R&lt;/b&gt;或从&amp;ldquo; &lt;b&gt;表单&amp;rdquo;&lt;/b&gt;菜单中选择&amp;ldquo; &lt;b&gt;预览&lt;/b&gt; &amp;rdquo; 。尝试拖动滑块-旋转框也将反映其值（反之亦然）。另外，您可以调整其大小以查看用于管理子窗口小部件的布局如何响应不同的窗口大小。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="84b4c11c7fd0cf44538aed74cc1d5928fd4ad0b5" translate="yes" xml:space="preserve">
          <source>Now, when an item's &lt;code&gt;add&lt;/code&gt; transition is interrupted, its opacity and scale are animated to 1.0 upon displacement, avoiding the erroneous visual effects from before:</source>
          <target state="translated">现在，当一个项目的 &lt;code&gt;add&lt;/code&gt; 过渡被中断时，其不透明度和比例在位移时会动画化为1.0，从而避免了以前的错误视觉效果：</target>
        </trans-unit>
        <trans-unit id="0c277108c7c0452add58bf7a5904a7c9e8c2db50" translate="yes" xml:space="preserve">
          <source>Now, when the form's context menu is opened over objects of the base class, the placeholder class will appear in the &lt;b&gt;Promote to&lt;/b&gt; submenu, allowing for convenient promotion of objects to that class.</source>
          <target state="translated">现在，当在基类的对象上打开窗体的上下文菜单时，占位符类将出现在&amp;ldquo; &lt;b&gt;升级到&amp;rdquo;&lt;/b&gt;子菜单中，从而可以方便地将对象提升到该类。</target>
        </trans-unit>
        <trans-unit id="bbcbfce05f3a013dbb7cbbd2902536318fa7a070" translate="yes" xml:space="preserve">
          <source>Now, whenever a QML file is changed, only the QML files have to be recompiled.</source>
          <target state="translated">现在,每当改变一个QML文件时,只需要重新编译QML文件。</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="b7235e0e27be74e88688406044bbefc109c20906" translate="yes" xml:space="preserve">
          <source>Null (no output) via a graphics abstraction layer. This value was introduced in Qt 5.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ce0004d95c8c52d22835e9574d0c0e574dfb78" translate="yes" xml:space="preserve">
          <source>Null documents are documents created through the default constructor.</source>
          <target state="translated">空值文档是指通过默认构造函数创建的文档。</target>
        </trans-unit>
        <trans-unit id="4950033258cf4d685fedd247a213071440856225" translate="yes" xml:space="preserve">
          <source>Null pointers can be passed for any function, causing the respective function to be synthesized using the others, if possible. QQmlListProperty can synthesize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcad64095a7e868acb464e3fd1988e4de7532bb" translate="yes" xml:space="preserve">
          <source>Null pointers can be passed for any function. If any null pointers are passed in, the list will be neither designable nor alterable by the debugger. It is recommended to provide valid pointers for all functions.</source>
          <target state="translated">可以为任何函数传递空指针。如果传入任何空指针,调试器将无法设计或更改列表。建议为所有函数提供有效的指针。</target>
        </trans-unit>
        <trans-unit id="69b632102a3968648a3ed2625df9a730b484b41e" translate="yes" xml:space="preserve">
          <source>Null values are distinct from undefined values and from invalid &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; objects. The API will not create invalid QCborValues, but they may exist as a result of a parsing error.</source>
          <target state="translated">空值不同于未定义的值和无效的&lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt;对象。该API不会创建无效的QCborValue，但由于解析错误，它们可能存在。</target>
        </trans-unit>
        <trans-unit id="a97d7a55d5f211b659e841c16281be6ac207623b" translate="yes" xml:space="preserve">
          <source>Null values are used to indicate that an optional value is not present. In that aspect, it is similar to the C++ Standard Library type &lt;code&gt;std::optional&lt;/code&gt; when that is disengaged. Unlike the C++ type, CBOR nulls are simply of type &quot;Null&quot; and it is not possible to determine what concrete type it is replacing.</source>
          <target state="translated">空值用于指示不存在可选值。在那方面，它与C ++标准库类型 &lt;code&gt;std::optional&lt;/code&gt; 相似（如果未启用）。与C ++类型不同，CBOR空值仅是&amp;ldquo; Null&amp;rdquo;类型，无法确定要替换的具体类型。</target>
        </trans-unit>
        <trans-unit id="c91466faff2764b37f16753046c2c2356df3e1f0" translate="yes" xml:space="preserve">
          <source>Null-terminated character string of the following format: hh.mm.ss</source>
          <target state="translated">无结尾的字符串,格式如下:hh.mm.ss。</target>
        </trans-unit>
        <trans-unit id="2e713b74e51091210b48812cf2f20d24d60f843e" translate="yes" xml:space="preserve">
          <source>Null-terminated character string of the following format: yyyy-mm-dd</source>
          <target state="translated">无结尾的字符串,格式如下:yyy-mm-dd。</target>
        </trans-unit>
        <trans-unit id="07e2b31a37b2a1d2aa894c8f05e8168d1a81015a" translate="yes" xml:space="preserve">
          <source>Null-terminated character string of the following format: yyyy-mm-dd-hh.mm.ss.nnnnnn</source>
          <target state="translated">无结尾的字符串,格式如下:yyy-mm-dd-hh.mm.ss.nnnnn。</target>
        </trans-unit>
        <trans-unit id="0f194d031cfb916fdcaf72438e49dc4cf8085d1a" translate="yes" xml:space="preserve">
          <source>Null-terminated varying length string</source>
          <target state="translated">无结尾的可变长度字符串</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="bd04ea4621d658ed1290cccfcdd817d13897b157" translate="yes" xml:space="preserve">
          <source>Number (QML type)</source>
          <target state="translated">编号(QML类型)</target>
        </trans-unit>
        <trans-unit id="c113c1ce38ed141fcae0f6b76ce2cd2c5c8f74af" translate="yes" xml:space="preserve">
          <source>Number Objects</source>
          <target state="translated">数目对象</target>
        </trans-unit>
        <trans-unit id="82a0aab3003d37def7a9d10fc943d715c4eb34bc" translate="yes" xml:space="preserve">
          <source>Number Prototype Object</source>
          <target state="translated">编号 原型对象</target>
        </trans-unit>
        <trans-unit id="129277b370f66290dc57a1a03c96346bb7d8fc59" translate="yes" xml:space="preserve">
          <source>Number QML Type</source>
          <target state="translated">数量 QML 类型</target>
        </trans-unit>
        <trans-unit id="f5437120cfcccb28c6a74d9343e189785f9e28d1" translate="yes" xml:space="preserve">
          <source>Number of available cpus</source>
          <target state="translated">可用计算机数量</target>
        </trans-unit>
        <trans-unit id="500e2b6bc22efab7164b45852f67b348ff6f65f3" translate="yes" xml:space="preserve">
          <source>Number of channels</source>
          <target state="translated">频道数</target>
        </trans-unit>
        <trans-unit id="4b43bab8dbd3ca8a21f75cb7a351549dab6e42fa" translate="yes" xml:space="preserve">
          <source>Number of columns.</source>
          <target state="translated">列数:</target>
        </trans-unit>
        <trans-unit id="95aa88f742fec71068ba90c5df3443d7f96acc87" translate="yes" xml:space="preserve">
          <source>Number of frames in this &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt;.</source>
          <target state="translated">此&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite中&lt;/a&gt;的帧数。</target>
        </trans-unit>
        <trans-unit id="f834f20637f46d00335a4672f4cd5855a7e77339" translate="yes" xml:space="preserve">
          <source>Number of frames in this sprite.</source>
          <target state="translated">该精灵的帧数。</target>
        </trans-unit>
        <trans-unit id="953834b4bdb54e1e2b2933c4b60cdaac7c358715" translate="yes" xml:space="preserve">
          <source>Number of lines to scroll by default for each wheel click.</source>
          <target state="translated">每次点击滚轮时,默认要滚动的行数。</target>
        </trans-unit>
        <trans-unit id="c4de77416557276d36e983053906df7898a8bb99" translate="yes" xml:space="preserve">
          <source>Number of particles emitted per second.</source>
          <target state="translated">每秒钟发射的粒子数。</target>
        </trans-unit>
        <trans-unit id="99784d5348f9c9161b7d0abdfc2978931bde09d7" translate="yes" xml:space="preserve">
          <source>Number of pixels between the top of each key and the bottom of the &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#characterPreviewDelegate-prop&quot;&gt;characterPreviewDelegate&lt;/a&gt;.</source>
          <target state="translated">每个键的顶部和&lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#characterPreviewDelegate-prop&quot;&gt;characterPreviewDelegate&lt;/a&gt;的底部之间的像素数。</target>
        </trans-unit>
        <trans-unit id="117b11fe1707172fb3103fd8d37a75c468c0ec15" translate="yes" xml:space="preserve">
          <source>Number of pixels the tab bar overlaps the tab bar base.</source>
          <target state="translated">标签栏与标签栏底座重叠的像素数。</target>
        </trans-unit>
        <trans-unit id="aa1086817770ad305f4259ede691b45af504dfd9" translate="yes" xml:space="preserve">
          <source>Number of pixels the tabs should overlap. (Currently only used in styles, not inside of &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;)</source>
          <target state="translated">标签应重叠的像素数。（当前仅用于样式，不在&lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;内部使用）</target>
        </trans-unit>
        <trans-unit id="1c099e65a07762829f7dc4f02bbef87f1902e005" translate="yes" xml:space="preserve">
          <source>Number of rows.</source>
          <target state="translated">行数:</target>
        </trans-unit>
        <trans-unit id="e7310da02777697d15f246cacbdda11278ae3b7e" translate="yes" xml:space="preserve">
          <source>Number of samples per pixels.</source>
          <target state="translated">每个像素的样本数。</target>
        </trans-unit>
        <trans-unit id="345a32be56f183547ba365cbc91a5a42c09f45bf" translate="yes" xml:space="preserve">
          <source>Number of seconds for which the service record is expected to remain valid and unchanged.</source>
          <target state="translated">预计服务记录将保持有效和不变的秒数。</target>
        </trans-unit>
        <trans-unit id="c4bddeda901b30189cf0eec86b9034f934ce8845" translate="yes" xml:space="preserve">
          <source>Number of the bump bands. Range is &lt;code&gt;[0, 10]&lt;/code&gt;. Default is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10179913cf23a4c785c56399981d100dee5ea09c" translate="yes" xml:space="preserve">
          <source>Number with a decimal point</source>
          <target state="translated">带小数点的数字</target>
        </trans-unit>
        <trans-unit id="6930ecdabd21ef35de372e2b65c40913aa7fbe51" translate="yes" xml:space="preserve">
          <source>Number with a decimal point, stored in double precision</source>
          <target state="translated">带小数点的数字,以双精度存储。</target>
        </trans-unit>
        <trans-unit id="61e2eb6c2092496cb709b33bde8b0c1fdb152876" translate="yes" xml:space="preserve">
          <source>Number-String Conversions</source>
          <target state="translated">数字-字符串转换</target>
        </trans-unit>
        <trans-unit id="8853b35bfc0b315f9a4aa9f24776f3df91d59844" translate="yes" xml:space="preserve">
          <source>Number.fromLocaleString()</source>
          <target state="translated">Number.fromLocaleString()</target>
        </trans-unit>
        <trans-unit id="0e928443306d0e3608dc13956f467c25354b8134" translate="yes" xml:space="preserve">
          <source>Number.toLocaleCurrencyString()</source>
          <target state="translated">Number.toLocaleCurrencyString()</target>
        </trans-unit>
        <trans-unit id="d1bfceb3f74807a1e09af5f567b5211834fc09fe" translate="yes" xml:space="preserve">
          <source>Number.toLocaleString()</source>
          <target state="translated">Number.toLocaleString()</target>
        </trans-unit>
        <trans-unit id="694f436bf150c20dc3b5d72fd327f6f23a6ec02a" translate="yes" xml:space="preserve">
          <source>NumberAnimation</source>
          <target state="translated">NumberAnimation</target>
        </trans-unit>
        <trans-unit id="eb519c713f65c73fb16c6c3867b306394928735d" translate="yes" xml:space="preserve">
          <source>NumberAnimation (QML type)</source>
          <target state="translated">NumberAnimation (QML类型)</target>
        </trans-unit>
        <trans-unit id="b294cca2f833e4c8c97789eb72141ab5a01b8d0c" translate="yes" xml:space="preserve">
          <source>NumberAnimation QML Type</source>
          <target state="translated">NumberAnimation QML类型</target>
        </trans-unit>
        <trans-unit id="df6c00d6aab7677f5d022765f520555b07a53ada" translate="yes" xml:space="preserve">
          <source>NumberAnimation is a specialized &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; that defines an animation to be applied when a numerical value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e4e61df8999404b8b5ad166882cb1457e35a93" translate="yes" xml:space="preserve">
          <source>NumberAnimation.from</source>
          <target state="translated">NumberAnimation.from</target>
        </trans-unit>
        <trans-unit id="977d11c79d0ddc0ee6061e53dec292680faa6ebb" translate="yes" xml:space="preserve">
          <source>NumberAnimation.to</source>
          <target state="translated">NumberAnimation.to</target>
        </trans-unit>
        <trans-unit id="35a45152d1ca143684b413835f52129e231f1fc5" translate="yes" xml:space="preserve">
          <source>NumberKey</source>
          <target state="translated">NumberKey</target>
        </trans-unit>
        <trans-unit id="b6727a8e20eef56656ce7cac5201120eb3d8c86a" translate="yes" xml:space="preserve">
          <source>NumberKey (QML type)</source>
          <target state="translated">NumberKey (QML类型)</target>
        </trans-unit>
        <trans-unit id="ded1c795537c6d0db49b85fbb4c5d59425e6ba26" translate="yes" xml:space="preserve">
          <source>NumberKey QML Type</source>
          <target state="translated">NumberKey QML类型</target>
        </trans-unit>
        <trans-unit id="6e50b620a0413cffbe685c98eb3030650833a71f" translate="yes" xml:space="preserve">
          <source>NumberOption : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e249d9031dd18938937b7eec1e67c86b2dfc203a" translate="yes" xml:space="preserve">
          <source>Numbers are preferred (but not required).</source>
          <target state="translated">数字是首选(但不是必须)。</target>
        </trans-unit>
        <trans-unit id="2222bd398de7c6adad994baa92e9f4101919ea06" translate="yes" xml:space="preserve">
          <source>Numbers the months of the year starting with 1 for the first. Uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c06a130c65a61ca60fa4f91de0c968043c1eae" translate="yes" xml:space="preserve">
          <source>Numerical representation of sample (typically signed integer, unsigned integer or float)</source>
          <target state="translated">样本的数字表示(通常是有符号的整数、无符号的整数或浮点数)。</target>
        </trans-unit>
        <trans-unit id="bb6f681ce5e6ca483e629f9886404c800d5b2c9c" translate="yes" xml:space="preserve">
          <source>Numerical sorting can be accomplished by zero-padding the values to a fixed length with the help of the &lt;a href=&quot;#format-number&quot;&gt;format_number&lt;/a&gt;() function.</source>
          <target state="translated">可以通过在&lt;a href=&quot;#format-number&quot;&gt;format_number&lt;/a&gt;（）函数的帮助下将值零填充到固定长度来完成数字排序。</target>
        </trans-unit>
        <trans-unit id="2e53031a03bd763022979a624672f4519a8e34c0" translate="yes" xml:space="preserve">
          <source>Numerical sorting can be accomplished by zero-padding the values to a fixed length with the help of the &lt;a href=&quot;qmake-function-reference#format-number&quot;&gt;format_number&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eaaf3f2e73194df2847d7fd9363869f9713855e" translate="yes" xml:space="preserve">
          <source>Numerical values in a database can have precisions greater than their corresponding C++ types. This enum lists the policies for representing such values in the application.</source>
          <target state="translated">数据库中的数值的精度可以大于其对应的C++类型。这个枚举列出了在应用程序中表示这些数值的策略。</target>
        </trans-unit>
        <trans-unit id="d6b659d658bf35b86d5fff3cd0fcc74348fd88a9" translate="yes" xml:space="preserve">
          <source>O G&amp;ecirc;nio e as Rosas</source>
          <target state="translated">OG&amp;ecirc;nioe饰演Rosas</target>
        </trans-unit>
        <trans-unit id="b77c741d1f9cd669d002e4e86286a37c1adb4f06" translate="yes" xml:space="preserve">
          <source>O(</source>
          <target state="translated">O(</target>
        </trans-unit>
        <trans-unit id="6c69dc5bbeb314ef78589c0047ce04c8e5006432" translate="yes" xml:space="preserve">
          <source>O(1)</source>
          <target state="translated">O(1)</target>
        </trans-unit>
        <trans-unit id="26ec14657697a25c3824a35ea3e5f1e616f8b70c" translate="yes" xml:space="preserve">
          <source>O(log</source>
          <target state="translated">O(log</target>
        </trans-unit>
        <trans-unit id="ebc75cd71fe8ecc45d16e8fbe4ca608d05d1efe0" translate="yes" xml:space="preserve">
          <source>O(n)</source>
          <target state="translated">O(n)</target>
        </trans-unit>
        <trans-unit id="88d917ebe28a4594d8b851667720080155024195" translate="yes" xml:space="preserve">
          <source>OAuth 1</source>
          <target state="translated">OAuth 1</target>
        </trans-unit>
        <trans-unit id="33d4fc04c495fd922d4d5a9639d9d4daad5ef02c" translate="yes" xml:space="preserve">
          <source>OAuth 2</source>
          <target state="translated">OAuth 2</target>
        </trans-unit>
        <trans-unit id="286a9950d8b7439d591175d1477185a445560ee1" translate="yes" xml:space="preserve">
          <source>OAuth specifies three methods for the client to establish its rightful ownership of the credentials: &quot;HMAC-SHA1&quot;, &quot;RSA-SHA1&quot;, and &quot;PLAINTEXT&quot;. Each generates a &quot;signature&quot; with which the request is &quot;signed&quot;; the first two use a digest of the data signed in generating this, though the last does not. The &quot;RSA-SHA1&quot; method is not supported here; it would use an RSA key rather than the shared-secret associated with the client credentials.</source>
          <target state="translated">OAuth为客户指定了三种方法来建立其对凭证的合法所有权。&quot;HMAC-SHA1&quot;、&quot;RSA-SHA1 &quot;和 &quot;PLAINTEXT&quot;。每种方法都会生成一个 &quot;签名&quot;,请求会被 &quot;签名&quot;;前两种方法在生成这个签名时使用了签名数据的摘要,不过最后一种方法没有。这里不支持 &quot;RSA-SHA1 &quot;方法;它将使用RSA密钥,而不是与客户端凭证相关联的共享秘密。</target>
        </trans-unit>
        <trans-unit id="87f31c8069eb8dad7d5d244f603f0f20b29a8937" translate="yes" xml:space="preserve">
          <source>OAuth-authenticated requests can have two sets of credentials: those passed via the &quot;oauth_consumer_key&quot; parameter and those in the &quot;oauth_token&quot; parameter. In order for the server to verify the authenticity of the request and prevent unauthorized access, the client needs to prove that it is the rightful owner of the credentials. This is accomplished using the shared-secret (or RSA key) part of each set of credentials.</source>
          <target state="translated">OAuth认证的请求可以有两组凭证:通过 &quot;oauth_consumer_key &quot;参数传递的凭证和 &quot;oauth_token &quot;参数中的凭证。为了让服务器验证请求的真实性并防止未经授权的访问,客户端需要证明它是凭证的合法所有者。这是通过使用每组凭证的共享秘密(或RSA密钥)部分来实现的。</target>
        </trans-unit>
        <trans-unit id="3fa2004d9c5fb45107e8ba92881d9fc51650ef56" translate="yes" xml:space="preserve">
          <source>OBEX object push service UUID (service &amp;amp; profile)</source>
          <target state="translated">OBEX对象推送服务UUID（服务和配置文件）</target>
        </trans-unit>
        <trans-unit id="30a3ad09b587523d25c7de596e4504c5d2f3dc1e" translate="yes" xml:space="preserve">
          <source>OBEX protocol UUID</source>
          <target state="translated">OBEX协议UUID</target>
        </trans-unit>
        <trans-unit id="841711cb0a31c0d559b38249e56010c7811328b8" translate="yes" xml:space="preserve">
          <source>OBJECTIVE_HEADERS</source>
          <target state="translated">OBJECTIVE_HEADERS</target>
        </trans-unit>
        <trans-unit id="04f20aa09e3210fdc27d763821e80a7e7be97cd7" translate="yes" xml:space="preserve">
          <source>OBJECTIVE_SOURCES</source>
          <target state="translated">OBJECTIVE_SOURCES</target>
        </trans-unit>
        <trans-unit id="83ccf14b6fc5001c270b87a25f6dbd0dd2dbdb90" translate="yes" xml:space="preserve">
          <source>OBJECTS</source>
          <target state="translated">OBJECTS</target>
        </trans-unit>
        <trans-unit id="be405de2bfc768c1fbdccb9c1d34d444fb431cbf" translate="yes" xml:space="preserve">
          <source>OBJECTS_DIR</source>
          <target state="translated">OBJECTS_DIR</target>
        </trans-unit>
        <trans-unit id="884fe42d7e2e7bcd001fae8aa79b945821553691" translate="yes" xml:space="preserve">
          <source>OBJECT_PATH</source>
          <target state="translated">OBJECT_PATH</target>
        </trans-unit>
        <trans-unit id="695ae40e746bef24e4df9f63ee368014f1d7e7e4" translate="yes" xml:space="preserve">
          <source>OCI</source>
          <target state="translated">OCI</target>
        </trans-unit>
        <trans-unit id="0d13ae4dd116aec015f36e45386f3e152358d36c" translate="yes" xml:space="preserve">
          <source>OCI BLOB/LOB Support</source>
          <target state="translated">OCI BLOB/LOB支持</target>
        </trans-unit>
        <trans-unit id="5d450429b3e0e135a15f0dd98a6d3bd981a4aec8" translate="yes" xml:space="preserve">
          <source>OCI User Authentication</source>
          <target state="translated">OCI用户认证</target>
        </trans-unit>
        <trans-unit id="4023014467d78e594d17088f3b828278cac3c54b" translate="yes" xml:space="preserve">
          <source>OCIEnv *environment, OCISvcCtx *serviceContext</source>
          <target state="translated">OCIEnv *environment,OCISvcCtx *serviceContext</target>
        </trans-unit>
        <trans-unit id="315055fe91d5810cc0cce867d3885759def60c87" translate="yes" xml:space="preserve">
          <source>OCI_ATTR_PREFETCH_MEMORY</source>
          <target state="translated">OCI_ATTR_PREFETCH_MEMORY</target>
        </trans-unit>
        <trans-unit id="208ef5c2b1609274552eee43cd79e96ec0a5d616" translate="yes" xml:space="preserve">
          <source>OCI_ATTR_PREFETCH_ROWS</source>
          <target state="translated">OCI_ATTR_PREFETCH_ROWS</target>
        </trans-unit>
        <trans-unit id="fb91068c51189c866a8e510b38ba4dfebf5d32bc" translate="yes" xml:space="preserve">
          <source>ODBC</source>
          <target state="translated">ODBC</target>
        </trans-unit>
        <trans-unit id="828f47c7b62b20841f0a9fe84c87d0697033c31a" translate="yes" xml:space="preserve">
          <source>ODBC Data Types</source>
          <target state="translated">ODBC数据类型</target>
        </trans-unit>
        <trans-unit id="60f7665529f2f925b978d290b59ba4ff688d3f27" translate="yes" xml:space="preserve">
          <source>ODBC Driver (includes Microsoft SQL Server)</source>
          <target state="translated">ODBC驱动程序(包括Microsoft SQL Server</target>
        </trans-unit>
        <trans-unit id="994c7f90ba717b0252c04ad6c532c4ba66426ca2" translate="yes" xml:space="preserve">
          <source>ODBC Stored Procedure Support</source>
          <target state="translated">ODBC存储过程支持</target>
        </trans-unit>
        <trans-unit id="2057f16fa8465062b88a6e5e145a9dcdd949d419" translate="yes" xml:space="preserve">
          <source>ODBC Unicode Support</source>
          <target state="translated">支持ODBC统一码</target>
        </trans-unit>
        <trans-unit id="a8fbcef4f5ba09caf931cea9075e77a5e551ffd3" translate="yes" xml:space="preserve">
          <source>ODBC data type</source>
          <target state="translated">ODBC数据类型</target>
        </trans-unit>
        <trans-unit id="e6e72739f18a92d5b218c3d441c28fa23a05bd74" translate="yes" xml:space="preserve">
          <source>ODBC is a general interface that allows you to connect to multiple DBMSs using a common interface. The QODBC driver allows you to connect to an ODBC driver manager and access the available data sources. Note that you also need to install and configure ODBC drivers for the ODBC driver manager that is installed on your system. The QODBC plugin then allows you to use these data sources in your Qt applications.</source>
          <target state="translated">ODBC是一个通用接口,允许你使用一个通用接口连接到多个DBMS。QODBC驱动允许您连接到ODBC驱动管理器并访问可用的数据源。请注意,您还需要为系统上安装的ODBC驱动管理器安装和配置ODBC驱动程序。然后,QODBC插件允许你在Qt应用程序中使用这些数据源。</target>
        </trans-unit>
        <trans-unit id="ce51f5620f2dc95a3693afb895c3f3b71e1a3af3" translate="yes" xml:space="preserve">
          <source>ODF</source>
          <target state="translated">ODF</target>
        </trans-unit>
        <trans-unit id="4d314276ba61e4f3bc6a1b4a234e301a4e785ad9" translate="yes" xml:space="preserve">
          <source>OID</source>
          <target state="translated">OID</target>
        </trans-unit>
        <trans-unit id="9ce3bd4224c8c1780db56b4125ecf3f24bf748b7" translate="yes" xml:space="preserve">
          <source>OK</source>
          <target state="translated">OK</target>
        </trans-unit>
        <trans-unit id="ef0b695e83be27386b36470c50c7f6aaf76e0c49" translate="yes" xml:space="preserve">
          <source>OLE_COLOR</source>
          <target state="translated">OLE_COLOR</target>
        </trans-unit>
        <trans-unit id="be32a2ba6c79c28539a90a34ead9a2e50ea8d370" translate="yes" xml:space="preserve">
          <source>OPERATION</source>
          <target state="translated">OPERATION</target>
        </trans-unit>
        <trans-unit id="9954b5cb646af3e1d62f8936ee802e399e164efe" translate="yes" xml:space="preserve">
          <source>OS X</source>
          <target state="translated">OS X</target>
        </trans-unit>
        <trans-unit id="71af95a01f4f17e1db7ce58248c17727d6bccd76" translate="yes" xml:space="preserve">
          <source>OUT_PWD</source>
          <target state="translated">OUT_PWD</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="e3805ab06696aa72f9cb17dcaeddd521f5f13046" translate="yes" xml:space="preserve">
          <source>Object Constructor</source>
          <target state="translated">对象构造函数</target>
        </trans-unit>
        <trans-unit id="9cf5c3411eb513b108884e51c19ba17172ea9665" translate="yes" xml:space="preserve">
          <source>Object Declarations</source>
          <target state="translated">对象声明</target>
        </trans-unit>
        <trans-unit id="3f59301f7416504f287f1f698afb5f3926cb4024" translate="yes" xml:space="preserve">
          <source>Object Instances as Models</source>
          <target state="translated">对象实例作为模型</target>
        </trans-unit>
        <trans-unit id="8e8f73597a618314a275940fda3ddbf67d61ed8c" translate="yes" xml:space="preserve">
          <source>Object Life Cycle</source>
          <target state="translated">对象生命周期</target>
        </trans-unit>
        <trans-unit id="2190ecef1ae8c952744acc1fe3a0dfc304f621fa" translate="yes" xml:space="preserve">
          <source>Object List Property Attributes</source>
          <target state="translated">对象列表属性</target>
        </trans-unit>
        <trans-unit id="aaa80f910817ebd1e9f2fa00be8e23153b3e201b" translate="yes" xml:space="preserve">
          <source>Object ListModel</source>
          <target state="translated">对象列表模型</target>
        </trans-unit>
        <trans-unit id="9acd850a30238a54eae733b2ef6db2b68124fe1e" translate="yes" xml:space="preserve">
          <source>Object Model</source>
          <target state="translated">对象模型</target>
        </trans-unit>
        <trans-unit id="e6720a40de19cc539e25cc2ae1ae5e5f90874501" translate="yes" xml:space="preserve">
          <source>Object Paths</source>
          <target state="translated">对象路径</target>
        </trans-unit>
        <trans-unit id="16b3286580da806e3257bdff8601d05ac12e4df0" translate="yes" xml:space="preserve">
          <source>Object Prototype</source>
          <target state="translated">对象原型</target>
        </trans-unit>
        <trans-unit id="0af502f2ae3dd68173726a626d83522053ce2848" translate="yes" xml:space="preserve">
          <source>Object Trees &amp;amp; Ownership</source>
          <target state="translated">对象树和所有权</target>
        </trans-unit>
        <trans-unit id="cadc94239cb6d9721bc9abae7ab74549ddda3fbb" translate="yes" xml:space="preserve">
          <source>Object Type</source>
          <target state="translated">对象类型</target>
        </trans-unit>
        <trans-unit id="6d1ee094001a93ed2e61b87b4d76e3a69bbe1573" translate="yes" xml:space="preserve">
          <source>Object Type Declaration</source>
          <target state="translated">对象类型声明</target>
        </trans-unit>
        <trans-unit id="cbf147d445453a6660add525598d56066b954b1c" translate="yes" xml:space="preserve">
          <source>Object Types</source>
          <target state="translated">对象类型</target>
        </trans-unit>
        <trans-unit id="724abbaa9e50ed8d083e80ecfd6b822312ab888a" translate="yes" xml:space="preserve">
          <source>Object assignment (with operator=()) for implicitly shared objects is implemented using shallow copies.</source>
          <target state="translated">隐式共享对象的对象赋值(用operator=())使用浅层拷贝实现。</target>
        </trans-unit>
        <trans-unit id="7d24a041e67eb9c7378894eed68408469f03a849" translate="yes" xml:space="preserve">
          <source>Object creation requires the specified license key. The key can be empty to require a licensed machine. By default classes are not licensed. Also see the following section.</source>
          <target state="translated">创建对象需要指定的许可证密钥。密钥可以是空的,以要求使用授权的机器。默认情况下,类是没有授权的。也请参见下一节。</target>
        </trans-unit>
        <trans-unit id="b54ee048c2801ae45779415e6f4e268e23af0319" translate="yes" xml:space="preserve">
          <source>Object instances can be instantiated &quot;lazily&quot; at run-time, to avoid performing unnecessary work until needed. Qt Quick provides the &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; type to make lazy instantiation more convenient.</source>
          <target state="translated">可以在运行时&amp;ldquo;延迟&amp;rdquo;实例化对象实例，以避免在需要之前执行不必要的工作。Qt Quick提供了&lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt;类型，以使延迟实例化更加方便。</target>
        </trans-unit>
        <trans-unit id="3cea97df0b740945c7cd547fced0589e4c407d8c" translate="yes" xml:space="preserve">
          <source>Object path</source>
          <target state="translated">对象路径</target>
        </trans-unit>
        <trans-unit id="203291fcf92cec017d179c96285b0d1e76accb7f" translate="yes" xml:space="preserve">
          <source>Object values have an internal &lt;code&gt;prototype&lt;/code&gt; property, which can be accessed with &lt;a href=&quot;qjsvalue#prototype&quot;&gt;prototype&lt;/a&gt;() and &lt;a href=&quot;qjsvalue#setPrototype&quot;&gt;setPrototype&lt;/a&gt;().</source>
          <target state="translated">对象值具有内部 &lt;code&gt;prototype&lt;/code&gt; 属性，可以使用&lt;a href=&quot;qjsvalue#prototype&quot;&gt;prototype&lt;/a&gt;（）和&lt;a href=&quot;qjsvalue#setPrototype&quot;&gt;setPrototype&lt;/a&gt;（）进行访问。</target>
        </trans-unit>
        <trans-unit id="cfd7ce32b18ccc93e091fb9ba1044f2c15579bf2" translate="yes" xml:space="preserve">
          <source>Object values have zero or more properties which are themselves QJSValues. Use &lt;a href=&quot;qjsvalue#setProperty&quot;&gt;setProperty&lt;/a&gt;() to set a property of an object, and call &lt;a href=&quot;qjsvalue#property&quot;&gt;property&lt;/a&gt;() to retrieve the value of a property.</source>
          <target state="translated">对象值具有零个或多个本身就是QJSValues的属性。使用&lt;a href=&quot;qjsvalue#setProperty&quot;&gt;setProperty&lt;/a&gt;（）设置对象的属性，并调用&lt;a href=&quot;qjsvalue#property&quot;&gt;property&lt;/a&gt;（）检索属性的值。</target>
        </trans-unit>
        <trans-unit id="54b21916ca98dfc8439fcd99e018df80869ced7d" translate="yes" xml:space="preserve">
          <source>Object-type properties are accessible from QML providing that the object type has been appropriately &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;registered&lt;/a&gt; with the QML type system.</source>
          <target state="translated">如果对象类型已在QML类型系统中正确&lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;注册&lt;/a&gt;，则可以从QML访问对象类型属性。</target>
        </trans-unit>
        <trans-unit id="c5cdd7a1d073fcc8d75672b9e907657f7abe1bc7" translate="yes" xml:space="preserve">
          <source>Object3D</source>
          <target state="translated">Object3D</target>
        </trans-unit>
        <trans-unit id="4065a84a78b909b3647f336d16ff01b025b3ebb3" translate="yes" xml:space="preserve">
          <source>Object3D (QML type)</source>
          <target state="translated">Object3D(QML类型)</target>
        </trans-unit>
        <trans-unit id="27e7e1352e7c7ec29417fce9fa0874608474a0cd" translate="yes" xml:space="preserve">
          <source>Object3D &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick3d-repeater3d#objectAt-method&quot;&gt;objectAt&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4785724e157098f2f7c3eaab5a51d123815291b2" translate="yes" xml:space="preserve">
          <source>Object3D QML Type</source>
          <target state="translated">Object3D QML类型</target>
        </trans-unit>
        <trans-unit id="64bfa4294b96e3d190e235ed69448a5ad6514d90" translate="yes" xml:space="preserve">
          <source>Object3D.position</source>
          <target state="translated">Object3D.position</target>
        </trans-unit>
        <trans-unit id="32cc615a7b7001e3ff856d52e1c78e6e3e8d014d" translate="yes" xml:space="preserve">
          <source>ObjectModel</source>
          <target state="translated">ObjectModel</target>
        </trans-unit>
        <trans-unit id="aec80b03553ebb7dde91b86f2bc7e88ed514ea8c" translate="yes" xml:space="preserve">
          <source>ObjectModel (QML type)</source>
          <target state="translated">对象模型(QML类型)</target>
        </trans-unit>
        <trans-unit id="9b28895c6bcc7dfa7ec11cd69a80612fce798c5e" translate="yes" xml:space="preserve">
          <source>ObjectModel QML Type</source>
          <target state="translated">ObjectModel QML类型</target>
        </trans-unit>
        <trans-unit id="dff4370260bd3b6b1d459cf919f71ab1463c3299" translate="yes" xml:space="preserve">
          <source>ObjectModel.ObjectModel.index</source>
          <target state="translated">ObjectModel.ObjectModel.index</target>
        </trans-unit>
        <trans-unit id="bf79171018170163b69ed060410e79b23236ca4a" translate="yes" xml:space="preserve">
          <source>ObjectModel.append()</source>
          <target state="translated">ObjectModel.append()</target>
        </trans-unit>
        <trans-unit id="cb209f0994341e86e077877fbe0b0425e8b750fc" translate="yes" xml:space="preserve">
          <source>ObjectModel.clear()</source>
          <target state="translated">ObjectModel.clear()</target>
        </trans-unit>
        <trans-unit id="3c5a7c047b729c4dfa9d1559dba39e7b29bcb0bc" translate="yes" xml:space="preserve">
          <source>ObjectModel.count</source>
          <target state="translated">ObjectModel.count</target>
        </trans-unit>
        <trans-unit id="644bab37ce157b32cff688f709537ade82a223e7" translate="yes" xml:space="preserve">
          <source>ObjectModel.get()</source>
          <target state="translated">ObjectModel.get()</target>
        </trans-unit>
        <trans-unit id="adb704e5c2bcf604ffa4b3e4a4ad0e6a41f259d0" translate="yes" xml:space="preserve">
          <source>ObjectModel.index : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">ObjectModel.index：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd346ecc58d13dae770758b38b9d8bc20e15bf46" translate="yes" xml:space="preserve">
          <source>ObjectModel.insert()</source>
          <target state="translated">ObjectModel.insert()</target>
        </trans-unit>
        <trans-unit id="d63148abda2ca84caa62395733da1faeb324e2fb" translate="yes" xml:space="preserve">
          <source>ObjectModel.move()</source>
          <target state="translated">ObjectModel.move()</target>
        </trans-unit>
        <trans-unit id="53439117cd016c1645e4bb61b6fd813149721878" translate="yes" xml:space="preserve">
          <source>ObjectModel.remove()</source>
          <target state="translated">ObjectModel.remove()</target>
        </trans-unit>
        <trans-unit id="f440e660c5232ac31cba1d040ea9f607a471cfd1" translate="yes" xml:space="preserve">
          <source>ObjectOwnership controls whether or not QML automatically destroys the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; when the corresponding JavaScript object is garbage collected by the engine. The two ownership options are:</source>
          <target state="translated">ObjectOwnership控制当引擎对相应的JavaScript对象进行垃圾回收时，QML是否自动销毁&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;。两种所有权选项是：</target>
        </trans-unit>
        <trans-unit id="1369c2fee536e9fa8c60ca26d701c6401f9fd9f1" translate="yes" xml:space="preserve">
          <source>ObjectPicker</source>
          <target state="translated">ObjectPicker</target>
        </trans-unit>
        <trans-unit id="0f4891d4118b365ec653e1e4eca5914fa49041e5" translate="yes" xml:space="preserve">
          <source>ObjectPicker (QML type)</source>
          <target state="translated">ObjectPicker(QML类型)</target>
        </trans-unit>
        <trans-unit id="1758dc9d669c3dae2c2211d5eaf992aacbe591b7" translate="yes" xml:space="preserve">
          <source>ObjectPicker QML Type</source>
          <target state="translated">ObjectPicker QML类型</target>
        </trans-unit>
        <trans-unit id="507339a348dd2d6b196a98c18b40c02ba4df22a8" translate="yes" xml:space="preserve">
          <source>ObjectPicker.clicked()</source>
          <target state="translated">ObjectPicker.clicked()</target>
        </trans-unit>
        <trans-unit id="27866cd0f6d62f2e339bdee1f0c0230c076380e7" translate="yes" xml:space="preserve">
          <source>ObjectPicker.containsMouse</source>
          <target state="translated">ObjectPicker.containsMouse</target>
        </trans-unit>
        <trans-unit id="300340c1f2a8b92d91339a7eb11dcc6d918752fe" translate="yes" xml:space="preserve">
          <source>ObjectPicker.dragEnabled</source>
          <target state="translated">ObjectPicker.dragEnabled</target>
        </trans-unit>
        <trans-unit id="bb821c4a974ac836f5c749c47eac4234ebd0ba93" translate="yes" xml:space="preserve">
          <source>ObjectPicker.entered()</source>
          <target state="translated">ObjectPicker.entered()</target>
        </trans-unit>
        <trans-unit id="00792cc1be17d67a85c13a0e2a6a6d728e7c9497" translate="yes" xml:space="preserve">
          <source>ObjectPicker.exited()</source>
          <target state="translated">ObjectPicker.exited()</target>
        </trans-unit>
        <trans-unit id="d08009166a3d37ee63723f549b2c4fbb61eef012" translate="yes" xml:space="preserve">
          <source>ObjectPicker.hoverEnabled</source>
          <target state="translated">ObjectPicker.hoverEnabled</target>
        </trans-unit>
        <trans-unit id="bec1be36848c446606c738946083276662813747" translate="yes" xml:space="preserve">
          <source>ObjectPicker.moved()</source>
          <target state="translated">ObjectPicker.moved()</target>
        </trans-unit>
        <trans-unit id="8dd5ea1a0a6304cea13b321baa29a6466829005c" translate="yes" xml:space="preserve">
          <source>ObjectPicker.pressed</source>
          <target state="translated">ObjectPicker.pressed</target>
        </trans-unit>
        <trans-unit id="d4fe5a38f133ca841e86e4776346655604454350" translate="yes" xml:space="preserve">
          <source>ObjectPicker.pressed()</source>
          <target state="translated">ObjectPicker.pressed()</target>
        </trans-unit>
        <trans-unit id="7a14a61287843ea6096b325f76352d77cc498df2" translate="yes" xml:space="preserve">
          <source>ObjectPicker.priority</source>
          <target state="translated">ObjectPicker.priority</target>
        </trans-unit>
        <trans-unit id="5297e8bc5538b08bd4dc7e94f07f455a5c95a6ee" translate="yes" xml:space="preserve">
          <source>ObjectPicker.released()</source>
          <target state="translated">ObjectPicker.released()</target>
        </trans-unit>
        <trans-unit id="242f07e44cae59f9d77439e072977b098b649199" translate="yes" xml:space="preserve">
          <source>ObjectType *</source>
          <target state="translated">对象类型 *</target>
        </trans-unit>
        <trans-unit id="e46bdd3b3ef0bf18798ba83ac0aa56a0b8c72fce" translate="yes" xml:space="preserve">
          <source>ObjectType *QRemoteObjectNode::acquire(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">ObjectType * QRemoteObjectNode :: acquire（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="39255a2a89f3ceb835e0d6a0969bd48af940aed0" translate="yes" xml:space="preserve">
          <source>Objects and their properties form the basis of a graphical interface defined in a QML document. The QML language allows properties to be bound to each other in various ways, enabling highly dynamic user interfaces.</source>
          <target state="translated">对象及其属性构成了QML文档中定义的图形界面的基础。QML语言允许属性以各种方式相互绑定,从而实现高度动态的用户界面。</target>
        </trans-unit>
        <trans-unit id="4a917cd25aa30b58e4896cb03b974abb05e020fd" translate="yes" xml:space="preserve">
          <source>Objects are added to the form by dragging them from the main widget box and dropping them in the desired location on the form. Once there, they can be moved around simply by dragging them, or using the cursor keys. Pressing the &lt;b&gt;Ctrl&lt;/b&gt; key at the same time moves the selected widget pixel by pixel, while using the cursor keys alone make the selected widget snap to the grid when it is moved. Objects can be selected by clicking on them with the left mouse button. You can also use the &lt;b&gt;Tab&lt;/b&gt; key to change the selection.</source>
          <target state="translated">通过将对象从主窗口小部件框中拖放到窗体上所需的位置，可以将对象添加到窗体。到达那里后，只需拖动它们或使用光标键即可移动它们。同时按下&lt;b&gt;Ctrl&lt;/b&gt;键可以逐像素移动选定的小部件，而仅使用光标键可使选定的小部件在移动时与网格对齐。可以通过使用鼠标左键单击对象来选择对象。您也可以使用&lt;b&gt;Tab&lt;/b&gt;键更改选择。</target>
        </trans-unit>
        <trans-unit id="778ae058d98e2788188f6cc27919e4753053c228" translate="yes" xml:space="preserve">
          <source>Objects are colored using a full gradient for each object regardless of object height. The gradient used is specified in &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, &lt;a href=&quot;q3dtheme#singleHighlightGradient-prop&quot;&gt;singleHighlightGradient&lt;/a&gt; and &lt;a href=&quot;q3dtheme#multiHighlightGradient-prop&quot;&gt;multiHighlightGradient&lt;/a&gt; properties.</source>
          <target state="translated">无论对象的高度如何，都为每个对象使用完整的渐变为对象着色。在&lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;，&lt;a href=&quot;q3dtheme#singleHighlightGradient-prop&quot;&gt;singleHighlightGradient&lt;/a&gt;和&lt;a href=&quot;q3dtheme#multiHighlightGradient-prop&quot;&gt;multiHighlightGradient&lt;/a&gt;属性中指定了使用的渐变。</target>
        </trans-unit>
        <trans-unit id="c06922c099c931bd955e1c74efd413ccb359bd5f" translate="yes" xml:space="preserve">
          <source>Objects are colored using a portion of the full gradient determined by the object's height and its position on the Y-axis. The gradient used is specified in &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, &lt;a href=&quot;q3dtheme#singleHighlightGradient-prop&quot;&gt;singleHighlightGradient&lt;/a&gt; and &lt;a href=&quot;q3dtheme#multiHighlightGradient-prop&quot;&gt;multiHighlightGradient&lt;/a&gt; properties.</source>
          <target state="translated">使用由对象的高度及其在Y轴上的位置确定的全部渐变的一部分为对象着色。在&lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;，&lt;a href=&quot;q3dtheme#singleHighlightGradient-prop&quot;&gt;singleHighlightGradient&lt;/a&gt;和&lt;a href=&quot;q3dtheme#multiHighlightGradient-prop&quot;&gt;multiHighlightGradient&lt;/a&gt;属性中指定了使用的渐变。</target>
        </trans-unit>
        <trans-unit id="68ba03f4d3ce8e325872eb66deb74b9f22065f4b" translate="yes" xml:space="preserve">
          <source>Objects are rendered in a single color. The color used is specified in &lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;q3dtheme#singleHighlightColor-prop&quot;&gt;singleHighlightColor&lt;/a&gt; and &lt;a href=&quot;q3dtheme#multiHighlightColor-prop&quot;&gt;multiHighlightColor&lt;/a&gt; properties.</source>
          <target state="translated">对象以单一颜色呈现。所使用的颜色中指定&lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;，&lt;a href=&quot;q3dtheme#singleHighlightColor-prop&quot;&gt;singleHighlightColor&lt;/a&gt;和&lt;a href=&quot;q3dtheme#multiHighlightColor-prop&quot;&gt;multiHighlightColor&lt;/a&gt;性质。</target>
        </trans-unit>
        <trans-unit id="e5c30edaf09673ff06977a35ad3cd677c002aa2e" translate="yes" xml:space="preserve">
          <source>Objects can be inserted into an existing layout by dragging them from their current positions and dropping them at the required location. A blue cursor is displayed in the layout as an object is dragged over it to indicate where the object will be added.</source>
          <target state="translated">通过将对象从其当前位置拖动并放到所需位置,可将其插入到现有布局中。当对象被拖动到布局上时,布局中会显示一个蓝色光标,以指示将添加对象的位置。</target>
        </trans-unit>
        <trans-unit id="7b0c34712c09d9361a7a0125db02767882015b02" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt; can similarly be destroyed using &lt;code&gt;destroy()&lt;/code&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject（）&lt;/a&gt;创建的对象可以类似地使用 &lt;code&gt;destroy()&lt;/code&gt; 销毁：</target>
        </trans-unit>
        <trans-unit id="7124bb3bfd66f83df7d12d9629a94cf43a5fe842" translate="yes" xml:space="preserve">
          <source>Objects created with the default constructor will be invalid and therefore not ready for use.</source>
          <target state="translated">使用默认构造函数创建的对象将是无效的,因此不能使用。</target>
        </trans-unit>
        <trans-unit id="3b72af5140bc7d68db27b2814ddd4bd23c00938e" translate="yes" xml:space="preserve">
          <source>Objects expose functionality of all super-classes up to and including the class name in value. See &lt;a href=&quot;qaxfactory#exposeToSuperClass&quot;&gt;QAxFactory::exposeToSuperClass&lt;/a&gt;()</source>
          <target state="translated">对象公开了所有超类的功能，包括值中的类名。参见&lt;a href=&quot;qaxfactory#exposeToSuperClass&quot;&gt;QAxFactory :: exposeToSuperClass&lt;/a&gt;（）</target>
        </trans-unit>
        <trans-unit id="3a48d867388a6607b5f267eb72c29b56840d7548" translate="yes" xml:space="preserve">
          <source>Objects expose stock events if value is &quot;yes&quot;. See &lt;a href=&quot;qaxfactory#hasStockEvents&quot;&gt;QAxFactory::hasStockEvents&lt;/a&gt;()</source>
          <target state="translated">如果值为&amp;ldquo;是&amp;rdquo;，则对象公开股票事件。参见&lt;a href=&quot;qaxfactory#hasStockEvents&quot;&gt;QAxFactory :: hasStockEvents&lt;/a&gt;（）</target>
        </trans-unit>
        <trans-unit id="d9d6a6cf35a0baf2f93a28ee44478c86e73d0ab4" translate="yes" xml:space="preserve">
          <source>Objects not-created by QML have CppOwnership by default. The exception to this are objects returned from C++ method calls; their ownership will be set to JavaScriptOwnership. This applies only to explicit invocations of &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt; methods or slots, but not to property getter invocations.</source>
          <target state="translated">默认情况下，由QML未创建的对象具有CppOwnership。从C ++方法调用返回的对象是一个例外。它们的所有权将设置为JavaScriptOwnership。这仅适用于&lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt;方法或插槽的显式调用，不适用于属性getter调用。</target>
        </trans-unit>
        <trans-unit id="4eae5453fa257db78db1751afc2007ad82818e7a" translate="yes" xml:space="preserve">
          <source>Objects of this class can be used to check whether the conversion was successful, and if so, retrieve the decoded &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;. The conversion operators defined for &lt;a href=&quot;qbytearray-frombase64result&quot;&gt;QByteArray::FromBase64Result&lt;/a&gt; make its usage straightforward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bb80c9eec44a6e669dfb4033b27bc4d55d28a1" translate="yes" xml:space="preserve">
          <source>Objects of this class cannot be copied, but can be moved, so you can maintain a list of basic timers by holding them in container that supports move-only types, e.g. std::vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ed93aa58cc4d930e4072f860845a2be981a58c" translate="yes" xml:space="preserve">
          <source>Objects of this type are created with the static &lt;a href=&quot;qdbusmessage#createError&quot;&gt;createError&lt;/a&gt;(), &lt;a href=&quot;qdbusmessage#createMethodCall&quot;&gt;createMethodCall&lt;/a&gt;() and &lt;a href=&quot;qdbusmessage#createSignal&quot;&gt;createSignal&lt;/a&gt;() functions. Use the &lt;a href=&quot;qdbusconnection#send&quot;&gt;QDBusConnection::send&lt;/a&gt;() function to send the messages.</source>
          <target state="translated">使用静态&lt;a href=&quot;qdbusmessage#createError&quot;&gt;createError&lt;/a&gt;（），&lt;a href=&quot;qdbusmessage#createMethodCall&quot;&gt;createMethodCall&lt;/a&gt;（）和&lt;a href=&quot;qdbusmessage#createSignal&quot;&gt;createSignal&lt;/a&gt;（）函数创建此类型的对象。使用&lt;a href=&quot;qdbusconnection#send&quot;&gt;QDBusConnection :: send&lt;/a&gt;（）函数发送消息。</target>
        </trans-unit>
        <trans-unit id="e5bf01167f885dfa1d79c937e78f82db58954789" translate="yes" xml:space="preserve">
          <source>Objects of type QDBusUnixFileDescriptors can be used also as parameters in signals and slots that get exported to D-Bus by registering with &lt;a href=&quot;qdbusconnection#registerObject&quot;&gt;QDBusConnection::registerObject&lt;/a&gt;.</source>
          <target state="translated">QDBusUnixFileDescriptors类型的对象也可以用作信号和插槽中的参数，这些信号和插槽通过向&lt;a href=&quot;qdbusconnection#registerObject&quot;&gt;QDBusConnection :: registerObject&lt;/a&gt;注册而导出到D-Bus 。</target>
        </trans-unit>
        <trans-unit id="3e357d1ff5ca324987ebd92b7b26ec3eef631c85" translate="yes" xml:space="preserve">
          <source>Objects on the form are selected by clicking on them with the left mouse button. When an object is selected, resize handles are shown at each corner and the midpoint of each side, indicating that it can be resized.</source>
          <target state="translated">用鼠标左键点击表格上的对象,即可选择对象。选定对象后,在每个角和每个边的中点都会显示调整大小的句柄,表示可以调整大小。</target>
        </trans-unit>
        <trans-unit id="6294b16895408ae8a18e40be4d509eccd34a9318" translate="yes" xml:space="preserve">
          <source>Objects shared over QtRO use the links (conduits) between nodes for all communication. If you intend to share a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, you must create a</source>
          <target state="translated">通过QtRO共享的对象使用节点之间的链接（管道）进行所有通信。如果您打算共享&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;，则必须创建一个</target>
        </trans-unit>
        <trans-unit id="a11331ff79316dcc1be28a4e229b654ed8e9fecf" translate="yes" xml:space="preserve">
          <source>Objects shared over QtRO use the links (conduits) between nodes for all communication. If you want to share a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, you must create a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85e993cfc7e8518e8693e1cf5eeab7148aa9205" translate="yes" xml:space="preserve">
          <source>Objects within this normalized range of &lt;a href=&quot;qml-qtquick3d-effects-tiltshift#focusPosition-prop&quot;&gt;focusPosition&lt;/a&gt; will be in focus. Range is &lt;code&gt;[0...1]&lt;/code&gt;. &lt;code&gt;0.2&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5419a33da466649584283aaf981083ab4d6ec39" translate="yes" xml:space="preserve">
          <source>Obsolete Commands</source>
          <target state="translated">过时的命令</target>
        </trans-unit>
        <trans-unit id="b2bb056990421e57e9424fc4be204dff38320098" translate="yes" xml:space="preserve">
          <source>Obsolete Members for MyClass</source>
          <target state="translated">MyClass的过时成员</target>
        </trans-unit>
        <trans-unit id="31524043a32dcf2421a07c736eab6a15d692673c" translate="yes" xml:space="preserve">
          <source>Obsolete alias for Http2AllowedAttribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8719ed9bafd473e78fc384b804da7b79831f42" translate="yes" xml:space="preserve">
          <source>Obsolete alias for Http2WasUsedAttribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf0733798f7a6e2dc88e17de1119d2a935abd66" translate="yes" xml:space="preserve">
          <source>Obsolete and has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81ea7373bafcdbcce99144225ab981920b37861" translate="yes" xml:space="preserve">
          <source>Obsolete members</source>
          <target state="translated">过时成员</target>
        </trans-unit>
        <trans-unit id="1303b64b626f9862a3ab911f54129595488daeb3" translate="yes" xml:space="preserve">
          <source>Obsolete, means the same as TlsV1_0</source>
          <target state="translated">过时,含义与TlsV1_0相同。</target>
        </trans-unit>
        <trans-unit id="126f68650a3c883c5966dde77a69da756c5112f6" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Akan</source>
          <target state="translated">过时,请使用Akan</target>
        </trans-unit>
        <trans-unit id="55c870676c833eb851ce2251ea0fb2c660adcef2" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Belarusian</source>
          <target state="translated">过时,请使用白俄罗斯语</target>
        </trans-unit>
        <trans-unit id="3da6cf42e78de4a6316a4146df5315740e38de45" translate="yes" xml:space="preserve">
          <source>Obsolete, please use CongoBrazzaville</source>
          <target state="translated">过时,请使用刚果布拉柴维尔。</target>
        </trans-unit>
        <trans-unit id="6d2f24715c910c01cee7a6bdb458cfd85ae37fee" translate="yes" xml:space="preserve">
          <source>Obsolete, please use CongoKinshasa</source>
          <target state="translated">过时,请使用刚果-金沙萨。</target>
        </trans-unit>
        <trans-unit id="a8bbfbffc459308085ae7bcbd4ab175bc1514e12" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Dzongkha</source>
          <target state="translated">过时了,请用宗喀语。</target>
        </trans-unit>
        <trans-unit id="0700b24d6a0b0f0e3ea0a5836dabf2ac82487ba8" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Filipino</source>
          <target state="translated">过时,请使用菲律宾语</target>
        </trans-unit>
        <trans-unit id="d46ef5f9abcd242fdeb3181e8b45efccbbb82103" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Khmer</source>
          <target state="translated">过时,请使用高棉语</target>
        </trans-unit>
        <trans-unit id="8ff018a1d754e1ce47ee01712b04779873ce2b1d" translate="yes" xml:space="preserve">
          <source>Obsolete, please use LatinAmerica</source>
          <target state="translated">过时,请使用拉丁美洲。</target>
        </trans-unit>
        <trans-unit id="2b8ccf7bea421707eefa30235f7572ea439a4abb" translate="yes" xml:space="preserve">
          <source>Obsolete, please use NorthKorea</source>
          <target state="translated">过时,请使用北朝鲜。</target>
        </trans-unit>
        <trans-unit id="d2d1cb393abd98e3ff6261155d4e607836200851" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Nyanja</source>
          <target state="translated">过时,请使用Nyanja</target>
        </trans-unit>
        <trans-unit id="a7478563538ec1b6c82c6bb040e62619f99bd2a5" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Oromo</source>
          <target state="translated">过时,请使用奥罗莫语</target>
        </trans-unit>
        <trans-unit id="8b81ecf2c2588da244ebeeb3d81f861589d50007" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Romanian</source>
          <target state="translated">过时,请使用罗马尼亚语</target>
        </trans-unit>
        <trans-unit id="631c312eb9e58b6681dbd0404f966e48161ad5be" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Romansh</source>
          <target state="translated">过时,请使用罗马字</target>
        </trans-unit>
        <trans-unit id="f1d6ec2cba377ca839f8d0319e22054341e2efbd" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Rundi</source>
          <target state="translated">过时,请使用Rundi</target>
        </trans-unit>
        <trans-unit id="2b5f6472f178dc5c562335121461ec9c54b95f97" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Serbian</source>
          <target state="translated">过时,请使用塞尔维亚语</target>
        </trans-unit>
        <trans-unit id="c3622b3f40bd9d783777119d4d1919f9d42671d3" translate="yes" xml:space="preserve">
          <source>Obsolete, please use SouthKorea</source>
          <target state="translated">过时,请使用南朝鲜。</target>
        </trans-unit>
        <trans-unit id="1d1a07b7ce475df352aa2224331a00f5c08b365f" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Syria</source>
          <target state="translated">过时,请使用叙利亚</target>
        </trans-unit>
        <trans-unit id="405b7c971de173fb7c7cbbde4e414f9e6f78de67" translate="yes" xml:space="preserve">
          <source>Obsolete, please use TokelauCountry</source>
          <target state="translated">过时,请使用托克劳国家。</target>
        </trans-unit>
        <trans-unit id="8fee2ea224ba53f58e94ad98c90e10c5d5366349" translate="yes" xml:space="preserve">
          <source>Obsolete, please use TuvaluCountry</source>
          <target state="translated">过时,请使用图瓦卢国家。</target>
        </trans-unit>
        <trans-unit id="91e80585316dcd90e53eff17afd2561970d07bd1" translate="yes" xml:space="preserve">
          <source>Obsolete, please use Uighur</source>
          <target state="translated">过时,请用维吾尔语</target>
        </trans-unit>
        <trans-unit id="c05733879e2e00081332ab4303d245049251051f" translate="yes" xml:space="preserve">
          <source>Obsolete. An integer specifying the number of copies. Use PPK_CopyCount instead.</source>
          <target state="translated">过时。一个整数,用于指定副本数量。使用PPK_CopyCount代替。</target>
        </trans-unit>
        <trans-unit id="7a5b66ae61a030c47ab12b2f0221016d2bd5445e" translate="yes" xml:space="preserve">
          <source>Obsolete. Use PE_FrameStatusBarItem instead.</source>
          <target state="translated">过时了,用PE_FrameStatusBarItem代替。用PE_FrameStatusBarItem代替。</target>
        </trans-unit>
        <trans-unit id="214d5b6c283a8d0e6e4f53ff8d7222ffa0d8e03e" translate="yes" xml:space="preserve">
          <source>Obsolete. Use PM_MdiSubWindowFrameWidth instead.</source>
          <target state="translated">过时了,用PM_MdiSubWindowFrameWidth代替。用PM_MdiSubWindowFrameWidth代替。</target>
        </trans-unit>
        <trans-unit id="79fb8305b897a9121d3571cf9f3ca69601017cef" translate="yes" xml:space="preserve">
          <source>Obsolete. Use PM_MdiSubWindowMinimizedWidth instead.</source>
          <target state="translated">过时了,用PM_MdiSubWindowMinimizedWidth代替。用PM_MdiSubWindowMinimizedWidth代替。</target>
        </trans-unit>
        <trans-unit id="81baebcc9e684d95840e47fc12b98c40734d57de" translate="yes" xml:space="preserve">
          <source>Obsolete. Use PPK_PaperSize instead.</source>
          <target state="translated">过时。使用PPK_PaperSize代替。</target>
        </trans-unit>
        <trans-unit id="f78c6b669563292a61139c7561d8dc5b8adbc604" translate="yes" xml:space="preserve">
          <source>Obsolete. Use SH_Slider_StopMouseOverSlider instead.</source>
          <target state="translated">过时。使用SH_Slider_StopMouseOverSlider代替。</target>
        </trans-unit>
        <trans-unit id="dfe119493aae9f23597894a4d012c4249abe1f9e" translate="yes" xml:space="preserve">
          <source>Obsolete. Use SpellCheckUnderlineStyle hint in QPlatformTheme instead.</source>
          <target state="translated">过时了,请使用QPlatformTheme中的SpellCheckUnderlineStyle提示。在QPlatformTheme中使用SpellCheckUnderlineStyle提示。</target>
        </trans-unit>
        <trans-unit id="29f3ef2bc31211e02b61235b0b8fe8e0c3f3ed6b" translate="yes" xml:space="preserve">
          <source>Obsoletes the action accessors of Qt 4.X.</source>
          <target state="translated">删除Qt 4.X中的动作存取器。</target>
        </trans-unit>
        <trans-unit id="19ebe07d722b6f7241198edb1da1a709cb2aa6e4" translate="yes" xml:space="preserve">
          <source>Obtaining a Desktop Widget</source>
          <target state="translated">获得一个桌面小工具</target>
        </trans-unit>
        <trans-unit id="e9dad526834de21f7dba68e0aa7bd1a4484997e9" translate="yes" xml:space="preserve">
          <source>Obtaining a QPlaceManager Instance</source>
          <target state="translated">获取QPlaceManager实例</target>
        </trans-unit>
        <trans-unit id="fd579e0f2327bfda15d734738c0594357b10bb01" translate="yes" xml:space="preserve">
          <source>Obviously if you just want to render a simple cube onscreen you may think this is overkill. However, as soon as you want to start doing slightly more complex scenes this comes in handy. For the common cases, Qt 3D provides some example framegraphs that are ready to use out of the box.</source>
          <target state="translated">显然,如果你只是想在屏幕上渲染一个简单的立方体,你可能会认为这是矫枉过正。然而,当你想开始做稍微复杂一点的场景时,这就派上用场了。对于常见的情况,Qt 3D提供了一些开箱即用的帧图示例。</target>
        </trans-unit>
        <trans-unit id="6f7e3706e45c1109047a51243fd474dbd63ed86d" translate="yes" xml:space="preserve">
          <source>Obviously, the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object declared in this example is very simple indeed, as it defines nothing more than a few property values. To create more useful objects, an object declaration may define many other types of attributes: these are discussed in the &lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QML Object Attributes&lt;/a&gt; documentation. Additionally, an object declaration may define child objects, as discussed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5794e8aaef4df676e90ec4ba52f306c4e4be8bf0" translate="yes" xml:space="preserve">
          <source>Obviously, the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object declared in this example is very simple indeed, as it defines nothing more than a few property values. To create more useful objects, an object declaration may define many other types of attributes: these are discussed in the &lt;a href=&quot;qtqml-syntax-objectattributes#&quot;&gt;QML Object Attributes&lt;/a&gt; documentation. Additionally, an object declaration may define child objects, as discussed below.</source>
          <target state="translated">显然，此示例中声明的&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;对象确实非常简单，因为它仅定义了几个属性值。为了创建更多有用的对象，对象声明可以定义许多其他类型的属性：这些在&lt;a href=&quot;qtqml-syntax-objectattributes#&quot;&gt;QML对象属性&lt;/a&gt;文档中进行了讨论。此外，对象声明可以定义子对象，如下所述。</target>
        </trans-unit>
        <trans-unit id="7de031c038bfc07c9211f623862c607d8ce2ceb2" translate="yes" xml:space="preserve">
          <source>Occasionally, there isn't such an event-specific function, or the event-specific function isn't sufficient. The most common example involves Tab key presses. Normally, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; intercepts these to move the keyboard focus, but a few widgets need the Tab key for themselves.</source>
          <target state="translated">有时，没有此类特定于事件的功能，或者特定于事件的功能不足。最常见的示例涉及Tab键的按下。通常，&lt;a href=&quot;qwidget&quot;&gt;QWidget会&lt;/a&gt;拦截这些以移动键盘焦点，但是一些小部件需要自己使用Tab键。</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="006ddfd33a63722690d4c6b3c3135a3cf67e75f1" translate="yes" xml:space="preserve">
          <source>October (9)</source>
          <target state="translated">10月(9)</target>
        </trans-unit>
        <trans-unit id="ee1aa86865e42a6f5fe2b3d0dce31a842ab7d9d1" translate="yes" xml:space="preserve">
          <source>Odd-even fill rule.</source>
          <target state="translated">奇偶填充规则。</target>
        </trans-unit>
        <trans-unit id="5a2656ce3572fd6f14dc4d342e513795f4ff9a0a" translate="yes" xml:space="preserve">
          <source>Of course the action also needs a way to be triggered. &lt;a href=&quot;qaccessibleactioninterface#doAction&quot;&gt;doAction()&lt;/a&gt; should invoke the action as advertised by name and description.</source>
          <target state="translated">当然，该动作也需要一种触发方式。&lt;a href=&quot;qaccessibleactioninterface#doAction&quot;&gt;doAction（）&lt;/a&gt;应该调用名称和描述所宣传的操作。</target>
        </trans-unit>
        <trans-unit id="539d1ecde8cdd93d82e55c70db69b2f9d0111055" translate="yes" xml:space="preserve">
          <source>Of course, for this case we could have simply used &lt;a href=&quot;qmimedata#setImageData&quot;&gt;setImageData()&lt;/a&gt; instead to supply image data in a variety of formats:</source>
          <target state="translated">当然，对于这种情况，我们可以简单地使用&lt;a href=&quot;qmimedata#setImageData&quot;&gt;setImageData（）&lt;/a&gt;来提供各种格式的图像数据：</target>
        </trans-unit>
        <trans-unit id="6b2dbf2d303311c5d81f16daba5d932f6b707a9b" translate="yes" xml:space="preserve">
          <source>Of course, in this case, you could (and probably should) have declared &lt;code&gt;s&lt;/code&gt; as &lt;code&gt;const&lt;/code&gt; in the first place:</source>
          <target state="translated">当然，在这种情况下，您可以（可能应该）首先将 &lt;code&gt;s&lt;/code&gt; 声明为 &lt;code&gt;const&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8e698c91a3434a1208848e40d29b43e559271ac6" translate="yes" xml:space="preserve">
          <source>Of course, it is possible to specify more than one file in the &lt;code&gt;generate&lt;/code&gt; or &lt;code&gt;register&lt;/code&gt; section, so any number of compressed help files can be generated and registered in one go.</source>
          <target state="translated">当然，可以在&amp;ldquo; &lt;code&gt;generate&lt;/code&gt; 或 &lt;code&gt;register&lt;/code&gt; 部分中指定多个文件，因此可以一次性生成和注册任意数量的压缩帮助文件。</target>
        </trans-unit>
        <trans-unit id="d1cdbb36314a4a563bd95617e218b9fe7a8b8388" translate="yes" xml:space="preserve">
          <source>Of the list above, only the 32-bit- and pointer-sized instantiations are guaranteed to work on all platforms. Support for other sizes depends on the compiler and processor architecture the code is being compiled for. To test whether the other types are supported, check the macro &lt;code&gt;Q_ATOMIC_INT\e{nn}_IS_SUPPORTED&lt;/code&gt;, where &lt;code&gt;\e{nn}&lt;/code&gt; is the number of bits desired.</source>
          <target state="translated">在上面的列表中，只有32位和指针大小的实例可以保证在所有平台上都能工作。是否支持其他大小取决于要为其编译代码的编译器和处理器体系结构。要测试是否支持其他类型，请检查宏 &lt;code&gt;Q_ATOMIC_INT\e{nn}_IS_SUPPORTED&lt;/code&gt; ，其中 &lt;code&gt;\e{nn}&lt;/code&gt; 是所需的位数。</target>
        </trans-unit>
        <trans-unit id="cf30ca7a7191899f1004deabb699e242711ae17d" translate="yes" xml:space="preserve">
          <source>Of which module is this class a member ?</source>
          <target state="translated">这个类是哪个模块的成员?</target>
        </trans-unit>
        <trans-unit id="0a724efe8def6ee507dde02a8d5ad3ab0a91fb74" translate="yes" xml:space="preserve">
          <source>Of which module is this class a member?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61f18c6a55522accf7d2771b789abc3c13411d0" translate="yes" xml:space="preserve">
          <source>Off-screen image representation that can be used as a paint device</source>
          <target state="translated">屏幕外的图像表示,可以作为绘画设备使用。</target>
        </trans-unit>
        <trans-unit id="e71af008d7e5aa29d45aeff84d01efd0bd7d1718" translate="yes" xml:space="preserve">
          <source>Offers an API to access and modify QTextDocuments</source>
          <target state="translated">提供一个API来访问和修改QTextDocuments。</target>
        </trans-unit>
        <trans-unit id="ff4c946a3851841484bfe88da646bea6e5a5a750" translate="yes" xml:space="preserve">
          <source>Office paper material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5b4d5d08b2c4a1dd9ed75e0f01d5b0d8c6e227" translate="yes" xml:space="preserve">
          <source>Offline Installation</source>
          <target state="translated">离线安装</target>
        </trans-unit>
        <trans-unit id="f04dd3eb6e5b722524af07586142a6a5e22a05d2" translate="yes" xml:space="preserve">
          <source>Offline geocoding is supported.</source>
          <target state="translated">支持离线地理编码。</target>
        </trans-unit>
        <trans-unit id="e2b02b40206dadcaa999b070b1015221f9826829" translate="yes" xml:space="preserve">
          <source>Offline mapping is supported.</source>
          <target state="translated">支持离线映射。</target>
        </trans-unit>
        <trans-unit id="0f03171d3974527f420ac51feda38bf492bf0e7c" translate="yes" xml:space="preserve">
          <source>Offline navigation is supported.</source>
          <target state="translated">支持离线导航。</target>
        </trans-unit>
        <trans-unit id="4de115fa9165a74583fc9562660bb964a3f750b8" translate="yes" xml:space="preserve">
          <source>Offline places is supported.</source>
          <target state="translated">支持离线地方。</target>
        </trans-unit>
        <trans-unit id="1b3ad425580a2eef53462c2cf2e115d57798eec7" translate="yes" xml:space="preserve">
          <source>Offline routing is supported.</source>
          <target state="translated">支持离线路由。</target>
        </trans-unit>
        <trans-unit id="c91f5afa194bf86b3169bcf5c239573fb510e226" translate="yes" xml:space="preserve">
          <source>Offset of the emission map mask. Default is &lt;code&gt;Qt.vector3d(0, 0, 0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90db116c7b0ffc9c33b611e6e24d02b785766da5" translate="yes" xml:space="preserve">
          <source>Offset of the reflection map. Default is &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a4d688a6c48cc3dc2b288e36bf5b3636a47680" translate="yes" xml:space="preserve">
          <source>Offset of the roughness map. Default is &lt;code&gt;0.16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc62c6a6bdc8447e3e98a86b4a6c284573ceb44" translate="yes" xml:space="preserve">
          <source>OffsetData Struct</source>
          <target state="translated">偏移数据结构</target>
        </trans-unit>
        <trans-unit id="478b0ce81a8454b53cb8994943841aa6ee3577ce" translate="yes" xml:space="preserve">
          <source>OffsetData::abbreviation The abbreviation in effect at the datetime.</source>
          <target state="translated">OffsetData::abbreviation 在日期时间生效的缩写。</target>
        </trans-unit>
        <trans-unit id="809a2b71f3d6d907133331da1fcf794e18433002" translate="yes" xml:space="preserve">
          <source>OffsetData::atUtc The datetime of the offset data in UTC time.</source>
          <target state="translated">OffsetData::atUtc 以UTC时间为单位的偏移数据的日期时间。</target>
        </trans-unit>
        <trans-unit id="d51b4e24aef300f101d0666b301db6b53d8915a9" translate="yes" xml:space="preserve">
          <source>OffsetData::daylightTimeOffset The DST offset component of the total offset.</source>
          <target state="translated">OffsetData::daylightTimeOffset 总偏移量的DST偏移分量。</target>
        </trans-unit>
        <trans-unit id="b6a128d5c88c058a76a0bb3f99106b4d50940e3e" translate="yes" xml:space="preserve">
          <source>OffsetData::offsetFromUtc The total offset from UTC in effect at the datetime.</source>
          <target state="translated">OffsetData::offsetFromUtc 日期时间与UTC的总偏移量。</target>
        </trans-unit>
        <trans-unit id="5d8ebe0ff851df709200f23565e3b8c61bffe185" translate="yes" xml:space="preserve">
          <source>OffsetData::standardTimeOffset The standard time offset component of the total offset.</source>
          <target state="translated">OffsetData::standardTimeOffset 总偏移量的标准时间偏移分量。</target>
        </trans-unit>
        <trans-unit id="21e683ce4d08545b363ed41ad6d53878ec077e61" translate="yes" xml:space="preserve">
          <source>Offsets From UTC</source>
          <target state="translated">与世界协调时的偏移</target>
        </trans-unit>
        <trans-unit id="5db66a762da27792167b5e661317ef121ab59dcf" translate="yes" xml:space="preserve">
          <source>Offsets apply for horizontal center, vertical center, and baseline anchors.</source>
          <target state="translated">偏移量适用于水平中心、垂直中心和基线锚。</target>
        </trans-unit>
        <trans-unit id="083a5552133afe7c7b78d7e92bf25dc839408eb4" translate="yes" xml:space="preserve">
          <source>Often the item models will have a single role that contains information you want to map to multiple values. A typical example of this is a timestamp field when generating a bar graph with two time related axes, for example years and months. To enable mapping a single item model role to more than one data field, pattern matching and replacing mechanism is provided by item model proxies. You can also use this mechanism to reformat data even in one-to-one mapping cases.</source>
          <target state="translated">通常情况下,项目模型会有一个单一的角色,其中包含您想要映射到多个值的信息。一个典型的例子是在生成一个有两个时间相关轴的条形图时的时间戳字段,例如年和月。为了能够将一个项目模型角色映射到多个数据字段,项目模型代理提供了模式匹配和替换机制。即使在一对一的映射情况下,也可以使用该机制对数据进行重新格式化。</target>
        </trans-unit>
        <trans-unit id="07351a73c13b6ecf21ea7d8a4dde2b05e544964c" translate="yes" xml:space="preserve">
          <source>Often this is used to update status information.</source>
          <target state="translated">通常用于更新状态信息。</target>
        </trans-unit>
        <trans-unit id="f3ffa543d2ed458a9b9a43ff40cd280625f0a189" translate="yes" xml:space="preserve">
          <source>Often when dealing with items in a scene, it can be useful to map coordinates and arbitrary shapes from the scene to an item, from item to item, or from the view to the scene. For example, when you click your mouse in &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;'s viewport, you can ask the scene what item is under the cursor by calling &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;QGraphicsView::mapToScene&lt;/a&gt;(), followed by &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;QGraphicsScene::itemAt&lt;/a&gt;(). If you want to know where in the viewport an item is located, you can call &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;QGraphicsItem::mapToScene&lt;/a&gt;() on the item, then &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;QGraphicsView::mapFromScene&lt;/a&gt;() on the view. Finally, if you use want to find what items are inside a view ellipse, you can pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to mapToScene(), and then pass the mapped path to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;QGraphicsScene::items&lt;/a&gt;().</source>
          <target state="translated">通常，在处理场景中的项目时，将场景中的坐标和任意形状映射到项目，项目到项目或视图到场景会很有用。例如，当您在&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;的视口中单击鼠标时，可以通过调用&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;QGraphicsView :: mapToScene&lt;/a&gt;（），然后是&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;QGraphicsScene :: itemAt&lt;/a&gt;（）来询问场景光标下方是什么项目。如果你想知道在视口中的物品的位置，你可以调用&lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;的QGraphicsItem :: mapToScene&lt;/a&gt;的项目，则（）&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;的QGraphicsView :: mapFromScene&lt;/a&gt;的视图（）。最后，如果您想查找视图椭圆内的项，则可以将&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;传递给mapToScene（），然后将映射的路径传递给&lt;a href=&quot;qgraphicsscene#items&quot;&gt;QGraphicsScene :: items&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e9d4b48fe3693b0cdf78b8dc6d9851b89bb75ecc" translate="yes" xml:space="preserve">
          <source>Often when linking against a library, qmake relies on the underlying platform to know what other libraries this library links against, and lets the platform pull them in. In many cases, however, this is not sufficient. For example, when statically linking a library, no other libraries are linked to, and therefore no dependencies to those libraries are created. However, an application that later links against this library will need to know where to find the symbols that the static library will require. qmake attempts to keep track of the dependencies of a library, where appropriate, if you explicitly enable tracking.</source>
          <target state="translated">通常在链接一个库的时候,qmake会依靠底层平台来了解这个库所链接的其他库,并让平台把它们拉进来。然而,在很多情况下,这是不充分的。例如,当静态链接一个库时,不会链接到其他库,因此也不会创建这些库的依赖关系。然而,一个应用程序在以后链接到这个库时,需要知道在哪里可以找到静态库所需要的符号。如果你明确地启用了跟踪功能,qmake会在适当的时候尝试跟踪一个库的依赖关系。</target>
        </trans-unit>
        <trans-unit id="8113d33edda2a9347e8827e56055228866817309" translate="yes" xml:space="preserve">
          <source>Often, QML applications are prototyped with test data that is later replaced by real data sources from C++ plugins. The &lt;code&gt;qmlscene&lt;/code&gt; utility assists in this aspect by loading test data into the application context. It looks for a directory named &lt;code&gt;dummydata&lt;/code&gt; in the same directory as the target QML file, and loads the .qml files in that directory as QML objects and bind them to the root context as properties named after the files.</source>
          <target state="translated">通常，QML应用程序是使用测试数据进行原型设计的，后来又被来自C ++插件的真实数据源替换。通过将测试数据加载到应用程序上下文中， &lt;code&gt;qmlscene&lt;/code&gt; 实用程序在这方面提供了帮助。它在与目标QML文件相同的目录中查找一个名为 &lt;code&gt;dummydata&lt;/code&gt; 的目录，并将该目录中的.qml文件作为QML对象加载并将其绑定到根上下文，作为以文件命名的属性。</target>
        </trans-unit>
        <trans-unit id="2ff6652bbae9100b879243bc1708a5778f0cca77" translate="yes" xml:space="preserve">
          <source>Often, it is required to set a fill pattern similar to the styles in &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;. You can use the background-color property for &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::SolidPattern&lt;/a&gt;, &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::RadialGradientPattern&lt;/a&gt;, &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::LinearGradientPattern&lt;/a&gt; and &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::ConicalGradientPattern&lt;/a&gt;. The other patterns are easily achieved by creating a background image that contains the pattern.</source>
          <target state="translated">通常，需要设置类似于&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyle中&lt;/a&gt;的样式的填充模式。您可以对&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: SolidPattern&lt;/a&gt;，&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: &lt;/a&gt;RadialGradientPattern，&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: LinearGradientPattern&lt;/a&gt;和&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: ConicalGradientPattern&lt;/a&gt;使用background-color属性。通过创建包含图案的背景图像，可以轻松实现其他图案。</target>
        </trans-unit>
        <trans-unit id="eff7f785639780a987136b4902b533bccaf698b9" translate="yes" xml:space="preserve">
          <source>Often, the design of RPC is such that different clients are independent of each other: for instance, two clients can ask a mapping service for directions and get different results.</source>
          <target state="translated">通常情况下,RPC的设计是这样的,不同的客户端是相互独立的:例如,两个客户端可以向一个地图服务问路,并得到不同的结果。</target>
        </trans-unit>
        <trans-unit id="602ad5e704343341cb60cce74db092f1bad4f667" translate="yes" xml:space="preserve">
          <source>Often, the documentor knows which Qt module the link target is in. When the module name is known, use the module name as the</source>
          <target state="translated">通常情况下,文档人知道链接目标在哪个Qt模块中。当知道模块名称时,使用模块名称作为该模块的</target>
        </trans-unit>
        <trans-unit id="ce673dc82d88a7fb26299bc0da6bea8af09e995c" translate="yes" xml:space="preserve">
          <source>Older QNX SDP releases and other architectures may also work, but are not subject to regular builds and testing.</source>
          <target state="translated">较早的 QNX SDP 版本和其他架构也可以使用,但不需要定期进行构建和测试。</target>
        </trans-unit>
        <trans-unit id="4d8b1438569bf0c09e303aa88ebfe324ecdff0d2" translate="yes" xml:space="preserve">
          <source>OldiesMusic</source>
          <target state="translated">OldiesMusic</target>
        </trans-unit>
        <trans-unit id="f84e621732c7417e4b038431f9cda4dfbe6e1e1e" translate="yes" xml:space="preserve">
          <source>Omits adding the padding equal signs at the end of the encoded data.</source>
          <target state="translated">省略了在编码数据末尾添加填充等号。</target>
        </trans-unit>
        <trans-unit id="708c057c8ea1d7f4ab116e5d3cabcb22bb3a6b30" translate="yes" xml:space="preserve">
          <source>Omitting this import will allow you to have a QML environment without access to window system features.</source>
          <target state="translated">如果省略这个导入,就可以拥有一个不使用窗口系统功能的QML环境。</target>
        </trans-unit>
        <trans-unit id="beb53630cea57a3b4463541f0e611323d0c3c7de" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, if the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; is set after the application instance, the application will exit with &lt;a href=&quot;#qFatal&quot;&gt;qFatal&lt;/a&gt;(), and print a message that the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; should be set before the application instance.</source>
          <target state="translated">在&lt;a href=&quot;#macos&quot;&gt;macOS上&lt;/a&gt;，如果在应用程序实例之后设置了默认&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;，则应用程序将退出并带有&lt;a href=&quot;#qFatal&quot;&gt;qFatal&lt;/a&gt;（），并显示一条消息，&lt;a href=&quot;qsurfaceformat&quot;&gt;指出&lt;/a&gt;应在应用程序实例之前设置默认QSurfaceFormat。</target>
        </trans-unit>
        <trans-unit id="48983f7907a89cb00fd4a0e1da0a76bd00c7750e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, the following are required:</source>
          <target state="translated">在&lt;a href=&quot;#macos&quot;&gt;macOS上&lt;/a&gt;，需要满足以下条件：</target>
        </trans-unit>
        <trans-unit id="5f8f3bcad2004aa59e2b7948d34aca8342d16877" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, there are no special requirements for enabling sandbox support.</source>
          <target state="translated">在&lt;a href=&quot;#macos&quot;&gt;macOS上&lt;/a&gt;，启用沙盒支持没有特殊要求。</target>
        </trans-unit>
        <trans-unit id="02407378beec6ff1f9fd53476003148fce3032f0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;MacOS&lt;/a&gt; the color dialog is only allowed to be non-modal.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;MacOS上&lt;/a&gt;，只允许颜色对话框为非模态对话框。</target>
        </trans-unit>
        <trans-unit id="896e5aeb9f74a7eae8da5b7aefbd0e6400cc7a1c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; adds a fullscreen button.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;添加了全屏按钮。</target>
        </trans-unit>
        <trans-unit id="1263f61e81dd5282840aff4a8e24fd1f82c20e3b" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; adds a tool bar button (i.e., the oblong button that is on the top right of windows that have toolbars).</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上，&lt;/a&gt;添加了一个工具栏按钮（即，具有工具栏的窗口右上方的长方形按钮）。</target>
        </trans-unit>
        <trans-unit id="fe348f0673364ee4617b20e1f55989c2b3f17704" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this function compares according the &quot;Order for sorted lists&quot; setting in the International preferences panel.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，此功能根据&amp;ldquo;国际首选项&amp;rdquo;面板中的&amp;ldquo;排序列表的顺序&amp;rdquo;设置进行比较。</target>
        </trans-unit>
        <trans-unit id="b97b0a04a3472cc7c0aa2fab68d1ec5936119928" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this returns the proper localized name for a bundle if the path &lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;(). On all other platforms an empty &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is returned.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，如果路径为&lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;（），则此方法将为包返回正确的本地化名称。在所有其他平台上，将返回一个空的&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bacab286a6bc6c27c2d11a36406a4fc8b1f9dba" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this will point to the directory actually containing the executable, which may be inside an application bundle (if the application is bundled).</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，这将指向实际包含可执行文件的目录，该目录可能位于应用程序捆绑包内（如果捆绑了应用程序）。</target>
        </trans-unit>
        <trans-unit id="74fca3806b524f89c61474a23c98de0edc165b5e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;() will return some extra keys for global settings that apply to all applications. These keys can be read using &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;() but cannot be changed, only shadowed. Calling &lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;(false) will hide these global settings.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，&lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;（）将为适用于所有应用程序的全局设置返回一些额外的键。可以使用&lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;（）读取这些键，但是不能更改它们，只能对其进行阴影处理。调用&lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;（false）将隐藏这些全局设置。</target>
        </trans-unit>
        <trans-unit id="a9784bd0835cdc1d60a8d6be41cf3fae4c475ec0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, the CFPreferences API used by &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; expects Internet domain names rather than organization names. To provide a uniform API, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; derives a fake domain name from the organization name (unless the organization name already is a domain name, e.g. OpenOffice.org). The algorithm appends &quot;.com&quot; to the company name and replaces spaces and other illegal characters with hyphens. If you want to specify a different domain name, call &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication::setOrganizationDomain&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication::setOrganizationName&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication::setApplicationName&lt;/a&gt;() in your &lt;code&gt;main()&lt;/code&gt; function and then use the default &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor. Another solution is to use preprocessor directives, for example:</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;的MacOS&lt;/a&gt;和iOS，所使用的API CFPreferences &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;预计互联网域名，而不是组织名称。为了提供统一的API，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;从组织名称中派生了一个假域名（除非组织名称已经是域名，例如OpenOffice.org）。该算法在公司名称后附加&amp;ldquo; .com&amp;rdquo;，并用连字符替换空格和其他非法字符。如果要指定其他域名，请在 &lt;code&gt;main()&lt;/code&gt; 函数中调用&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication :: setOrganizationDomain&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication :: setOrganizationName&lt;/a&gt;（）和&lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication :: setApplicationName&lt;/a&gt;（），然后使用默认的&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;构造函数。另一种解决方案是使用预处理器指令，例如：</target>
        </trans-unit>
        <trans-unit id="da0aaa820fd6ef22793ef435bf386f39ba1162e8" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, this function compares according the &quot;Order for sorted lists&quot; setting in the International prefereces panel.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，此功能根据&amp;ldquo;国际首选&amp;rdquo;面板中的&amp;ldquo;排序列表的顺序&amp;rdquo;设置进行比较。</target>
        </trans-unit>
        <trans-unit id="571535e6d5a4810b87bbb8adfbfdb99e81578b79" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, you can access property list &lt;code&gt;.plist&lt;/code&gt; files by passing &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS上，您可以通过传递&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat&lt;/a&gt;作为第二个参数来访问属性列表 &lt;code&gt;.plist&lt;/code&gt; 文件。例如：</target>
        </trans-unit>
        <trans-unit id="dd67470be80f5cf6282fa567bbbecb7e060ec1a1" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and on certain Linux desktop environments such as Ubuntu Unity, &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; is a wrapper for using the system-wide menu bar. If you have multiple menu bars in one dialog the outermost menu bar (normally inside a widget with widget flag &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;) will be used for the system-wide menu bar.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和某些Linux桌面环境（例如Ubuntu Unity）上，&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;是使用系统范围菜单栏的包装。如果一个对话框中有多个菜单栏，则最外面的菜单栏（通常在带有窗口小部件标记&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window的窗口&lt;/a&gt;小部件内）将用作系统范围的菜单栏。</target>
        </trans-unit>
        <trans-unit id="50371ff4facf12b43ac86104b79a75268fc089a3" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and with Qt version 4.3 or higher, clipboard changes made by other applications will only be detected when the application is activated.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和Qt版本4.3或更高版本上，仅在激活应用程序后才能检测到其他应用程序所做的剪贴板更改。</target>
        </trans-unit>
        <trans-unit id="e6ccdce7fdcb9c3206b9165c144f45728d52799a" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; by default, Qt swaps the Control and Meta (Command) keys (i.e., whenever Control is pressed, Qt sends Meta, and whenever Meta is pressed Control is sent). When this attribute is true, Qt will not do the flip. &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::StandardKey&lt;/a&gt; will also flip accordingly (i.e., &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::Copy&lt;/a&gt; will be Command+C on the keyboard regardless of the value set, though what is output for &lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence::toString&lt;/a&gt;() will be different).</source>
          <target state="translated">默认情况下，在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，Qt会交换Control和Meta（命令）键（即，每当按下Control时，Qt发送Meta，每当按下Meta时发送Control）。当此属性为true时，Qt将不执行翻转。&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: StandardKey&lt;/a&gt;也将相应地翻转（即，无论设置了什么值，&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: Copy&lt;/a&gt;将在键盘上为Command + C，尽管&lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence :: toString&lt;/a&gt;（）的输出将不同）。</target>
        </trans-unit>
        <trans-unit id="bffe222338b643c2477ba996114f1133f75cfd9c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; only, if there is exactly one button with the role &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox::RejectRole&lt;/a&gt;, it is made the escape button.</source>
          <target state="translated">仅在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，如果仅存在一个角色为&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox :: RejectRole&lt;/a&gt;的按钮，则将其设置为转义按钮。</target>
        </trans-unit>
        <trans-unit id="f19cde677c2916be9dcaf95716c315a18f596126" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; versions 10.2 and 10.3, these files are used by default:</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;版本10.2和10.3上，默认情况下使用以下文件：</target>
        </trans-unit>
        <trans-unit id="137ab3c697e78f6f2e6deec928018a72318cf267" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;,</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="a2ba4249a4d1704d0e563fdfe0da86c2b5ffcda0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, data goes to</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，数据转到</target>
        </trans-unit>
        <trans-unit id="1cf94bbce32ce9a9a1f88a2545fed9e5441426cd" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，如果</target>
        </trans-unit>
        <trans-unit id="e02d7a3a20669ba308c919d34f684f48c01488d1" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if the modality is set to &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; and the message box has a parent, then the message box will be a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;, otherwise the message box will be a standard dialog.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，如果模态设置为&lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt :: WindowModal&lt;/a&gt;并且消息框具有父级，则消息框将为&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;，否则消息框将为标准对话框。</target>
        </trans-unit>
        <trans-unit id="0881ce6136c22ae57b7049c765ec8e08e3b2c3f0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if you want your message box to appear as a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; of its</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;Mac系统&lt;/a&gt;，如果你希望你的消息框显示为&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt的::表&lt;/a&gt;的其</target>
        </trans-unit>
        <trans-unit id="bdd25851047c8427f1ea42edfa248f6d340c43f9" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is not possible to unpair a device. If Unpaired is requested, &lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;pairingFinished&lt;/a&gt;() is immediately emitted although the device remains paired. It is possible to request the pairing for a previously unpaired device. In addition &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt; has the same behavior as &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，无法取消配对设备。如果请求&lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;取消&lt;/a&gt;配对，则尽管设备保持配对状态，但会立即发出pairingFinished（）。可以为先前未配对的设备请求配对。此外，&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt;具有与&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;相同的行为。</target>
        </trans-unit>
        <trans-unit id="97ccb6feb705e423758172c8ff7ae512c93b6598" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, permissions to access settings not belonging to the current user (i.e. &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;) have changed with 10.7 (Lion). Prior to that version, users having admin rights could access these. For 10.7 and 10.8 (Mountain Lion), only root can. However, 10.9 (Mavericks) changes that rule again but only for the native format (plist files).</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，使用10.7（Lion）更改了不属于当前用户（即&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;）的访问设置的权限。在该版本之前，具有管理员权限的用户可以访问这些权限。对于10.7和10.8（Mountain Lion），只有root可以。但是，10.9（Mavericks）再次更改了该规则，但仅适用于本机格式（plist文件）。</target>
        </trans-unit>
        <trans-unit id="c988eedd182f7aa69e779c11100a56d0e5217c5e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, security flags are not supported and will be ignored.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，不支持安全标志，安全标志将被忽略。</target>
        </trans-unit>
        <trans-unit id="3daff32b3d70038ff27a9fff6456ce23c43ffd09" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, show the tool window even when the application is not active. By default, all tool windows are hidden when the application is inactive.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，即使应用程序未激活也显示工具窗口。默认情况下，当应用程序处于非活动状态时，所有工具窗口都是隐藏的。</target>
        </trans-unit>
        <trans-unit id="41bb25290e5ced6d2e4655900e8268895af65ec7" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the Up/Down key bindings for Home/End are explicitly disabled. If you want such bindings (on any platform), you will need to construct them in QML.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，显式禁用Home / End的向上/向下键绑定。如果您想要这样的绑定（在任何平台上），则需要在QML中构造它们。</target>
        </trans-unit>
        <trans-unit id="d9360f7e65dc3917d81977d44c9e83bb1515131d" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the about box is popped up as a modeless window; on other platforms, it is currently application modal.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，about框作为无模式窗口弹出；在其他平台上，它目前是应用程序模式。</target>
        </trans-unit>
        <trans-unit id="ab3457bf26c7bbccfc755f084a6a734e19ac4bdd" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the string returned resembles the sequence that is shown in the menu bar if</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，如果出现以下情况，则返回的字符串类似于菜单栏中显示的顺序</target>
        </trans-unit>
        <trans-unit id="3c209eddec42f62fe0b0847af7729ce53a32e681" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the threaded render loop is not supported when building with XCode 10 (10.14 SDK) or later, since this opts in to layer-backed views on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 10.14. You can build with Xcode 9 (10.13 SDK) to opt out of layer-backing, in which case the threaded render loop is available and used by default.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，使用XCode 10（10.14 SDK）或更高版本进行构建时不支持线程渲染循环，因为这会选择在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 10.14 上使用基于层的视图。您可以使用Xcode 9（10.13 SDK）进行构建，以选择不支持层支持，在这种情况下，线程渲染循环可用并且默认情况下使用。</target>
        </trans-unit>
        <trans-unit id="20c8c82ed4737ad355dc66de46b9c968eba39f83" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, there is a difference between a window and view; normally expressed as widgets in Qt. Qt makes assumptions about its parent-child hierarchy that make it complex to put an arbitrary Qt widget into a hierarchy of &quot;normal&quot; views from Apple frameworks. &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt; bridges the gap between views and windows and makes it possible to put a hierarchy of Qt widgets into a non-Qt window or view.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，窗口和视图之间是有区别的。通常表示为Qt中的小部件。Qt对其父子层次进行了假设，这使得将任意Qt小部件放入来自Apple框架的&amp;ldquo;正常&amp;rdquo;视图层次中变得很复杂。&lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt;弥合了视图和窗口之间的鸿沟，并可以将Qt小部件的层次结构放入非Qt窗口或视图中。</target>
        </trans-unit>
        <trans-unit id="d4e9e1a6e0bd01c2b3df3d1e521de78fd87e87fc" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this corresponds to the Command keys.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，这对应于Command键。</target>
        </trans-unit>
        <trans-unit id="a03ef9a5a6ca2b6c7189ec951ef3efa94d47d173" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this corresponds to the Control keys. On Windows keyboards, this key is mapped to the Windows key.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，这对应于Control键。在Windows键盘上，此键映射到Windows键。</target>
        </trans-unit>
        <trans-unit id="0315922804130991e6d6ee4a53830a731f5ef05e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this flag is always set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，此标志始终设置为&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Secure&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17ab0291187163bb381d29fb4917bd52100ce9ba" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this function will ignore the Proxy Auto Configuration settings, since it cannot execute the associated ECMAScript code.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，此功能将忽略Proxy Auto Configuration设置，因为它无法执行关联的ECMAScript代码。</target>
        </trans-unit>
        <trans-unit id="99de586dbee9328e2ad3dc83f95209b0bbbca885" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this function will obtain the proxy settings using the SystemConfiguration framework from Apple. It will apply the FTP, HTTP and HTTPS proxy configurations for queries that contain the protocol tag &quot;ftp&quot;, &quot;http&quot; and &quot;https&quot;, respectively. If the SOCKS proxy is enabled in that configuration, this function will use the SOCKS server for all queries. If SOCKS isn't enabled, it will use the HTTPS proxy for all TcpSocket and UrlRequest queries.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，此功能将使用Apple的SystemConfiguration框架获取代理设置。它将对分别包含协议标签&amp;ldquo; ftp&amp;rdquo;，&amp;ldquo; http&amp;rdquo;和&amp;ldquo; https&amp;rdquo;的查询应用FTP，HTTP和HTTPS代理配置。如果在该配置中启用了SOCKS代理，则此功能将对所有查询使用SOCKS服务器。如果未启用SOCKS，它将对所有TcpSocket和UrlRequest查询使用HTTPS代理。</target>
        </trans-unit>
        <trans-unit id="9bd0075037d9af00366805910b74ee7b22c148a6" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this is currenly converted to a NSMenu, so the aboutToHide() signal is not emitted.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，当前将其转换为NSMenu，因此不会发出aboutToHide（）信号。</target>
        </trans-unit>
        <trans-unit id="3e9b8a514ee8a5e1aefdd8de972ff8cbfed33d69" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this value is ignored as the platform does not permit access to the security parameter of the socket. By default the platform prefers secure/encrypted connections though and therefore this function always returns &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，由于平台不允许访问套接字的安全性参数，因此将忽略此值。默认情况下，平台首选安全/加密连接，因此此函数始终返回&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Secure&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d46bca2f6d20f99c43e27ea2a02a87e7f1ccd8f5" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this works more at the application level and will cause the application icon to bounce in the dock.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，这在应用程序级别更有效，并且会导致应用程序图标在扩展坞中弹跳。</target>
        </trans-unit>
        <trans-unit id="ed641e37d6e60c795f761bd151b9333173ad7a4c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;/iOS/tvOS CoreBluetooth does not expose/accept hardware addresses for LE devices; instead developers are supposed to use unique 128-bit UUIDs, generated by CoreBluetooth. These UUIDS will stay constant for the same central &amp;lt;-&amp;gt; peripheral pair and we use them when connecting to a remote device. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt;, this value will always be the one passed in when the controller object was created. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt;, this value is invalid.</source>
          <target state="translated">在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; / iOS / tvOS上，CoreBluetooth不公开/接受LE设备的硬件地址；相反，开发人员应该使用由CoreBluetooth生成的唯一的128位UUID。这些UUIDS对于同一中央&amp;lt;-&amp;gt;外设对将保持不变，我们在连接到远程设备时会使用它们。对于&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole中&lt;/a&gt;的控制器，此值将始终是创建控制器对象时传入的值。对于&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole中&lt;/a&gt;的控制器，此值无效。</target>
        </trans-unit>
        <trans-unit id="3d1fc5e449dc389fccc7ea9794a709d546ef66a0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverEnter&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(-1, -1).</source>
          <target state="translated">在&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverEnter&lt;/a&gt;事件上，此位置将始终为&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;（-1，-1）。</target>
        </trans-unit>
        <trans-unit id="eca3159a31c71a6096451f0020afb882ea28272e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverEnter&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(-1, -1).</source>
          <target state="translated">在&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverEnter&lt;/a&gt;事件上，此位置将始终为&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;（-1，-1）。</target>
        </trans-unit>
        <trans-unit id="5be8cee74ee586a968e595661b0504acbb74fb12" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverLeave&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(-1, -1).</source>
          <target state="translated">在&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverLeave&lt;/a&gt;事件上，此位置将始终为&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;（-1，-1）。</target>
        </trans-unit>
        <trans-unit id="d6065b3aece372537d4f0991300b9b49a9d7091a" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverLeave&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(-1, -1).</source>
          <target state="translated">在&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverLeave&lt;/a&gt;事件上，此位置将始终为&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;（-1，-1）。</target>
        </trans-unit>
        <trans-unit id="274f958c0eae3155ea8914ca95a23815e0090326" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt;, depending on how Qt WebEngine is configured at build time, there are two possibilities how spellchecking data is found:</source>
          <target state="translated">在&lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS上&lt;/a&gt;，根据构建时Qt WebEngine的配置方式，有两种可能性可以找到拼写检查数据：</target>
        </trans-unit>
        <trans-unit id="312cfb23402492c9dba9019443c70a3da3229225" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;, the default value is the value of the environment variable &lt;code&gt;UCRTVERSION&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT上&lt;/a&gt;，默认值为环境变量 &lt;code&gt;UCRTVERSION&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="5248dab8a678e7827d8faf7dd52bc2a892f37839" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;, this isn't relevant because the backend there always uses a composition swapchain which is associated with the ISwapChainPanel that backs &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; on that platform.</source>
          <target state="translated">在&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT上&lt;/a&gt;，这无关紧要，因为那里的后端始终使用与该平台上支持&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;的ISwapChainPanel关联的合成交换链。</target>
        </trans-unit>
        <trans-unit id="0e6478c9d4b1aea6bb2f93a9091144157062c962" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; (version 5.46 or above), a connection to a service can not be established using a port. Calling this function will emit a &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;.</source>
          <target state="translated">在Android和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;（5.46或更高版本）上，无法使用端口建立与服务的连接。调用此函数将发出&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa0bc4d8e5d48c5512bb81f57e44159d847bb87e" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; (version 5.46 or above), a connection to a service can not be established using a port. Calling this function will emit a &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815f65d23f664d13f8648829ba0d4205930d38fa" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is not possible to retrieve a list of connected devices. It is only possible to listen to (dis)connect changes. For convenience, this class monitors all connect and disconnect events since its instanciation and returns the current list when calling this function. Therefore it is possible that this function returns an empty list shortly after creating an instance.</source>
          <target state="translated">在Android和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，无法检索已连接设备的列表。只能收听（取消）连接更改。为方便起见，此类监视自实例化以来的所有连接和断开事件，并在调用此函数时返回当前列表。因此，此函数有可能在创建实例后不久返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="19265de97bfc16b2f9ea0375c004e5540a968f5f" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this feature is not supported and returns 0.</source>
          <target state="translated">在Android和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，不支持此功能，并返回0。</target>
        </trans-unit>
        <trans-unit id="856613fd1b6f579b13b8d57c43c2bf1969feaf49" translate="yes" xml:space="preserve">
          <source>On Android and macOS, it is not possible to retrieve a list of connected devices. It is only possible to listen to (dis)connect changes. For convenience, this class monitors all connect and disconnect events since its instanciation and returns the current list when calling this function. Therefore it is possible that this function returns an empty list shortly after creating an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cbf326052fa8032e9e9507bfd6093a8b8234e7" translate="yes" xml:space="preserve">
          <source>On Android and macOS, this feature is not supported and returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fcd2d9c70d71102c353c1cb82e59375e7f08d8" translate="yes" xml:space="preserve">
          <source>On Android, Vulkan headers were added in API level 24 of the NDK.</source>
          <target state="translated">在Android上,在NDK的API第24级中加入了Vulkan头文件。</target>
        </trans-unit>
        <trans-unit id="be4db8b98b4f6164235f4d89c54546ee114c1c59" translate="yes" xml:space="preserve">
          <source>On Android, apps are distributed in packages called</source>
          <target state="translated">在安卓系统中,应用程序是以名为</target>
        </trans-unit>
        <trans-unit id="08898b8735cdaec5447779b90e5ed1d5212126a2" translate="yes" xml:space="preserve">
          <source>On Android, apps are distributed to devices as &lt;b&gt;APK&lt;/b&gt; packages. For distributing apps in Google Play, a different format called &lt;b&gt;AAB&lt;/b&gt; is used instead. For more information, see &lt;a href=&quot;android-publishing-to-googleplay&quot;&gt;Publishing to Google Play&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc9aae4c83116bcdc68d109344ce9e60a8f4125" translate="yes" xml:space="preserve">
          <source>On Android, only RFCOMM connections are possible. This function ignores any socket protocol indicator and assumes RFCOMM.</source>
          <target state="translated">在Android上,只有RFCOMM连接是可能的。这个功能忽略任何套接字协议指示器,并假定为RFCOMM。</target>
        </trans-unit>
        <trans-unit id="770e981e9a4839b09d200fe33ae180ff79808d01" translate="yes" xml:space="preserve">
          <source>On Android, the local name cannot be changed. Android always uses the device name. If this local name is not empty, the Android implementation includes the device name in the advertisement packet; otherwise the device name is omitted from the advertisement packet.</source>
          <target state="translated">在Android上,本地名称不能更改。Android总是使用设备名称。如果这个本地名称不为空,Android的实现就会在广告包中包含设备名称;否则,设备名称就会从广告包中省略。</target>
        </trans-unit>
        <trans-unit id="f65b58aaa1b281afed9ed3918396f4b1bdf264b1" translate="yes" xml:space="preserve">
          <source>On Android, the service connection can directly be established using the UUID of the remote service. Therefore the platform does not require the &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState&lt;/a&gt; and &lt;a href=&quot;qbluetoothsocket#socketType&quot;&gt;socketType&lt;/a&gt;() is always set to &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::RfcommProtocol&lt;/a&gt;.</source>
          <target state="translated">在Android上，可以使用远程服务的UUID直接建立服务连接。因此，平台不需要&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState，&lt;/a&gt;并且&lt;a href=&quot;qbluetoothsocket#socketType&quot;&gt;socketType&lt;/a&gt;（）始终设置为&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo :: RfcommProtocol&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d89c9874989e9b8b9d98b80e3b3a534396717417" translate="yes" xml:space="preserve">
          <source>On Android, this timeout is not adjustable and therefore ignored.</source>
          <target state="translated">在安卓系统上,这个超时时间是不可调整的,因此可以忽略。</target>
        </trans-unit>
        <trans-unit id="6416a86402f10d7bee16b446d89f7c5bff574c53" translate="yes" xml:space="preserve">
          <source>On Bluez this property is set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Authorization&lt;/a&gt; by default.</source>
          <target state="translated">在Bluez上，默认情况下将此属性设置为&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Authorization&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38be6ebf6ed6321d81be56cae6640824c62d19dc" translate="yes" xml:space="preserve">
          <source>On Embedded Linux and X11 platforms, parts of this class rely on code obtained under the following licenses:</source>
          <target state="translated">在Embedded Linux和X11平台上,该类的部分内容依赖于根据以下许可获得的代码。</target>
        </trans-unit>
        <trans-unit id="39517387790a4ddc25d1fee2b8ee49b79463ca57" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems that do not have their terminal sessions disabled, the behavior on a key press can be confusing as input event is processed by the Qt application and the tty. To overcome this, the following options are available:</source>
          <target state="translated">在没有禁用终端会话的嵌入式Linux系统上,由于输入事件是由Qt应用程序和tty处理的,因此按键的行为可能会很混乱。要克服这个问题,可以使用以下选项。</target>
        </trans-unit>
        <trans-unit id="ecdf72d25c9c90b4bc50cd384c795e20986e8959" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems that don't have their terminal sessions disabled, the behavior on a key press can be confusing, as the input event is processed by the Qt application and the tty. To overcome this, the following options are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1903a3af5f94e99f63f667d5b59e51dbaf4f5865" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems, there are multiple platform plugins that you can use: EGLFS, &lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;, DirectFB, or Wayland. However, the availability of these plugins depend on how Qt is configured.</source>
          <target state="translated">在嵌入式Linux系统上，可以使用多个平台插件：EGLFS，&lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;，DirectFB或Wayland。但是，这些插件的可用性取决于Qt的配置方式。</target>
        </trans-unit>
        <trans-unit id="98bec7ba4ddeace89ae6061646dac31811f0b50d" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems, there are multiple platform plugins that you can use: EGLFS, &lt;a href=&quot;embedded-linux#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;, DirectFB, or Wayland. However, the availability of these plugins depend on how Qt is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72b71796549861f9cc9c6ae3627134f48e74eed" translate="yes" xml:space="preserve">
          <source>On GPUs that use a tiled rendering architecture, which is common in mobile and embedded systems, it is recommended to set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d7dd25953d11e666864822cf6e9d7877cb7d94" translate="yes" xml:space="preserve">
          <source>On Linux systems, it will try to determine the distribution version and will return that. This is also done on Debian/kFreeBSD, so this function will return Debian version in that case.</source>
          <target state="translated">在 Linux 系统上,它会尝试确定发行版,并将其返回。在Debian/kFreeBSD上也是这样做的,所以在这种情况下,这个函数将返回Debian的版本。</target>
        </trans-unit>
        <trans-unit id="050fee7dfb12508ea2f91e1c95c371c4d9b0ee6e" translate="yes" xml:space="preserve">
          <source>On Linux, Clang or GCC version 5 or later is required. Supported configurations are &lt;code&gt;linux-g++&lt;/code&gt; and &lt;code&gt;linux-clang&lt;/code&gt;.</source>
          <target state="translated">在Linux上，需要Clang或GCC版本5或更高版本。支持的配置是 &lt;code&gt;linux-g++&lt;/code&gt; 和 &lt;code&gt;linux-clang&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f1e0f08920cbc420155221e187795a3a98c2467" translate="yes" xml:space="preserve">
          <source>On Linux, Clang or GCC version 5 or later is required. Supported configurations are &lt;code&gt;linux-g++&lt;/code&gt;, &lt;code&gt;linux-clang&lt;/code&gt; and &lt;code&gt;linux-clang-libc++&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6db7933f7885ae873ea9d6b85de74fc5c4be3e7" translate="yes" xml:space="preserve">
          <source>On Linux, Qt Bluetooth uses a separate executable, &lt;code&gt;sdpscanner&lt;/code&gt;, to integrate with the official Linux bluetooth protocol stack &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;.</source>
          <target state="translated">在Linux上，Qt Bluetooth使用单独的可执行文件 &lt;code&gt;sdpscanner&lt;/code&gt; 与官方Linux蓝牙协议栈&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;集成。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;在&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU通用公共许可证版本2&lt;/a&gt;下可用。</target>
        </trans-unit>
        <trans-unit id="ba73576bb4f5db5dc0dcd46e4a069ba3b32c13d3" translate="yes" xml:space="preserve">
          <source>On Linux, Qt Bluetooth uses a separate executable, &lt;code&gt;sdpscanner&lt;/code&gt;, to integrate with the official Linux bluetooth protocol stack &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;. &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b3f797e33b6ce2d5f62a1251736f6421be715d" translate="yes" xml:space="preserve">
          <source>On Linux, Windows and Apple platforms, this value is usually the time since the system boot, though it usually does not include the time the system has spent in sleep states.</source>
          <target state="translated">在Linux、Windows和苹果平台上,这个值通常是系统启动后的时间,不过它通常不包括系统在睡眠状态下的时间。</target>
        </trans-unit>
        <trans-unit id="2428c6d6d23ba5348e97fec794f179fe55c5cdc9" translate="yes" xml:space="preserve">
          <source>On Linux, note the following restrictions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9868f3840fcc2cfb72fa85ed6470a1c5286ad448" translate="yes" xml:space="preserve">
          <source>On Linux, retrieving the volume's label requires &lt;code&gt;udev&lt;/code&gt; to be present in the system.</source>
          <target state="translated">在Linux上，检索卷的标签要求 &lt;code&gt;udev&lt;/code&gt; 存在于系统中。</target>
        </trans-unit>
        <trans-unit id="860b940943efd67e5351c2fa69ea361b0a647f4f" translate="yes" xml:space="preserve">
          <source>On Linux, the</source>
          <target state="translated">在Linux上,</target>
        </trans-unit>
        <trans-unit id="48890158ae2cda54f400fa9db2242f01fbca64c4" translate="yes" xml:space="preserve">
          <source>On Linux, the kernel has to support the anonymous namespaces feature (kernel version &amp;gt;= 3.8) and seccomp-bpf feature (kernel version &amp;gt;= 3.5). Setuid sandboxes are not supported and are thus disabled.</source>
          <target state="translated">在Linux上，内核必须支持匿名名称空间功能（内核版本&amp;gt; = 3.8）和seccomp-bpf功能（内核版本&amp;gt; = 3.5）。不支持Setuid沙箱，因此已禁用。</target>
        </trans-unit>
        <trans-unit id="e18810d4ece678f4372cf474aca3fc209ebfc264" translate="yes" xml:space="preserve">
          <source>On Linux/&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; systems, it is not possible to connect to the same remote device using two instances of this class. The second call to this function may fail with an error. This limitation may be removed in future releases.</source>
          <target state="translated">在Linux / &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;系统上，无法使用此类的两个实例连接到同一远程设备。对该函数的第二次调用可能会因错误而失败。在将来的发行版中可能会删除此限制。</target>
        </trans-unit>
        <trans-unit id="bc99b7ade5b99b96dc5e8aa6f5075ac0269ab3bb" translate="yes" xml:space="preserve">
          <source>On Linux/&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; systems, it is not possible to connect to the same remote device using two instances of this class. The second call to this function may fail with an error. This limitation may be removed in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb10eaaa960fb4907555f096aef5bf9fa09f863" translate="yes" xml:space="preserve">
          <source>On Linux/X11, Windows and macOS, Qt provides support for session management. Sessions allow events to be propagated to processes, for example, to notify when a shutdown occurs. The process and applications can then perform any necessary operations such as save open documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc3d52902162d74f8ed313c5de739bb86f3a25d" translate="yes" xml:space="preserve">
          <source>On Linux:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be86cf8677a1438eaed02b537278783288f434af" translate="yes" xml:space="preserve">
          <source>On Mac, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;organizationDomain()&lt;/a&gt; as the organization if it's not an empty string; otherwise it uses organizationName(). On all other platforms, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses organizationName() as the organization.</source>
          <target state="translated">在Mac上，如果&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;不是空字符串，则使用&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;organizationDomain（）&lt;/a&gt;作为组织。否则，它使用organizationName（）。在所有其他平台上，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;使用organizationName（）作为组织。</target>
        </trans-unit>
        <trans-unit id="fdcac537267b374784eb9ce033e40b4e0eb5764c" translate="yes" xml:space="preserve">
          <source>On Mac, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses organizationDomain() as the organization if it's not an empty string; otherwise it uses &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;(). On all other platforms, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;() as the organization.</source>
          <target state="translated">在Mac上，如果&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;不是空字符串，则使用organizationDomain（）作为组织。否则，它使用&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;（）。在所有其他平台上，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;使用&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;（）作为组织。</target>
        </trans-unit>
        <trans-unit id="936548b28a7b4a6e49bd38e06c550258eed3eeba" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, mouse wheel usage is always handled by the widget that has keyboard focus. On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and X11, it's handled by the widget that gets other mouse events.</source>
          <target state="translated">在Microsoft Windows上，鼠标滚轮的使用始终由具有键盘焦点的小部件处理。在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和X11上，它由获取其他鼠标事件的小部件处理。</target>
        </trans-unit>
        <trans-unit id="fe3403df2fdcc4730139d60587156a4d721c186f" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, mouse wheel usage is always handled by the widget that has keyboard focus. On macOS and X11, it's handled by the widget that gets other mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104b5202331c5da26bf22f5bad018a37e0ceda3c" translate="yes" xml:space="preserve">
          <source>On UNIX (including Linux, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, and iOS), Qt will keep millisecond accuracy for Qt::PreciseTimer. For Qt::CoarseTimer, the interval will be adjusted up to 5% to align the timer with other timers that are expected to fire at or around the same time. The objective is to make most timers wake up at the same time, thereby reducing CPU wakeups and power consumption.</source>
          <target state="translated">在UNIX（包括Linux，&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS）上，Qt将保持Qt :: PreciseTimer的毫秒精度。对于Qt :: CoarseTimer，该间隔将调整至5％，以使该计时器与预期在同一时间或大约同一时间触发的其他计时器对齐。目的是使大多数计时器同时唤醒，从而减少CPU唤醒和功耗。</target>
        </trans-unit>
        <trans-unit id="4761363370402042cde54b98cc5a486ea3feabdc" translate="yes" xml:space="preserve">
          <source>On UNIX (including Linux, macOS, and iOS), Qt will keep millisecond accuracy for Qt::PreciseTimer. For Qt::CoarseTimer, the interval will be adjusted up to 5% to align the timer with other timers that are expected to fire at or around the same time. The objective is to make most timers wake up at the same time, thereby reducing CPU wakeups and power consumption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63d44de10b1980cb899a8990239749fb37f24ca" translate="yes" xml:space="preserve">
          <source>On Universal Windows Platform (UWP), the default value is the value of the environment variable &lt;code&gt;UCRTVERSION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6bc2903e79f45ee2f81d86c0a91d5d49c7139a" translate="yes" xml:space="preserve">
          <source>On Unix (including &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS), the symlink has the same &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() has the file it points to, because Unix handles symlinks transparently; similarly, opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; effectively opens the link's target. For example:</source>
          <target state="translated">在Unix（包括&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;和iOS）上，符号链接具有与其指向的文件相同的&lt;a href=&quot;qfileinfo#size&quot;&gt;大小&lt;/a&gt;（），因为Unix透明地处理符号链接。同样，使用&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;打开符号链接可有效打开链接的目标。例如：</target>
        </trans-unit>
        <trans-unit id="39c25dd694bf96255f18f2cb91fa793c5acdb2b7" translate="yes" xml:space="preserve">
          <source>On Unix (including macOS and iOS), the property getter functions in this class return the properties such as times and size of the target file, not the symlink, because Unix handles symlinks transparently. Opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; effectively opens the link's target. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6601c6c8c0ed07a385aac8cf7d5f6cad57fb84e" translate="yes" xml:space="preserve">
          <source>On Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; (replace &lt;code&gt;$SQLITE&lt;/code&gt; with the directory where &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; resides):</source>
          <target state="translated">在Unix和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;（将 &lt;code&gt;$SQLITE&lt;/code&gt; 替换为&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;所在的目录）：</target>
        </trans-unit>
        <trans-unit id="f60a02d3486206deb3ab1e6410ad148ada51fb30" translate="yes" xml:space="preserve">
          <source>On Unix and macOS (replace &lt;code&gt;$SQLITE&lt;/code&gt; with the directory where &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; resides):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17af98e38048982a6ae01200dfc2f8c351686df" translate="yes" xml:space="preserve">
          <source>On Unix filesystems, the root volume is a volume mounted on &lt;code&gt;/&lt;/code&gt;. On Windows, the root volume is the volume where the OS is installed.</source>
          <target state="translated">在Unix文件系统上，根卷是安装在 &lt;code&gt;/&lt;/code&gt; 上的卷。在Windows上，根卷是操作系统的安装卷。</target>
        </trans-unit>
        <trans-unit id="bace692e6aba923077fe382f0c0ab904a3051d37" translate="yes" xml:space="preserve">
          <source>On Unix systems this call returns the root ('/') volume; in Windows the volume where the operating system is installed.</source>
          <target state="translated">在Unix系统中,这个调用返回根目录('/')卷;在Windows系统中,返回安装操作系统的卷。</target>
        </trans-unit>
        <trans-unit id="fbccf7366e1baa7565e0b1f8d2ddc72d16e641ba" translate="yes" xml:space="preserve">
          <source>On Unix systems, a binary cache is used for more performance. This cache is generated by the command &quot;update-mime-database path&quot;, where path would be /opt/myapp/share/mime in the above example. Make sure to run this command when installing the MIME type definition file.</source>
          <target state="translated">在Unix系统中,为了提高性能,使用了二进制缓存。这个缓存由 &quot;update-mime-database path &quot;命令生成,在上面的例子中,路径是/opt/myapp/share/mime。在安装MIME类型定义文件时,一定要运行这个命令。</target>
        </trans-unit>
        <trans-unit id="e4cb0eaa6ed531dabf48c928b44a40335b561e57" translate="yes" xml:space="preserve">
          <source>On Unix systems, if the file format is &lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;, the following files are used by default:</source>
          <target state="translated">在Unix系统上，如果文件格式为&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;，则默认使用以下文件：</target>
        </trans-unit>
        <trans-unit id="93ba505e997dfa29c95903bafb91601da153ec19" translate="yes" xml:space="preserve">
          <source>On Unix systems, the variable names are case-sensitive. Note that the Unix environment allows both variable names and contents to contain arbitrary binary data (except for the NUL character). &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; will preserve such variables, but does not support manipulating variables whose names or values cannot be encoded by the current locale settings (see &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;).</source>
          <target state="translated">在Unix系统上，变量名称区分大小写。请注意，Unix环境允许变量名称和内容都包含任意二进制数据（NUL字符除外）。&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;将保留此类变量，但不支持处理其名称或值无法通过当前语言环境设置进行编码的变量（请参见&lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec :: codecForLocale&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="665e30919ca5deb2015c61b1722ba66c444b393a" translate="yes" xml:space="preserve">
          <source>On Unix systems, the variable names are case-sensitive. Note that the Unix environment allows both variable names and contents to contain arbitrary binary data (except for the NUL character). QProcessEnvironment will preserve such variables, but does not support manipulating variables whose names or values cannot be encoded by the current locale settings (see &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fd2ef57d776661880d860224f2b7e6a97d35df" translate="yes" xml:space="preserve">
          <source>On Unix the absolute path will always begin with the root, '/', directory. On Windows this will always begin 'D:/' where D is a drive letter, except for network shares that are not mapped to a drive letter, in which case the path will begin '//sharename/'.</source>
          <target state="translated">在Unix上,绝对路径总是以根目录'/'开始。在Windows上,绝对路径总是以'D:/'开头,其中D是一个驱动器字母,但没有映射到驱动器字母的网络共享除外,在这种情况下,路径将以'//sharename/'开头。</target>
        </trans-unit>
        <trans-unit id="1e3b98776696cf1f7c4fdcd2ef4da38ddb1d19f1" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; is set to</source>
          <target state="translated">在Unix上， &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; 设置为</target>
        </trans-unit>
        <trans-unit id="e112b2ed461033620dc39a7e6c6c0c114fe107ed" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/share&lt;/code&gt;, &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/config&lt;/code&gt;, and &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/cache&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b62d543e73f8db440c1c3ba2771570a56bf10a" translate="yes" xml:space="preserve">
          <source>On Unix, NativeFormat and IniFormat mean the same thing, except that the file extension is different (&lt;code&gt;.conf&lt;/code&gt; for NativeFormat, &lt;code&gt;.ini&lt;/code&gt; for IniFormat).</source>
          <target state="translated">在Unix上，NativeFormat和IniFormat的含义相同，不同之处在于文件扩展名不同（ &lt;code&gt;.conf&lt;/code&gt; 用于NativeFormat， &lt;code&gt;.ini&lt;/code&gt; 用于IniFormat）。</target>
        </trans-unit>
        <trans-unit id="dc950e9b8358b8d88c8e106325f9d8345417f694" translate="yes" xml:space="preserve">
          <source>On Unix, a boolean that describes whether Qt libraries and plugins were compiled with &lt;code&gt;-fvisibility=hidden&lt;/code&gt;. This means that only selected symbols are exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d890128146d13d56a5352b3c1af9b54f8e10e09" translate="yes" xml:space="preserve">
          <source>On Unix, at least two autotests (&lt;code&gt;tst_examples&lt;/code&gt; and &lt;code&gt;tst_gestures&lt;/code&gt;) require a window manager to be running. Therefore, if running these tests under a nested X-server, you must also run a window manager in that X-server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d867696c469d1f032513ef5bf449c98acfa7dae" translate="yes" xml:space="preserve">
          <source>On Unix, one can also run the tests on a nested or virtual X-server, such as Xephyr. For example, to run the entire set of tests on Xephyr, execute the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c58f46dccacecb57866673b0c94614f0721a76" translate="yes" xml:space="preserve">
          <source>On Unix, there are some special system files (e.g. in &lt;code&gt;/proc&lt;/code&gt;) for which &lt;a href=&quot;qfile#size&quot;&gt;size&lt;/a&gt;() will always return 0, yet you may still be able to read more data from such a file; the data is generated in direct response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(). In this case, however, you cannot use &lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;() to determine if there is more data to read (since &lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;() will return true for a file that claims to have size 0). Instead, you should either call &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), or call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() repeatedly until no more data can be read. The next example uses &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; to read &lt;code&gt;/proc/modules&lt;/code&gt; line by line:</source>
          <target state="translated">在Unix上，有一些特殊的系统文件（例如 &lt;code&gt;/proc&lt;/code&gt; 中的文件），对于这些文件，&lt;a href=&quot;qfile#size&quot;&gt;size&lt;/a&gt;（）总是返回0，但是您仍然可以从该文件中读取更多数据；数据是直接响应您调用&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）生成的。但是，在这种情况下，您不能使用&lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;（）来确定是否还有更多数据要读取（因为&lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;（）对于声称大小为0的文件将返回true）。相反，您应该&lt;a href=&quot;qiodevice#readAll&quot;&gt;重复&lt;/a&gt;调用readAll（），或重复调用&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）或&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（），直到无法读取更多数据为止。下一个示例使用&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;逐行读取 &lt;code&gt;/proc/modules&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0602921fc400588e0a70165d9faf3eaf62f0752d" translate="yes" xml:space="preserve">
          <source>On Unix, this function currently always returns the same as &lt;a href=&quot;qnetworkinterface#name&quot;&gt;name&lt;/a&gt;(), since Unix systems don't store a configuration for human-readable names.</source>
          <target state="translated">在Unix上，此函数当前始终返回与&lt;a href=&quot;qnetworkinterface#name&quot;&gt;name&lt;/a&gt;（）相同的名称，因为Unix系统不存储人类可读名称的配置。</target>
        </trans-unit>
        <trans-unit id="687c99b02f8e40a7be8b68d5fe13db95f6a22e8d" translate="yes" xml:space="preserve">
          <source>On Unix, this sets the executable flag.</source>
          <target state="translated">在Unix上,这将设置可执行标志。</target>
        </trans-unit>
        <trans-unit id="885d8dfdc058fa8af354259928c23010ca9ed6b1" translate="yes" xml:space="preserve">
          <source>On Unix-like platforms (including Linux, macOS and iOS), when Qt is linked with the ICU library (which it usually is), its locale-aware sorting is used. Otherwise, on macOS and iOS, &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;() compares according the &quot;Order for sorted lists&quot; setting in the International preferences panel. On other Unix-like systems without ICU, the comparison falls back to the system library's &lt;code&gt;strcoll()&lt;/code&gt;, falling back when it considers strings equal to QString's (locale-unaware) comparison, described above,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a6786599b2cdaef1671f8f5d1e3f31e3b9479c" translate="yes" xml:space="preserve">
          <source>On Unix/Linux Qt is configured to use the system locale settings by default. This can cause a conflict when using POSIX functions, for instance, when converting between data types such as floats and strings, since the notation may differ between locales. To get around this problem, call the POSIX function &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; right after initializing &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; or &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; to reset the locale that is used for number formatting to &quot;C&quot;-locale.</source>
          <target state="translated">在Unix / Linux上，Qt默认配置为使用系统区域设置。在使用POSIX函数时，例如在浮点数和字符串之类的数据类型之间进行转换时，这可能会导致冲突，因为在不同的语言环境中，符号可能会有所不同。要解决此问题，请在初始化&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;，&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;或&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;后立即调用POSIX函数 &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; 以将用于数字格式设置的语言环境重置为&amp;ldquo; C&amp;rdquo;语言环境。</target>
        </trans-unit>
        <trans-unit id="63e361f3477e8ef3ef3db54ce35541f29391ad75" translate="yes" xml:space="preserve">
          <source>On Unix/Linux Qt is configured to use the system locale settings by default. This can cause a conflict when using POSIX functions, for instance, when converting between data types such as floats and strings, since the notation may differ between locales. To get around this problem, call the POSIX function &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; right after initializing &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; or QCoreApplication to reset the locale that is used for number formatting to &quot;C&quot;-locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eee08701b37711b726bc5c326a520a7795b78a1" translate="yes" xml:space="preserve">
          <source>On Unix/Linux systems this is the path in the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable or &lt;code&gt;/tmp&lt;/code&gt; if &lt;code&gt;TMPDIR&lt;/code&gt; is not defined. On Windows this is usually the path in the &lt;code&gt;TEMP&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt; environment variable. The path returned by this method doesn't end with a directory separator unless it is the root directory (of a drive).</source>
          <target state="translated">在Unix / Linux系统上，如果未定义 &lt;code&gt;TMPDIR&lt;/code&gt; ,则这是 &lt;code&gt;TMPDIR&lt;/code&gt; 环境变量或 &lt;code&gt;/tmp&lt;/code&gt; 中的路径。在Windows上，这通常是 &lt;code&gt;TEMP&lt;/code&gt; 或 &lt;code&gt;TMP&lt;/code&gt; 环境变量中的路径。除非它是（驱动器的）根目录，否则此方法返回的路径不会以目录分隔符结尾。</target>
        </trans-unit>
        <trans-unit id="e3844b76c72de9814ba134528a2e98ebfade0de2" translate="yes" xml:space="preserve">
          <source>On Unix/X11, the normal behavior of the file dialog is to resolve and follow symlinks. For example, if &lt;code&gt;/usr/tmp&lt;/code&gt; is a symlink to &lt;code&gt;/var/tmp&lt;/code&gt;, the file dialog will change to &lt;code&gt;/var/tmp&lt;/code&gt; after entering &lt;code&gt;/usr/tmp&lt;/code&gt;. If</source>
          <target state="translated">在Unix / X11上，文件对话框的正常行为是解析并遵循符号链接。例如，如果 &lt;code&gt;/usr/tmp&lt;/code&gt; 是 &lt;code&gt;/var/tmp&lt;/code&gt; 的符号链接，则输入 &lt;code&gt;/usr/tmp&lt;/code&gt; 后，文件对话框将更改为 &lt;code&gt;/var/tmp&lt;/code&gt; / tmp。如果</target>
        </trans-unit>
        <trans-unit id="946affb9561bc980c61b450f36bafb68b8cc7412" translate="yes" xml:space="preserve">
          <source>On Unix/X11, the normal behavior of the file dialog is to resolve and follow symlinks. For example, if &lt;code&gt;/usr/tmp&lt;/code&gt; is a symlink to &lt;code&gt;/var/tmp&lt;/code&gt;, the file dialog will change to &lt;code&gt;/var/tmp&lt;/code&gt; after entering &lt;code&gt;/usr/tmp&lt;/code&gt;. The</source>
          <target state="translated">在Unix / X11上，文件对话框的正常行为是解析并遵循符号链接。例如，如果 &lt;code&gt;/usr/tmp&lt;/code&gt; 是 &lt;code&gt;/var/tmp&lt;/code&gt; 的符号链接，则输入 &lt;code&gt;/usr/tmp&lt;/code&gt; 后，文件对话框将更改为 &lt;code&gt;/var/tmp&lt;/code&gt; / tmp。的</target>
        </trans-unit>
        <trans-unit id="790549c0d3a3bfe5baf9fb5ced03f9d2ae73fd15" translate="yes" xml:space="preserve">
          <source>On WinRT, this isn't relevant because the backend there always uses a composition swapchain which is associated with the ISwapChainPanel that backs &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; on that platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8790ba2d042320ac0ff89cc6fbfd713e3f294b72" translate="yes" xml:space="preserve">
          <source>On Windows Vista and above grabbing a layered window, which is created by setting the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute, will not work. Instead grabbing the desktop widget should work.</source>
          <target state="translated">在Windows Vista及更高版本上，抓取通过设置&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_TranslucentBackground&lt;/a&gt;属性创建的分层窗口将不起作用。取而代之的是抓取桌面小部件。</target>
        </trans-unit>
        <trans-unit id="1d0e589073490d5159cfe11285c50f7a1f85db9b" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; the page setup dialog is implemented using the native page setup dialogs.</source>
          <target state="translated">在Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，页面设置对话框是使用本机页面设置对话框实现的。</target>
        </trans-unit>
        <trans-unit id="153b1e39841abcf2158fa5299c7935bc61f925b4" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the native print dialog is used, which means that some &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; properties set on the dialog won't be respected. The native print dialog on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; does not support setting printer options, i.e. &lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;() and &lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;() have no effect.</source>
          <target state="translated">在Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，使用本机打印对话框，这意味着将不遵守对话框上设置的某些&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;和&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;属性。&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;上的本机打印对话框不支持设置打印机选项，即&lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;（）和&lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;（）不起作用。</target>
        </trans-unit>
        <trans-unit id="9fb552f0c6ee026f6a2d5cdf2c2faba130e66307" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;. However, the native Windows file dialog does not support displaying files in the directory chooser. You need to pass &lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt; to display files using a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">在Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，此静态函数将使用本机文件对话框，而不使用&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;。但是，本机Windows文件对话框不支持在目录选择器中显示文件。您需要传递&lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt;来使用&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;显示文件。</target>
        </trans-unit>
        <trans-unit id="a70298dd5c537a10885dffc0b4796cc69c26b290" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, this locale will use the decimal/grouping characters and date/time formats specified in the system configuration panel.</source>
          <target state="translated">在Windows和Mac上,这个区域设置将使用系统配置面板中指定的十进制/分组字符和日期/时间格式。</target>
        </trans-unit>
        <trans-unit id="d9517590c1b7334224700261590c3cf915514625" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, this option can be changed while printing and will take effect from the next call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;().</source>
          <target state="translated">在Windows和Mac上，可以在打印时更改此选项，并且从下一次调用&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）时生效。</target>
        </trans-unit>
        <trans-unit id="005c72f31e8e4788fed43ee14d746717e095e475" translate="yes" xml:space="preserve">
          <source>On Windows and macOS the page setup dialog is implemented using the native page setup dialogs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3c6cdcafd391c8d0a7c1479d4f25233e98f454" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, the native print dialog is used, which means that some &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; properties set on the dialog won't be respected. The native print dialog on macOS does not support setting printer options, i.e. &lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;() and &lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;() have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525d9d80dde519138d351d097281097c7462525d" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;. However, the native Windows file dialog does not support displaying files in the directory chooser. You need to pass &lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt; to display files using a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d18eab9424efb8eb9d67b73f2554a661d53b8d" translate="yes" xml:space="preserve">
          <source>On Windows and on systems where files do not have groups this function always returns (uint) -2.</source>
          <target state="translated">在Windows和文件没有分组的系统中,这个函数总是返回(uint)-2。</target>
        </trans-unit>
        <trans-unit id="79144f75391086deffcb8615df18ab19f80fdaf7" translate="yes" xml:space="preserve">
          <source>On Windows and on systems where files do not have owners this function returns ((uint) -2).</source>
          <target state="translated">在Windows和文件没有所有者的系统中,这个函数返回((uint)-2)。</target>
        </trans-unit>
        <trans-unit id="32afade7d47abda738aacc3512c2b30ffaabeca2" translate="yes" xml:space="preserve">
          <source>On Windows platforms, this function may take several seconds to execute depending on the configuration of the user's system.</source>
          <target state="translated">在Windows平台上,根据用户系统的配置,这个功能可能需要几秒钟才能执行。</target>
        </trans-unit>
        <trans-unit id="f5aecee188c7f1b1294a2d0e762ebebb7959f0ca" translate="yes" xml:space="preserve">
          <source>On Windows systems, the clock overflows after 2^32 milliseconds, which corresponds to roughly 49.7 days. This means two processes' reckoning of the time since the reference may be different by multiples of 2^32 milliseconds. When comparing such values, it's recommended that the high 32 bits of the millisecond count be masked off.</source>
          <target state="translated">在Windows系统中,时钟在2^32毫秒后溢出,大约相当于49.7天。这意味着两个进程自参考以来对时间的计算可能相差2^32毫秒的倍数。比较这样的数值时,建议把毫秒数的高32位遮掉。</target>
        </trans-unit>
        <trans-unit id="4438b8406b08ce691061664d1b8e89e958e240ba" translate="yes" xml:space="preserve">
          <source>On Windows the dialog will spin a blocking modal event loop that will not dispatch any QTimers, and if</source>
          <target state="translated">在Windows上,该对话框将旋转一个阻塞模态事件循环,该事件循环将不派遣任何QTimers,如果</target>
        </trans-unit>
        <trans-unit id="d60ef4abd5ddf2ac11833e853cd9b3a90a8a9a4c" translate="yes" xml:space="preserve">
          <source>On Windows this ID is translated from the Windows ID using an internal translation table and the user's selected country. As a consequence there is a small chance any Windows install may have IDs not known by Qt, in which case &quot;UTC&quot; will be returned.</source>
          <target state="translated">在Windows中,这个ID是通过内部翻译表和用户选择的国家来翻译的。因此,有一小部分的Windows安装可能会有Qt不知道的ID,在这种情况下,&quot;UTC &quot;将被返回。</target>
        </trans-unit>
        <trans-unit id="0f5bb54d8a742f78761067d364ae5dee864e5618" translate="yes" xml:space="preserve">
          <source>On Windows this is a named pipe and on Unix this is a local domain socket.</source>
          <target state="translated">在Windows上这是一个命名的管道,在Unix上这是一个本地域套接字。</target>
        </trans-unit>
        <trans-unit id="173484095c13480d2e28bd6242bb96dbc6170feb" translate="yes" xml:space="preserve">
          <source>On Windows this returns a list of &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; objects containing &quot;C:/&quot;, &quot;D:/&quot;, etc. On other operating systems, it returns a list containing just one root directory (i.e. &quot;/&quot;).</source>
          <target state="translated">在Windows上，它返回包含&amp;ldquo; C：/&amp;rdquo;，&amp;ldquo; D：/&amp;rdquo;等的&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;对象的列表。在其他操作系统上，它返回仅包含一个根目录（即&amp;ldquo; /&amp;rdquo;）的列表。</target>
        </trans-unit>
        <trans-unit id="d081113f7df8bc79a1aef37cb9f1492bed7c99fc" translate="yes" xml:space="preserve">
          <source>On Windows,</source>
          <target state="translated">在Windows上。</target>
        </trans-unit>
        <trans-unit id="2f9f91efe038a9e14ae2e98d9d2d49df516d2ec0" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qcommandlineparser&quot;&gt;QCommandLineParser&lt;/a&gt; uses message boxes to display usage information and errors if no console window can be obtained.</source>
          <target state="translated">在Windows上，如果无法获得控制台窗口，则&lt;a href=&quot;qcommandlineparser&quot;&gt;QCommandLineParser&lt;/a&gt;使用消息框显示用法信息和错误。</target>
        </trans-unit>
        <trans-unit id="7aaacc0a16e055c426abc12b5c974f97f3a6cc14" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;UserAccessOption&lt;/a&gt; is sufficient to allow a non elevated process to connect to a local server created by an elevated process run by the same user. &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;GroupAccessOption&lt;/a&gt; refers to the primary group of the process (see TokenPrimaryGroup in the Windows documentation). &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;OtherAccessOption&lt;/a&gt; refers to the well known &quot;Everyone&quot; group.</source>
          <target state="translated">在Windows上，&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;UserAccessOption&lt;/a&gt;足以允许非提升的进程连接到由同一用户运行的提升的进程创建的本地服务器。&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;GroupAccessOption&lt;/a&gt;指向进程的主要组（请参阅Windows文档中的TokenPrimaryGroup）。&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;OtherAccessOption&lt;/a&gt;指的是众所周知的&amp;ldquo;所有人&amp;rdquo;组。</target>
        </trans-unit>
        <trans-unit id="7657792c855355b2e1bf8322e309cc98bee5fb9b" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qmimedata#formats&quot;&gt;formats&lt;/a&gt;() will also return custom formats available in the MIME data, using the &lt;code&gt;x-qt-windows-mime&lt;/code&gt; subtype to indicate that they represent data in non-standard formats. The formats will take the following form:</source>
          <target state="translated">在Windows上，&lt;a href=&quot;qmimedata#formats&quot;&gt;格式&lt;/a&gt;（）也将返回MIME数据中可用的自定义格式，并使用 &lt;code&gt;x-qt-windows-mime&lt;/code&gt; 子类型指示它们以非标准格式表示数据。格式将采用以下形式：</target>
        </trans-unit>
        <trans-unit id="1d34b7d36338db117c47d6d8a642c55e9be69ad9" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; uses the Win32 API function &lt;code&gt;CreateProcess&lt;/code&gt; to start child processes. While &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; provides a comfortable way to start processes without worrying about platform details, it is in some cases desirable to fine-tune the parameters that are passed to &lt;code&gt;CreateProcess&lt;/code&gt;. This is done by defining a &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; function and passing it to &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt;.</source>
          <target state="translated">在Windows上，&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;使用Win32 API函数 &lt;code&gt;CreateProcess&lt;/code&gt; 启动子进程。虽然&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;提供了一种舒适的方式来启动进程而无需担心平台细节，但在某些情况下还是希望微调传递给 &lt;code&gt;CreateProcess&lt;/code&gt; 的参数。这是通过定义 &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; 函数并将其传递给 &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt; 来完成的。</target>
        </trans-unit>
        <trans-unit id="6211efcbbb8b3d6c4e6c2ffb8fe77c3c3f76389c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; lets you access settings that have been written with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; (or settings in a supported format, e.g., string data) in the system registry. This is done by constructing a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object with a path in the registry and &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;.</source>
          <target state="translated">在Windows上，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;允许您访问系统注册表中用&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;编写的设置（或受支持格式的设置，例如字符串数据）。这是通过构造&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对象和注册表中的路径以及&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat来完成的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd0c88cc322d1d15cf5b6bfab2befeec4005d8b4" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt; settings are stored in the following registry paths:</source>
          <target state="translated">在Windows上，&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;设置存储在以下注册表路径中：</target>
        </trans-unit>
        <trans-unit id="c9f6224e430c62533d0c15d70a2952272d66f0c4" translate="yes" xml:space="preserve">
          <source>On Windows, Linux and Unix with FontConfig (client side font support) the following languages are also supported:</source>
          <target state="translated">在Windows、Linux和Unix上,FontConfig(客户端字体支持)也支持以下语言。</target>
        </trans-unit>
        <trans-unit id="8ec750030fc86c431fc0cc22d96c707066b1bf1d" translate="yes" xml:space="preserve">
          <source>On Windows, Linux, and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, Qt WebView depends on the &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt; module to render content.</source>
          <target state="translated">在Windows，Linux和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，Qt WebView依赖于&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;模块来呈现内容。</target>
        </trans-unit>
        <trans-unit id="fb010bb9ae623dfe12cb2082c48c8f946484a62b" translate="yes" xml:space="preserve">
          <source>On Windows, Linux, and macOS, Qt WebView depends on the &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt; module to render content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d574c885b384b3a5f690df7426307fddb8242507" translate="yes" xml:space="preserve">
          <source>On Windows, QCommandLineParser uses message boxes to display usage information and errors if no console window can be obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e169b57c650bd6581aeed67e13f7d754def8df0c" translate="yes" xml:space="preserve">
          <source>On Windows, QSettings lets you access settings that have been written with QSettings (or settings in a supported format, e.g., string data) in the system registry. This is done by constructing a QSettings object with a path in the registry and &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ff7ae9872aa787caccaf0ac562ff34894acf65" translate="yes" xml:space="preserve">
          <source>On Windows, Qt can be configured with the system OpenGL or with &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md&quot;&gt;ANGLE&lt;/a&gt;. By default, Qt is configured to use dynamic OpenGL. This means that it tries to use system OpenGL and falls back to ANGLE, which is bundled with Qt and depends on the DirectX SDK, if native OpenGL does not work. ANGLE enables running Qt applications that depend on OpenGL, without installing the latest OpenGL drivers. If ANGLE also fails, Qt will fall back to software rendering, which is the slowest but most safe of the rendering methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36084b6a38d0046457329edc1ce7035a57de9ca1" translate="yes" xml:space="preserve">
          <source>On Windows, Qt can be configured with the system OpenGL or with &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md#&quot;&gt;ANGLE&lt;/a&gt;. By default, Qt is configured to use dynamic OpenGL. This means that it tries to use system OpenGL and falls back to ANGLE, which is bundled with Qt and depends on the DirectX SDK, if native OpenGL does not work. ANGLE enables running Qt applications that depend on OpenGL, without installing the latest OpenGL drivers. If ANGLE also fails, Qt will fall back to software rendering, which is the slowest but most safe of the rendering methods.</source>
          <target state="translated">在Windows上，可以使用系统OpenGL或&lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md#&quot;&gt;ANGLE&lt;/a&gt;配置Qt 。默认情况下，Qt配置为使用动态OpenGL。这意味着它会尝试使用系统OpenGL，然后退回ANGLE，如果本机OpenGL无法正常工作，则该角度将与Qt捆绑在一起，并取决于DirectX SDK。 ANGLE允许运行依赖OpenGL的Qt应用程序，而无需安装最新的OpenGL驱动程序。如果ANGLE也失败，则Qt将退回到软件渲染，这是最慢但最安全的渲染方法。</target>
        </trans-unit>
        <trans-unit id="86cb408cc7a3276abc43d23f5e1d0e4694746fda" translate="yes" xml:space="preserve">
          <source>On Windows, Qt will use Windows's Multimedia timer facility (if available) for Qt::PreciseTimer and normal Windows timers for Qt::CoarseTimer and Qt::VeryCoarseTimer.</source>
          <target state="translated">在Windows上,Qt将为Qt::PreciseTimer使用Windows的多媒体定时器设施(如果可用),为Qt::CoarseTimer和Qt::VeryCoarseTimer使用普通的Windows定时器。</target>
        </trans-unit>
        <trans-unit id="5f6c67b3c388f495ed43d8c62ac9b5423438cb1b" translate="yes" xml:space="preserve">
          <source>On Windows, Visual Studio 2017 and Windows 10 SDK are required.</source>
          <target state="translated">在Windows上,需要使用Visual Studio 2017和Windows 10 SDK。</target>
        </trans-unit>
        <trans-unit id="b94e7d980488a2cafad803911d11239698908891" translate="yes" xml:space="preserve">
          <source>On Windows, an ODBC driver manager should be installed by default. For Unix systems, there are some implementations which must be installed first. Note that every end user of your application is required to have an ODBC driver manager installed, otherwise the QODBC plugin will not work.</source>
          <target state="translated">在Windows上,默认情况下应该安装ODBC驱动管理器。对于Unix系统,有一些实现必须先安装。请注意,您的应用程序的每个最终用户都必须安装ODBC驱动管理器,否则QODBC插件将无法工作。</target>
        </trans-unit>
        <trans-unit id="4a046a49eb862192bc389c249bdcd0b52a2654ed" translate="yes" xml:space="preserve">
          <source>On Windows, and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">在Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，此静态函数将使用本机文件对话框而不是&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10826623feadfa72a4485e34a17fbeb799e5b968" translate="yes" xml:space="preserve">
          <source>On Windows, and macOS, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ad43c5b139fef3fa0a2f40b509afe66f604a22" translate="yes" xml:space="preserve">
          <source>On Windows, everything goes to a &quot;qttest&quot; directory under &lt;code&gt;%APPDATA%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8742992833152e679e7ac230e6cd6497be0b03" translate="yes" xml:space="preserve">
          <source>On Windows, everything goes to a &quot;qttest&quot; directory under Application Data.</source>
          <target state="translated">在Windows上,所有的东西都会进入应用程序数据下的 &quot;qttest &quot;目录。</target>
        </trans-unit>
        <trans-unit id="41e4b76e5497497f0e910648c84c8b22896c2a3d" translate="yes" xml:space="preserve">
          <source>On Windows, if the format is &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;, the return value is a system registry path, not a file path.</source>
          <target state="translated">在Windows上，如果格式为&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat&lt;/a&gt;，则返回值为系统注册表路径，而不是文件路径。</target>
        </trans-unit>
        <trans-unit id="19db6fa9c0e6ecdb9dc3ed8c0e4c8646568b7e81" translate="yes" xml:space="preserve">
          <source>On Windows, if the process was terminated with TerminateProcess() from another application, this function will still return &lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;NormalExit&lt;/a&gt; unless the exit code is less than 0.</source>
          <target state="translated">在Windows上，如果该进程被另一个应用程序的TerminateProcess（）终止，则该函数仍将返回&lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;NormalExit，&lt;/a&gt;除非退出代码小于0。</target>
        </trans-unit>
        <trans-unit id="f4de3ffade0f14541e5fc34016a77889d9f60f1d" translate="yes" xml:space="preserve">
          <source>On Windows, if you are calling this when the application is not currently the active one then it will not make it the active window. It will change the color of the taskbar entry to indicate that the window has changed in some way. This is because Microsoft does not allow an application to interrupt what the user is currently doing in another application.</source>
          <target state="translated">在Windows上,如果您在应用程序当前不是活动窗口时调用该函数,那么它将不会使其成为活动窗口。它将改变任务栏条目的颜色,以表明该窗口以某种方式发生了变化。这是因为微软不允许一个应用程序中断用户当前在另一个应用程序中正在做的事情。</target>
        </trans-unit>
        <trans-unit id="575d9b3a78af0da2b74620b3d569a1bc8e316a74" translate="yes" xml:space="preserve">
          <source>On Windows, it is possible for a key to have both a value and subkeys. Its default value is accessed by using &quot;Default&quot; or &quot;.&quot; in place of a subkey:</source>
          <target state="translated">在Windows上,一个键可以同时拥有一个值和子键。通过使用 &quot;Default &quot;或&quot;.&quot;代替子键来访问其默认值。</target>
        </trans-unit>
        <trans-unit id="789849527f55dd326ab8965b01a0cd4e3d42c782" translate="yes" xml:space="preserve">
          <source>On Windows, it returns the volume letter in case the volume is not mounted to a directory.</source>
          <target state="translated">在Windows上,如果卷没有被挂载到目录中,它会返回卷号。</target>
        </trans-unit>
        <trans-unit id="6f45ef2557d2763eeb9ce7f467fe135973457929" translate="yes" xml:space="preserve">
          <source>On Windows, kill() uses TerminateProcess, and on Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the SIGKILL signal is sent to the process.</source>
          <target state="translated">在Windows上，kill（）使用TerminateProcess，在Unix和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，SIGKILL信号发送到该进程。</target>
        </trans-unit>
        <trans-unit id="c1f2ddc90ea88c20db6dcf30567c41f324327c36" translate="yes" xml:space="preserve">
          <source>On Windows, kill() uses TerminateProcess, and on Unix and macOS, the SIGKILL signal is sent to the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7817e4f6372ea0ffb46fc54a14ab0108449385c" translate="yes" xml:space="preserve">
          <source>On Windows, make sure you have &lt;code&gt;MinGW&lt;/code&gt; as well as &lt;code&gt;sed&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt; and configure with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be08508e87dfb9c0df0e01746b667cf36cea0b24" translate="yes" xml:space="preserve">
          <source>On Windows, sets the printer resolution to that defined for the printer in use. For PDF printing, sets the resolution of the PDF driver to 1200 dpi.</source>
          <target state="translated">在Windows上,将打印机分辨率设置为为使用中的打印机定义的分辨率。对于PDF打印,将PDF驱动程序的分辨率设置为1200dpi。</target>
        </trans-unit>
        <trans-unit id="86c265bb1809aa2eeda1160b8236aed44714a002" translate="yes" xml:space="preserve">
          <source>On Windows, shortcuts (&lt;code&gt;.lnk&lt;/code&gt; files) are currently treated as symlinks. As on Unix systems, the property getters return the size of the targeted file, not the &lt;code&gt;.lnk&lt;/code&gt; file itself. This behavior is deprecated and will likely be removed in a future version of Qt, after which &lt;code&gt;.lnk&lt;/code&gt; files will be treated as regular files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d9e4ccb9a6bff1ad352d4396e5ff42f362bb10" translate="yes" xml:space="preserve">
          <source>On Windows, symlinks (shortcuts) are &lt;code&gt;.lnk&lt;/code&gt; files. The reported &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() is that of the symlink (not the link's target), and opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; opens the &lt;code&gt;.lnk&lt;/code&gt; file. For example:</source>
          <target state="translated">在Windows上，符号链接（快捷方式）是 &lt;code&gt;.lnk&lt;/code&gt; 文件。报告的&lt;a href=&quot;qfileinfo#size&quot;&gt;大小&lt;/a&gt;（）是符号链接的大小（不是链接目标），使用&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;打开符号链接将打开 &lt;code&gt;.lnk&lt;/code&gt; 文件。例如：</target>
        </trans-unit>
        <trans-unit id="894c53cc3aa9870814680f88a38324b2cbcc4b60" translate="yes" xml:space="preserve">
          <source>On Windows, terminate() posts a WM_CLOSE message to all top-level windows of the process and then to the main thread of the process itself. On Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; the &lt;code&gt;SIGTERM&lt;/code&gt; signal is sent.</source>
          <target state="translated">在Windows上，Terminate（）将WM_CLOSE消息发布到流程的所有顶级窗口，然后发布到流程本身的主线程。在Unix和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，发送 &lt;code&gt;SIGTERM&lt;/code&gt; 信号。</target>
        </trans-unit>
        <trans-unit id="bd77ce155260348822d2cf0793b1977b1e47571b" translate="yes" xml:space="preserve">
          <source>On Windows, terminate() posts a WM_CLOSE message to all top-level windows of the process and then to the main thread of the process itself. On Unix and macOS the &lt;code&gt;SIGTERM&lt;/code&gt; signal is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c023ed2fa00db5821f38f2a7733300b417f3e3d0" translate="yes" xml:space="preserve">
          <source>On Windows, the</source>
          <target state="translated">在Windows上,</target>
        </trans-unit>
        <trans-unit id="50b76eb87355aa84c9f176e1e2fa2a2d4e2b8c28" translate="yes" xml:space="preserve">
          <source>On Windows, the MIME format does not always map directly to the clipboard formats. Qt provides &lt;a href=&quot;qwinmime&quot;&gt;QWinMime&lt;/a&gt; to map clipboard formats to open-standard MIME formats. Similarly, the &lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt; maps MIME to Mac flavors.</source>
          <target state="translated">在Windows上，MIME格式并不总是直接映射到剪贴板格式。Qt提供&lt;a href=&quot;qwinmime&quot;&gt;QWinMime&lt;/a&gt;来将剪贴板格式映射为开放标准的MIME格式。同样，&lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt;将MIME映射到Mac风格。</target>
        </trans-unit>
        <trans-unit id="c9d9f0d80797bfabd82eb565989c14db0a2d588d" translate="yes" xml:space="preserve">
          <source>On Windows, the SDK sets the environment variable &lt;code&gt;VULKAN_SDK&lt;/code&gt;, which will be detected by the &lt;code&gt;configure&lt;/code&gt; script.</source>
          <target state="translated">在Windows上，SDK设置环境变量 &lt;code&gt;VULKAN_SDK&lt;/code&gt; ， &lt;code&gt;configure&lt;/code&gt; 脚本将检测到该变量。</target>
        </trans-unit>
        <trans-unit id="3dd65d4ac7293575c89dbbc61edd2fa3c9540a48" translate="yes" xml:space="preserve">
          <source>On Windows, the dialog will spin a blocking modal event loop that will not dispatch any QTimers, and if</source>
          <target state="translated">在Windows上,该对话框将旋转一个阻塞的模态事件循环,该事件循环将不会派遣任何QTimers,并且如果</target>
        </trans-unit>
        <trans-unit id="601af0d47a12773216295a93de15e80b3012a215" translate="yes" xml:space="preserve">
          <source>On Windows, the following additional tools are required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070069766453e3eb3bc17c26dcc40196783ed1a2" translate="yes" xml:space="preserve">
          <source>On Windows, the following files are used:</source>
          <target state="translated">在Windows上,使用以下文件。</target>
        </trans-unit>
        <trans-unit id="357070b8ee3d0513c5e8e0a083173878f3a0115d" translate="yes" xml:space="preserve">
          <source>On Windows, the installation binaries provided by LLVM do not include &lt;code&gt;llvm-config&lt;/code&gt;. You may still have it on your system, if you have built LLVM yourself from source. If that is the case, and you want to let the build system find Clang automatically, add the path to &lt;code&gt;llvm-config&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable. For example:</source>
          <target state="translated">在Windows上，LLVM提供的安装二进制文件不包含 &lt;code&gt;llvm-config&lt;/code&gt; 。如果您是从源代码自己构建的，则您的系统上可能仍然有它。如果是这种情况，并且您想让构建系统自动找到Clang，请将 &lt;code&gt;llvm-config&lt;/code&gt; 的路径添加到 &lt;code&gt;PATH&lt;/code&gt; 环境变量中。例如：</target>
        </trans-unit>
        <trans-unit id="3c1657afc1bc02dca1b80b856b5ed6552a224065" translate="yes" xml:space="preserve">
          <source>On Windows, the list is built from the argc and argv parameters only if modified argv/argc parameters are passed to the constructor. In that case, encoding problems might occur.</source>
          <target state="translated">在Windows上,只有当修改后的argv/argc参数传递给构造函数时,才会从argc和argv参数建立列表。在这种情况下,可能会出现编码问题。</target>
        </trans-unit>
        <trans-unit id="30bdeaf7adcfd048228bfae9a8c9c60cf24a9435" translate="yes" xml:space="preserve">
          <source>On Windows, the returned value is a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms740522(v=vs.85).aspx&quot;&gt;Winsock 2 Socket Handle&lt;/a&gt;.</source>
          <target state="translated">在Windows上，返回的值是&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms740522(v=vs.85).aspx&quot;&gt;Winsock 2 Socket Handle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a57532f83aee4223bce412df8949bba23b8bbe1" translate="yes" xml:space="preserve">
          <source>On Windows, the second example above will be translated to &lt;code&gt;C:\Documents and Settings&lt;/code&gt; when used to access files.</source>
          <target state="translated">在Windows上，当用于访问文件时，上面的第二个示例将转换为 &lt;code&gt;C:\Documents and Settings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c821ce0a17f8bc969c387de22bee5900320ead8a" translate="yes" xml:space="preserve">
          <source>On Windows, the system tray icon size is 16x16; on X11, the preferred size is 22x22. The icon will be scaled to the appropriate size as necessary.</source>
          <target state="translated">在Windows上,系统托盘图标的大小是16x16;在X11上,首选的大小是22x22。 图标会根据需要调整到合适的大小。</target>
        </trans-unit>
        <trans-unit id="6fa2dea46c7c5f0f1f0cbdcde22e07fe259c0a30" translate="yes" xml:space="preserve">
          <source>On Windows, the variable names are case-insensitive, but case-preserving. &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; behaves accordingly.</source>
          <target state="translated">在Windows上，变量名不区分大小写，但保留大小写。&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment的&lt;/a&gt;行为相应。</target>
        </trans-unit>
        <trans-unit id="85e98a6a22472447569815ce185bce3c04119f2d" translate="yes" xml:space="preserve">
          <source>On Windows, the variable names are case-insensitive, but case-preserving. QProcessEnvironment behaves accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b32a2cff36ed3a8a335860a856ed4c4634f194" translate="yes" xml:space="preserve">
          <source>On Windows, this causes the window's taskbar entry to flash for a time. If</source>
          <target state="translated">在Windows上,这会导致窗口的任务栏条目闪烁一段时间。如果</target>
        </trans-unit>
        <trans-unit id="7ad2a1df3d377f75556f4b4104f12737db507920" translate="yes" xml:space="preserve">
          <source>On Windows, this function does nothing; on Unix, it removes the socket file given by</source>
          <target state="translated">在Windows上,这个函数什么都不做;在Unix上,它将删除由</target>
        </trans-unit>
        <trans-unit id="4e9aaa05bd9dc6baaf7d4a989f9f0a6399793467" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns &lt;code&gt;true&lt;/code&gt; if the target file is hidden (not the symlink).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eae3a8474264613a1bb0546b833063ce47363e" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the type of Windows kernel, like &quot;winnt&quot;. On Unix systems, it returns the same as the output of &lt;code&gt;uname -s&lt;/code&gt; (lowercased).</source>
          <target state="translated">在Windows上，此函数返回Windows内核的类型，例如&amp;ldquo; winnt&amp;rdquo;。在Unix系统上，它返回的与 &lt;code&gt;uname -s&lt;/code&gt; 的输出相同（小写）。</target>
        </trans-unit>
        <trans-unit id="7d6249275f9fbc46af397c053e27c8e82ae55f49" translate="yes" xml:space="preserve">
          <source>On Windows, this function will use the WinHTTP DLL functions. Despite its name, Microsoft suggests using it for all applications that require network connections, not just HTTP. This will respect the proxy settings set on the registry with the proxycfg.exe tool. If those settings are not found, this function will attempt to obtain Internet Explorer's settings and use them.</source>
          <target state="translated">在Windows上,这个函数将使用WinHTTP DLL函数。尽管它的名字,微软建议将其用于所有需要网络连接的应用程序,而不仅仅是HTTP。这将尊重使用proxycfg.exe工具在注册表上设置的代理设置。如果没有找到这些设置,这个功能将尝试获取Internet Explorer的设置并使用它们。</target>
        </trans-unit>
        <trans-unit id="009e0df97f2e5d4e01405a88357006f9f19e7723" translate="yes" xml:space="preserve">
          <source>On Windows, this returns the drives visible in the &lt;b&gt;My Computer&lt;/b&gt; folder. On Unix operating systems, it returns the list of all mounted filesystems (except for pseudo filesystems).</source>
          <target state="translated">在Windows上，这将返回&amp;ldquo; &lt;b&gt;我的电脑&amp;rdquo;&lt;/b&gt;文件夹中可见的驱动器。在Unix操作系统上，它返回所有已挂载文件系统的列表（伪文件系统除外）。</target>
        </trans-unit>
        <trans-unit id="0936561a0967352768bfbc841c656154826ca8d9" translate="yes" xml:space="preserve">
          <source>On Windows, this value is used when the ownership of the D&amp;amp;D data should be taken over by the target application, i.e., the source application should not delete the data. On X11 this value is used to do a move. TargetMoveAction is not used on the Mac.</source>
          <target state="translated">在Windows上，当D＆D数据的所有权应由目标应用程序接管时，即源应用程序不应删除数据时，将使用此值。在X11上，此值用于移动。在Mac上不使用TargetMoveAction。</target>
        </trans-unit>
        <trans-unit id="4eee6c744c3777dbddff6484cd65a374f2977b75" translate="yes" xml:space="preserve">
          <source>On Windows, toNativeSeparators(&quot;c:/winnt/system32&quot;) returns &quot;c:\winnt\system32&quot;.</source>
          <target state="translated">在Windows上,toNativeSeparators(&quot;c:/winnt/system32&quot;)返回 &quot;c:\winnt\system32&quot;。</target>
        </trans-unit>
        <trans-unit id="6fb53d8edcc5cae3f92a646a3ff9898177717167" translate="yes" xml:space="preserve">
          <source>On Windows, triggers auto-generation of an .rc file if the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. The generated .rc file will have the FILEVERSION and PRODUCTVERSION entries filled with major, minor, patch level, and build number. Each number must be in the range from 0 to 65535. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">在Windows上，如果未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量，则触发.rc文件的自动生成。生成的.rc文件将具有FILEVERSION和PRODUCTVERSION条目，并用主要，次要，补丁程序级别和内部版本号填充。每个数字的范围必须在0到65535之间。有关.rc文件生成的更多详细信息，请参见《&lt;a href=&quot;qmake-platform-notes#&quot;&gt;平台说明》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17635b63a5e5f6b5459a303d045e78a9e9cf7608" translate="yes" xml:space="preserve">
          <source>On Windows, triggers auto-generation of an .rc file if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. The generated .rc file will have the FILEVERSION and PRODUCTVERSION entries filled with major, minor, patch level, and build number. Each number must be in the range from 0 to 65535. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7804dbafb95752380b7a75defcc7241f6d49bcef" translate="yes" xml:space="preserve">
          <source>On Windows, when the KeyDown event for this key is sent, the Ctrl+Alt modifiers are also set.</source>
          <target state="translated">在Windows上,当发送该键的KeyDown事件时,Ctrl+Alt修饰符也会被设置。</target>
        </trans-unit>
        <trans-unit id="730b836d8881154172539b5edb8b7c3bd51ef995" translate="yes" xml:space="preserve">
          <source>On Windows, when the Windows system registry is used, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; does not preserve the original type of the value. Therefore, the type of the value might change when a new value is set. For example, a value with type &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; will change to &lt;code&gt;REG_SZ&lt;/code&gt;.</source>
          <target state="translated">在Windows上，当使用Windows系统注册表时，&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;不会保留该值的原始类型。因此，设置新值时，值的类型可能会更改。例如，类型为 &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; 的值将更改为 &lt;code&gt;REG_SZ&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d807f2e4cbc7b11d6cf8cb01e99e5962c550d060" translate="yes" xml:space="preserve">
          <source>On Windows, when the Windows system registry is used, QSettings does not preserve the original type of the value. Therefore, the type of the value might change when a new value is set. For example, a value with type &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; will change to &lt;code&gt;REG_SZ&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b56364276b5f7e47e7f031287b139fc5b947d5" translate="yes" xml:space="preserve">
          <source>On Windows:</source>
          <target state="translated">在Windows上。</target>
        </trans-unit>
        <trans-unit id="38bff627717e84c4edabc4f72056215a56db78a2" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to &quot;Calculator&quot; (XF86XK_Calculator) key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到 &quot;计算器&quot;(XF86XK_Calculator)键。</target>
        </trans-unit>
        <trans-unit id="eb011980df49c4979891a410f0db4938cb3a60ae" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to &quot;My Computer&quot; (XF86XK_MyComputer) key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到 &quot;我的电脑&quot;(XF86XK_MyComputer)键。</target>
        </trans-unit>
        <trans-unit id="1bfe3c4f8fe5bd9ee3a20c50dccea55489cf6b63" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch0 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch0键。</target>
        </trans-unit>
        <trans-unit id="38110747083a8ebebaf5bf2227de795089502230" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch1 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch1键。</target>
        </trans-unit>
        <trans-unit id="b433e57774b23b1fba9ac94ebed25e6c5098b77e" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch2 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch2键。</target>
        </trans-unit>
        <trans-unit id="215b19cd3792ab1e486526f2d225ecf7872a3a68" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch3 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch3键。</target>
        </trans-unit>
        <trans-unit id="b6eba023acc8788fb39359621ce09415b381e3bb" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch4 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统原因,这个键被映射到XF86XK_Launch4键。</target>
        </trans-unit>
        <trans-unit id="044e49228d4ec744fae5846dcd722959672c193d" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch5 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch5键。</target>
        </trans-unit>
        <trans-unit id="176c13710f95a8daaef6f59eb59cd96fe3499fa1" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch6 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统原因,这个键被映射到XF86XK_Launch6键。</target>
        </trans-unit>
        <trans-unit id="49ed2cc9414463eb9e5c87ff2895b838b0927830" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch7 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch7键。</target>
        </trans-unit>
        <trans-unit id="eebef0fa1c574243e457f228b23d8b747720e57a" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch8 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_Launch8键。</target>
        </trans-unit>
        <trans-unit id="8973833e72301ced8eca68397f583495d93f340f" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch9 key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统原因,这个键被映射到XF86XK_Launch9键。</target>
        </trans-unit>
        <trans-unit id="a9cda10da6811c461130577bf71c1b62570896a4" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchA key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_LaunchA键。</target>
        </trans-unit>
        <trans-unit id="993b0f9701007d991189241d64f74b997482bcaf" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchB key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_LaunchB键。</target>
        </trans-unit>
        <trans-unit id="edf8b286ee85c0b86bad62052749b94265fdc9c6" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchC key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_LaunchC键。</target>
        </trans-unit>
        <trans-unit id="282a7579d151d39c6224732c8fd9e0e00d5e6878" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchD key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统原因,这个键被映射到XF86XK_LaunchD键。</target>
        </trans-unit>
        <trans-unit id="0d49d72dc7b9cad7ec0bd39bc7e8903b3e9d0eb8" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchE key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统的原因,这个键被映射到XF86XK_LaunchE键。</target>
        </trans-unit>
        <trans-unit id="c3399a59cc479f88fd5846b477a3d2bbce888eeb" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchF key for legacy reasons.</source>
          <target state="translated">在X11上,由于传统原因,这个键被映射到XF86XK_LaunchF键。</target>
        </trans-unit>
        <trans-unit id="cf05a551e29074459d59198f9285d4acca8fe607" translate="yes" xml:space="preserve">
          <source>On X11 this key is not mapped for legacy reasons. Use Qt::Key_Launch1 instead.</source>
          <target state="translated">在X11上,由于传统的原因,这个键没有被映射。使用 Qt::Key_Launch1 来代替。</target>
        </trans-unit>
        <trans-unit id="ca4b93013030e6ab4726dc905a308d068ce1d21e" translate="yes" xml:space="preserve">
          <source>On X11,</source>
          <target state="translated">关于X11。</target>
        </trans-unit>
        <trans-unit id="6b6585d9074e4aa129ab3877f868a593cdbeb093" translate="yes" xml:space="preserve">
          <source>On X11, Qt supports the &lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html&quot;&gt;Xcursor&lt;/a&gt; library, which allows for full color icon themes. The table below shows the cursor name used for each &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; value. If a cursor cannot be found using the name shown below, a standard X11 cursor will be used instead. Note: X11 does not provide appropriate cursors for all possible &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; values. It is possible that some cursors will be taken from the Xcursor theme, while others will use an internal bitmap cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6fe6b086079c230da14348db2af20226d626fc" translate="yes" xml:space="preserve">
          <source>On X11, Qt supports the &lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html#&quot;&gt;Xcursor&lt;/a&gt; library, which allows for full color icon themes. The table below shows the cursor name used for each &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; value. If a cursor cannot be found using the name shown below, a standard X11 cursor will be used instead. Note: X11 does not provide appropriate cursors for all possible &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; values. It is possible that some cursors will be taken from the Xcursor theme, while others will use an internal bitmap cursor.</source>
          <target state="translated">在X11上，Qt支持&lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html#&quot;&gt;Xcursor&lt;/a&gt;库，该库允许使用全彩图标主题。下表显示了用于每个&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;值的光标名称。如果使用下面显示的名称找不到光标，则将使用标准的X11光标。注意：X11没有为所有可能的&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;值提供适当的游标。某些游标可能会取自Xcursor主题，而其他游标可能会使用内部位图游标。</target>
        </trans-unit>
        <trans-unit id="f66a29a941a3f1c1178fa1f4051ed7633dcc7944" translate="yes" xml:space="preserve">
          <source>On X11, a window does not have a frame until the window manager decorates it. This happens asynchronously at some point in time after calling &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() and the first paint event the window receives, or it does not happen at all. Bear in mind that X11 is policy-free (others call it flexible). Thus you cannot make any safe assumption about the decoration frame your window will get. Basic rule: There's always one user who uses a window manager that breaks your assumption, and who will complain to you.</source>
          <target state="translated">在X11上，在窗口管理器装饰窗口之前，窗口没有框架。在调用&lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt;（）和窗口接收到的第一个绘画事件之后的某个时间点，这会异步发生，或者根本不会发生。请记住，X11是不受策略限制的（其他人称其为灵活的）。因此，您无法对窗户得到的装饰框架做出任何安全的假设。基本规则：总是有一个用户使用窗口管理器来破坏您的假设，并且会向您抱怨。</target>
        </trans-unit>
        <trans-unit id="74bd622a9f5b268193d42ed1193ac4712fc8aefe" translate="yes" xml:space="preserve">
          <source>On X11, if not set, the fallback icon theme depends on your desktop settings. On other platforms it is not set by default.</source>
          <target state="translated">在X11上,如果没有设置,后备图标主题取决于你的桌面设置。在其他平台上,它不是默认设置的。</target>
        </trans-unit>
        <trans-unit id="54da02e1730b21efd6d44aefe3448beb691d16ba" translate="yes" xml:space="preserve">
          <source>On X11, it is also possible to draw on the desktop.</source>
          <target state="translated">在X11上,也可以在桌面上绘画。</target>
        </trans-unit>
        <trans-unit id="ad44e1dbefcc93a469ce1e22bfadbf193d474b6d" translate="yes" xml:space="preserve">
          <source>On X11, the current icon theme depends on your desktop settings. On other platforms it is not set by default.</source>
          <target state="translated">在X11上,当前的图标主题取决于你的桌面设置。在其他平台上,它不是默认设置的。</target>
        </trans-unit>
        <trans-unit id="984489ecfc83d609f42ecee5acbf6bd8aa4e72cd" translate="yes" xml:space="preserve">
          <source>On X11, the document name is for example used as the default output filename in &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt;. Note that the document name does not affect the file name if the printer is printing to a file. Use the setOutputFile() function for this.</source>
          <target state="translated">在X11上，文档名称例如用作&lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog中&lt;/a&gt;的默认输出文件名。请注意，如果打印机正在打印到文件，则文档名称不会影响文件名。为此使用setOutputFile（）函数。</target>
        </trans-unit>
        <trans-unit id="f27fe241c6c987ddd4ff6638b2510debe04bb5c0" translate="yes" xml:space="preserve">
          <source>On X11, the public &lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDND protocol&lt;/a&gt; is used, while on Windows Qt uses the OLE standard, and Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; uses the Cocoa Drag Manager. On X11, XDND uses MIME, so no translation is necessary. The Qt API is the same regardless of the platform. On Windows, MIME-aware applications can communicate by using clipboard format names that are MIME types. Already some Windows applications use MIME naming conventions for their clipboard formats.</source>
          <target state="translated">在X11上，使用公共&lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDND协议&lt;/a&gt;，而在Windows上，Qt使用OLE标准，而Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;使用Cocoa Drag Manager。在X11上，XDND使用MIME，因此无需翻译。无论平台如何，Qt API都是相同的。在Windows上，支持MIME的应用程序可以使用MIME类型的剪贴板格式名称进行通信。一些Windows应用程序已经将MIME命名约定用于其剪贴板格式。</target>
        </trans-unit>
        <trans-unit id="985302818f764cf35aaeea8f228232e784f34c07" translate="yes" xml:space="preserve">
          <source>On X11, the public &lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDND protocol&lt;/a&gt; is used, while on Windows Qt uses the OLE standard, and Qt for macOS uses the Cocoa Drag Manager. On X11, XDND uses MIME, so no translation is necessary. The Qt API is the same regardless of the platform. On Windows, MIME-aware applications can communicate by using clipboard format names that are MIME types. Already some Windows applications use MIME naming conventions for their clipboard formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746576bc1b84c50d9a8e7498467d0d47eb363722" translate="yes" xml:space="preserve">
          <source>On X11, the search path will use the XDG_DATA_DIRS environment variable if available.</source>
          <target state="translated">在X11上,搜索路径将使用XDG_DATA_DIRS环境变量(如果可用)。</target>
        </trans-unit>
        <trans-unit id="a9074f202c6877dc2505a9ae7cf75c9f51f7cbf3" translate="yes" xml:space="preserve">
          <source>On X11, this function may not work properly with certain window managers. See the &lt;a href=&quot;application-windows#window-geometry&quot;&gt;Window Geometry&lt;/a&gt; documentation for an explanation.</source>
          <target state="translated">在X11上，此功能可能不适用于某些窗口管理器。有关说明，请参见&amp;ldquo; &lt;a href=&quot;application-windows#window-geometry&quot;&gt;窗口几何&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="ca8a7c2c378269fc18338fdfb24d9563e2b0b997" translate="yes" xml:space="preserve">
          <source>On X11, this function sets the program to call with the PDF output. On other platforms, it has no effect.</source>
          <target state="translated">在X11上,这个函数设置程序调用与PDF输出。在其他平台上,它没有效果。</target>
        </trans-unit>
        <trans-unit id="378efc0cfc3a063ee9441da0010f98a74ba38499" translate="yes" xml:space="preserve">
          <source>On X11, this will cause the window to be marked as &quot;demands attention&quot;, the window must not be hidden (i.e. not have hide() called on it, but be visible in some sort of way) in order for this to work.</source>
          <target state="translated">在X11上,这将导致窗口被标记为 &quot;需要注意&quot;,窗口必须没有被隐藏(即没有调用hide(),而是以某种方式可见),这样才会有效。</target>
        </trans-unit>
        <trans-unit id="ce39c3052ac1f59f934bd2a1073483ba593e315a" translate="yes" xml:space="preserve">
          <source>On a Windows system with LLVM installed to &lt;code&gt;C:\Program Files\LLVM&lt;/code&gt;:</source>
          <target state="translated">在LLVM安装到 &lt;code&gt;C:\Program Files\LLVM&lt;/code&gt; 的Windows系统上：</target>
        </trans-unit>
        <trans-unit id="aa27746d74f17d76cf69db42d49e7edcd107a3bc" translate="yes" xml:space="preserve">
          <source>On a device there can be many types of sensors. Not all of the types that the Qt Sensors API supports may be available. There may also be types available that are not defined in the Qt Sensors API. The types of sensors available on a device is found using the &lt;a href=&quot;qsensor#sensorTypes&quot;&gt;QSensor::sensorTypes&lt;/a&gt;() function.</source>
          <target state="translated">在设备上可以有多种类型的传感器。并非Qt Sensors API支持的所有类型都可用。可能还有Qt Sensors API中未定义的可用类型。使用&lt;a href=&quot;qsensor#sensorTypes&quot;&gt;QSensor :: sensorTypes&lt;/a&gt;（）函数可以找到设备上可用的传感器类型。</target>
        </trans-unit>
        <trans-unit id="340cb1db0d82a6cc7816d765de5e6299d3925a35" translate="yes" xml:space="preserve">
          <source>On a graphics tablet, each type of stylus or other tool often has a unique ID or serial number, which can be useful to respond in different ways to different tools.</source>
          <target state="translated">在图形平板上,每种类型的触控笔或其他工具往往都有一个唯一的ID或序列号,这对于以不同的方式应对不同的工具非常有用。</target>
        </trans-unit>
        <trans-unit id="a5a208e157e201403e7f8007e1aae656a1c9dcbe" translate="yes" xml:space="preserve">
          <source>On a mobile device it can be used to easily choose between front-facing and back-facing cameras. If this property is set to &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt;, the system's default camera will be used.</source>
          <target state="translated">在移动设备上，可以轻松地在前置和后置摄像头之间进行选择。如果将此属性设置为 &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt; ，则将使用系统的默认相机。</target>
        </trans-unit>
        <trans-unit id="491d790280531d0f6862a8c9d7407d4ffcb6efd3" translate="yes" xml:space="preserve">
          <source>On a mobile device, this property can be used to easily choose between front-facing and back-facing cameras. If this property is set to &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt;, the system's default camera is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca20d418a110fc0695735cdb329e225f1c92da2e" translate="yes" xml:space="preserve">
          <source>On a typical Unix system, this will be /usr/share/mime/packages/, but it is also possible to extend the list of directories by setting the environment variable &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt;. For instance adding /opt/myapp/share to &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; will result in /opt/myapp/share/mime/packages/ being searched for MIME definitions.</source>
          <target state="translated">在典型的Unix系统上，它是/ usr / share / mime / packages /，但是也可以通过设置环境变量 &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; 来扩展目录列表。例如，将/ opt / myapp / share添加到 &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; 将导致在/ opt / myapp / share / mime / packages /中搜索MIME定义。</target>
        </trans-unit>
        <trans-unit id="a045d83adbceaaf476607421f1d3a7548e3674dc" translate="yes" xml:space="preserve">
          <source>On accepting one gesture Qt can automatically cancel other gestures that belong to other targets. The policy is normally set to not cancel any other gestures and can be set to cancel all active gestures in the context. For example for all child widgets.</source>
          <target state="translated">在接受一个手势时,Qt可以自动取消属于其他目标的其他手势。该策略通常被设置为不取消任何其他手势,也可以被设置为取消上下文中的所有活动手势。例如对于所有的子部件。</target>
        </trans-unit>
        <trans-unit id="3d5d4aac9f5bb2f56e17586b4f740822cb3feebc" translate="yes" xml:space="preserve">
          <source>On accepting this gesture all gestures that are active in the context (respecting the &lt;a href=&quot;qt#GestureFlag-enum&quot;&gt;Qt::GestureFlag&lt;/a&gt; that were specified when subscribed to the gesture) will be cancelled.</source>
          <target state="translated">接受此手势后，将取消上下文中所有活动的手势（尊重订阅该手势时指定的&lt;a href=&quot;qt#GestureFlag-enum&quot;&gt;Qt :: GestureFlag&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b421fa6b19590a40b1da7065155d72721b081222" translate="yes" xml:space="preserve">
          <source>On accepting this gesture no other gestures will be affected.</source>
          <target state="translated">接受这个手势后,其他手势不会受到影响。</target>
        </trans-unit>
        <trans-unit id="2dae3f602210c8a1c83d3cfe0e15ba0c18cb1abd" translate="yes" xml:space="preserve">
          <source>On all other UNIX-like operating systems, the type is a file descriptor representing a listening socket.</source>
          <target state="translated">在所有其他类似UNIX的操作系统上,该类型是代表监听套接字的文件描述符。</target>
        </trans-unit>
        <trans-unit id="a3e3bd97df1ff42c4cc75d81c6f780421ba4b461" translate="yes" xml:space="preserve">
          <source>On all other UNIX-like operating systems, the type is a file descriptor representing a socket.</source>
          <target state="translated">在所有其他类似UNIX的操作系统上,该类型是一个代表套接字的文件描述符。</target>
        </trans-unit>
        <trans-unit id="3015490dacdd20b476d47e7ff4c0f6c454b09ba0" translate="yes" xml:space="preserve">
          <source>On all platforms the depth of the primary screen will be returned.</source>
          <target state="translated">在所有平台上都会返回主屏幕的深度。</target>
        </trans-unit>
        <trans-unit id="082bb82a57d92617162ab4a21855edeecb241b8d" translate="yes" xml:space="preserve">
          <source>On all platforms, the following tools are required:</source>
          <target state="translated">在所有平台上,都需要以下工具:</target>
        </trans-unit>
        <trans-unit id="7cb19b7a63de8255c0da90508c370aab063f74ef" translate="yes" xml:space="preserve">
          <source>On all platforms, the interval for Qt::VeryCoarseTimer is rounded to the nearest full second (e.g. an interval of 23500ms will be rounded to 24000ms, and 20300ms to 20000ms).</source>
          <target state="translated">在所有平台上,Qt::VeryCoarseTimer的间隔都会被四舍五入到最接近的整数秒(例如,间隔23500ms的时间会被四舍五入到24000ms,20300ms会被四舍五入到20000ms)。</target>
        </trans-unit>
        <trans-unit id="45fdfa68c255f9c04c3bf620adbf177e0249cf92" translate="yes" xml:space="preserve">
          <source>On and Off states of a Switch.</source>
          <target state="translated">开关的开和关状态。</target>
        </trans-unit>
        <trans-unit id="8b8ba8893e72c59a415a54b794c557d21b211bf7" translate="yes" xml:space="preserve">
          <source>On any platform other than Windows, this function returns a new UUID with variant &lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid::DCE&lt;/a&gt; and version &lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid::Random&lt;/a&gt;. On Windows, a GUID is generated using the Windows API and will be of the type that the API decides to create.</source>
          <target state="translated">在Windows以外的任何平台上，此函数都返回一个新的UUID，其变体为&lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid :: DCE&lt;/a&gt;和版本&lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid :: Random&lt;/a&gt;。在Windows上，GUID是使用Windows API生成的，并且属于该API决定创建的类型。</target>
        </trans-unit>
        <trans-unit id="70aae88ca52c27299c6a2609cdb44d734f570ae4" translate="yes" xml:space="preserve">
          <source>On application start-up, the default font depends on the window system. It can vary depending on both the window system version and the locale. This function lets you override the default font; but overriding may be a bad idea because, for example, some locales need extra large fonts to support their special characters.</source>
          <target state="translated">在应用程序启动时,默认字体取决于窗口系统。它可能会根据窗口系统版本和本地环境而变化。这个功能可以让你覆盖默认字体;但覆盖可能是一个坏主意,因为,例如,一些地区语言需要特别大的字体来支持他们的特殊字符。</target>
        </trans-unit>
        <trans-unit id="92d2687521999a064a90d13dfba6f9269e095356" translate="yes" xml:space="preserve">
          <source>On application startup, &lt;code&gt;EGLFS&lt;/code&gt; and &lt;code&gt;LinuxFB&lt;/code&gt; attempt to disable the terminal keyboard by setting the tty's keyboard mode to &lt;code&gt;K_OFF&lt;/code&gt;. This prevents keystrokes from being sent to the terminal. If the standard behavior is required, set the &lt;code&gt;QT_QPA_ENABLE_TERMINAL_KEYBOARD&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;. Note that this works only when the application is launched from a remote console, via &lt;code&gt;ssh&lt;/code&gt; for example, and the terminal keyboard input remains enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0568eb2583df7e6d21c288f87183e801bfabfbe9" translate="yes" xml:space="preserve">
          <source>On certain platforms, a framebuffer other than 0 might be the default frame buffer depending on the current surface. Instead of calling glBindFramebuffer(0), it is recommended that you use glBindFramebuffer(ctx-&amp;gt;&lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;()), to ensure that your application is portable between different platforms. However, if you use &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions::glBindFramebuffer&lt;/a&gt;(), this is done automatically for you.</source>
          <target state="translated">在某些平台上，取决于当前表面，除0以外的帧缓冲区可能是默认的帧缓冲区。建议不要使用glBindFramebuffer（0），而建议使用glBindFramebuffer（ctx-&amp;gt; &lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;（）），以确保您的应用程序可在不同平台之间移植。但是，如果使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions :: glBindFramebuffer&lt;/a&gt;（），则会自动为您完成此操作。</target>
        </trans-unit>
        <trans-unit id="c9146a892e68e606992b3008c3ea1ef7ac59ed53" translate="yes" xml:space="preserve">
          <source>On certain platforms, a framebuffer other than 0 might be the default frame buffer depending on the current surface. Instead of calling glBindFramebuffer(0), it is recommended that you use glBindFramebuffer(ctx-&amp;gt;&lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;()), to ensure that your application is portable between different platforms. However, if you use &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions::glBindFramebuffer&lt;/a&gt;(), this is done automatically for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6156b0e0e39a185887766587b4acdb86aac5fbc4" translate="yes" xml:space="preserve">
          <source>On certain widgets, using '&amp;amp;' in front of a character will automatically create a mnemonic (a shortcut) for that character, e.g. &quot;E&amp;amp;xit&quot; will create the shortcut &lt;b&gt;Alt+X&lt;/b&gt; (use '&amp;amp;&amp;amp;' to display an actual ampersand). The widget might consume and perform an action on a given shortcut. On X11 the ampersand will not be shown and the character will be underlined. On Windows, shortcuts are normally not displayed until the user presses the &lt;b&gt;Alt&lt;/b&gt; key, but this is a setting the user can change. On Mac, shortcuts are disabled by default. Call &lt;a href=&quot;qkeysequence#qt_set_sequence_auto_mnemonic&quot;&gt;qt_set_sequence_auto_mnemonic&lt;/a&gt;() to enable them. However, because mnemonic shortcuts do not fit in with Aqua's guidelines, Qt will not show the shortcut character underlined.</source>
          <target state="translated">在某些窗口小部件上，在字符前面使用&amp;ldquo;＆&amp;rdquo;会自动为该字符创建助记符（快捷方式），例如&amp;ldquo; E＆xit&amp;rdquo;将创建快捷键&lt;b&gt;Alt + X&lt;/b&gt;（使用&amp;ldquo; &amp;amp;&amp;amp;&amp;rdquo;显示实际的&amp;ldquo;＆&amp;rdquo;号）。该小部件可能会消耗并在给定的快捷方式上执行操作。在X11上，将不显示与号，并在字符下划线。在Windows上，通常直到用户按下&lt;b&gt;Alt&lt;/b&gt;键才显示快捷方式，但这是用户可以更改的设置。在Mac上，默认情况下禁用快捷方式。调用&lt;a href=&quot;qkeysequence#qt_set_sequence_auto_mnemonic&quot;&gt;qt_set_sequence_auto_mnemonic&lt;/a&gt;（）启用它们。但是，由于助记符快捷方式不符合Aqua的准则，因此Qt不会在带下划线的快捷方式字符上显示。</target>
        </trans-unit>
        <trans-unit id="3eb68cd74bebcf6de6cd1cde5ba9951e6cfab0cd" translate="yes" xml:space="preserve">
          <source>On desktop Windows, the default value is the value of the environment variable &lt;code&gt;WindowsSDKVersion&lt;/code&gt;.</source>
          <target state="translated">在桌面Windows上，默认值为环境变量 &lt;code&gt;WindowsSDKVersion&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="cbcfc50480ff53139c39f8329ec33e7886b52267" translate="yes" xml:space="preserve">
          <source>On desktop platforms, it is common for modal popups to be closed only when the escape key is pressed. To achieve this behavior, set &lt;a href=&quot;qml-qtquick-controls2-popup#closePolicy-prop&quot;&gt;closePolicy&lt;/a&gt; to &lt;code&gt;Popup.CloseOnEscape&lt;/code&gt;. By default, &lt;code&gt;closePolicy&lt;/code&gt; is set to &lt;code&gt;Popup.CloseOnEscape | Popup.CloseOnPressOutside&lt;/code&gt;, which means that clicking outside of a modal popup will close it.</source>
          <target state="translated">在桌面平台上，通常仅在按下退出键时才关闭模式弹出窗口。若要实现此行为，请将&lt;a href=&quot;qml-qtquick-controls2-popup#closePolicy-prop&quot;&gt;closePolicy&lt;/a&gt;设置为 &lt;code&gt;Popup.CloseOnEscape&lt;/code&gt; 。默认情况下， &lt;code&gt;closePolicy&lt;/code&gt; 设置为 &lt;code&gt;Popup.CloseOnEscape | Popup.CloseOnPressOutside&lt;/code&gt; ，这意味着在模式弹出窗口外部单击将其关闭。</target>
        </trans-unit>
        <trans-unit id="c915f9e77e2dea119e73f345df9b72d3f2df7349" translate="yes" xml:space="preserve">
          <source>On embedded systems, where the hardware has limited resources, this approach can be inefficient. Qt Quick Controls 2 was designed to solve this problem, using &lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;benchmarks&lt;/a&gt; to guide the development.</source>
          <target state="translated">在硬件资源有限的嵌入式系统上，此方法效率不高。Qt Quick Controls 2旨在解决此问题，使用&lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;基准&lt;/a&gt;来指导开发。</target>
        </trans-unit>
        <trans-unit id="33aeee0ea96e0d18986de40ff4bd90a3a293c350" translate="yes" xml:space="preserve">
          <source>On embedded systems, where the hardware has limited resources, this approach can be inefficient. Qt Quick Controls was designed to solve this problem, using &lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;benchmarks&lt;/a&gt; to guide the development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce146db8bcf0076c6e6ab523d6cb838851bd351f" translate="yes" xml:space="preserve">
          <source>On failure and if non-null, the</source>
          <target state="translated">失败时,如果非空,则</target>
        </trans-unit>
        <trans-unit id="05eb7270f90398951853ca19b852813c90eb6fdd" translate="yes" xml:space="preserve">
          <source>On failure, returns a &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; that reports &lt;a href=&quot;qnetworkdatagram#isValid&quot;&gt;not valid&lt;/a&gt;.</source>
          <target state="translated">失败时，返回报告&lt;a href=&quot;qnetworkdatagram#isValid&quot;&gt;无效&lt;/a&gt;的&lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cffad191a057506e0a048b861e4057f9315bad97" translate="yes" xml:space="preserve">
          <source>On hardware that supports it, this class lets you adjust the focus or zoom (both optical and digital). This also includes things like &quot;Macro&quot; mode for close up work (e.g. reading barcodes, or recognising letters), or &quot;touch to focus&quot; - indicating an interesting area of the viewfinder for the hardware to attempt to focus on.</source>
          <target state="translated">在支持该功能的硬件上,该类功能可以让你调整焦点或变焦(包括光学和数字)。这还包括诸如 &quot;微距 &quot;模式,用于近距离工作(如读取条形码,或识别字母),或 &quot;触摸对焦&quot;--指示取景器中一个有趣的区域,让硬件尝试对焦。</target>
        </trans-unit>
        <trans-unit id="8363885fcb9687f6ab4a2f24d0dcc370caef0bdb" translate="yes" xml:space="preserve">
          <source>On iOS and Windows, this class cannot be used because the platform does not expose any data or API which may provide information on the local Bluetooth device.</source>
          <target state="translated">在iOS和Windows上,这个类不能使用,因为该平台没有暴露任何可能提供本地蓝牙设备信息的数据或API。</target>
        </trans-unit>
        <trans-unit id="a56aadea1cc7d6d509c113bc4866c5274d8796fb" translate="yes" xml:space="preserve">
          <source>On iOS, starting from version 8, Core Location framework requires additional entries in the application's Info.plist with keys NSLocationAlwaysUsageDescription or NSLocationWhenInUseUsageDescription and a string to be displayed in the authorization prompt. The key NSLocationWhenInUseUsageDescription is used when requesting permission to use location services while the app is in the foreground. The key NSLocationAlwaysUsageDescription is used when requesting permission to use location services whenever the app is running (both the foreground and the background). If both entries are defined, NSLocationWhenInUseUsageDescription has a priority in the foreground mode.</source>
          <target state="translated">在iOS上,从版本8开始,Core Location框架需要在应用程序的Info.plist中添加额外的条目,其中包含键NSLocationAlwaysUsageDescription或NSLocationWhenInUseUsageDescription以及要在授权提示中显示的字符串。NSLocationWhenInUseUsageDescription键在应用程序处于前台时请求允许使用位置服务时使用。NSLocationAlwaysUsageDescription键在请求允许在应用程序运行时(前台和后台)使用位置服务时使用。如果定义了这两个条目,NSLocationWhenInUseUsageDescription在前台模式下具有优先权。</target>
        </trans-unit>
        <trans-unit id="7ec73f72e47f18ae88197f2e4f20a3d1a36d1ce2" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt; related features.</source>
          <target state="translated">在iOS上，无法使用此类，因为该平台未公开可能允许访问&lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt;相关功能的API 。</target>
        </trans-unit>
        <trans-unit id="339598eed30335c3b1dba3c33ce2e9524cb4dfb3" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothservicediscoveryagent&quot;&gt;QBluetoothServiceDiscoveryAgent&lt;/a&gt; related features.</source>
          <target state="translated">在iOS上，不能使用此类，因为平台未公开可能允许访问&lt;a href=&quot;qbluetoothservicediscoveryagent&quot;&gt;QBluetoothServiceDiscoveryAgent&lt;/a&gt;相关功能的API 。</target>
        </trans-unit>
        <trans-unit id="d1eaa32fa95be2fefceece0a927dee8f9ec94159" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; related features.</source>
          <target state="translated">在iOS上，无法使用此类，因为平台未公开可能允许访问&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt;相关功能的API 。</target>
        </trans-unit>
        <trans-unit id="9faf3405ced15a18dfd9b103a487f9e78fd57842" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; related features.</source>
          <target state="translated">在iOS上，无法使用此类，因为平台未公开可能允许访问&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt;相关功能的API 。</target>
        </trans-unit>
        <trans-unit id="59798b824ae8d6dbb35d12ef5e1879ce2b0c0cc2" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServer related features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8f1150b23d26c2ae6a06ccc4d1ec7d1f7e0f49" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServiceDiscoveryAgent related features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe6ab2479d83c839e03d6132ddf945623a2fbbc" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServiceInfo related features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730877eabbbb911a3cf9a5f5ce25a71c3bc0e03f" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothSocket related features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93397ef8a3c751fea0b8cb626257ac44c252230a" translate="yes" xml:space="preserve">
          <source>On low-end hardware blending can also be quite expensive so for an image or rounded rectangle that covers most of the screen, the amount of blending needed for the interior of these primitives can result in significant performance loss as the entire primitive must be blended.</source>
          <target state="translated">在低端硬件上,混合的成本也相当昂贵,因此对于覆盖大部分屏幕的图像或圆角矩形来说,这些基元内部所需的混合量可能会导致显著的性能损失,因为整个基元必须进行混合。</target>
        </trans-unit>
        <trans-unit id="fcbcc8f437fddaab4caf419554575d776e143eb9" translate="yes" xml:space="preserve">
          <source>On macOS adds a fullscreen button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440ab2351667eb52cbd7f2f8b6960b091b811079" translate="yes" xml:space="preserve">
          <source>On macOS adds a tool bar button (i.e., the oblong button that is on the top right of windows that have toolbars).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca992f374634884a9a791ea7cb95391cd151ef8" translate="yes" xml:space="preserve">
          <source>On macOS and OpenGL, the threaded render loop is not supported when building with XCode 10 (10.14 SDK) or later, since this opts in to layer-backed views on macOS 10.14. You can build with Xcode 9 (10.13 SDK) to opt out of layer-backing, in which case the threaded render loop is available and used by default. There is no such restriction with Metal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7498b95352ca7a31a6760ccfe0fb7b77ca18f27e" translate="yes" xml:space="preserve">
          <source>On macOS and iOS this returns the proper localized name for a bundle if the path &lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;(). On all other platforms an empty &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4d46063b6be6c310ddd36a861cab01a2bf2704" translate="yes" xml:space="preserve">
          <source>On macOS and iOS this will point to the directory actually containing the executable, which may be inside an application bundle (if the application is bundled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b17df84aa1fb46462200b50afdb9b1cf5fd2f3" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;() will return some extra keys for global settings that apply to all applications. These keys can be read using &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;() but cannot be changed, only shadowed. Calling &lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;(false) will hide these global settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3701f1211a6a7633a97ecf459fbc98dbb06b4a2" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, the CFPreferences API used by QSettings expects Internet domain names rather than organization names. To provide a uniform API, QSettings derives a fake domain name from the organization name (unless the organization name already is a domain name, e.g. OpenOffice.org). The algorithm appends &quot;.com&quot; to the company name and replaces spaces and other illegal characters with hyphens. If you want to specify a different domain name, call &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication::setOrganizationDomain&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication::setOrganizationName&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication::setApplicationName&lt;/a&gt;() in your &lt;code&gt;main()&lt;/code&gt; function and then use the default QSettings constructor. Another solution is to use preprocessor directives, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbf60e7cb3a071ef2a4c2cb97a9e22ae75321c6" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, you can access property list &lt;code&gt;.plist&lt;/code&gt; files by passing &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823a2e63d367f147b03859214c869c5aae823fff" translate="yes" xml:space="preserve">
          <source>On macOS and on certain Linux desktop environments such as Ubuntu Unity, QMenuBar is a wrapper for using the system-wide menu bar. If you have multiple menu bars in one dialog the outermost menu bar (normally inside a widget with widget flag &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;) will be used for the system-wide menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f769c7de277cebcfd228fff50e2e6262f05264" translate="yes" xml:space="preserve">
          <source>On macOS and with Qt version 4.3 or higher, clipboard changes made by other applications will only be detected when the application is activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70aa0c8eb12a9169d3522c43975ea3b3beeaa9ae" translate="yes" xml:space="preserve">
          <source>On macOS by default, Qt swaps the Control and Meta (Command) keys (i.e., whenever Control is pressed, Qt sends Meta, and whenever Meta is pressed Control is sent). When this attribute is true, Qt will not do the flip. &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::StandardKey&lt;/a&gt; will also flip accordingly (i.e., &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::Copy&lt;/a&gt; will be Command+C on the keyboard regardless of the value set, though what is output for &lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence::toString&lt;/a&gt;() will be different).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d363e303f21137ed09aa1a90c2e5c8497ec7053" translate="yes" xml:space="preserve">
          <source>On macOS only, if there is exactly one button with the role &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox::RejectRole&lt;/a&gt;, it is made the escape button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc5a64a41d143a71b708828f166640f298e4e58" translate="yes" xml:space="preserve">
          <source>On macOS versions 10.2 and 10.3, these files are used by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b0ddc5f8caf0143fe7f1949a6c495a9ce41f03" translate="yes" xml:space="preserve">
          <source>On macOS,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b99e17b8feabbc4ed47b9d0de5cbf53dcd97c20" translate="yes" xml:space="preserve">
          <source>On macOS, data goes to &lt;code&gt;~/.qttest/Application Support&lt;/code&gt;, cache goes to &lt;code&gt;~/.qttest/Cache&lt;/code&gt;, and config goes to &lt;code&gt;~/.qttest/Preferences&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede5b19eb45167aba6f2eae937d4a83a99805ddf" translate="yes" xml:space="preserve">
          <source>On macOS, depending on how Qt WebEngine is configured at build time, there are two possibilities how spellchecking data is found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f91c884323ac48e7b6f31aa34875c843a3969b0" translate="yes" xml:space="preserve">
          <source>On macOS, high-DPI support is enabled by settings in the &lt;code&gt;Info.plist&lt;/code&gt; file; so make sure these settings are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6866ec1798179600ee15bdcd1a3ebbc8db99d69c" translate="yes" xml:space="preserve">
          <source>On macOS, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1924443f95ec76a8193448334d16f49714084a81" translate="yes" xml:space="preserve">
          <source>On macOS, if the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; is set after the application instance, the application will exit with &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;(), and print a message that the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; should be set before the application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278c39af648e85224b62270b10beb3c6de11b889" translate="yes" xml:space="preserve">
          <source>On macOS, if the modality is set to &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; and the message box has a parent, then the message box will be a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;, otherwise the message box will be a standard dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61eea0801d6c0f4969a258bbecfac2958f9905ac" translate="yes" xml:space="preserve">
          <source>On macOS, if you want your message box to appear as a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; of its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c32941a7cabbdb5a0698343955601248c1e3c71" translate="yes" xml:space="preserve">
          <source>On macOS, it is not possible to unpair a device. If Unpaired is requested, &lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;pairingFinished&lt;/a&gt;() is immediately emitted although the device remains paired. It is possible to request the pairing for a previously unpaired device. In addition &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt; has the same behavior as &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7792428425fa305646808531e587749308caf835" translate="yes" xml:space="preserve">
          <source>On macOS, permissions to access settings not belonging to the current user (i.e. &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;) have changed with 10.7 (Lion). Prior to that version, users having admin rights could access these. For 10.7 and 10.8 (Mountain Lion), only root can. However, 10.9 (Mavericks) changes that rule again but only for the native format (plist files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b85617303975b62b4fda0fc04063ed913dadf60" translate="yes" xml:space="preserve">
          <source>On macOS, security flags are not supported and will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4fb0779f376d9b7f13cc101dbc56945ce8a0c8" translate="yes" xml:space="preserve">
          <source>On macOS, show the tool window even when the application is not active. By default, all tool windows are hidden when the application is inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc773e8e5574c0b087f4006cf6520e5ea3ae6b7" translate="yes" xml:space="preserve">
          <source>On macOS, the Up/Down key bindings for Home/End are explicitly disabled. If you want such bindings (on any platform), you will need to construct them in QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3035c75001d22474cc4c391892aa6a68624f41e7" translate="yes" xml:space="preserve">
          <source>On macOS, the about box is popped up as a modeless window; on other platforms, it is currently application modal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecd45d0dac95698ed49572895a4b0d52f4bf26e" translate="yes" xml:space="preserve">
          <source>On macOS, the following are required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1d13fa7b490c6c0a0822b9a6ac39354b8a6525" translate="yes" xml:space="preserve">
          <source>On macOS, the following languages are also supported:</source>
          <target state="translated">在MacOS上,还支持以下语言。</target>
        </trans-unit>
        <trans-unit id="133fca1b86b107774dcbcfcc6c24ec3c99ee26a9" translate="yes" xml:space="preserve">
          <source>On macOS, the string returned resembles the sequence that is shown in the menu bar if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ab55f5144c99d488618e9a05f53c154c698f77" translate="yes" xml:space="preserve">
          <source>On macOS, there is a difference between a window and view; normally expressed as widgets in Qt. Qt makes assumptions about its parent-child hierarchy that make it complex to put an arbitrary Qt widget into a hierarchy of &quot;normal&quot; views from Apple frameworks. QMacNativeWidget bridges the gap between views and windows and makes it possible to put a hierarchy of Qt widgets into a non-Qt window or view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926491bb7182cd1e18a7e7dd02f638a6ad20ccc5" translate="yes" xml:space="preserve">
          <source>On macOS, this corresponds to the Command keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997b0636751a770507100441ec0546ac9baa3138" translate="yes" xml:space="preserve">
          <source>On macOS, this corresponds to the Control keys. On Windows keyboards, this key is mapped to the Windows key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c319afe08eb298a3bddc7108164e851bfabf67da" translate="yes" xml:space="preserve">
          <source>On macOS, this flag is always set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400e5a23077bc9037ba3e0e7dce13ac405addf7f" translate="yes" xml:space="preserve">
          <source>On macOS, this function will ignore the Proxy Auto Configuration settings, since it cannot execute the associated ECMAScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d57f8b6fda83cdd1c380230b694702be6fb291b" translate="yes" xml:space="preserve">
          <source>On macOS, this function will obtain the proxy settings using the SystemConfiguration framework from Apple. It will apply the FTP, HTTP and HTTPS proxy configurations for queries that contain the protocol tag &quot;ftp&quot;, &quot;http&quot; and &quot;https&quot;, respectively. If the SOCKS proxy is enabled in that configuration, this function will use the SOCKS server for all queries. If SOCKS isn't enabled, it will use the HTTPS proxy for all TcpSocket and UrlRequest queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8387b7bb736c1850bba3803e693bbaaa0bfe00" translate="yes" xml:space="preserve">
          <source>On macOS, this is currenly converted to a NSMenu, so the aboutToHide() signal is not emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5716a29b03574dcbe1252ce5b07030d6c53a8f" translate="yes" xml:space="preserve">
          <source>On macOS, this value is ignored as the platform does not permit access to the security parameter of the socket. By default the platform prefers secure/encrypted connections though and therefore this function always returns &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d4fcccb2eef200ead810289a5bf14579776bb2" translate="yes" xml:space="preserve">
          <source>On macOS, this works more at the application level and will cause the application icon to bounce in the dock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc9a30a4a874e65b3735c5d3cd575c785428521" translate="yes" xml:space="preserve">
          <source>On macOS/iOS/tvOS CoreBluetooth does not expose/accept hardware addresses for LE devices; instead developers are supposed to use unique 128-bit UUIDs, generated by CoreBluetooth. These UUIDS will stay constant for the same central &amp;lt;-&amp;gt; peripheral pair and we use them when connecting to a remote device. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt;, this value will always be the one passed in when the controller object was created. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt;, this value is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fa8d4a31ff2dd443da846d8cd791198ad32ce6" translate="yes" xml:space="preserve">
          <source>On macOS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111aed6ab634b5c659cced0c05d60a0030105831" translate="yes" xml:space="preserve">
          <source>On macOs, Qt will create a menu item &lt;code&gt;Quit&lt;/code&gt; if there is no menu item whose text is &quot;quit&quot; or &quot;exit&quot;. This menu item calls the &lt;code&gt;QCoreApplication::quit&lt;/code&gt; signal, not the &lt;code&gt;QQuickWindow::closing()&lt;/code&gt; signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0410214f377ebe2837d431e983e7ed11b07c0e" translate="yes" xml:space="preserve">
          <source>On many configurations, the scene graph rendering will happen on a dedicated render thread. This is done to increase parallelism of multi-core processors and make better use of stall times such as waiting for a blocking swap buffer call. This offers significant performance improvements, but imposes certain restrictions on where and when interaction with the scene graph can happen.</source>
          <target state="translated">在许多配置上,场景图的渲染将发生在一个专门的渲染线程上。这样做是为了提高多核处理器的并行性,并更好地利用停滞时间,如等待阻塞交换缓冲区调用。这提供了显著的性能改进,但对与场景图的交互在何时何地发生有一定的限制。</target>
        </trans-unit>
        <trans-unit id="c4bb4017320968dc14a101cf9ab007de6abbaffa" translate="yes" xml:space="preserve">
          <source>On many platforms, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-graphics.html#qt-quick-scene-graph&quot;&gt;scene graph&lt;/a&gt; will even be rendered on a dedicated render thread while the GUI thread is preparing the next frame's state.</source>
          <target state="translated">在许多平台上，&lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-graphics.html#qt-quick-scene-graph&quot;&gt;场景图&lt;/a&gt;甚至会在GUI线程准备下一帧状态时在专用渲染线程上进行渲染。</target>
        </trans-unit>
        <trans-unit id="28c4753aa92097c0e9edbff76015da06419266fc" translate="yes" xml:space="preserve">
          <source>On many platforms, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-graphics.html#qt-quick-scene-graph&quot;&gt;scene graph&lt;/a&gt; will even be rendered on a dedicated render thread while the GUI thread is preparing the next frame's state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2294b173fa00f42e1dc8880ac84178d20f0a23" translate="yes" xml:space="preserve">
          <source>On mobile platforms, switches are commonly used to enable or disable features.</source>
          <target state="translated">在移动平台上,开关通常用于启用或禁用功能。</target>
        </trans-unit>
        <trans-unit id="1a5a9de5d6cdeb88a2c4ac6389030bc54e56f99e" translate="yes" xml:space="preserve">
          <source>On models that support this, inserts</source>
          <target state="translated">在支持此功能的机型上,插入</target>
        </trans-unit>
        <trans-unit id="41592e465ed21517e25d1b60b76d4898a3a7a988" translate="yes" xml:space="preserve">
          <source>On models that support this, moves</source>
          <target state="translated">在支持这种模式的机型上,移动</target>
        </trans-unit>
        <trans-unit id="ade874bfdcf68f6016f74be542e10e3dda132736" translate="yes" xml:space="preserve">
          <source>On models that support this, removes</source>
          <target state="translated">在支持此功能的型号上,删除</target>
        </trans-unit>
        <trans-unit id="fd0206cd94aa8cab3850091bd8cf6f5f8adff5cd" translate="yes" xml:space="preserve">
          <source>On modern Unix systems, this means &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; usually has accurate information about historical transitions (including DST, see below) whenever possible. On Windows, where the system doesn't support historical timezone data, historical accuracy is not maintained with respect to timezone transitions, notably including DST.</source>
          <target state="translated">在现代Unix系统上，这意味着&lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;通常会尽可能地获取有关历史转换的准确信息（包括DST，请参见下文）。在Windows系统不支持历史时区数据的Windows上，相对于时区转换（尤其是DST），不能保持历史准确性。</target>
        </trans-unit>
        <trans-unit id="bfd4729f2dce093f436ccddf7409f403a119be3a" translate="yes" xml:space="preserve">
          <source>On modern Unix systems, this means QDateTime usually has accurate information about historical transitions (including DST, see below) whenever possible. On Windows, where the system doesn't support historical timezone data, historical accuracy is not maintained with respect to timezone transitions, notably including DST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c6c7e7a600194ac0290642a7c35ead0986ada6" translate="yes" xml:space="preserve">
          <source>On most file systems, rename() fails only if</source>
          <target state="translated">在大多数文件系统中,只有在以下情况下,rename()才会失败</target>
        </trans-unit>
        <trans-unit id="c4a5b2acc8daf9bc161e1ce2107416cbb5562ac6" translate="yes" xml:space="preserve">
          <source>On most operating systems the system path is determined by the &lt;code&gt;PATH&lt;/code&gt; environment variable. The directories where to search for the executable can be set in the paths argument. To search in both your own paths and the system paths, call findExecutable twice, once with paths set and once with paths empty. Symlinks are not resolved in order to preserve behavior for the case of executables whose behavior depends on the name they are invoked with .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4189cdb33281e6173c000846c64209d4eb96979" translate="yes" xml:space="preserve">
          <source>On most operating systems the system path is determined by the PATH environment variable.</source>
          <target state="translated">在大多数操作系统中,系统路径是由PATH环境变量决定的。</target>
        </trans-unit>
        <trans-unit id="9e599cf93a104519a9331e2aca4dc391624e212f" translate="yes" xml:space="preserve">
          <source>On most platforms, the rendering will occur on a &lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;dedicated thread&lt;/a&gt;. For this reason, the &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; class enforces a strict separation between the item implementation and the FBO rendering. All item logic, such as properties and UI-related helper functions needed by QML should be located in a &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; class subclass. Everything that relates to rendering must be located in the &lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject::Renderer&lt;/a&gt; class.</source>
          <target state="translated">在大多数平台上，渲染将在&lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;专用线程上进行&lt;/a&gt;。因此，&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;类在项目实现和FBO渲染之间强制执行严格的分离。所有项目逻辑，例如QML所需的属性和与UI相关的帮助器功能，都应位于&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;类的子类中。与渲染相关的所有内容都必须位于&lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject :: Renderer&lt;/a&gt;类中。</target>
        </trans-unit>
        <trans-unit id="f78d8681a24f3c55f8218f80b46395c1e46f5de2" translate="yes" xml:space="preserve">
          <source>On most platforms, the rendering will occur on a &lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;dedicated thread&lt;/a&gt;. For this reason, the QQuickFramebufferObject class enforces a strict separation between the item implementation and the FBO rendering. All item logic, such as properties and UI-related helper functions needed by QML should be located in a QQuickFramebufferObject class subclass. Everything that relates to rendering must be located in the &lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject::Renderer&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56f7e639613b5b65503e1bb78af1b62cc5594cb" translate="yes" xml:space="preserve">
          <source>On most systems this function will return true. However, on X11 systems that do not support CUPS, this function will return false. That means the application has to handle the number of copies by printing the same document the required number of times.</source>
          <target state="translated">在大多数系统中,该函数将返回true。但是,在不支持CUPS的X11系统上,这个函数将返回false。这意味着应用程序必须通过打印所需次数的同一文档来处理副本数量。</target>
        </trans-unit>
        <trans-unit id="8f23b1863f40dc4ba0720c4de3e06f71c2964972" translate="yes" xml:space="preserve">
          <source>On most systems, inserting a variable with no contents will have the same effect for applications as if the variable had not been set at all. However, to guarantee that there are no incompatibilities, to remove a variable, please use the &lt;a href=&quot;qprocessenvironment#remove&quot;&gt;remove&lt;/a&gt;() function.</source>
          <target state="translated">在大多数系统上，插入没有内容的变量对于应用程序将具有与根本没有设置变量相同的效果。但是，为保证不存在不兼容性，要删除变量，请使用&lt;a href=&quot;qprocessenvironment#remove&quot;&gt;remove&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="efac2b84fadb23f4a588caa9754c76356866e879" translate="yes" xml:space="preserve">
          <source>On non-Unix systems, &lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt; will always report an invalid state and &lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor::isSupported&lt;/a&gt;() will return false.</source>
          <target state="translated">在非Unix系统上，&lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt;将始终报告无效状态，而&lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor :: isSupported&lt;/a&gt;（）将返回false。</target>
        </trans-unit>
        <trans-unit id="7999423d46d3c58e88ef959eaff6e634a4be5b1a" translate="yes" xml:space="preserve">
          <source>On non-Unix systems, QDBusUnixFileDescriptor will always report an invalid state and &lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor::isSupported&lt;/a&gt;() will return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38c3a23dee5fa9311a5107003b6936f0a0d73bb" translate="yes" xml:space="preserve">
          <source>On operating systems where file system is case sensitive, &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; also tries to load a lower-cased version of the locale name.</source>
          <target state="translated">在文件系统区分大小写的操作系统上，&lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;也尝试加载语言环境名称的小写版本。</target>
        </trans-unit>
        <trans-unit id="1aa7f8494db2fc0822ab3e263ae6aa016fb72ef0" translate="yes" xml:space="preserve">
          <source>On operating systems where the system API for passing command line</source>
          <target state="translated">在操作系统上,如果系统的API是用来传递命令行的。</target>
        </trans-unit>
        <trans-unit id="05e5202b8c925c0c913ef79c144980eb361aa914" translate="yes" xml:space="preserve">
          <source>On operating systems where the system API for passing command line arguments to a subprocess natively uses a single string (Windows), one can conceive command lines which cannot be passed via &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;'s portable list-based API. In these rare cases you need to use &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;() and &lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;() instead of this function.</source>
          <target state="translated">在用于将命令行参数传递给子进程的系统API本机使用单个字符串（Windows）的操作系统上，可以构想无法通过&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;的基于列表的可移植API 传递的命令行。在这些罕见的情况下，您需要使用&lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;（）和&lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;（）代替此函数。</target>
        </trans-unit>
        <trans-unit id="28136e7d36f13be0dbb0c61f2f62bad732585c92" translate="yes" xml:space="preserve">
          <source>On or off (only for toggling push buttons).</source>
          <target state="translated">开或关(仅用于切换按钮)。</target>
        </trans-unit>
        <trans-unit id="3f1b1f250acb8d5ddcc132e442f60e2cb28137a4" translate="yes" xml:space="preserve">
          <source>On other operating systems, &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; will fall back to a PRNG of good numeric distribution, but it cannot guarantee proper seeding in all cases. Please consult the OS documentation for more information.</source>
          <target state="translated">在其他操作系统上，&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;将退回到具有良好数字分布的PRNG，但不能保证在所有情况下都可以正确播种。请查阅操作系统文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="2bbede3df925eda68d8fe819b6b61812a597b64c" translate="yes" xml:space="preserve">
          <source>On other operating systems, QRandomGenerator will fall back to a PRNG of good numeric distribution, but it cannot guarantee proper seeding in all cases. Please consult the OS documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15b206f77ee2ee8cfd8115fd9c168f87e0d6541" translate="yes" xml:space="preserve">
          <source>On other platforms than Windows, &quot;Default&quot; and &quot;.&quot; would be treated as regular subkeys.</source>
          <target state="translated">在Windows以外的其他平台上,&quot;Default &quot;和&quot;.&quot;将被视为常规子键。</target>
        </trans-unit>
        <trans-unit id="707eb1c8724241a1e87379d817c5d04fe6cf181a" translate="yes" xml:space="preserve">
          <source>On other platforms, the default is the empty string.</source>
          <target state="translated">在其他平台上,默认为空字符串。</target>
        </trans-unit>
        <trans-unit id="c16c91f3148fe99500ed5d9ed9ec9a9afcaa8921" translate="yes" xml:space="preserve">
          <source>On other systems, this function will pick up proxy settings from the &quot;http_proxy&quot; environment variable. This variable must be a URL using one of the following schemes: &quot;http&quot;, &quot;socks5&quot; or &quot;socks5h&quot;.</source>
          <target state="translated">在其他系统中,该函数将从 &quot;http_proxy &quot;环境变量中获取代理设置。这个变量必须是一个使用以下方案之一的URL。&quot;http&quot;,&quot;socks5&quot; 或 &quot;socks5h&quot;.</target>
        </trans-unit>
        <trans-unit id="ffa936f15b2bfcf36e9b62a214708044a04b8087" translate="yes" xml:space="preserve">
          <source>On platforms that do not provide nanosecond resolution, the value returned will be the best estimate available.</source>
          <target state="translated">在不提供纳秒分辨率的平台上,返回的值将是可用的最佳估计值。</target>
        </trans-unit>
        <trans-unit id="f8e36630f309db9813967e18eaa4f77c0b022776" translate="yes" xml:space="preserve">
          <source>On platforms that do not use dynamic GL switching, the return value is &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">在不使用动态GL切换的平台上，返回值为 &lt;code&gt;nullptr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50c4185d33f086855aaf80873eb80641afeea45d" translate="yes" xml:space="preserve">
          <source>On platforms that support it, this method of moving windows is preferred over &lt;code&gt;setPosition&lt;/code&gt;, because it allows a more native look-and-feel of moving windows, e.g. letting the window manager snap this window against other windows, or special tiling or resizing behavior with animations when dragged to the edge of the screen. Furthermore, on some platforms such as Wayland, &lt;code&gt;setPosition&lt;/code&gt; is not supported, so this is the only way the application can influence its position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3c1056bb54f6c5d06383834d667d7c6194a04d" translate="yes" xml:space="preserve">
          <source>On platforms that support it, this method of resizing windows is preferred over &lt;code&gt;setGeometry&lt;/code&gt;, because it allows a more native look-and-feel of resizing windows, e.g. letting the window manager snap this window against other windows, or special resizing behavior with animations when dragged to the edge of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e089be5b188ff534e5a5114f53ca6db3653567b5" translate="yes" xml:space="preserve">
          <source>On platforms where retrieving the native handle is not supported, or if neither &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;() nor &lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;setNativeHandle&lt;/a&gt;() was called, a null variant is returned.</source>
          <target state="translated">在不支持检索本机句柄的平台上，或者如果未&lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;调用&lt;/a&gt;&lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;（）或setNativeHandle（）的平台，则返回null变体。</target>
        </trans-unit>
        <trans-unit id="097e335f3aa7896ef14a46c7227eceadb182fa7f" translate="yes" xml:space="preserve">
          <source>On platforms where the OpenGL implementation is not dynamically loaded, the return value is determined during compile time and never changes.</source>
          <target state="translated">在没有动态加载OpenGL实现的平台上,返回值是在编译时确定的,不会改变。</target>
        </trans-unit>
        <trans-unit id="11551870c462ac03be9f07e2e333fda2d6df3f73" translate="yes" xml:space="preserve">
          <source>On platforms where this information is not available, returns the same as &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;().</source>
          <target state="translated">在此信息不可用的平台上，返回的内容与&lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;（）相同。</target>
        </trans-unit>
        <trans-unit id="de86b2310b46ab95d774db26591152dc57268371" translate="yes" xml:space="preserve">
          <source>On press of the &lt;code&gt;[TAB]&lt;/code&gt; key, the item inside the &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; gets focus. If this item can handle &lt;code&gt;[TAB]&lt;/code&gt; key press, focus will change accordingly within the item, otherwise the next widget in the focus chain gets focus.</source>
          <target state="translated">按下 &lt;code&gt;[TAB]&lt;/code&gt; 键，&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;内部的项目将获得焦点。如果该项目可以处理 &lt;code&gt;[TAB]&lt;/code&gt; 键，则焦点将在该项目内相应地改变，否则焦点链中的下一个小部件将获得焦点。</target>
        </trans-unit>
        <trans-unit id="7c48ef163182db2a7fcae5fdd297decbb9801888" translate="yes" xml:space="preserve">
          <source>On press of the &lt;code&gt;[TAB]&lt;/code&gt; key, the item inside the QQuickWidget gets focus. If this item can handle &lt;code&gt;[TAB]&lt;/code&gt; key press, focus will change accordingly within the item, otherwise the next widget in the focus chain gets focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216f293e577fbbb41756144aacb2342b7d858e73" translate="yes" xml:space="preserve">
          <source>On some desktop platforms (including Windows and Unix), the application name (from &lt;a href=&quot;qguiapplication#applicationDisplayName-prop&quot;&gt;QGuiApplication::applicationDisplayName&lt;/a&gt;) is added at the end of the window title, if set. This is done by the QPA plugin, so it is shown to the user, but isn't part of the windowTitle string.</source>
          <target state="translated">在某些桌面平台（包括Windows和Unix）上，应用程序名称（来自&lt;a href=&quot;qguiapplication#applicationDisplayName-prop&quot;&gt;QGuiApplication :: applicationDisplayName&lt;/a&gt;）添加在窗口标题的末尾（如果已设置）。这是由QPA插件完成的，因此会显示给用户，但不属于windowTitle字符串。</target>
        </trans-unit>
        <trans-unit id="13fac2949d067de8eee19c6e772df44625a7e5d3" translate="yes" xml:space="preserve">
          <source>On some platforms (e.g. X11), the drawConvexPolygon() function can be faster than the &lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;() function.</source>
          <target state="translated">在某些平台上（如X11），则drawConvexPolygon（）函数可以比快&lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="34f97bbe7845b46e635a2c35b414f90487ac3ba8" translate="yes" xml:space="preserve">
          <source>On some platforms (for instance, iOS) the default framebuffer object depends on the surface being rendered to, and might be different from 0. Thus, instead of calling glBindFramebuffer(0), you should call glBindFramebuffer(ctx-&amp;gt;defaultFramebufferObject()) if you want your application to work across different Qt platforms.</source>
          <target state="translated">在某些平台（例如，iOS）上，默认帧缓冲区对象取决于要渲染到的表面，并且可能与0不同。因此，应调用glBindFramebuffer（ctx-&amp;gt; defaultFramebufferObject（）），而不是调用glBindFramebuffer（0）。如果您希望您的应用程序跨不同的Qt平台运行。</target>
        </trans-unit>
        <trans-unit id="de6d802b44b245bdb7ef87a8e2ea75a66a8508de" translate="yes" xml:space="preserve">
          <source>On some platforms context loss situations is not something that can avoided. On others however, they may need to be opted-in to. This can be done by enabling &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;ResetNotification&lt;/a&gt; in the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;. This will lead to setting &lt;code&gt;RESET_NOTIFICATION_STRATEGY_EXT&lt;/code&gt; to &lt;code&gt;LOSE_CONTEXT_ON_RESET_EXT&lt;/code&gt; in the underlying native OpenGL context. &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; will then monitor the status via &lt;code&gt;glGetGraphicsResetStatusEXT()&lt;/code&gt; in every &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb4e721238ec59021d213a4d04d779ecf98d2b8" translate="yes" xml:space="preserve">
          <source>On some platforms it is a platform requirement that the application open a network session before any network operations can be performed. This can be tested by the presents of the &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager::NetworkSessionRequired&lt;/a&gt; flag in the value returned by the &lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager::capabilities&lt;/a&gt;() function.</source>
          <target state="translated">在某些平台上，平台要求应用程序必须先打开网络会话，然后才能执行任何网络操作。这可以通过&lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager :: capabilities&lt;/a&gt;（）函数返回的值中的&lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager :: NetworkSessionRequired&lt;/a&gt;标志的出现进行测试。</target>
        </trans-unit>
        <trans-unit id="958c141ccc5a684fa33965a31052364570d61d43" translate="yes" xml:space="preserve">
          <source>On some platforms it is possible to pre-register an application to receive NDEF messages matching a given criteria. This is useful to get the system to automatically launch your application when a matching NDEF message is received. This removes the need to have the user manually launch NDEF handling applications, prior to touching a tag, or to have those applications always running and using system resources.</source>
          <target state="translated">在某些平台上,可以预先注册一个应用程序以接收与给定标准相匹配的 NDEF 消息。这对于让系统在收到匹配的 NDEF 消息时自动启动您的应用程序非常有用。这样就无需用户在接触标记之前手动启动 NDEF 处理应用程序,也无需让这些应用程序始终运行并使用系统资源。</target>
        </trans-unit>
        <trans-unit id="c2a2a1e397e164b7f23274f35cdc6d18e0a707f9" translate="yes" xml:space="preserve">
          <source>On some platforms the native context handle is not sufficient and other related handles (for example, for a window or display) have to be provided in addition. Therefore</source>
          <target state="translated">在某些平台上,本机的上下文句柄是不够的,还需要另外提供其他相关的句柄(例如,窗口或显示)。因此</target>
        </trans-unit>
        <trans-unit id="20010ff5a4b8e3a16de71feedf70aa68fe2c3db7" translate="yes" xml:space="preserve">
          <source>On some platforms the return value of &lt;code&gt;false&lt;/code&gt; for a context that was successfully created previously indicates that the OpenGL context was lost.</source>
          <target state="translated">在某些平台上，先前成功创建的上下文的返回值 &lt;code&gt;false&lt;/code&gt; 表示OpenGL上下文已丢失。</target>
        </trans-unit>
        <trans-unit id="9c8be1c2d514ab4d9b4b152b27947d9b30037220" translate="yes" xml:space="preserve">
          <source>On some platforms the service discovery might lead to pairing requests. Therefore it is not recommended to do service discoveries on all devices. This function can be used to restrict the service discovery to a particular device.</source>
          <target state="translated">在某些平台上,服务发现可能会导致配对请求。因此,不建议在所有设备上进行服务发现。此功能可用于将服务发现限制在特定设备上。</target>
        </trans-unit>
        <trans-unit id="684b93ba29be6c4ee11d9560ae8a7c160f610ce5" translate="yes" xml:space="preserve">
          <source>On some platforms the size grip automatically hides itself when the window is shown full screen or maximised.</source>
          <target state="translated">在某些平台上,当窗口全屏或最大化显示时,尺寸手柄会自动隐藏起来。</target>
        </trans-unit>
        <trans-unit id="02bee986cbf2492c7d23749e33b81016094ebe37" translate="yes" xml:space="preserve">
          <source>On some platforms, device discovery may lead to pairing requests.</source>
          <target state="translated">在某些平台上,设备发现可能会导致配对请求。</target>
        </trans-unit>
        <trans-unit id="46574dd13730a320c02663d04dec60fd6f1ff980" translate="yes" xml:space="preserve">
          <source>On some platforms, the file name suffix for precompiled header files is the same as that for other object files. For example, the following declarations may cause two different object files with the same name to be generated:</source>
          <target state="translated">在某些平台上,预编译头文件的文件名后缀与其他对象文件相同。例如,以下声明可能会导致生成两个名称相同的不同对象文件。</target>
        </trans-unit>
        <trans-unit id="b07f91e16f98dc094fe104a3dd260214ab60fd05" translate="yes" xml:space="preserve">
          <source>On some platforms, the frame may be put into a queue and the return value may only indicate a successful insertion into the queue. The actual frame will be send later on. Therefore the &lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt;() signal is the final confirmation that the frame has been handed off to the transport layer. If an error occurs the &lt;a href=&quot;qcanbusdevice#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;() is emitted.</source>
          <target state="translated">在某些平台上，可能会将帧放入队列中，并且返回值可能仅指示成功插入队列中。实际帧将稍后发送。因此，&lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt;（）信号是对帧已移交给传输层的最终确认。如果发生错误，则会发出&lt;a href=&quot;qcanbusdevice#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="b14591797de380c2198aeb57dc2186da2a5f17cc" translate="yes" xml:space="preserve">
          <source>On some platforms, the symbols required by</source>
          <target state="translated">在一些平台上,</target>
        </trans-unit>
        <trans-unit id="e492c97f7f48a3b1d74e81536ecae5753a49beaf" translate="yes" xml:space="preserve">
          <source>On some systems it is possible for there to be available printers but none of them set to be the default printer.</source>
          <target state="translated">在某些系统中,有可能存在可用的打印机,但没有一台被设置为默认打印机。</target>
        </trans-unit>
        <trans-unit id="87e8d766af5194858d7c9f0eb0881452ec8c871f" translate="yes" xml:space="preserve">
          <source>On some systems it may become necessary to target a specific overlay plane through a pre-defined connector. Just forcing a layer index via &lt;code&gt;QT_QPA_EGLFS_LAYER_INDEX&lt;/code&gt; does not perform plane configuration and is therefore not suitable in itself. Instead, in such special scenarios use the &lt;code&gt;QT_QPA_EGLFS_KMS_CONNECTOR_INDEX&lt;/code&gt; and &lt;code&gt;QT_QPA_EGLFS_KMS_PLANE_INDEX&lt;/code&gt; environment variables. When these are set, only the specified connector and plane will be in use, all other outputs will get ignored. The backend will take care of picking the EGL layer that corresponds to the desired plane, and the configuring of the plane.</source>
          <target state="translated">在某些系统上，可能有必要通过预定义的连接器来定位特定的覆盖平面。仅通过 &lt;code&gt;QT_QPA_EGLFS_LAYER_INDEX&lt;/code&gt; 强制层索引不会执行平面配置，因此本身不适合。相反，在这种特殊情况下，请使用 &lt;code&gt;QT_QPA_EGLFS_KMS_CONNECTOR_INDEX&lt;/code&gt; 和 &lt;code&gt;QT_QPA_EGLFS_KMS_PLANE_INDEX&lt;/code&gt; 环境变量。设置这些选项后，将仅使用指定的连接器和平面，所有其他输出将被忽略。后端将负责挑选与所需平面相对应的EGL层，并对平面进行配置。</target>
        </trans-unit>
        <trans-unit id="283b10be9f34b91b6891d6c6ccb6950c21d9f437" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; will need to heuristically determine which addresses are eligible.</source>
          <target state="translated">在某些系统上，&lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt;将需要启发式确定哪些地址符合条件。</target>
        </trans-unit>
        <trans-unit id="0dee526eee6dcf66479929545416072bde171509" translate="yes" xml:space="preserve">
          <source>On some systems, if &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;() is not called before closing the file, the temporary file may be removed regardless of the state of this property. This behavior should not be relied upon, so application code should either call &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;() or leave the auto removal functionality enabled.</source>
          <target state="translated">在某些系统上，如果在关闭文件之前未调用&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（），则无论此属性的状态如何，都可以删除该临时文件。不应依赖此行为，因此应用程序代码应调用&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）或保持启用自动删除功能。</target>
        </trans-unit>
        <trans-unit id="c80e7654a8bec1f4d5facbbd74deaca93f98ee25" translate="yes" xml:space="preserve">
          <source>On some systems, reading an image directly to &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; can use less memory than reading a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; to convert it to &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;.</source>
          <target state="translated">在某些系统上，直接读取图像到&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;会比读取&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;转换成&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;占用更少的内存。</target>
        </trans-unit>
        <trans-unit id="0317377699bff9eb7d97170a601767a6a9cfb34e" translate="yes" xml:space="preserve">
          <source>On some systems, the tooltip's length is limited. The tooltip will be truncated if necessary.</source>
          <target state="translated">在某些系统中,工具提示的长度是有限的。必要时,工具提示将被截断。</target>
        </trans-unit>
        <trans-unit id="8acffa276c4f7f8f8e7bf0d6d37e74022ed7de05" translate="yes" xml:space="preserve">
          <source>On some touch screens the coordinates must be rotated by setting &lt;code&gt;rotate&lt;/code&gt; to 90, 180, or 270.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d596c23df0bcb80eb02dee73f5b9614aa3ed6e0" translate="yes" xml:space="preserve">
          <source>On some types of touchscreens, especially those using TUIO drivers, it's possible to use recognizable physical tokens (fiducial objects) in addition to fingers. So if this point is a touch point, and uniqueId is set, it is the identifier for such an object.</source>
          <target state="translated">在某些类型的触摸屏上,特别是那些使用 TUIO 驱动程序的触摸屏上,除了手指之外,还可以使用可识别的物理标记(fiducial 对象)。因此,如果这个点是一个触摸点,并且设置了uniqueId,它就是这样一个对象的标识符。</target>
        </trans-unit>
        <trans-unit id="e04c70e0a07d9e15dd2ce9a8af14e64663eef194" translate="yes" xml:space="preserve">
          <source>On standard Linux distributions such as Ubuntu, gamepads such as XBox or PlayStation controllers are detected out-of-the-box. To check if the gamepad is detected, &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;dmesg&lt;/code&gt; logs using:</source>
          <target state="translated">在标准Linux发行版（如Ubuntu）上，即装即用地检测到Xpad或PlayStation控制器之类的游戏手柄。要检查是否检测到游戏手柄， &lt;code&gt;grep&lt;/code&gt; 的 &lt;code&gt;dmesg&lt;/code&gt; 的使用日志：</target>
        </trans-unit>
        <trans-unit id="7d5472790337d1d4e59cdd56ed2dea3a96341787" translate="yes" xml:space="preserve">
          <source>On success, the function returns &lt;code&gt;true&lt;/code&gt; and the socket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;BoundState&lt;/a&gt;; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">成功时，该函数返回 &lt;code&gt;true&lt;/code&gt; ，并且套接字进入&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;BoundState&lt;/a&gt;；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="217a151d2ba7560a1f4a4b2e9000d3ada58dd09c" translate="yes" xml:space="preserve">
          <source>On success, this function returns the integer which has been entered by the user; on failure, it returns the initial</source>
          <target state="translated">成功时,该函数返回用户输入的整数;失败时,返回初始的</target>
        </trans-unit>
        <trans-unit id="0a549d2d16f78dece6ffe5f4ba948cc6c05ced1e" translate="yes" xml:space="preserve">
          <source>On successful completion of the operation, the reply will contain a list of search term suggestions. See &lt;a href=&quot;location-places-cpp#search-suggestions&quot;&gt;Search Suggestions&lt;/a&gt; for an example on how to use a search suggestion reply.</source>
          <target state="translated">成功完成操作后，回复将包含搜索项建议列表。有关如何使用搜索建议答复的示例，请参阅&lt;a href=&quot;location-places-cpp#search-suggestions&quot;&gt;搜索建议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48432cc5d48df67b159bc70dcb3b1ff5be20eb08" translate="yes" xml:space="preserve">
          <source>On system start-up, the default layout direction depends on the application's language.</source>
          <target state="translated">在系统启动时,默认的布局方向取决于应用程序的语言。</target>
        </trans-unit>
        <trans-unit id="9f6f61c3a0a5edacdb6941ae738f76fa70e3be35" translate="yes" xml:space="preserve">
          <source>On systems running a Linux kernel without inotify support, file systems that contain watched paths cannot be unmounted.</source>
          <target state="translated">在运行不支持inotify的Linux内核的系统上,包含监视路径的文件系统不能被卸载。</target>
        </trans-unit>
        <trans-unit id="fa66645afc6a39ae41bd9362f5877b326bd036c5" translate="yes" xml:space="preserve">
          <source>On systems that are configured to use the available screens as a single, large virtual desktop, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt; property will be set to true. In this case, the widget's size is usually the size of the bounding rectangle of all the screens.</source>
          <target state="translated">在配置为将可用屏幕用作单个大型虚拟桌面的系统上，&lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt;属性将设置为true。在这种情况下，小部件的大小通常是所有屏幕的边界矩形的大小。</target>
        </trans-unit>
        <trans-unit id="5ce06ea7ef750ab64d75b86a57bfd0821bc61477" translate="yes" xml:space="preserve">
          <source>On systems that are configured to use the available screens as a single, large virtual desktop, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt; property will be set to true. In this case, the widget's size is usually the size of the bounding rectangle of all the screens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b75b64683e6a4695e0bfa1ff74f76fc05dfdc7a" translate="yes" xml:space="preserve">
          <source>On systems that do not have symbolic links this function will always return the same string that &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;() returns. If the canonical path does not exist (normally due to dangling symbolic links) canonicalPath() returns an empty string.</source>
          <target state="translated">在没有符号链接的系统上，此函数将始终返回与&lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）返回的字符串相同的字符串。如果规范路径不存在（通常是由于符号链接悬而未决），canonicalPath（）将返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="bf055bffb495271e6b40153e0db0d5bea81548b3" translate="yes" xml:space="preserve">
          <source>On systems that do not support time zones, this function will behave as if local time were &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt;.</source>
          <target state="translated">在不支持时区的系统上，此功能的行为就像本地时间是&lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: UTC&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8426a5b516aee828131cfae3e4c5e93ba71cdc42" translate="yes" xml:space="preserve">
          <source>On systems where files do not have permissions this function always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在没有文件权限的系统上，此函数始终返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9f5896ef661837ef656cf71b6500f89533d6442" translate="yes" xml:space="preserve">
          <source>On systems where the user's desktop is displayed using more than one screen, certain types of applications may need to obtain information about the configuration of the user's workspace to ensure that new windows and dialogs are opened in appropriate locations.</source>
          <target state="translated">在用户桌面使用多个屏幕显示的系统中,某些类型的应用程序可能需要获取用户工作空间的配置信息,以确保在适当的位置打开新窗口和对话框。</target>
        </trans-unit>
        <trans-unit id="9ff05ff4d4fd2a0c4ec48dd98879ec9f55a8f523" translate="yes" xml:space="preserve">
          <source>On systems which do not maintain a list of &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;defaultConfiguration()&lt;/a&gt; an invalid configuration is returned. A possible workaround could be to implement a custom dialog which is populated based on what &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;() returns.</source>
          <target state="translated">在不维护&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;defaultConfiguration（）&lt;/a&gt;列表的系统上，将返回无效的配置。一个可能的解决方法是实现一个自定义对话框，该对话框根据&lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager :: allConfigurations&lt;/a&gt;（）返回的内容进行填充。</target>
        </trans-unit>
        <trans-unit id="8c7112f14169be9a416c8fe33e65874cb5a01deb" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; side, the &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; needs to register a callback to be used when the external schema is detected. The callback must be a &lt;a href=&quot;qremoteobjectnode#RemoteObjectSchemaHandler-typedef&quot;&gt;RemoteObjectSchemaHandler&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;副本&lt;/a&gt;端，&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt;需要注册一个回调，以在检测到外部架构时使用。回调必须是&lt;a href=&quot;qremoteobjectnode#RemoteObjectSchemaHandler-typedef&quot;&gt;RemoteObjectSchemaHandler&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="434b12f1d40f9f93e07ace07abf7185c1c9c874a" translate="yes" xml:space="preserve">
          <source>On the QML side, you can now use the registered enums:</source>
          <target state="translated">在QML方面,你现在可以使用注册的枚举。</target>
        </trans-unit>
        <trans-unit id="b2d93553590cf4d762928f286dacc78e76252159" translate="yes" xml:space="preserve">
          <source>On the Session Bus, one can find other applications by the same user that are sharing the same desktop session (hence the name). On the System Bus, however, processes shared for the whole system are usually found.</source>
          <target state="translated">在 &quot;会话总线 &quot;上,可以找到由同一用户共享同一桌面会话的其他应用程序(因此而得名)。但在系统总线上,通常可以找到整个系统共享的进程。</target>
        </trans-unit>
        <trans-unit id="ac0312dc21f0f689a2421be25d12d0f7d2a078ba" translate="yes" xml:space="preserve">
          <source>On the command-line, applications can be built using &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;. Optionally, &lt;code&gt;qmake&lt;/code&gt; can generate project files for Xcode with &lt;code&gt;-spec macx-xcode&lt;/code&gt;. If you are using the binary package, &lt;code&gt;qmake&lt;/code&gt; generates Xcode projects by default; use &lt;code&gt;-spec macx-gcc&lt;/code&gt; to generate makefiles. For example:</source>
          <target state="translated">在命令行上，可以使用 &lt;code&gt;qmake&lt;/code&gt; 和 &lt;code&gt;make&lt;/code&gt; 来构建应用程序。或者， &lt;code&gt;qmake&lt;/code&gt; 的可以生成的Xcode项目文件 &lt;code&gt;-spec macx-xcode&lt;/code&gt; 。如果使用二进制包，则默认情况下， &lt;code&gt;qmake&lt;/code&gt; 会生成Xcode项目；否则，将生成Xcode项目。使用 &lt;code&gt;-spec macx-gcc&lt;/code&gt; 生成makefile。例如：</target>
        </trans-unit>
        <trans-unit id="e7a075199183b4ffd28da5b3a472c3762bf816a8" translate="yes" xml:space="preserve">
          <source>On the left of the text.</source>
          <target state="translated">在文字的左边。</target>
        </trans-unit>
        <trans-unit id="b893e06264de3baeae08aa2679375bca3ba98d66" translate="yes" xml:space="preserve">
          <source>On the low level, applications communicate over D-Bus by sending messages to one another. Messages are used to relay the remote procedure calls as well as the replies and errors associated with them. When used over a bus, messages have a destination, which means they are routed only to the interested parties, avoiding congestion due to &quot;swarming&quot; or broadcasting.</source>
          <target state="translated">在低层次上,应用程序通过D-Bus相互发送消息进行通信。消息用于中继远程过程调用以及与之相关的回复和错误。当在总线上使用时,消息有一个目的地,这意味着它们只被路由到感兴趣的各方,避免了由于 &quot;蜂群 &quot;或广播而造成的拥堵。</target>
        </trans-unit>
        <trans-unit id="474353455aaf6ed877e94689a204a43c53528cfe" translate="yes" xml:space="preserve">
          <source>On the next page you will need to select the certificates that will be distributed with your Provisioning Profile. You would have needed to uploaded a certificate on your local development machine to the Apple Developer Certificate, Identifiers, and Profiles manger previously. Generally you will want to add any certificates of the members of your team who will need to build your App.</source>
          <target state="translated">在下一页,你需要选择与你的Provisioning Profile一起分发的证书。您需要在本地开发机器上上传证书到 Apple Developer Certificate,Identifiers,and Profiles manger。一般来说,你会希望添加你的团队成员的任何证书,他们将需要建立你的应用程序。</target>
        </trans-unit>
        <trans-unit id="4cd8b38bae57b5c4b4f560bf9622743d3abe6099" translate="yes" xml:space="preserve">
          <source>On the next page you will need to select the devices you will be developing and testing your app on. You must register your devices to the Apple Developer Certificate, Identifiers, and Profiles manger previously. The devices you select here are the only ones capable of running apps signed against this provisioning profile, so select all the devices you intend use during the development and testing phase.</source>
          <target state="translated">在下一页,您需要选择您将开发和测试应用程序的设备。您必须在之前将设备注册到 Apple Developer Certificate,Identifiers,and Profiles manger。您在这里选择的设备是唯一能够运行针对此供应配置文件签署的应用程序的设备,因此选择您打算在开发和测试阶段使用的所有设备。</target>
        </trans-unit>
        <trans-unit id="1095c34dea0969f3125e4d8c989adc79207f7f0a" translate="yes" xml:space="preserve">
          <source>On the next page, you must fill out the details about your product. The &lt;b&gt;Reference Name&lt;/b&gt; field refers to how the product will be displayed in iTunes Connect and in sales reports, but not in the App Store itself. The &lt;b&gt;Product ID&lt;/b&gt; field is very important as it is the unique ID that will be used to query for the product from your app itself. If possible make this the same ID as the corresponding products in the other platform&amp;rsquo;s stores, otherwise you will have to conditional logic in your app for each platform when specifying product identifiers.</source>
          <target state="translated">在下一页上，您必须填写有关产品的详细信息。该&lt;b&gt;参考名称&lt;/b&gt;字段是指该产品将如何显示在iTunes Connect和销售报表，而不是在App Store本身。该&lt;b&gt;产品ID&lt;/b&gt;字段是很重要的，因为它是唯一的ID将被用于查询从您的应用程序本身的产品。如果可能，请使其与其他平台的商店中的相应产品相同的ID，否则，在指定产品标识符时，您必须在每个平台的应用程序中使用条件逻辑。</target>
        </trans-unit>
        <trans-unit id="bb222a18690f0b2c76bb9525cee3e76a8903aa6d" translate="yes" xml:space="preserve">
          <source>On the other hand, if a bus is not used, service names are also not used. If we compare this to a computer network again, this would equate to a point-to-point network: since the peer is known, there is no need to use hostnames to find it or its IP address.</source>
          <target state="translated">另一方面,如果不使用总线,也不使用服务名。如果我们再把它比作一个计算机网络,这就相当于一个点对点的网络:由于对等体是已知的,所以不需要使用主机名来寻找它或它的IP地址。</target>
        </trans-unit>
        <trans-unit id="dcdc862fdefd8cd0bf302443bbccbf1004374cfc" translate="yes" xml:space="preserve">
          <source>On the other hand, logging in synchronous mode has a high overhead, but the OpenGL implementation guarantees that all the messages caused by a certain command are received in order, before the command returns, and from the same thread the OpenGL context is bound to.</source>
          <target state="translated">另一方面,同步模式下的日志记录有很高的开销,但OpenGL的实现可以保证在命令返回之前,按顺序接收到由某个命令引起的所有消息,并且来自OpenGL上下文所绑定的同一个线程。</target>
        </trans-unit>
        <trans-unit id="1e9c8ca1de36db669e292891fcbf1796fb641b2f" translate="yes" xml:space="preserve">
          <source>On the other hand, suppose you really want only one &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element, the first one in the document (i.e., you only want the first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element in the first &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element). Then you have to do more filtering. There are two ways you can do it. You can apply the &lt;code&gt;[1]&lt;/code&gt; filter in the same place as above but enclose the path expression in parentheses:</source>
          <target state="translated">在另一方面，假设你真的只需要一个 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 元素，在文档中的第一个（即，你只需要第一个 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 中的第一个元素 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素）。然后，您必须进行更多过滤。有两种方法可以做到这一点。您可以在与上述相同的位置应用 &lt;code&gt;[1]&lt;/code&gt; 过滤器，但将路径表达式括在括号中：</target>
        </trans-unit>
        <trans-unit id="8a6cc0954d4400f7b8d60c4b505bd97e38e7f9c3" translate="yes" xml:space="preserve">
          <source>On the other hand, this means &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; values can only be compared with other values that use the same reference. This is especially true if the time since the reference is extracted from the &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; object (&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer::msecsSinceReference&lt;/a&gt;()) and serialised. These values should never be exchanged across the network or saved to disk, since there's no telling whether the computer node receiving the data is the same as the one originating it or if it has rebooted since.</source>
          <target state="translated">另一方面，这意味着&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;值只能与使用相同引用的其他值进行比较。如果自&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;对象（&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer :: msecsSinceReference&lt;/a&gt;（））提取引用以来的时间并进行序列化，则尤其如此。这些值永远都不能在网络上交换或保存到磁盘，因为不会告诉接收数据的计算机节点与发起该数据的计算机节点是否相同，或者此后是否已重新启动。</target>
        </trans-unit>
        <trans-unit id="40cd37db24fc45b9afd18fe5f46b8a662dcc3d91" translate="yes" xml:space="preserve">
          <source>On the other hand, this means QElapsedTimer values can only be compared with other values that use the same reference. This is especially true if the time since the reference is extracted from the QElapsedTimer object (&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer::msecsSinceReference&lt;/a&gt;()) and serialised. These values should never be exchanged across the network or saved to disk, since there's no telling whether the computer node receiving the data is the same as the one originating it or if it has rebooted since.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77efd63831eb7f5c8d427c682d396f441648e591" translate="yes" xml:space="preserve">
          <source>On the other hand, you can safely emit signals from your &lt;a href=&quot;qthread#run&quot;&gt;QThread::run&lt;/a&gt;() implementation, because signal emission is thread-safe.</source>
          <target state="translated">另一方面，您可以从&lt;a href=&quot;qthread#run&quot;&gt;QThread :: run&lt;/a&gt;（）实现中安全地发出信号，因为信号发出是线程安全的。</target>
        </trans-unit>
        <trans-unit id="0bf88653bfda95e8a89fbed43dbde4d043afbe5d" translate="yes" xml:space="preserve">
          <source>On the replica side, we need to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344ebd30c1691d76097cb441fd3a73887ee9baef" translate="yes" xml:space="preserve">
          <source>On the right of the text.</source>
          <target state="translated">在文字的右边。</target>
        </trans-unit>
        <trans-unit id="d9695003eed75e0367ce194cd0631e7c102416ac" translate="yes" xml:space="preserve">
          <source>On the system bus, one can also expect to find restrictions on what services each application is allowed to offer. Therefore, one can be reasonably certain that, if a certain service is present, it is being offered by a trusted application.</source>
          <target state="translated">在系统总线上,人们还可以期望找到关于每个应用程序被允许提供哪些服务的限制。因此,人们可以合理地确定,如果存在某种服务,它是由一个受信任的应用程序提供的。</target>
        </trans-unit>
        <trans-unit id="e1d30a51f1a28aaad2ba00d5b901c1fe57bc5e80" translate="yes" xml:space="preserve">
          <source>On touch, &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt; enables flicking and makes the scroll bars non-interactive.</source>
          <target state="translated">触摸时，&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;启用轻拂并使滚动条不交互。</target>
        </trans-unit>
        <trans-unit id="8918fe1b643b1e2d15cbeb59abc161026f7563a9" translate="yes" xml:space="preserve">
          <source>On touch, ScrollView enables flicking and makes the scroll bars non-interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c953e28176379d2bdf43ea5238ba0de72683afb1" translate="yes" xml:space="preserve">
          <source>On touchscreens that can track physical objects (such as knobs or game pieces) in addition to fingers, each object usually has a unique ID. Likewise, each stylus that can be used with a graphics tablet usually has a unique serial number. Qt so far only supports numeric IDs. You can get the actual number as uniqueId.numeric, but that is a device-specific detail. In the future, there may be support for non-numeric IDs, so you should not assume that the number is meaningful.</source>
          <target state="translated">在除了手指之外还能追踪物理物体(如旋钮或游戏碎片)的触摸屏上,每个物体通常都有一个唯一的ID。同样,每个可以与图形平板一起使用的触控笔通常都有一个唯一的序列号。Qt到目前为止只支持数字ID。你可以以uniqueId.numeric的形式获得实际的数字,但这是设备特有的细节。在未来,可能会支持非数字ID,所以你不应该假设这个数字是有意义的。</target>
        </trans-unit>
        <trans-unit id="6ba13ef24b5b098754a4165ca757a51542b2947b" translate="yes" xml:space="preserve">
          <source>On your Embedded Linux device, when there's no windowing system present, the mouse, keyboard, and touch input are read directly via &lt;code&gt;evdev&lt;/code&gt; or using helper libraries such as &lt;code&gt;libinput&lt;/code&gt; or &lt;code&gt;tslib&lt;/code&gt;. However, this behavior requires that device nodes &lt;code&gt;/dev/input/event*&lt;/code&gt; are readable by the user. &lt;code&gt;eglfs&lt;/code&gt; and &lt;code&gt;linuxfb&lt;/code&gt; have all the input handling code compiled-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acea668c9e98f42ef4ea326d649ea01ba5737ffb" translate="yes" xml:space="preserve">
          <source>On/off indicator for a view item.</source>
          <target state="translated">视图项目的开/关指示灯。</target>
        </trans-unit>
        <trans-unit id="5fa999adb84b2c0031f4fad0cfc3a2031e391918" translate="yes" xml:space="preserve">
          <source>On/off indicator, for example, a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;.</source>
          <target state="translated">开/关指示器，例如&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c88a3d71536ddc26913f73b46ff11d4bbed4857e" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#&quot;&gt;properly installed&lt;/a&gt;, the virtual keyboard can be opened by clicking on a text input field.</source>
          <target state="translated">一旦&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#&quot;&gt;正确安装&lt;/a&gt;，虚拟键盘可以通过点击文本输入框打开。</target>
        </trans-unit>
        <trans-unit id="31e4cfa5dc1a88f96ee40352ea9cf380bab72c11" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-deployment-guide.html&quot;&gt;properly installed&lt;/a&gt;, the virtual keyboard can be opened by clicking on a text input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8ad2f36ec3282a9f11a068428d2804dd485c82" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;qtextline#setLineWidth&quot;&gt;QTextLine::setLineWidth&lt;/a&gt;() is called, a new line can be created and filled with text. Repeating this process will lay out the whole block of text contained in the &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;. If there is no text left to be inserted into the layout, the &lt;a href=&quot;qtextline&quot;&gt;QTextLine&lt;/a&gt; returned will not be valid (isValid() will return false).</source>
          <target state="translated">一旦&lt;a href=&quot;qtextline#setLineWidth&quot;&gt;调用QTextLine :: setLineWidth&lt;/a&gt;（），就可以创建新行并用文本填充。重复此过程将布局&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout中&lt;/a&gt;包含的整个文本块。如果没有文本可插入到布局中，则返回的&lt;a href=&quot;qtextline&quot;&gt;QTextLine&lt;/a&gt;将无效（isValid（）将返回false）。</target>
        </trans-unit>
        <trans-unit id="fc12fd14aa59b1809aeda499e402a77f7adedf6b" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;KeyReader.qml&lt;/code&gt; is loaded, it accepts key events and sets &lt;code&gt;event.accepted&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; so that the event is not propagated to the parent &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;.</source>
          <target state="translated">一旦 &lt;code&gt;KeyReader.qml&lt;/code&gt; 被加载，它接受的关键事件，并设置 &lt;code&gt;event.accepted&lt;/code&gt; 至 &lt;code&gt;true&lt;/code&gt; ，这样的事件不会传播到父&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="369b21cf40402245a2f9ab26af7722f2887f9ea4" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;doc&lt;/code&gt; and &lt;code&gt;elem&lt;/code&gt; go out of scope, the whole internal tree representing the XML document is deleted.</source>
          <target state="translated">一旦 &lt;code&gt;doc&lt;/code&gt; 和 &lt;code&gt;elem&lt;/code&gt; 超出范围，代表XML文档的整个内部树将被删除。</target>
        </trans-unit>
        <trans-unit id="ee1dc491fdd55ffd0fc4b2fbeb16f60438de0327" translate="yes" xml:space="preserve">
          <source>Once Qt is installed, you can use the Maintenance Tool under</source>
          <target state="translated">安装好Qt后,你可以使用维护工具下的</target>
        </trans-unit>
        <trans-unit id="83d0b39e5b2ba9fd3ca62bf11a2e51fe3ba848ee" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; has been created it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</source>
          <target state="translated">一旦&lt;a href=&quot;qaction&quot;&gt;的QAction&lt;/a&gt;已创建应该添加到相关的菜单和工具栏，然后连接到将要执行的动作插槽。例如：</target>
        </trans-unit>
        <trans-unit id="43e1f30afc29295352c577708ea4d49f0ba6df3c" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; has been created for a target object, the gesture recognizer will receive events for it in its &lt;a href=&quot;qgesturerecognizer#recognize&quot;&gt;recognize&lt;/a&gt;() handler function.</source>
          <target state="translated">一旦&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;已经为目标对象创建，手势识别将获得其IT事件&lt;a href=&quot;qgesturerecognizer#recognize&quot;&gt;识别&lt;/a&gt;（）处理函数。</target>
        </trans-unit>
        <trans-unit id="61d56c40b76bb9d0bb53c2596af9a9d3b932c1f7" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qmodbusclient&quot;&gt;QModbusClient&lt;/a&gt; object has been created, the application can use it to send requests. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">一旦&lt;a href=&quot;qmodbusclient&quot;&gt;QModbusClient&lt;/a&gt;对象被创建，应用程序可以用它来发送请求。返回的对象用于获取响应于相应请求而返回的任何数据。</target>
        </trans-unit>
        <trans-unit id="d98a7ef943520707456603e0929cc41dd24752d6" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; object has been created, the application can use it to send requests over the network. A group of standard functions are supplied that take a request and optional data, and each return a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; object. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">一旦&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;对象被创建时，应用程序可以使用它来通过网络发送的请求。提供了一组标准函数，这些函数接受一个请求和可选数据，并且每个函数都返回一个&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;对象。返回的对象用于获取响应于相应请求而返回的任何数据。</target>
        </trans-unit>
        <trans-unit id="3b084b214d79ee12ee2d4e237b98fa9681392b7d" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; has been made current, you can render to it in a platform independent way by using Qt's OpenGL enablers such as &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;, &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, and &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;. It is also possible to use the platform's OpenGL API directly, without using the Qt enablers, although potentially at the cost of portability. The latter is necessary when wanting to use OpenGL 1.x or OpenGL ES 1.x.</source>
          <target state="translated">将&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;设置为当前版本后，您可以使用Qt的OpenGL启用程序（例如&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;，&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;，&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;和&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject）&lt;/a&gt;以独立于平台的方式对其进行呈现。也可以直接使用平台的OpenGL API，而无需使用Qt启用程序，尽管这样做可能会牺牲可移植性。想要使用OpenGL 1.x或OpenGL ES 1.x时，后者是必需的。</target>
        </trans-unit>
        <trans-unit id="e27bff41670537dc5d121238abb2648ff3024d56" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; object is constructed, subpaths like lines and curves can be added to the path (creating &lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath::LineToElement&lt;/a&gt; and &lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath::CurveToElement&lt;/a&gt; components).</source>
          <target state="translated">一旦&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;对象被构造，如直线和曲线的子路径可以被添加到（生成路径&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath :: LineToElement&lt;/a&gt;和&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath :: CurveToElement&lt;/a&gt;组件）。</target>
        </trans-unit>
        <trans-unit id="6a2d4470eae5a525141184fc66126986ce9f96a3" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object has been constructed and set up, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can be used to perform painting operations on it. We can construct and set up a painter in the following way:</source>
          <target state="translated">一旦构造并设置了&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;对象，就可以使用&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;对它执行绘画操作。我们可以通过以下方式构造和设置画家：</target>
        </trans-unit>
        <trans-unit id="dd0721eed9935f2e299cbcbdde10a7b0feb6fe4d" translate="yes" xml:space="preserve">
          <source>Once a QAction has been created it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3613c1dffcb14effdec6c7212c9fcc2898a5e78f" translate="yes" xml:space="preserve">
          <source>Once a QModbusClient object has been created, the application can use it to send requests. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f603432194155193688fb9a08fe600db985b6201" translate="yes" xml:space="preserve">
          <source>Once a QNetworkAccessManager object has been created, the application can use it to send requests over the network. A group of standard functions are supplied that take a request and optional data, and each return a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; object. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fda68cb0bc3e311f823ec3cf4230458f5c8806e" translate="yes" xml:space="preserve">
          <source>Once a QOpenGLContext has been made current, you can render to it in a platform independent way by using Qt's OpenGL enablers such as &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;, &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, and &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;. It is also possible to use the platform's OpenGL API directly, without using the Qt enablers, although potentially at the cost of portability. The latter is necessary when wanting to use OpenGL 1.x or OpenGL ES 1.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b48feb01099b3cfeaf6cb1cbf57f32d92d8f98" translate="yes" xml:space="preserve">
          <source>Once a client is connected to a host, valid Replicas can then be acquired if the corresponding Source is being remoted.</source>
          <target state="translated">客户端连接到主机后,如果相应的Source正在被推广,那么就可以获得有效的Replicas。</target>
        </trans-unit>
        <trans-unit id="865107c84714f3448d7fb0b9cda071b0e4feba9e" translate="yes" xml:space="preserve">
          <source>Once a command is pushed, the stack takes ownership of it. There are no getters to return the command, since modifying it after it has been executed will almost always lead to corruption of the document's state.</source>
          <target state="translated">一旦命令被推送,堆栈就会拥有它的所有权。没有获取者来返回命令,因为在命令执行后修改它几乎总是会导致文档状态的破坏。</target>
        </trans-unit>
        <trans-unit id="5256abfdd146b98943e67f2f6ec9c59215b01a99" translate="yes" xml:space="preserve">
          <source>Once a connection is established, we can call the static function &lt;a href=&quot;qsqldatabase#database&quot;&gt;QSqlDatabase::database&lt;/a&gt;() from anywhere with a connection name to get a pointer to that database connection. If we don't pass a connection name, it will return the default connection. For example:</source>
          <target state="translated">建立连接后，我们可以从任何地方使用连接名称调用静态函数&lt;a href=&quot;qsqldatabase#database&quot;&gt;QSqlDatabase :: database&lt;/a&gt;（），以获取指向该数据库连接的指针。如果我们不传递连接名称，它将返回默认连接。例如：</target>
        </trans-unit>
        <trans-unit id="9e3e1292f78955db255d4d252e5a0511c1b9c9e2" translate="yes" xml:space="preserve">
          <source>Once a document has been parsed, its internal representation is maintained in the &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; instance and shared among multiple &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; instances.</source>
          <target state="translated">解析文档后，其内部表示形式将保留在&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;实例中，并在多个&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;实例之间共享。</target>
        </trans-unit>
        <trans-unit id="ab459ae4caeb629e682fb6dac38c3b74ee4d260e" translate="yes" xml:space="preserve">
          <source>Once a document has been parsed, its internal representation is maintained in the QXmlQuery instance and shared among multiple QXmlQuery instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e617583a12847fefb05daac54125f2414156dfa" translate="yes" xml:space="preserve">
          <source>Once a font is found, the remaining attributes are matched in order of priority:</source>
          <target state="translated">一旦找到一个字体,其余的属性就会按照优先级顺序进行匹配。</target>
        </trans-unit>
        <trans-unit id="8c022caf014d337f979e44b5cdd38456d077c269" translate="yes" xml:space="preserve">
          <source>Once a place is saved the reply contains the new identifier for that place.</source>
          <target state="translated">一旦保存了一个地方,回复就包含了该地方的新标识符。</target>
        </trans-unit>
        <trans-unit id="985c8565b7a16848e0e99e52adeb2e4c33ee20e9" translate="yes" xml:space="preserve">
          <source>Once a resource file is loaded, you can create or remove entries in it using the given &lt;b&gt;Add Files&lt;/b&gt;</source>
          <target state="translated">加载资源文件后，您可以使用给定的&amp;ldquo; &lt;b&gt;添加文件&amp;rdquo;&lt;/b&gt;在其中创建或删除条目&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c67240efc1ed0ad6dc10910948e36f600f7638a5" translate="yes" xml:space="preserve">
          <source>Once a service object was created for the first time, its details are yet to be discovered. This is indicated by its current &lt;a href=&quot;qlowenergyservice#state&quot;&gt;state&lt;/a&gt;() being &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequired&lt;/a&gt;. It is only possible to retrieve the &lt;a href=&quot;qlowenergyservice#serviceUuid&quot;&gt;serviceUuid&lt;/a&gt;() and &lt;a href=&quot;qlowenergyservice#serviceName&quot;&gt;serviceName&lt;/a&gt;().</source>
          <target state="translated">首次创建服务对象后，尚未发现其详细信息。这由其当前&lt;a href=&quot;qlowenergyservice#state&quot;&gt;状态&lt;/a&gt;（）表示为&lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequired&lt;/a&gt;。只能检索&lt;a href=&quot;qlowenergyservice#serviceUuid&quot;&gt;serviceUuid&lt;/a&gt;（）和&lt;a href=&quot;qlowenergyservice#serviceName&quot;&gt;serviceName&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e53733a3477bb6bf01bf485f428bc1bbf91fcb57" translate="yes" xml:space="preserve">
          <source>Once a transaction is started, subsequent calls to this function will make the transaction recursive. Inner transactions act as agents of the outermost transaction (i.e., report the status of read operations to the outermost transaction, which can restore the position of the stream).</source>
          <target state="translated">一旦一个事务被启动,后续对该函数的调用将使该事务递归。内层事务作为最外层事务的代理(即向最外层事务报告读取操作的状态,外层事务可以恢复流的位置)。</target>
        </trans-unit>
        <trans-unit id="5a48b1bd8759f52d071295cfdc69c1cd7f1884fd" translate="yes" xml:space="preserve">
          <source>Once actions have been created, we can add them to the main window components. To begin with, we add them to the pop-up menus:</source>
          <target state="translated">一旦创建了动作,我们就可以将它们添加到主窗口组件中。首先,我们将它们添加到弹出式菜单中。</target>
        </trans-unit>
        <trans-unit id="3faa39f01db6ebf3d4a8f5b16def0e447e0383ca" translate="yes" xml:space="preserve">
          <source>Once all of the main window components have been set up, the central widget is created and installed by using code similar to the following:</source>
          <target state="translated">一旦所有的主要窗口组件都设置好了,就可以使用类似下面的代码来创建和安装中央小部件。</target>
        </trans-unit>
        <trans-unit id="fce4756a3b2fcb3adfa961f884ca86f0a7647bbc" translate="yes" xml:space="preserve">
          <source>Once all the meshes have been drawn, the G-Buffer is filled with all the meshes that can currently be seen by the camera. The second render pass is then used to render the scene to the back buffer with the final color shading by reading the normal, color, and position values from the G-buffer textures and outputting a color onto a full screen quad.</source>
          <target state="translated">一旦所有的网格都被绘制完成,G-buffer就会被当前摄像机能看到的所有网格填满。然后,第二个渲染通道通过读取G缓冲区纹理的法线、颜色和位置值,并将颜色输出到全屏四边形上,将场景渲染到后缓冲区,并进行最后的颜色着色。</target>
        </trans-unit>
        <trans-unit id="ae1c4a2bb77b441f2cea129f7c14216ee5ea4029" translate="yes" xml:space="preserve">
          <source>Once an application has started a sensor it must wait until the sensor receives a new value before it can query the sensor's values. This is due to how the sensor receives values from the system. Sensors do not (in general) poll for new values, rather new values are pushed to the sensors as they happen.</source>
          <target state="translated">一旦应用程序启动了一个传感器,它必须等到传感器接收到一个新的值后才能查询传感器的值。这是由于传感器从系统接收值的方式。传感器不会(在一般情况下)轮询新值,而是在新值发生时将其推送给传感器。</target>
        </trans-unit>
        <trans-unit id="cf3bcacf32514d75fb5446b9cc235894721a3d4a" translate="yes" xml:space="preserve">
          <source>Once an image is unloaded it cannot be painted by the canvas context unless it is loaded again.</source>
          <target state="translated">一旦图像被卸载,它就不能被画布上下文绘制,除非它被再次加载。</target>
        </trans-unit>
        <trans-unit id="9a3adcd87693b8ec5b34e52167be155bdc60a07e" translate="yes" xml:space="preserve">
          <source>Once an image is unloaded, it cannot be painted by the canvas context unless it is loaded again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa3720dcc2e979ce83cc61dee70ef7eeb6add35" translate="yes" xml:space="preserve">
          <source>Once an install set has been fully described, you can append it to the install list with a line like this:</source>
          <target state="translated">一旦一个安装集被完整地描述出来,你就可以用这样一行字把它附加到安装列表中。</target>
        </trans-unit>
        <trans-unit id="e181648ef9fa7a0206e5311b32e008cb1d0d2fac" translate="yes" xml:space="preserve">
          <source>Once an object instance is created, the value of its</source>
          <target state="translated">一旦创建了一个对象实例,它的</target>
        </trans-unit>
        <trans-unit id="b7d193ac2a6316f487a04fe32ee9b74c0b8dfdce" translate="yes" xml:space="preserve">
          <source>Once any setter methods are called, &lt;a href=&quot;qsslconfiguration#isNull&quot;&gt;isNull&lt;/a&gt;() will return false.</source>
          <target state="translated">一旦调用了任何setter方法，&lt;a href=&quot;qsslconfiguration#isNull&quot;&gt;isNull&lt;/a&gt;（）将返回false。</target>
        </trans-unit>
        <trans-unit id="c1ec356434daf43ee99f34ac3d62059f73505f2e" translate="yes" xml:space="preserve">
          <source>Once associated with a Shape, here is the output with a joinStyleIndex of 2 (&lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt;.RoundJoin):</source>
          <target state="translated">与Shape关联后，这是joinStyleIndex为2（&lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt; .RoundJoin）的输出：</target>
        </trans-unit>
        <trans-unit id="5b9e45228205ee6663abfe1434702a9a28bef19e" translate="yes" xml:space="preserve">
          <source>Once associated with a Shape, here is the output with a joinStyleIndex of 2 (ShapePath.RoundJoin):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4ee61e7445fa6fb6664b755a4063025b9d41f7" translate="yes" xml:space="preserve">
          <source>Once created a &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; object can be queried for its &lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;() and total number of &lt;a href=&quot;qsound#loops&quot;&gt;loops&lt;/a&gt;() (i.e. the number of times the sound will play). The number of repetitions can be altered using the &lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;() function. While playing the sound, the &lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;() function returns the remaining number of repetitions. Use the &lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;() function to determine whether the sound has finished playing.</source>
          <target state="translated">创建&lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt;对象后，可以查询其&lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;（）和&lt;a href=&quot;qsound#loops&quot;&gt;循环&lt;/a&gt;总数（）（即声音播放的次数）。可以使用&lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;（）函数更改重复次数。在播放声音时，&lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;（）函数将返回剩余的重复次数。使用&lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;（）函数确定声音是否已完成播放。</target>
        </trans-unit>
        <trans-unit id="d75befe952fa6e9f45d4c3c951b495caa0b7ba79" translate="yes" xml:space="preserve">
          <source>Once created a QSound object can be queried for its &lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;() and total number of &lt;a href=&quot;qsound#loops&quot;&gt;loops&lt;/a&gt;() (i.e. the number of times the sound will play). The number of repetitions can be altered using the &lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;() function. While playing the sound, the &lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;() function returns the remaining number of repetitions. Use the &lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;() function to determine whether the sound has finished playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80eaeebd004cac4f94cd86d98f54dd28509f27b" translate="yes" xml:space="preserve">
          <source>Once created, &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; instances are managed by Qt Multimedia and will be automatically destroyed and recreated when necessary, for example when the scene graph is invalidated or the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; changes or is closed. Creation happens via the &lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter::createFilterRunnable&lt;/a&gt;() factory function.</source>
          <target state="translated">创建之后，&lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt;实例将由Qt Multimedia管理，并且将在必要时自动销毁并重新创建，例如，当场景图无效或&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;更改或关闭时。通过&lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter :: createFilterRunnable&lt;/a&gt;（）工厂函数进行创建。</target>
        </trans-unit>
        <trans-unit id="90e9e520f8e108e89973fd36b6533fc5acffc187" translate="yes" xml:space="preserve">
          <source>Once created, QVideoFilterRunnable instances are managed by Qt Multimedia and will be automatically destroyed and recreated when necessary, for example when the scene graph is invalidated or the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; changes or is closed. Creation happens via the &lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter::createFilterRunnable&lt;/a&gt;() factory function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5e2fb5148480d8fcfc9bd868cceb10c5f8a778" translate="yes" xml:space="preserve">
          <source>Once created, the object provides functions to access the individual metrics of the font, its characters, and for strings rendered in the font.</source>
          <target state="translated">一旦创建,该对象就提供了访问字体、字符以及字体中呈现的字符串的各个指标的函数。</target>
        </trans-unit>
        <trans-unit id="1340e8fa34d48e4b5e320a1558f7bb4ee5e8ed98" translate="yes" xml:space="preserve">
          <source>Once created, the properties of a menu can be accessed using the &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;Property Editor&lt;/a&gt;, and each menu can be accessed for this purpose via the &lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;The Object Inspector&lt;/a&gt;.</source>
          <target state="translated">创建菜单后，可以使用&amp;ldquo; &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;属性编辑器&amp;rdquo;&lt;/a&gt;访问菜单的属性，为此，可以通过&lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;&amp;ldquo;对象检查器&amp;rdquo;&lt;/a&gt;访问每个菜单。</target>
        </trans-unit>
        <trans-unit id="4318286cc00389860c860891593d046999063bf7" translate="yes" xml:space="preserve">
          <source>Once created, timer queries can be issued in one of several ways. The simplest method is to delimit a block of commands with calls to &lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;() and &lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;(). This instructs OpenGL to measure the time taken from completing all commands issued prior to &lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;() until the completion of all commands issued prior to &lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="translated">创建计时器查询后，可以通过以下几种方式之一发出计时器查询。最简单的方法是通过调用&lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;（）和&lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;（）来分隔命令块。这指示OpenGL测量从完成&lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;（）之前发出的所有命令到&lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;（）之前发出的所有命令完成所花费的时间。</target>
        </trans-unit>
        <trans-unit id="3563861d604d9a741f2f3133b5b1fd396a55a5de" translate="yes" xml:space="preserve">
          <source>Once disconnected, calling &lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;() will not reestablish a connection, you must create a new &lt;a href=&quot;qdbusconnection&quot;&gt;QDBusConnection&lt;/a&gt; instance.</source>
          <target state="translated">一旦断开连接，调用&lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;（）将不会重新建立连接，必须创建一个新的&lt;a href=&quot;qdbusconnection&quot;&gt;QDBusConnection&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7f10a3fd1de6e8469321a24bbb5dede1b4a5c772" translate="yes" xml:space="preserve">
          <source>Once disconnected, calling &lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;() will not reestablish a connection, you must create a new QDBusConnection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a771404be80a49f1bcd8129102f800ceae68ca3" translate="yes" xml:space="preserve">
          <source>Once enabled, applications have two typical choices to perform offscreen rendering in headless mode:</source>
          <target state="translated">启用后,应用程序有两种典型的选择,在无头模式下执行离屏渲染。</target>
        </trans-unit>
        <trans-unit id="af11aa38925611d44c0c3134bc9e277087c165b5" translate="yes" xml:space="preserve">
          <source>Once encrypted, you use &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; as a regular &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. When &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() is emitted, you can call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() to read decrypted data from &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;'s internal buffer, and you can call &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() to write data back to the peer. &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will automatically encrypt the written data for you, and emit &lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;() once the data has been written to the peer.</source>
          <target state="translated">加密后，可以将&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;用作常规&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;。当&lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;（）被发射，则可以调用&lt;a href=&quot;qiodevice#read&quot;&gt;读&lt;/a&gt;（），&lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;（）和&lt;a href=&quot;qiodevice#readLine&quot;&gt;的readLine&lt;/a&gt;（），或&lt;a href=&quot;qiodevice#getChar&quot;&gt;getchar函数&lt;/a&gt;（）从读取解密的数据&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;的内部缓冲器中，并且可以调用&lt;a href=&quot;qiodevice#write&quot;&gt;写&lt;/a&gt;（）或&lt;a href=&quot;qiodevice#putChar&quot;&gt;的putChar&lt;/a&gt;（）来写数据返回给同级。&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;会自动加密写入的数据给你，并发出&lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;一旦数据被写入到对等（）。</target>
        </trans-unit>
        <trans-unit id="524296a6b17edcdcde8b7d9d05a0f6ae76f3770d" translate="yes" xml:space="preserve">
          <source>Once encrypted, you use QSslSocket as a regular &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. When &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() is emitted, you can call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() to read decrypted data from QSslSocket's internal buffer, and you can call &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() to write data back to the peer. QSslSocket will automatically encrypt the written data for you, and emit &lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;() once the data has been written to the peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fd7e76dcd700654b875f9d31d09a0ed43c1e0f" translate="yes" xml:space="preserve">
          <source>Once individual animations are placed into a &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt;, they can no longer be started and stopped independently. The sequential or parallel animation must be started and stopped as a group.</source>
          <target state="translated">一旦将单个动画放入&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation中&lt;/a&gt;，就无法再独立启动和停止它们了。顺序或并行动画必须作为一个组开始和停止。</target>
        </trans-unit>
        <trans-unit id="c7065d1862b32bf508458b0290a47c13567e0119" translate="yes" xml:space="preserve">
          <source>Once invalidate() has been called, it is possible to reuse the &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; instance by calling &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;initialize&lt;/a&gt;() again.</source>
          <target state="translated">调用invalidate（）后，可以再次调用&lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;initialize&lt;/a&gt;（）来重用&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="a86569ce76e4c0379ce20067c838e075579f2bf0" translate="yes" xml:space="preserve">
          <source>Once loaded, plugins remain in memory until all instances of &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; has been unloaded, or until the application terminates. You can attempt to unload a plugin using &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(), but if other instances of &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; are using the same library, the call will fail, and unloading will only happen when every instance has called &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(). Right before the unloading happens, the root component will also be deleted.</source>
          <target state="translated">加载后，插件将保留在内存中，直到所有&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;实例都已卸载，或者直到应用程序终止为止。您可以尝试使用&lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;（）来卸载插件，但是如果&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader的&lt;/a&gt;其他实例使用相同的库，则调用将失败，并且仅当每个实例都调用了&lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;（）时才进行卸载。在卸载发生之前，根组件也将被删除。</target>
        </trans-unit>
        <trans-unit id="d6ed3cb72b2e312789ec57318a1cb6fc7e9e81c8" translate="yes" xml:space="preserve">
          <source>Once loaded, plugins remain in memory until all instances of QPluginLoader has been unloaded, or until the application terminates. You can attempt to unload a plugin using &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(), but if other instances of QPluginLoader are using the same library, the call will fail, and unloading will only happen when every instance has called &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(). Right before the unloading happens, the root component will also be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc26d0a14582bafdc9354c84ba528981f69fdec" translate="yes" xml:space="preserve">
          <source>Once opaque primitives have been drawn, the renderer will disable &lt;code&gt;glDepthMask&lt;/code&gt;, enable &lt;code&gt;GL_BLEND&lt;/code&gt; and render all alpha blended primitives in a back-to-front manner.</source>
          <target state="translated">绘制不透明的图元后，渲染器将禁用 &lt;code&gt;glDepthMask&lt;/code&gt; ，启用 &lt;code&gt;GL_BLEND&lt;/code&gt; 并以从后到前的方式渲染所有alpha混合图元。</target>
        </trans-unit>
        <trans-unit id="b9db82184c27bdceb25bd1b08e3b5517bb8c8615" translate="yes" xml:space="preserve">
          <source>Once positioned, sub-controls can be styled using the &lt;a href=&quot;#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="translated">定位后，可以使用&lt;a href=&quot;#box-model&quot;&gt;box模型&lt;/a&gt;设置子控件的样式。</target>
        </trans-unit>
        <trans-unit id="484b85ea705b1bd2325d91eb3cedad5857196062" translate="yes" xml:space="preserve">
          <source>Once positioned, sub-controls can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44aa1cb73bede9c422aed8bc491a71274d8dc04" translate="yes" xml:space="preserve">
          <source>Once positioned, they are treated the same as widgets and can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="translated">放置后，它们将与小部件一样对待，并可以使用&lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box模型&lt;/a&gt;设置样式。</target>
        </trans-unit>
        <trans-unit id="011ec39e07e233ee8b7dbb26cded772667837811" translate="yes" xml:space="preserve">
          <source>Once registered, a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; singleton type may be imported and used like any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; instance exposed to QML. The following example assumes that a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; singleton type was registered into the &quot;MyThemeModule&quot; namespace with version 1.0, where that &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; has a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &quot;color&quot; &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;:</source>
          <target state="translated">一旦注册，就可以像导入QML的任何其他&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;实例一样导入和使用&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;单例类型。下面的示例假定&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;单例类型已注册到版本为1.0的&amp;ldquo; MyThemeModule&amp;rdquo;命名空间中，其中&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;具有&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;ldquo; color&amp;rdquo; &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f212ed18637128978ee635a7f85b1291a909b355" translate="yes" xml:space="preserve">
          <source>Once registered, a type can be used in outgoing method calls (placed with &lt;a href=&quot;qdbusabstractinterface#call&quot;&gt;QDBusAbstractInterface::call&lt;/a&gt;()), signal emissions from registered objects or in incoming calls from remote applications.</source>
          <target state="translated">一旦注册，就可以在传出方法调用（放置在&lt;a href=&quot;qdbusabstractinterface#call&quot;&gt;QDBusAbstractInterface :: call&lt;/a&gt;（）中），已注册对象的信号发射或远程应用程序的传入调用中使用类型。</target>
        </trans-unit>
        <trans-unit id="706ea40b430397571f95b08454d9fda927d95a54" translate="yes" xml:space="preserve">
          <source>Once registered, a type can be used in outgoing method calls (placed with &lt;a href=&quot;qdbusabstractinterface#call-1&quot;&gt;QDBusAbstractInterface::call&lt;/a&gt;()), signal emissions from registered objects or in incoming calls from remote applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fdb923b97b3639512618d76df193ba658ae763" translate="yes" xml:space="preserve">
          <source>Once registered, all signals and property changes are automatically propagated to the clients. Public invokable methods, including slots, are also accessible to the clients.</source>
          <target state="translated">一旦注册,所有的信号和属性变化都会自动传播到客户端。公用的可调用方法,包括插槽,也可供客户访问。</target>
        </trans-unit>
        <trans-unit id="2af748be4364a6f16ee59c52d59a11b686fe9cc1" translate="yes" xml:space="preserve">
          <source>Once registered, the type can be used in QML by importing the same type namespace and version number:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2acb02284decccb2539c681f480973c653d7a5" translate="yes" xml:space="preserve">
          <source>Once storage has been allocated for the texture then pixel data can be uploaded via one of the &lt;a href=&quot;qopengltexture#setData&quot;&gt;setData&lt;/a&gt;() overloads.</source>
          <target state="translated">一旦为纹理分配了存储空间，就可以通过&lt;a href=&quot;qopengltexture#setData&quot;&gt;setData&lt;/a&gt;（）重载之一上载像素数据。</target>
        </trans-unit>
        <trans-unit id="4066d6598bee2916f9c3b08e94545af3dd0223ef" translate="yes" xml:space="preserve">
          <source>Once storage has been allocated it is no longer possible to change these properties.</source>
          <target state="translated">一旦存储被分配,就无法再改变这些属性。</target>
        </trans-unit>
        <trans-unit id="bf5fd6231cbbc871a1f444bb695dec4a43eaab55" translate="yes" xml:space="preserve">
          <source>Once the &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; object has been created, set the connection parameters with &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(). Then call &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;() to activate the physical connection to the database. The connection is not usable until you open it.</source>
          <target state="translated">一旦&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;对象已经创建，设置连接参数与&lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;（），&lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;（），&lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;（），&lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;（），&lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;（），和&lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;（）。然后调用&lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;（）激活与数据库的物理连接。在打开连接之前，该连接不可用。</target>
        </trans-unit>
        <trans-unit id="d693e653a5aefa95f90913cd528053a2853d850b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;RandomNumberGenerator&lt;/code&gt; class has been registered with the QML type system, it can be used from QML as a property value source. Below, it is used to change the width of a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; every 500 milliseconds:</source>
          <target state="translated">一旦 &lt;code&gt;RandomNumberGenerator&lt;/code&gt; 类已在QML类型系统中注册，就可以从QML用作属性值源。在下面，它用于每500毫秒更改&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;的宽度：</target>
        </trans-unit>
        <trans-unit id="dc4e61b0e31d8ea0efe7e1ce13e7532a4eec072f" translate="yes" xml:space="preserve">
          <source>Once the HTML documents are in place, a &lt;a href=&quot;qthelpproject&quot;&gt;Qt Help Project&lt;/a&gt; file, with an extension of &lt;code&gt;.qhp&lt;/code&gt;, has to be created. After specifying all the relevant information in this file, it needs to be compiled by calling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ae2c1e1c709d43479f94e48c10b97999f58390" translate="yes" xml:space="preserve">
          <source>Once the HTML documents are in place, a &lt;a href=&quot;qthelpproject#&quot;&gt;Qt Help Project&lt;/a&gt; file, with an extension of &lt;code&gt;.qhp&lt;/code&gt;, has to be created. After specifying all the relevant information in this file, it needs to be compiled by calling:</source>
          <target state="translated">HTML文档放置到位后，必须创建扩展名为 &lt;code&gt;.qhp&lt;/code&gt; 的&lt;a href=&quot;qthelpproject#&quot;&gt;Qt帮助项目&lt;/a&gt;文件。在此文件中指定所有相关信息之后，需要通过调用以下命令进行编译：</target>
        </trans-unit>
        <trans-unit id="550dc13bcc47d73cb367af625b17c1f72d056570" translate="yes" xml:space="preserve">
          <source>Once the QSqlDatabase object has been created, set the connection parameters with &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(). Then call &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;() to activate the physical connection to the database. The connection is not usable until you open it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb5a703a85da112bfdfb22564c6b753fb342d2b" translate="yes" xml:space="preserve">
          <source>Once the action is created, it can be used wherever actions are applicable.</source>
          <target state="translated">一旦创建了动作,它就可以在任何动作适用的地方使用。</target>
        </trans-unit>
        <trans-unit id="d1f4caca220052a1d05453a5cf60436aa66ce30c" translate="yes" xml:space="preserve">
          <source>Once the animation clip has been populated with data using the above methods, the read-only duration property will be updated by the Qt 3D Animation backend.</source>
          <target state="translated">一旦使用上述方法用数据填充了动画片段,Qt 3D Animation后台将更新只读持续时间属性。</target>
        </trans-unit>
        <trans-unit id="205b5c208dd11021e42c1f0cb029c8ea2f565ea8" translate="yes" xml:space="preserve">
          <source>Once the application is prepared for publishing, you can create a listing for it in Google Play.</source>
          <target state="translated">一旦应用程序准备好发布,你就可以在Google Play中为它创建一个列表。</target>
        </trans-unit>
        <trans-unit id="ea0b767aded5ed6d7f67a23165e680f703e3eddf" translate="yes" xml:space="preserve">
          <source>Once the callback passed to the &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object is invoked, the channel has finished initialization and all published objects are accessible to the HTML client via the &lt;code&gt;channel.objects&lt;/code&gt; property. Thus, assuming an object was published with the identifier &quot;foo&quot;, then we can interact with it as shown in the example below. Note that all communication between the HTML client and the QML/C++ server is asynchronous. Properties are cached on the HTML side. Furthermore keep in mind that only QML/C++ data types which can be converted to JSON will be (de-)serialized properly and thus accessible to HTML clients.</source>
          <target state="translated">调用传递给&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;对象的回调后，通道已完成初始化，并且HTML客户端可通过 &lt;code&gt;channel.objects&lt;/code&gt; 属性访问所有已发布的对象。因此，假设发布了一个带有标识符&amp;ldquo; foo&amp;rdquo;的对象，那么我们可以与它进行交互，如下例所示。请注意，HTML客户端和QML / C ++服务器之间的所有通信都是异步的。属性缓存在HTML端。此外，请记住，只有可以转换为JSON的QML / C ++数据类型才能正确地进行（反）序列化，因此HTML客户端可以访问。</target>
        </trans-unit>
        <trans-unit id="4870e02dd16024ea585e0185e39f0f403481f28d" translate="yes" xml:space="preserve">
          <source>Once the character format has been used with a cursor, that format becomes the default format for any text inserted with that cursor until another character format is specified.</source>
          <target state="translated">一旦一个游标使用了字符格式,该格式就会成为该游标所插入的任何文本的默认格式,直到指定了另一种字符格式。</target>
        </trans-unit>
        <trans-unit id="496af005595ecb484db08b997602438633276ba2" translate="yes" xml:space="preserve">
          <source>Once the component cache has been cleared, components must be loaded before any new objects can be created.</source>
          <target state="translated">一旦组件缓存被清除,必须在创建任何新对象之前加载组件。</target>
        </trans-unit>
        <trans-unit id="d478d6665153cbfa2af22f055007c65ef12929ba" translate="yes" xml:space="preserve">
          <source>Once the image is ready, &lt;a href=&quot;qml-qtquick-canvas#imageLoaded-signal&quot;&gt;imageLoaded()&lt;/a&gt; signal will be emitted. The loaded image can be unloaded with the &lt;a href=&quot;qml-qtquick-canvas#unloadImage-method&quot;&gt;unloadImage()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23878cf26f59a37f5b55e0c5b866fe62d4c572e" translate="yes" xml:space="preserve">
          <source>Once the items have been successfully registered in the store, you can purchase them. Get the previously registered &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; using &lt;a href=&quot;qinappstore#registeredProduct&quot;&gt;registeredProduct&lt;/a&gt;() and call &lt;a href=&quot;qinappproduct#purchase&quot;&gt;QInAppProduct::purchase&lt;/a&gt;(). This call is also asynchronous.</source>
          <target state="translated">物品在商店中成功注册后，即可购买。使用&lt;a href=&quot;qinappstore#registeredProduct&quot;&gt;registeredProduct&lt;/a&gt;（）获取先前注册的&lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct，&lt;/a&gt;然后调用&lt;a href=&quot;qinappproduct#purchase&quot;&gt;QInAppProduct :: purchase&lt;/a&gt;（）。此调用也是异步的。</target>
        </trans-unit>
        <trans-unit id="b5dda2fa2d7123529d9fd69fe7226be909e75bed" translate="yes" xml:space="preserve">
          <source>Once the machine is started, we can post events to it.</source>
          <target state="translated">一旦机器启动,我们就可以向它发布事件。</target>
        </trans-unit>
        <trans-unit id="f87051ba877349a528b632247c69a275e5b35131" translate="yes" xml:space="preserve">
          <source>Once the manifest is added to your project, you can modify it. The most important parts are the application name and the package name. The package name must be unique, and it is recommended to follow the com.mycompany.myappname naming convention. The &quot;com.mycompany&quot; namespace is based on the Internet domain ownership to avoid naming collisions with other applications.</source>
          <target state="translated">一旦清单被添加到你的项目中,你就可以修改它。最重要的部分是应用程序名称和包名称。包名必须是唯一的,建议遵循com.mycompany.myappname的命名惯例。&quot;com.mycompany &quot;命名空间是基于互联网域名所有权的,以避免与其他应用程序的命名冲突。</target>
        </trans-unit>
        <trans-unit id="f521cefaaba3fda658fcaf0b5cd9bc12020db606" translate="yes" xml:space="preserve">
          <source>Once the numerical segments have been parsed, the remainder of the string is considered to be the suffix string. The start index of that string will be stored in</source>
          <target state="translated">一旦数字段被解析后,字符串的剩余部分将被视为后缀字符串。该字符串的起始索引将存储在</target>
        </trans-unit>
        <trans-unit id="f1302f6bf7bb8a9fd947b5e568d478ba086c5f3a" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply::locations&lt;/a&gt;() can be used to retrieve the results, which will consist of a list of &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; objects. These objects represent a combination of coordinate and address data.</source>
          <target state="translated">操作完成后，可以使用&lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply :: locations&lt;/a&gt;（）检索结果，该结果将由&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt;对象的列表组成。这些对象代表坐标和地址数据的组合。</target>
        </trans-unit>
        <trans-unit id="01b5acac21beaef0597f322faf8c937236d32d9e" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply::routes&lt;/a&gt; can be used to retrieve the calculated route or routes.</source>
          <target state="translated">操作完成后，可以使用&lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply :: routes&lt;/a&gt;检索计算出的一条或多条路线。</target>
        </trans-unit>
        <trans-unit id="0a1009ef434c48bb9be4042007fd562ae5ccb125" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply::routes&lt;/a&gt; can be used to retrieve the updated route.</source>
          <target state="translated">操作完成后，可以使用&lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply :: routes&lt;/a&gt;检索更新的路由。</target>
        </trans-unit>
        <trans-unit id="d8237d24f440ae3aaa3b7945827ee52601fc76fe" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, create a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; with the appropriate waypoints and other settings, and set the &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property. If &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the update will being automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="translated">设置插件后，使用适当的航路点和其他设置创建&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;，然后设置&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;的&lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt;属性。如果启用了&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;，将自动进行更新。否则，可以使用&lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;更新&lt;/a&gt;方法。默认情况下，&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;自动更新&lt;/a&gt;被禁用。</target>
        </trans-unit>
        <trans-unit id="eef2855a47b2cc4af71a18bffd9ce510d7f34242" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, create a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; with the appropriate waypoints and other settings, and set the RouteModel's &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property. If &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the update will being automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4a4e9814333870e00d88728fd47606694571eb" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, the &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt; property can be used to specify the address or search string to match. If &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the Model will update its output automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="translated">设置插件后，可以使用&lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt;属性指定要匹配的地址或搜索字符串。如果启用了&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;，则模型将自动更新其输出。否则，可以使用&lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;更新&lt;/a&gt;方法。默认情况下，&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;自动更新&lt;/a&gt;被禁用。</target>
        </trans-unit>
        <trans-unit id="51573a29d91f36ec0e9aa557f5fc03263d8d4e9a" translate="yes" xml:space="preserve">
          <source>Once the project is built and installed, the new &lt;code&gt;Time&lt;/code&gt; component is accessible by any QML component that imports the &lt;code&gt;TimeExample&lt;/code&gt; module</source>
          <target state="translated">一旦构建并安装了项目，任何导入 &lt;code&gt;TimeExample&lt;/code&gt; 模块的QML组件都可以访问新的 &lt;code&gt;Time&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="d57a67cc01f03463e100ca785c789a48baaefd10" translate="yes" xml:space="preserve">
          <source>Once the rendering is done the pageRendered() signal is emitted with the result as parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b788d9ad88ab09075085e62bbb75e2121a947c" translate="yes" xml:space="preserve">
          <source>Once the request completes successfully the response can be retrieved from the &lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;() function. The response of this request will be a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">一旦请求成功完成，就可以从&lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;（）函数中检索响应。该请求的响应将是&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8111f76953cdb0759d595d2a88f5fa509a36db0" translate="yes" xml:space="preserve">
          <source>Once the request completes the response for successfully completed requests can be retrieved from the &lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;() function. The response of this request will be a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">一旦请求完成，就可以从&lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;（）函数中检索成功完成的请求的响应。该请求的响应将是&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;。</target>
        </trans-unit>
        <trans-unit id="6dff09d559cd10dbb9244d06b7374557ff114f63" translate="yes" xml:space="preserve">
          <source>Once the request finishes you can handle the results with:</source>
          <target state="translated">一旦请求完成,你可以用以下方法处理结果。</target>
        </trans-unit>
        <trans-unit id="9675df906f3b4dd39c0f3e7e2d9daa0adf9f201f" translate="yes" xml:space="preserve">
          <source>Once the resources are defined you can use them actively when composing your form. For example, you might want to create a tool button using an icon specified in the resource file.</source>
          <target state="translated">一旦定义了资源,您就可以在组成表单时主动使用它们。例如,您可能想使用资源文件中指定的图标创建一个工具按钮。</target>
        </trans-unit>
        <trans-unit id="cef2ed87f29621407fe223b5c500043ff82db994" translate="yes" xml:space="preserve">
          <source>Once the texture object is created you can obtain the object name from the &lt;a href=&quot;qopengltexture#textureId&quot;&gt;textureId&lt;/a&gt;() function. This may be useful if you wish to make some raw OpenGL calls related to this texture.</source>
          <target state="translated">创建纹理对象后，您可以从&lt;a href=&quot;qopengltexture#textureId&quot;&gt;textureId&lt;/a&gt;（）函数获取对象名称。如果您希望进行与此纹理相关的原始OpenGL调用，这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="a854609fbf0cc0561a8527b2bba9a2242f014e3e" translate="yes" xml:space="preserve">
          <source>Once the window has been embedded into the container, the container will control the window's geometry and visibility. Explicit calls to &lt;a href=&quot;qwindow#setGeometry&quot;&gt;QWindow::setGeometry&lt;/a&gt;(), &lt;a href=&quot;qwindow#show&quot;&gt;QWindow::show&lt;/a&gt;() or &lt;a href=&quot;qwindow#hide&quot;&gt;QWindow::hide&lt;/a&gt;() on an embedded window is not recommended.</source>
          <target state="translated">将窗口嵌入容器后，容器将控制窗口的几何形状和可见性。不建议在嵌入式窗口上显式调用&lt;a href=&quot;qwindow#setGeometry&quot;&gt;QWindow :: setGeometry&lt;/a&gt;（），&lt;a href=&quot;qwindow#show&quot;&gt;QWindow :: show&lt;/a&gt;（）或&lt;a href=&quot;qwindow#hide&quot;&gt;QWindow :: hide&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="cf2e6243d5e6c8c2c5e1273d53d655f0a1ad06bd" translate="yes" xml:space="preserve">
          <source>Once these details are added, &lt;b&gt;Activate&lt;/b&gt; the product. If you have not published the application yet, the product is marked as &lt;b&gt;To be activated&lt;/b&gt;. Otherwise, it is marked as active. The product must be activated before it can be queried from the Qt Purchasing API. If the application has recently been published, then it may take a few hours before the in-app products can be accessed from your application. Look for the &lt;b&gt;Updates pending&lt;/b&gt; label on the top right side of the screen. If this is visible, then there are updates pending which are not yet visible from the outside.</source>
          <target state="translated">添加这些详细信息后，&lt;b&gt;激活&lt;/b&gt;产品。如果尚未发布该应用程序，则该产品将标记为&lt;b&gt;待激活&lt;/b&gt;。否则，它将被标记为活动状态。必须先激活该产品，然后才能从Qt购买API中查询该产品。如果该应用程序是最近发布的，则可能要花几个小时才能从您的应用程序访问应用程序内产品。在屏幕的右上方查找&amp;ldquo; &lt;b&gt;待处理&lt;/b&gt;的&lt;b&gt;更新&amp;rdquo;&lt;/b&gt;标签。如果可见，则有尚未解决的更新，这些更新从外部尚不可见。</target>
        </trans-unit>
        <trans-unit id="a7f71a05800de7ca2d4dd08b9121a4d845b7a47f" translate="yes" xml:space="preserve">
          <source>Once this is registered, the type can be used in QML by importing the specified type namespace and version number:</source>
          <target state="translated">一旦注册,该类型可以通过导入指定的类型命名空间和版本号在QML中使用。</target>
        </trans-unit>
        <trans-unit id="a44fb5711cc76be889a52ace7f57dfbfb5882981" translate="yes" xml:space="preserve">
          <source>Once this property is bound to another &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;, both header and table will synchronize with regard to column widths, column spacing, and flicking horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23311eed06b33c3c9881162f1a3c1ef90b84868f" translate="yes" xml:space="preserve">
          <source>Once this property is bound to another &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;, both header and table will synchronize with regard to row heights, row spacing, and flicking vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d11ad319c8411fb480cef806b8c18cbdbaa86f1" translate="yes" xml:space="preserve">
          <source>Once widgets have been inserted into a layout, it is not possible to move and resize them individually because the layout itself controls the geometry of each widget within it, taking account of the hints provided by spacers. Spacers can be added to the layout to influence the geometries of the widgets.</source>
          <target state="translated">一旦将小组件插入到布局中,就无法单独移动和调整它们的大小,因为布局本身会考虑到间隔线提供的提示,控制其中每个小组件的几何形状。间隔符可以添加到布局中,以影响小组件的几何形状。</target>
        </trans-unit>
        <trans-unit id="48f853c377dfafa75d073fe8c2ac1f2d9bbf4804" translate="yes" xml:space="preserve">
          <source>Once you are done with the thread, call &lt;a href=&quot;qthreadpool#releaseThread&quot;&gt;releaseThread&lt;/a&gt;() to allow it to be reused.</source>
          <target state="translated">一旦完成线程处理，请调用&lt;a href=&quot;qthreadpool#releaseThread&quot;&gt;releaseThread&lt;/a&gt;（）以允许其重用。</target>
        </trans-unit>
        <trans-unit id="4f99787523ca86812e43fea58bf63058f32b7a4f" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, you can call its &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; method to create an instance of the component. This function can take one or two arguments:</source>
          <target state="translated">一旦有了&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;，就可以调用其&lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject（）&lt;/a&gt;方法来创建该组件的实例。此函数可以使用一个或两个参数：</target>
        </trans-unit>
        <trans-unit id="5c640f9181d5bd6296e2924bbca96e44926980a3" translate="yes" xml:space="preserve">
          <source>Once you have a custom widget plugin for</source>
          <target state="translated">一旦你有一个自定义的小部件插件</target>
        </trans-unit>
        <trans-unit id="6e7fd47ef3ed9aa04b7236db70c3b3a14b8dea7b" translate="yes" xml:space="preserve">
          <source>Once you have a form window's cursor interface, you can check if the form window has a selection at all using the &lt;a href=&quot;qdesignerformwindowcursorinterface#hasSelection&quot;&gt;hasSelection&lt;/a&gt;() function. You can query the form window for its total &lt;a href=&quot;qdesignerformwindowcursorinterface#widgetCount&quot;&gt;widgetCount&lt;/a&gt;() and &lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidgetCount&quot;&gt;selectedWidgetCount&lt;/a&gt;(). You can retrieve the currently selected widget (or widgets) using the &lt;a href=&quot;qdesignerformwindowcursorinterface#current&quot;&gt;current&lt;/a&gt;() or &lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidget&quot;&gt;selectedWidget&lt;/a&gt;() functions.</source>
          <target state="translated">拥有窗体窗口的光标界面后，可以使用&lt;a href=&quot;qdesignerformwindowcursorinterface#hasSelection&quot;&gt;hasSelection&lt;/a&gt;（）函数检查窗体窗口是否完全具有选择项。您可以查询表单窗口的总的&lt;a href=&quot;qdesignerformwindowcursorinterface#widgetCount&quot;&gt;widgetCount&lt;/a&gt;（）和&lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidgetCount&quot;&gt;selectedWidgetCount&lt;/a&gt;（）。您可以使用&lt;a href=&quot;qdesignerformwindowcursorinterface#current&quot;&gt;current&lt;/a&gt;（）或&lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidget&quot;&gt;selectedWidget&lt;/a&gt;（）函数检索当前选择的一个或多个窗口小部件。</target>
        </trans-unit>
        <trans-unit id="86f4ced0f47e3cdafee5ebd0c20cd011a17a4dce" translate="yes" xml:space="preserve">
          <source>Once you have added your layout you can start putting widgets and other layouts into the cells of your grid layout using &lt;a href=&quot;qgridlayout#addWidget-1&quot;&gt;addWidget&lt;/a&gt;(), &lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), and &lt;a href=&quot;qgridlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;().</source>
          <target state="translated">添加布局后，您可以开始使用&lt;a href=&quot;qgridlayout#addWidget-1&quot;&gt;addWidget&lt;/a&gt;（），&lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;（）和&lt;a href=&quot;qgridlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;（）将小部件和其他布局放入网格布局的单元格中。</target>
        </trans-unit>
        <trans-unit id="25fd7c4374dacc7fdac166445af55cb19e44130f" translate="yes" xml:space="preserve">
          <source>Once you have created a event object using Windows API such as CreateEvent() or OpenEvent(), you can create an event notifier to monitor the event handle. If the event notifier is enabled, it will emit the &lt;a href=&quot;qwineventnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal whenever the corresponding event object is signalled.</source>
          <target state="translated">使用Windows API（例如CreateEvent（）或OpenEvent（））创建事件对象后，就可以创建事件通知程序来监视事件句柄。如果启用了事件通知程序，则每当发出相应的事件对象信号时，它将发出&lt;a href=&quot;qwineventnotifier#activated&quot;&gt;激活的&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="ad85489ea8db0c725079f5ce1c8dbf56a58f4d84" translate="yes" xml:space="preserve">
          <source>Once you have created your iTunes test user, you will be able to log in to the sandbox app store when developing your app.</source>
          <target state="translated">一旦你创建了iTunes测试用户,你就可以在开发应用时登录沙盒应用商店。</target>
        </trans-unit>
        <trans-unit id="58b03b1720b139f341a87cbf7ff93042e86f9554" translate="yes" xml:space="preserve">
          <source>Once you have done this, you can add boxes to the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; using one of four functions:</source>
          <target state="translated">完成此操作后，可以使用以下四个功能之一将框添加到&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="31b8502bd0f44d2949fed4f14a56e62dfc3ceaff" translate="yes" xml:space="preserve">
          <source>Once you have done this, you can add boxes to the QBoxLayout using one of four functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50bf9b388f3951da2351041f5e385f3fd881082" translate="yes" xml:space="preserve">
          <source>Once you have followed the steps above, you have a separate light probe set for the material. This light probe overrides the scene light probe if there is one specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f03a38ef87621940dfad6538c8a44a1d3f2e107" translate="yes" xml:space="preserve">
          <source>Once you have installed Qt, you can start</source>
          <target state="translated">一旦你安装了Qt,你可以启动</target>
        </trans-unit>
        <trans-unit id="95048dcfd3150cfb77e6dc7ba9e8b45084bb3618" translate="yes" xml:space="preserve">
          <source>Once you have loaded the SVG file successfully, you can render it with the &lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer::render&lt;/a&gt;() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, QGLWidget, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsvg-svgviewer-example.html#&quot;&gt;SVG Viewer&lt;/a&gt; example for more details.</source>
          <target state="translated">成功加载SVG文件后，可以使用&lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer :: render&lt;/a&gt;（）函数对其进行呈现。请注意，该方案允许您在Qt支持的所有绘画设备上渲染SVG文件，包括&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;，QGLWidget和&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsvg-svgviewer-example.html#&quot;&gt;SVG Viewer&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="c3f3dcc9cf59e9311124d8da3923db6e5bc376fc" translate="yes" xml:space="preserve">
          <source>Once you have loaded the SVG file successfully, you can render it with the &lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer::render&lt;/a&gt;() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, QGLWidget, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsvg-svgviewer-example.html&quot;&gt;SVG Viewer&lt;/a&gt; example for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead5f946dd8a41570e30cb9f83c06bd9bcc6cc49" translate="yes" xml:space="preserve">
          <source>Once you have opened a device using a low-level (usually platform-specific) API, you can create a socket notifier to monitor the file descriptor. The socket notifier is enabled by default, i.e. it emits the &lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal whenever a socket event corresponding to its type occurs. Connect the &lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal to the slot you want to be called when an event corresponding to your socket notifier's type occurs.</source>
          <target state="translated">使用低级（通常是特定于平台的）API打开设备后，就可以创建套接字通知程序来监视文件描述符。默认情况下，套接字通知程序是启用的，即，每当发生与它的类型相对应的套接字事件时，它都会发出&lt;a href=&quot;qsocketnotifier#activated&quot;&gt;Activated&lt;/a&gt;（）信号。当发生与套接字通知程序类型相对应的事件时，将&lt;a href=&quot;qsocketnotifier#activated&quot;&gt;Activated&lt;/a&gt;（）信号连接到要调用的插槽。</target>
        </trans-unit>
        <trans-unit id="856003ba62e3c792c5a48b82084d53965764bd9f" translate="yes" xml:space="preserve">
          <source>Once you have selected an image, IBL is set up for your scene. All models in the scene are illuminated by the light probe by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587696ac7394a789e6d77c3e76bb0fb746a545e6" translate="yes" xml:space="preserve">
          <source>Once you have successfully created a VAO the typical usage pattern is:</source>
          <target state="translated">一旦你成功创建了一个VAO,典型的使用模式是。</target>
        </trans-unit>
        <trans-unit id="2d0d6925f527558c514eaf74004bfb2fa5c285db" translate="yes" xml:space="preserve">
          <source>Once you have supplied a replacement drop action, call &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;() instead of &lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;().</source>
          <target state="translated">提供替换放置动作后，请调用&lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;（）而不是&lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="fc887faa98989e4a295984bfa5e50ddccee219e1" translate="yes" xml:space="preserve">
          <source>Once you have the form window, you can query its properties. For example, a plain custom widget plugin is managed by</source>
          <target state="translated">一旦你有了表单窗口,你就可以查询它的属性。例如,一个普通的自定义widget插件是由以下方式管理的</target>
        </trans-unit>
        <trans-unit id="0cb9d678077cb6771f2d5c1164d88f0d756afb40" translate="yes" xml:space="preserve">
          <source>Once you know that the ports are ready to read or write, you can use the &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() methods. Alternatively the &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() convenience methods can also be invoked. If not all the data is read at once, the remaining data will be available for later as new incoming data is appended to the &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt;'s internal read buffer. You can limit the size of the read buffer using &lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;().</source>
          <target state="translated">一旦知道端口已准备好读取或写入，就可以使用&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）或&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）方法。另外，还可以调用&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）和&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）便捷方法。如果不是一次读取所有数据，则在将新的传入数据附加到&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt;的内部读取缓冲区后，其余数据将可供以后使用。您可以使用&lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;（）限制读取缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="577ee7c327443525aec4749067a313d887847abd" translate="yes" xml:space="preserve">
          <source>Once you know that the ports are ready to read or write, you can use the &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() methods. Alternatively the &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() convenience methods can also be invoked. If not all the data is read at once, the remaining data will be available for later as new incoming data is appended to the QSerialPort's internal read buffer. You can limit the size of the read buffer using &lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4978bbca70c81bd39582d9d963d8617f1d74dd" translate="yes" xml:space="preserve">
          <source>Once your app is registered in iTunes Connect you will have additional options available to manage that App. In the &lt;b&gt;Manage Your Apps&lt;/b&gt; page of iTunes Connect, click the icon representing your app to manage its details. Within this menu you can select the &lt;b&gt;Manage In-App Purchases&lt;/b&gt; button on the right to register in-app products you wish to offer.</source>
          <target state="translated">在iTunes Connect中注册您的应用程序后，您将可以使用其他选项来管理该应用程序。在iTunes Connect 的&amp;ldquo; &lt;b&gt;管理您的应用程序&amp;rdquo;&lt;/b&gt;页面中，单击代表您的应用程序的图标以管理其详细信息。在此菜单中，您可以选择右侧的&lt;b&gt;管理应用内购买&lt;/b&gt;按钮来注册您希望提供的应用内产品。</target>
        </trans-unit>
        <trans-unit id="82c37a941ba03279b12ed1a3e19e39a2cd9bc7f3" translate="yes" xml:space="preserve">
          <source>Once your products are registered you will be able to purchase them from your app. When you are developing your app it is desirable to test buying your products without spending real currency. There are actually two separate stores that requests can be sent to when using the In-App Purchasing service on iOS. While your app is being developed, any iOS App Store requests will be sent to a sandbox store. This occurs when your app has been signed with a developer Provisioning Profile. The sandbox store will only accept requests from test users and will not charge for the purchases. However, when you submit your app to the iOS App Store and it is accepted, all in-app purchasing requests are sent to the production store, which requires real iTunes users accounts, and will charge for the purchases.</source>
          <target state="translated">一旦您的产品被注册,您就可以从您的应用程序中购买它们。当你在开发你的应用时,最好能测试在不花费真实货币的情况下购买你的产品。在iOS上使用应用内购买服务时,实际上有两个独立的商店可以发送请求。当您的应用正在开发时,任何iOS应用商店的请求都会被发送到沙盒商店。当您的应用程序已与开发者供应配置文件签署时,就会出现这种情况。沙盒商店将只接受测试用户的请求,并且不会对购买进行收费。然而,当您向iOS应用商店提交应用并被接受时,所有的应用内购买请求都会被发送到生产商店,而生产商店需要真实的iTunes用户账户,并将对购买进行收费。</target>
        </trans-unit>
        <trans-unit id="68a40ec4ea1c7cab77a9f3596ca2355b12bad46e" translate="yes" xml:space="preserve">
          <source>One advantage of using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as a paint device is that it is possible to guarantee the pixel exactness of any drawing operation in a platform-independent way. Another benefit is that the painting can be performed in another thread than the current GUI thread.</source>
          <target state="translated">将&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;用作绘制设备的一个优点是可以以与平台无关的方式保证任何绘制操作的像素准确性。另一个好处是绘画可以在当前GUI线程之外的另一个线程中执行。</target>
        </trans-unit>
        <trans-unit id="552d0d068ba98a7ae885e564b90cd22da8285c55" translate="yes" xml:space="preserve">
          <source>One advantage of using &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() will still replace the lowest-numbered unreplaced place-marker, no matter where it appears. Also, if place-marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() replaces all of them.</source>
          <target state="translated">使用&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）而不是&lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;（）的一个优点是，如果将应用程序的字符串翻译成其他语言，则可以更改编号的位置标记的顺序，但是每个&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）仍将替换编号最小的未替换位置标记，无论出现在哪里。另外，如果位置标记 &lt;code&gt;%i&lt;/code&gt; 在字符串中出现多次，则&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）会替换所有位置标记。</target>
        </trans-unit>
        <trans-unit id="8a496cae007faea94b56b0456c6f81a542d18513" translate="yes" xml:space="preserve">
          <source>One advantage of using arg() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each arg() will still replace the lowest numbered unreplaced place marker, no matter where it appears. Also, if place marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, the arg() replaces all of them.</source>
          <target state="translated">与应用程序&lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;（）相比，使用arg（）的一个优点是，如果将应用程序的字符串翻译成其他语言，则可以更改编号的位置标记的顺序，但是无论如何，每个arg（）仍将替换编号最小的未替换位置标记它出现的位置。另外，如果位置标记 &lt;code&gt;%i&lt;/code&gt; 在字符串中出现多次，则arg（）会替换所有位置标记。</target>
        </trans-unit>
        <trans-unit id="49799b2853265a66e0f9eb11306af5d259a520f4" translate="yes" xml:space="preserve">
          <source>One advantage of using arg() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each arg() will still replace the lowest-numbered unreplaced place-marker, no matter where it appears. Also, if place-marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, arg() replaces all of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3651c6efb4c28103edacfd4bc6574f7b189b8dbf" translate="yes" xml:space="preserve">
          <source>One button has no elevation, and the other has an elevation of &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">一个按钮没有高程，另一个按钮有 &lt;code&gt;10&lt;/code&gt; 高程。</target>
        </trans-unit>
        <trans-unit id="c7462448543cbd1c364bf32e079f8120754aeedc" translate="yes" xml:space="preserve">
          <source>One call</source>
          <target state="translated">一个电话</target>
        </trans-unit>
        <trans-unit id="1d31b5cb24602913e72c9b9c94c60333e286c2d6" translate="yes" xml:space="preserve">
          <source>One call/Permanent</source>
          <target state="translated">一次性/永久性</target>
        </trans-unit>
        <trans-unit id="4615cf68efe02b80727d8bb5e130a46af5cc2480" translate="yes" xml:space="preserve">
          <source>One can write a switch table like so:</source>
          <target state="translated">可以这样写一个开关表。</target>
        </trans-unit>
        <trans-unit id="021a5a769eb2a744869076c94a4ea5e56547536b" translate="yes" xml:space="preserve">
          <source>One caveat to using the latest Xcode version and SDK to build your application is that macOS's system frameworks will sometimes decide whether or not to enable behavior changes based on the SDK you built your application with.</source>
          <target state="translated">使用最新的Xcode版本和SDK来构建应用程序的一个注意事项是,macOS的系统框架有时会根据你构建应用程序的SDK来决定是否启用行为变化。</target>
        </trans-unit>
        <trans-unit id="87ebc6df2d743bdf4de7159a1f5bedb57c85b959" translate="yes" xml:space="preserve">
          <source>One classic use of a tool button is to select tools; for example, the &quot;pen&quot; tool in a drawing program. This would be implemented by using a &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; as a toggle button (see &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;()).</source>
          <target state="translated">工具按钮的一种经典用法是选择工具。例如，绘图程序中的&amp;ldquo;笔&amp;rdquo;工具。这可以通过使用&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;作为切换按钮来实现（请参见&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="197b967081065134f8e05e142d1486a9f15d7b42" translate="yes" xml:space="preserve">
          <source>One classic use of a tool button is to select tools; for example, the &quot;pen&quot; tool in a drawing program. This would be implemented by using a QToolButton as a toggle button (see &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8892553d88581416dd3b2fcd31e82c19652dca" translate="yes" xml:space="preserve">
          <source>One common use of regexps is to split lines of delimited data into their component fields.</source>
          <target state="translated">regexps的一个常见用途是将分隔的数据行分割成它们的组件字段。</target>
        </trans-unit>
        <trans-unit id="a24ebc94394fa5f9d9f697e53dcf5f013c959c9e" translate="yes" xml:space="preserve">
          <source>One consequence of this is that setting a style rule on a widget automatically gives it precedence over other rules specified in the ancestor widgets' style sheets or the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; style sheet. Consider the following example. First, we set a style sheet on the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;:</source>
          <target state="translated">这样的结果之一是，在窗口小部件上设置样式规则会自动使其优先于在祖先窗口小部件的样式表或&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;样式表中指定的其他规则。考虑以下示例。首先，我们在&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;上设置一个样式表：</target>
        </trans-unit>
        <trans-unit id="38908edf573bb7b97e00bc1e6ec62c659e5cdcf0" translate="yes" xml:space="preserve">
          <source>One dash, two dots, one dash, two dots.</source>
          <target state="translated">一个破折号,两个点,一个破折号,两个点。</target>
        </trans-unit>
        <trans-unit id="bb641bfb37d3bb45179d996104a3fdbdef166310" translate="yes" xml:space="preserve">
          <source>One data model can only belong to one state machine.</source>
          <target state="translated">一个数据模型只能属于一个状态机。</target>
        </trans-unit>
        <trans-unit id="2d9cb7313469561dfcceffea7241129fa4481e2e" translate="yes" xml:space="preserve">
          <source>One does not need to understand the internals of the renderer to get good performance. However, it might help when integrating with the scene graph or to figure out why it is not possible to squeeze the maximum efficiency out of the graphics chip.</source>
          <target state="translated">人们不需要了解渲染器的内部结构来获得良好的性能。但是,在与场景图集成时,或者在弄清为什么不能从图形芯片中榨取最大效率时,它可能会有所帮助。</target>
        </trans-unit>
        <trans-unit id="d322aa94d574b82fc6b52bfde114ac5315193aae" translate="yes" xml:space="preserve">
          <source>One entry in an associative container: both the key and the value form one map-entry type.</source>
          <target state="translated">一个关联容器中的一个条目:键和值构成一个地图条目类型。</target>
        </trans-unit>
        <trans-unit id="a7e131d96d2f2dc51922f5d25204edf525fe4a8e" translate="yes" xml:space="preserve">
          <source>One example of direct use is to forward errors that stem from a scripting language, e.g. QML:</source>
          <target state="translated">直接使用的一个例子是转发来自脚本语言的错误,例如QML。</target>
        </trans-unit>
        <trans-unit id="ade3cab12057400fad5022687608c57749fe0637" translate="yes" xml:space="preserve">
          <source>One example of this is text-entry widgets, which often have a blinking cursor that can make comparisons of captured bitmaps succeed or fail depending on the state of the cursor when the bitmap is captured. This, in turn, may depend on the speed of the machine executing the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924d7d4ee16dfff2662059020c1bdf8cf28b1b66" translate="yes" xml:space="preserve">
          <source>One frequent need for the transformation matrix is when reusing the same drawing code on a variety of paint devices. Without transformations, the results are tightly bound to the resolution of the paint device. Printers have high resolution, e.g. 600 dots per inch, whereas screens often have between 72 and 100 dots per inch.</source>
          <target state="translated">一个经常需要变换矩阵的情况是,当在不同的绘画设备上重复使用相同的绘画代码时。如果不进行转换,其结果就会被油漆设备的分辨率严格限制。打印机的分辨率很高,例如600点/英寸,而屏幕的分辨率往往在72到100点/英寸之间。</target>
        </trans-unit>
        <trans-unit id="a41737d2b52315e3e7b77b5a84fc7cc9fe2b25ce" translate="yes" xml:space="preserve">
          <source>One input handler can control one scene. Setting a scene to an input handler does not transfer the ownership of the scene.</source>
          <target state="translated">一个输入处理程序可以控制一个场景。将场景设置为输入处理程序并不转移场景的所有权。</target>
        </trans-unit>
        <trans-unit id="df1b400b13392aa822e4cb0b5acdac49738c9c08" translate="yes" xml:space="preserve">
          <source>One instance per day of month.</source>
          <target state="translated">每月每天一例。</target>
        </trans-unit>
        <trans-unit id="f3183f5f9d7dcdfd03d2cd7a8ac85c86fb10dfc4" translate="yes" xml:space="preserve">
          <source>One instance per day of week.</source>
          <target state="translated">每周每天一例。</target>
        </trans-unit>
        <trans-unit id="ba0ceb58ac884f9abf155cd9df5794beb04c7727" translate="yes" xml:space="preserve">
          <source>One instance per week.</source>
          <target state="translated">每周一例。</target>
        </trans-unit>
        <trans-unit id="3589f2b7c774a6be6d231f82ea0f6fae4a5452d0" translate="yes" xml:space="preserve">
          <source>One major cost of using JavaScript is that in most cases when a property from a QML type is accessed, a JavaScript object with an external resource containing the underlying C++ data (or a reference to it) is created. In most cases, this is fairly inexpensive, but in others it can be quite expensive. One example of where it is expensive is assigning a C++ &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; to a QML &quot;variant&quot; property. Lists can also be expensive, although sequences of specific types (&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; of int, qreal, bool, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;) should be inexpensive; other list types involve an expensive conversion cost (creating a new JavaScript Array, and adding new types one by one, with per-type conversion from C++ type instance to JavaScript value).</source>
          <target state="translated">使用JavaScript的一项主要成本是，在大多数情况下，当访问QML类型的属性时，会创建一个JavaScript对象，该对象的外部资源包含基础C ++数据（或对其的引用）。在大多数情况下，这是相当便宜的，但在其他情况下，它可能会非常昂贵。昂贵的一个例子是将C ++ &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap &lt;/a&gt;&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;分配给QML&amp;ldquo; variant&amp;rdquo;属性。尽管特定类型的序列（int，qreal，bool，&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;和&lt;a href=&quot;qurl&quot;&gt;QUrl的&lt;/a&gt;&lt;a href=&quot;qlist&quot;&gt;QList）&lt;/a&gt;也可能很昂贵。）应该便宜；其他列表类型涉及昂贵的转换成本（创建新的JavaScript数组，并逐个添加新类型，以及从C ++类型实例到JavaScript值的每个类型转换）。</target>
        </trans-unit>
        <trans-unit id="f8e864d68489bf38b989fae405a3102cc97b5939" translate="yes" xml:space="preserve">
          <source>One of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s greatest strengths is its ability to efficiently determine the location of items. Even with millions of items on the scene, the &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;() functions can determine the location of an item within a few milliseconds. There are several overloads to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;(): one that finds items at a certain position, one that finds items inside or intersecting with a polygon or a rectangle, and more. The list of returned items is sorted by stacking order, with the topmost item being the first item in the list. For convenience, there is also an &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;() function that returns the topmost item at a given position.</source>
          <target state="translated">一个&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;的最大优点是它有效地确定项目的定位能力。即使场景中有数百万个项目，&lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;（）函数也可以在几毫秒内确定项目的位置。&lt;a href=&quot;qgraphicsscene#items&quot;&gt;item&lt;/a&gt;（）有几种重载：一种在某个位置查找项目的重载，一种在多边形或矩形内部或与之相交的项目中的重载，等等。返回的项目列表按堆叠顺序排序，最高的项目是列表中的第一项目。为了方便起见，还有一个&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;（）函数可返回给定位置的最高项目。</target>
        </trans-unit>
        <trans-unit id="2124ade4fb2bf06272d34869bf977cb448cef3c8" translate="yes" xml:space="preserve">
          <source>One of QGraphicsScene's greatest strengths is its ability to efficiently determine the location of items. Even with millions of items on the scene, the &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;() functions can determine the location of an item within a few milliseconds. There are several overloads to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;(): one that finds items at a certain position, one that finds items inside or intersecting with a polygon or a rectangle, and more. The list of returned items is sorted by stacking order, with the topmost item being the first item in the list. For convenience, there is also an &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;() function that returns the topmost item at a given position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6877a7adf6c6f197b61a3386bee49d537fed067e" translate="yes" xml:space="preserve">
          <source>One of Qt's key features, to enable this information exchange, is the distinction between an object's API (defined by its properties, signals, and slots) and the implementation of that API. QtRO's purpose is to meet that expected API, even if the true &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is in a different process. A slot called on a copy of an object (the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; in QtRO) is forwarded to the true object (the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; in QtRO) for handling. Every Replica receives updates to the Source, either property changes or emitted signals.</source>
          <target state="translated">Qt实现此信息交换的关键功能之一是对象的API（由其属性，信号和插槽定义）与该API的实现之间的区别。QtRO的目的是满足期望的API，即使真正的&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;处于不同的过程中也是如此。将调用对象&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;副本&lt;/a&gt;（QtRO中的副本）的插槽转发到真实对象（QtRO中的&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;）进行处理。每个副本都接收源的更新，无论是属性更改还是发出信号。</target>
        </trans-unit>
        <trans-unit id="ab0dc330c8a6c23af3e80e8c2ab7c44bf261e934" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;ColorStyle&lt;/a&gt; enum values.</source>
          <target state="translated">其中的&lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;色彩风格&lt;/a&gt;枚举值。</target>
        </trans-unit>
        <trans-unit id="09637215558791f84dc766275fa305328d994a06" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qabstract3dgraph#ShadowQuality-enum&quot;&gt;ShadowQuality&lt;/a&gt; enum values. By default, &lt;code&gt;ShadowQualityMedium&lt;/code&gt;.</source>
          <target state="translated">其中的&lt;a href=&quot;qabstract3dgraph#ShadowQuality-enum&quot;&gt;ShadowQuality&lt;/a&gt;枚举值。默认情况下， &lt;code&gt;ShadowQualityMedium&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07d163b1ad469f9585e1ff0e2598072e284c843b" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;InputView&lt;/a&gt; enum values.</source>
          <target state="translated">其中的&lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;InputView&lt;/a&gt;枚举值。</target>
        </trans-unit>
        <trans-unit id="613c05d992a3edd6749c6b40952f8297fa534928" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::DateFormat&lt;/a&gt; enumeration values, such as &lt;code&gt;Qt.DefaultLocaleShortDate&lt;/code&gt; or &lt;code&gt;Qt.ISODate&lt;/code&gt;</source>
          <target state="translated">其中一个的&lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt的:: DateFormat的&lt;/a&gt;枚举值，如 &lt;code&gt;Qt.DefaultLocaleShortDate&lt;/code&gt; 或 &lt;code&gt;Qt.ISODate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78f45c1b7627cd5722b0f72ce206427973168a19" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::DateFormat&lt;/a&gt; enumeration values, such as &lt;code&gt;Qt.RFC2822Date&lt;/code&gt; or &lt;code&gt;Qt.ISODate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5831d1f70b9397cda568b627e5c2de6827e6831" translate="yes" xml:space="preserve">
          <source>One of the URL schemes built into Qt is the &quot;qrc&quot; scheme. This allows content to be compiled into the executable using &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;. Using this, an executable can reference QML content that is compiled into the executable:</source>
          <target state="translated">Qt内置的URL方案之一是&amp;ldquo; qrc&amp;rdquo;方案。这允许使用&lt;a href=&quot;resources&quot;&gt;Qt资源系统&lt;/a&gt;将内容编译为可执行文件。使用此功能，可执行文件可以引用编译为可执行文件的QML内容：</target>
        </trans-unit>
        <trans-unit id="de02ef4459ecf6d496f2215936d878afbff5850f" translate="yes" xml:space="preserve">
          <source>One of the core features of QML is that it enables QML object types to be easily defined in a lightweight manner through QML documents to suit the needs of individual QML applications. The standard &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module provides various types like &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; for building a QML application; beyond these, you can easily define your own QML types to be reused within your application. This ability to create your own types forms the building blocks of any QML application.</source>
          <target state="translated">QML的核心功能之一是，它可以通过QML文档以轻量级的方式轻松定义QML对象类型，以满足各个QML应用程序的需求。标准的&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;模块提供了各种类型，例如&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;来构建QML应用程序。除此之外，您还可以轻松定义自己的QML类型，以在应用程序中重用。这种创建自己的类型的能力构成了任何QML应用程序的基础。</target>
        </trans-unit>
        <trans-unit id="3809a20bc81eacc8be68aeec501f8c163ad6e90f" translate="yes" xml:space="preserve">
          <source>One of the great advantages of using QML to define a user interface is that it allows the user interface designer to define how the application should react to events with simple JavaScript expressions. In QML, we refer to those events as &lt;a href=&quot;qtqml-syntax-signals&quot;&gt;signals&lt;/a&gt; and these signals are handled by &lt;a href=&quot;qtqml-syntax-signals#qml-signals-and-handlers&quot;&gt;signal handlers&lt;/a&gt;.</source>
          <target state="translated">使用QML定义用户界面的一大优点是，它允许用户界面设计人员使用简单的JavaScript表达式定义应用程序对事件的反应。在QML中，我们将这些事件称为&lt;a href=&quot;qtqml-syntax-signals&quot;&gt;信号，&lt;/a&gt;并且这些信号由&lt;a href=&quot;qtqml-syntax-signals#qml-signals-and-handlers&quot;&gt;信号处理程序处理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4c186fd917df6bd21db9cfed12c08d935e4fbb7" translate="yes" xml:space="preserve">
          <source>One of the key concepts of .NET is the idea of &quot;intermediate language code&quot; - the source code is compiled into a bytecode format, and at runtime, that bytecode is executed in a virtual machine - the</source>
          <target state="translated">.NET的关键概念之一是 &quot;中间语言代码 &quot;的概念--源代码被编译成字节码格式,在运行时,该字节码在一个虚拟机中执行--即</target>
        </trans-unit>
        <trans-unit id="f2165e2cfc45409f48d8a4ff1c18c18165fe8229" translate="yes" xml:space="preserve">
          <source>One of the key goals that most application developers want to achieve is to create a maintainable application. One of the ways to achieve this goal is to separate the user interface from the business logic. The following are a few reasons why an application's UI should be written in QML:</source>
          <target state="translated">大多数应用程序开发人员想要实现的关键目标之一是创建一个可维护的应用程序。实现这一目标的方法之一是将用户界面与业务逻辑分开。以下是应用程序的UI应该用QML编写的几个原因。</target>
        </trans-unit>
        <trans-unit id="cd16d5b033b6834a5a9611e78f3e2213cb9bd2c3" translate="yes" xml:space="preserve">
          <source>One of the most important concepts in QML is that of type re-use. An application will probably have multiple visual types which are all similar (for example, multiple push buttons), and QML allows these sort of things to be defined as re-usable, custom types, to minimize code duplication and maximize readability.</source>
          <target state="translated">QML中最重要的概念之一是类型重用。一个应用程序可能会有多个视觉类型,这些类型都是相似的(例如,多个按钮),QML允许将这类东西定义为可重用的、自定义的类型,以减少代码重复,并最大限度地提高可读性。</target>
        </trans-unit>
        <trans-unit id="946011cfa449ec7f7b9caff43717b47b8e240db0" translate="yes" xml:space="preserve">
          <source>One of the most useful basic features of Qt is the support for buddy widgets. A buddy widget accepts the input focus on behalf of a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; when the user types the label's shortcut key combination. The buddy concept is also used in Qt's &lt;a href=&quot;model-view-programming&quot;&gt;model/view&lt;/a&gt; framework.</source>
          <target state="translated">Qt最有用的基本功能之一是对伙伴小部件的支持。当用户键入标签的快捷键组合时，伙伴小部件代表&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;接受输入焦点。好友概念也用在Qt的&lt;a href=&quot;model-view-programming&quot;&gt;模型/视图&lt;/a&gt;框架中。</target>
        </trans-unit>
        <trans-unit id="30363581ec584febf43e57cce904b9c9605766ff" translate="yes" xml:space="preserve">
          <source>One of the requested discovery methods is not supported by the current platform. This value was introduced by Qt 5.8.</source>
          <target state="translated">其中一个请求的发现方法不被当前平台支持。这个值是Qt 5.8引入的。</target>
        </trans-unit>
        <trans-unit id="27872144c06fca2dc32bc579b3aff1208da29b65" translate="yes" xml:space="preserve">
          <source>One of the requirements to support in-app purchases on iOS is to have a registered unique App ID. This means that it is not possible to use an App ID that contains a wildcard character. You can check the existing App IDs and create new ones from the &lt;a href=&quot;https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action&quot;&gt;Apple Developer Certificate, Identifiers, and Profiles manager&lt;/a&gt;.</source>
          <target state="translated">在iOS上支持应用内购买的要求之一是拥有一个注册的唯一应用ID。这意味着不可能使用包含通配符的应用程序ID。您可以检查现有的应用程序ID，并从&lt;a href=&quot;https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action&quot;&gt;Apple开发者证书，标识符和配置文件管理器中&lt;/a&gt;创建新的ID 。</target>
        </trans-unit>
        <trans-unit id="d829c82306decdaf26640b18173d9b3b96ca0b69" translate="yes" xml:space="preserve">
          <source>One of the signals might be emitted for the current state of the</source>
          <target state="translated">其中一个信号可能是为当前的状态发出的。</target>
        </trans-unit>
        <trans-unit id="7312240af405956c435f0d722687ac2cd9912c5b" translate="yes" xml:space="preserve">
          <source>One or more errors has occurred. Call &lt;a href=&quot;qquickview#errors&quot;&gt;errors&lt;/a&gt;() to retrieve a list of errors.</source>
          <target state="translated">发生一个或多个错误。调用&lt;a href=&quot;qquickview#errors&quot;&gt;errors&lt;/a&gt;（）以检索错误列表。</target>
        </trans-unit>
        <trans-unit id="ff1d7c07ab82ad3c6fe97e07e506c72e4b39eb60" translate="yes" xml:space="preserve">
          <source>One or more errors occurred. Call &lt;a href=&quot;qquickwidget#errors&quot;&gt;errors&lt;/a&gt;() to retrieve a list of errors.</source>
          <target state="translated">发生一个或多个错误。调用&lt;a href=&quot;qquickwidget#errors&quot;&gt;errors&lt;/a&gt;（）以检索错误列表。</target>
        </trans-unit>
        <trans-unit id="1c562be14a0f3a541154814641a1055fb9c8c75c" translate="yes" xml:space="preserve">
          <source>One or two occurrences of &lt;a href=&quot;#length&quot;&gt;Length&lt;/a&gt;. If only one length is specified, it is used as the radius of the quarter circle defining the corner. If two lengths are specified, the first length is the horizontal radius of a quarter ellipse, whereas the second length is the vertical radius.</source>
          <target state="translated">一两次&lt;a href=&quot;#length&quot;&gt;Length&lt;/a&gt;。如果仅指定一个长度，则将其用作定义角的四分之一圆的半径。如果指定了两个长度，则第一长度是四分之一椭圆的水平半径，而第二长度是垂直半径。</target>
        </trans-unit>
        <trans-unit id="2dafa06193c6c0de5f03ef1aa013eade7b316811" translate="yes" xml:space="preserve">
          <source>One or two occurrences of &lt;a href=&quot;stylesheet-reference#length&quot;&gt;Length&lt;/a&gt;. If only one length is specified, it is used as the radius of the quarter circle defining the corner. If two lengths are specified, the first length is the horizontal radius of a quarter ellipse, whereas the second length is the vertical radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463a49dac2612f25b516e3cb3a7d4930f9d855ca" translate="yes" xml:space="preserve">
          <source>One or two pixel space between the menu bar and the dockarea, as done on Windows.</source>
          <target state="translated">在菜单栏和停靠区之间有一两个像素的空间,就像在Windows上做的那样。</target>
        </trans-unit>
        <trans-unit id="ab6ea547facb8d8e1977c533d0dff798d91798e2" translate="yes" xml:space="preserve">
          <source>One pixel wide pen</source>
          <target state="translated">一个像素宽的笔</target>
        </trans-unit>
        <trans-unit id="a1ef8c08328d1edf403fc8a36daace2fa3784639" translate="yes" xml:space="preserve">
          <source>One possible use case is to add this handler to a transparent Item which is on top of the rest of the scene (by having a high &lt;a href=&quot;qml-qtquick-item#z-prop&quot;&gt;z&lt;/a&gt; value), so that when a point is freshly pressed, it will be delivered to that Item and its handlers first, providing the opportunity to take the passive grab as early as possible. Such an item (like a pane of glass over the whole UI) can be a convenient parent for other Items which visualize the kind of reactive feedback which must always be on top; and likewise it can be the parent for popups, popovers, dialogs and so on. If it will be used in that way, it can be helpful for your main.cpp to use &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty()&lt;/a&gt; to make the &quot;glass pane&quot; accessible by ID to the entire UI, so that other Items and PointHandlers can be reparented to it.</source>
          <target state="translated">一种可能的用例是将此处理程序添加到场景其余部分顶部的透明项目中（通过具有较高的&lt;a href=&quot;qml-qtquick-item#z-prop&quot;&gt;z&lt;/a&gt;值），以便当新按下一个点时，它将被传递到该项目及其首先，提供机会尽早进行被动抢夺。这样的项目（像整个UI上的玻璃窗格）可以作为其他项目的方便父项，这些其他项目可以可视化必须始终位于顶部的反应性反馈的种类；同样，它可以是弹出窗口，弹出窗口，对话框等的父级。如果以这种方式使用，则对main.cpp使用&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty（）&lt;/a&gt;可以使整个ID通过整个UI都可以访问&amp;ldquo;玻璃窗格&amp;rdquo; ，这对您很有帮助，以便可以重设其他Items和PointHandlers对它。</target>
        </trans-unit>
        <trans-unit id="b94b0da25fe601fd37aaafc21d9d291d763695f0" translate="yes" xml:space="preserve">
          <source>One reason why isWritable() might return false is if &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; operates on a read-only file.</source>
          <target state="translated">isWritable（）可能返回false的原因之一是，如果&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;对只读文件进行操作。</target>
        </trans-unit>
        <trans-unit id="92bef01f9dd59d9f5483ce6e7064d464b098e27d" translate="yes" xml:space="preserve">
          <source>One section tag represents one item in the table of contents. The sections can be nested to any degree, but from a user's perspective it should not be more than four or five levels. A section is defined by its title and reference. The reference, like all file references in a Qt help project, are relative to the help project file itself.</source>
          <target state="translated">一个节标签代表目录中的一个项目。节可以任意嵌套,但从用户的角度来看,不应超过四五层。一个节由它的标题和引用来定义。引用和Qt帮助项目中的所有文件引用一样,是相对于帮助项目文件本身而言的。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
