<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="7b77d44f3432275fd757fac7806ba29b718823be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;和QDeadlineTimer :: operator =（std :: chrono :: duration &amp;lt;Rep，Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d671139e64c397f7e5c74bc043cde9ea25820e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;＆QDeadlineTimer :: operator = {std :: chrono :: time_point &amp;lt;时钟，持续时间&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4abd13369d4814c1ec77df6ee3dd60a38dc37c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer::operator+(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer :: operator +（&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="641873449fa54d1d3b2917a23fc1137a2b7c1778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer::operator+(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer :: operator +（&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fe1095ad445d445d4534528bec86751106d4544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer::operator-(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; QDeadlineTimer :: operator-（&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a734c36792305c8bd9cddf72982fbab237baa41a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator+(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator+(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67c37f2b3eaed58854b9243704ee99128763a98e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator+(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator+(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d8da2b43d31396c79b65b65299d8413f5f944a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator-(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;operator-(&lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="283ded5ca45a8ef6f4257fe789df40aed266465f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::critical() const</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: critical（）常量</target>
        </trans-unit>
        <trans-unit id="21fb243d7cd04aa915edaabbf44e397ee69f3591" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::critical(&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger::CategoryFunction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: critical（&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger :: CategoryFunction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f87bfb4d9cb7c4aa105b653c48b74957757ff60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::critical(const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: critical（const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="13408b0f3e5783472f17d55585d573bfd788a81a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::debug() const</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: debug（）常量</target>
        </trans-unit>
        <trans-unit id="c63788d9a18573fe559a6c27bb47743810da7353" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::debug(&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger::CategoryFunction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: debug（&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger :: CategoryFunction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="405009e1e4b584170649cfb4038ff2843cae9e1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::debug(const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: debug（const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0726ae716124667221803386b80d682dd693bb6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::info() const</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: info（）常量</target>
        </trans-unit>
        <trans-unit id="0cfeed3d530e23d3dde7df05e1ab2bba2a41a940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::info(&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger::CategoryFunction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: info（&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger :: CategoryFunction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e302a364a76362bc0a4656ea1b152516c2d1e946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::info(const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: info（const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="009fb123b780f5660808905cc06eacdca46fb73a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::warning() const</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: warning（）常量</target>
        </trans-unit>
        <trans-unit id="5a700e3bc24b45e925169463ee2f382a28a155b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::warning(&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger::CategoryFunction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: warning（&lt;a href=&quot;qmessagelogger#CategoryFunction-typedef&quot;&gt;QMessageLogger :: CategoryFunction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4dd96d134e7aea2d089d89a43fa7ff36efd3039b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger::warning(const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QMessageLogger :: warning（const &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7fbeb3453797366e24595980724c686fe36bcf8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QModbusPdu::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QModbusPdu :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a4b36001095932cd44fa33e8cbe7dd3033b0706" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QOpenGLDebugMessage::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QOpenGLDebugMessage :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6445fd5c808d0b7a21d316b2b241e441cd4a3c18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QQmlError::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QQmlError :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f33556bb8c258fa165c1c88d093278cf0bf4c6e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QRegularExpression::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QRegularExpression :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e169243e3a168b227b2c0abed90a64985fc878e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QRegularExpressionMatch::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QRegularExpressionMatch :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6abd0da2bf1d6de698a2bc78def294fc1e379f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSharedPointer::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSharedPointer :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f22661ca801851fda204483b8616ccec5f722596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSourceLocation::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSourceLocation :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1160909e6da56ee3307860aaebcb84fb94b20c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSslDiffieHellmanParameters::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSslDiffieHellmanParameters :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="745e90b8e2ad6fa329cfb2ece1627f2cb861e308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSslEllipticCurve::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QSslEllipticCurve :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57a0c1b1b78f1838fc5ec1f295a9e24788c3df0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QUuid::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; QUuid :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="130f15fc8acea646165fa8f3a733fe25988fa2ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; Qt3DCore::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; Qt3DCore :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c5e62073206208be175a7bee2549dc75dceabb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; formats output so that it's easily readable. It automatically adds spaces between arguments, and adds quotes around &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; arguments.</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;格式化输出，使其易于阅读。它会自动在参数之间添加空格，并在&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;和&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;参数周围添加引号。</target>
        </trans-unit>
        <trans-unit id="2fbbb94394d213d46fd1658fb360dc3a8f577fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; is used whenever the developer needs to write out debugging or tracing information to a device, file, string or console.</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;&lt;/a&gt;当开发人员需要将调试或跟踪信息写到设备，文件，字符串或控制台时，将使用QDebug。</target>
        </trans-unit>
        <trans-unit id="ef2acd0fbb830e4bb8d07aa5d1b4a4d61f71c039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="190d1f438c55910332fd97668fece1eba23230f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::maybeQuote(char</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: maybeQuote（char</target>
        </trans-unit>
        <trans-unit id="4e843c2893f7ecff2de652e0aa00ad31dd1db515" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::maybeSpace()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: maybeSpace（）</target>
        </trans-unit>
        <trans-unit id="d9811f3fb40939ca214165cb229c3f9cd3012e4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::noquote()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: noquote（）</target>
        </trans-unit>
        <trans-unit id="20653d01ea26968fa6a57a7ebd99ccc5f9450562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::nospace()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: nospace（）</target>
        </trans-unit>
        <trans-unit id="b472fa6650b8f89ed59325f1a0dbc7458891b0b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4115e53ba1092f8fabe9a9e14742d11b4b16862" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1349c70bdda9d1860a05a6a586a27b82f1adddb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa2ee35c4e1fde8c4d6d7c43d4ad474d4079d405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afc8b2930b3c6aeeec5ddcdfd47666d7e5b9adeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0666b631356f4d32d3bfe154e4b9cfc4db6e7ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(bool</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（布尔</target>
        </trans-unit>
        <trans-unit id="b744849d387ad5f99e275ddf2b61be27d6928121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(char</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（字符</target>
        </trans-unit>
        <trans-unit id="ed80f4c8f91e8763ba0e9a45aacaca389d7056f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(char16_t</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（char16_t</target>
        </trans-unit>
        <trans-unit id="006598b5b0ec4cb13e72dfe483ce0a63480cc78c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(char32_t</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（char32_t</target>
        </trans-unit>
        <trans-unit id="c7e39e1e07e1cecb3b0b345d518c5e386e88b436" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6e50c9e6660e7dcef7bd23af120f1ffc7f41e840" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f985275c091aa175f95ac0a9ea5f3d702a6d621b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="17fab373a02f3407d75d759af262654a2b6787fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(const char *</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（const char *</target>
        </trans-unit>
        <trans-unit id="3b298e278d7547073b9efd08d8c33320d830bc9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(const void *</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（const void *</target>
        </trans-unit>
        <trans-unit id="f98f21c2923421dd780ef182a6916377f742563a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(double</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（双</target>
        </trans-unit>
        <trans-unit id="d19ee2c3e0d4699d5879d9f1ed8098cfceb76d81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(float</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（浮动</target>
        </trans-unit>
        <trans-unit id="08926eabcf2ee2b07ed2bf99dd211316214967ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(int</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（int</target>
        </trans-unit>
        <trans-unit id="2875c0a0dec5af570c3d6891d7ee7319b2cbefde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(long</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（长</target>
        </trans-unit>
        <trans-unit id="0ecd9ff072b051bac980221282cc3cfdab76b238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(short</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator &amp;lt;&amp;lt;（短</target>
        </trans-unit>
        <trans-unit id="1af7091a491aa6215e95869d9b883d3afd70e853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(unsignedint</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（unsignedint</target>
        </trans-unit>
        <trans-unit id="eefd836fc7e7bf98542ad3205635cef4300ccbc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(unsignedlong</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（unsignedlong</target>
        </trans-unit>
        <trans-unit id="11918be7c1f4e93d9a94bb6c349077b5080ae4f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator&amp;lt;&amp;lt;(unsignedshort</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: operator &amp;lt;&amp;lt;（unsignedshort</target>
        </trans-unit>
        <trans-unit id="2eed4f3f490394ea159699f8bd7d2646e50f4f58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::operator=(const &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆QDebug :: operator =（const &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d4c6069fdecc14c357b82d6ae474db6db2d622e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::quote()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: quote（）</target>
        </trans-unit>
        <trans-unit id="1db5ac267c8e7df68ea10da15e44d63a3278914c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::resetFormat()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: resetFormat（）</target>
        </trans-unit>
        <trans-unit id="3e354e8b86e7d0aab7c28395a58300dd6acd7ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::space()</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: space（）</target>
        </trans-unit>
        <trans-unit id="550d6e68c435a5c857aa437978092f6ccd875578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; &amp;amp;QDebug::verbosity(int</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;和QDebug :: verbosity（int</target>
        </trans-unit>
        <trans-unit id="a50e11e185f0558e9be37c25faed292513fa0900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; QDebug::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt; QDebug :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2048b1d75481f7487d5f024c197fe6eb825233a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdebugstatesaver&quot;&gt;QDebugStateSaver&lt;/a&gt; limits changes to the formatting to the current scope. &lt;a href=&quot;qdebug#resetFormat&quot;&gt;resetFormat&lt;/a&gt;() resets the options to the default ones.</source>
          <target state="translated">&lt;a href=&quot;qdebugstatesaver&quot;&gt;QDebugStateSaver&lt;/a&gt;将对格式的更改限制为当前范围。&lt;a href=&quot;qdebug#resetFormat&quot;&gt;resetFormat&lt;/a&gt;（）将选项重置为默认选项。</target>
        </trans-unit>
        <trans-unit id="2d0bba1bc2d7dfb94d426f5cf05267b04f6ec16d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt; *QDesignerFormEditorInterface::actionEditor() const</source>
          <target state="translated">&lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt; * QDesignerFormEditorInterface :: actionEditor（）const</target>
        </trans-unit>
        <trans-unit id="c97b384af4a6a144b167b94ca4c3846ac8824b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt; also provides the &lt;a href=&quot;qdesigneractioneditorinterface#core&quot;&gt;core&lt;/a&gt;() function that you can use to retrieve a pointer to</source>
          <target state="translated">&lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt;还提供&lt;a href=&quot;qdesigneractioneditorinterface#core&quot;&gt;core&lt;/a&gt;（）函数，可用于检索指向的指针。</target>
        </trans-unit>
        <trans-unit id="6421f14e137c76109c22c363f67538803091c43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; is necessary when implementing a custom multi-page container.</source>
          <target state="translated">&lt;a href=&quot;qdesignercontainerextension&quot;&gt;&lt;/a&gt;实现自定义多页容器时，需要QDesignerContainerExtension。</target>
        </trans-unit>
        <trans-unit id="e62e8bf1785af9014b9cd5e150cd102af47956a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; is necessary when implementing a custom multi-page container. It provides an extension that allows you to add and delete pages for a multi-page container plugin in</source>
          <target state="translated">&lt;a href=&quot;qdesignercontainerextension&quot;&gt;&lt;/a&gt;实现自定义多页容器时，需要QDesignerContainerExtension。它提供了一个扩展，允许您在其中添加和删除多页容器插件的页面。</target>
        </trans-unit>
        <trans-unit id="41cb788dc5f4d8989402a1d33843ae79ee4d0b95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; provide an interface for creating custom container extensions. A container extension consists of a collection of functions that</source>
          <target state="translated">&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;提供了用于创建自定义容器扩展的接口。容器扩展包含一组功能，这些功能</target>
        </trans-unit>
        <trans-unit id="01072f28ecfbc5b4fbb1731f5f006dbe36426d82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignercustomwidgetcollectioninterface&quot;&gt;QDesignerCustomWidgetCollectionInterface&lt;/a&gt; contains one single function returning a list of the collection's &lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; objects. For example, if you have several custom widgets &lt;code&gt;CustomWidgetOne&lt;/code&gt;, &lt;code&gt;CustomWidgetTwo&lt;/code&gt; and &lt;code&gt;CustomWidgetThree&lt;/code&gt;, the class definition may look like this:</source>
          <target state="translated">&lt;a href=&quot;qdesignercustomwidgetcollectioninterface&quot;&gt;QDesignerCustomWidgetCollectionInterface&lt;/a&gt;包含一个单个函数，该函数返回集合的&lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt;对象的列表。例如，如果您有几个自定义小部件 &lt;code&gt;CustomWidgetOne&lt;/code&gt; ， &lt;code&gt;CustomWidgetTwo&lt;/code&gt; 和 &lt;code&gt;CustomWidgetThree&lt;/code&gt; ，则类定义可能如下所示：</target>
        </trans-unit>
        <trans-unit id="412b5de000058700eb7e72cacd13b1c2344644b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; provides a custom widget with an interface. The class contains a set of functions that must be subclassed to return basic information about the widget, such as its class name and the name of its header file. Other functions must be implemented to initialize the plugin when it is loaded, and to construct instances of the custom widget for</source>
          <target state="translated">&lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt;提供带有界面的自定义窗口小部件。该类包含一组函数，必须对其进行子类化以返回有关小部件的基本信息，例如其类名和其头文件名。必须实现其他功能，以在加载插件时初始化插件，并为该插件构造自定义窗口小部件的实例。</target>
        </trans-unit>
        <trans-unit id="38110ccc2a5de37c7c1c590240b1b9a30edd80fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt; also provides functions that can set the action editor, property editor, object inspector and widget box. These are only useful if you want to provide your own custom components.</source>
          <target state="translated">&lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt;还提供可以设置动作编辑器，属性编辑器，对象检查器和小部件框的功能。仅当您要提供自己的自定义组件时，这些才有用。</target>
        </trans-unit>
        <trans-unit id="c3bbd66d4c173b3731b53d872e515bf48e0d66c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt; is not intended to be instantiated directly. A pointer to</source>
          <target state="translated">&lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt;不能直接实例化。指向的指针</target>
        </trans-unit>
        <trans-unit id="b3c52bc9f760a30fc7d6a703f29e7de976b42bb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformwindowcursorinterface&quot;&gt;QDesignerFormWindowCursorInterface&lt;/a&gt; is a convenience class that provides an interface to the associated form window's text cursor; it provides a collection of functions that enables you to query a given form window's selection and change the selection's focus according to defined modes (&lt;a href=&quot;qdesignerformwindowcursorinterface#MoveMode-enum&quot;&gt;MoveMode&lt;/a&gt;) and movements (&lt;a href=&quot;qdesignerformwindowcursorinterface#MoveOperation-enum&quot;&gt;MoveOperation&lt;/a&gt;). You can also use the interface to query the form's widgets and change their properties.</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowcursorinterface&quot;&gt;QDesignerFormWindowCursorInterface&lt;/a&gt;是一个便利类，它为关联的表单窗口的文本光标提供了一个接口；它提供了一系列功能，使您可以查询给定窗体窗口的选择并根据定义的模式（&lt;a href=&quot;qdesignerformwindowcursorinterface#MoveMode-enum&quot;&gt;MoveMode&lt;/a&gt;）和移动（&lt;a href=&quot;qdesignerformwindowcursorinterface#MoveOperation-enum&quot;&gt;MoveOperation&lt;/a&gt;）更改选择的焦点。您还可以使用该界面查询表单的小部件并更改其属性。</target>
        </trans-unit>
        <trans-unit id="39c52ab337d0f05c8b41567439f5174fe578e250" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; provides information about the associated form window as well as allowing its properties to be altered. The interface is not intended to be instantiated directly, but to provide access to</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt;提供有关关联的窗体窗口的信息，并允许更改其属性。该接口并非旨在直接实例化，而是用于提供对</target>
        </trans-unit>
        <trans-unit id="4bd3f4db88b5a04ed245937fa6fdcc0480e704fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt; *QDesignerFormEditorInterface::formWindowManager() const</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt; * QDesignerFormEditorInterface :: formWindowManager（）const</target>
        </trans-unit>
        <trans-unit id="00fc72c8787f97b005b43e853c0727137441931a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt; is not intended to be instantiated directly.</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt;不能直接实例化。</target>
        </trans-unit>
        <trans-unit id="23dd57028a557107d649825eadeee943bf6adbfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt; *QDesignerFormEditorInterface::objectInspector() const</source>
          <target state="translated">&lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt; * QDesignerFormEditorInterface :: objectInspector（）const</target>
        </trans-unit>
        <trans-unit id="356ac0b08bc91ca80ed83c1b663d49eabbd39e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt; *QDesignerFormEditorInterface::propertyEditor() const</source>
          <target state="translated">&lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt; * QDesignerFormEditorInterface :: propertyEditor（）const</target>
        </trans-unit>
        <trans-unit id="4e8d02ec9dbc19c9baba78a4c2cda30cb13ec6ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt; contains a collection of functions that is typically used to query the property editor for its current state, and several slots manipulating it's state. The interface also provide a signal, &lt;a href=&quot;qdesignerpropertyeditorinterface#propertyChanged&quot;&gt;propertyChanged&lt;/a&gt;(), which is emitted whenever a property changes in the property editor. The signal's arguments are the property that changed and its new value.</source>
          <target state="translated">&lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt;包含一组函数，这些函数通常用于查询属性编辑器的当前状态，以及几个用于操纵其状态的插槽。该接口还提供了一个信号&lt;a href=&quot;qdesignerpropertyeditorinterface#propertyChanged&quot;&gt;propertyChanged&lt;/a&gt;（），只要属性编辑器中的属性发生更改，该信号就会发出。信号的参数是已更改的属性及其新值。</target>
        </trans-unit>
        <trans-unit id="d91d94a1e06f4b7c9352d58846b7a0f9a6bd1ec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt; provides a collection of functions that are typically used to query a widget's properties, and to manipulate the properties' appearance in the property editor. For example:</source>
          <target state="translated">&lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;提供了一组函数，这些函数通常用于查询窗口小部件的属性以及在属性编辑器中操纵属性的外观。例如：</target>
        </trans-unit>
        <trans-unit id="14ad92134401b1c1c704a56ee6eece76b9f3db12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; is useful for custom widgets. It provides an extension that allows you to add custom menu entries to</source>
          <target state="translated">&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;对于自定义窗口小部件很有用。它提供了一个扩展，允许您将自定义菜单项添加到</target>
        </trans-unit>
        <trans-unit id="8998434ca4feddff4962f8e2dde542b5a30ec979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; provides an interface for creating custom task menu extensions. It is typically used to create task menu entries that are specific to a plugin in</source>
          <target state="translated">&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;提供了用于创建自定义任务菜单扩展的界面。它通常用于创建特定于插件的任务菜单项</target>
        </trans-unit>
        <trans-unit id="0416e093880d3b1d442cac61f4924e87201dfe29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt; *QDesignerFormEditorInterface::widgetBox() const</source>
          <target state="translated">&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt; * QDesignerFormEditorInterface :: widgetBox（）const</target>
        </trans-unit>
        <trans-unit id="65f25c80867199b072e97abe2a5efd96bad102e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt; also provides the &lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;() function that saves the contents of the widget box in the file specified by the widget box's file name property. If you have made changes to the widget box, for example by dropping a widget into the widget box, without calling the &lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;() function, the original content can be restored by a simple invocation of the &lt;a href=&quot;qdesignerwidgetboxinterface#load&quot;&gt;load&lt;/a&gt;() function:</source>
          <target state="translated">&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt;还提供了&lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;（）函数，可将小部件框的内容保存在由小部件框的文件名属性指定的文件中。如果您对窗口小部件框进行了更改（例如，通过将窗口小部件放入窗口小部件框而未调用&lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;（）函数），则可以通过简单地调用&lt;a href=&quot;qdesignerwidgetboxinterface#load&quot;&gt;load&lt;/a&gt;（）函数来恢复原始内容：</target>
        </trans-unit>
        <trans-unit id="30ff7506e20bf7399226352ff977debffdbdcfc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt; contains a collection of functions that is typically used to manipulate the contents of</source>
          <target state="translated">&lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt;包含一组函数，这些函数通常用于处理以下内容：</target>
        </trans-unit>
        <trans-unit id="a3663d52ed945b6c3830e7512acbdcb46464a2a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesktopservices&quot;&gt;QDesktopServices&lt;/a&gt; provides an interface to services offered by the user's desktop environment. In particular, the &lt;a href=&quot;qdesktopservices#openUrl&quot;&gt;openUrl()&lt;/a&gt; function is used to open resources using the appropriate application, which may have been specifically configured by the user.</source>
          <target state="translated">&lt;a href=&quot;qdesktopservices&quot;&gt;QDesktopServices&lt;/a&gt;提供了到用户桌面环境所提供服务的接口。特别是，&lt;a href=&quot;qdesktopservices#openUrl&quot;&gt;openUrl（）&lt;/a&gt;函数用于使用适当的应用程序打开资源，该应用程序可能已由用户专门配置。</target>
        </trans-unit>
        <trans-unit id="935d2efb35fcc503dee0b698e6dfa9c30abb8858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdesktopwidget&quot;&gt;QDesktopWidget&lt;/a&gt; also inherits the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; properties, &lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;() and &lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;(), which specify the size of the desktop. However, for desktops with multiple screens, the size of the desktop is the union of all the screen sizes, so &lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;() and &lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;() should</source>
          <target state="translated">&lt;a href=&quot;qdesktopwidget&quot;&gt;QDesktopWidget&lt;/a&gt;还继承了&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;属性，&lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;（）和&lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;（），它们指定了桌面的大小。但是，对于具有多个屏幕的桌面，桌面的大小是所有屏幕大小的并集，因此应该使用&lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;（）和&lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;（）</target>
        </trans-unit>
        <trans-unit id="6d31eff5e08714de9a7ba957f0bdb00c5f352ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; (10) provides a rounded range control (like a speedometer or potentiometer).</source>
          <target state="translated">&lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt;（10）提供了一个四舍五入的范围控制（如速度计或电位计）。</target>
        </trans-unit>
        <trans-unit id="3ce255f3c5aafdb964ed761406fb5d51e1883bde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; is used when the user needs to control a value within a program-definable range, and the range either wraps around (for example, with angles measured from 0 to 359 degrees) or the dialog layout needs a square widget.</source>
          <target state="translated">&lt;a href=&quot;qdial&quot;&gt;&lt;/a&gt;当用户需要将值控制在程序可定义的范围内，并且该范围可以环绕（例如，角度范围从0到359度）或对话框布局需要方形小部件时，可以使用QDial。</target>
        </trans-unit>
        <trans-unit id="e3c41545f68a635160915f312f610600e23d5914" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt;, &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;, and &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt;，&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;和&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af64b93b44543c4113e5e0eb1745f86fb8e7872a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; and &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; widgets are by default windows, even if a parent widget is specified in the constructor. This behavior is specified by the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;qdialog&quot;&gt;&lt;/a&gt;默认情况下，即使在构造函数中指定了父窗口小部件，QDialog和&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;小窗口也是默认窗口。此行为由&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;标志指定。</target>
        </trans-unit>
        <trans-unit id="bd88cff7e0e3ec1556676afeeb23fdbd123327e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdialog#accepted&quot;&gt;accepted&lt;/a&gt;() if</source>
          <target state="translated">&lt;a href=&quot;qdialog#accepted&quot;&gt;接受&lt;/a&gt;（），如果</target>
        </trans-unit>
        <trans-unit id="8a83426484eb0db61901412e42bbfaef2b960f17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;() ignores the value of this property and always pops up the dialog as modal.</source>
          <target state="translated">&lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;（）忽略此属性的值，并始终以模式方式弹出对话框。</target>
        </trans-unit>
        <trans-unit id="edeea0dbacd2babf2bc63d559b969a7dbc1b441f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;QDialogButtonBox::ButtonRole&lt;/a&gt; QDialogButtonBox::buttonRole(&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;QDialogBu​​ttonBox :: ButtonRole&lt;/a&gt; QDialogBu​​ttonBox :: buttonRole（&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="afa37ccea02107e72d1ae85c97c6f7003f8f28e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogButtonBox::StandardButton&lt;/a&gt; QDialogButtonBox::standardButton(&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogBu​​ttonBox :: StandardButton&lt;/a&gt; QDialogBu​​ttonBox :: standardButton（&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="59bbcc5cbd3c349fb36f1e598c69830468d9e06f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QAbstractFormBuilder::workingDirectory() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QAbstractFormBuilder :: workingDirectory（）常量</target>
        </trans-unit>
        <trans-unit id="711e8c33b279ac40154c21bbd454a2cd242e6659" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileDialog::directory() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileDialog :: directory（）常量</target>
        </trans-unit>
        <trans-unit id="d7a1daefc593a451193311c4034724d27fd5bae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileInfo::absoluteDir() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileInfo :: absoluteDir（）常量</target>
        </trans-unit>
        <trans-unit id="13646aa16fe4b1804ddbee07fc2a956e2b625ff3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileInfo::dir() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileInfo :: dir（）常量</target>
        </trans-unit>
        <trans-unit id="b30888bf5b635f219df39eaa4027c6158622eb87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileSystemModel::rootDirectory() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QFileSystemModel :: rootDirectory（）常量</target>
        </trans-unit>
        <trans-unit id="18d66865363ce692f9d34a062e4022cc1aa6c015" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QUiLoader::workingDirectory() const</source>
          <target state="translated">&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QUiLoader :: workingDirectory（）常量</target>
        </trans-unit>
        <trans-unit id="a4243dfbc0f4f8ce009eaed2f67a8ccf0fce11a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::Filters&lt;/a&gt; QDir::filter() const</source>
          <target state="translated">&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir :: Filters&lt;/a&gt; QDir :: filter（）const</target>
        </trans-unit>
        <trans-unit id="fc9db503fd385efd68736a7eb3cf699167497f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::Filters&lt;/a&gt; QDirModel::filter() const</source>
          <target state="translated">&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir :: Filters&lt;/a&gt; QDirModel :: filter（）const</target>
        </trans-unit>
        <trans-unit id="845a6b3ee153e4d717a86e9af9e45e7e33c526ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::Filters&lt;/a&gt; QFileDialog::filter() const</source>
          <target state="translated">&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir :: Filters&lt;/a&gt; QFileDialog :: filter（）const</target>
        </trans-unit>
        <trans-unit id="3fa462b9955e8e522e9f476cfb31610378c2b43d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::Filters&lt;/a&gt; QFileSystemModel::filter() const</source>
          <target state="translated">&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir :: Filters&lt;/a&gt; QFileSystemModel :: filter（）const</target>
        </trans-unit>
        <trans-unit id="2f9e6d6c040069a14a5edd54ddd9917d95f7d3af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt; &amp;amp;QDir::operator=(&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt;＆QDir :: operator =（&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="03dade224bd764e7b57dee12f3b9b83498a51320" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt; &amp;amp;QDir::operator=(const &lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt;＆QDir :: operator =（const &lt;a href=&quot;qdir#QDir&quot;&gt;QDir&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5ddba5036ea6602bbb9b09539a1a20e987419c94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#SortFlag-enum&quot;&gt;QDir::SortFlags&lt;/a&gt; QDir::sorting() const</source>
          <target state="translated">&lt;a href=&quot;qdir#SortFlag-enum&quot;&gt;QDir :: SortFlags&lt;/a&gt; QDir :: sorting（）const</target>
        </trans-unit>
        <trans-unit id="f93df12b332c436c6093b771d1d130635334e323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#SortFlag-enum&quot;&gt;QDir::SortFlags&lt;/a&gt; QDirModel::sorting() const</source>
          <target state="translated">&lt;a href=&quot;qdir#SortFlag-enum&quot;&gt;QDir :: SortFlags&lt;/a&gt; QDirModel :: sorting（）const</target>
        </trans-unit>
        <trans-unit id="c81aad01f426310bc6af60141eb9f257822a8030" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#current&quot;&gt;current&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#current&quot;&gt;current&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e3e11b89ca4e7f6e1fc0a9b0769a3dc58e6ef4e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#currentPath&quot;&gt;currentPath&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#currentPath&quot;&gt;currentPath&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d1e8cfbf05a9b2c772040d0d7be2424f42917b95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#home&quot;&gt;home&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#home&quot;&gt;home&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="cc7baee55235b988b2d8593a38db26b32b40ee27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#homePath&quot;&gt;homePath&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#homePath&quot;&gt;homePath&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="760faf71ae5c5a76e8e531769d6bf3e981e8f70b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#root&quot;&gt;root&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#root&quot;&gt;root&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f006c2836d6d15263f04b98c66d2bf00d254f141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#rootPath&quot;&gt;rootPath&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#rootPath&quot;&gt;rootPath&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c574a2be086dbb1b1746c2dd7bf7fe0bd27d16b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#temp&quot;&gt;temp&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#temp&quot;&gt;temp&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1e67fb4f832b77e2060e3614550bdb7821c084fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdir#tempPath&quot;&gt;tempPath&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdir#tempPath&quot;&gt;tempPath&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d2db35b7fbdf689c293d31a108122e8317ca41d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt; caches file information. This function updates the cache. The</source>
          <target state="translated">&lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt;缓存文件信息。此功能更新缓存。的</target>
        </trans-unit>
        <trans-unit id="012ccd414b874afd5dfb611ff879222d359e2523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt; can be accessed using the standard interface provided by &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, but it also provides some convenience functions that are specific to a directory model. The &lt;a href=&quot;qdirmodel#fileInfo&quot;&gt;fileInfo&lt;/a&gt;() and &lt;a href=&quot;qdirmodel#isDir&quot;&gt;isDir&lt;/a&gt;() functions provide information about the underlying files and directories related to items in the model.</source>
          <target state="translated">&lt;a href=&quot;qdirmodel&quot;&gt;&lt;/a&gt;可以使用&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;提供的标准接口来访问QDirModel，但是它还提供了一些特定于目录模型的便捷功能。该&lt;a href=&quot;qdirmodel#fileInfo&quot;&gt;的fileInfo&lt;/a&gt;（）和&lt;a href=&quot;qdirmodel#isDir&quot;&gt;ISDIR&lt;/a&gt;（）函数提供有关与模型中的项目的基本文件和目录信息。</target>
        </trans-unit>
        <trans-unit id="14b29c71d744093492c730a5f2ed42943b12afd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt; keeps a cache with file information. The cache needs to be updated with &lt;a href=&quot;qdirmodel#refresh&quot;&gt;refresh&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt;保留文件信息的缓存。缓存需要使用&lt;a href=&quot;qdirmodel#refresh&quot;&gt;refresh&lt;/a&gt;（）更新。</target>
        </trans-unit>
        <trans-unit id="68fc246000a282fff795cf4be68d18781db253d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; *QDistanceSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; * QDistanceSensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="ce080c3d9ef4761bf37ce57477844c325b63c943" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnsdomainnamerecord#QDnsDomainNameRecord&quot;&gt;QDnsDomainNameRecord&lt;/a&gt; &amp;amp;QDnsDomainNameRecord::operator=(const &lt;a href=&quot;qdnsdomainnamerecord#QDnsDomainNameRecord&quot;&gt;QDnsDomainNameRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdnsdomainnamerecord#QDnsDomainNameRecord&quot;&gt;QDnsDomainNameRecord&lt;/a&gt;＆QDnsDomainNameRecord :: operator =（const &lt;a href=&quot;qdnsdomainnamerecord#QDnsDomainNameRecord&quot;&gt;QDnsDomainNameRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f4c9158961f2a700b93fa780154db1abd34c63ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnshostaddressrecord#QDnsHostAddressRecord&quot;&gt;QDnsHostAddressRecord&lt;/a&gt; &amp;amp;QDnsHostAddressRecord::operator=(const &lt;a href=&quot;qdnshostaddressrecord#QDnsHostAddressRecord&quot;&gt;QDnsHostAddressRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdnshostaddressrecord#QDnsHostAddressRecord&quot;&gt;QDnsHostAddressRecord&lt;/a&gt;＆QDnsHostAddressRecord :: operator =（const &lt;a href=&quot;qdnshostaddressrecord#QDnsHostAddressRecord&quot;&gt;QDnsHostAddressRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1a27ae5c79398399116dffb6559741ab233cab8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnslookup&quot;&gt;QDnsLookup&lt;/a&gt; uses the mechanisms provided by the operating system to perform DNS lookups. To perform a lookup you need to specify a &lt;a href=&quot;qdnslookup#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qdnslookup#type-prop&quot;&gt;type&lt;/a&gt; then invoke the &lt;a href=&quot;qdnslookup#lookup&quot;&gt;lookup()&lt;/a&gt; slot. The &lt;a href=&quot;qdnslookup#finished&quot;&gt;finished()&lt;/a&gt; signal will be emitted upon completion.</source>
          <target state="translated">&lt;a href=&quot;qdnslookup&quot;&gt;QDnsLookup&lt;/a&gt;使用操作系统提供的机制来执行DNS查找。要执行查找，您需要指定&lt;a href=&quot;qdnslookup#name-prop&quot;&gt;名称&lt;/a&gt;和&lt;a href=&quot;qdnslookup#type-prop&quot;&gt;类型，&lt;/a&gt;然后调用&lt;a href=&quot;qdnslookup#lookup&quot;&gt;lookup（）&lt;/a&gt;插槽。的&lt;a href=&quot;qdnslookup#finished&quot;&gt;结束（）&lt;/a&gt;信号将完成时发出。</target>
        </trans-unit>
        <trans-unit id="f9159530118b416936b20a302825bca9edefefd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnsmailexchangerecord#QDnsMailExchangeRecord&quot;&gt;QDnsMailExchangeRecord&lt;/a&gt; &amp;amp;QDnsMailExchangeRecord::operator=(const &lt;a href=&quot;qdnsmailexchangerecord#QDnsMailExchangeRecord&quot;&gt;QDnsMailExchangeRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdnsmailexchangerecord#QDnsMailExchangeRecord&quot;&gt;QDnsMailExchangeRecord&lt;/a&gt;＆QDnsMailExchangeRecord :: operator =（const &lt;a href=&quot;qdnsmailexchangerecord#QDnsMailExchangeRecord&quot;&gt;QDnsMailExchangeRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4338979941d8c627356d923ad2fa94f58b6aa817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnsservicerecord#QDnsServiceRecord&quot;&gt;QDnsServiceRecord&lt;/a&gt; &amp;amp;QDnsServiceRecord::operator=(const &lt;a href=&quot;qdnsservicerecord#QDnsServiceRecord&quot;&gt;QDnsServiceRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdnsservicerecord#QDnsServiceRecord&quot;&gt;QDnsServiceRecord&lt;/a&gt;＆QDnsServiceRecord :: operator =（const &lt;a href=&quot;qdnsservicerecord#QDnsServiceRecord&quot;&gt;QDnsServiceRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a9d1be5d6358848c0cc5be9c7cd9f8eda7f7dcb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdnstextrecord#QDnsTextRecord&quot;&gt;QDnsTextRecord&lt;/a&gt; &amp;amp;QDnsTextRecord::operator=(const &lt;a href=&quot;qdnstextrecord#QDnsTextRecord&quot;&gt;QDnsTextRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdnstextrecord#QDnsTextRecord&quot;&gt;QDnsTextRecord&lt;/a&gt;＆QDnsTextRecord :: operator =（const &lt;a href=&quot;qdnstextrecord#QDnsTextRecord&quot;&gt;QDnsTextRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="aded2d13b3eefdaee2f60c88a967fe387c91bb24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; is used in a similar way to &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;. We create a dock widget as a child of the main window, and add widgets as children of the dock widget:</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;的使用方式与&lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;相似。我们创建一个停靠小部件作为主窗口的子级，并添加小部件作为停靠小部件的子级：</target>
        </trans-unit>
        <trans-unit id="304a1f51d0014e8d66888341bb0ffe72e418bf3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; provides a widget that can be used to create detachable tool palettes or helper windows. Dock widgets keep track of their own properties, and they can be moved, closed, and floated as external windows.</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;提供了一个小部件，可用于创建可分离的工具选项板或帮助程序窗口。Dock小部件可跟踪其自身的属性，并且可以作为外部窗口进行移动，关闭和浮动。</target>
        </trans-unit>
        <trans-unit id="1cadb3e5f572fead0e50c96d1e1ad7e4d31cab7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; provides the concept of dock widgets, also know as tool palettes or utility windows. Dock windows are secondary windows placed in the</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;提供了停靠小部件的概念，也称为工具选项板或实用程序窗口。扩展坞窗口是放置在</target>
        </trans-unit>
        <trans-unit id="fde8d969f3c8b2ea08ab2ad76a1a62c2ef26a3da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomDocument::createAttribute(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomDocument :: createAttribute（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="727d02d43140ff5de58bb67e808d5d98a012415a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomDocument::createAttributeNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomDocument :: createAttributeNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a090eddfc7c25efa3c48518da0f1acd4152428c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement::attributeNode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement :: attributeNode（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bbfea9be79b25b4b667f9e569a8113d8468f5966" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement::attributeNodeNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement :: attributeNodeNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5d8cab076979bf64c282ab0765ccb8d63a7a35f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement::removeAttributeNode(const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement :: removeAttributeNode（const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4361189a8b8ab227e6b0b545a784eec04b35cdea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement::setAttributeNode(const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement :: setAttributeNode（const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e8b25728ea984e6a1785ed260cade373b916d152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement::setAttributeNodeNS(const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomElement :: setAttributeNodeNS（const &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="49d2c827e5ac665fd451fda565806f20b3765e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomNode::toAttr() const</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; QDomNode :: toAttr（）常量</target>
        </trans-unit>
        <trans-unit id="5d2a1e2bce592a861ed940821b1a009461802713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; can return the &lt;a href=&quot;qdomattr#name&quot;&gt;name&lt;/a&gt;() and &lt;a href=&quot;qdomattr#value&quot;&gt;value&lt;/a&gt;() of an attribute. An attribute's value is set with &lt;a href=&quot;qdomattr#setValue&quot;&gt;setValue&lt;/a&gt;(). If &lt;a href=&quot;qdomattr#specified&quot;&gt;specified&lt;/a&gt;() returns true the value was set with &lt;a href=&quot;qdomattr#setValue&quot;&gt;setValue&lt;/a&gt;(). The node this attribute is attached to (if any) is returned by &lt;a href=&quot;qdomattr#ownerElement&quot;&gt;ownerElement&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;可以返回属性的&lt;a href=&quot;qdomattr#name&quot;&gt;名称&lt;/a&gt;（）和&lt;a href=&quot;qdomattr#value&quot;&gt;值&lt;/a&gt;（）。使用&lt;a href=&quot;qdomattr#setValue&quot;&gt;setValue&lt;/a&gt;（）设置属性的值。如果&lt;a href=&quot;qdomattr#specified&quot;&gt;指定&lt;/a&gt;（）返回true，则使用&lt;a href=&quot;qdomattr#setValue&quot;&gt;setValue&lt;/a&gt;（）设置值。此属性附加到的节点（如果有）由&lt;a href=&quot;qdomattr#ownerElement&quot;&gt;ownerElement&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="c09d67f7d8bd195ef7a2d2e63ed8aa9d7d88188d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;, &lt;a href=&quot;qdomcharacterdata&quot;&gt;QDomCharacterData&lt;/a&gt;, &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;, &lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;, &lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt;, &lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;, &lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt;, &lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt;, &lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt;, and &lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;，&lt;a href=&quot;qdomcharacterdata&quot;&gt;QDomCharacterData&lt;/a&gt;，&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;，&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;，&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt;，&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;，&lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt;，&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt;，&lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt;和&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fac3c9bc3bc57e13c8d4a2db8eccb1b1b070c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;：可能的孩子是</target>
        </trans-unit>
        <trans-unit id="0702f1b9ae4509dd47311090f4eca7767efd15ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomattr#QDomAttr&quot;&gt;QDomAttr&lt;/a&gt; &amp;amp;QDomAttr::operator=(const &lt;a href=&quot;qdomattr#QDomAttr&quot;&gt;QDomAttr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomattr#QDomAttr&quot;&gt;QDomAttr&lt;/a&gt;＆QDomAttr :: operator =（const &lt;a href=&quot;qdomattr#QDomAttr&quot;&gt;QDomAttr&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d45618834607e4848c51507f83889298511daa9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt; QDomDocument::createCDATASection(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt; QDomDocument :: createCDATASection（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="da22028f19f62f71ab84f3bdc7ceb2466312bafd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt; QDomNode::toCDATASection() const</source>
          <target state="translated">&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt; QDomNode :: toCDATASection（）常量</target>
        </trans-unit>
        <trans-unit id="d0978cd94f2c5e2da4f885e8f34d7c00fac3ae9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomcdatasection&quot;&gt;QDomCDATASection&lt;/a&gt;：没有子级</target>
        </trans-unit>
        <trans-unit id="d45c066f2079f982bd7df5d5fb5a1d8cdf3932b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcdatasection#QDomCDATASection&quot;&gt;QDomCDATASection&lt;/a&gt; &amp;amp;QDomCDATASection::operator=(const &lt;a href=&quot;qdomcdatasection#QDomCDATASection&quot;&gt;QDomCDATASection&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomcdatasection#QDomCDATASection&quot;&gt;QDomCDATASection&lt;/a&gt;和QDomCDATASection :: operator =（const &lt;a href=&quot;qdomcdatasection#QDomCDATASection&quot;&gt;QDomCDATASection&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b7e67b6ae373ba1d9386c2a08592305468c9f6d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcharacterdata&quot;&gt;QDomCharacterData&lt;/a&gt; QDomNode::toCharacterData() const</source>
          <target state="translated">&lt;a href=&quot;qdomcharacterdata&quot;&gt;QDomCharacterData&lt;/a&gt; QDomNode :: toCharacterData（）常量</target>
        </trans-unit>
        <trans-unit id="633cf2c8780370e1b67bda203ed0dfea6fcc5d6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcharacterdata#QDomCharacterData&quot;&gt;QDomCharacterData&lt;/a&gt; &amp;amp;QDomCharacterData::operator=(const &lt;a href=&quot;qdomcharacterdata#QDomCharacterData&quot;&gt;QDomCharacterData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomcharacterdata#QDomCharacterData&quot;&gt;QDomCharacterData&lt;/a&gt;＆QDomCharacterData :: operator =（const &lt;a href=&quot;qdomcharacterdata#QDomCharacterData&quot;&gt;QDomCharacterData&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b08e9b06e61e78b91e53e8441155fca005976a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt; QDomDocument::createComment(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt; QDomDocument :: createComment（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ef12629bc00dda289d103771721f1eb8cd4572d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt; QDomNode::toComment() const</source>
          <target state="translated">&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt; QDomNode :: toComment（）常量</target>
        </trans-unit>
        <trans-unit id="16b074eb5e637aa4278e10047268fbacbf324136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt; and &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt;和&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31c2f6730c1de96eade3dc877e159e44df01a637" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomcomment&quot;&gt;QDomComment&lt;/a&gt;：没有孩子</target>
        </trans-unit>
        <trans-unit id="6a8a2767ffa7ccedb5a7fe363cc8bec26d701ab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomcomment#QDomComment&quot;&gt;QDomComment&lt;/a&gt; &amp;amp;QDomComment::operator=(const &lt;a href=&quot;qdomcomment#QDomComment&quot;&gt;QDomComment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomcomment#QDomComment&quot;&gt;QDomComment&lt;/a&gt;＆QDomComment :: operator =（const &lt;a href=&quot;qdomcomment#QDomComment&quot;&gt;QDomComment&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="628f00b17c10f22c77e8892fa748f7edeb512b06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomImplementation::createDocument(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomImplementation :: createDocument（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="10416f22847f4a729e2949ac0df05d91c81c27ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomNode::ownerDocument() const</source>
          <target state="translated">&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomNode :: ownerDocument（）常数</target>
        </trans-unit>
        <trans-unit id="332c9ca5958277caed12ad0b7d7cdc2266d413fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomNode::toDocument() const</source>
          <target state="translated">&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; QDomNode :: toDocument（）常数</target>
        </trans-unit>
        <trans-unit id="c105cec60774643606c02aff2ddaddfb5ec0e9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;：可能的子项是</target>
        </trans-unit>
        <trans-unit id="65a978b08c913e2d5bf2333a86a38a6ac1b4fdfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocument#QDomDocument&quot;&gt;QDomDocument&lt;/a&gt; &amp;amp;QDomDocument::operator=(const &lt;a href=&quot;qdomdocument#QDomDocument&quot;&gt;QDomDocument&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomdocument#QDomDocument&quot;&gt;QDomDocument&lt;/a&gt;＆QDomDocument :: operator =（const &lt;a href=&quot;qdomdocument#QDomDocument&quot;&gt;QDomDocument&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7973db5c9bfa9f44c7fbedcb134e3d59f1573b5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; QDomDocument::createDocumentFragment()</source>
          <target state="translated">&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; QDomDocument :: createDocumentFragment（）</target>
        </trans-unit>
        <trans-unit id="2a8f2c3d5e45940eb72a9c5176e4feb7a9d4ca27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; QDomNode::toDocumentFragment() const</source>
          <target state="translated">&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; QDomNode :: toDocumentFragment（）常量</target>
        </trans-unit>
        <trans-unit id="6f3a949a26dcf580783a0fbfddf276bef764aeea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; is also useful if you want to group several nodes in a list and insert them all together as children of some node. In these cases &lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; can be used as a temporary container for this list of children.</source>
          <target state="translated">&lt;a href=&quot;qdomdocumentfragment&quot;&gt;&lt;/a&gt;如果要对列表中的多个节点进行分组并将它们作为某个节点的子节点一起插入，QDomDocumentFragment也很有用。在这些情况下，&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;可用作此子列表的临时容器。</target>
        </trans-unit>
        <trans-unit id="e7e9fef48fc05a012444f16dd972ea4912e597dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;：可能的孩子是</target>
        </trans-unit>
        <trans-unit id="feadc8872591e5548813e2b9790bc22f192f99ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumentfragment#QDomDocumentFragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; &amp;amp;QDomDocumentFragment::operator=(const &lt;a href=&quot;qdomdocumentfragment#QDomDocumentFragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomdocumentfragment#QDomDocumentFragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;＆QDomDocumentFragment :: operator =（const &lt;a href=&quot;qdomdocumentfragment#QDomDocumentFragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8ef675f775a751aaa9f784da8991d694a9399afe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomDocument::doctype() const</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomDocument :: doctype（）常量</target>
        </trans-unit>
        <trans-unit id="bb7dc61d59203604d6559af15dca57303ba1c859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomImplementation::createDocumentType(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomImplementation :: createDocumentType（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1eb5a2ec11226af96cb43171114d142d2ac3ccc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomNode::toDocumentType() const</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; QDomNode :: toDocumentType（）常量</target>
        </trans-unit>
        <trans-unit id="30a9f76af3621ccddc77197a252273d8911ceda1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt;：没有子级</target>
        </trans-unit>
        <trans-unit id="3eaedc13e9f02edd2c2cf1defd118386c9179294" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype#QDomDocumentType&quot;&gt;QDomDocumentType&lt;/a&gt; &amp;amp;QDomDocumentType::operator=(const &lt;a href=&quot;qdomdocumenttype#QDomDocumentType&quot;&gt;QDomDocumentType&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype#QDomDocumentType&quot;&gt;QDomDocumentType&lt;/a&gt;＆QDomDocumentType :: operator =（const &lt;a href=&quot;qdomdocumenttype#QDomDocumentType&quot;&gt;QDomDocumentType&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d8d55847efe8a46a172a0837917fe03f56f050bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype#entities&quot;&gt;QDomDocumentType::entities&lt;/a&gt;() returns a map of all entities described in the DTD.</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype#entities&quot;&gt;QDomDocumentType :: entities&lt;/a&gt;（）返回DTD中描述的所有实体的映射。</target>
        </trans-unit>
        <trans-unit id="c8a8544250adb763e3c8f0ca8bb96da6c9008280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomdocumenttype#notations&quot;&gt;QDomDocumentType::notations&lt;/a&gt;() returns a map of all notations described in the DTD.</source>
          <target state="translated">&lt;a href=&quot;qdomdocumenttype#notations&quot;&gt;QDomDocumentType :: notations&lt;/a&gt;（）返回DTD中描述的所有符号的映射。</target>
        </trans-unit>
        <trans-unit id="bb3a24a6eb20925704322eade2e68875fbdcfe79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; (at most one)</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;（至多一个）</target>
        </trans-unit>
        <trans-unit id="f5f3fd65e948a5bd4896e806d7cc475aec2cca64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomAttr::ownerElement() const</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomAttr :: ownerElement（）常量</target>
        </trans-unit>
        <trans-unit id="1519a4a94742770b5c1ec5db2db93f1f2b5065fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument::createElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument :: createElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f8fb8483f8592a5847f0dc61667735f79ac79d6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument::createElementNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument :: createElementNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="209fe4170b3cc31415f52d9ecdd688a63d6684f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument::documentElement() const</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument :: documentElement（）常量</target>
        </trans-unit>
        <trans-unit id="7072e094849baf21daef9152d87594345bfdba3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument::elementById(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomDocument :: elementById（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2a90fe6cb85a818f0fced829ee6b5487c938790f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode::firstChildElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode :: firstChildElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5a08a9df972c1216e9f0ea8cdf6e38d0856bc0e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode::lastChildElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode :: lastChildElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1cc190ec368438e7cf608bb6e8161a126a49fb01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode::nextSiblingElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode :: nextSiblingElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cc3e635168784aa575fcd19d124b190c92ce0f91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode::previousSiblingElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode :: previousSiblingElement（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="48e89ba39c1a26a185e6b82d2635018ddf77c9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode::toElement() const</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; QDomNode :: toElement（）常量</target>
        </trans-unit>
        <trans-unit id="4bb94371070d6204617767dd3b3421e223fa83d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; and &lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt; nodes can have namespaces which can be retrieved with &lt;a href=&quot;qdomnode#namespaceURI&quot;&gt;namespaceURI&lt;/a&gt;(). Their local name is retrieved with &lt;a href=&quot;qdomnode#localName&quot;&gt;localName&lt;/a&gt;(), and their prefix with &lt;a href=&quot;qdomnode#prefix&quot;&gt;prefix&lt;/a&gt;(). The prefix can be set with &lt;a href=&quot;qdomnode#setPrefix&quot;&gt;setPrefix&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;和&lt;a href=&quot;qdomattr&quot;&gt;QDomAttr&lt;/a&gt;节点可以具有可用命名空间URI（）检索的&lt;a href=&quot;qdomnode#namespaceURI&quot;&gt;命名空间&lt;/a&gt;。使用&lt;a href=&quot;qdomnode#localName&quot;&gt;localName&lt;/a&gt;（）检索其本地名称，使用&lt;a href=&quot;qdomnode#prefix&quot;&gt;前缀&lt;/a&gt;（）检索其前缀。可以使用&lt;a href=&quot;qdomnode#setPrefix&quot;&gt;setPrefix&lt;/a&gt;（）设置前缀。</target>
        </trans-unit>
        <trans-unit id="1ab2e4239155e7c78ba353ff4b4dbceafd216a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; nodes have attributes which can be retrieved with &lt;a href=&quot;qdomnode#attributes&quot;&gt;attributes&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;节点具有可以使用&lt;a href=&quot;qdomnode#attributes&quot;&gt;属性&lt;/a&gt;（）检索的属性。</target>
        </trans-unit>
        <trans-unit id="ac65e58da712cdd87aa9a3dd352e63a4feb60874" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;：可能的孩子是</target>
        </trans-unit>
        <trans-unit id="85422d488866a3cdf0c3c3fbb28375eda6b5580a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomelement#QDomElement&quot;&gt;QDomElement&lt;/a&gt; &amp;amp;QDomElement::operator=(const &lt;a href=&quot;qdomelement#QDomElement&quot;&gt;QDomElement&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomelement#QDomElement&quot;&gt;QDomElement&lt;/a&gt;＆QDomElement :: operator =（const &lt;a href=&quot;qdomelement#QDomElement&quot;&gt;QDomElement&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e822e2cd7f81d10d816753d9b135e2840866fa48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt; QDomNode::toEntity() const</source>
          <target state="translated">&lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt; QDomNode :: toEntity（）常量</target>
        </trans-unit>
        <trans-unit id="50126117da9ccdcabd6121c1de39735218b9138f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomentity&quot;&gt;QDomEntity&lt;/a&gt;：可能的子对象是</target>
        </trans-unit>
        <trans-unit id="61ded4c30516f67c74ab2af50e235c1fad25e145" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentity#QDomEntity&quot;&gt;QDomEntity&lt;/a&gt; &amp;amp;QDomEntity::operator=(const &lt;a href=&quot;qdomentity#QDomEntity&quot;&gt;QDomEntity&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomentity#QDomEntity&quot;&gt;QDomEntity&lt;/a&gt;＆QDomEntity :: operator =（const &lt;a href=&quot;qdomentity#QDomEntity&quot;&gt;QDomEntity&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="94c0870bcd374f1f8ecbee09e5c5806c72183861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt; QDomDocument::createEntityReference(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt; QDomDocument :: createEntityReference（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ae94b920e6f6de58679b4c346ff76c1d413e5457" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt; QDomNode::toEntityReference() const</source>
          <target state="translated">&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt; QDomNode :: toEntityReference（）常量</target>
        </trans-unit>
        <trans-unit id="164c3a8667384a3bd69d5b848d5a8923196962de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt;: Possible children are</source>
          <target state="translated">&lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt;：可能的孩子是</target>
        </trans-unit>
        <trans-unit id="08055a557f3a50e35d711ff03ead67702f3a5d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomentityreference#QDomEntityReference&quot;&gt;QDomEntityReference&lt;/a&gt; &amp;amp;QDomEntityReference::operator=(const &lt;a href=&quot;qdomentityreference#QDomEntityReference&quot;&gt;QDomEntityReference&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomentityreference#QDomEntityReference&quot;&gt;QDomEntityReference&lt;/a&gt;＆QDomEntityReference :: operator =（const &lt;a href=&quot;qdomentityreference#QDomEntityReference&quot;&gt;QDomEntityReference&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d7cf5ebd175e411a4f32791958a7fd234a464266" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomimplementation&quot;&gt;QDomImplementation&lt;/a&gt; QDomDocument::implementation() const</source>
          <target state="translated">&lt;a href=&quot;qdomimplementation&quot;&gt;QDomImplementation&lt;/a&gt; QDomDocument :: implementation（）常量</target>
        </trans-unit>
        <trans-unit id="fc4cdca228a5fd75e46a040aa4d438f8a227dc70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomimplementation#QDomImplementation&quot;&gt;QDomImplementation&lt;/a&gt; &amp;amp;QDomImplementation::operator=(const &lt;a href=&quot;qdomimplementation#QDomImplementation&quot;&gt;QDomImplementation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomimplementation#QDomImplementation&quot;&gt;QDomImplementation&lt;/a&gt;和QDomImplementation :: operator =（const &lt;a href=&quot;qdomimplementation#QDomImplementation&quot;&gt;QDomImplementation&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="177e9fb065cebae1829685e6b242e3d37683a38a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomimplementation#invalidDataPolicy&quot;&gt;invalidDataPolicy&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qdomimplementation#invalidDataPolicy&quot;&gt;invalidDataPolicy&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="05d3075ad82129ff86d50ce6c6da3ffdc335e0ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomimplementation#setInvalidDataPolicy&quot;&gt;setInvalidDataPolicy&lt;/a&gt;(QDomImplementation::InvalidDataPolicy policy)</source>
          <target state="translated">&lt;a href=&quot;qdomimplementation#setInvalidDataPolicy&quot;&gt;setInvalidDataPolicy&lt;/a&gt;（QDomImplementation :: InvalidDataPolicy策略）</target>
        </trans-unit>
        <trans-unit id="b381e3153942b9696e64df8ab4154d3578f87d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomDocumentType::entities() const</source>
          <target state="translated">&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomDocumentType :: entities（）const</target>
        </trans-unit>
        <trans-unit id="99fc88e0b228e3a6e7036ea8a1e8d7cf660d4fa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomDocumentType::notations() const</source>
          <target state="translated">&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomDocumentType :: notations（）const</target>
        </trans-unit>
        <trans-unit id="bfcea2ab818ae0ddf4157e1641603a3aa47db73e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomElement::attributes() const</source>
          <target state="translated">&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomElement :: attributes（）常量</target>
        </trans-unit>
        <trans-unit id="d204b58c22d37b34ada2f944c883ad740cbfa699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomNode::attributes() const</source>
          <target state="translated">&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; QDomNode :: attributes（）常量</target>
        </trans-unit>
        <trans-unit id="5342ed3dba4ead513f214e8f930ab06fea4bfafb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnamednodemap#QDomNamedNodeMap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; &amp;amp;QDomNamedNodeMap::operator=(const &lt;a href=&quot;qdomnamednodemap#QDomNamedNodeMap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnamednodemap#QDomNamedNodeMap&quot;&gt;QDomNamedNodeMap&lt;/a&gt;＆QDomNamedNodeMap :: operator =（const &lt;a href=&quot;qdomnamednodemap#QDomNamedNodeMap&quot;&gt;QDomNamedNodeMap&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7728966eb425cae6bee94d48408936f0d8581fef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::item(int</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: item（int</target>
        </trans-unit>
        <trans-unit id="e571516e064cac610b3f89ff3118f9b8e4a416f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::namedItem(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: namedItem（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7482af1586a7483ad8a3b402f7c47f32e949d8c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::namedItemNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: namedItemNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="105a44dc4a72571aebf510caeb607becd37d71fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::removeNamedItem(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: removeNamedItem（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5a04443b2f4833ce230c28224e8fed7bbafe3e02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::removeNamedItemNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: removeNamedItemNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ad5570196f8427ea7b57147b441f55cc113bf8a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::setNamedItem(const &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: setNamedItem（const &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1f87356adee128ddb74154cfbcc70fe5b3a969df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap::setNamedItemNS(const &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNamedNodeMap :: setNamedItemNS（const &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0f0dd5c801c49160fcde8ab54eca95abf4d4cff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNodeList::at(int</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNodeList :: at（int</target>
        </trans-unit>
        <trans-unit id="d78b9352b99d368d5938f16eae399995d8e127dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNodeList::item(int</source>
          <target state="translated">&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; QDomNodeList :: item（int</target>
        </trans-unit>
        <trans-unit id="990890b02d311fcc231ce7fb0d4e70fe81f84d4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomAttr::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomAttr :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="5fd675fd0e84ff49087735ff9084f36db85e1b44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomCDATASection::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomCDATASection :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="f6a158a86130b28ac2e18423b07be84eff7307d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomCharacterData::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomCharacterData :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="88edd979e7bc643dc16db7632d32efd33e28ab4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomComment::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomComment :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="981d1ca4e0c5e4769823d2b1ef6a634c15b388d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomDocument::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomDocument :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="8d96b2d65dbede07982bc903d442328ade869bf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomDocumentFragment::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomDocumentFragment :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="74a31fface8dc5a8100c673e45cec9894dfe8e65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomDocumentType::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomDocumentType :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="b335512fb82e79c37811dfc2d8dcc7659001d98f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomElement::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomElement :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="18c6cddcdc718850fc6b8b0789790dfbff40b7ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomEntity::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomEntity :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="e1005556fae9237d3a3317b02e5337ee4bde0737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomEntityReference::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomEntityReference :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="5b7fdf241e231981fc959b27c18e5b3442c80481" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomNode::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomNode :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="dec6ac49328f99c6e0845da1cc8aba7c2cae7231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomNotation::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomNotation :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="56ccbdef4bb7dba328e114aa47fec5cf4e297de7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomProcessingInstruction::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomProcessingInstruction :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="9744397e97cc859b0fcaf76f7571311d2054d13e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode::NodeType&lt;/a&gt; QDomText::nodeType() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;QDomNode :: NodeType&lt;/a&gt; QDomText :: nodeType（）常量</target>
        </trans-unit>
        <trans-unit id="04caa6d48c859d83fc1867ec0ce98bf81ed70dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;QDomNode::operator=(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆QDomNode :: operator =（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e11205ab55039f438d52c987e2959e9bf7f64497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomDocument::importNode(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomDocument :: importNode（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="09827192cf44c1390fd937303e47f2aa78e8fd86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::appendChild(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: appendChild（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8ecc4157b5ec542fbc9ea92d861cd5cde60863a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::cloneNode(bool</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: cloneNode（布尔</target>
        </trans-unit>
        <trans-unit id="ae9e4b46bf96600a2bbd4a95f5998dd31cea81f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::firstChild() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: firstChild（）常量</target>
        </trans-unit>
        <trans-unit id="e784adb763d13ecbbdd08957ba566109475f6a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::insertAfter(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: insertAfter（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4d55e660111e3cc2c094386a6f2899382424454d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::insertBefore(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: insertBefore（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="555ac126e6bc2f56d63e5b505140d3e4ef06e2c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::lastChild() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: lastChild（）常量</target>
        </trans-unit>
        <trans-unit id="b482c06e716091dae1fe3691d68a20f53400a4f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::namedItem(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: namedItem（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e2268ed636b11a206c83d3129a188eeb2f72a8dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::nextSibling() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: nextSibling（）常量</target>
        </trans-unit>
        <trans-unit id="8ac2e5d620c640fbd1b788fe64b904fcbd95dea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::parentNode() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: parentNode（）常量</target>
        </trans-unit>
        <trans-unit id="db5528b23d7432b8d67f5b0402bb543ddc00e183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::previousSibling() const</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: previousSibling（）常量</target>
        </trans-unit>
        <trans-unit id="6efacf95a0d81617b45d17af754cac62bebf8643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::removeChild(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: removeChild（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="40267a06653b5bfe4d55663cf6d93da8bb9e2a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode::replaceChild(const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt; QDomNode :: replaceChild（const &lt;a href=&quot;qdomnode#QDomNode&quot;&gt;QDomNode&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fcc28f40e287514796eeb1d3d37218e7b69b0be7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnode#attributes&quot;&gt;QDomNode::attributes&lt;/a&gt;() returns a map of all attributes of an element.</source>
          <target state="translated">&lt;a href=&quot;qdomnode#attributes&quot;&gt;QDomNode :: attributes&lt;/a&gt;（）返回元素的所有属性的映射。</target>
        </trans-unit>
        <trans-unit id="866baac9448a3d07731ef4f2a92d31af59a190b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomDocument::elementsByTagName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomDocument :: elementsByTagName（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2c1d3369166e4f153f47091793903029d8071826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomDocument::elementsByTagNameNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomDocument :: elementsByTagNameNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="882c481fb6a704dc5091c87fa494a02e2cabd697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomElement::elementsByTagName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomElement :: elementsByTagName（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9cc049484725fcf476cd9ca025fbbec6ea74bb35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomElement::elementsByTagNameNS(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomElement :: elementsByTagNameNS（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="23dcce8470bfb79994f5b9871ef586d124379e06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomNode::childNodes() const</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; QDomNode :: childNodes（）常量</target>
        </trans-unit>
        <trans-unit id="5bc7fe376d829fb18225a70a21ddf7ff7ddf7ecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnodelist#QDomNodeList&quot;&gt;QDomNodeList&lt;/a&gt; &amp;amp;QDomNodeList::operator=(const &lt;a href=&quot;qdomnodelist#QDomNodeList&quot;&gt;QDomNodeList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist#QDomNodeList&quot;&gt;QDomNodeList&lt;/a&gt;＆QDomNodeList :: operator =（const &lt;a href=&quot;qdomnodelist#QDomNodeList&quot;&gt;QDomNodeList&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2f74b904fd5066f03c8ab42cd7d7e29d5834df6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt; QDomNode::toNotation() const</source>
          <target state="translated">&lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt; QDomNode :: toNotation（）常量</target>
        </trans-unit>
        <trans-unit id="d12d2154720ba9727715238aa5385b7fe37c7437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomnotation&quot;&gt;QDomNotation&lt;/a&gt;：没有孩子</target>
        </trans-unit>
        <trans-unit id="0fe0624d1cf2d9158f87e60b6b2a4088bcafd3ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomnotation#QDomNotation&quot;&gt;QDomNotation&lt;/a&gt; &amp;amp;QDomNotation::operator=(const &lt;a href=&quot;qdomnotation#QDomNotation&quot;&gt;QDomNotation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomnotation#QDomNotation&quot;&gt;QDomNotation&lt;/a&gt;＆QDomNotation :: operator =（const &lt;a href=&quot;qdomnotation#QDomNotation&quot;&gt;QDomNotation&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6c5804b23bf02f07b185bc245fdc80b9838fdbec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; QDomDocument::createProcessingInstruction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; QDomDocument :: createProcessingInstruction（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d1233305b0cdb64614cd6dd15d1138dee7c6998e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; QDomNode::toProcessingInstruction() const</source>
          <target state="translated">&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; QDomNode :: toProcessingInstruction（）常量</target>
        </trans-unit>
        <trans-unit id="35763172d05e7ad4f44a4b6d7492fba62f2a8986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomprocessinginstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;：没有孩子</target>
        </trans-unit>
        <trans-unit id="2b5305c8adccfd104b8edf78320adb4f2fa24f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomprocessinginstruction#QDomProcessingInstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; &amp;amp;QDomProcessingInstruction::operator=(const &lt;a href=&quot;qdomprocessinginstruction#QDomProcessingInstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomprocessinginstruction#QDomProcessingInstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;＆QDomProcessingInstruction :: operator =（const &lt;a href=&quot;qdomprocessinginstruction#QDomProcessingInstruction&quot;&gt;QDomProcessingInstruction&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9a95b3ccbbc5f449a9922b3f94a07442d8fc6968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; QDomDocument::createTextNode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; QDomDocument :: createTextNode（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="51dd31b75642feb273bd212c5316400ab0d80dd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; QDomNode::toText() const</source>
          <target state="translated">&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; QDomNode :: toText（）常量</target>
        </trans-unit>
        <trans-unit id="78f9197ce1ccf24a4415f813a3aabf5d216bf12d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;: No children</source>
          <target state="translated">&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;：没有孩子</target>
        </trans-unit>
        <trans-unit id="c1cd39f308eb74c17d2700169fea217c6b9dc542" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt; &amp;amp;QDomText::operator=(const &lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt;＆QDomText :: operator =（const &lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8985583b635bb0fbafbc03d597fbe8f31eba769a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt; QDomText::splitText(int</source>
          <target state="translated">&lt;a href=&quot;qdomtext#QDomText&quot;&gt;QDomText&lt;/a&gt; QDomText :: splitText（int</target>
        </trans-unit>
        <trans-unit id="a40963699a6cdeb0de2760a31fa0561427f783c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt; allows the user to choose a value by clicking the up and down buttons or by pressing Up or Down on the keyboard to increase or decrease the value currently displayed. The user can also type the value in manually. The spin box supports double values but can be extended to use different strings with &lt;a href=&quot;qdoublespinbox#validate&quot;&gt;validate&lt;/a&gt;(), &lt;a href=&quot;qdoublespinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;() and &lt;a href=&quot;qdoublespinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt;允许用户通过单击向上和向下按钮或通过按键盘上的Up或Down来增加或减少当前显示的值来选择一个值。用户也可以手动输入值。旋转框支持双&lt;a href=&quot;qdoublespinbox#textFromValue&quot;&gt;精度&lt;/a&gt;值，但可以扩展为使用带有&lt;a href=&quot;qdoublespinbox#validate&quot;&gt;validate&lt;/a&gt;（），textFromValue（）和&lt;a href=&quot;qdoublespinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;（）的不同字符串。</target>
        </trans-unit>
        <trans-unit id="d5918948efb28c7e9bc9dde5e34fa49f76938e36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt; provides an upper bound, a lower bound, and a limit on the number of digits after the decimal point. It does not provide a &lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt;提供了一个上限，一个下限以及小数点后的位数的限制。它不提供&lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="af328c167270fdbfa7e58e1fd782a50c50fcdd66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt; uses its &lt;a href=&quot;qvalidator#locale&quot;&gt;locale&lt;/a&gt;() to interpret the number. For example, in the German locale, &quot;1,234&quot; will be accepted as the fractional number 1.234. In Arabic locales, &lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt; will accept Arabic digits.</source>
          <target state="translated">&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt;使用其&lt;a href=&quot;qvalidator#locale&quot;&gt;语言环境&lt;/a&gt;（）来解释数字。例如，在德语语言环境中，&amp;ldquo; 1,234&amp;rdquo;将被接受为小数1.234。在阿拉伯语语言环境中，&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt;将接受阿拉伯数字。</target>
        </trans-unit>
        <trans-unit id="5b0e7e53083213ddea800e5983f5e05c14888cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt;, &lt;a href=&quot;qintvalidator&quot;&gt;QIntValidator&lt;/a&gt;, &lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt;, and &lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdoublevalidator&quot;&gt;QDoubleValidator&lt;/a&gt;，&lt;a href=&quot;qintvalidator&quot;&gt;QIntValidator&lt;/a&gt;，&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt;和&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83aef58949966e58ad81fd62058e3a5d1560019c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; only deals with the drag and drop operation itself. It is up to the developer to decide when a drag operation begins, and how a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object should be constructed and used. For a given widget, it is often necessary to reimplement &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; to determine whether the user has pressed a mouse button, and reimplement &lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;mouseMoveEvent()&lt;/a&gt; to check whether a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; is required.</source>
          <target state="translated">&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;仅处理拖放操作本身。由开发人员决定何时开始拖动操作，以及如何构造和使用&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;对象。对于给定的窗口小部件，通常需要重新实现&lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent（）&lt;/a&gt;以确定用户是否按下了鼠标按钮，然后重新实现&lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;mouseMoveEvent（）&lt;/a&gt;来检查是否需要&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7d36da424c20dd7fd933c7076a643f3251d27c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdragenterevent&quot;&gt;QDragEnterEvent&lt;/a&gt; inherits most of its functionality from &lt;a href=&quot;qdragmoveevent&quot;&gt;QDragMoveEvent&lt;/a&gt;, which in turn inherits most of its functionality from &lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdragenterevent&quot;&gt;QDragEnterEvent&lt;/a&gt;继承了QDragMoveEvent的大部分功能，&lt;a href=&quot;qdragmoveevent&quot;&gt;QDragMoveEvent&lt;/a&gt;继承了&lt;a href=&quot;qdropevent&quot;&gt;QDropEvent的&lt;/a&gt;大多数功能。</target>
        </trans-unit>
        <trans-unit id="c5aced21a3b6b29f8a8e80054e1d038c6d1444d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt; does not read datagrams from &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;, this is expected to be done by the application, for example, in a slot attached to the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;QUdpSocket::readyRead&lt;/a&gt;() signal. Then, these datagrams must be processed by &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;不会从&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;读取数据报，这有望由应用程序完成，例如，在附加到&lt;a href=&quot;qiodevice#readyRead&quot;&gt;QUdpSocket :: readyRead&lt;/a&gt;（）信号的插槽中完成。然后，这些数据报必须由&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;处理。</target>
        </trans-unit>
        <trans-unit id="1ec18275cdc30a0a0b371148272d99536ce60d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt; emits this signal when it negotiates a PSK ciphersuite, and therefore a PSK authentication is then required.</source>
          <target state="translated">&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;在协商PSK密码套件时会发出此信号，因此需要PSK身份验证。</target>
        </trans-unit>
        <trans-unit id="29c4c7fb2767176cdedda5d6c03f21410b64a78d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt; is designed to work with &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;. Since &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; can receive datagrams coming from different peers, an application must implement demultiplexing, forwarding datagrams coming from different peers to their corresponding instances of &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;. An association between a network peer and its &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt; object can be established using the peer's address and port number. Before starting a handshake, the application must set the peer's address and port number using &lt;a href=&quot;qdtls#setPeer&quot;&gt;setPeer&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;旨在与&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket一起使用&lt;/a&gt;。由于&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;可以接收来自不同对等方的数据报，因此应用程序必须实现多路分解，将来自不同对等方的数据报转发到其相应的&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;实例。可以使用对等方的地址和端口号在网络对等方与其&lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;对象之间建立关联。在开始握手之前，应用程序必须使用&lt;a href=&quot;qdtls#setPeer&quot;&gt;setPeer&lt;/a&gt;（）设置对等方的地址和端口号。</target>
        </trans-unit>
        <trans-unit id="764813381217493410d754bf4f5e92b35bed925f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls#GeneratorParameters-typedef&quot;&gt;QDtls::GeneratorParameters&lt;/a&gt; QDtls::cookieGeneratorParameters() const</source>
          <target state="translated">&lt;a href=&quot;qdtls#GeneratorParameters-typedef&quot;&gt;QDtls :: GeneratorParameters&lt;/a&gt; QDtls :: cookieGeneratorParameters（）const</target>
        </trans-unit>
        <trans-unit id="d7abbcfd9f2cd49e40e8381f957621949cce5c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls#HandshakeState-enum&quot;&gt;QDtls::HandshakeState&lt;/a&gt; QDtls::handshakeState() const</source>
          <target state="translated">&lt;a href=&quot;qdtls#HandshakeState-enum&quot;&gt;QDtls :: HandshakeState&lt;/a&gt; QDtls :: handshakeState（）常量</target>
        </trans-unit>
        <trans-unit id="8fc3572ea27b28a421def88886ccc5d94bc12f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls#QDtlsError-enum&quot;&gt;QDtlsError&lt;/a&gt; QDtls::dtlsError() const</source>
          <target state="translated">&lt;a href=&quot;qdtls#QDtlsError-enum&quot;&gt;QDtlsError&lt;/a&gt; QDtls :: dtlsError（）常量</target>
        </trans-unit>
        <trans-unit id="8f1d0dbb3a90a2059f15689525422e71da8a6d72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls#QDtlsError-enum&quot;&gt;QDtlsError&lt;/a&gt; QDtlsClientVerifier::dtlsError() const</source>
          <target state="translated">&lt;a href=&quot;qdtls#QDtlsError-enum&quot;&gt;QDtlsError&lt;/a&gt; QDtlsClientVerifier :: dtlsError（）常量</target>
        </trans-unit>
        <trans-unit id="7a0124b7046a222dacb22eab06d8572d10e4c76c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtls#setDtlsConfiguration&quot;&gt;setDtlsConfiguration&lt;/a&gt;() can set the preferred version before the handshake starts.</source>
          <target state="translated">&lt;a href=&quot;qdtls#setDtlsConfiguration&quot;&gt;setDtlsConfiguration&lt;/a&gt;（）可以在握手开始之前设置首选版本。</target>
        </trans-unit>
        <trans-unit id="7698f15634526df61f8d9d43a93b7cfe1c389ed6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt; does not impose any restrictions on how the application uses &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;. For example, it is possible to have a server with a single &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; in state &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::BoundState&lt;/a&gt;, handling multiple DTLS clients simultaneously:</source>
          <target state="translated">&lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;对应用程序使用&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket的方式&lt;/a&gt;没有施加任何限制。例如，可能有一个服务器，它的&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QQpSocket :: BoundState&lt;/a&gt;状态为单个&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;，同时处理多个DTLS客户端：</target>
        </trans-unit>
        <trans-unit id="dfcad78c072e84869493e50a109fb8f406c34411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt; is designed to work in pair with &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;, as shown in the following code-excerpt:</source>
          <target state="translated">&lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;旨在与&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;配对使用，如以下代码摘录所示：</target>
        </trans-unit>
        <trans-unit id="0c3e04ad93477d499a02c80f9c69a66608aa3db8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qdtlsclientverifier-generatorparameters&quot;&gt;QDtlsClientVerifier::GeneratorParameters&lt;/a&gt; QDtlsClientVerifier::cookieGeneratorParameters() const</source>
          <target state="translated">&lt;a href=&quot;qdtlsclientverifier-generatorparameters&quot;&gt;QDtlsClientVerifier :: GeneratorParameters&lt;/a&gt; QDtlsClientVerifier :: cookieGeneratorParameters（）常量</target>
        </trans-unit>
        <trans-unit id="bb6207fcaeec750d9262d022c37624f1b6716e75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeasingcurve&quot;&gt;QEasingCurve&lt;/a&gt; QVariant::toEasingCurve() const</source>
          <target state="translated">&lt;a href=&quot;qeasingcurve&quot;&gt;QEasingCurve&lt;/a&gt; QVariant :: toEasingCurve（）const</target>
        </trans-unit>
        <trans-unit id="75378503c6846ae08bb8a890bcb9e255b726cf16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeasingcurve#EasingFunction-typedef&quot;&gt;QEasingCurve::EasingFunction&lt;/a&gt; QEasingCurve::customType() const</source>
          <target state="translated">&lt;a href=&quot;qeasingcurve#EasingFunction-typedef&quot;&gt;QEasingCurve :: EasingFunction&lt;/a&gt; QEasingCurve :: customType（）const</target>
        </trans-unit>
        <trans-unit id="78b1d67d08fa16e8cd79a0d23cea9eb0c814c58c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt; &amp;amp;QEasingCurve::operator=(&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt;＆QEasingCurve :: operator =（&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="bfebfc95d46fdb5e203d128271f9c1bec37fe3c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt; &amp;amp;QEasingCurve::operator=(const &lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt;和QEasingCurve :: operator =（const &lt;a href=&quot;qeasingcurve#QEasingCurve&quot;&gt;QEasingCurve&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9927eb8e23adbc6be1fec22da873a215dd55b5dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeasingcurve#Type-enum&quot;&gt;QEasingCurve::Type&lt;/a&gt; QEasingCurve::type() const</source>
          <target state="translated">&lt;a href=&quot;qeasingcurve#Type-enum&quot;&gt;QEasingCurve :: Type&lt;/a&gt; QEasingCurve :: type（）const</target>
        </trans-unit>
        <trans-unit id="27a8b49eb69a8146828235b5d448752fa6a6c166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; will always use the same clock type in a particular machine, so this value will not change during the lifetime of a program. It is provided so that &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; can be used with other non-Qt implementations, to guarantee that the same reference clock is being used.</source>
          <target state="translated">&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;在特定计算机上将始终使用相同的时钟类型，因此该值在程序生存期内不会更改。提供它是为了使&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;可以与其他非Qt实现一起使用，以确保使用相同的参考时钟。</target>
        </trans-unit>
        <trans-unit id="c21f2163496898690260804897d0ac841eb7f059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; will use the platform's monotonic reference clock in all platforms that support it (see &lt;a href=&quot;qelapsedtimer#isMonotonic&quot;&gt;QElapsedTimer::isMonotonic&lt;/a&gt;()). This has the added benefit that &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; is immune to time adjustments, such as the user correcting the time. Also unlike &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt;, &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; is immune to changes in the timezone settings, such as daylight-saving periods.</source>
          <target state="translated">&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;将在支持该平台的所有平台中使用该平台的单调参考时钟（请参阅&lt;a href=&quot;qelapsedtimer#isMonotonic&quot;&gt;QElapsedTimer :: isMonotonic&lt;/a&gt;（））。这样做还有一个好处，就是&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;不受时间调整的影响，例如用户可以校正时间。同样与&lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt;不同，&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;不受时区设置（例如夏令时）的影响。</target>
        </trans-unit>
        <trans-unit id="c98f250c32315644c92bf52c4cb3bbb99ceb82a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qenablesharedfromthis&quot;&gt;QEnableSharedFromThis&lt;/a&gt; defines two member functions called &lt;a href=&quot;qenablesharedfromthis#sharedFromThis&quot;&gt;sharedFromThis&lt;/a&gt;() that return a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; and &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;const T&amp;gt;, depending on constness, to &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;qenablesharedfromthis&quot;&gt;QEnableSharedFromThis&lt;/a&gt;定义了两个称为&lt;a href=&quot;qenablesharedfromthis#sharedFromThis&quot;&gt;sharedFromThis&lt;/a&gt;（）的成员函数，这些函数根据constness返回一个&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;和&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;const T&amp;gt; &lt;code&gt;this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb8510ee04f04809255ec2d58ba29e8b25dc63d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#QEvent&quot;&gt;QEvent&lt;/a&gt; *WrappedEvent::event() const</source>
          <target state="translated">&lt;a href=&quot;qevent#QEvent&quot;&gt;QEvent&lt;/a&gt; * WrappedEvent :: event（）const</target>
        </trans-unit>
        <trans-unit id="97654ab38adda7fcdabf994b0739efffa3ac88f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;LanguageChange&lt;/a&gt; events are posted when a new translation is installed using the &lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;QCoreApplication::installTranslator&lt;/a&gt;() function. Additionally, other application components can also force widgets to update themselves by posting LanguageChange events to them.</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;QCoreApplication :: installTranslator&lt;/a&gt;（）函数安装新的翻译时，将发布LanguageChange事件。此外，其他应用程序组件也可以通过向其发布LanguageChange事件来强制窗口小部件进行自身更新。</target>
        </trans-unit>
        <trans-unit id="4df4595c8a2b02a4195bf942664b9e8be6288128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ChildAdded&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ChildRemoved&lt;/a&gt; events are sent to objects when children are added or removed. In both cases you can only rely on the child being a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, or if &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;, a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. (This is because, in the &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildAdded&lt;/a&gt; case, the child is not yet fully constructed, and in the &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildRemoved&lt;/a&gt; case it might have been destructed already).</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;&lt;/a&gt;当添加或删除子级时，QEvent :: ChildAdded和&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: ChildRemoved&lt;/a&gt;事件发送到对象。在这两种情况下，您只能依靠子对象为&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;，或者如果&lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; ，则为&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;。 （这是因为，在&lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildAdded&lt;/a&gt;情况下，该子项尚未完全构造，而在&lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildRemoved&lt;/a&gt;情况下，它可能已经被破坏）。</target>
        </trans-unit>
        <trans-unit id="8281ae1282539ca687839af0a4687fb657a7091c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ChildPolished&lt;/a&gt; events are sent to widgets when children are polished, or when polished children are added. If you receive a child polished event, the child's construction is usually completed. However, this is not guaranteed, and multiple polish events may be delivered during the execution of a widget's constructor.</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: ChildPolished&lt;/a&gt;事件在抛光子级或添加抛光的子级时发送到小部件。如果您收到了打磨孩子的活动，则通常会完成孩子的搭建。但是，这不能保证，并且在小部件的构造函数执行期间可能会传递多个修饰事件。</target>
        </trans-unit>
        <trans-unit id="40b9514054586765a3be5b30a5a64e47cde9420c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverMove&lt;/a&gt; is also slightly different from &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::MouseMove&lt;/a&gt;. Let us consider a top-level window A containing a child B which in turn contains a child C (all with mouse tracking enabled):</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverMove&lt;/a&gt;也与&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: MouseMove&lt;/a&gt;略有不同。让我们考虑一个包含子B的顶级窗口A，子B又包含子C（均启用了鼠标跟踪）：</target>
        </trans-unit>
        <trans-unit id="6b7e58223ad379fb00b6e922880223ccf7073dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; is the first touch event sent to a widget. The &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; event contains a special accept flag that indicates whether the receiver wants the event. By default, the event is accepted. You should call &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;() if the touch event is not handled by your widget. The &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; event is propagated up the parent widget chain until a widget accepts it with &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;(), or an event filter consumes it. For QGraphicsItems, the &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; event is propagated to items under the mouse (similar to mouse event propagation for QGraphicsItems).</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchBegin&lt;/a&gt;是发送到窗口小部件的第一个触摸事件。该&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent的:: TouchBegin&lt;/a&gt;事件含有一种特殊的接受标志，指示接收者是否希望该事件。默认情况下，事件被接受。如果您的窗口小部件未处理touch事件，则应调用&lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;（）。所述&lt;a href=&quot;qevent#Type-enum&quot;&gt;的QEvent :: TouchBegin&lt;/a&gt;事件被向上传播父窗口部件链直到一个小部件与接受它&lt;a href=&quot;qevent#accept&quot;&gt;接受&lt;/a&gt;（），或一个事件过滤器消耗它。对于QGraphicsItems，&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchBegin&lt;/a&gt;事件会传播到鼠标下的项目（类似于QGraphicsItems的鼠标事件传播）。</target>
        </trans-unit>
        <trans-unit id="d91b5544836c8da12ed3d12bf229fd2a5a68f836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt; QEvent::type() const</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Type&lt;/a&gt; QEvent :: type（）const</target>
        </trans-unit>
        <trans-unit id="c771f33bc10647fc4857c4190568196a3454b0e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt; QEventTransition::eventType() const</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Type&lt;/a&gt; QEventTransition :: eventType（）const</target>
        </trans-unit>
        <trans-unit id="fcfa6b79f3bf3bb0033e30ab1ab855d04c2c646b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt; QKeyEvent::type() const</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Type&lt;/a&gt; QKeyEvent :: type（）const</target>
        </trans-unit>
        <trans-unit id="85bed69af8a330b80691dc8766070e6fce09c5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt; QMouseEvent::type() const</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Type&lt;/a&gt; QMouseEvent :: type（）const</target>
        </trans-unit>
        <trans-unit id="65302e251b112eea043282f2c3f0c647d0ae41b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt; QWheelEvent::type() const</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Type&lt;/a&gt; QWheelEvent :: type（）const</target>
        </trans-unit>
        <trans-unit id="86815408c6dbfd3df494171b38fef340bb9610de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qeventtransition&quot;&gt;QEventTransition&lt;/a&gt; and &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qeventtransition&quot;&gt;QEventTransition&lt;/a&gt;和&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34efd80498e5308977fe1d83fc4695c5b485e75a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt; subclasses must be thrown by value and caught by reference:</source>
          <target state="translated">&lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt;子类必须按值抛出并由引用捕获：</target>
        </trans-unit>
        <trans-unit id="1fef3d13026476a7b0fcee70985bd0df7f5008db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; is a variant of &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;, except that it only detaches if &lt;a href=&quot;qexplicitlyshareddatapointer#detach&quot;&gt;QExplicitlySharedDataPointer::detach&lt;/a&gt;() is explicitly called (hence the name).</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;是&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;的变体，只是它仅在显式调用&lt;a href=&quot;qexplicitlyshareddatapointer#detach&quot;&gt;QExplicitlySharedDataPointer :: detach&lt;/a&gt;（）时才分离（因此命名）。</target>
        </trans-unit>
        <trans-unit id="94b8405999dd7453c441538c9846152faf97b25e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; makes writing your own explicitly shared classes easy. &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; implements &lt;a href=&quot;threads-reentrancy&quot;&gt;thread-safe&lt;/a&gt; reference counting, ensuring that adding QExplicitlySharedDataPointers to your &lt;a href=&quot;threads-reentrancy&quot;&gt;reentrant&lt;/a&gt; classes won't make them non-reentrant.</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;使编写自己的显式共享类变得容易。&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;实现了&lt;a href=&quot;threads-reentrancy&quot;&gt;线程安全的&lt;/a&gt;引用计数，确保将QExplicitlySharedDataPointers添加到&lt;a href=&quot;threads-reentrancy&quot;&gt;可重入的&lt;/a&gt;类中不会使它们成为不可重入的。</target>
        </trans-unit>
        <trans-unit id="8267d79c7b94a4c296f7ea7f097b8deadb5b45d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QExplicitlySharedDataPointer::operator=(&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QExplicitlySharedDataPointer :: operator =（&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="b3560d5bcc48a2e7b918cbaa779d6483598fdd02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QExplicitlySharedDataPointer::operator=(T *</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QExplicitlySharedDataPointer :: operator =（T *</target>
        </trans-unit>
        <trans-unit id="c2a47909699a1c94cb8d6dfbb81bf88991f24f78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QExplicitlySharedDataPointer::operator=(const &lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;和QExplicitlySharedDataPointer :: operator =（const &lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="b22d579be22dd617769a9681809ab4d7d10e320e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; *QDesignerFormEditorInterface::extensionManager() const</source>
          <target state="translated">&lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; * QDesignerFormEditorInterface :: extensionManager（）const</target>
        </trans-unit>
        <trans-unit id="1494cbe41dac979ba264bdb9fae8ea5d335d91a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; *QExtensionFactory::extensionManager() const</source>
          <target state="translated">&lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; * QExtensionFactory :: extensionManager（）const</target>
        </trans-unit>
        <trans-unit id="d7a2f3c7def592bc229f2b618bccf7264b017231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;和&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b0e4a4e369dc54dbaf4acd90d985824ac201e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; is an I/O device for reading and writing text and binary files and &lt;a href=&quot;resources#&quot;&gt;resources&lt;/a&gt;. A &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; may be used by itself or, more conveniently, with a &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; or &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;是用于读取和写入文本以及二进制文件和&lt;a href=&quot;resources#&quot;&gt;资源&lt;/a&gt;的I / O设备。甲&lt;a href=&quot;qfile&quot;&gt;QFile时&lt;/a&gt;可通过本身或使用，更方便地，具有&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;或&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f441b182df63f00a2d394d3180478f3f9283254b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt; is the base class for I/O devices that can read and write text and binary files and &lt;a href=&quot;resources#&quot;&gt;resources&lt;/a&gt;. &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; offers the main functionality, &lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt; serves as a base class for sharing functionality with other file devices such as &lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt;, by providing all the operations that can be done on files that have been opened by &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; or &lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt;是可以读取和写入文本以及二进制文件和&lt;a href=&quot;resources#&quot;&gt;资源的&lt;/a&gt; I / O设备的基类。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;提供了主要功能，&lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt;通过提供可以对已由&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;或&lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt;打开的文件执行的所有操作，来与其他文件设备（例如&lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile）&lt;/a&gt;共享功能，作为基类。</target>
        </trans-unit>
        <trans-unit id="c06c935adda833244d29d3b2dc4bf95a4bcb396b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledevice#FileError-enum&quot;&gt;QFileDevice::FileError&lt;/a&gt; QFileDevice::error() const</source>
          <target state="translated">&lt;a href=&quot;qfiledevice#FileError-enum&quot;&gt;QFileDevice :: FileError&lt;/a&gt; QFileDevice :: error（）const</target>
        </trans-unit>
        <trans-unit id="9c982a538fff80351564bed454b7af4ed35ea404" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledevice#Permission-enum&quot;&gt;QFile::Permissions&lt;/a&gt; QFileInfo::permissions() const</source>
          <target state="translated">&lt;a href=&quot;qfiledevice#Permission-enum&quot;&gt;QFile :: Permissions&lt;/a&gt; QFileInfo :: permissions（）const</target>
        </trans-unit>
        <trans-unit id="1ab73d4f1ebf53018bf7ee7e7c6250ea8e90e03b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledevice#Permission-enum&quot;&gt;QFile::Permissions&lt;/a&gt; QFileSystemModel::permissions(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfiledevice#Permission-enum&quot;&gt;QFile :: Permissions&lt;/a&gt; QFileSystemModel :: permissions（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="690c49e4886854d788dcbc4ef87a18d3ffc46733" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt; stores its settings globally instead of per-application. Platform-native file dialogs may or may not store settings in various platform-dependent ways.</source>
          <target state="translated">&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;全局存储其设置，而不是按应用程序存储。平台本机文件对话框可能会或可能不会以各种平台相关的方式存储设置。</target>
        </trans-unit>
        <trans-unit id="314287363520b5190d92d5da065d01f87ce9202a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfiledialog#setMimeTypeFilters&quot;&gt;setMimeTypeFilters&lt;/a&gt;() has the advantage of providing all possible name filters for each file type. For example, JPEG images have three possible extensions; if your application can open such files, selecting the &lt;code&gt;image/jpeg&lt;/code&gt; mime type as a filter will allow you to open all of them.</source>
          <target state="translated">&lt;a href=&quot;qfiledialog#setMimeTypeFilters&quot;&gt;setMimeTypeFilters&lt;/a&gt;（）的优点是为每种文件类型提供了所有可能的名称过滤器。例如，JPEG图像具有三个可能的扩展名。如果您的应用程序可以打开此类文件，则选择 &lt;code&gt;image/jpeg&lt;/code&gt; mime类型作为过滤器将允许您打开所有文件。</target>
        </trans-unit>
        <trans-unit id="2d9d99994c7635ded582735d50083ca124d3f921" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; *QDirModel::iconProvider() const</source>
          <target state="translated">&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; * QDirModel :: iconProvider（）const</target>
        </trans-unit>
        <trans-unit id="8b201011c8f00f9a65712d1071aabbaae11cdd56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; *QFileDialog::iconProvider() const</source>
          <target state="translated">&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; * QFileDialog :: iconProvider（）常量</target>
        </trans-unit>
        <trans-unit id="1133d1e48fcd61fe749ff78a202b0076e0af4775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; *QFileSystemModel::iconProvider() const</source>
          <target state="translated">&lt;a href=&quot;qfileiconprovider&quot;&gt;QFileIconProvider&lt;/a&gt; * QFileSystemModel :: iconProvider（）const</target>
        </trans-unit>
        <trans-unit id="e0f95cff097a664bf6f8436d7a8a01d5a342d147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::Options&lt;/a&gt; QFileIconProvider::options() const</source>
          <target state="translated">&lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider :: Options&lt;/a&gt; QFileIconProvider :: options（）常量</target>
        </trans-unit>
        <trans-unit id="c8978f6dd84fde8bd20bd133978d8da21b455957" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QDirIterator::fileInfo() const</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QDirIterator :: fileInfo（）常量</target>
        </trans-unit>
        <trans-unit id="5e29b4a5a5e0e52668a216cf48d1d5bd5a428c76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QDirModel::fileInfo(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QDirModel :: fileInfo（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3f764e589ab72c7a4a24d3583c84b4702cf26e56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QFileSystemModel::fileInfo(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; QFileSystemModel :: fileInfo（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4667ab62b17807edbf092e80c198152b5535dc27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; provides information about a file's name and position (path) in the file system, its access rights and whether it is a directory or symbolic link, etc. The file's size and last modified/read times are also available. &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; can also be used to obtain information about a Qt &lt;a href=&quot;resources#&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;提供有关文件在文件系统中的名称和位置（路径），其访问权限以及它是目录链接还是符号链接等信息。文件的大小和上次修改/读取时间也可用。&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;也可以用于获取有关Qt &lt;a href=&quot;resources#&quot;&gt;资源的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fa129ef5e9856624e7f815edeb749434192faa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo#QFileInfoList-typedef&quot;&gt;QFileInfoList&lt;/a&gt; QDir::entryInfoList(&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::Filters&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qfileinfo#QFileInfoList-typedef&quot;&gt;QFileInfoList&lt;/a&gt; QDir :: entryInfoList（&lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir :: Filters&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="085c16952e0d06d318f51ce33df93f4bb6651835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileinfo#QFileInfoList-typedef&quot;&gt;QFileInfoList&lt;/a&gt; QDir::entryInfoList(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfileinfo#QFileInfoList-typedef&quot;&gt;QFileInfoList&lt;/a&gt; QDir :: entryInfoList（const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f84525a61cd6b1f11d48729030cc9a68f0e6396d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;File selectors&lt;/a&gt; provide a convenient way of selecting file variants. Qt offers the platform name and the locale as built-in selectors. Qt Quick Controls 2 extends the built-in selectors with the name (lowercase) of the style that an application is running with.</source>
          <target state="translated">&lt;a href=&quot;qfileselector&quot;&gt;文件选择器&lt;/a&gt;提供了选择文件变体的便捷方法。Qt提供平台名称和语言环境作为内置选择器。Qt Quick Controls 2用运行应用程序的样式的名称（小写）扩展了内置选择器。</target>
        </trans-unit>
        <trans-unit id="9ecd81817e1d3dd5ccc2a9cad99e6d59e06314ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;File selectors&lt;/a&gt; provide a convenient way of selecting file variants. Qt offers the platform name and the locale as built-in selectors. Qt Quick Controls extends the built-in selectors with the name (lowercase) of the style that an application is running with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b2a92424f800d60abc39bf2249cfa0f0be3f26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; *QQmlFileSelector::selector() const</source>
          <target state="translated">&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; * QQmlFileSelector :: selector（）const</target>
        </trans-unit>
        <trans-unit id="ef7aab7e65b0398f1e7807c7898ada6447f0abd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; is a convenience for selecting file variants based on platform or device characteristics. This allows you to develop and deploy one codebase containing all the different variants more easily in some circumstances, such as when the correct variant cannot be determined during the deploy step.</source>
          <target state="translated">&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;方便了根据平台或设备特征选择文件变体。这使您可以在某些情况下（例如，在部署步骤中无法确定正确的变体时）更轻松地开发和部署包含所有不同变体的代码库。</target>
        </trans-unit>
        <trans-unit id="968e95983801b7f1359baff9dd4b72a67fcc259d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; provides a convenient alternative to writing such boilerplate code, and in the latter case it allows you to start using an platform-specific configuration without a recompile. &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; also allows for chaining of multiple selectors in a convenient way, for example selecting a different file only on certain combinations of platform and locale. For example, to select based on platform and/or locale, the code is as follows:</source>
          <target state="translated">&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;提供了一种方便的替代方法来编写此类样板代码，在后一种情况下，它允许您开始使用特定于平台的配置，而无需重新编译。&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;还允许以方便的方式链接多个选择器，例如仅在平台和语言环境的某些组合上选择不同的文件。例如，要基于平台和/或语言环境进行选择，代码如下：</target>
        </trans-unit>
        <trans-unit id="b3febdb6351c21c6f0fee239d5b134c61ec930e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; provides a convenient way of selecting file variants. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;提供了一种选择文件变体的便捷方法。&lt;a href=&quot;#details&quot;&gt;更多...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1320695101b67371ff13985b95b5a0f538574582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; can be accessed using the standard interface provided by &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, but it also provides some convenience functions that are specific to a directory model. The &lt;a href=&quot;qfilesystemmodel#fileInfo&quot;&gt;fileInfo&lt;/a&gt;(), &lt;a href=&quot;qfilesystemmodel#isDir&quot;&gt;isDir&lt;/a&gt;(), &lt;a href=&quot;qfilesystemmodel#fileName&quot;&gt;fileName&lt;/a&gt;() and &lt;a href=&quot;qfilesystemmodel#filePath&quot;&gt;filePath&lt;/a&gt;() functions provide information about the underlying files and directories related to items in the model. Directories can be created and removed using &lt;a href=&quot;qfilesystemmodel#mkdir&quot;&gt;mkdir&lt;/a&gt;(), &lt;a href=&quot;qfilesystemmodel#rmdir&quot;&gt;rmdir&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qfilesystemmodel&quot;&gt;&lt;/a&gt;可以使用&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;提供的标准接口来访问QFileSystemModel，但是它还提供了一些特定于目录模型的便捷功能。该&lt;a href=&quot;qfilesystemmodel#fileInfo&quot;&gt;的fileInfo&lt;/a&gt;（），&lt;a href=&quot;qfilesystemmodel#isDir&quot;&gt;ISDIR&lt;/a&gt;（），&lt;a href=&quot;qfilesystemmodel#fileName&quot;&gt;文件名&lt;/a&gt;（）和&lt;a href=&quot;qfilesystemmodel#filePath&quot;&gt;文件路径&lt;/a&gt;（）函数提供有关与模型中的项目的基本文件和目录信息。可以使用&lt;a href=&quot;qfilesystemmodel#mkdir&quot;&gt;mkdir&lt;/a&gt;（），&lt;a href=&quot;qfilesystemmodel#rmdir&quot;&gt;rmdir&lt;/a&gt;（）创建和删除目录。</target>
        </trans-unit>
        <trans-unit id="cf3ced2c74ab998a50ada86f736429532dbddc6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; keeps a cache with file information. The cache is automatically kept up to date using the &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;保留文件信息的缓存。使用&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;可以自动使缓存保持最新状态。</target>
        </trans-unit>
        <trans-unit id="1885ca553f9b5a55f917705a7d367421ab7df703" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; loading is asynchronous to minimize system resource use. We have to take that into account when dealing with this model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7fc6992fe80b3f5d8190daba3e37f3d9035af1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; provides a ready-to-use model to experiment with, and can be easily configured to use existing data. Using this model, we can show how to set up a model for use with ready-made views, and explore how to manipulate data using model indexes.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;提供了一个现成的模型进行试验，并且可以轻松配置为使用现有数据。使用该模型，我们可以展示如何建立一个可用于现成视图的模型，并探索如何使用模型索引来操纵数据。</target>
        </trans-unit>
        <trans-unit id="9bfbd800ff2bac5ac33f07b6eeb5479819d637f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; provides information about files and directories in the local filing system.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;提供有关本地归档系统中文件和目录的信息。</target>
        </trans-unit>
        <trans-unit id="f14b9a3c4c803e12c963003eceddcd05d261889d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; will not fetch any files or directories until &lt;a href=&quot;qfilesystemmodel#setRootPath&quot;&gt;setRootPath&lt;/a&gt;() is called. This will prevent any unnecessary querying on the file system until that point such as listing the drives on Windows.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemmodel&quot;&gt;&lt;/a&gt;在调用&lt;a href=&quot;qfilesystemmodel#setRootPath&quot;&gt;setRootPath&lt;/a&gt;（）之前，QFileSystemModel不会获取任何文件或目录。这样可以防止在文件系统上进行任何不必要的查询，例如在Windows上列出驱动器。</target>
        </trans-unit>
        <trans-unit id="bb8eaed51636bcafae67caa8d4276e897fabbec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt; examines each path added to it. Files that have been added to the &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt; can be accessed using the &lt;a href=&quot;qfilesystemwatcher#files&quot;&gt;files&lt;/a&gt;() function, and directories using the &lt;a href=&quot;qfilesystemwatcher#directories&quot;&gt;directories&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;检查添加到它的每个路径。可以使用&lt;a href=&quot;qfilesystemwatcher#files&quot;&gt;files&lt;/a&gt;（）函数访问已添加到&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;的文件，而使用&lt;a href=&quot;qfilesystemwatcher#directories&quot;&gt;directorys&lt;/a&gt;（）函数访问目录。</target>
        </trans-unit>
        <trans-unit id="fde5aeecfe2ccef49d787fbb45325f3cee4aecd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt; monitors the file system for changes to files and directories by watching a list of specified paths.</source>
          <target state="translated">&lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;通过观察指定路径的列表来监视文件系统中文件和目录的更改。</target>
        </trans-unit>
        <trans-unit id="ffdc5985d13e059f954f762c4d131b8ef3d71a9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt;, &lt;a href=&quot;qhistorystate&quot;&gt;QHistoryState&lt;/a&gt;, and &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt;，&lt;a href=&quot;qhistorystate&quot;&gt;QHistoryState&lt;/a&gt;和&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fc512b869a2801770d4744dcdcddc3a4076f888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#Int-typedef&quot;&gt;QFlags::Int&lt;/a&gt; QFlags::operator QFlags::Int() const</source>
          <target state="translated">&lt;a href=&quot;qflags#Int-typedef&quot;&gt;QFlags :: Int&lt;/a&gt; QFlags :: operator QFlags :: Int（）const</target>
        </trans-unit>
        <trans-unit id="fe0ac1d9c72a9be6cd11d038a58c2fdf9819b455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator&amp;amp;=(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator＆=（&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b049ebc29a9cb6232ac68990aaa698cccf9c39f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator&amp;amp;=(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator＆=（枚举</target>
        </trans-unit>
        <trans-unit id="e0633effcd15e570cca9c5f342f8eb88ef512d49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator&amp;amp;=(int</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator＆=（int</target>
        </trans-unit>
        <trans-unit id="d1ea463af07b81462a154c6ef3fb17bdafb68cb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator=(const &lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator =（const &lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="4c4a64a65e5c5a03cf8103634d5b03fef2239777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator^=(&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator ^ =（&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="eada6a4409b8944c68f080f6fd23ade1bf2e1a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator^=(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator ^ =（枚举</target>
        </trans-unit>
        <trans-unit id="26b241ccee3be5523628bf8e3ac1e19af9aa1b62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator|=(&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator | =（&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7b87e147e0ab0ff02a546b97c9d387519336fdda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::operator|=(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: operator | =（枚举</target>
        </trans-unit>
        <trans-unit id="8e953b961ee5d0d160c32ef4386645d99bafeaf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFlags::setFlag(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;＆QFlags :: setFlag（Enum</target>
        </trans-unit>
        <trans-unit id="47c48c7c6cea448dc2189ec223c937539509bfc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator&amp;amp;(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator＆（&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b89dd6ef2e1d013a69677cb822f94d6ba5c22ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator&amp;amp;(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator＆（Enum</target>
        </trans-unit>
        <trans-unit id="1cf619a9145327e6d3ced206411deb2e651e237d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator&amp;amp;(int</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator＆（int</target>
        </trans-unit>
        <trans-unit id="f4310017c1cad65f695cd1970a2e0060b094da7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator^(&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator ^（&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="49b991faf35327e3093848177eea63192f26b8b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator^(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator ^（枚举</target>
        </trans-unit>
        <trans-unit id="b323fb9561d5d61b67d830339e92b8f38bb015cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator|(&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator |（&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6668df04fa995f3b16770058682980f3d7836401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator|(Enum</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator |（Enum</target>
        </trans-unit>
        <trans-unit id="3a9465e9aed6bd1ade4c8b8e6138a9823c9451fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;T&amp;gt; QFlags::operator~() const</source>
          <target state="translated">&lt;a href=&quot;qflags#QFlags&quot;&gt;QFlags&lt;/a&gt; &amp;lt;T&amp;gt; QFlags :: operator〜（）常量</target>
        </trans-unit>
        <trans-unit id="d4c34ddbf96bedaed10d0c70d6cb17f5c0f7de81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfloat16&quot;&gt;qfloat16&lt;/a&gt; QCborStreamReader::toFloat16() const</source>
          <target state="translated">&lt;a href=&quot;qfloat16&quot;&gt;qfloat16&lt;/a&gt; QCborStreamReader :: toFloat16（）常量</target>
        </trans-unit>
        <trans-unit id="158435781bfb0a724885c8aff5928ce8906d4568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt; will track changes to</source>
          <target state="translated">&lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt;将跟踪对</target>
        </trans-unit>
        <trans-unit id="4dd1adfc879f008dbcf5e28573e1f5b17c0685e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QAbstractAxis::labelsFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QAbstractAxis :: labelsFont（）常量</target>
        </trans-unit>
        <trans-unit id="8896367a6eb7e20c8ecea1ec21cecbc7383d82b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QAbstractAxis::titleFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QAbstractAxis :: titleFont（）常量</target>
        </trans-unit>
        <trans-unit id="a8351c96c5e7963815cee209187a6e5ff9414a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QBarSet::labelFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QBarSet :: labelFont（）常量</target>
        </trans-unit>
        <trans-unit id="898f8937bedfcf9883bfafda50bc7c57a0a76c2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QChart::titleFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QChart :: titleFont（）常量</target>
        </trans-unit>
        <trans-unit id="52046ac7f37109498867cf3bc03d805569c249ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDatabase::font(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDatabase :: font（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3a05104eb3269049163c3c937321cf513ab1e9af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDialog::currentFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDialog :: currentFont（）常量</target>
        </trans-unit>
        <trans-unit id="6fa3b17b6e0fde0670ead54e270345e1ff1b2697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDialog::selectedFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QFontDialog :: selectedFont（）常量</target>
        </trans-unit>
        <trans-unit id="69dde90e50713600c031dc7568e9c83da352d661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QGraphicsSimpleTextItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QGraphicsSimpleTextItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="2a6de604a9e0f30a3828641027bd356ebbd730b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QGraphicsTextItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QGraphicsTextItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="7e2b00c487d9f412c9cbe29451a054f9b0aaab17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QLegendMarker::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QLegendMarker :: font（）const</target>
        </trans-unit>
        <trans-unit id="c569c24707798214991a20dd8b2bff5943ff91f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QListWidgetItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QListWidgetItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="3878f9bc18f5026d21acff1b5acb6e40f2214baf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QPaintEngineState::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QPaintEngineState :: font（）常量</target>
        </trans-unit>
        <trans-unit id="43951907cdf8242b25229ad9e20ace675f2a03b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStandardItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStandardItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="f77567978cd23aba75e0bcb8c224d06346d114e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionMenuItem::font</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionMenuItem :: font</target>
        </trans-unit>
        <trans-unit id="ef3ecb948160f66bc0ad0747579f60dfd85b6da8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionToolButton::font</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionToolButton :: font</target>
        </trans-unit>
        <trans-unit id="d9a771229d600a8eb4cf0e54dee12d857882089a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionViewItem::font</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QStyleOptionViewItem :: font</target>
        </trans-unit>
        <trans-unit id="565a6afa970d1187d0c8ae73df03bffea77ee49a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTableWidgetItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTableWidgetItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="ae0ce769b96fcfade7f110869f612be957f1f0d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextCharFormat::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextCharFormat :: font（）常量</target>
        </trans-unit>
        <trans-unit id="bf833907e80416565d5b0436a4fb96e24a9e9f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextDocument::defaultFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextDocument :: defaultFont（）常量</target>
        </trans-unit>
        <trans-unit id="d8b71ee0ce0bc353722ab8df762021411d2d7ed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextEdit::currentFont() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextEdit :: currentFont（）常量</target>
        </trans-unit>
        <trans-unit id="44b4594cd233be93d716c9b3609f67d02a017804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextItem::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextItem :: font（）常量</target>
        </trans-unit>
        <trans-unit id="eca76caf5cebf65adca4881bf4ce4a01f9da9e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextLayout::font() const</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTextLayout :: font（）常量</target>
        </trans-unit>
        <trans-unit id="ac708d08e5332d4b9c673ec4c7080edf5da2949f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTreeWidgetItem::font(int</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; QTreeWidgetItem :: font（int</target>
        </trans-unit>
        <trans-unit id="75fe3d6d81f59b00a085bfb6cdb8e74eca6f4b24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; can be regarded as a query for one or more fonts on the system.</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;可以视为对系统上一种或多种字体的查询。</target>
        </trans-unit>
        <trans-unit id="e8e2ddbbf90b83a082fed966999535c6e918c4f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; consists of font properties that have been explicitly defined and properties implicitly inherited from the widget's parent. Hence, font() can return a different font compared to the one set with setFont(). This scheme allows you to define single entries in a font without affecting the font's inherited entries.</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;由已经明确定义的字体属性和从小部件的父级隐式继承的属性组成。因此，与使用setFont（）设置的字体相比，font（）可以返回不同的字体。此方案允许您在字体中定义单个条目，而不会影响字体的继承条目。</target>
        </trans-unit>
        <trans-unit id="1a597400d068ff3b6ca826acebeeb6cabf049a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="cad696c8b68a98b94cac996807d979b99dffa1a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;, const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;，常量&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9d956d71f68136cbbb16fb2d544b2ec070e11a9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont::Capitalization&lt;/a&gt; QFont::capitalization() const</source>
          <target state="translated">&lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont :: Capitalization&lt;/a&gt; QFont :: capitalization（）const</target>
        </trans-unit>
        <trans-unit id="4a7026aa0272dfc31bb5b9e14c15a5e1e62d7c89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont::Capitalization&lt;/a&gt; QTextCharFormat::fontCapitalization() const</source>
          <target state="translated">&lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont :: Capitalization&lt;/a&gt; QTextCharFormat :: fontCapitalization（）const</target>
        </trans-unit>
        <trans-unit id="893b48b1c42fa3c6543945d1b32130c1f580a223" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont::HintingPreference&lt;/a&gt; QFont::hintingPreference() const</source>
          <target state="translated">&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont :: HintingPreference&lt;/a&gt; QFont :: hintingPreference（）const</target>
        </trans-unit>
        <trans-unit id="ffc5acfbaa02efb3a4d45dbb6bdcec7385a1d330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont::HintingPreference&lt;/a&gt; QRawFont::hintingPreference() const</source>
          <target state="translated">&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont :: HintingPreference&lt;/a&gt; QRawFont :: hintingPreference（）const</target>
        </trans-unit>
        <trans-unit id="eaed5729d866db0e292d77d0aef2b26a5309eb51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont::HintingPreference&lt;/a&gt; QTextCharFormat::fontHintingPreference() const</source>
          <target state="translated">&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont :: HintingPreference&lt;/a&gt; QTextCharFormat :: fontHintingPreference（）const</target>
        </trans-unit>
        <trans-unit id="75847a6dc0c6295f71efb53cc3715ac33b0cab21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;QFont::operator=(&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt;＆QFont :: operator =（&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c6b3d149b429e19d90cc1f82e0293f3f2f482b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;QFont::operator=(const &lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt;＆QFont :: operator =（const &lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="54a130c1dc03dc184ec641d04ec4f49a5287303f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; QFont::resolve(const &lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt; QFont :: resolve（const &lt;a href=&quot;qfont#QFont&quot;&gt;QFont&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="81fce06802ddacf8d018bbaaa37145facd53ec20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont::SpacingType&lt;/a&gt; QFont::letterSpacingType() const</source>
          <target state="translated">&lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont :: SpacingType&lt;/a&gt; QFont :: letterSpacingType（）常量</target>
        </trans-unit>
        <trans-unit id="2ce4e2b130a19d3005e082a29f1cdb111c8c31bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont::SpacingType&lt;/a&gt; QTextCharFormat::fontLetterSpacingType() const</source>
          <target state="translated">&lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont :: SpacingType&lt;/a&gt; QTextCharFormat :: fontLetterSpacingType（）const</target>
        </trans-unit>
        <trans-unit id="20f0c209df377cd5d9c63ea0040d56e92aa5e8cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont::Style&lt;/a&gt; QFont::style() const</source>
          <target state="translated">&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont :: Style&lt;/a&gt; QFont :: style（）const</target>
        </trans-unit>
        <trans-unit id="31f90eed98f5db10b0faf732785483b39e423571" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont::Style&lt;/a&gt; QFontInfo::style() const</source>
          <target state="translated">&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont :: Style&lt;/a&gt; QFontInfo :: style（）const</target>
        </trans-unit>
        <trans-unit id="124a5f160a6f309d32373e7a890c9b33f7730eb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont::Style&lt;/a&gt; QRawFont::style() const</source>
          <target state="translated">&lt;a href=&quot;qfont#Style-enum&quot;&gt;QFont :: Style&lt;/a&gt; QRawFont :: style（）const</target>
        </trans-unit>
        <trans-unit id="59e475065149185800855e8c40714c0a24f7ff06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont::StyleHint&lt;/a&gt; QFont::styleHint() const</source>
          <target state="translated">&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont :: StyleHint&lt;/a&gt; QFont :: styleHint（）const</target>
        </trans-unit>
        <trans-unit id="e2c2d0cc300c237f3d30dbf790e49b6d378808af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont::StyleHint&lt;/a&gt; QFontInfo::styleHint() const</source>
          <target state="translated">&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont :: StyleHint&lt;/a&gt; QFontInfo :: styleHint（）const</target>
        </trans-unit>
        <trans-unit id="7a6994e56b9c04fe3bfde967cb532d3c3456db67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont::StyleHint&lt;/a&gt; QTextCharFormat::fontStyleHint() const</source>
          <target state="translated">&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont :: StyleHint&lt;/a&gt; QTextCharFormat :: fontStyleHint（）const</target>
        </trans-unit>
        <trans-unit id="21aad5766e939b265202e1c96e2c67b1734aec23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont::StyleStrategy&lt;/a&gt; QFont::styleStrategy() const</source>
          <target state="translated">&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont :: StyleStrategy&lt;/a&gt; QFont :: styleStrategy（）const</target>
        </trans-unit>
        <trans-unit id="51ddf21ac3a6b37e00a716cc5aa580dfafa52342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont::StyleStrategy&lt;/a&gt; QTextCharFormat::fontStyleStrategy() const</source>
          <target state="translated">&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont :: StyleStrategy&lt;/a&gt; QTextCharFormat :: fontStyleStrategy（）const</target>
        </trans-unit>
        <trans-unit id="457ca142c533e60ade713241eeeb4af6ca0dcad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#fixedPitch&quot;&gt;fixedPitch&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfont#fixedPitch&quot;&gt;fixedPitch&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d2061f59e76ecaa320c57eb45cac103e4accb051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#pointSize&quot;&gt;pointSize&lt;/a&gt;() (see below)</source>
          <target state="translated">&lt;a href=&quot;qfont#pointSize&quot;&gt;pointSize&lt;/a&gt;（）（请参阅下文）</target>
        </trans-unit>
        <trans-unit id="a6a3e273ef298025102a39776377147b1bd5a6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#style&quot;&gt;style&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfont#style&quot;&gt;style&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f8e8de521c51b8cb1cd878672b548163def92c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfont#weight&quot;&gt;weight&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfont#weight&quot;&gt;weight&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="36b4d3cb2e0a9d65793a87ceeeb0c3b699ab13dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontcombobox&quot;&gt;QFontComboBox&lt;/a&gt; is often used in toolbars, in conjunction with a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; for controlling the font size and two &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;s for bold and italic.</source>
          <target state="translated">&lt;a href=&quot;qfontcombobox&quot;&gt;QFontComboBox&lt;/a&gt;通常在工具栏中使用，与&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;一起用于控制字体大小，两个&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton则&lt;/a&gt;用于粗体和斜体。</target>
        </trans-unit>
        <trans-unit id="1c218eb383ea88effdfa6787e4c2d65647c5f9c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; QPainter::fontInfo() const</source>
          <target state="translated">&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; QPainter :: fontInfo（）常量</target>
        </trans-unit>
        <trans-unit id="5c4dba34192e576cc3b7ea416bd96936c49cdc4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; QWidget::fontInfo() const</source>
          <target state="translated">&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; QWidget :: fontInfo（）常量</target>
        </trans-unit>
        <trans-unit id="9c59c26c559e18c9be25205118714f942a081140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontinfo#QFontInfo&quot;&gt;QFontInfo&lt;/a&gt; &amp;amp;QFontInfo::operator=(const &lt;a href=&quot;qfontinfo#QFontInfo&quot;&gt;QFontInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontinfo#QFontInfo&quot;&gt;QFontInfo&lt;/a&gt;＆QFontInfo :: operator =（const &lt;a href=&quot;qfontinfo#QFontInfo&quot;&gt;QFontInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2708b9fc911b3f4dd39a8e1ddadbcdb5e00905c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QPainter::fontMetrics() const</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QPainter :: fontMetrics（）常量</target>
        </trans-unit>
        <trans-unit id="1328aaa3c43aebe408b788dd587b5a5bc5d61343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QStyleOption::fontMetrics</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QStyleOption :: fontMetrics</target>
        </trans-unit>
        <trans-unit id="8d9b04af0717d194b6889896b4914ab8e431b559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QWidget::fontMetrics() const</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; QWidget :: fontMetrics（）常量</target>
        </trans-unit>
        <trans-unit id="54678e35bf61bbffe8892fb3497ba167a3e72545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; functions calculate the size of characters and strings for a given font. There are three ways you can create a &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;函数计算给定字体的字符和字符串的大小。您可以通过三种方式创建&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="6ad4cca7588077fb26ff50d51d72a01d20693e99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;QFontMetrics::operator=(&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt;＆QFontMetrics :: operator =（&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="15ffde488a8a60ebe1daf9239cd075a0741804e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;QFontMetrics::operator=(const &lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt;＆QFontMetrics :: operator =（const &lt;a href=&quot;qfontmetrics#QFontMetrics&quot;&gt;QFontMetrics&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7434582ab3600f2a9600cc551cffd969d312564f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; functions calculate the size of characters and strings for a given font. You can construct a &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; object with an existing &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; to obtain metrics for that font. If the font is changed later, the font metrics object is</source>
          <target state="translated">&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;函数计算给定字体的字符和字符串的大小。您可以使用现有的&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;构造&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;对象以获得该字体的度量。如果以后更改字体，则字体指标对象为</target>
        </trans-unit>
        <trans-unit id="1b6c1d0bbc336c2865e59544fab6c3d1478fa474" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;QFontMetricsF::operator=(&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt;＆QFontMetricsF :: operator =（&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="86820c10d409f45cc7ff4b0632355e2c530e0bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;QFontMetricsF::operator=(const &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt;＆QFontMetricsF :: operator =（const &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="899933b18716c96f435e8d613c2a90c0c24b0746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;QFontMetricsF::operator=(const &lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt;＆QFontMetricsF :: operator =（const &lt;a href=&quot;qfontmetricsf#QFontMetricsF&quot;&gt;QFontMetricsF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ac8a3eb657bd58c37942374ae1d194c4d89ae9a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder&quot;&gt;QFormBuilder&lt;/a&gt; extends the &lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt; base class with a number of functions that are used to support custom widget plugins:</source>
          <target state="translated">&lt;a href=&quot;qformbuilder&quot;&gt;QFormBuilder&lt;/a&gt;扩展了&lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt;基类，其中包含许多用于支持自定义窗口小部件插件的函数：</target>
        </trans-unit>
        <trans-unit id="3dbefbf44a7a3e9b5f545789b6b6b57fb2a32d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;() allows additional paths to be registered with the form builder.</source>
          <target state="translated">&lt;a href=&quot;qformbuilder#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;（）允许向表单构建器注册其他路径。</target>
        </trans-unit>
        <trans-unit id="c51eeb47f3e0213c9068000fa15472c42600ae99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;() removes all paths registered with the form builder.</source>
          <target state="translated">&lt;a href=&quot;qformbuilder#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;（）删除在表单构建器中注册的所有路径。</target>
        </trans-unit>
        <trans-unit id="2b937f3b52f8574c500c97364224ffbb995c293e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder#customWidgets&quot;&gt;customWidgets&lt;/a&gt;() returns a list of interfaces to plugins that can be used to create new instances of registered custom widgets.</source>
          <target state="translated">&lt;a href=&quot;qformbuilder#customWidgets&quot;&gt;customWidgets&lt;/a&gt;（）返回插件接口列表，可用于创建注册的自定义窗口小部件的新实例。</target>
        </trans-unit>
        <trans-unit id="d2224ec84d1d9234b7ad985754ffa75f898c0e79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder#pluginPaths&quot;&gt;pluginPaths&lt;/a&gt;() returns the list of paths that the form builder searches when loading custom widget plugins.</source>
          <target state="translated">&lt;a href=&quot;qformbuilder#pluginPaths&quot;&gt;pluginPaths&lt;/a&gt;（）返回加载自定义窗口小部件插件时表单构建器搜索的路径列表。</target>
        </trans-unit>
        <trans-unit id="764ad641394e61050fd5375b486ff9592f26c92e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformbuilder#setPluginPath&quot;&gt;setPluginPath&lt;/a&gt;() is used to replace the existing list of paths with a list obtained from some other source.</source>
          <target state="translated">&lt;a href=&quot;qformbuilder#setPluginPath&quot;&gt;setPluginPath&lt;/a&gt;（）用于将路径的现有列表替换为从其他来源获得的列表。</target>
        </trans-unit>
        <trans-unit id="4d95f509a4a4345472fbf771c24688f207241b8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; is a convenience layout class that lays out its children in a two-column form. The left column consists of labels and the right column consists of &quot;field&quot; widgets (line editors, spin boxes, etc.).</source>
          <target state="translated">&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;是一个便捷的布局类，以两列的形式布局其子级。左列包含标签，右列包含&amp;ldquo;字段&amp;rdquo;窗口小部件（线编辑器，旋转框等）。</target>
        </trans-unit>
        <trans-unit id="74793dbfec541b420da9849a3430d8d50b9f5b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; will add two widgets on a row, commonly a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; to create forms. Adding a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; on the same row will set the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; as the &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;'s buddy. The following code will use the &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; to place three &lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt; and a corresponding &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; on a row.</source>
          <target state="translated">&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;将在一行上添加两个小部件，通常是一个&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;和一个&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;来创建表单。在同一行上添加&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;和&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;会将&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;设置为&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;的好友。以下代码将使用&lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;将三个&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;和一个对应的&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;放在一行上。</target>
        </trans-unit>
        <trans-unit id="2f3a946beb503a8ab68e9f607914c19c682bde74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout::TakeRowResult&lt;/a&gt; QFormLayout::takeRow(&lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout :: TakeRowResult&lt;/a&gt; QFormLayout :: takeRow（&lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b7182d74098e334b5f273ff24567b5c21761ef3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout::TakeRowResult&lt;/a&gt; QFormLayout::takeRow(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout :: TakeRowResult&lt;/a&gt; QFormLayout :: takeRow（&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e8c53abdfc7dd2ca0398ae2aa1427a64a63b727c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout::TakeRowResult&lt;/a&gt; QFormLayout::takeRow(int</source>
          <target state="translated">&lt;a href=&quot;qformlayout-takerowresult&quot;&gt;QFormLayout :: TakeRowResult&lt;/a&gt; QFormLayout :: takeRow（int</target>
        </trans-unit>
        <trans-unit id="be64d641e250d4798f420763d5317550b9c0befd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; draws a box around its contents</source>
          <target state="translated">&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;在其内容周围绘制一个框</target>
        </trans-unit>
        <trans-unit id="5f5916b154ba4ab79ec7ca542b2fb5ab00853ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; draws a horizontal line that frames nothing (useful as separator)</source>
          <target state="translated">&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;绘制一条水平线，不构成任何框（用作分隔符）</target>
        </trans-unit>
        <trans-unit id="89d2587adc04b94713ff455b66c25f81bf074063" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; draws a panel to make the contents appear raised or sunken</source>
          <target state="translated">&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;绘制面板以使内容看起来凸起或凹陷</target>
        </trans-unit>
        <trans-unit id="c5addad282caba54a534628bd79e87ea1aa06e61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; draws a vertical line that frames nothing (useful as separator)</source>
          <target state="translated">&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;画一条垂直线，不构成任何框（用作分隔符）</target>
        </trans-unit>
        <trans-unit id="142fd2cebbe5c34e38e2920931ba88d504426d79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; draws nothing</source>
          <target state="translated">&lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;什么都没画</target>
        </trans-unit>
        <trans-unit id="14cadc32a24cc4f15e3b8b78160f9f74d188a9e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame::Shape&lt;/a&gt; QStyleOptionFrame::frameShape</source>
          <target state="translated">&lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame :: Shape&lt;/a&gt; QStyleOptionFrame :: frameShape</target>
        </trans-unit>
        <trans-unit id="ab74118efd312aadec87d5c47fc0c8868c14daae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; allows threads to be synchronized against one or more results which will be ready at a later point in time. The result can be of any type that has a default constructor and a copy constructor. If a result is not available at the time of calling the &lt;a href=&quot;qfuture#result&quot;&gt;result&lt;/a&gt;(), &lt;a href=&quot;qfuture#resultAt&quot;&gt;resultAt&lt;/a&gt;(), or &lt;a href=&quot;qfuture#results&quot;&gt;results&lt;/a&gt;() functions, &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; will wait until the result becomes available. You can use the &lt;a href=&quot;qfuture#isResultReadyAt&quot;&gt;isResultReadyAt&lt;/a&gt;() function to determine if a result is ready or not. For &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; objects that report more than one result, the &lt;a href=&quot;qfuture#resultCount&quot;&gt;resultCount&lt;/a&gt;() function returns the number of continuous results. This means that it is always safe to iterate through the results from 0 to &lt;a href=&quot;qfuture#resultCount&quot;&gt;resultCount&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;允许线程针对一个或多个结果进行同步，这些结果将在稍后的时间点准备就绪。结果可以是具有默认构造函数和副本构造函数的任何类型。如果在调用&lt;a href=&quot;qfuture#result&quot;&gt;result&lt;/a&gt;（），&lt;a href=&quot;qfuture#resultAt&quot;&gt;resultAt&lt;/a&gt;（）或&lt;a href=&quot;qfuture#results&quot;&gt;result&lt;/a&gt;（）函数时结果不可用，则&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;将等待直到结果变为可用。您可以使用&lt;a href=&quot;qfuture#isResultReadyAt&quot;&gt;isResultReadyAt&lt;/a&gt;（）函数来确定结果是否准备就绪。对于报告多个结果的&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;对象，&lt;a href=&quot;qfuture#resultCount&quot;&gt;resultCount&lt;/a&gt;（）函数返回连续结果的数量。这意味着从0迭代到结果始终是安全的&lt;a href=&quot;qfuture#resultCount&quot;&gt;resultCount&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="fdf9c25cdd21cf596976263159aca35f03914188" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; also offers ways to interact with a runnning computation. For instance, the computation can be canceled with the &lt;a href=&quot;qfuture#cancel&quot;&gt;cancel&lt;/a&gt;() function. To pause the computation, use the &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;() function or one of the &lt;a href=&quot;qfuture#pause&quot;&gt;pause&lt;/a&gt;(), &lt;a href=&quot;qfuture#resume&quot;&gt;resume&lt;/a&gt;(), or &lt;a href=&quot;qfuture#togglePaused&quot;&gt;togglePaused&lt;/a&gt;() convenience functions. Be aware that not all running asynchronous computations can be canceled or paused. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;还提供了与运行计算进行交互的方法。例如，可以使用&lt;a href=&quot;qfuture#cancel&quot;&gt;cancel&lt;/a&gt;（）函数取消计算。要暂停计算，请使用&lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;（）函数或&lt;a href=&quot;qfuture#pause&quot;&gt;pause&lt;/a&gt;（），&lt;a href=&quot;qfuture#resume&quot;&gt;resume&lt;/a&gt;（）或&lt;a href=&quot;qfuture#togglePaused&quot;&gt;togglePaused&lt;/a&gt;（）便利函数之一。请注意，并非所有正在运行的异步计算都可以取消或暂停。例如，&lt;a href=&quot;qtconcurrent#run&quot;&gt;不能取消&lt;/a&gt;由QtConcurrent :: run（）返回的future。但是&lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt;（）返回的Future可以。</target>
        </trans-unit>
        <trans-unit id="76d232558eaf8b68399273f79d449ee76bed3048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; has both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture同时&lt;/a&gt;具有&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;。Java风格的迭代器比STL风格的迭代器更高级，更易于使用。另一方面，它们的效率略低。</target>
        </trans-unit>
        <trans-unit id="bf896d8680a09243c2e0df6c6c5452d1721d3d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; is a lightweight reference counted class that can be passed by value.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;是轻量级引用计数类，可以按值传递。</target>
        </trans-unit>
        <trans-unit id="1fbe2f7793f37b6dfa9f3528e2d49ceef90291e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; provides a &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterator&lt;/a&gt; (&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt;) and an &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterator&lt;/a&gt; (&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt;). Using these iterators is another way to access results in the future.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;提供了&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;（&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt;）和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;（&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator&lt;/a&gt;）。使用这些迭代器是将来获取结果的另一种方法。</target>
        </trans-unit>
        <trans-unit id="71fa681dd76b04bdc5e57813a2564c7d43903b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; provides both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style iterators are more low-level and more cumbersome to use; on the other hand, they are slightly faster and, for developers who already know STL, have the advantage of familiarity.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;提供&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;。STL样式的迭代器更底层且使用起来更麻烦。另一方面，它们的速度稍快一些，对于已经了解STL的开发人员来说，它们具有熟悉的优势。</target>
        </trans-unit>
        <trans-unit id="3aa8ef000eeeb9b55d4e889fd7961ed1b54cac5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; represents the result of an asynchronous computation.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;表示异步计算的结果。</target>
        </trans-unit>
        <trans-unit id="99441178c2d7b8a2e9eb3989927041921e07c0ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Iterator</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（迭代器</target>
        </trans-unit>
        <trans-unit id="e2ed23b533a86c2137ed24db8c7eb1501529c6d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(const Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: filteredReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="be224946b2a4b7c68d0088e6d4c4625b93c86311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Iterator</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（迭代器</target>
        </trans-unit>
        <trans-unit id="20af5fc1f7e7a57399bfdf9e4529ec7acbaecc8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(const Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;ResultType&amp;gt; QtConcurrent :: mappedReduced（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="53fa138367062292d0df52c76931b8fd9a94a4f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QFutureWatcher::future() const</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; QFutureWatcher :: future（）const</target>
        </trans-unit>
        <trans-unit id="dce40a15aac2ed034adbb27dea57288f41738e5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; QtConcurrent :: run（&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c49109f9b319af3b99bad91932369dd154edcc46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(Function</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; QtConcurrent :: run（函数</target>
        </trans-unit>
        <trans-unit id="543368a5c74d21bac86161f032dfef3122fb55e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(Iterator</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameQtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（Iterator</target>
        </trans-unit>
        <trans-unit id="9cea065eab0e90260f1879a4b27e7920fd1a4267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(const Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameQtPrivate :: MapResultType &amp;lt;void，MapFunctor&amp;gt; :: ResultType&amp;gt; QtConcurrent :: mapped（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="b63196313803eaef301d134db5e9e26fa7244a13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameSequence::value_type&amp;gt; QtConcurrent::filtered(const Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameSequence :: value_type&amp;gt; QtConcurrent :: filtered（const Sequence＆</target>
        </trans-unit>
        <trans-unit id="f0611326589b5d6c2f92158ed0043dcebcf5f7f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameqValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(Iterator</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;typenameqValueType &amp;lt;Iterator&amp;gt; :: value_type&amp;gt; QtConcurrent :: filtered（Iterator</target>
        </trans-unit>
        <trans-unit id="28276d117b3c6e20e657a23fa1ecd705e25472a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::filter(Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: filter（Sequence＆</target>
        </trans-unit>
        <trans-unit id="eecfe677c48aa815d9d764efbddb646e58cc22ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Iterator</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（迭代器</target>
        </trans-unit>
        <trans-unit id="2b26f05c160271d2429ff3eabdd1fc6480df3b5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Sequence &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt; QtConcurrent :: map（序列＆</target>
        </trans-unit>
        <trans-unit id="ca7b9798120a80e1fdff75c8884b9ed397cfbe97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; is specialized to not contain any of the result fetching functions. Any &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; can be assigned or copied into a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; as well. This is useful if only status or progress information is needed - not the actual result data.</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt;专门用于不包含任何结果获取功能。任何&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt;也可以分配或复制到&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;void&amp;gt;中。如果仅需要状态或进度信息，而无需实际结果数据，则此功能很有用。</target>
        </trans-unit>
        <trans-unit id="901ce506743607bc75542c58ff9df7d7827bb1fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture#QFuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFuture::operator=(const &lt;a href=&quot;qfuture#QFuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture#QFuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt;＆QFuture :: operator =（const &lt;a href=&quot;qfuture#QFuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="750dba59afb9bbd6107fe5294988dd4459d45f23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture#result&quot;&gt;QFuture::result&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfuture#result&quot;&gt;QFuture::result&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ee93d66b32edc9078b7cd1d8642276e906132dd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture#resultAt&quot;&gt;QFuture::resultAt&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfuture#resultAt&quot;&gt;QFuture::resultAt&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9796916baee120f65ed9a22365bf184b9c15ac5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture#results&quot;&gt;QFuture::results&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfuture#results&quot;&gt;QFuture::results&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="a322cbc0db23811f0bc772e01a3f8692cb11f609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture#waitForFinished&quot;&gt;QFuture::waitForFinished&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qfuture#waitForFinished&quot;&gt;QFuture::waitForFinished&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="111733ee0919da63b4a403dfb338d627fcb642e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::begin() const</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator&lt;/a&gt; QFuture :: begin（）const</target>
        </trans-unit>
        <trans-unit id="9ece4ec67818cbe644c844e29347bef3938d5163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::constBegin() const</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator&lt;/a&gt; QFuture :: constBegin（）const</target>
        </trans-unit>
        <trans-unit id="8a2adfb5fdcc688a047f84d016e84931e1766653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::constEnd() const</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator&lt;/a&gt; QFuture :: constEnd（）const</target>
        </trans-unit>
        <trans-unit id="783de97b3938bd3f5907f5709ab84dc936dad2c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::end() const</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iterator&lt;/a&gt; QFuture :: end（）const</target>
        </trans-unit>
        <trans-unit id="da8eb25ad392d9ef0616fa0fb3b2ae6052006278" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator ++（）</target>
        </trans-unit>
        <trans-unit id="03dc1f65870b3c0d5299554215e222b9a31b1bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator + =（int</target>
        </trans-unit>
        <trans-unit id="8752f483e5ede2e4038d39c90a38a696f37eb54a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-（）</target>
        </trans-unit>
        <trans-unit id="297545732e3ee380ac575098df28ccfaca46d9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-=（int</target>
        </trans-unit>
        <trans-unit id="6c17187a91bc4554fdd79f701617a55def90f108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator=(const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator =（const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="be2434e159ec33b35de624a9243012b962d84785" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator +（int</target>
        </trans-unit>
        <trans-unit id="8a5e3cf3e81dfeccb17a225a110e1fe09708fc00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator ++（</target>
        </trans-unit>
        <trans-unit id="986a5f7a37418d6a83fd2fe2c01ac989cce3c3c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（int</target>
        </trans-unit>
        <trans-unit id="cda70f051fe7533e2f220fefe8c163e134e56bb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（</target>
        </trans-unit>
        <trans-unit id="bf09b284922e6575228be89145800d00a447f51b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt; allows iterating through results available via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt;允许迭代通过&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;可获得的结果。</target>
        </trans-unit>
        <trans-unit id="9e954d8b6cfed84bc4bc354ff1ad72fc59881577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt;&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt;. Note that there is no mutable iterator for &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; (unlike the other Java-style iterators).</source>
          <target state="translated">&lt;a href=&quot;qfutureiterator&quot;&gt;QFutureIterator&lt;/a&gt; &amp;lt;T&amp;gt;允许您迭代&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt;。注意，&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;没有可变的迭代器（不同于其他Java样式的迭代器）。</target>
        </trans-unit>
        <trans-unit id="d6e442748b5a0cd38aa7154fd1cf89ad4d584f74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfutureiterator#QFutureIterator&quot;&gt;QFutureIterator&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QFutureIterator::operator=(const &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qfutureiterator#QFutureIterator&quot;&gt;QFutureIterator&lt;/a&gt; &amp;lt;T&amp;gt;＆QFutureIterator :: operator =（const &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="c86c186b7fdf83a23bed2eb0e17962c7732b538e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer&lt;/a&gt; is a convenience class that automatically synchronizes several QFutures.</source>
          <target state="translated">&lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer&lt;/a&gt;是一个便利类，可自动同步多个QFuture。</target>
        </trans-unit>
        <trans-unit id="84e784691295c2ba46d5b93e371e5290b700ce93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer&lt;/a&gt; is a template class that simplifies synchronization of one or more &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; objects. Futures are added using the &lt;a href=&quot;qfuturesynchronizer#addFuture&quot;&gt;addFuture&lt;/a&gt;() or &lt;a href=&quot;qfuturesynchronizer#setFuture&quot;&gt;setFuture&lt;/a&gt;() functions. The &lt;a href=&quot;qfuturesynchronizer#futures&quot;&gt;futures&lt;/a&gt;() function returns a list of futures. Use &lt;a href=&quot;qfuturesynchronizer#clearFutures&quot;&gt;clearFutures&lt;/a&gt;() to remove all futures from the &lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer&lt;/a&gt;是一种模板类，可简化一个或多个&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;对象的同步。使用&lt;a href=&quot;qfuturesynchronizer#addFuture&quot;&gt;addFuture&lt;/a&gt;（）或&lt;a href=&quot;qfuturesynchronizer#setFuture&quot;&gt;setFuture&lt;/a&gt;（）函数添加期货。该&lt;a href=&quot;qfuturesynchronizer#futures&quot;&gt;期货&lt;/a&gt;（）函数返回期货的列表。使用&lt;a href=&quot;qfuturesynchronizer#clearFutures&quot;&gt;clearFutures&lt;/a&gt;（）从&lt;a href=&quot;qfuturesynchronizer&quot;&gt;QFutureSynchronizer中&lt;/a&gt;删除所有期货。</target>
        </trans-unit>
        <trans-unit id="9802b801b1e112a5eed7463c28cea64e9df170e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; allows monitoring a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; using signals-and-slots.</source>
          <target state="translated">&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;允许使用信号和插槽监视&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93b348997294c75f8430a64e84a895e46fbbc3d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; provides information and notifications about a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. Use the &lt;a href=&quot;qfuturewatcher#setFuture&quot;&gt;setFuture&lt;/a&gt;() function to start watching a particular &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. The &lt;a href=&quot;qfuturewatcher#future&quot;&gt;future&lt;/a&gt;() function returns the future set with &lt;a href=&quot;qfuturewatcher#setFuture&quot;&gt;setFuture&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;提供了有关信息和通知&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;。使用&lt;a href=&quot;qfuturewatcher#setFuture&quot;&gt;setFuture&lt;/a&gt;（）函数开始观看特定的&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;。在&lt;a href=&quot;qfuturewatcher#future&quot;&gt;未来的&lt;/a&gt;（）函数返回未来集&lt;a href=&quot;qfuturewatcher#setFuture&quot;&gt;setFuture&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="b9d2e4d8e62e28d3b002e666d8c389513a26c936" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;&amp;lt;void&amp;gt; is specialized to not contain any of the result fetching functions. Any &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; can be watched by a &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;&amp;lt;void&amp;gt; as well. This is useful if only status or progress information is needed; not the actual result data.</source>
          <target state="translated">&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; &amp;lt;void&amp;gt;专门用于不包含任何结果获取功能。&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; &amp;lt;void&amp;gt; 也可以监视任何&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; &amp;lt;T&amp;gt; 。如果仅需要状态或进度信息，这将很有用；不是实际结果数据。</target>
        </trans-unit>
        <trans-unit id="ef1d288b2f2792dcedeac8c557d6dd4f4ce2b5f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgamepad&quot;&gt;QGamepad&lt;/a&gt; *QGamepadKeyNavigation::gamepad() const</source>
          <target state="translated">&lt;a href=&quot;qgamepad&quot;&gt;QGamepad&lt;/a&gt; * QGamepadKeyNavigation :: gamepad（）const</target>
        </trans-unit>
        <trans-unit id="688d1aaca3e36522f59652503a83a27152f7dea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgamepad&quot;&gt;QGamepad&lt;/a&gt; is used to access the current state of gamepad hardware connected to a system.</source>
          <target state="translated">&lt;a href=&quot;qgamepad&quot;&gt;QGamepad&lt;/a&gt;用于访问连接到系统的游戏手柄硬件的当前状态。</target>
        </trans-unit>
        <trans-unit id="02a411ee390c5fddfd65583f09d8a051fb3fde1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgamepadkeynavigation&quot;&gt;QGamepadKeyNavigation&lt;/a&gt; provides support for keyboard events triggered by gamepads.</source>
          <target state="translated">&lt;a href=&quot;qgamepadkeynavigation&quot;&gt;QGamepadKeyNavigation&lt;/a&gt;提供对由游戏手柄触发的键盘事件的支持。</target>
        </trans-unit>
        <trans-unit id="5e9ac588c5722b556daf1512b3bbc9c61b18af27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgamepadmanager&quot;&gt;QGamepadManager&lt;/a&gt; provides a high-level interface for querying the attached gamepads and events related to all of the connected devices.</source>
          <target state="translated">&lt;a href=&quot;qgamepadmanager&quot;&gt;QGamepadManager&lt;/a&gt;提供了一个高级界面，用于查询附带的游戏手柄和与所有已连接设备有关的事件。</target>
        </trans-unit>
        <trans-unit id="179321fad01fa88d46b1fc1992598306f2d6d2f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt; QMetaObject::Q_ARG(</source>
          <target state="translated">&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt; QMetaObject :: Q_ARG（</target>
        </trans-unit>
        <trans-unit id="a9075bb588e752749f19bd7fb166094957adc319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt; and &lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt; are internal helper classes. Because signals and slots can be dynamically invoked, you must enclose the arguments using the &lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;() and &lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;() macros. &lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;() takes a type name and a const reference of that type; &lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;() takes a type name and a non-const reference.</source>
          <target state="translated">&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt;和&lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt;是内部帮助程序类。由于可以动态调用信号和插槽，因此必须使用&lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;（）和&lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;（）宏将参数括起来。&lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;（）接受类型名称和该类型的const引用；&lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;（）具有类型名称和非常量引用。</target>
        </trans-unit>
        <trans-unit id="6e517118719fb3dcc303019bf1b68d84eb8f3dd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt;Q_ARG(</source>
          <target state="translated">&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt;Q_ARG(</target>
        </trans-unit>
        <trans-unit id="315ff4c6a1493039e7ba0e23d214e0ab9d22e684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, float&amp;gt; QMatrix4x4::toGenericMatrix() const</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，float&amp;gt; QMatrix4x4 :: toGenericMatrix（）常量</target>
        </trans-unit>
        <trans-unit id="48e7e523af82abbff0793556b9b9f8520b515f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;M, N, T&amp;gt; QGenericMatrix::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;M，N，T&amp;gt; QGenericMatrix :: transposed（）常量</target>
        </trans-unit>
        <trans-unit id="9b8c81c2e33dd0c2e61437e44ce7d4d001f2ee43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;M1, M2, TT&amp;gt; QGenericMatrix::operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;NN, M2, TT&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;M1，M2，TT&amp;gt; QGenericMatrix :: operator *（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;NN，M2，TT&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="fe82e0008c39997718aa662e514a9c2fb764349b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;QGenericMatrix::operator*=(T</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆QGenericMatrix :: operator * =（T</target>
        </trans-unit>
        <trans-unit id="01dda7bbb47ecc7178e86bc22b95b0b3ed4dc3ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;QGenericMatrix::operator+=(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆QGenericMatrix :: operator + =（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="9908d3c081e894555fbbbf354cf073d58cedc66f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;QGenericMatrix::operator-=(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆QGenericMatrix :: operator-=（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2525bb84951f857036af91ba2f3646e5ea17c85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;QGenericMatrix::operator/=(T</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆QGenericMatrix :: operator / =（T</target>
        </trans-unit>
        <trans-unit id="266a415bb58be048120e49f8287a8e2e197339e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; QGenericMatrix::operator*(T</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt; QGenericMatrix :: operator *（T</target>
        </trans-unit>
        <trans-unit id="e01a263d1f89a627f3731db976785f7895cfff69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; QGenericMatrix::operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt; QGenericMatrix :: operator *（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="92788cfc9c3c830ca7a1690df38ec905edfb4387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; QGenericMatrix::operator+(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt; QGenericMatrix :: operator +（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="bb55ba76ed9934ab572cc6e509909c405a465788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; QGenericMatrix::operator-(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt; QGenericMatrix :: operator-（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="db8a13485d212dd50c84897108c50feab010ee8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; QGenericMatrix::operator/(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt; QGenericMatrix :: operator /（const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt; &amp;lt;N，M，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="cc7485804227c2719a1e302ba79eb258907af9b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QMatrix3x3-typedef&quot;&gt;QMatrix3x3&lt;/a&gt; QMatrix4x4::normalMatrix() const</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QMatrix3x3-typedef&quot;&gt;QMatrix3x3&lt;/a&gt; QMatrix4x4 :: normalMatrix（）常量</target>
        </trans-unit>
        <trans-unit id="f0317aef84eb7515b8e5b34a61381b341b8765fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericmatrix#QMatrix3x3-typedef&quot;&gt;QMatrix3x3&lt;/a&gt; QQuaternion::toRotationMatrix() const</source>
          <target state="translated">&lt;a href=&quot;qgenericmatrix#QMatrix3x3-typedef&quot;&gt;QMatrix3x3&lt;/a&gt; QQuaternion :: toRotationMatrix（）常量</target>
        </trans-unit>
        <trans-unit id="e70ddc8c0b9416dfc076aff202130af089142ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt; QMetaObject::Q_RETURN_ARG(</source>
          <target state="translated">&lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt; QMetaObject :: Q_RETURN_ARG（</target>
        </trans-unit>
        <trans-unit id="effdd6ba99844168309793784fe8fdb8727d1859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt;Q_RETURN_ARG(</source>
          <target state="translated">&lt;a href=&quot;qgenericreturnargument&quot;&gt;QGenericReturnArgument&lt;/a&gt;Q_RETURN_ARG(</target>
        </trans-unit>
        <trans-unit id="5f7e8348261e29de6763a87bb8839fd89f59c3a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; QGeoLocation::address() const</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; QGeoLocation :: address（）const</target>
        </trans-unit>
        <trans-unit id="43c166abde74868638c14600569aacb583dfa07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#QGeoAddress&quot;&gt;QGeoAddress&lt;/a&gt; &amp;amp;QGeoAddress::operator=(const &lt;a href=&quot;qgeoaddress#QGeoAddress&quot;&gt;QGeoAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#QGeoAddress&quot;&gt;QGeoAddress&lt;/a&gt;＆QGeoAddress :: operator =（const &lt;a href=&quot;qgeoaddress#QGeoAddress&quot;&gt;QGeoAddress&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fb51eec5b0ca3d10f858f934f73888ec0ce6c2b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#city&quot;&gt;QGeoAddress::city&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#city&quot;&gt;QGeoAddress::city&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4523b81512e0cc06fa6f9b6f135ababa62f90722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#country&quot;&gt;QGeoAddress::country&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#country&quot;&gt;QGeoAddress::country&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4521b21192a82a0da6f267eda0f457aecaee3e83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#countryCode&quot;&gt;QGeoAddress::countryCode&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#countryCode&quot;&gt;QGeoAddress::countryCode&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d08124dedf363ab321bdf6c8cedf4e816fe4adcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#district&quot;&gt;QGeoAddress::district&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#district&quot;&gt;QGeoAddress::district&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d9e6914cf8bbdac0a53d73f10d4580ba6389953e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#postalCode&quot;&gt;QGeoAddress::postalCode&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#postalCode&quot;&gt;QGeoAddress::postalCode&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="31733cc730e7e8444b2bd02060c1bddd3a171bf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#state&quot;&gt;QGeoAddress::state&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#state&quot;&gt;QGeoAddress::state&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1054eeeec17d0e484da07cc6a5a1a9d070ca8369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoaddress#street&quot;&gt;QGeoAddress::street&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoaddress#street&quot;&gt;QGeoAddress::street&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0f1043101f094149bb6a2c792dbe0538dd2fb96a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; instances can be made persistent. A persistent monitor continues to be active even when the application managing the monitor is not running.</source>
          <target state="translated">&lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;&lt;/a&gt;可以使QGeoAreaMonitorInfo实例具有持久性。即使管理监视器的应用程序未运行，持久性监视器也将继续处于活动状态。</target>
        </trans-unit>
        <trans-unit id="6ee5ffea830e5b8094378fcaf5ec6a7ebce6ddc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoareamonitorinfo#QGeoAreaMonitorInfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;QGeoAreaMonitorInfo::operator=(const &lt;a href=&quot;qgeoareamonitorinfo#QGeoAreaMonitorInfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoareamonitorinfo#QGeoAreaMonitorInfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;和QGeoAreaMonitorInfo :: operator =（const &lt;a href=&quot;qgeoareamonitorinfo#QGeoAreaMonitorInfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fc384a4e383165a49529646c3a6b41bd23174b3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt;, &lt;a href=&quot;qgeopath&quot;&gt;QGeoPath&lt;/a&gt;, &lt;a href=&quot;qgeopolygon&quot;&gt;QGeoPolygon&lt;/a&gt;, and &lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt;，&lt;a href=&quot;qgeopath&quot;&gt;QGeoPath&lt;/a&gt;，&lt;a href=&quot;qgeopolygon&quot;&gt;QGeoPolygon&lt;/a&gt;和&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bcca3a5b0efb3260d64a6c92d2d5974a8f50987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt; &amp;amp;QGeoCircle::operator=(const &lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt;＆QGeoCircle :: operator =（const &lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5fd902d17d1c2707bab41032f258f420f38b43ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt; QGeoCircle::translated(double</source>
          <target state="translated">&lt;a href=&quot;qgeocircle#QGeoCircle&quot;&gt;QGeoCircle&lt;/a&gt; QGeoCircle :: translated（double</target>
        </trans-unit>
        <trans-unit id="a87a1aff1d1aa8f6951d37493c021d8653abfa47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; *QGeoCodingManager::geocode(const &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; * QGeoCodingManager :: geocode（const &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a4e71742701de3d31614bdaa25a251bdd023c21c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; *QGeoCodingManager::geocode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; * QGeoCodingManager :: geocode（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="85ba34fef80a5b1f1a798ebdc0fac2a1fb78e400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; *QGeoCodingManager::reverseGeocode(const &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; * QGeoCodingManager :: reverseGeocode（const &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e4284556a74d87b275712bb964c520b8a1d47d3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::Error&lt;/a&gt; QGeoCodeReply::error() const</source>
          <target state="translated">&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply :: Error&lt;/a&gt; QGeoCodeReply :: error（）const</target>
        </trans-unit>
        <trans-unit id="e06107314a8f4b1fea7291486792841185de88eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; *QGeoServiceProvider::geocodingManager() const</source>
          <target state="translated">&lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; * QGeoServiceProvider :: geocodingManager（）const</target>
        </trans-unit>
        <trans-unit id="e66cc114d723206150b81264578d111c538dafa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoCircle::center() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoCircle :: center（）const</target>
        </trans-unit>
        <trans-unit id="5675f4776c92a7fbdde83304340197fdb4a3210a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoLocation::coordinate() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoLocation :: coordinate（）const</target>
        </trans-unit>
        <trans-unit id="839e963fb8866f80076beb8d7a57679dd58c38ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoManeuver::position() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoManeuver :: position（）const</target>
        </trans-unit>
        <trans-unit id="1b7951d4c4a8e234e75bfc5e855c39a8d744b8aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoManeuver::waypoint() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoManeuver :: waypoint（）const</target>
        </trans-unit>
        <trans-unit id="3ba57b92ae9d32e7434e283e6a8ebb9c34e79803" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPath::coordinateAt(int</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPath :: coordinateAt（int</target>
        </trans-unit>
        <trans-unit id="c5f01059c0761626a5cb145e30eac2a5f74d1a8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPolygon::coordinateAt(int</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPolygon :: coordinateAt（int</target>
        </trans-unit>
        <trans-unit id="2f0da3a091c17b6a549cae29c04c3a8e9883dc85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPositionInfo::coordinate() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoPositionInfo :: coordinate（）const</target>
        </trans-unit>
        <trans-unit id="330154f6391d2f7e640a1aaec47aeda4f72d8684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle::bottomLeft() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle :: bottomLeft（）const</target>
        </trans-unit>
        <trans-unit id="800e42a1329ed33c71f0bfd59b3f8e3ad4739a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle::bottomRight() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle :: bottomRight（）const</target>
        </trans-unit>
        <trans-unit id="1d00f53119e670d2ce3eea357aefeb760ddd5c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle::center() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle :: center（）const</target>
        </trans-unit>
        <trans-unit id="afa2d52c26679cd17d7d0431607a839adc140925" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle::topLeft() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle :: topLeft（）const</target>
        </trans-unit>
        <trans-unit id="41784b0941b7e922a1123818143d78e32f0b369c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle::topRight() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoRectangle :: topRight（）const</target>
        </trans-unit>
        <trans-unit id="5adafbba9c896b1fd336751cc11e6a95423bed13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoShape::center() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoShape :: center（）const</target>
        </trans-unit>
        <trans-unit id="f74a95e8f6528322a5e9b4397d61905bc1783955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate#CoordinateType-enum&quot;&gt;QGeoCoordinate::CoordinateType&lt;/a&gt; QGeoCoordinate::type() const</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate#CoordinateType-enum&quot;&gt;QGeoCoordinate :: CoordinateType&lt;/a&gt; QGeoCoordinate :: type（）const</target>
        </trans-unit>
        <trans-unit id="d053f0c967896b3b49d6fa445633ab45903c088a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; &amp;amp;QGeoCoordinate::operator=(const &lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt;＆QGeoCoordinate :: operator =（const &lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="897cdca47c66cf983faf285784102a5fa3b38a09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoCoordinate::atDistanceAndAzimuth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoCoordinate :: atDistanceAndAzimuth（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0c697f6a8cdd712b03243753306e539cab44d2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeocoordinate#QGeoCoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; QGeoCoordinate::atDistanceAndAzimuth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674d3b5041e5c5d8322e82e18e349c473f24925f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; QPlace::location() const</source>
          <target state="translated">&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; QPlace :: location（）常量</target>
        </trans-unit>
        <trans-unit id="a6f63a11a40816494f191018e9dc4153a9276a87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeolocation#QGeoLocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;QGeoLocation::operator=(const &lt;a href=&quot;qgeolocation#QGeoLocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeolocation#QGeoLocation&quot;&gt;QGeoLocation&lt;/a&gt;＆QGeoLocation :: operator =（const &lt;a href=&quot;qgeolocation#QGeoLocation&quot;&gt;QGeoLocation&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fb9925d8302700dddaa598d079e1361d6dc74a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt; QGeoRouteSegment::maneuver() const</source>
          <target state="translated">&lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt; QGeoRouteSegment :: maneuver（）const</target>
        </trans-unit>
        <trans-unit id="8169f97b3e761fbb35a150925754e2c9d914fb58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeomaneuver#InstructionDirection-enum&quot;&gt;QGeoManeuver::InstructionDirection&lt;/a&gt; QGeoManeuver::direction() const</source>
          <target state="translated">&lt;a href=&quot;qgeomaneuver#InstructionDirection-enum&quot;&gt;QGeoManeuver :: InstructionDirection&lt;/a&gt; QGeoManeuver :: direction（）const</target>
        </trans-unit>
        <trans-unit id="651f5936ca2ee31edf63889d697204818b5cf7e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeomaneuver#QGeoManeuver&quot;&gt;QGeoManeuver&lt;/a&gt; &amp;amp;QGeoManeuver::operator=(const &lt;a href=&quot;qgeomaneuver#QGeoManeuver&quot;&gt;QGeoManeuver&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeomaneuver#QGeoManeuver&quot;&gt;QGeoManeuver&lt;/a&gt;＆QGeoManeuver :: operator =（const &lt;a href=&quot;qgeomaneuver#QGeoManeuver&quot;&gt;QGeoManeuver&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="66ee7405e8a425661cd12d1401e255e11e185493" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt; &amp;amp;QGeoPath::operator=(const &lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt;＆QGeoPath :: operator =（const &lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b84b2913107b75914b0ea10f3678e93498f9f985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt; QGeoPath::translated(double</source>
          <target state="translated">&lt;a href=&quot;qgeopath#QGeoPath&quot;&gt;QGeoPath&lt;/a&gt; QGeoPath :: translated（double</target>
        </trans-unit>
        <trans-unit id="140d6edf447530d9825d2a80ad87b4ab549eef67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt; &amp;amp;QGeoPolygon::operator=(const &lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt;＆QGeoPolygon :: operator =（const &lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="af581b9b902475bf79333f04b8eaa37ee68297b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt; QGeoPolygon::translated(double</source>
          <target state="translated">&lt;a href=&quot;qgeopolygon#QGeoPolygon&quot;&gt;QGeoPolygon&lt;/a&gt; QGeoPolygon :: translated（double</target>
        </trans-unit>
        <trans-unit id="db2bfdb74b7165e217cbd75e19b784486b3149ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfo#QGeoPositionInfo&quot;&gt;QGeoPositionInfo&lt;/a&gt; &amp;amp;QGeoPositionInfo::operator=(const &lt;a href=&quot;qgeopositioninfo#QGeoPositionInfo&quot;&gt;QGeoPositionInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfo#QGeoPositionInfo&quot;&gt;QGeoPositionInfo&lt;/a&gt;＆QGeoPositionInfo :: operator =（const &lt;a href=&quot;qgeopositioninfo#QGeoPositionInfo&quot;&gt;QGeoPositionInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c532095eb870c10f1793ae61bcf6ada695ae5e67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;QGeoPositionInfoSource::PositioningMethods&lt;/a&gt; QGeoPositionInfoSource::preferredPositioningMethods() const</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;QGeoPositionInfoSource :: PositioningMethods&lt;/a&gt; QGeoPositionInfoSource :: preferredPositioningMethods（）const</target>
        </trans-unit>
        <trans-unit id="5364938b7d6607669cded543a89bfa52bfc6106d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfosource#setPreferredPositioningMethods&quot;&gt;QGeoPositionInfoSource::setPreferredPositioningMethods&lt;/a&gt;() enables client applications to request that a certain type of positioning method be used. For example, if the application prefers to use only satellite positioning, which offers fairly precise outdoor positioning but can be a heavy user of power resources, it can call this method with the &lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;QGeoPositionInfoSource::SatellitePositioningMethods&lt;/a&gt; value. However, this method should only be used in specialized client applications; in most cases, the default positioning methods should not be changed, as a source may internally use a variety of positioning methods that can be useful to the application.</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosource#setPreferredPositioningMethods&quot;&gt;QGeoPositionInfoSource :: setPreferredPositioningMethods&lt;/a&gt;（）使客户端应用程序可以请求使用某种类型的定位方法。例如，如果应用程序偏爱仅使用卫星定位，该定位提供了相当精确的室外定位，但可能会&lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;消耗&lt;/a&gt;大量能源，则可以使用QGeoPositionInfoSource :: SatellitePositioningMethods值调用此方法。但是，此方法仅应在专门的客户端应用程序中使用。在大多数情况下，不应更改默认的定位方法，因为源可能会在内部使用对应用程序有用的各种定位方法。</target>
        </trans-unit>
        <trans-unit id="199b4dbd2883c302098f7397fca1fe43d0ba441f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfosourcefactory#areaMonitor&quot;&gt;QGeoPositionInfoSourceFactory::areaMonitor&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosourcefactory#areaMonitor&quot;&gt;QGeoPositionInfoSourceFactory::areaMonitor&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="2a8e77626d08ccf796b5352013842c0e959f5959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfosourcefactory#positionInfoSource&quot;&gt;QGeoPositionInfoSourceFactory::positionInfoSource&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosourcefactory#positionInfoSource&quot;&gt;QGeoPositionInfoSourceFactory::positionInfoSource&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8bcbb484f21e5af3e8ff36bbc954a2da49f34a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeopositioninfosourcefactory#satelliteInfoSource&quot;&gt;QGeoPositionInfoSourceFactory::satelliteInfoSource&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosourcefactory#satelliteInfoSource&quot;&gt;QGeoPositionInfoSourceFactory::satelliteInfoSource&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="7dc5e85d99cf3f1c71c703b57a73d259a54b5dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoLocation::boundingBox() const</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoLocation :: boundingBox（）const</target>
        </trans-unit>
        <trans-unit id="320971047685ada18dcd1a7b26578b4fa8d98c7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRoute::bounds() const</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRoute :: bounds（）常量</target>
        </trans-unit>
        <trans-unit id="c4433fa741b831dc0d7a143ac58408192e248945" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoShape::boundingGeoRectangle() const</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoShape :: boundingGeoRectangle（）const</target>
        </trans-unit>
        <trans-unit id="ad9d231ea3ced57dca7b11efde22612e1af776c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;QGeoRectangle::operator=(const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆QGeoRectangle :: operator =（const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="224ffff1badf144901ba2259ee60262caf7705d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;QGeoRectangle::operator|=(const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆QGeoRectangle :: operator | =（const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0a65c169cd7cc62ccb1a5b925635c101266c7bbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle::operator|(const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle :: operator |（const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="48b4d3b052661b159f5a180a5ee04c94cd183d14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle::translated(double</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle :: translated（double</target>
        </trans-unit>
        <trans-unit id="1f425ded0823e734b57d96406418eca12331d16b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle::united(const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt; QGeoRectangle :: united（const &lt;a href=&quot;qgeorectangle#QGeoRectangle&quot;&gt;QGeoRectangle&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="31e0400975927f461bc291cb502efcc206db1913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt; &amp;amp;QGeoRoute::operator=(const &lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt;＆QGeoRoute :: operator =（const &lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="110ca6e059e0f1ce6c342adf51fc5a78ea7cd45d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt; QGeoRouteLeg::overallRoute() const</source>
          <target state="translated">&lt;a href=&quot;qgeoroute#QGeoRoute&quot;&gt;QGeoRoute&lt;/a&gt; QGeoRouteLeg :: overallRoute（）常量</target>
        </trans-unit>
        <trans-unit id="c23952082d024d7e58cf13e34cd47ffc70bf40f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; *QGeoRoutingManager::calculateRoute(const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; * QGeoRoutingManager :: calculateRoute（const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="caf70858a51afba13f659de85f916a5024d94273" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; *QGeoRoutingManager::updateRoute(const &lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; * QGeoRoutingManager :: updateRoute（const &lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="99c02a665b410ae2958419af8741c06d6024dbb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::Error&lt;/a&gt; QGeoRouteReply::error() const</source>
          <target state="translated">&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply :: Error&lt;/a&gt; QGeoRouteReply :: error（）const</target>
        </trans-unit>
        <trans-unit id="dd1799b59892edcb1c9957b5f5a10aee2766c9f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; QGeoRoute::request() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; QGeoRoute :: request（）常量</target>
        </trans-unit>
        <trans-unit id="10f134c2fd40825133a99fceac6743288a6c42c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; QGeoRouteReply::request() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; QGeoRouteReply :: request（）常量</target>
        </trans-unit>
        <trans-unit id="7cb2c8abb74625787e57789fa51495b96bb99445" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest::FeatureTypes&lt;/a&gt; QGeoRoutingManager::supportedFeatureTypes() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest :: FeatureTypes&lt;/a&gt; QGeoRoutingManager :: supportedFeatureTypes（）const</target>
        </trans-unit>
        <trans-unit id="112f1639c5545b1fd36ed86808af9b2c01d9ab42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest::FeatureTypes&lt;/a&gt; QGeoRoutingManagerEngine::supportedFeatureTypes() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest :: FeatureTypes&lt;/a&gt; QGeoRoutingManagerEngine :: supportedFeatureTypes（）const</target>
        </trans-unit>
        <trans-unit id="4f3ddc8493ccb4f2d4c9cad31be4cf807f141018" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest::FeatureWeight&lt;/a&gt; QGeoRouteRequest::featureWeight(&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest::FeatureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest :: FeatureWeight&lt;/a&gt; QGeoRouteRequest :: featureWeight（&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest :: FeatureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1ef9dc7f74c56b6eabaf6f906057a76880d9d2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest::FeatureWeights&lt;/a&gt; QGeoRoutingManager::supportedFeatureWeights() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest :: FeatureWeights&lt;/a&gt; QGeoRoutingManager :: supportedFeatureWeights（）const</target>
        </trans-unit>
        <trans-unit id="0fb347b046745e61bf8fd878ae1e7c3ed732aaf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest::FeatureWeights&lt;/a&gt; QGeoRoutingManagerEngine::supportedFeatureWeights() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest :: FeatureWeights&lt;/a&gt; QGeoRoutingManagerEngine :: supportedFeatureWeights（）const</target>
        </trans-unit>
        <trans-unit id="6388ba022ddd5b615877069bdaa311d0b02c0bd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest::ManeuverDetail&lt;/a&gt; QGeoRouteRequest::maneuverDetail() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest :: ManeuverDetail&lt;/a&gt; QGeoRouteRequest :: maneuverDetail（）常量</target>
        </trans-unit>
        <trans-unit id="dd25f8884f16c8cd0f61438642d7eb63003833a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest::ManeuverDetails&lt;/a&gt; QGeoRoutingManager::supportedManeuverDetails() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest :: ManeuverDetails&lt;/a&gt; QGeoRoutingManager :: supportedManeuverDetails（）const</target>
        </trans-unit>
        <trans-unit id="b3a3cef212f0b965fae5dc42cf5a791a26aa503b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest::ManeuverDetails&lt;/a&gt; QGeoRoutingManagerEngine::supportedManeuverDetails() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest :: ManeuverDetails&lt;/a&gt; QGeoRoutingManagerEngine :: supportedManeuverDetails（）const</target>
        </trans-unit>
        <trans-unit id="868ce037f37606b4ca23faf595c92863782508cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#QGeoRouteRequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;QGeoRouteRequest::operator=(const &lt;a href=&quot;qgeorouterequest#QGeoRouteRequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#QGeoRouteRequest&quot;&gt;QGeoRouteRequest&lt;/a&gt;＆QGeoRouteRequest :: operator =（const &lt;a href=&quot;qgeorouterequest#QGeoRouteRequest&quot;&gt;QGeoRouteRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="34aaac8c62c253cb5b3f004964e9dcb392967a1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest::RouteOptimizations&lt;/a&gt; QGeoRouteRequest::routeOptimization() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest :: RouteOptimizations&lt;/a&gt; QGeoRouteRequest :: routeOptimization（）常量</target>
        </trans-unit>
        <trans-unit id="7abebf9293e3aed775359224cc68c51e0f01e65d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest::RouteOptimizations&lt;/a&gt; QGeoRoutingManager::supportedRouteOptimizations() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest :: RouteOptimizations&lt;/a&gt; QGeoRoutingManager :: supportedRouteOptimizations（）常量</target>
        </trans-unit>
        <trans-unit id="df02d138d7ad972916d83b162a41c1c1142bbe35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest::RouteOptimizations&lt;/a&gt; QGeoRoutingManagerEngine::supportedRouteOptimizations() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest :: RouteOptimizations&lt;/a&gt; QGeoRoutingManagerEngine :: supportedRouteOptimizations（）常量</target>
        </trans-unit>
        <trans-unit id="ad06c5c165c79c9f87ac3614f8e8a06698210c8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest::SegmentDetail&lt;/a&gt; QGeoRouteRequest::segmentDetail() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest :: SegmentDetail&lt;/a&gt; QGeoRouteRequest :: segmentDetail（）常量</target>
        </trans-unit>
        <trans-unit id="32ac72f3cc9f5c831fd76af42634a645072c5497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest::SegmentDetails&lt;/a&gt; QGeoRoutingManager::supportedSegmentDetails() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest :: SegmentDetails&lt;/a&gt; QGeoRoutingManager :: supportedSegmentDetails（）const</target>
        </trans-unit>
        <trans-unit id="6a4b6d6a9f670a4a767356e2a169b8e054844ce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest::SegmentDetails&lt;/a&gt; QGeoRoutingManagerEngine::supportedSegmentDetails() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest :: SegmentDetails&lt;/a&gt; QGeoRoutingManagerEngine :: supportedSegmentDetails（）const</target>
        </trans-unit>
        <trans-unit id="b745c5cd892c910e5ec286a957763bf3b2f776ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest::TravelMode&lt;/a&gt; QGeoRoute::travelMode() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest :: TravelMode&lt;/a&gt; QGeoRoute :: travelMode（）常量</target>
        </trans-unit>
        <trans-unit id="dea6e0fabe075a39ced288825521ef58175f1452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest::TravelModes&lt;/a&gt; QGeoRouteRequest::travelModes() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest :: TravelModes&lt;/a&gt; QGeoRouteRequest :: travelModes（）const</target>
        </trans-unit>
        <trans-unit id="88793222f31f9b9ba9ae5a5b81c8c19c279254d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest::TravelModes&lt;/a&gt; QGeoRoutingManager::supportedTravelModes() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest :: TravelModes&lt;/a&gt; QGeoRoutingManager :: supportedTravelModes（）const</target>
        </trans-unit>
        <trans-unit id="0411c27f1d0176adf9f52f182bd536c85ba6e829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest::TravelModes&lt;/a&gt; QGeoRoutingManagerEngine::supportedTravelModes() const</source>
          <target state="translated">&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest :: TravelModes&lt;/a&gt; QGeoRoutingManagerEngine :: supportedTravelModes（）const</target>
        </trans-unit>
        <trans-unit id="bb480f0809c4bdb7ec8c6bb5485a37d7fd12e88c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; QGeoRoute::firstRouteSegment() const</source>
          <target state="translated">&lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; QGeoRoute :: firstRouteSegment（）常量</target>
        </trans-unit>
        <trans-unit id="3763e21580f1de04b5f913832644f6369deb262c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; instances can be thought of as edges on a routing graph, with &lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt; instances as optional labels attached to the vertices of the graph.</source>
          <target state="translated">&lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt;实例可以被认为是在一个路由图的边，以&lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt;实例作为连接到图的顶点可选标签。</target>
        </trans-unit>
        <trans-unit id="682c6da58752f19f452a6c6f6d0cdd10a72f5f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; instances can be thought of as edges on a routing graph, with QGeoManeuver instances as optional labels attached to the vertices of the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6439b81162a7c19b5378b8556548694ef1eef67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; &amp;amp;QGeoRouteSegment::operator=(const &lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt;和QGeoRouteSegment :: operator =（const &lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a0340852b26a5fb002d9ad9c69502c6b68c2ba45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; QGeoRouteSegment::nextRouteSegment() const</source>
          <target state="translated">&lt;a href=&quot;qgeoroutesegment#QGeoRouteSegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; QGeoRouteSegment :: nextRouteSegment（）常量</target>
        </trans-unit>
        <trans-unit id="6870966997b2e6eb8d6f3c654824e8472b03e2bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; *QGeoServiceProvider::routingManager() const</source>
          <target state="translated">&lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; * QGeoServiceProvider :: routingManager（）const</target>
        </trans-unit>
        <trans-unit id="b7e99ec527e3b969096ce2d52ec6ce371f3bac22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeosatelliteinfo#QGeoSatelliteInfo&quot;&gt;QGeoSatelliteInfo&lt;/a&gt; &amp;amp;QGeoSatelliteInfo::operator=(const &lt;a href=&quot;qgeosatelliteinfo#QGeoSatelliteInfo&quot;&gt;QGeoSatelliteInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeosatelliteinfo#QGeoSatelliteInfo&quot;&gt;QGeoSatelliteInfo&lt;/a&gt;＆QGeoSatelliteInfo :: operator =（const &lt;a href=&quot;qgeosatelliteinfo#QGeoSatelliteInfo&quot;&gt;QGeoSatelliteInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="12aa2409dc4d04c941b0b0242e295fa5ec82caa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeosatelliteinfo#SatelliteSystem-enum&quot;&gt;QGeoSatelliteInfo::SatelliteSystem&lt;/a&gt; QGeoSatelliteInfo::satelliteSystem() const</source>
          <target state="translated">&lt;a href=&quot;qgeosatelliteinfo#SatelliteSystem-enum&quot;&gt;QGeoSatelliteInfo :: SatelliteSystem&lt;/a&gt; QGeoSatelliteInfo :: satelliteSystem（）const</target>
        </trans-unit>
        <trans-unit id="650dfcca859d6aa5e8ea4209db3f77f2581263ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::error() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: error（）常量</target>
        </trans-unit>
        <trans-unit id="bdaaef44383b6e4f41ec241a3ace89ceaaad7d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::geocodingError() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: geocodingError（）const</target>
        </trans-unit>
        <trans-unit id="ae73d30a6191ea5d0ff50e8bb7a17a15c3a1ff21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::mappingError() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: mappingError（）常量</target>
        </trans-unit>
        <trans-unit id="c5635b9f95029716bd5c42b86a462b7ae899a4ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::navigationError() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: navigationError（）const</target>
        </trans-unit>
        <trans-unit id="91814d65d454335698304eccbfd20952ff854f0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::placesError() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: placesError（）const</target>
        </trans-unit>
        <trans-unit id="d3354f7c12daef22ffe2da3a39ccaaf29e40ff97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider::Error&lt;/a&gt; QGeoServiceProvider::routingError() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#Error-enum&quot;&gt;QGeoServiceProvider :: Error&lt;/a&gt; QGeoServiceProvider :: routingError（）常量</target>
        </trans-unit>
        <trans-unit id="03a55b09a73cd17bb32ff3595ce6a6491e08d2c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#GeocodingFeature-enum&quot;&gt;QGeoServiceProvider::GeocodingFeatures&lt;/a&gt; QGeoServiceProvider::geocodingFeatures() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#GeocodingFeature-enum&quot;&gt;QGeoServiceProvider :: GeocodingFeatures&lt;/a&gt; QGeoServiceProvider :: geocodingFeatures（）const</target>
        </trans-unit>
        <trans-unit id="3c9f1429cf449c5344415e1db774fd5783dcf926" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#MappingFeature-enum&quot;&gt;QGeoServiceProvider::MappingFeatures&lt;/a&gt; QGeoServiceProvider::mappingFeatures() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#MappingFeature-enum&quot;&gt;QGeoServiceProvider :: MappingFeatures&lt;/a&gt; QGeoServiceProvider :: mappingFeatures（）const</target>
        </trans-unit>
        <trans-unit id="e84d671155ac5406c5ed89ccb84982a3dae85e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#NavigationFeature-enum&quot;&gt;QGeoServiceProvider::NavigationFeatures&lt;/a&gt; QGeoServiceProvider::navigationFeatures() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#NavigationFeature-enum&quot;&gt;QGeoServiceProvider :: NavigationFeatures&lt;/a&gt; QGeoServiceProvider :: navigationFeatures（）const</target>
        </trans-unit>
        <trans-unit id="14f40ab5562a886e93ccae2050e8e662c37eb295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#PlacesFeature-enum&quot;&gt;QGeoServiceProvider::PlacesFeatures&lt;/a&gt; QGeoServiceProvider::placesFeatures() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#PlacesFeature-enum&quot;&gt;QGeoServiceProvider :: PlacesFeatures&lt;/a&gt; QGeoServiceProvider :: placesFeatures（）const</target>
        </trans-unit>
        <trans-unit id="0e75ca3c5f30cc02659f327eda5ce2e95e334881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceprovider#RoutingFeature-enum&quot;&gt;QGeoServiceProvider::RoutingFeatures&lt;/a&gt; QGeoServiceProvider::routingFeatures() const</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceprovider#RoutingFeature-enum&quot;&gt;QGeoServiceProvider :: RoutingFeatures&lt;/a&gt; QGeoServiceProvider :: routingFeatures（）const</target>
        </trans-unit>
        <trans-unit id="f62bcad0b4a35d270cdcaa994827f934d3c1a58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceproviderfactory#createGeocodingManagerEngine&quot;&gt;QGeoServiceProviderFactory::createGeocodingManagerEngine&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceproviderfactory#createGeocodingManagerEngine&quot;&gt;QGeoServiceProviderFactory::createGeocodingManagerEngine&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="082a88e6fff6fdcfb503a5e21dd255872b1f1dc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceproviderfactory#createPlaceManagerEngine&quot;&gt;QGeoServiceProviderFactory::createPlaceManagerEngine&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceproviderfactory#createPlaceManagerEngine&quot;&gt;QGeoServiceProviderFactory::createPlaceManagerEngine&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="44075edf6285582a435d32b060b953872fc36888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoserviceproviderfactory#createRoutingManagerEngine&quot;&gt;QGeoServiceProviderFactory::createRoutingManagerEngine&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgeoserviceproviderfactory#createRoutingManagerEngine&quot;&gt;QGeoServiceProviderFactory::createRoutingManagerEngine&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1b2a492d64b79cf4bf9f7bec099243c9c026ccf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QGeoAreaMonitorInfo::area() const</source>
          <target state="translated">&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QGeoAreaMonitorInfo :: area（）常量</target>
        </trans-unit>
        <trans-unit id="1405d7451e51969372a71e4f8b8ce4428461fcb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QGeoCodeReply::viewport() const</source>
          <target state="translated">&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QGeoCodeReply :: viewport（）常量</target>
        </trans-unit>
        <trans-unit id="43d2789e90853adc74e0b0e235fb27c2c212c848" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QPlaceSearchRequest::searchArea() const</source>
          <target state="translated">&lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; QPlaceSearchRequest :: searchArea（）const</target>
        </trans-unit>
        <trans-unit id="4287d72985feb1c5959ccab33601f7639aaafcf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;QGeoShape::operator=(const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt;＆QGeoShape :: operator =（const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="84c8da0f749b48442b650687d85bf0c3ef49a5b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgeoshape#ShapeType-enum&quot;&gt;QGeoShape::ShapeType&lt;/a&gt; QGeoShape::type() const</source>
          <target state="translated">&lt;a href=&quot;qgeoshape#ShapeType-enum&quot;&gt;QGeoShape :: ShapeType&lt;/a&gt; QGeoShape :: type（）const</target>
        </trans-unit>
        <trans-unit id="2f6f9fd54c8c056fb312ae4e996de7a3451d5862" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; *QGestureEvent::gesture(&lt;a href=&quot;qt#GestureType-enum&quot;&gt;Qt::GestureType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; * QGestureEvent :: gesture（&lt;a href=&quot;qt#GestureType-enum&quot;&gt;Qt :: GestureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ea4e72c45eb382b306657a0167f2f258f210827" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; objects are created by gesture recognizers in the &lt;a href=&quot;qgesturerecognizer#create&quot;&gt;QGestureRecognizer::create&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;对象由&lt;a href=&quot;qgesturerecognizer#create&quot;&gt;QGestureRecognizer :: create&lt;/a&gt;（）函数中的手势识别器创建。</target>
        </trans-unit>
        <trans-unit id="23019151b298719a0607c9df793644f220dba615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::CoordinateMode&lt;/a&gt; QGradient::coordinateMode() const</source>
          <target state="translated">&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: CoordinateMode&lt;/a&gt; QGradient :: coordinateMode（）const</target>
        </trans-unit>
        <trans-unit id="c6b2687899f9bedb60d5c8cfb18e327280203c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgradient#QGradientStops-typedef&quot;&gt;QGradientStops&lt;/a&gt; QGradient::stops() const</source>
          <target state="translated">&lt;a href=&quot;qgradient#QGradientStops-typedef&quot;&gt;QGradientStops&lt;/a&gt; QGradient :: stops（）常量</target>
        </trans-unit>
        <trans-unit id="eb910395cdbc165f76cd00333d8d852e070e2ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgradient#Spread-enum&quot;&gt;PadSpread&lt;/a&gt; (default)</source>
          <target state="translated">&lt;a href=&quot;qgradient#Spread-enum&quot;&gt;PadSpread&lt;/a&gt;（默认）</target>
        </trans-unit>
        <trans-unit id="3d35f42017671fd8ca0d73ca40e6235fdf5521ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgradient#Spread-enum&quot;&gt;QGradient::Spread&lt;/a&gt; QGradient::spread() const</source>
          <target state="translated">&lt;a href=&quot;qgradient#Spread-enum&quot;&gt;QGradient :: Spread&lt;/a&gt; QGradient :: spread（）const</target>
        </trans-unit>
        <trans-unit id="faa707f8959e178ccf6254d177a509ffb06cbba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgradient#Type-enum&quot;&gt;QGradient::Type&lt;/a&gt; QGradient::type() const</source>
          <target state="translated">&lt;a href=&quot;qgradient#Type-enum&quot;&gt;QGradient :: Type&lt;/a&gt; QGradient :: type（）const</target>
        </trans-unit>
        <trans-unit id="63a4a3f57b56cafd02cca847dc7d3719288d84d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt; *QGraphicsAnchorLayout::addAnchor(&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt; * QGraphicsAnchorLayout :: addAnchor（&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="913d6c58e3cc2016d4ece38128e26df8979b7a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt; *QGraphicsAnchorLayout::anchor(&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt; * QGraphicsAnchorLayout :: anchor（&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3d4a1040fb60fb28c461a4e5ab289688df5491c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt; does not support negative spacings. Setting a negative value will unset the previous spacing and make the layout use the spacing provided by the current widget style.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt;不支持负间距。设置为负值将取消设置先前的间距，并使布局使用当前小部件样式提供的间距。</target>
        </trans-unit>
        <trans-unit id="b34ff1fc90181cebe3a0c4fcba4e3cb30322b19e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt; respects each item's size hints and size policies. Note that there are some properties of &lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; that are &lt;a href=&quot;qgraphicsanchorlayout#known-issues&quot;&gt;not respected&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt;遵守每个项目的大小提示和大小策略。请注意，有一些特性&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt;那些&lt;a href=&quot;qgraphicsanchorlayout#known-issues&quot;&gt;不尊重&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2c1d0f083f4c26fae888023043c455b92e99b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt;, &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;, and &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt;，&lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;和&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c3016efe063edd6aba2747dd0ca26ef4cb12f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsblureffect&quot;&gt;QGraphicsBlurEffect&lt;/a&gt; - blurs the item by a given radius</source>
          <target state="translated">&lt;a href=&quot;qgraphicsblureffect&quot;&gt;QGraphicsBlurEffect-&lt;/a&gt;以给定的半径模糊项目</target>
        </trans-unit>
        <trans-unit id="fdf2c7b2b9ae7b33706bbf5855c32005f86d8741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsblureffect&quot;&gt;QGraphicsBlurEffect&lt;/a&gt;, &lt;a href=&quot;qgraphicscolorizeeffect&quot;&gt;QGraphicsColorizeEffect&lt;/a&gt;, &lt;a href=&quot;qgraphicsdropshadoweffect&quot;&gt;QGraphicsDropShadowEffect&lt;/a&gt;, and &lt;a href=&quot;qgraphicsopacityeffect&quot;&gt;QGraphicsOpacityEffect&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsblureffect&quot;&gt;QGraphicsBlurEffect&lt;/a&gt;，&lt;a href=&quot;qgraphicscolorizeeffect&quot;&gt;QGraphicsColorizeEffect&lt;/a&gt;，&lt;a href=&quot;qgraphicsdropshadoweffect&quot;&gt;QGraphicsDropShadowEffect&lt;/a&gt;和&lt;a href=&quot;qgraphicsopacityeffect&quot;&gt;QGraphicsOpacityEffect&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b7e5d040b8781782fad3178358b5d51156bc3a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicscolorizeeffect&quot;&gt;QGraphicsColorizeEffect&lt;/a&gt; - renders the item in shades of any given color</source>
          <target state="translated">&lt;a href=&quot;qgraphicscolorizeeffect&quot;&gt;QGraphicsColorizeEffect-&lt;/a&gt;以任何给定颜色的阴影渲染项目</target>
        </trans-unit>
        <trans-unit id="f7e230932d40ff7d4637db8050d12844b373cc51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsdropshadoweffect&quot;&gt;QGraphicsDropShadowEffect&lt;/a&gt; - renders a dropshadow behind the item</source>
          <target state="translated">&lt;a href=&quot;qgraphicsdropshadoweffect&quot;&gt;QGraphicsDropShadowEffect-&lt;/a&gt;在项目后面渲染阴影</target>
        </trans-unit>
        <trans-unit id="7821153044104b9b3cdb00de52e146a45ce99e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; *QGraphicsItem::graphicsEffect() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; * QGraphicsItem :: graphicsEffect（）常量</target>
        </trans-unit>
        <trans-unit id="ae4fbe8dc0354c305089532ab683d3323e419a6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; *QWidget::graphicsEffect() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; * QWidget :: graphicsEffect（）常量</target>
        </trans-unit>
        <trans-unit id="a4ca6f390930c465d5b64800769930978fec5ec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; *QGraphicsScene::addEllipse(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; * QGraphicsScene :: addEllipse（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a6177c9cab66c0632c58fac409524e542f51c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; *QGraphicsScene::addEllipse(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ab012f212803b40dbe4e59ba88d2d8bbae6dc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; *QGraphicsScene::addEllipse(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; * QGraphicsScene :: addEllipse（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6d01049149c64e578e103a4485c420b152b59f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; provides an ellipse item</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;提供一个椭圆项</target>
        </trans-unit>
        <trans-unit id="913270ce7d407c614e10e4da4a466457784857c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; respresents an ellipse with a fill and an outline, and you can also use it for ellipse segments (see &lt;a href=&quot;qgraphicsellipseitem#startAngle&quot;&gt;startAngle&lt;/a&gt;(), &lt;a href=&quot;qgraphicsellipseitem#spanAngle&quot;&gt;spanAngle&lt;/a&gt;()).</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;表示具有填充和轮廓的椭圆，您也可以将其用于椭圆段（请参见&lt;a href=&quot;qgraphicsellipseitem#startAngle&quot;&gt;startAngle&lt;/a&gt;（），&lt;a href=&quot;qgraphicsellipseitem#spanAngle&quot;&gt;spanAngle&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="0c5320638381bb6a0a817eb4307e2ee02ca7fd39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; uses the rect and the pen width to provide a reasonable implementation of &lt;a href=&quot;qgraphicsellipseitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicsellipseitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsellipseitem#contains&quot;&gt;contains&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#paint&quot;&gt;paint&lt;/a&gt;() function draws the ellipse using the item's associated pen and brush, which you can set by calling &lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;() and &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;使用rect和钢笔宽度来提供对&lt;a href=&quot;qgraphicsellipseitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicsellipseitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsellipseitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。该&lt;a href=&quot;qgraphicsellipseitem#paint&quot;&gt;涂料&lt;/a&gt;（）函数绘制使用项目的关联的画笔和画刷，你可以通过调用设置椭圆&lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;（）和&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="8640d2d846c04e4f97c1fe154a594cd53659b44a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;, &lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;, &lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;, &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;, and &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;，&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;，&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;，&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;和&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b9c9e2c5f360134e9f89f0ced915c1fd3e7200b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt; respects each item's size hints and size policies, and when a cell in the grid has more space than the items can fill, each item is arranged according to the layout's alignment for that item. You can set an alignment for each item by calling &lt;a href=&quot;qgraphicsgridlayout#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(), and check the alignment for any item by calling &lt;a href=&quot;qgraphicsgridlayout#alignment&quot;&gt;alignment&lt;/a&gt;(). You can also set the alignment for an entire row or column by calling &lt;a href=&quot;qgraphicsgridlayout#setRowAlignment&quot;&gt;setRowAlignment&lt;/a&gt;() and &lt;a href=&quot;qgraphicsgridlayout#setColumnAlignment&quot;&gt;setColumnAlignment&lt;/a&gt;() respectively. By default, items are aligned to the top left.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;遵守每个项目的大小提示和大小策略，并且当网格中的某个单元格具有大于项目可以填充的空间时，将根据该项目的布局对齐方式排列每个项目。您可以通过调用&lt;a href=&quot;qgraphicsgridlayout#setAlignment&quot;&gt;setAlignment&lt;/a&gt;（）设置每个项目的对齐方式，并通过调用&lt;a href=&quot;qgraphicsgridlayout#alignment&quot;&gt;alignment&lt;/a&gt;（）检查任何项目的对齐方式。您还可以通过分别调用&lt;a href=&quot;qgraphicsgridlayout#setRowAlignment&quot;&gt;setRowAlignment&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsgridlayout#setColumnAlignment&quot;&gt;setColumnAlignment&lt;/a&gt;（）来设置整个行或列的对齐方式。默认情况下，项目在左上方对齐。</target>
        </trans-unit>
        <trans-unit id="40572458e23aaebb60c6bfea2352ba601a694579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItemAnimation::item() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItemAnimation :: item（）const</target>
        </trans-unit>
        <trans-unit id="0ce5084c82d3bed1cced1ba592ec8e904d4a985c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsLayoutItem::graphicsItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsLayoutItem :: graphicsItem（）const</target>
        </trans-unit>
        <trans-unit id="21f8321161c59d834128e2ff5a23cfc292f496fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::activePanel() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsScene :: activePanel（）常量</target>
        </trans-unit>
        <trans-unit id="1231977c181f6aeb9e684e22ec63778110124f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::focusItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsScene :: focusItem（）常量</target>
        </trans-unit>
        <trans-unit id="026afab014fabfc2b667d991c5a7b6fb01349f62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::itemAt(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsScene :: itemAt（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="746e0f3012dc59f4e2cd00b0a680b1d7479e90b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::itemAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631055d87ff2b49525114de7aba0e7fd448ffb4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::itemAt(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsScene :: itemAt（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2f5c0f1e6ebc2454e289c4a0826e31e8d443bf5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsScene::mouseGrabberItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsScene :: mouseGrabberItem（）const</target>
        </trans-unit>
        <trans-unit id="250af4ff578f0dc50f41948fdebf47e3802cb673" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsView::itemAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsView :: itemAt（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f4129508046b087ad18a7788b07f06cdf8190377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsView::itemAt(int</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsView :: itemAt（int</target>
        </trans-unit>
        <trans-unit id="17eed1479b1fe2a2568affe1f7cf23fcee6e56e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; allows you to assign any number of &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; instances to one &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;. Each &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; is applied in order, one at a time, to the &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; it's assigned to.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;允许您将任意数量的&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;实例分配给一个&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;。每个&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;依次一次应用到分配给它的&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b96006019e473e0e5992df339f422316da0696f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; allows you to assign any number of QGraphicsTransform instances to one &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;. Each QGraphicsTransform is applied in order, one at a time, to the &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; it's assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7fe07abfff0ecebaacb0fd3414ea6679e8bfc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; is the base class for graphical items in a scene. Graphics View provides several standard items for typical shapes, such as rectangles (&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;), ellipses (&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;) and text items (&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;), but the most powerful &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; features are available when you write a custom item. Among other things, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; supports the following features:</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;是场景中图形项的基类。Graphics View为典型形状提供了几个标准项，例如矩形（&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;），椭圆（&lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;）和文本项（&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;），但是在编写自定义项时，最强大的&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;功能可用。除其他外，&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;支持以下功能：</target>
        </trans-unit>
        <trans-unit id="570cd24e0993b30c22dd1f18295242ebd073eac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; receives events from &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; through the virtual function &lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;sceneEvent&lt;/a&gt;(). This function distributes the most common events to a set of convenience event handlers:</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;的QGraphicsItem&lt;/a&gt;接收来自事件&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;通过虚拟函数&lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;sceneEvent&lt;/a&gt;（）。此函数将最常见的事件分配给一组便捷事件处理程序：</target>
        </trans-unit>
        <trans-unit id="96a7530a5b394a2c1508ad66775c6c80dd398ec0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; supports collision detection through the &lt;a href=&quot;qgraphicsitem#shape&quot;&gt;QGraphicsItem::shape&lt;/a&gt;() function, and QGraphicsItem::collidesWith(), which are both virtual functions. By returning your item's shape as a local coordinate &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; from &lt;a href=&quot;qgraphicsitem#shape&quot;&gt;QGraphicsItem::shape&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; will handle all collision detection for you. If you want to provide your own collision detection, however, you can reimplement QGraphicsItem::collidesWith().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;通过&lt;a href=&quot;qgraphicsitem#shape&quot;&gt;QGraphicsItem :: shape&lt;/a&gt;（）函数和QGraphicsItem :: collidesWith（）函数支持碰撞检测，这两个函数都是虚拟函数。通过从&lt;a href=&quot;qgraphicsitem#shape&quot;&gt;QGraphicsItem :: shape&lt;/a&gt;（）返回项目的形状作为局部坐标&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;，&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;将为您处理所有碰撞检测。但是，如果要提供自己的冲突检测，则可以重新实现QGraphicsItem :: collidesWith（）。</target>
        </trans-unit>
        <trans-unit id="6b3c30486070c4efc4a8b0f1b09cf2115c642a7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; supports projective transformations in addition to its base position, &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;(). There are several ways to change an item's transformation. For simple transformations, you can call either of the convenience functions &lt;a href=&quot;qgraphicsitem#setRotation&quot;&gt;setRotation&lt;/a&gt;() or &lt;a href=&quot;qgraphicsitem#setScale&quot;&gt;setScale&lt;/a&gt;(), or you can pass any transformation matrix to &lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;setTransform&lt;/a&gt;(). For advanced transformation control you also have the option of setting several combined transformations by calling &lt;a href=&quot;qgraphicsitem#setTransformations&quot;&gt;setTransformations&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;除了其基本位置&lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;（）外，还支持投影变换。有几种更改项目转换的方法。对于简单转换，可以调用便捷函数&lt;a href=&quot;qgraphicsitem#setRotation&quot;&gt;setRotation&lt;/a&gt;（）或&lt;a href=&quot;qgraphicsitem#setScale&quot;&gt;setScale&lt;/a&gt;（），也可以将任何转换矩阵传递给&lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;setTransform&lt;/a&gt;（）。对于高级转换控制，您还可以通过调用&lt;a href=&quot;qgraphicsitem#setTransformations&quot;&gt;setTransformations&lt;/a&gt;（）来设置多个组合转换。</target>
        </trans-unit>
        <trans-unit id="b1b10ec24a972c3cfc25951a5a41db1cbb5b9c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; takes ownership of</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;拥有所有权</target>
        </trans-unit>
        <trans-unit id="a4965b584445649dc07c09e717a83cbe9f0d7853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#CacheMode-enum&quot;&gt;QGraphicsItem::CacheMode&lt;/a&gt; QGraphicsItem::cacheMode() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#CacheMode-enum&quot;&gt;QGraphicsItem :: CacheMode&lt;/a&gt; QGraphicsItem :: cacheMode（）常量</target>
        </trans-unit>
        <trans-unit id="402ea3f12eec9b22fa47936ecb4c20a8a3a8cadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;QGraphicsItem::GraphicsItemFlags&lt;/a&gt; QGraphicsItem::flags() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;QGraphicsItem :: GraphicsItemFlags&lt;/a&gt; QGraphicsItem :: flags（）常量</target>
        </trans-unit>
        <trans-unit id="84ad645febf687c16d036e335073a96b864286b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#PanelModality-enum&quot;&gt;QGraphicsItem::PanelModality&lt;/a&gt; QGraphicsItem::panelModality() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#PanelModality-enum&quot;&gt;QGraphicsItem :: PanelModality&lt;/a&gt; QGraphicsItem :: panelModality（）const</target>
        </trans-unit>
        <trans-unit id="bfdcb5b179c495a84d6cf4ebda745dac794eafda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::commonAncestorItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: commonAncestorItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e0cbe81109aec6ed4ace8de5d7829d3913846566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::focusItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: focusItem（）const</target>
        </trans-unit>
        <trans-unit id="e456ede30a306000b5ba62ac6b93dadb9cd4bac5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::focusProxy() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: focusProxy（）const</target>
        </trans-unit>
        <trans-unit id="1afae60f01641379d2e5bcbd12da963813ceb55d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::panel() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: panel（）const</target>
        </trans-unit>
        <trans-unit id="40941a7466c86db9d7d4da3949ac292d05e797d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::parentItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: parentItem（）const</target>
        </trans-unit>
        <trans-unit id="a1bb2243dd271725272379629fd87bf6f3c72329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *QGraphicsItem::topLevelItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; * QGraphicsItem :: topLevelItem（）const</target>
        </trans-unit>
        <trans-unit id="68ee3ecaf66dc1fd8d85e98ddf1983b8f2c03368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handles context menu events</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;（）处理上下文菜单事件</target>
        </trans-unit>
        <trans-unit id="6b898cc0fa90f90d5114d73fe07a9cbef3f7c105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;() handle focus in and out events</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;（）处理焦点入和出事件</target>
        </trans-unit>
        <trans-unit id="ec5c438ab95e837d141583ba913f1d1d302249bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;() handles hover enter, move and leave events</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;（）处理悬停输入，移动和离开事件</target>
        </trans-unit>
        <trans-unit id="a3319e5f14ae02693fdfd270cb4e48b2c94a9ece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#inputMethodEvent&quot;&gt;inputMethodEvent&lt;/a&gt;() handles input events, for accessibility support</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#inputMethodEvent&quot;&gt;inputMethodEvent&lt;/a&gt;（）处理输入事件，以支持可访问性</target>
        </trans-unit>
        <trans-unit id="aa8bb98d84ed8a65ff250dd1a6cafaa8f0fd18e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;() handle key press and release events</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;（）处理按键按下和释放事件</target>
        </trans-unit>
        <trans-unit id="939c6fa6b9c09e0873dbfc8bf0847b4b11193c92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;() handles mouse press, move, release, click and doubleclick events</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;（）处理鼠标的按下，移动，释放，单击和双击事件</target>
        </trans-unit>
        <trans-unit id="47909f6e4cf5d68a43d3be29a75a6df0ca832cc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitemanimation&quot;&gt;QGraphicsItemAnimation&lt;/a&gt; will do a simple linear interpolation between the nearest adjacent scheduled changes to calculate the matrix. For instance, if you set the position of an item at values 0.0 and 1.0, the animation will show the item moving in a straight line between these positions. The same is true for scaling and rotation.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitemanimation&quot;&gt;QGraphicsItemAnimation&lt;/a&gt;将在最邻近的计划更改之间进行简单的线性插值，以计算矩阵。例如，如果将项目的位置设置为值0.0和1.0，则动画将显示该项目在这些位置之间沿直线移动。缩放和旋转也是如此。</target>
        </trans-unit>
        <trans-unit id="12125139fa6422cb9ecb310d15ce4738721faa5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; *QGraphicsItem::group() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; * QGraphicsItem :: group（）常量</target>
        </trans-unit>
        <trans-unit id="53a8e263394d48a8f715b7d47070cea047e7aea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; *QGraphicsScene::createItemGroup(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; * QGraphicsScene :: createItemGroup（const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="25a3423ce0012ca147829f953f5c9375fcb416a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; *QGraphicsWidget::layout() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; * QGraphicsWidget :: layout（）const</target>
        </trans-unit>
        <trans-unit id="1a806c6cec43730d78aa7566a10c618a6c89ca1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; and &lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;和&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0292f3b2eaed3af4654b7a93ed83b321b856d0c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayout#count&quot;&gt;QGraphicsLayout::count&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayout#count&quot;&gt;QGraphicsLayout::count&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="15b09f14839821b9242c384986d75de9390469fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayout#itemAt&quot;&gt;QGraphicsLayout::itemAt&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayout#itemAt&quot;&gt;QGraphicsLayout::itemAt&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c1e04dd2c130b3cc720afd2d2116fe58cc85ae17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayout#removeAt&quot;&gt;QGraphicsLayout::removeAt&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayout#removeAt&quot;&gt;QGraphicsLayout::removeAt&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8e5a4437e36e851d8d51c7b5c4df3cafe8797bda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; is an abstract class that defines a set of virtual functions describing sizes, size policies, and size hints for any object arranged by &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;. The API contains functions relevant for both the item itself and for the user of the item as most of &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;'s functions are also part of the subclass' public API.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;是一个抽象类，它定义了一组虚拟函数，这些虚函数描述了&lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;排列的任何对象的大小，大小策略和大小提示。该API包含与项目本身和项目用户相关的功能，因为大多数&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;的功能也是子类的公共API的一部分。</target>
        </trans-unit>
        <trans-unit id="4d781a5aaf256ab5dec07676f4a3b55bbf836644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;'s default size policy is (&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Fixed&lt;/a&gt;, &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Fixed&lt;/a&gt;, &lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy::DefaultType&lt;/a&gt;), but it is common for subclasses to change the default. For example, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; defaults to (&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Preferred&lt;/a&gt;, &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Preferred&lt;/a&gt;, &lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy::DefaultType&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;的默认大小策略是（&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Fixed&lt;/a&gt;，&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Fixed&lt;/a&gt;，&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy :: DefaultType&lt;/a&gt;），但是子类通常会更改默认值。例如，&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;默认为（&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Preferred&lt;/a&gt;，&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Preferred&lt;/a&gt;，&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy :: DefaultType&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7e1a1ccc566933c61b67fc4617822c7bc832ad71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *QGraphicsGridLayout::itemAt(int</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; * QGraphicsGridLayout :: itemAt（int</target>
        </trans-unit>
        <trans-unit id="aebd313a436fb441e2211466ac6bd635985f05f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *QGraphicsLayoutItem::parentLayoutItem() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; * QGraphicsLayoutItem :: parentLayoutItem（）const</target>
        </trans-unit>
        <trans-unit id="288dc1acf38e3deb7b8f0704678c324caeac62e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;QGraphicsLayoutItem::setGeometry&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;QGraphicsLayoutItem::setGeometry&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e50d5bb79ca2159861ddbf1a6cecd4e8fe758940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;QGraphicsLayoutItem::sizeHint&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;QGraphicsLayoutItem::sizeHint&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e43c1ebf78af806e82e6f8628bf80e11c8f7f2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; calculates the distribution of sizes by adding up the stretch factors of all items, and then dividing the available space accordingly. The default stretch factor is 0 for all items; a factor of 0 means the item does not have any defined stretch factor; effectively this is the same as setting the stretch factor to 1. The stretch factor only applies to the available space in the lengthwise direction of the layout (following its orientation). If you want to control both the item's horizontal and vertical stretch, you can use &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;通过将所有项目的拉伸因子加起来，然后相应地划分可用空间，来计算尺寸的分布。所有项目的默认拉伸因子均为0；默认值为0。因子0表示该项目没有任何定义的拉伸因子；实际上，这与将拉伸因子设置为1相同。拉伸因子仅适用于布局长度方向上的可用空间（遵循其方向）。如果要控制项目的水平和垂直拉伸，则可以改用&lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="437a096367545f5b303184d80b3c9dc3f18c91cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; is very similar to &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt; and &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;, but in contrast to these classes, it is used to manage &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; and &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; instead of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;与&lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;和&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;非常相似，但是与这些类相反，它用于管理&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;和&lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;而不是&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;和&lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6e3cc7d046406f3e4cd6ca69e51c9a27909540e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; respects each item's size hints and size policies, and when the layout contains more space than the items can fill, each item is arranged according to the layout's alignment for that item. You can set an alignment for each item by calling &lt;a href=&quot;qgraphicslinearlayout#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(), and check the alignment for any item by calling &lt;a href=&quot;qgraphicslinearlayout#alignment&quot;&gt;alignment&lt;/a&gt;(). By default, items are aligned to the top left.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;遵守每个项目的大小提示和大小策略，并且当布局包含的空间超出了项目可填充的空间时，将根据该项目的布局对齐方式排列每个项目。您可以通过调用&lt;a href=&quot;qgraphicslinearlayout#setAlignment&quot;&gt;setAlignment&lt;/a&gt;（）设置每个项目的对齐方式，并通过调用&lt;a href=&quot;qgraphicslinearlayout#alignment&quot;&gt;alignment&lt;/a&gt;（）检查任何项目的对齐方式。默认情况下，项目在左上方对齐。</target>
        </trans-unit>
        <trans-unit id="be3fbf01d98b435389757da8b56106c7d5708162" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; *QGraphicsScene::addLine(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; * QGraphicsScene :: addLine（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c973b68d4d191df287123a8a0a47e4e34725039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; *QGraphicsScene::addLine(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd3fd5a067e25312d2befe9d1eaea08a3efb7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; *QGraphicsScene::addLine(const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; * QGraphicsScene :: addLine（const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="16dafeeb8aa2565a9fdb2d80fd6ca6fa6cae9f9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; provides a line item</source>
          <target state="translated">&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;提供一个订单项</target>
        </trans-unit>
        <trans-unit id="558a91b1f92e18672a44fc120bec1d1c45598beb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; uses the line and the pen width to provide a reasonable implementation of &lt;a href=&quot;qgraphicslineitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicslineitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicslineitem#contains&quot;&gt;contains&lt;/a&gt;(). The &lt;a href=&quot;qgraphicslineitem#paint&quot;&gt;paint&lt;/a&gt;() function draws the line using the item's associated pen.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;使用线条和笔的宽度来提供对&lt;a href=&quot;qgraphicslineitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicslineitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicslineitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。该&lt;a href=&quot;qgraphicslineitem#paint&quot;&gt;涂料&lt;/a&gt;（）函数绘制使用项目的关联的笔线。</target>
        </trans-unit>
        <trans-unit id="13cbc0946455fed15a850ddc385ac0f6f98ca13b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; *QGraphicsItem::parentObject() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; * QGraphicsItem :: parentObject（）const</target>
        </trans-unit>
        <trans-unit id="6dd351d98bf8e6c4f06b2c48bd1344e2027bb5ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; *QGraphicsItem::toGraphicsObject()</source>
          <target state="translated">&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; * QGraphicsItem :: toGraphicsObject（）</target>
        </trans-unit>
        <trans-unit id="259f1603be66c48d32cef687b7e682f3c8c26900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; and &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;和&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27a0e4716ca420b7a79769f71bdea426cb28c581" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; and &lt;a href=&quot;qmediabindableinterface&quot;&gt;QMediaBindableInterface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;和&lt;a href=&quot;qmediabindableinterface&quot;&gt;QMediaBindableInterface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f2a0774f1d544199dfd87736fdf0c1b71070189" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsopacityeffect&quot;&gt;QGraphicsOpacityEffect&lt;/a&gt; - renders the item with an opacity</source>
          <target state="translated">&lt;a href=&quot;qgraphicsopacityeffect&quot;&gt;QGraphicsOpacityEffect-&lt;/a&gt;使用不透明度渲染项目</target>
        </trans-unit>
        <trans-unit id="1f917cf0d415f60f22bf5e4d44b2eb7c3934bf87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt; *QGraphicsScene::addPath(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt; * QGraphicsScene :: addPath（const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="549516f5047fd63d35a0c7dc3c5209dcdea78a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt; provides an arbitrary path item</source>
          <target state="translated">&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;提供任意路径项</target>
        </trans-unit>
        <trans-unit id="8d2f98d2ded74ee89755c65963fc32f1eff8a3b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt; uses the path to provide a reasonable implementation of &lt;a href=&quot;qgraphicspathitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicspathitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicspathitem#contains&quot;&gt;contains&lt;/a&gt;(). The &lt;a href=&quot;qgraphicspathitem#paint&quot;&gt;paint&lt;/a&gt;() function draws the path using the item's associated pen and brush, which you can set by calling the &lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;() and &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;() functions.</source>
          <target state="translated">&lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;使用该路径提供合理的&lt;a href=&quot;qgraphicspathitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicspathitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicspathitem#contains&quot;&gt;contains&lt;/a&gt;（）的实现。该&lt;a href=&quot;qgraphicspathitem#paint&quot;&gt;涂料&lt;/a&gt;（）函数绘制使用项目的关联的画笔和画刷，你可以通过调用设置的路径&lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;（）和&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="d6c3119ac86eca2766f6485dfcda95f186b84d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; *QGraphicsScene::addPixmap(const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; * QGraphicsScene :: addPixmap（const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="31a32d5604a6e5936459aa77a32ad2678297a603" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; provides a pixmap item</source>
          <target state="translated">&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;提供一个像素图项</target>
        </trans-unit>
        <trans-unit id="8da1ce3cd78b49c10e56070ebca88c7095e7ee79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; uses pixmap's optional alpha mask to provide a reasonable implementation of &lt;a href=&quot;qgraphicspixmapitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicspixmapitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicspixmapitem#contains&quot;&gt;contains&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;使用pixmap的可选alpha蒙版来提供&lt;a href=&quot;qgraphicspixmapitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicspixmapitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicspixmapitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。</target>
        </trans-unit>
        <trans-unit id="36dd40e28c9f3050fffe2c9c5771d5cbdaf617ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspixmapitem#ShapeMode-enum&quot;&gt;QGraphicsPixmapItem::ShapeMode&lt;/a&gt; QGraphicsPixmapItem::shapeMode() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicspixmapitem#ShapeMode-enum&quot;&gt;QGraphicsPixmapItem :: ShapeMode&lt;/a&gt; QGraphicsPixmapItem :: shapeMode（）const</target>
        </trans-unit>
        <trans-unit id="50dfdff0e3d2d695d27414b552ad3868ee572276" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt; *QGraphicsScene::addPolygon(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt; * QGraphicsScene :: addPolygon（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7347fff8094c7619f3b8004669ba654da2a56ae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt; provides a polygon item</source>
          <target state="translated">&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;提供一个多边形项目</target>
        </trans-unit>
        <trans-unit id="fac4d04d272b221a85953bceef4805eb9b011831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt; uses the polygon and the pen width to provide a reasonable implementation of &lt;a href=&quot;qgraphicspolygonitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicspolygonitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicspolygonitem#contains&quot;&gt;contains&lt;/a&gt;(). The &lt;a href=&quot;qgraphicspolygonitem#paint&quot;&gt;paint&lt;/a&gt;() function draws the polygon using the item's associated pen and brush, which you can set by calling the &lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;() and &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;() functions.</source>
          <target state="translated">&lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;使用多边形和笔宽来提供对&lt;a href=&quot;qgraphicspolygonitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicspolygonitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicspolygonitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。该&lt;a href=&quot;qgraphicspolygonitem#paint&quot;&gt;涂料&lt;/a&gt;（）函数绘制使用项目的关联的画笔和画刷，你可以通过调用设定的多边形&lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;（）和&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="da40e0b89dfc3f53ed51f3de719c41ee44eb0f58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; *QGraphicsScene::addWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; * QGraphicsScene :: addWidget（&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b9bbb1d80ed2f3be68f8d00680b6fdd13333da84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; *QWidget::graphicsProxyWidget() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; * QWidget :: graphicsProxyWidget（）常量</target>
        </trans-unit>
        <trans-unit id="8509ed0352205f5b7d75e884e4a1f6fc7df11e9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; embeds &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based widgets, for example, a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;, &lt;a href=&quot;qfontcombobox&quot;&gt;QFontComboBox&lt;/a&gt;, or even &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;, into &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;. It forwards events between the two objects and translates between &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s integer-based geometry and &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s qreal-based geometry. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; supports all core features of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, including tab focus, keyboard input, Drag &amp;amp; Drop, and popups. You can also embed complex widgets, e.g., widgets with subwidgets.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;将基于&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;的小部件（例如&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;，&lt;a href=&quot;qfontcombobox&quot;&gt;QFontComboBox&lt;/a&gt;甚至&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;）嵌入&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene中&lt;/a&gt;。它在两个对象之间转发事件，并在&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;的基于整数的几何和&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;的基于qreal的几何之间转换。&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;支持&lt;a href=&quot;qwidget&quot;&gt;QWidget的&lt;/a&gt;所有核心功能，包括标签焦点，键盘输入，拖放和弹出窗口。您也可以嵌入复杂的小部件，例如带有子小部件的小部件。</target>
        </trans-unit>
        <trans-unit id="add9a51b38f36603cf7b29804642143d429debde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; keeps its state in sync with the embedded widget. For example, if the proxy is hidden or disabled, the embedded widget will be hidden or disabled as well, and vice versa. When the widget is embedded by calling addWidget(), &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; copies the state from the widget into the proxy, and after that, the two will stay synchronized where possible. By default, when you embed a widget into a proxy, both the widget and the proxy will be visible because a &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; is visible when created (you do not have to call &lt;a href=&quot;qgraphicsitem#show&quot;&gt;show&lt;/a&gt;()). If you explicitly hide the embedded widget, the proxy will also become invisible.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;使其状态与嵌入式窗口小部件保持同步。例如，如果代理被隐藏或禁用，则嵌入式小部件也将被隐藏或禁用，反之亦然。当通过调用addWidget（）嵌入窗口小部件时，&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;将状态从窗口小部件复制到代理中，然后，两者将在可能的情况下保持同步。默认情况下，将窗口小部件嵌入代理时，窗口小部件和代理都将可见，因为创建时会显示&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;（不必调用&lt;a href=&quot;qgraphicsitem#show&quot;&gt;show&lt;/a&gt;（））。如果您明确隐藏嵌入式窗口小部件，则代理也将不可见。</target>
        </trans-unit>
        <trans-unit id="9d97eeef0b637783ec0f315712ffa3c68e52d822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; maintains symmetry for the following states:</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;维护以下状态的对称性：</target>
        </trans-unit>
        <trans-unit id="8e38dd27df87f3e32b988478b974ede2ad30979a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;状态</target>
        </trans-unit>
        <trans-unit id="db5feb5c398dd77ccdbd279711d74d8eb7320cf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; takes care of automatically embedding popup children of embedded widgets through creating a child proxy for each popup. This means that when an embedded &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; shows its popup list, a new &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; is created automatically, embedding the popup, and positioning it correctly. This only works if the popup is child of the embedded widget (for example &lt;a href=&quot;qtoolbutton#setMenu&quot;&gt;QToolButton::setMenu&lt;/a&gt;() requires the &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; instance to be child of the &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;通过为每个弹出式窗口创建子代理来自动嵌入嵌入式窗口小部件的弹出式子代。这意味着，当嵌入式&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;显示其弹出列表时，将自动创建一个新的&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;，将其嵌入并正确放置。仅当弹出窗口是嵌入式窗口小部件的子级时才有效（例如&lt;a href=&quot;qtoolbutton#setMenu&quot;&gt;QToolButton :: setMenu&lt;/a&gt;（）要求&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;实例是&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton的子级&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b13419169d4269d576c820b86809f3962ed2875c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;'s window flags determine whether the widget, after embedding, will be given window decorations or not.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;的窗口标志确定在嵌入后是否给窗口小部件装饰窗口。</target>
        </trans-unit>
        <trans-unit id="bb0e02e338de6449734224764b11eba715f27ed8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget#QGraphicsProxyWidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; *QGraphicsProxyWidget::createProxyForChildWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget#QGraphicsProxyWidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; * QGraphicsProxyWidget :: createProxyForChildWidget（&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="43f602a486e6d3b07ab380debbbfaf76288420f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsproxywidget#sizeHint&quot;&gt;QGraphicsProxyWidget::sizeHint&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget#sizeHint&quot;&gt;QGraphicsProxyWidget::sizeHint&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4c598767395149bcace6a4f381d4750f98d8a974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; *QGraphicsScene::addRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; * QGraphicsScene :: addRect（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="972a99c5138a32ed2914e2ac69e80175261fe5fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; *QGraphicsScene::addRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91168267b106b798411badaf2e37ce1a83d64245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; *QGraphicsScene::addRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; * QGraphicsScene :: addRect（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cd9f7194073b2e04d95b4f57dc8b2e3b75d306dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; provides a rectangular item</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;提供一个矩形项目</target>
        </trans-unit>
        <trans-unit id="8dd9dcfacec37c12ff5f505792899f19e4d8807a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; uses the rectangle and the pen width to provide a reasonable implementation of &lt;a href=&quot;qgraphicsrectitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicsrectitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsrectitem#contains&quot;&gt;contains&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsrectitem#paint&quot;&gt;paint&lt;/a&gt;() function draws the rectangle using the item's associated pen and brush, which you can set by calling the &lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;() and &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;() functions.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;使用矩形和笔宽来提供&lt;a href=&quot;qgraphicsrectitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicsrectitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsrectitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。该&lt;a href=&quot;qgraphicsrectitem#paint&quot;&gt;涂料&lt;/a&gt;（）函数绘制使用项目的关联的画笔和画刷，你可以通过调用设置矩形&lt;a href=&quot;qabstractgraphicsshapeitem#setPen&quot;&gt;setPen&lt;/a&gt;（）和&lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="0a3099b3d0af1d3e6f9f486f641eff88d7ab9128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt; and &lt;a href=&quot;qgraphicsscale&quot;&gt;QGraphicsScale&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;和&lt;a href=&quot;qgraphicsscale&quot;&gt;QGraphicsScale&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d19ce3c9c4e81292b9cb3926e8591dd96e4b6354" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt; provides certain parameters to help control how the rotation should be applied.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;提供了某些参数来帮助控制应如何应用旋转。</target>
        </trans-unit>
        <trans-unit id="4b3755959c144dd735c926ca58401bd58b205b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscale&quot;&gt;QGraphicsScale&lt;/a&gt; emits this signal when its origin changes.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscale&quot;&gt;&lt;/a&gt;当其原点改变时，QGraphicsScale发出此信号。</target>
        </trans-unit>
        <trans-unit id="70d2ac2ad1c6f7e1785f7e3442fa0b32769661de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; *QGraphicsItem::scene() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; * QGraphicsItem :: scene（）常量</target>
        </trans-unit>
        <trans-unit id="4fe2a19eb169967b97080921cda9d73f5c46c92a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; *QGraphicsView::scene() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; * QGraphicsView :: scene（）常量</target>
        </trans-unit>
        <trans-unit id="0b1b29398d3856818d050f7f6276f9ba5c1c87e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; also manages certain item states, such as item selection and focus. You can select items on the scene by calling &lt;a href=&quot;qgraphicsscene#setSelectionArea&quot;&gt;QGraphicsScene::setSelectionArea&lt;/a&gt;(), passing an arbitrary shape. This functionality is also used as a basis for rubberband selection in &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. To get the list of all currently selected items, call &lt;a href=&quot;qgraphicsscene#selectedItems&quot;&gt;QGraphicsScene::selectedItems&lt;/a&gt;(). Another state handled by &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; is whether or not an item has keyboard input focus. You can set focus on an item by calling &lt;a href=&quot;qgraphicsscene#setFocusItem&quot;&gt;QGraphicsScene::setFocusItem&lt;/a&gt;() or &lt;a href=&quot;qgraphicsitem#setFocus&quot;&gt;QGraphicsItem::setFocus&lt;/a&gt;(), or get the current focus item by calling &lt;a href=&quot;qgraphicsscene#focusItem&quot;&gt;QGraphicsScene::focusItem&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;还管理某些项目状态，例如项目选择和焦点。您可以通过调用&lt;a href=&quot;qgraphicsscene#setSelectionArea&quot;&gt;QGraphicsScene :: setSelectionArea&lt;/a&gt;（）传递任意形状来选择场景中的项目。此功能还用作&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView中&lt;/a&gt;橡皮筋选择的基础。要获取所有当前选定项目的列表，请调用&lt;a href=&quot;qgraphicsscene#selectedItems&quot;&gt;QGraphicsScene :: selectedItems&lt;/a&gt;（）。&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;处理的另一个状态是项目是否具有键盘输入焦点。您可以通过调用&lt;a href=&quot;qgraphicsscene#setFocusItem&quot;&gt;QGraphicsScene :: setFocusItem&lt;/a&gt;（）或&lt;a href=&quot;qgraphicsitem#setFocus&quot;&gt;QGraphicsItem :: setFocus&lt;/a&gt;（）来设置焦点，或者通过调用&lt;a href=&quot;qgraphicsscene#focusItem&quot;&gt;QGraphicsScene :: focusItem&lt;/a&gt;（）获得当前的焦点项目。</target>
        </trans-unit>
        <trans-unit id="4836bbaa36f7272b63a96d9713c80e9262767e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; also provides functionality that lets you efficiently determine both the location of items, and for determining what items are visible within an arbitrary area on the scene. With the &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; widget, you can either visualize the whole scene, or zoom in and view only parts of the scene.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;还提供功能，可让您有效地确定项目的位置以及确定场景中任意区域内可见的项目。使用&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;小部件，您可以可视化整个场景，或者放大并仅查看场景的一部分。</target>
        </trans-unit>
        <trans-unit id="0287269f58ced8fab0de3a4d5b28a0cdd65cf2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; applies an indexing algorithm to the scene, to speed up item discovery functions like &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;() and &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;(). Indexing is most efficient for static scenes (i.e., where items don't move around). For dynamic scenes, or scenes with many animated items, the index bookkeeping can outweight the fast lookup speeds.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;将索引算法应用于场景，以加快项目发现功能，例如&lt;a href=&quot;qgraphicsscene#items&quot;&gt;item&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;（）。索引对于静态场景（即项目不会四处移动）最有效。对于动态场景或包含许多动画项目的场景，索引簿记可以超过快速查找速度。</target>
        </trans-unit>
        <trans-unit id="bd26c94927abe396a2ca6a04adce3c43ebdd6d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; emits this signal only once for group selection operations. For example, if you set a selection area, select or unselect a &lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt;, or if you add or remove from the scene a parent item that contains several selected items, selectionChanged() is emitted only once after the operation has completed (instead of once for each item).</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;&lt;/a&gt;对于组选择操作，QGraphicsScene仅发出一次此信号。例如，如果您设置选择区域，选择或取消选择&lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt;，或者从场景中添加或删除包含多个选定项目的父项目，则操作完成后仅发出一次selectChanged（）（而不是一次）每个项目）。</target>
        </trans-unit>
        <trans-unit id="cb15feadefd5f8c319de77d760c1cfd190c4d805" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; expects all items &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#shape&quot;&gt;shape&lt;/a&gt;() to remain unchanged unless it is notified. If you want to change an item's geometry in any way, you must first call &lt;a href=&quot;qgraphicsitem#prepareGeometryChange&quot;&gt;prepareGeometryChange&lt;/a&gt;() to allow &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to update its bookkeeping.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;期望所有项目&lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#shape&quot;&gt;shape&lt;/a&gt;（）保持不变，除非得到通知。如果要以任何方式更改项目的几何形状，则必须首先调用&lt;a href=&quot;qgraphicsitem#prepareGeometryChange&quot;&gt;prepareGeometryChange&lt;/a&gt;（）以允许&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;更新其簿记。</target>
        </trans-unit>
        <trans-unit id="d0f67f97a249cc85bd091af9ae5b714357c0b4b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; filters &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;'s events to detect palette and font changes.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;过滤&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;的事件以检测调色板和字体更改。</target>
        </trans-unit>
        <trans-unit id="a7f3f1aed7ed03a7058f722d71d09a7fd7a4cbf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; has ownership of the group item; you do not need to delete it. To dismantle (ungroup) a group, call &lt;a href=&quot;qgraphicsscene#destroyItemGroup&quot;&gt;destroyItemGroup&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;拥有该组项目的所有权；您无需删除它。要拆除（取消分组）组，请调用&lt;a href=&quot;qgraphicsscene#destroyItemGroup&quot;&gt;destroyItemGroup&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="c2e61babd5ad0a2178c03f0de7834ea952e4e3cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; maintains selection information for the scene. To select items, call &lt;a href=&quot;qgraphicsscene#setSelectionArea&quot;&gt;setSelectionArea&lt;/a&gt;(), and to clear the current selection, call &lt;a href=&quot;qgraphicsscene#clearSelection&quot;&gt;clearSelection&lt;/a&gt;(). Call &lt;a href=&quot;qgraphicsscene#selectedItems&quot;&gt;selectedItems&lt;/a&gt;() to get the list of all selected items.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;维护场景的选择信息。要选择项目，请调用&lt;a href=&quot;qgraphicsscene#setSelectionArea&quot;&gt;setSelectionArea&lt;/a&gt;（），并要清除当前选择，请调用&lt;a href=&quot;qgraphicsscene#clearSelection&quot;&gt;clearSelection&lt;/a&gt;（）。调用&lt;a href=&quot;qgraphicsscene#selectedItems&quot;&gt;selectedItems&lt;/a&gt;（）以获取所有选定项目的列表。</target>
        </trans-unit>
        <trans-unit id="bf42ac416f80afefd55ab2ac1db7a9ea443e4d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; provides certain parameters to help control how the scale should be applied.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;提供了某些参数来帮助控制应如何应用比例尺。</target>
        </trans-unit>
        <trans-unit id="c8747a069f5e923ba371fcf9f4291f3260e5c91c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; provides the Graphics View scene. The scene has the following responsibilities:</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;提供了&amp;ldquo;图形视图&amp;rdquo;场景。该场景具有以下职责：</target>
        </trans-unit>
        <trans-unit id="24a4c2f234866c5678378f8995833a695428b7c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; uses an indexing algorithm to manage the location of items efficiently. By default, a BSP (Binary Space Partitioning) tree is used; an algorithm suitable for large scenes where most items remain static (i.e., do not move around). You can choose to disable this index by calling &lt;a href=&quot;qgraphicsscene#itemIndexMethod-prop&quot;&gt;setItemIndexMethod&lt;/a&gt;(). For more information about the available indexing algorithms, see the &lt;a href=&quot;qgraphicsscene#itemIndexMethod-prop&quot;&gt;itemIndexMethod&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;使用索引算法来有效地管理项目的位置。默认情况下，使用BSP（二进制空间分区）树；一种适用于大多数项目保持静态（即不要四处走动）的大型场景的算法。您可以选择通过调用&lt;a href=&quot;qgraphicsscene#itemIndexMethod-prop&quot;&gt;setItemIndexMethod&lt;/a&gt;（）禁用此索引。有关可用索引算法的更多信息，请参见&lt;a href=&quot;qgraphicsscene#itemIndexMethod-prop&quot;&gt;itemIndexMethod&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="e6eba2541d909bac1d8b9c3386bb59af910c1734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; will send ItemSceneChange notifications to</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;将发送ItemSceneChange通知到</target>
        </trans-unit>
        <trans-unit id="6a4421edf0a75f477a443fd9ba86fcf613b39662" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event propagation architecture schedules scene events for delivery to items, and also manages propagation between items. If the scene receives a mouse press event at a certain position, the scene passes the event on to whichever item is at that position.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;的事件传播架构安排了场景事件以交付给项目，还管理项目之间的传播。如果场景在某个位置收到鼠标按下事件，则场景会将事件传递到该位置上的任何项目。</target>
        </trans-unit>
        <trans-unit id="6b3f3caa8c7e12e7945bd6b75c2e345d7122d2fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene::render&lt;/a&gt;() calls &lt;a href=&quot;qgraphicsscene#drawBackground&quot;&gt;drawBackground&lt;/a&gt;() to draw the scene background. For more detailed control over how the background is drawn, you can reimplement &lt;a href=&quot;qgraphicsscene#drawBackground&quot;&gt;drawBackground&lt;/a&gt;() in a subclass of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene :: render&lt;/a&gt;（）调用&lt;a href=&quot;qgraphicsscene#drawBackground&quot;&gt;drawBackground&lt;/a&gt;（）绘制场景背景。若要更详细地控制背景的绘制方式，可以在&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;的子类中重新实现&lt;a href=&quot;qgraphicsscene#drawBackground&quot;&gt;drawBackground&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="b7b580d93a9de07aa2140ba5b67f2f3da0af8501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene::render&lt;/a&gt;() calls &lt;a href=&quot;qgraphicsscene#drawForeground&quot;&gt;drawForeground&lt;/a&gt;() to draw the scene foreground. For more detailed control over how the foreground is drawn, you can reimplement the &lt;a href=&quot;qgraphicsscene#drawForeground&quot;&gt;drawForeground&lt;/a&gt;() function in a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; subclass.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene#render&quot;&gt;QGraphicsScene :: render&lt;/a&gt;（）调用&lt;a href=&quot;qgraphicsscene#drawForeground&quot;&gt;drawForeground&lt;/a&gt;（）绘制场景前景。若要更详细地控制前景的绘制方式，可以在&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;子类中重新实现&lt;a href=&quot;qgraphicsscene#drawForeground&quot;&gt;drawForeground&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="f26fc5608f7f1157e12ab88d0a3a3bf3c2ba4ea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscenecontextmenuevent&quot;&gt;QGraphicsSceneContextMenuEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicsscenehelpevent&quot;&gt;QGraphicsSceneHelpEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicsscenehoverevent&quot;&gt;QGraphicsSceneHoverEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicsscenemouseevent&quot;&gt;QGraphicsSceneMouseEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;, and &lt;a href=&quot;qgraphicsscenewheelevent&quot;&gt;QGraphicsSceneWheelEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscenecontextmenuevent&quot;&gt;QGraphicsSceneContextMenuEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicsscenehelpevent&quot;&gt;QGraphicsSceneHelpEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicsscenehoverevent&quot;&gt;QGraphicsSceneHoverEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicsscenemouseevent&quot;&gt;QGraphicsSceneMouseEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;，&lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;和&lt;a href=&quot;qgraphicsscenewheelevent&quot;&gt;QGraphicsSceneWheelEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="173d3c21715c0f112a54eb9ca5cd70e49c945040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscenecontextmenuevent#Reason-enum&quot;&gt;QGraphicsSceneContextMenuEvent::Reason&lt;/a&gt; QGraphicsSceneContextMenuEvent::reason() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscenecontextmenuevent#Reason-enum&quot;&gt;QGraphicsSceneContextMenuEvent ::原因&lt;/a&gt; QGraphicsSceneContextMenuEvent :: reason（）const</target>
        </trans-unit>
        <trans-unit id="135622bd32b359eea2799f7a0154eb9df3ff2376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt; contains the position of the mouse cursor in both item, scene, and screen coordinates; this can be retrieved with &lt;a href=&quot;qgraphicsscenedragdropevent#pos&quot;&gt;pos&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscenedragdropevent#scenePos&quot;&gt;scenePos&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsscenedragdropevent#screenPos&quot;&gt;screenPos&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;包含鼠标光标在项目，场景和屏幕坐标中的位置；可以使用&lt;a href=&quot;qgraphicsscenedragdropevent#pos&quot;&gt;pos&lt;/a&gt;（），&lt;a href=&quot;qgraphicsscenedragdropevent#scenePos&quot;&gt;scenePos&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsscenedragdropevent#screenPos&quot;&gt;screenPos&lt;/a&gt;（）进行检索。</target>
        </trans-unit>
        <trans-unit id="12d2b6345edd7eac69ba2fc86089cf6956893d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt; stores events of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragEnter&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragLeave&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragMove&lt;/a&gt;, or &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDrop&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;存储类型为&lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragEnter&lt;/a&gt;，&lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragLeave&lt;/a&gt;，&lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDragMove&lt;/a&gt;或&lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneDrop的事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08aff1f6eb79a2f4d4796594998e49a3636e7f4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; *QGraphicsScene::addSimpleText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; * QGraphicsScene :: addSimpleText（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="729c76fe1fd25efd22cd743641a1356151f32f2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; provides a simple text label item</source>
          <target state="translated">&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;提供一个简单的文本标签项</target>
        </trans-unit>
        <trans-unit id="8bfd5aa3b3348e218ce9b2259ff4c879d5149aca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; uses the text's formatted size and the associated font to provide a reasonable implementation of &lt;a href=&quot;qgraphicssimpletextitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicssimpletextitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicssimpletextitem#contains&quot;&gt;contains&lt;/a&gt;(). You can set the font by calling &lt;a href=&quot;qgraphicssimpletextitem#setFont&quot;&gt;setFont&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;使用文本的格式化大小和关联的字体来提供&lt;a href=&quot;qgraphicssimpletextitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicssimpletextitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicssimpletextitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。您可以通过调用&lt;a href=&quot;qgraphicssimpletextitem#setFont&quot;&gt;setFont&lt;/a&gt;（）来设置字体。</target>
        </trans-unit>
        <trans-unit id="d82967d6cfd853eee2d020f1c474310dc92ef523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt; provides a way of rendering SVG files onto &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. &lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt; can be created by passing the SVG file to be rendered to its constructor or by explicit setting a shared &lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt; on it.</source>
          <target state="translated">&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt;提供了一种将SVG文件呈现到&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView上的方法&lt;/a&gt;。&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt;可以通过将要渲染的SVG文件传递到其构造函数或通过在其上显式设置共享的&lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt;来创建。</target>
        </trans-unit>
        <trans-unit id="b85a230a93c7d3962dc2f78b9191c1ac91951541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt; provides a way of rendering only parts of the SVG files via the &lt;a href=&quot;qgraphicssvgitem#setElementId&quot;&gt;setElementId&lt;/a&gt;. If &lt;a href=&quot;qgraphicssvgitem#setElementId&quot;&gt;setElementId&lt;/a&gt;() method is called, only the SVG element (and its children) with the passed id will be renderer. This provides a convenient way of selectively rendering large SVG files that contain a number of discrete elements. For example the following code renders only jokers from a SVG file containing a whole card deck:</source>
          <target state="translated">&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt;提供了一种通过&lt;a href=&quot;qgraphicssvgitem#setElementId&quot;&gt;setElementId&lt;/a&gt;仅呈现SVG文件部分的方法。如果调用&lt;a href=&quot;qgraphicssvgitem#setElementId&quot;&gt;setElementId&lt;/a&gt;（）方法，则仅具有传递的ID的SVG元素（及其子元素）将成为渲染器。这提供了一种方便的方式来选择性地呈现包含多个离散元素的大型SVG文件。例如，以下代码仅从包含整个卡片组的SVG文件中呈现小丑。</target>
        </trans-unit>
        <trans-unit id="441fead7d62ef8125a076b24ce964cb92384b1e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicssvgitem&quot;&gt;QGraphicsSvgItem&lt;/a&gt;, &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;, and &lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce59197abd4b32e0372de8c78ebb017032ef773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; *QGraphicsScene::addText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; * QGraphicsScene :: addText（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d4a221f5f5c9d81b92f8e8a54fcb097b875e0ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; and &lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;和&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3333f94e077d55180be6c03c9bc967e28634d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; provides an advanced text browser item</source>
          <target state="translated">&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;提供了一个高级文本浏览器项</target>
        </trans-unit>
        <trans-unit id="3a88966b45418c9cc853710ff6ee2e9406d257f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; uses the text's formatted size and the associated font to provide a reasonable implementation of &lt;a href=&quot;qgraphicstextitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), &lt;a href=&quot;qgraphicstextitem#shape&quot;&gt;shape&lt;/a&gt;(), and &lt;a href=&quot;qgraphicstextitem#contains&quot;&gt;contains&lt;/a&gt;(). You can set the font by calling &lt;a href=&quot;qgraphicstextitem#setFont&quot;&gt;setFont&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;使用文本的格式化大小和关联的字体来提供&lt;a href=&quot;qgraphicstextitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（），&lt;a href=&quot;qgraphicstextitem#shape&quot;&gt;shape&lt;/a&gt;（）和&lt;a href=&quot;qgraphicstextitem#contains&quot;&gt;contains&lt;/a&gt;（）的合理实现。您可以通过调用&lt;a href=&quot;qgraphicstextitem#setFont&quot;&gt;setFont&lt;/a&gt;（）来设置字体。</target>
        </trans-unit>
        <trans-unit id="d39a641854cad8c73af22b8a0d36f8d3490a41fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; can be used together with &lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;QGraphicsItem::setTransform&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#setRotation&quot;&gt;QGraphicsItem::setRotation&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#setScale&quot;&gt;QGraphicsItem::setScale&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;可以与&lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;QGraphicsItem :: setTransform&lt;/a&gt;（），&lt;a href=&quot;qgraphicsitem#setRotation&quot;&gt;QGraphicsItem :: setRotation&lt;/a&gt;（）和&lt;a href=&quot;qgraphicsitem#setScale&quot;&gt;QGraphicsItem :: setScale&lt;/a&gt;（）一起使用。</target>
        </trans-unit>
        <trans-unit id="14741cfb09600e230e01e4fbc6e7730c0a63be25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; is for applying and controlling a chain of individual transformation operations on an item. It's particularly useful in animations, where each transform operation needs to be interpolated independently, or differently.</source>
          <target state="translated">&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;用于在项目上应用和控制一系列单独的转换操作。这在动画中特别有用，在动画中，每个变换操作都需要独立或不同地进行插值。</target>
        </trans-unit>
        <trans-unit id="1908793ab00ccaa0c56a953c6cbb91d7f1f27630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; is particularly useful for animations. Whereas &lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;QGraphicsItem::setTransform&lt;/a&gt;() lets you assign any transform directly to an item, there is no direct way to interpolate between two different transformations (e.g., when transitioning between two states, each for which the item has a different arbitrary transform assigned). Using &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; you can interpolate the property values of each independent transformation. The resulting operation is then combined into a single transform which is applied to &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;对动画特别有用。而&lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;的QGraphicsItem ::一个setTransform&lt;/a&gt;（）让你指定的任何直接转化为一个项目，没有直接的方法在两个不同的变换之间进行内插（例如，两种状态，针对其项目具有不同的任意之间转换时变换分配）。使用&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;可以插入每个独立转换的属性值。然后将所得的操作合并为一个单独的变换，该变换将应用于&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de00c0131d6e9f202bbe422a8d033f5db2268942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; will draw video scaled to fit size according to its fillMode.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;将根据其fillMode绘制缩放为适合大小的视频。</target>
        </trans-unit>
        <trans-unit id="a30b03863d160f4ceaaf030b4c94acccd927cfa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; will draw video using the offset for its top left corner.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;将使用其左上角的偏移量绘制视频。</target>
        </trans-unit>
        <trans-unit id="03663f8c16b281855119f850fc6729859e71ea08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; can be used to visualize a whole scene, or only parts of it. The visualized area is by default detected automatically when the view is displayed for the first time (by calling &lt;a href=&quot;qgraphicsscene#itemsBoundingRect&quot;&gt;QGraphicsScene::itemsBoundingRect&lt;/a&gt;()). To set the visualized area rectangle yourself, you can call &lt;a href=&quot;qgraphicsview#sceneRect-prop&quot;&gt;setSceneRect&lt;/a&gt;(). This will adjust the scroll bars' ranges appropriately. Note that although the scene supports a virtually unlimited size, the range of the scroll bars will never exceed the range of an integer (INT_MIN, INT_MAX).</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;可用于可视化整个场景或其中的一部分。默认情况下，首次显示视图时，默认情况下会自动检测到可视化区域（通过调用&lt;a href=&quot;qgraphicsscene#itemsBoundingRect&quot;&gt;QGraphicsScene :: itemsBoundingRect&lt;/a&gt;（））。要自己设置可视化区域矩形，可以调用&lt;a href=&quot;qgraphicsview#sceneRect-prop&quot;&gt;setSceneRect&lt;/a&gt;（）。这将适当地调整滚动条的范围。请注意，尽管场景实际上支持无限大小，但是滚动条的范围永远不会超出整数（INT_MIN，INT_MAX）的范围。</target>
        </trans-unit>
        <trans-unit id="10771810e0348bc85a753fe850ca08d86ffc4bd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; can cache pre-rendered content in a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, which is then drawn onto the viewport. The purpose of such caching is to speed up the total rendering time for areas that are slow to render. Texture, gradient and alpha blended backgrounds, for example, can be notibly slow to render; especially with a transformed view. The &lt;a href=&quot;qgraphicsview#CacheModeFlag-enum&quot;&gt;CacheBackground&lt;/a&gt; flag enables caching of the view's background. For example:</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;可以将预渲染的内容缓存在&lt;a href=&quot;qpixmap&quot;&gt;QPixmap中&lt;/a&gt;，然后将其绘制到视口上。这种缓存的目的是加快渲染速度较慢的区域的总渲染时间。例如，纹理，渐变和Alpha混合背景的渲染速度可能非常慢；特别是在转换视图时。该&lt;a href=&quot;qgraphicsview#CacheModeFlag-enum&quot;&gt;CacheBackground&lt;/a&gt;标志使视图背景的缓存。例如：</target>
        </trans-unit>
        <trans-unit id="a1c2f80cb177b424b7ef4ed3218555dd5b93899f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; does not forward events when &lt;a href=&quot;qwhatsthis&quot;&gt;&quot;What's This&quot;&lt;/a&gt; and &lt;a href=&quot;qstatustipevent&quot;&gt;status tip&lt;/a&gt; help is requested. If you need this, you can reimplement &lt;a href=&quot;qgraphicsview#viewportEvent&quot;&gt;QGraphicsView::viewportEvent&lt;/a&gt;() and forward &lt;a href=&quot;qstatustipevent&quot;&gt;QStatusTipEvent&lt;/a&gt; events and &lt;a href=&quot;qevent&quot;&gt;QEvents&lt;/a&gt; of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::WhatsThis&lt;/a&gt; to the scene.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;&lt;/a&gt;当请求&lt;a href=&quot;qwhatsthis&quot;&gt;&amp;ldquo;这是什么&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;qstatustipevent&quot;&gt;状态提示&lt;/a&gt;帮助时，QGraphicsView不会转发事件。如果你需要这个，你可以重新实现&lt;a href=&quot;qgraphicsview#viewportEvent&quot;&gt;的QGraphicsView :: viewportEvent&lt;/a&gt;（）和远期&lt;a href=&quot;qstatustipevent&quot;&gt;QStatusTipEvent&lt;/a&gt;事件和&lt;a href=&quot;qevent&quot;&gt;QEvents&lt;/a&gt;类型&lt;a href=&quot;qevent#Type-enum&quot;&gt;的QEvent :: WhatsThis&lt;/a&gt;现场。</target>
        </trans-unit>
        <trans-unit id="79098817cdc626c0bb4a67f07d58a2b4dfeddde1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; inherits the drag and drop functionality provided by &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. When it receives a drag and drop event, it translates it to a &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;继承了&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;提供的拖放功能。收到拖放事件后，它将其转换为&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46be765bed2f49e930239463189b32b52f267598" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; inherits the drag and drop functionality provided by &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. When it receives a drag and drop event, it translates it to a QGraphicsSceneDragDropEvent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879490b168f2d477f9377492a6af05bfe8060317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; keeps the center of the view aligned when you transform the view.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;&lt;/a&gt;变换视图时，QGraphicsView可使视图的中心对齐。</target>
        </trans-unit>
        <trans-unit id="bff61e8a199eaee87fb0149382b45fcf006c9fbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides the view widget, which visualizes the contents of a scene. You can attach several views to the same scene, to provide several viewports into the same data set. The view widget is a scroll area, and provides scroll bars for navigating through large scenes. To enable OpenGL support, you can set a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; as the viewport by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6976c4139bc255d62aab6f1a5c81467b352cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides the view widget, which visualizes the contents of a scene. You can attach several views to the same scene, to provide several viewports into the same data set. The view widget is a scroll area, and provides scroll bars for navigating through large scenes. To enable OpenGL support, you can set a QGLWidget as the viewport by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;提供了视图小部件，可将场景的内容可视化。您可以将多个视图附加到同一场景，以在同一数据集中提供多个视口。视图窗口小部件是一个滚动区域，并提供用于在大型场景中导航的滚动条。要启用OpenGL支持，可以通过调用&lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: setViewport&lt;/a&gt;（）将QGLWidget设置为视口。</target>
        </trans-unit>
        <trans-unit id="a37ca9b2da1e29650cf0e77e970b3cb9eefae595" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; supports affine transformations, using &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. You can either pass a matrix to &lt;a href=&quot;qgraphicsview#setTransform&quot;&gt;setTransform&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsview#rotate&quot;&gt;rotate&lt;/a&gt;(), &lt;a href=&quot;qgraphicsview#scale&quot;&gt;scale&lt;/a&gt;(), &lt;a href=&quot;qgraphicsview#translate&quot;&gt;translate&lt;/a&gt;() or &lt;a href=&quot;qgraphicsview#shear&quot;&gt;shear&lt;/a&gt;(). The most two common transformations are scaling, which is used to implement zooming, and rotation. &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; keeps the center of the view fixed during a transformation. Because of the scene alignment (setAligment()), translating the view will have no visual impact.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;使用&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;支持仿射变换。您可以将矩阵传递给&lt;a href=&quot;qgraphicsview#setTransform&quot;&gt;setTransform&lt;/a&gt;（），也可以调用便捷函数之一&lt;a href=&quot;qgraphicsview#rotate&quot;&gt;rotate&lt;/a&gt;（），&lt;a href=&quot;qgraphicsview#scale&quot;&gt;scale&lt;/a&gt;（），&lt;a href=&quot;qgraphicsview#translate&quot;&gt;translate&lt;/a&gt;（）或&lt;a href=&quot;qgraphicsview#shear&quot;&gt;shear&lt;/a&gt;（）。最常见的两种转换是缩放，用于实现缩放和旋转。&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;在转换过程中保持视图中心不变。由于场景对齐（setAligment（）），平移视图将不会产生视觉影响。</target>
        </trans-unit>
        <trans-unit id="62fe95272e35f26fc3741d1c99e81ff83c62a3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; supports the same affine transformations as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; does through &lt;a href=&quot;qgraphicsview#setMatrix&quot;&gt;QGraphicsView::setMatrix&lt;/a&gt;(). By applying a transformation to the view, you can easily add support for common navigation features such as zooming and rotating.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;通过&lt;a href=&quot;qgraphicsview#setMatrix&quot;&gt;QGraphicsView :: setMatrix&lt;/a&gt;（）支持与&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;相同的仿射转换。通过对视图应用转换，您可以轻松添加对常见导航功能（例如缩放和旋转）的支持。</target>
        </trans-unit>
        <trans-unit id="610fde61585ab1e779aab55c79fae7a196f0f15f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; supports the same affine transformations as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; does through QGraphicsView::setMatrix(). By applying a transformation to the view, you can easily add support for common navigation features such as zooming and rotating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bf36e4af1816331b10dae470b8a3b87e62aa5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; uses clipping, extra bounding rect adjustments, and certain other aids to improve rendering quality and performance for the common case graphics scene. However, depending on the target platform, the scene, and the viewport in use, some of these operations can degrade performance.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;使用裁剪，额外的边界矩形调整和某些其他辅助手段来改善普通情况下图形场景的渲染质量和性能。但是，根据使用的目标平台，场景和视口，这些操作中的某些操作可能会降低性能。</target>
        </trans-unit>
        <trans-unit id="856dec68d46c15c73c305ed57061594d0a444b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; uses this property to decide how to position the scene in the viewport when the transformation matrix changes, and the coordinate system of the view is transformed. The default behavior, &lt;a href=&quot;qgraphicsview#ViewportAnchor-enum&quot;&gt;AnchorViewCenter&lt;/a&gt;, ensures that the scene point at the center of the view remains unchanged during transformations (e.g., when rotating, the scene will appear to rotate around the center of the view).</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;使用此属性来决定在变换矩阵更改以及视图的坐标系发生变换时如何在场景中放置场景。默认行为&lt;a href=&quot;qgraphicsview#ViewportAnchor-enum&quot;&gt;AnchorViewCenter&lt;/a&gt;，可确保在变换期间视图中心的场景点保持不变（例如，旋转时，场景将围绕视图中心旋转）。</target>
        </trans-unit>
        <trans-unit id="c0a247c87801f4d7fa2e091d773786930441de6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; uses this property to decide how to position the scene in the viewport when the viewport widget's size changes. The default behavior, &lt;a href=&quot;qgraphicsview#ViewportAnchor-enum&quot;&gt;NoAnchor&lt;/a&gt;, leaves the scene's position unchanged during a resize; the top-left corner of the view will appear to be anchored while resizing.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;使用此属性来决定当视口窗口小部件的大小改变时如何将场景放置在视口中。默认行为&lt;a href=&quot;qgraphicsview#ViewportAnchor-enum&quot;&gt;NoAnchor&lt;/a&gt;，在调整大小时，场景的位置保持不变。调整大小时，视图的左上角将被锚定。</target>
        </trans-unit>
        <trans-unit id="30d96eaf02855131f16687ebc7adec2e7223854d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; uses this property to decide how to update areas of the scene that have been reexposed or changed. Usually you do not need to modify this property, but there are some cases where doing so can improve rendering performance. See the &lt;a href=&quot;qgraphicsview#ViewportUpdateMode-enum&quot;&gt;ViewportUpdateMode&lt;/a&gt; documentation for specific details.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;使用此属性来决定如何更新已重新曝光或更改的场景区域。通常，您不需要修改此属性，但是在某些情况下，这样做可以提高渲染性能。有关特定的详细信息，请参见&lt;a href=&quot;qgraphicsview#ViewportUpdateMode-enum&quot;&gt;ViewportUpdateMode&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="3b029f4208bc6f428b6e8f925db5d32b50077998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; visualizes the contents of a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; in a scrollable viewport. To create a scene with geometrical items, see &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s documentation. &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; is part of the &lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;的QGraphicsView&lt;/a&gt;可视化一的内容&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;在一个可滚动视口。要创建包含几何项目的场景，请参见&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;的文档。&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;是&lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework的一部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ad7e260de94f6842c55ed09c0bbd1d580e401aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; visualizes the scene by calling &lt;a href=&quot;qgraphicsview#render&quot;&gt;render&lt;/a&gt;(). By default, the items are drawn onto the viewport by using a regular &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, and using default render hints. To change the default render hints that &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; passes to &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; when painting items, you can call &lt;a href=&quot;qgraphicsview#renderHints-prop&quot;&gt;setRenderHints&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;通过调用&lt;a href=&quot;qgraphicsview#render&quot;&gt;render&lt;/a&gt;（）可视化场景。默认情况下，使用常规&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;并使用默认渲染提示将项目绘制到视口上。若要更改绘制项目时&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;传递给&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的默认渲染提示，可以调用&lt;a href=&quot;qgraphicsview#renderHints-prop&quot;&gt;setRenderHints&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7ce17d80a3af1e4c2e3e55484f048a2e6be3b8a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; will attempt to find an optimal update mode by analyzing the areas that require a redraw.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;将通过分析需要重绘的区域来尝试找到最佳的更新模式。</target>
        </trans-unit>
        <trans-unit id="3047071f268a6ffed612291cdb0f0128aea97e06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; will determine the minimal viewport region that requires a redraw, minimizing the time spent drawing by avoiding a redraw of areas that have not changed. This is &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;'s default mode. Although this approach provides the best performance in general, if there are many small visible changes on the scene, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; might end up spending more time finding the minimal approach than it will spend drawing.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;将确定需要重绘的最小视口区域，从而避免重绘未更改的区域，从而最大程度地减少了绘制时间。这是&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;的默认模式。尽管这种方法通常可以提供最佳的性能，但是如果场景中有许多可见的细微变化，则&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;最终可能会花费更多的时间来寻找最小的方法，而不是花在绘图上。</target>
        </trans-unit>
        <trans-unit id="4c3bcf3d0de6681ae9a00d06e935720afa5914e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; will never update its viewport when the scene changes; the user is expected to control all updates. This mode disables all (potentially slow) item visibility testing in &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;, and is suitable for scenes that either require a fixed frame rate, or where the viewport is otherwise updated externally.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;&lt;/a&gt;当场景改变时，QGraphicsView将永远不会更新其视口；用户应控制所有更新。此模式将禁用&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView中的&lt;/a&gt;所有（可能较慢的）项目可见性测试，并且适用于需要固定帧频或以其他方式更新视口的场景。</target>
        </trans-unit>
        <trans-unit id="2f1ef12fcba0c898fce210d512f9281ae71988ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicsview#render&quot;&gt;QGraphicsView::render&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview#render&quot;&gt;QGraphicsView::render&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="7a8a2c46264e4795c3c9ddb112ac37b959a98515" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; *QGraphicsItem::parentWidget() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; * QGraphicsItem :: parentWidget（）const</target>
        </trans-unit>
        <trans-unit id="dfd76e43b99c99d39e86f01df6e3dad63ed13b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; *QGraphicsItem::topLevelWidget() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; * QGraphicsItem :: topLevelWidget（）const</target>
        </trans-unit>
        <trans-unit id="67b12f6b4261bae228a29190627de42d4dbd1974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; *QGraphicsItem::window() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; * QGraphicsItem :: window（）常量</target>
        </trans-unit>
        <trans-unit id="1a23aa274a091a7e93a28872f56859c9d6dbcbd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; *QGraphicsScene::activeWindow() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; * QGraphicsScene :: activeWindow（）常量</target>
        </trans-unit>
        <trans-unit id="b77179c6b020b0db5964b7de20ada3e7977ed62c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget#QGraphicsWidget&quot;&gt;QGraphicsWidget&lt;/a&gt; *QGraphicsWidget::focusWidget() const</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget#QGraphicsWidget&quot;&gt;QGraphicsWidget&lt;/a&gt; * QGraphicsWidget :: focusWidget（）常量</target>
        </trans-unit>
        <trans-unit id="e2c29af7242bae2c7116ed64d1c37038d0a2e1eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgraphicswidget#getContentsMargins&quot;&gt;QGraphicsProxyWidget::getContentsMargins&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qgraphicswidget#getContentsMargins&quot;&gt;QGraphicsProxyWidget::getContentsMargins&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4ac5a9763a54ac8310c12594c183d10bc155e937" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgregoriancalendar&quot;&gt;QGregorianCalendar&lt;/a&gt;, &lt;a href=&quot;qjuliancalendar&quot;&gt;QJulianCalendar&lt;/a&gt;, and &lt;a href=&quot;qmilankoviccalendar&quot;&gt;QMilankovicCalendar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c44906a9e1801205045494df7397b137cba2bcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; also includes two margin widths: the &lt;a href=&quot;qlayout#getContentsMargins&quot;&gt;contents margin&lt;/a&gt; and the &lt;a href=&quot;qgridlayout#spacing&quot;&gt;spacing&lt;/a&gt;(). The contents margin is the width of the reserved space along each of the &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;'s four sides. The &lt;a href=&quot;qgridlayout#spacing&quot;&gt;spacing&lt;/a&gt;() is the width of the automatically allocated spacing between neighboring boxes.</source>
          <target state="translated">&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;还包括两个余量宽度：所述&lt;a href=&quot;qlayout#getContentsMargins&quot;&gt;内容余量&lt;/a&gt;和&lt;a href=&quot;qgridlayout#spacing&quot;&gt;间距&lt;/a&gt;（）。内容边距是沿着&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;的四个边中的每个保留空间的宽度。的&lt;a href=&quot;qgridlayout#spacing&quot;&gt;间距&lt;/a&gt;（）是相邻的箱之间的自动分配间隔的宽度。</target>
        </trans-unit>
        <trans-unit id="fd722d814903fdd8f006dca63feac09a9bd64972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; takes the space made available to it (by its parent layout or by the &lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt;()), divides it up into rows and columns, and puts each widget it manages into the correct cell.</source>
          <target state="translated">&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;占用可用的空间（通过其父布局或&lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt;（）），将其划分为行和列，然后将其管理的每个窗口小部件放入正确的单元格中。</target>
        </trans-unit>
        <trans-unit id="dea95e02b6fadce83cb778fe9018b2e46602d3f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgridlayout#setRowMinimumHeight&quot;&gt;setRowMinimumHeight()&lt;/a&gt;, &lt;a href=&quot;qgridlayout#setRowStretch&quot;&gt;setRowStretch()&lt;/a&gt;, &lt;a href=&quot;qgridlayout#setColumnMinimumWidth&quot;&gt;setColumnMinimumWidth()&lt;/a&gt;, &lt;a href=&quot;qgridlayout#setColumnStretch&quot;&gt;setColumnStretch()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgridlayout#setRowMinimumHeight&quot;&gt;setRowMinimumHeight（）&lt;/a&gt;，&lt;a href=&quot;qgridlayout#setRowStretch&quot;&gt;setRowStretch（）&lt;/a&gt;，&lt;a href=&quot;qgridlayout#setColumnMinimumWidth&quot;&gt;setColumnMinimumWidth（）&lt;/a&gt;，&lt;a href=&quot;qgridlayout#setColumnStretch&quot;&gt;setColumnStretch（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a82483b0b1408ee5542b6deb80a19c8cf91b6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; (1) provides a group box frame with a title.</source>
          <target state="translated">&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;（1）提供带有标题的组框框架。</target>
        </trans-unit>
        <trans-unit id="829196717c0d409bc31054d14a24f1a1318b5f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; also lets you set the &lt;a href=&quot;qgroupbox#title-prop&quot;&gt;title&lt;/a&gt; (normally set in the constructor) and the title's &lt;a href=&quot;stylesheet-reference#alignment&quot;&gt;alignment&lt;/a&gt;. Group boxes can be &lt;a href=&quot;qgroupbox#checkable-prop&quot;&gt;checkable&lt;/a&gt;. Child widgets in checkable group boxes are enabled or disabled depending on whether or not the group box is &lt;a href=&quot;qgroupbox#checked-prop&quot;&gt;checked&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;还允许您设置&lt;a href=&quot;qgroupbox#title-prop&quot;&gt;标题&lt;/a&gt;（通常在构造函数中设置）和标题的&lt;a href=&quot;stylesheet-reference#alignment&quot;&gt;alignment&lt;/a&gt;。组框可以&lt;a href=&quot;qgroupbox#checkable-prop&quot;&gt;检查&lt;/a&gt;。根据是否&lt;a href=&quot;qgroupbox#checked-prop&quot;&gt;选中&lt;/a&gt;了组框，可检查组框中的子窗口小部件是否启用。</target>
        </trans-unit>
        <trans-unit id="4f5227779a2c22ab1f3aecd7f24cb768269c338e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; doesn't automatically lay out the child widgets (which are often &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;es or &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;s but can be any widgets). The following example shows how we can set up a &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; with a layout:</source>
          <target state="translated">&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;不会自动布局子窗口小部件（通常是&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;或&lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton，&lt;/a&gt;但可以是任何窗口小部件）。以下示例显示了如何使用布局设置&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e77f4a95aa2477a123dc7df0842e2668da7dee83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; contains the main event loop, where all events from the window system and other sources are processed and dispatched. It also handles the application's initialization and finalization, and provides session management. In addition, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; handles most of the system-wide and application-wide settings.</source>
          <target state="translated">&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;包含主事件循环，在该循环中，来自窗口系统和其他来源的所有事件都将被处理和调度。它还处理应用程序的初始化和完成，并提供会话管理。另外，&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;处理大多数系统范围和应用程序范围的设置。</target>
        </trans-unit>
        <trans-unit id="1f324075d8fd2a2365b713a56af1ef23e7af511c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;'s main areas of responsibility are:</source>
          <target state="translated">&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;的主要职责是：</target>
        </trans-unit>
        <trans-unit id="9263d2b42e3adaa174ac7ab89e3ca23ce8de8d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#allWindows&quot;&gt;allWindows&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#topLevelWindows&quot;&gt;topLevelWindows&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;focusWindow&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#clipboard&quot;&gt;clipboard&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#topLevelAt&quot;&gt;topLevelAt&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#allWindows&quot;&gt;allWindows&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#topLevelWindows&quot;&gt;topLevelWindows&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;focusWindow&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#clipboard&quot;&gt;剪贴板&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#topLevelAt&quot;&gt;topLevelAt&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="f4d70cbf64ae0047dc706afd45a78099b21e63b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#desktopSettingsAware&quot;&gt;desktopSettingsAware&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#setDesktopSettingsAware&quot;&gt;setDesktopSettingsAware&lt;/a&gt;(), &lt;a href=&quot;qapplication#cursorFlashTime-prop&quot;&gt;cursorFlashTime&lt;/a&gt;(), &lt;a href=&quot;qapplication#cursorFlashTime-prop&quot;&gt;setCursorFlashTime&lt;/a&gt;(), &lt;a href=&quot;qapplication#doubleClickInterval-prop&quot;&gt;doubleClickInterval&lt;/a&gt;(), &lt;a href=&quot;qapplication#doubleClickInterval-prop&quot;&gt;setDoubleClickInterval&lt;/a&gt;(), &lt;a href=&quot;qapplication#keyboardInputInterval-prop&quot;&gt;setKeyboardInputInterval&lt;/a&gt;(), &lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;wheelScrollLines&lt;/a&gt;(), &lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;setWheelScrollLines&lt;/a&gt;(), &lt;a href=&quot;qapplication#palette&quot;&gt;palette&lt;/a&gt;(), &lt;a href=&quot;qapplication#setPalette&quot;&gt;setPalette&lt;/a&gt;(), &lt;a href=&quot;qapplication#font&quot;&gt;font&lt;/a&gt;(), &lt;a href=&quot;qapplication#setFont&quot;&gt;setFont&lt;/a&gt;(), &lt;a href=&quot;qapplication#fontMetrics&quot;&gt;fontMetrics&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#desktopSettingsAware&quot;&gt;desktopSettingsAware&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#setDesktopSettingsAware&quot;&gt;setDesktopSettingsAware&lt;/a&gt;（），&lt;a href=&quot;qapplication#cursorFlashTime-prop&quot;&gt;cursorFlashTime&lt;/a&gt;（），&lt;a href=&quot;qapplication#cursorFlashTime-prop&quot;&gt;setCursorFlashTime&lt;/a&gt;（），&lt;a href=&quot;qapplication#doubleClickInterval-prop&quot;&gt;doubleClickInterval&lt;/a&gt;（），&lt;a href=&quot;qapplication#doubleClickInterval-prop&quot;&gt;setDoubleClickInterval&lt;/a&gt;（），&lt;a href=&quot;qapplication#keyboardInputInterval-prop&quot;&gt;setKeyboardInputInterval&lt;/a&gt;（），&lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;wheelScrollLines&lt;/a&gt;（），&lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;setWheelScrollLines&lt;/a&gt;（），&lt;a href=&quot;qapplication#palette&quot;&gt;调色板&lt;/a&gt;（），&lt;a href=&quot;qapplication#setPalette&quot;&gt;调用SetPalette&lt;/a&gt;（），&lt;a href=&quot;qapplication#font&quot;&gt;字体&lt;/a&gt;（），&lt;a href=&quot;qapplication#setFont&quot;&gt;setfont程序&lt;/a&gt;（ ），&lt;a href=&quot;qapplication#fontMetrics&quot;&gt;fontMetrics&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="88e66f03899e2e1cdaf6b54fd1886f83f26314fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#desktopSettingsAware&quot;&gt;desktopSettingsAware&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#setDesktopSettingsAware&quot;&gt;setDesktopSettingsAware&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#styleHints&quot;&gt;styleHints&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#palette&quot;&gt;palette&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#setPalette&quot;&gt;setPalette&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#font&quot;&gt;font&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#setFont&quot;&gt;setFont&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#desktopSettingsAware&quot;&gt;desktopSettingsAware&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#setDesktopSettingsAware&quot;&gt;setDesktopSettingsAware&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#styleHints&quot;&gt;styleHints&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#palette&quot;&gt;调色板&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#setPalette&quot;&gt;setPalette&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#font&quot;&gt;字体&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#setFont&quot;&gt;setFont&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3100512682be0a152ae3d78ee639d0fcc092313c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#quit&quot;&gt;quit&lt;/a&gt;(). &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;sendEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;postEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#sendPostedEvents&quot;&gt;sendPostedEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#removePostedEvents&quot;&gt;removePostedEvents&lt;/a&gt;(), hasPendingEvents(), &lt;a href=&quot;qguiapplication#notify&quot;&gt;notify&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#exec&quot;&gt;exec&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#quit&quot;&gt;quit&lt;/a&gt;（）。&lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;sendEvent&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;postEvent&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#sendPostedEvents&quot;&gt;sendPostedEvents&lt;/a&gt;（），&lt;a href=&quot;qcoreapplication#removePostedEvents&quot;&gt;removePostedEvents&lt;/a&gt;（），hasPendingEvents（），&lt;a href=&quot;qguiapplication#notify&quot;&gt;notify&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="fb787147e320c84fb5b0a2b3ea5485400ac54e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#isSessionRestored&quot;&gt;isSessionRestored&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#sessionId&quot;&gt;sessionId&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;commitDataRequest&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;saveStateRequest&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#isSessionRestored&quot;&gt;isSessionRestored&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#sessionId&quot;&gt;sessionId&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;commitDataRequest&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;saveStateRequest&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="87b243fc426286720ecf9b107550c7bcffd5b795" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#overrideCursor&quot;&gt;overrideCursor&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#overrideCursor&quot;&gt;overrideCursor&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt;（），&lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="a41956b21d643f737b84d5bb19b3be73af3b5410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qguiapplication#platformName-prop&quot;&gt;platformName&lt;/a&gt;[:options]</source>
          <target state="translated">&lt;a href=&quot;qguiapplication#platformName-prop&quot;&gt;platformName&lt;/a&gt;[:options]</target>
        </trans-unit>
        <trans-unit id="00b267312a87f7b37d4c78f18e3b5418bad1cfdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; *QGyroscope::reading() const</source>
          <target state="translated">&lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; * QGyroscope :: reading（）const</target>
        </trans-unit>
        <trans-unit id="14b76efb41f4e640766a08fe53180bd5dbc7c4c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QBluetoothDeviceInfo::manufacturerData() const</source>
          <target state="translated">&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt; &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;，&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QBluetoothDeviceInfo :: manufacturerData（）常量</target>
        </trans-unit>
        <trans-unit id="166ea2bb64140656836bb98aec9e602b3eabfc1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *&amp;gt; QWebChannel::registeredObjects() const</source>
          <target state="translated">&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *&amp;gt; QWebChannel :: registeredObjects（）常量</target>
        </trans-unit>
        <trans-unit id="61a2bdf7378fb3ea11899f4ef3ede7680d2d8f7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; QVariant::toHash() const</source>
          <target state="translated">&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;gt; QVariant :: toHash（）常量</target>
        </trans-unit>
        <trans-unit id="cc4dac704f91717dad664cae30896ed0d95271c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QBluetoothDeviceInfo::manufacturerData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1a40ad4641ea05583c5c09cf928874a9ae6312" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;QHash::operator=(&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt;＆QHash :: operator =（&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="398787aa6776b5d7770144751c103a948770992a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;QHash::operator=(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt;＆QHash :: operator =（const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="2c5acd9ffa77bbe8ff90d136bda140ad6edcf791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;QHash::unite(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt;＆QHash :: unite（const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K，V&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="e3c0caf282fe7bd98dd677c44ce55cbfc87c1fd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash::const_key_value_iterator&lt;/a&gt; QHash::constKeyValueBegin() const</source>
          <target state="translated">&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash :: const_key_value_iterator&lt;/a&gt; QHash :: constKeyValueBegin（）const</target>
        </trans-unit>
        <trans-unit id="b8b5f7eab58531c9c696d728cbbb535016f603c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash::const_key_value_iterator&lt;/a&gt; QHash::constKeyValueEnd() const</source>
          <target state="translated">&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash :: const_key_value_iterator&lt;/a&gt; QHash :: constKeyValueEnd（）const</target>
        </trans-unit>
        <trans-unit id="4faf766148c997ecb4bfbc29f5200676b1298821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash::const_key_value_iterator&lt;/a&gt; QHash::keyValueBegin() const</source>
          <target state="translated">&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash :: const_key_value_iterator&lt;/a&gt; QHash :: keyValueBegin（）const</target>
        </trans-unit>
        <trans-unit id="3396b65d7276eac269c3fde264edafc34390a87e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash::const_key_value_iterator&lt;/a&gt; QHash::keyValueEnd() const</source>
          <target state="translated">&lt;a href=&quot;qhash#const_key_value_iterator-typedef&quot;&gt;QHash :: const_key_value_iterator&lt;/a&gt; QHash :: keyValueEnd（）const</target>
        </trans-unit>
        <trans-unit id="71013b1f15ffcae628edbb2ffa54ab97b372427e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#key_value_iterator-typedef&quot;&gt;QHash::key_value_iterator&lt;/a&gt; QHash::keyValueBegin()</source>
          <target state="translated">&lt;a href=&quot;qhash#key_value_iterator-typedef&quot;&gt;QHash :: key_value_iterator&lt;/a&gt; QHash :: keyValueBegin（）</target>
        </trans-unit>
        <trans-unit id="e9e1d9f560308aec43891f9d4aeb9580f3a5dc81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#key_value_iterator-typedef&quot;&gt;QHash::key_value_iterator&lt;/a&gt; QHash::keyValueEnd()</source>
          <target state="translated">&lt;a href=&quot;qhash#key_value_iterator-typedef&quot;&gt;QHash :: key_value_iterator&lt;/a&gt; QHash :: keyValueEnd（）</target>
        </trans-unit>
        <trans-unit id="7d6bea109cdcc553db528b300a912ffcfb5796b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; features both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style iterators are more low-level and more cumbersome to use; on the other hand, they are slightly faster and, for developers who already know STL, have the advantage of familiarity.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;同时具有&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;。STL样式的迭代器更底层且使用起来更麻烦。另一方面，它们稍微快一点，对于已经了解STL的开发人员来说，它们具有熟悉的优势。</target>
        </trans-unit>
        <trans-unit id="3ba78ec2400b86da4b6b5170ba63c566e089ab23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; has both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash同时&lt;/a&gt;具有&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java样式的迭代器&lt;/a&gt;和&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL样式的迭代器&lt;/a&gt;。Java风格的迭代器比STL风格的迭代器更高级，更易于使用。另一方面，它们的效率略低。</target>
        </trans-unit>
        <trans-unit id="cb8dc515b5f22ee26e3768ef384b4c79a549cd15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; is unordered, so an iterator's sequence cannot be assumed to be predictable. If ordering by key is required, use a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;是无序的，因此不能假定迭代器的序列是可预测的。如果需要通过密钥订购，请使用&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70beffb8b5bb7174501f00a32dd784bac9ad774f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; provides average faster lookups than &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;. (See &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details.)</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;提供比&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;平均更快的查找。（有关详细信息，请参见&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;算法复杂性&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="94d398f146e1a50190028e15cf00549a2a999809" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; provides average faster lookups than QMap. (See &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75a130ea2b30e5fa8d8bbfff5edab726cd0e66e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; provides faster lookups than &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;. (See &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details.)</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;提供比&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;更快的查找。（有关详细信息，请参见&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;算法复杂性&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="8dbd65ea3cddb471b1cb1138e075a171130dd10c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; provides very similar functionality to &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;. The differences are:</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;提供与&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;非常相似的功能。不同之处在于：</target>
        </trans-unit>
        <trans-unit id="9674eccde3b4ae681b9f833fe600da13ee6f783a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;密钥，T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="503459286b306330d01f00a0127d2e8ce35dca55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; is a totally different case. &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s internal hash table grows by powers of two, and each time it grows, the items are relocated in a new bucket, computed as &lt;a href=&quot;qhash#qhash&quot;&gt;qHash&lt;/a&gt;(</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt;是完全不同的情况。&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;的内部哈希表以2的幂次方增长，并且每次增长时，这些项都将重新定位在新的存储区中，计算方式为&lt;a href=&quot;qhash#qhash&quot;&gt;qHash&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="6a92cc9266a381a024e9f5498a7ea9e31715774b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It stores (key, value) pairs and provides very fast lookup of the value associated with a key.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt;是Qt的通用&lt;a href=&quot;containers#&quot;&gt;容器类之一&lt;/a&gt;。它存储（键，值）对，并提供与键关联的值的快速查找。</target>
        </trans-unit>
        <trans-unit id="59edf537ec04b0b09a52936e1075559705d01b19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;键，T&amp;gt;，&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; &amp;lt;键，T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85feedaec811028b5ee4fc09f2bd5cfd35c81fe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;键，T&amp;gt; :: const_iterator</target>
        </trans-unit>
        <trans-unit id="76d21f6eb6b5e62b59363cd253c15f0853be9e25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator allows you to iterate over a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; (or a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;). If you want to modify the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; as you iterate over it, you must use &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; instead. It is generally good practice to use &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; on a non-const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; as well, unless you need to change the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; through the iterator. Const iterators are slightly faster, and can improve code readability.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: const_iterator允许您迭代&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;（或&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;）。如果要在迭代过程中修改&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;，则必须改用&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt;。通常最好在非const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;上也使用&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;，除非您需要通过迭代器更改&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;。常量迭代器的速度稍快一些，可以提高代码的可读性。</target>
        </trans-unit>
        <trans-unit id="20085353e9115e797e18db38c4ffe1d32af7f41c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;::iterator</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: iterator</target>
        </trans-unit>
        <trans-unit id="befcd22d23ca91f1ae090fa86b3e2cffb0540092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;::iterator allows you to iterate over a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; (or &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;) and to modify the value (but not the key) associated with a particular key. If you want to iterate over a const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, you should use &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;. It is generally good practice to use &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; on a non-const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; as well, unless you need to change the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; through the iterator. Const iterators are slightly faster, and can improve code readability.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt; :: iterator允许您遍历&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;（或&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;）并修改与特定键关联的值（而不是键）。如果要遍历const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;，则应使用&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;。通常最好在非const &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;上也使用&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;，除非您需要通过迭代器更改&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;。常量迭代器的速度稍快一些，可以提高代码的可读性。</target>
        </trans-unit>
        <trans-unit id="031fbdf5f0627a597d01d946e43262d1ad7c8caf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;T1, T2&amp;gt;, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;T1, T2&amp;gt; or &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; where T1 and T2 are registered meta types</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;T1，T2&amp;gt;，&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;T1，T2&amp;gt;或&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1，T2&amp;gt;其中T1和T2是注册元类型</target>
        </trans-unit>
        <trans-unit id="d821de1e5aa216e83a1880c85960bcba0c67de8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s key and value data types must be &lt;a href=&quot;containers#assignable-data-types&quot;&gt;assignable data types&lt;/a&gt;. You cannot, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;的键和值数据类型必须是&lt;a href=&quot;containers#assignable-data-types&quot;&gt;可分配的数据类型&lt;/a&gt;。例如，您不能将&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;存储为值。而是存储一个&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *。</target>
        </trans-unit>
        <trans-unit id="6aaf361594d2d95cbd2964a2b7871df67e2b7ab2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::begin() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: begin（）const</target>
        </trans-unit>
        <trans-unit id="b53a06a546043204f05761d6013ae5fc47aa25dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: cbegin（）const</target>
        </trans-unit>
        <trans-unit id="4bff1952e13bca708272ddf6b717f402650f57ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::cend() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: cend（）const</target>
        </trans-unit>
        <trans-unit id="485c8ea65e57ad38b5b04bd02e13ef1e501ea850" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::constBegin() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: constBegin（）const</target>
        </trans-unit>
        <trans-unit id="d8431471a9a16a584cb6422cb69a14e53b9bf9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::constEnd() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: constEnd（）const</target>
        </trans-unit>
        <trans-unit id="edb19eab350192030df60f27ea8c226222b0f622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::constFind(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: constFind（const键＆</target>
        </trans-unit>
        <trans-unit id="7778822a28401e8259f59b73493b8b81ebd89fba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::end() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: end（）const</target>
        </trans-unit>
        <trans-unit id="49325f2ae1bea10183f8f6c264207fc1ce947192" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; QHash::find(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; QHash :: find（const键＆</target>
        </trans-unit>
        <trans-unit id="2e032dc2c29144fa6cad989945a49e53f01b6dc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator&quot;&gt;const_iterator&lt;/a&gt; key_iterator::base() const</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;const_iterator&lt;/a&gt; key_iterator :: base（）const</target>
        </trans-unit>
        <trans-unit id="d4cad4c367456236f723ddfdb94a94c20caef57b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator ++（）</target>
        </trans-unit>
        <trans-unit id="a2c6baf7262bad71bc595842910fa9fa574a9976" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator + =（int</target>
        </trans-unit>
        <trans-unit id="7ee4ee70a02b2206c3d03c0c8184b97be6c20787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-（）</target>
        </trans-unit>
        <trans-unit id="c03cb51acc0c308f39bea366ebc56cde4d95396a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt;＆const_iterator :: operator-=（int</target>
        </trans-unit>
        <trans-unit id="8043f877ba19d5ff916c7fb8a8307a1fdee58f10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator +（int</target>
        </trans-unit>
        <trans-unit id="272cfa8293f0dd9547147cb3acd4a86bcb1bd344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator ++（</target>
        </trans-unit>
        <trans-unit id="36948c80e47da49f1a75f9adf07031ba14f7e0b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（int</target>
        </trans-unit>
        <trans-unit id="bbe19ecb67360a6d2297f7ea3c0b69071e05ae6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-（</target>
        </trans-unit>
        <trans-unit id="d61ee13bad6146fd41a04bf188c9f9c90134236e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::begin()</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: begin（）</target>
        </trans-unit>
        <trans-unit id="0886080777f57457960ca21707696425d52acc12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::end()</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: end（）</target>
        </trans-unit>
        <trans-unit id="7e39ed91b6d3481cbe0eb5d15cb00d3a984ec20a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::erase(&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: erase（&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f97299ce550ac33bf0a03d4539e9634a239f8c52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::erase(&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: erase（&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3337dabaabfc6ec663bee9a4cb1c433d48a83330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::find(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: find（const Key＆</target>
        </trans-unit>
        <trans-unit id="111c26c9cab4560cd2df501b28a60b8259bb952a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::insert(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: insert（const Key＆</target>
        </trans-unit>
        <trans-unit id="4b44be1d02f33d0c49324c6f884ba5df312b9038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::insertMulti(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; QHash :: insertMulti（con​​st Key＆</target>
        </trans-unit>
        <trans-unit id="f6c1812fa9baabcf29ad514caee8cee2fa231583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator ++（）</target>
        </trans-unit>
        <trans-unit id="28838302e19b9960ab823d16d3f5f9be8d1da816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator + =（int</target>
        </trans-unit>
        <trans-unit id="20f6c1149d9e1853e72c65746a4fdfdb8e76fed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator-（）</target>
        </trans-unit>
        <trans-unit id="b28a7ef820b5655d1e4a42b2c9d12034a85348dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代器&lt;/a&gt;＆iterator :: operator-=（int</target>
        </trans-unit>
        <trans-unit id="306c6d20dfc9b685e85f2499d03554aaf02852fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代器&lt;/a&gt; iterator :: operator +（int</target>
        </trans-unit>
        <trans-unit id="6788db2495bca4807e31804916b0aab4328c952a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator ++（</target>
        </trans-unit>
        <trans-unit id="4c7a7aaa0392f068fcb4ef549ac799bf86515b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator-（int</target>
        </trans-unit>
        <trans-unit id="809b1ad591568234e0a8a3cccf78dff99c9a44c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator#iterator&quot;&gt;迭代&lt;/a&gt;器iterator :: operator-（</target>
        </trans-unit>
        <trans-unit id="a37ee778ce58a5e47b425cfad035f738c4178b10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash::key_iterator&lt;/a&gt; QHash::keyBegin() const</source>
          <target state="translated">&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash :: key_iterator&lt;/a&gt; QHash :: keyBegin（）常量</target>
        </trans-unit>
        <trans-unit id="14b774ec88fed81b8ff3869991ab45d24b94e3fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash::key_iterator&lt;/a&gt; QHash::keyEnd() const</source>
          <target state="translated">&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash :: key_iterator&lt;/a&gt; QHash :: keyEnd（）const</target>
        </trans-unit>
        <trans-unit id="4d5f0df248180f0c45b9dc3ea469658b05e43ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash::key_iterator&lt;/a&gt; is const, it's not possible to modify the key.</source>
          <target state="translated">&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash :: key_iterator&lt;/a&gt;是const，无法修改密钥。</target>
        </trans-unit>
        <trans-unit id="f175ff0519a387ef244d44b2534d49bf4d2488f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash::key_iterator&lt;/a&gt; is essentially the same as &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; with the difference that operator*() and operator-&amp;gt;() return a key instead of a value.</source>
          <target state="translated">&lt;a href=&quot;qhash-key-iterator&quot;&gt;QHash :: key_iterator&lt;/a&gt;本质上与&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;相同，区别在于operator *（）和operator-&amp;gt;（）返回键而不是值。</target>
        </trans-unit>
        <trans-unit id="0cedc7094d873a39f2b688e80a99f6bd178a2b24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt;&amp;lt;Key, T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt; &amp;lt;键，T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3eb248d3a1a99aeee1adfacf4be8130901325bcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt;&amp;lt;Key, T&amp;gt; allows you to iterate over a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; (or a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;). If you want to modify the hash as you iterate over it, use &lt;a href=&quot;qmutablehashiterator&quot;&gt;QMutableHashIterator&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt; &amp;lt;Key，T&amp;gt;允许您遍历&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;（或&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;）。如果要在迭代时修改哈希，请改用&lt;a href=&quot;qmutablehashiterator&quot;&gt;QMutableHashIterator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b9b9af7bd3be405d99cb2ac0317cb5fb6c0db68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhashiterator#QHashIterator&quot;&gt;QHashIterator&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;QHashIterator::operator=(const &lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhashiterator#QHashIterator&quot;&gt;QHashIterator&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆QHashIterator :: operator =（const &lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key，T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="571c87332ea83015bd4db0937b78b15dc2b6133f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; and &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;和&lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28c0be8c32a66f7c04674cdea0efd51d1d2d81ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhcandlestickmodelmapper&quot;&gt;QHCandlestickModelMapper&lt;/a&gt; and &lt;a href=&quot;qvcandlestickmodelmapper&quot;&gt;QVCandlestickModelMapper&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qhcandlestickmodelmapper&quot;&gt;QHCandlestickModelMapper&lt;/a&gt;和&lt;a href=&quot;qvcandlestickmodelmapper&quot;&gt;QVCandlestickModelMapper&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="044bfa6a8640357bc977ab8783d206824d1d3180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *QTableView::horizontalHeader() const</source>
          <target state="translated">&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; * QTableView :: horizo​​ntalHeader（）常量</target>
        </trans-unit>
        <trans-unit id="3b786b5b8eebff0ff6be93baf0a1f4e435e241f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *QTableView::verticalHeader() const</source>
          <target state="translated">&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; * QTableView :: verticalHeader（）常量</target>
        </trans-unit>
        <trans-unit id="63cf26e8b12d9d7c8ff5d01febb595200a5d7248" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *QTreeView::header() const</source>
          <target state="translated">&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; * QTreeView :: header（）常量</target>
        </trans-unit>
        <trans-unit id="53abd569b26a7e46feec5d67cd7beeff4493655f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; will automatically resize the section to fill the available space. The size cannot be changed by the user or programmatically.</source>
          <target state="translated">&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;将自动调整该部分的大小以填充可用空间。大小不能由用户或以编程方式更改。</target>
        </trans-unit>
        <trans-unit id="15dc93437a49f91e10124c1565fe786e65200cdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; will automatically resize the section to its optimal size based on the contents of the entire column or row. The size cannot be changed by the user or programmatically. (This value was introduced in 4.2)</source>
          <target state="translated">&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;将根据整个列或行的内容自动将节的大小调整为最佳大小。大小不能由用户或以编程方式更改。（此值在4.2中引入）</target>
        </trans-unit>
        <trans-unit id="c6a5829a71aaa4f9c0a790d26ed6dc8b44e59949" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheaderview#ResizeMode-enum&quot;&gt;QHeaderView::ResizeMode&lt;/a&gt; QHeaderView::sectionResizeMode(int</source>
          <target state="translated">&lt;a href=&quot;qheaderview#ResizeMode-enum&quot;&gt;QHeaderView :: ResizeMode&lt;/a&gt; QHeaderView :: sectionResizeMode（int</target>
        </trans-unit>
        <trans-unit id="19c9c3240d05fa761a792a87c8665516d281128d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt; and &lt;a href=&quot;qitemmodelsurfacedataproxy&quot;&gt;QItemModelSurfaceDataProxy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt;和&lt;a href=&quot;qitemmodelsurfacedataproxy&quot;&gt;QItemModelSurfaceDataProxy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ebcfc3261e060d72e69654475c124d3abe5dff2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt; is a specialized proxy for generating a surface graph from a heightmap image. See the &lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt; documentation for more information.</source>
          <target state="translated">&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt;是用于从高度图图像生成表面图的专用代理。有关更多信息，请参见&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="846780468c55905f039c901b16fde35e81338477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt; takes care of surface related height map data handling. It provides a way to give a height map to be visualized as a surface plot.</source>
          <target state="translated">&lt;a href=&quot;qheightmapsurfacedataproxy&quot;&gt;QHeightMapSurfaceDataProxy&lt;/a&gt;负责与表面相关的高度图数据处理。它提供了一种使高度图可视化为表面图的方法。</target>
        </trans-unit>
        <trans-unit id="9402663cb4d2e54ddd6fdc771f2c7be9a2601be2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpcontentitem&quot;&gt;QHelpContentItem&lt;/a&gt; *QHelpContentModel::contentItemAt(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhelpcontentitem&quot;&gt;QHelpContentItem&lt;/a&gt; * QHelpContentModel :: contentItemAt（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d62025a3500b0686fff3d95e5ddc71eebd62c665" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpcontentmodel&quot;&gt;QHelpContentModel&lt;/a&gt; *QHelpEngine::contentModel() const</source>
          <target state="translated">&lt;a href=&quot;qhelpcontentmodel&quot;&gt;QHelpContentModel&lt;/a&gt; * QHelpEngine :: contentModel（）const</target>
        </trans-unit>
        <trans-unit id="09f7b5c5a2476eec9d3e95dc3d2425a8e1456d69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpcontentwidget&quot;&gt;QHelpContentWidget&lt;/a&gt; *QHelpEngine::contentWidget()</source>
          <target state="translated">&lt;a href=&quot;qhelpcontentwidget&quot;&gt;QHelpContentWidget&lt;/a&gt; * QHelpEngine :: contentWidget（）</target>
        </trans-unit>
        <trans-unit id="b044fec4da42804de5910a755b3c44b878ded1ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; *QHelpIndexModel::helpEngine() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7dac37085d83d4d565ded9e5afe3008fef60b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; QHelpFilterEngine::filterData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; QHelpFilterEngine :: filterData（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1330fd2562e5296ada351f86a0870fbae0c145e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt; &amp;amp;QHelpFilterData::operator=(&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt;＆QHelpFilterData :: operator =（&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="aff8e6c133f61c0ec6f585c0012c165ff7a6f537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt; &amp;amp;QHelpFilterData::operator=(const &lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt;＆QHelpFilterData :: operator =（const &lt;a href=&quot;qhelpfilterdata#QHelpFilterData&quot;&gt;QHelpFilterData&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ee6aef0dc22b572c5399921d6e7e420542ead7c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpfilterengine&quot;&gt;QHelpFilterEngine&lt;/a&gt; *QHelpEngineCore::filterEngine() const</source>
          <target state="translated">&lt;a href=&quot;qhelpfilterengine&quot;&gt;QHelpFilterEngine&lt;/a&gt; * QHelpEngineCore :: filterEngine（）const</target>
        </trans-unit>
        <trans-unit id="428b1ea21c4120a842c1cda0625c34287d2dfc73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpindexmodel&quot;&gt;QHelpIndexModel&lt;/a&gt; *QHelpEngine::indexModel() const</source>
          <target state="translated">&lt;a href=&quot;qhelpindexmodel&quot;&gt;QHelpIndexModel&lt;/a&gt; * QHelpEngine :: indexModel（）const</target>
        </trans-unit>
        <trans-unit id="c897eeb577e61ab7de5933d24648930061f0d19c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpindexwidget&quot;&gt;QHelpIndexWidget&lt;/a&gt; *QHelpEngine::indexWidget()</source>
          <target state="translated">&lt;a href=&quot;qhelpindexwidget&quot;&gt;QHelpIndexWidget&lt;/a&gt; * QHelpEngine :: indexWidget（）</target>
        </trans-unit>
        <trans-unit id="53c01ddcd02b1433f38f747271932efb3bd24796" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpsearchengine&quot;&gt;QHelpSearchEngine&lt;/a&gt; *QHelpEngine::searchEngine()</source>
          <target state="translated">&lt;a href=&quot;qhelpsearchengine&quot;&gt;QHelpSearchEngine&lt;/a&gt; * QHelpEngine :: searchEngine（）</target>
        </trans-unit>
        <trans-unit id="1f223dce102597544ac656b1173205fd0d334f03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpsearchquerywidget&quot;&gt;QHelpSearchQueryWidget&lt;/a&gt; *QHelpSearchEngine::queryWidget()</source>
          <target state="translated">&lt;a href=&quot;qhelpsearchquerywidget&quot;&gt;QHelpSearchQueryWidget&lt;/a&gt; * QHelpSearchEngine :: queryWidget（）</target>
        </trans-unit>
        <trans-unit id="1827ba9d097a3f1eb648f481b3dc5b3b670e1f60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpsearchresult#QHelpSearchResult&quot;&gt;QHelpSearchResult&lt;/a&gt; &amp;amp;QHelpSearchResult::operator=(const &lt;a href=&quot;qhelpsearchresult#QHelpSearchResult&quot;&gt;QHelpSearchResult&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhelpsearchresult#QHelpSearchResult&quot;&gt;QHelpSearchResult&lt;/a&gt;＆QHelpSearchResult :: operator =（const &lt;a href=&quot;qhelpsearchresult#QHelpSearchResult&quot;&gt;QHelpSearchResult&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="996298496acd87d4058ab769a3a098f567a09354" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; *QHelpSearchEngine::resultWidget()</source>
          <target state="translated">&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; * QHelpSearchEngine :: resultWidget（）</target>
        </trans-unit>
        <trans-unit id="aa6e59b3d77a9c3548dbe53df79460e279effdfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhistorystate#HistoryType-enum&quot;&gt;QHistoryState::HistoryType&lt;/a&gt; QHistoryState::historyType() const</source>
          <target state="translated">&lt;a href=&quot;qhistorystate#HistoryType-enum&quot;&gt;QHistoryState :: HistoryType&lt;/a&gt; QHistoryState :: historyType（）const</target>
        </trans-unit>
        <trans-unit id="aa1a604c134058f09dd2b9986103dafbb680566d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; *QHolsterSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; * QHolsterSensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="f96357d2e643ed4d97a734a1719993b33425269d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QAbstractSocket::localAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QAbstractSocket :: localAddress（）常量</target>
        </trans-unit>
        <trans-unit id="a48d1235d3bdbe06f5d71e227d6d72f7885b6c79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QAbstractSocket::peerAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QAbstractSocket :: peerAddress（）常量</target>
        </trans-unit>
        <trans-unit id="df09e471225e435ba4557ee421c48c35b2825d54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QDnsHostAddressRecord::value() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QDnsHostAddressRecord :: value（）常量</target>
        </trans-unit>
        <trans-unit id="f7af7cfd749f70c392f47cf08f420f253aaf15df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QDtls::peerAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QDtls :: peerAddress（）常量</target>
        </trans-unit>
        <trans-unit id="e18438e2367edd9aef3be775441b19a5809fb7c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry::broadcast() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry :: broadcast（）const</target>
        </trans-unit>
        <trans-unit id="5ca5d237752197ad6a614b0a67bcd6c840c09868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry::ip() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry :: ip（）常量</target>
        </trans-unit>
        <trans-unit id="32b02ca7fffabbbee7225c39689f097f535eab37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry::netmask() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkAddressEntry :: netmask（）常量</target>
        </trans-unit>
        <trans-unit id="63c5d3b3633f598e90658fadb00ce1f2919821b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkDatagram::destinationAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkDatagram :: destinationAddress（）常量</target>
        </trans-unit>
        <trans-unit id="95ab1e48a1d59f5a04d0548919e39cf7fc370230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkDatagram::senderAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QNetworkDatagram :: senderAddress（）常量</target>
        </trans-unit>
        <trans-unit id="5c3c3f7ebe6a002e826a7d6b8d308b6d8dce98aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QTcpServer::serverAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QTcpServer :: serverAddress（）常量</target>
        </trans-unit>
        <trans-unit id="2088bf0f6f1eede07f1a120cc2aed4c84f55f094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocket::localAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocket :: localAddress（）常量</target>
        </trans-unit>
        <trans-unit id="1a074bb45f455ed3fb41e8334d81e145b4ca16ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocket::peerAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocket :: peerAddress（）常量</target>
        </trans-unit>
        <trans-unit id="9f8c3f63df594c858630eb74179b131dcd69f4d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocketServer::serverAddress() const</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; QWebSocketServer :: serverAddress（）常量</target>
        </trans-unit>
        <trans-unit id="d12a0f878340a22df121910fd29553c03f3d22ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; is normally used with the &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;, and &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; to connect to a host or to set up a server.</source>
          <target state="translated">&lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;通常与&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;，&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;和&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;一起使用，以连接到主机或设置服务器。</target>
        </trans-unit>
        <trans-unit id="85666b476a2c3182b16af592434a038c4b3fe105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;QHostAddress::operator=(&lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress::SpecialAddress&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;＆QHostAddress :: operator =（&lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress :: SpecialAddress&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aa1da46b7de5601f704f6ecda95a78b7a027c55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;QHostAddress::operator=(const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;＆QHostAddress :: operator =（const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2529a3b8d16fd41f0639771d07ab1c1229a903e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;QHostAddress::operator=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;＆QHostAddress :: operator =（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c5f48f61d29a167bf86181adc0856e426d4bd533" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; also provides a static function called &lt;a href=&quot;qhostinfo#fromName&quot;&gt;QHostInfo::fromName&lt;/a&gt;() that takes the host name as argument and returns the results. In this case, the name lookup is performed in the same thread as the caller. This overload is useful for non-GUI applications or for doing name lookups in a separate, non-GUI thread. (Calling this function in a GUI thread may cause your user interface to freeze while the function blocks as it performs the lookup.)</source>
          <target state="translated">&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;还提供了一个名为&lt;a href=&quot;qhostinfo#fromName&quot;&gt;QHostInfo :: fromName&lt;/a&gt;（）的静态函数，该函数将主机名作为参数并返回结果。在这种情况下，名称查找在与调用方相同的线程中执行。此重载对于非GUI应用程序或在单独的非GUI线程中进行名称查找很有用。（在GUI线程中调用此功能可能会导致用户界面冻结，而该功能在执行查找时会阻塞。）</target>
        </trans-unit>
        <trans-unit id="c9d75c90ccf6c7d0acf3dea10ebddbf4c477d24f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; finds the IP address(es) associated with a host name, or the host name associated with an IP address. The class provides two static convenience functions: one that works asynchronously and emits a signal once the host is found, and one that blocks and returns a &lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;查找与主机名关联的IP地址，或与IP地址关联的主机名。该类提供了两个静态便利函数：一个异步工作并在找到主机后发出信号，另一个则阻塞并返回&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="64ba7b1d4871dd2be5b9693a88ca82c222b2949e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; provides a static function that lets you perform such a lookup yourself. By calling &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;QHostInfo::lookupHost&lt;/a&gt;() with a host name, a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; pointer, and a slot signature, &lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; will perform the name lookup and invoke the given slot when the results are ready. The actual lookup is done in a separate thread, making use of the operating system's own methods for performing name lookups.</source>
          <target state="translated">&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;提供了一个静态函数，使您可以自己执行这种查找。通过使用主机名，&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;指针和插槽签名调用&lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;QHostInfo :: lookupHost&lt;/a&gt;（），&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;将执行名称查找并在结果准备好后调用给定的插槽。实际查找是在单独的线程中完成的，利用操作系统自己的方法执行名称查找。</target>
        </trans-unit>
        <trans-unit id="660ad38e3c5e0255754821605407ec965e02b23e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; supports Internationalized Domain Names (IDNs) through the IDNA and Punycode standards.</source>
          <target state="translated">&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;通过IDNA和Punycode标准支持国际化域名（IDN）。</target>
        </trans-unit>
        <trans-unit id="f1858e43c7070a19b5676e696febef77a66a85f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; uses the mechanisms provided by the operating system to perform the lookup. As per {https://tools.ietf.org/html/rfc6724}{RFC 6724} there is no guarantee that all IP addresses registered for a domain or host will be returned.</source>
          <target state="translated">&lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt;使用操作系统提供的机制来执行查找。根据{https://tools.ietf.org/html/rfc6724}{RFC 6724}，不能保证将返回为域或主机注册的所有IP地址。</target>
        </trans-unit>
        <trans-unit id="c71c83d92290ffd471c00fd6d605fc86ae10fa69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo#HostInfoError-enum&quot;&gt;QHostInfo::HostInfoError&lt;/a&gt; QHostInfo::error() const</source>
          <target state="translated">&lt;a href=&quot;qhostinfo#HostInfoError-enum&quot;&gt;QHostInfo :: HostInfoError&lt;/a&gt; QHostInfo :: error（）常量</target>
        </trans-unit>
        <trans-unit id="88491e800aed07d62f1647da0eec8bf1ef16b0b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt; &amp;amp;QHostInfo::operator=(&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt;＆QHostInfo :: operator =（&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="756641455bfa4ba0804ee302c2dd342e7ac7000a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt; &amp;amp;QHostInfo::operator=(const &lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt;＆QHostInfo :: operator =（const &lt;a href=&quot;qhostinfo#QHostInfo&quot;&gt;QHostInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b379c84f32382218b75106ca69d3dd01db7017bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhstspolicy#QHstsPolicy&quot;&gt;QHstsPolicy&lt;/a&gt; &amp;amp;QHstsPolicy::operator=(const &lt;a href=&quot;qhstspolicy#QHstsPolicy&quot;&gt;QHstsPolicy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhstspolicy#QHstsPolicy&quot;&gt;QHstsPolicy&lt;/a&gt;＆QHstsPolicy :: operator =（const &lt;a href=&quot;qhstspolicy#QHstsPolicy&quot;&gt;QHstsPolicy&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="42cf043d6bf18aa6d8227d8c89ffe92e8ad5eb97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhttp2configuration&quot;&gt;QHttp2Configuration&lt;/a&gt; QNetworkRequest::http2Configuration() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f547cdd3605d1c4846be3b52c98dec6d9614d4c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhttp2configuration#QHttp2Configuration&quot;&gt;QHttp2Configuration&lt;/a&gt; &amp;amp;QHttp2Configuration::operator=(&lt;a href=&quot;qhttp2configuration#QHttp2Configuration&quot;&gt;QHttp2Configuration&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcff0c72b5e2ce1b2b990d1f11df441f85591d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhttp2configuration#QHttp2Configuration&quot;&gt;QHttp2Configuration&lt;/a&gt; &amp;amp;QHttp2Configuration::operator=(const &lt;a href=&quot;qhttp2configuration#QHttp2Configuration&quot;&gt;QHttp2Configuration&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ef521f6b3e8b5df983b256a5d15eabf4308a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;QHttpPart::operator=(const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt;＆QHttpPart :: operator =（const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ce7bdd745bd67064d1824ceab209797966469c7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; *QHumiditySensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; * QHumiditySensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="ee1aa1619e8cdf7809136cbfc88051b43818102d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QComboBox::itemIcon(int</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QComboBox :: itemIcon（int</target>
        </trans-unit>
        <trans-unit id="6ef2a0fd15e8bec89b0feb80c2e19f2e8c9bfb27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QDirModel::fileIcon(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QDirModel :: fileIcon（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6ac927dec5a0ceda1552f4c22521b6b403b17f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QFileSystemModel::fileIcon(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QFileSystemModel :: fileIcon（const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="310add06cc8a54b6e66cfc62648faf8e897f47d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QListWidgetItem::icon() const</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QListWidgetItem :: icon（）常量</target>
        </trans-unit>
        <trans-unit id="9a7f1b064a65384ad4f178ca8883cf8ffdda24da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStandardItem::icon() const</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStandardItem :: icon（）常量</target>
        </trans-unit>
        <trans-unit id="4d89ff636844e202575abcb32b092d088adcda48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionButton::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionButton ::图标</target>
        </trans-unit>
        <trans-unit id="018b159c0b73f28821c876b0468d3385697e2227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionComboBox::currentIcon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionComboBox :: currentIcon</target>
        </trans-unit>
        <trans-unit id="e5aa7c95de33f489b81d73fec5d60d3b2ee9806f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionHeader::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionHeader :: icon</target>
        </trans-unit>
        <trans-unit id="53dc7929871a14c26224fccc888880977a6cc8fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionMenuItem::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionMenuItem :: icon</target>
        </trans-unit>
        <trans-unit id="cb255794d7d74049dfa86c469619bb266145a5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionTab::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionTab :: icon</target>
        </trans-unit>
        <trans-unit id="e9dd55e1b64d6e6ebbc1d8c17b5503b9eafc047a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionTitleBar::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionTitleBar :: icon</target>
        </trans-unit>
        <trans-unit id="37be35abd8230c7df63a1d45c947785008cfa92a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionToolBox::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionToolBox :: icon</target>
        </trans-unit>
        <trans-unit id="5c4c939af6cce6b3d5f090ed6c7c4bd35053b449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionToolButton::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionToolButton :: icon</target>
        </trans-unit>
        <trans-unit id="75ea63f9c5c39f74c3849a20047a9cc204531253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionViewItem::icon</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyleOptionViewItem :: icon</target>
        </trans-unit>
        <trans-unit id="50208e93cedd02ac7478c3ef0a2dfbce587539e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTabBar::tabIcon(int</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTabBar :: tabIcon（int</target>
        </trans-unit>
        <trans-unit id="9d2d07a7761c46fafe74cc80af406f4c5f2b64cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTabWidget::tabIcon(int</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTabWidget :: tabIcon（int</target>
        </trans-unit>
        <trans-unit id="fab63081b929c59f36c848759c2b0da806be0ff9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTableWidgetItem::icon() const</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTableWidgetItem :: icon（）常量</target>
        </trans-unit>
        <trans-unit id="e43d3336dcc5a35e412e52d96a79de1221cf7491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QToolBox::itemIcon(int</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QToolBox :: itemIcon（int</target>
        </trans-unit>
        <trans-unit id="57286e95a5b694a8fd6f1bf53b19c4e2badcab12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTreeWidgetItem::icon(int</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QTreeWidgetItem :: icon（int</target>
        </trans-unit>
        <trans-unit id="84bbe925a95829b8086a540f88daab6f0943d61e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QWinJumpListItem::icon() const</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QWinJumpListItem :: icon（）常量</target>
        </trans-unit>
        <trans-unit id="2c15c04e4053de83980fe40e3fadf3bcdb994172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QWindow::icon() const</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QWindow :: icon（）常量</target>
        </trans-unit>
        <trans-unit id="57307324596cd48af6b8e5aab970e839093db6d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; can generate pixmaps reflecting an icon's state, mode and size. These pixmaps are generated from the set of pixmaps made available to the icon, and are used by Qt widgets to show an icon representing a particular action.</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;可以生成反映图标状态，模式和大小的像素图。这些像素图是从可用于图标的像素图集合中生成的，并且Qt小部件使用它们来显示代表特定动作的图标。</target>
        </trans-unit>
        <trans-unit id="6efd610810eb4cfc2181b8ff2013bfd877df1704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; and &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;，&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;和&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="584c4e2ed2bbebd7aaa3469267a458154542f6e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;，&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;，&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;和&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f774a5166c11ad3e4962700d82b25c39b1e76880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon::Mode&lt;/a&gt; AvailableSizesArgument::mode</source>
          <target state="translated">&lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon :: Mode&lt;/a&gt; AvailableSizesArgument :: mode</target>
        </trans-unit>
        <trans-unit id="8f04d9a4dd2d01b3b8a34f2f9ac94993cc62fb5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon::Mode&lt;/a&gt; ScaledPixmapArgument::mode</source>
          <target state="translated">&lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon :: Mode&lt;/a&gt; ScaledPixmapArgument :: mode</target>
        </trans-unit>
        <trans-unit id="0f07835fcb4ae356d9b80b1702fc34f1d3c87998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;QIcon::operator=(&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt;＆QIcon :: operator =（&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="3bdc371fa53e8a6fb82dde2222bf76588c93318d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;QIcon::operator=(const &lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt;＆QIcon :: operator =（const &lt;a href=&quot;qicon#QIcon&quot;&gt;QIcon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2000c7eb6eee552fe6dce611060e4659adb51897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#State-enum&quot;&gt;QIcon::State&lt;/a&gt; AvailableSizesArgument::state</source>
          <target state="translated">&lt;a href=&quot;qicon#State-enum&quot;&gt;QIcon :: State&lt;/a&gt; AvailableSizesArgument :: state</target>
        </trans-unit>
        <trans-unit id="f1dd3c93f46932e6a48910ab5cb07f2a36c38ae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#State-enum&quot;&gt;QIcon::State&lt;/a&gt; ScaledPixmapArgument::state</source>
          <target state="translated">&lt;a href=&quot;qicon#State-enum&quot;&gt;QIcon :: State&lt;/a&gt; ScaledPixmapArgument :: state</target>
        </trans-unit>
        <trans-unit id="fb920b8d697bd2fe46730d63bd360215dde1534e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() is useful if you have your own custom directory structure and do not need to use the &lt;a href=&quot;https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html&quot;&gt;freedesktop.org Icon Theme Specification&lt;/a&gt;. Icons created via this approach use Qt's &lt;a href=&quot;qimagereader#high-resolution-versions-of-images&quot;&gt;&quot;@nx&quot; high DPI syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede20edb7d97a3ae1014bfac12028de6d4c1ec8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() is useful if you have your own custom directory structure and do not need to use the &lt;a href=&quot;https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html#&quot;&gt;freedesktop.org Icon Theme Specification&lt;/a&gt;. Icons created via this approach use Qt's &lt;a href=&quot;qimagereader#high-resolution-versions-of-images&quot;&gt;&quot;@nx&quot; high DPI syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qicon#addFile&quot;&gt;&lt;/a&gt;如果您拥有自己的自定义目录结构并且不需要使用&lt;a href=&quot;https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html#&quot;&gt;freedesktop.org图标主题规范，&lt;/a&gt;则addFile（）很有用。通过这种方法创建的图标使用Qt的&lt;a href=&quot;qimagereader#high-resolution-versions-of-images&quot;&gt;&amp;ldquo; @nx&amp;rdquo;高DPI语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26ebd5c50a719889e786f9e2af11f9cb559af379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;'s default implementation always return false.</source>
          <target state="translated">&lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;的默认实现始终返回false。</target>
        </trans-unit>
        <trans-unit id="f92fd8c11b0336e9a37ab7e4ee927b7f39b70e09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qidentityproxymodel&quot;&gt;QIdentityProxyModel&lt;/a&gt; can be used to forward the structure of a source model exactly, with no sorting, filtering or other transformation. This is similar in concept to an identity matrix where A.I = A.</source>
          <target state="translated">&lt;a href=&quot;qidentityproxymodel&quot;&gt;QIdentityProxyModel&lt;/a&gt;可用于精确转发源模型的结构，而无需进行排序，过滤或其他转换。这在概念上类似于恒等矩阵，其中AI =A。</target>
        </trans-unit>
        <trans-unit id="1d3b46173b69c75b41921d9b4447b06340f87696" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qidentityproxymodel&quot;&gt;QIdentityProxyModel&lt;/a&gt;, &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, and &lt;a href=&quot;qtransposeproxymodel&quot;&gt;QTransposeProxyModel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qidentityproxymodel&quot;&gt;QIdentityProxyModel&lt;/a&gt;，&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;和&lt;a href=&quot;qtransposeproxymodel&quot;&gt;QTransposeProxyModel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10a2f17d27df21841a2930b4cfccaab6bea09384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QAbstract3DGraph::renderToImage(int</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QAbstract3DGraph :: renderToImage（int</target>
        </trans-unit>
        <trans-unit id="a8ea1f5f52e70cbaaedad49548de99a73a601867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QBrush::textureImage() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QBrush :: textureImage（）常量</target>
        </trans-unit>
        <trans-unit id="f65e7d42dc0a9d4f423163c02e378a134a716273" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QClipboard::image(&lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;QClipboard::Mode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QClipboard :: image（&lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;QClipboard :: Mode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c0117e38212ba2111d7f980b624c8137c1cc588" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QCustom3DVolume::renderSlice(&lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt::Axis&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QCustom3DVolume :: renderSlice（&lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt :: Axis&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b82a12daf68de7acf930695483f076f202d334b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QImageReader::read()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QImageReader :: read（）</target>
        </trans-unit>
        <trans-unit id="04e30df35496d37da4dd0530c369ba5b5e35c11d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QMovie::currentImage() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QMovie :: currentImage（）常量</target>
        </trans-unit>
        <trans-unit id="7fc53a46777a4ae2cde9c83fa12359963e7b8996" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLFramebufferObject::toImage() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLFramebufferObject :: toImage（）常量</target>
        </trans-unit>
        <trans-unit id="d99b6e601ed993f0e8ef9a387629e00088dd7038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLFramebufferObject::toImage(bool</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLFramebufferObject :: toImage（布尔</target>
        </trans-unit>
        <trans-unit id="0df120a00f18f30b21eae8b0b00434de5cedc128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLWidget::grabFramebuffer()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLWidget :: grabFramebuffer（）</target>
        </trans-unit>
        <trans-unit id="d1d17ff587f0fd7ec3081a758e89fc7177af984d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLWindow::grabFramebuffer()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QOpenGLWindow :: grabFramebuffer（）</target>
        </trans-unit>
        <trans-unit id="3d451d5244b05273538bfdef0c6c6a46c4630ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QPdfDocument::render(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3002b860f0d19ff0c550feae9a6ac370bae790" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QPixmap::toImage() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QPixmap :: toImage（）常量</target>
        </trans-unit>
        <trans-unit id="6e43a01dd8cae0575ba9df830b11ace2f94a136d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickRenderControl::grab()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickRenderControl :: grab（）</target>
        </trans-unit>
        <trans-unit id="4ab33e7394fa36f5e0650294f194589e770f73c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickWidget::grabFramebuffer() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickWidget :: grabFramebuffer（）常量</target>
        </trans-unit>
        <trans-unit id="5e23fa98f48da0d62d3c554d3e2999f2a6d89d85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickWindow::grabWindow()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QQuickWindow :: grabWindow（）</target>
        </trans-unit>
        <trans-unit id="ec3be5a5bac5fc3c138dcf5173f21ae2e2523f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QRawFont::alphaMapForGlyph(&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QRawFont :: alphaMapForGlyph（&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf00250ec38ce5b0efc073f4ebaef918352fb34d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QRawFont::alphaMapForGlyph(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dd43c4d9ee0f9d1fc0073dd5b28730b79bf1de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QVideoFrame::image() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9360d8f7c7e302ffab69d2a4fd0e2430f8246dff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QVulkanWindow::grab()</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QVulkanWindow :: grab（）</target>
        </trans-unit>
        <trans-unit id="a863da26760051640b90f172179259b6d157b9d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QWaylandBufferRef::image() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QWaylandBufferRef :: image（）常量</target>
        </trans-unit>
        <trans-unit id="ac281ee3de941a9fbb6d64acae0a65ba65b5f6d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QWebEngineNotification::icon() const</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; QWebEngineNotification :: icon（）const</target>
        </trans-unit>
        <trans-unit id="7e0eac9eb7a8f7ee4e059a799bde582870604151" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; also have the format Format_RGBA8888 (and its derivatives), where the pixels are interpreted as unsigned bytes. OpenGL has extensions that makes it possible to upload pixel buffers in an unsigned integer format.</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;还具有Format_RGBA8888（及其派生形式）格式，其中像素被解释为无符号字节。OpenGL的扩展使以无符号整数格式上载像素缓冲区成为可能。</target>
        </trans-unit>
        <trans-unit id="dda705a473a8d487d37cda33bb1fad43bd78bf67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; also provide the &lt;a href=&quot;qimage#scanLine&quot;&gt;scanLine&lt;/a&gt;() function which returns a pointer to the pixel data at the scanline with the given index, and the &lt;a href=&quot;qimage#bits&quot;&gt;bits&lt;/a&gt;() function which returns a pointer to the first pixel data (this is equivalent to &lt;code&gt;scanLine(0)&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;还提供了&lt;a href=&quot;qimage#scanLine&quot;&gt;scanLine&lt;/a&gt;（）函数，该函数返回具有给定索引的扫描线处的像素数据的指针，而&lt;a href=&quot;qimage#bits&quot;&gt;bits&lt;/a&gt;（）函数，其返回指向第一个像素数据的指针（这等效于 &lt;code&gt;scanLine(0)&lt;/code&gt; ）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
