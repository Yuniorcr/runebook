<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="f84400c746d8fc0a5a48647d3e3c7ab1cfd364c9" translate="yes" xml:space="preserve">
          <source>When the current file changes for local operations, this signal is emitted with the new file name as the</source>
          <target state="translated">当当前文件发生变化进行本地操作时,会发出这个信号,新文件名为</target>
        </trans-unit>
        <trans-unit id="0a86295fc3e43e6a47bc831aed3e39216c7b217d" translate="yes" xml:space="preserve">
          <source>When the current file changes, this signal is emitted with the new file URL as the</source>
          <target state="translated">当当前文件发生变化时,会发出这个信号,新的文件网址作为</target>
        </trans-unit>
        <trans-unit id="8d02ddfa1e09fd4df4941f2aea01335858653f59" translate="yes" xml:space="preserve">
          <source>When the current loop changes, &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; emits the &lt;a href=&quot;qabstractanimation#currentLoopChanged&quot;&gt;currentLoopChanged&lt;/a&gt;() signal.</source>
          <target state="translated">当当前循环改变时，&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;发出&lt;a href=&quot;qabstractanimation#currentLoopChanged&quot;&gt;currentLoopChanged&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="0cfe43b8f234528af4d27981c91186f3fac30622" translate="yes" xml:space="preserve">
          <source>When the current size of the cache is greater than the &lt;a href=&quot;qnetworkdiskcache#maximumCacheSize&quot;&gt;maximumCacheSize&lt;/a&gt;() older cache files are removed until the total size is less then 90% of &lt;a href=&quot;qnetworkdiskcache#maximumCacheSize&quot;&gt;maximumCacheSize&lt;/a&gt;() starting with the oldest ones first using the file creation date to determine how old a cache file is.</source>
          <target state="translated">当高速缓存的当前大小大于&lt;a href=&quot;qnetworkdiskcache#maximumCacheSize&quot;&gt;maximumCacheSize&lt;/a&gt;（）时，将删除较旧的高速缓存文件，直到总大小小于&lt;a href=&quot;qnetworkdiskcache#maximumCacheSize&quot;&gt;maxmaxCacheSize&lt;/a&gt;（）的90％，然后从最早的文件开始，首先使用文件创建日期确定高速缓存文件的年代是。</target>
        </trans-unit>
        <trans-unit id="3e61c9290a3e31fccfacad9bcadb7f0ab37cb158" translate="yes" xml:space="preserve">
          <source>When the cursor is moved and the underlying formatting attributes change, the &lt;a href=&quot;qtextedit#currentCharFormatChanged&quot;&gt;currentCharFormatChanged&lt;/a&gt;() signal is emitted to reflect the new attributes at the new cursor position.</source>
          <target state="translated">当光标移动并且基础格式属性更改时，会发出&lt;a href=&quot;qtextedit#currentCharFormatChanged&quot;&gt;currentCharFormatChanged&lt;/a&gt;（）信号以在新光标位置反映新属性。</target>
        </trans-unit>
        <trans-unit id="0bcf3c2857361e33820b911b748bda8d3e8f2499" translate="yes" xml:space="preserve">
          <source>When the cursor is over an object that can be used in a connection, the object will be highlighted.</source>
          <target state="translated">当光标在一个可用于连接的对象上时,该对象将被高亮显示。</target>
        </trans-unit>
        <trans-unit id="d5828b4053e945be1fe64d76bbf73ddc4acecf13" translate="yes" xml:space="preserve">
          <source>When the dark theme is in use, different &lt;a href=&quot;#pre-defined-shades&quot;&gt;shades&lt;/a&gt; of the pre-defined colors are used by default:</source>
          <target state="translated">使用深色主题时，默认情况下使用不同&lt;a href=&quot;#pre-defined-shades&quot;&gt;阴影&lt;/a&gt;的预定义颜色：</target>
        </trans-unit>
        <trans-unit id="3e63c161b63a9e90882d13f563f0753fdc02220f" translate="yes" xml:space="preserve">
          <source>When the dark theme is in use, different &lt;a href=&quot;qtquickcontrols2-material#pre-defined-shades&quot;&gt;shades&lt;/a&gt; of the pre-defined colors are used by default:</source>
          <target state="translated">使用深色主题时，默认情况下使用不同&lt;a href=&quot;qtquickcontrols2-material#pre-defined-shades&quot;&gt;阴影&lt;/a&gt;的预定义颜色：</target>
        </trans-unit>
        <trans-unit id="aa15325522b12e3e10e05b6e7845de4c15cc9516" translate="yes" xml:space="preserve">
          <source>When the data has been set, the model must let the views know that some data has changed. This is done by emitting the &lt;a href=&quot;qabstractitemmodel#dataChanged&quot;&gt;dataChanged()&lt;/a&gt; signal. Since only one item of data has changed, the range of items specified in the signal is limited to just one model index.</source>
          <target state="translated">设置数据后，模型必须让视图知道某些数据已更改。这是通过发出&lt;a href=&quot;qabstractitemmodel#dataChanged&quot;&gt;dataChanged（）&lt;/a&gt;信号完成的。由于仅一项数据已更改，因此信号中指定的项范围仅限于一个模型索引。</target>
        </trans-unit>
        <trans-unit id="268c6bc406e79834c8bfc145b96838dee4c8962b" translate="yes" xml:space="preserve">
          <source>When the default OpenGL &lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;scene graph&lt;/a&gt; backend is in use, images can also be supplied in compressed texture files. The content must be a simple RGB(A) format 2D texture. Supported compression schemes are only limited by the underlying OpenGL driver and GPU. The following container file formats are supported:</source>
          <target state="translated">使用默认的OpenGL&lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;场景图&lt;/a&gt;后端时，还可以在压缩的纹理文件中提供图像。内容必须是简单的RGB（A）格式的2D纹理。支持的压缩方案仅受基础OpenGL驱动程序和GPU的限制。支持以下容器文件格式：</target>
        </trans-unit>
        <trans-unit id="39d841b77292d3e68d73048948b5c24756c32f98" translate="yes" xml:space="preserve">
          <source>When the default OpenGL &lt;a href=&quot;qtquick-visualcanvas-scenegraph#&quot;&gt;scene graph&lt;/a&gt; backend is in use, images can also be supplied in compressed texture files. The content must be a simple RGB(A) format 2D texture. Supported compression schemes are only limited by the underlying OpenGL driver and GPU. The following container file formats are supported:</source>
          <target state="translated">使用默认的OpenGL &lt;a href=&quot;qtquick-visualcanvas-scenegraph#&quot;&gt;场景图&lt;/a&gt;后端时，还可以在压缩的纹理文件中提供图像。内容必须是简单的RGB（A）格式2D纹理。支持的压缩方案仅受基础OpenGL驱动程序和GPU的限制。支持以下容器文件格式：</target>
        </trans-unit>
        <trans-unit id="2d66a3ba214fb29a1df6e5b414ad7e799a6e531c" translate="yes" xml:space="preserve">
          <source>When the desired target, or associated data, such as the size, changes, call this function with a new &lt;a href=&quot;qquickrendertarget&quot;&gt;QQuickRenderTarget&lt;/a&gt;. Constructing &lt;a href=&quot;qquickrendertarget&quot;&gt;QQuickRenderTarget&lt;/a&gt; instances and calling this function is cheap, but be aware that setting a new</source>
          <target state="translated">当所需的目标或相关数据（例如大小）发生更改时，请使用新的&lt;a href=&quot;qquickrendertarget&quot;&gt;QQuickRenderTarget&lt;/a&gt;调用此函数。构造&lt;a href=&quot;qquickrendertarget&quot;&gt;QQuickRenderTarget&lt;/a&gt;实例并调用此函数很便宜，但是请注意，设置一个新的</target>
        </trans-unit>
        <trans-unit id="64564ede097c86de33c3d219ff3f4d6b55c9c533" translate="yes" xml:space="preserve">
          <source>When the dialog needs to generate a set of preview pages, the &lt;a href=&quot;qprintpreviewdialog#paintRequested&quot;&gt;paintRequested&lt;/a&gt;() signal will be emitted. You can use the exact same code for the actual printing as for having the preview generated, including calling &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;() to start a new page in the preview. Connect a slot to the &lt;a href=&quot;qprintpreviewdialog#paintRequested&quot;&gt;paintRequested&lt;/a&gt;() signal, where you draw onto the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object that is passed into the slot.</source>
          <target state="translated">当对话框需要生成一组预览页面时，将发出&lt;a href=&quot;qprintpreviewdialog#paintRequested&quot;&gt;paintRequested&lt;/a&gt;（）信号。您可以使用与生成预览时完全相同的代码进行实际打印，包括调用&lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter :: newPage&lt;/a&gt;（）在预览中启动新页面。将插槽连接到&lt;a href=&quot;qprintpreviewdialog#paintRequested&quot;&gt;paintRequested&lt;/a&gt;（）信号，在此处绘制传递到该插槽的&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="442b26fe36b5b6b28e8fee4c93f0f0f9179a4be0" translate="yes" xml:space="preserve">
          <source>When the disk cache is disabled, via &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_DisableShaderDiskCache&lt;/a&gt; for example, or the OpenGL context has no support for context binaries, calling this function is equivalent to &lt;a href=&quot;qopenglshaderprogram#addShaderFromSourceCode&quot;&gt;addShaderFromSourceCode&lt;/a&gt;().</source>
          <target state="translated">当禁用磁盘缓存时，例如通过&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_DisableShaderDiskCache&lt;/a&gt;，或者OpenGL上下文不支持上下文二进制文件，则调用此函数等效于&lt;a href=&quot;qopenglshaderprogram#addShaderFromSourceCode&quot;&gt;addShaderFromSourceCode&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="9a274b9868a858f6451036974bc85cd45ebacc98" translate="yes" xml:space="preserve">
          <source>When the disk cache is disabled, via &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_DisableShaderDiskCache&lt;/a&gt; for example, or the OpenGL context has no support for context binaries, calling this function is equivalent to &lt;a href=&quot;qopenglshaderprogram#addShaderFromSourceFile&quot;&gt;addShaderFromSourceFile&lt;/a&gt;().</source>
          <target state="translated">当禁用磁盘缓存时，例如通过&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_DisableShaderDiskCache&lt;/a&gt;，或者OpenGL上下文不支持上下文二进制文件，则调用此函数等效于&lt;a href=&quot;qopenglshaderprogram#addShaderFromSourceFile&quot;&gt;addShaderFromSourceFile&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="cfc128bc4fe84e02bab33b87cc2068b75786b6b9" translate="yes" xml:space="preserve">
          <source>When the dock widget lays out its contents it asks the style for these pixel metrics: &lt;code&gt;PM_DockWidgetSeparatorExtent&lt;/code&gt;, &lt;code&gt;PM_DockWidgetTitleBarButtonMargin&lt;/code&gt;, &lt;code&gt;PM_DockWidgetFrameWidth&lt;/code&gt;, and &lt;code&gt;PM_DockWidgetTitleMargin&lt;/code&gt;. It also calculates the bounding rectangles of the float and close buttons with &lt;code&gt;SE_DockWidgetCloseButton&lt;/code&gt; and &lt;code&gt;SE_DockWidgetFloatButton&lt;/code&gt;.</source>
          <target state="translated">当停靠小部件 &lt;code&gt;PM_DockWidgetSeparatorExtent&lt;/code&gt; 其内容时，它会询问这些像素度量的样式：PM_DockWidgetSeparatorExtent， &lt;code&gt;PM_DockWidgetTitleBarButtonMargin&lt;/code&gt; ， &lt;code&gt;PM_DockWidgetFrameWidth&lt;/code&gt; 和 &lt;code&gt;PM_DockWidgetTitleMargin&lt;/code&gt; 。它还使用 &lt;code&gt;SE_DockWidgetCloseButton&lt;/code&gt; 和 &lt;code&gt;SE_DockWidgetFloatButton&lt;/code&gt; 计算浮动按钮和关闭按钮的边界矩形。</target>
        </trans-unit>
        <trans-unit id="dc07829ed23956686aa2110b6aa13a3a31695d82" translate="yes" xml:space="preserve">
          <source>When the edit strategy is &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt;, deletion of rows from the database is delayed until &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt;() is called.</source>
          <target state="translated">当编辑策略为&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit时&lt;/a&gt;，将从数据库中删除行的操作延迟到&lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;调用commitAll&lt;/a&gt;（）为止。</target>
        </trans-unit>
        <trans-unit id="69d60b285999f455929d7c354ec16df415cf791e" translate="yes" xml:space="preserve">
          <source>When the error occurs in code that uses the &lt;a href=&quot;qaxfactory#QAXCLASS&quot;&gt;QAXCLASS&lt;/a&gt;() or QAXFACTORY_DEFAULT() macro, the widget class had no constructor that can be used by the default factory. Either add a standard widget constructor or implement a custom factory that doesn't require one.</source>
          <target state="translated">当使用&lt;a href=&quot;qaxfactory#QAXCLASS&quot;&gt;QAXCLASS&lt;/a&gt;（）或QAXFACTORY_DEFAULT（）宏的代码中发生错误时，窗口小部件类没有默认工厂可以使用的构造函数。添加标准的窗口小部件构造函数或实现不需要一个自定义工厂的自定义工厂。</target>
        </trans-unit>
        <trans-unit id="5ce533133f051ef361f68d445640b0f45e1ae0bd" translate="yes" xml:space="preserve">
          <source>When the error occurs in code that uses the &lt;a href=&quot;qaxfactory#QAXFACTORY_DEFAULT&quot;&gt;QAXFACTORY_DEFAULT&lt;/a&gt;() macro, the widget class had no constructor that can be used by the default factory. Either add a standard widget constructor or implement a custom factory that doesn't require one.</source>
          <target state="translated">当在使用&lt;a href=&quot;qaxfactory#QAXFACTORY_DEFAULT&quot;&gt;QAXFACTORY_DEFAULT&lt;/a&gt;（）宏的代码中发生错误时，窗口小部件类没有默认工厂可以使用的构造函数。添加标准的窗口小部件构造函数或实现不需要的自定义工厂。</target>
        </trans-unit>
        <trans-unit id="67528e55cc72382a76299d4a29a6d404185ca633" translate="yes" xml:space="preserve">
          <source>When the error occurs in code that uses the &lt;a href=&quot;qaxfactory#QAXFACTORY_EXPORT&quot;&gt;QAXFACTORY_EXPORT&lt;/a&gt;() macro, the &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; subclass had no appropriate constructor. Provide a public class constructor like</source>
          <target state="translated">当使用&lt;a href=&quot;qaxfactory#QAXFACTORY_EXPORT&quot;&gt;QAXFACTORY_EXPORT&lt;/a&gt;（）宏的代码中发生错误时，&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;子类没有适当的构造函数。提供类似的公共类构造函数</target>
        </trans-unit>
        <trans-unit id="667bcb82ac840306758fe028ef02a3142d64c33c" translate="yes" xml:space="preserve">
          <source>When the file was created (may not be not supported on UNIX).</source>
          <target state="translated">文件创建的时间(UNIX上可能不支持)。</target>
        </trans-unit>
        <trans-unit id="b25b4b7cadd51d3809c6192d30e9736fd31ceee0" translate="yes" xml:space="preserve">
          <source>When the file was most recently accessed (e.g. read or written to).</source>
          <target state="translated">最近一次访问文件的时间(如读取或写入)。</target>
        </trans-unit>
        <trans-unit id="4c27bd30e3a44efb1b186d178c93f6ceaf40ce32" translate="yes" xml:space="preserve">
          <source>When the file was most recently modified.</source>
          <target state="translated">最近一次修改文件的时间。</target>
        </trans-unit>
        <trans-unit id="d5d340431973f92573daf9a19dcdb9fd00b81737" translate="yes" xml:space="preserve">
          <source>When the file's metadata was last changed.</source>
          <target state="translated">文件的元数据最后一次被修改的时间。</target>
        </trans-unit>
        <trans-unit id="0ed30361bc54f69e5900b60fbcec5e46b66fc62b" translate="yes" xml:space="preserve">
          <source>When the filter object's &lt;a href=&quot;qobject#eventFilter&quot;&gt;eventFilter()&lt;/a&gt; implementation is called, it can accept or reject the event, and allow or deny further processing of the event. If all the event filters allow further processing of an event (by each returning &lt;code&gt;false&lt;/code&gt;), the event is sent to the target object itself. If one of them stops processing (by returning &lt;code&gt;true&lt;/code&gt;), the target and any later event filters do not get to see the event at all.</source>
          <target state="translated">调用过滤器对象的&lt;a href=&quot;qobject#eventFilter&quot;&gt;eventFilter（）&lt;/a&gt;实现时，它可以接受或拒绝事件，并允许或拒绝事件的进一步处理。如果所有事件过滤器都允许对事件进行进一步处理（每次返回 &lt;code&gt;false&lt;/code&gt; ），则事件将被发送到目标对象本身。如果其中一个停止处理（通过返回 &lt;code&gt;true&lt;/code&gt; ），则目标和任何以后的事件过滤器将根本看不到该事件。</target>
        </trans-unit>
        <trans-unit id="837b081290388ef24310dab55793156db9eb9dfc" translate="yes" xml:space="preserve">
          <source>When the first touch point is detected, the destination widget is determined firstly by the location on screen and secondly by the propagation rules.</source>
          <target state="translated">当检测到第一个触摸点时,首先通过屏幕上的位置来确定目标小部件,其次通过传播规则来确定。</target>
        </trans-unit>
        <trans-unit id="da3ee5de937f78331baaaed7a12ec8f5b5ae3e7b" translate="yes" xml:space="preserve">
          <source>When the format is extended and a</source>
          <target state="translated">当格式被扩展,并且有</target>
        </trans-unit>
        <trans-unit id="60ff0e9974e90a3bb46faadb679db78b2703c023" translate="yes" xml:space="preserve">
          <source>When the format is not explicitly set via this function, the format returned by &lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;QSurfaceFormat::defaultFormat&lt;/a&gt;() will be used. This means that when having multiple OpenGL widgets, individual calls to this function can be replaced by one single call to &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() before creating the first widget.</source>
          <target state="translated">如果未通过此函数显式设置格式，&lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;则将使用QSurfaceFormat :: defaultFormat&lt;/a&gt;（）返回的格式。这意味着，当具有多个OpenGL窗口小部件时，可以在创建第一个窗口小部件之前用对&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）的单个调用来替换对此函数的单个调用。</target>
        </trans-unit>
        <trans-unit id="2beb1fd6e4f28222293604d7f4d897a896d350d1" translate="yes" xml:space="preserve">
          <source>When the format is not explicitly set via this function, the format returned by &lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;QSurfaceFormat::defaultFormat&lt;/a&gt;() will be used. This means that when having multiple contexts, individual calls to this function can be replaced by one single call to &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() before creating the first context.</source>
          <target state="translated">如果未通过此函数显式设置格式，&lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;则将使用QSurfaceFormat :: defaultFormat&lt;/a&gt;（）返回的格式。这意味着，当具有多个上下文时，可以在创建第一个上下文之前用对&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）的单个调用来替换对此函数的单个调用。</target>
        </trans-unit>
        <trans-unit id="00713dadf93099ecb982ada3e77d69bdabc871f2" translate="yes" xml:space="preserve">
          <source>When the format is not explicitly set via this function, the format returned by &lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;QSurfaceFormat::defaultFormat&lt;/a&gt;() will be used. This means that when having multiple windows, individual calls to this function can be replaced by one single call to &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() before creating the first window.</source>
          <target state="translated">如果未通过此函数显式设置格式，&lt;a href=&quot;qsurfaceformat#defaultFormat&quot;&gt;则将使用QSurfaceFormat :: defaultFormat&lt;/a&gt;（）返回的格式。这意味着当有多个窗口时，在创建第一个窗口之前，可以通过对&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）的单个调用来替换对此函数的单个调用。</target>
        </trans-unit>
        <trans-unit id="e754609b648456c9f3be814c91d8b1c6d69c6124" translate="yes" xml:space="preserve">
          <source>When the geometry is being rendered, each location on its surface will be transformed to a corresponding location in the texture by transforming and interpolating the UV coordinates (texture coordinate) that have been set for the mesh's vertexes. The fragment shader program that is being used to render the active material will then typically sample the material's texture(s) at the given coordinates and use the sampled data in its light calculations.</source>
          <target state="translated">当渲染几何体时,其表面的每个位置将通过变换和插值已为网格顶点设置的 UV 坐标(纹理坐标)来转换到纹理中的相应位置。用于渲染活动材质的片段着色器程序通常会在给定坐标处对材质的纹理进行采样,并在其光照计算中使用采样数据。</target>
        </trans-unit>
        <trans-unit id="25d8d569194c95628c8a9af91c9b0f5b8ee86128" translate="yes" xml:space="preserve">
          <source>When the given</source>
          <target state="translated">当给定的</target>
        </trans-unit>
        <trans-unit id="a84c5e22d39ffceb346211bc14286a14c79f8784" translate="yes" xml:space="preserve">
          <source>When the horizontal alignment of a text item is not explicitly set, the text element is automatically aligned to the natural reading direction of the text. By default left-to-right text like English is aligned to the left side of the text area, and right-to-left text like Arabic is aligned to the right side of the text area. The alignment of a text element with empty text takes its alignment cue from &lt;a href=&quot;qinputmethod#inputDirection-prop&quot;&gt;QInputMethod::inputDirection&lt;/a&gt;(), which is based on the active system locale.</source>
          <target state="translated">当未明确设置文本项目的水平对齐方式时，文本元素将自动对齐到文本的自然阅读方向。默认情况下，从左至右的文本（如英语）对齐到文本区域的左侧，从右向左的文本（如阿拉伯语）对齐到文本区域的右侧。文本元素与空文本的对齐方式取自&lt;a href=&quot;qinputmethod#inputDirection-prop&quot;&gt;QInputMethod :: inputDirection&lt;/a&gt;（）的对齐方式，该方法基于活动的系统区域设置。</target>
        </trans-unit>
        <trans-unit id="2f163bb4526ffce4c5d0c97da01d544fc9ab7648" translate="yes" xml:space="preserve">
          <source>When the image is ready, &lt;a href=&quot;qml-qtquick-canvas#imageLoaded-signal&quot;&gt;imageLoaded&lt;/a&gt; will be emitted. The loaded image can be unloaded by the &lt;a href=&quot;qml-qtquick-canvas#unloadImage-method&quot;&gt;unloadImage()&lt;/a&gt; method.</source>
          <target state="translated">图片准备好后，将发出&lt;a href=&quot;qml-qtquick-canvas#imageLoaded-signal&quot;&gt;imageLoaded&lt;/a&gt;。可以通过&lt;a href=&quot;qml-qtquick-canvas#unloadImage-method&quot;&gt;unloadImage（）&lt;/a&gt;方法卸载已加载的图像。</target>
        </trans-unit>
        <trans-unit id="4722dd5405336bb1dc515fbc7e7e1db0a5d91ef2" translate="yes" xml:space="preserve">
          <source>When the image is scaled, regions of the source image are scaled or tiled to create the displayed border image in the following way:</source>
          <target state="translated">当图像被缩放时,源图像的区域被缩放或平铺,以如下方式创建显示的边界图像。</target>
        </trans-unit>
        <trans-unit id="cb1a5c40c986de8b7e66b324c82e0775e3788bc6" translate="yes" xml:space="preserve">
          <source>When the image is used, the color table must be large enough to have entries for all the pixel/index values present in the image, otherwise the results are undefined.</source>
          <target state="translated">当使用图像时,颜色表必须足够大,以使图像中存在的所有像素/索引值都有条目,否则结果是未定义的。</target>
        </trans-unit>
        <trans-unit id="a62a0ab3afb30df54c7a307954a51b28f0879b31" translate="yes" xml:space="preserve">
          <source>When the indexing process has finished, the search engine can be used to search through the index for a given term using the search() function. When the search input is passed to the search engine, the &lt;a href=&quot;qhelpsearchengine#searchingStarted&quot;&gt;searchingStarted&lt;/a&gt;() signal is emitted. When the search finishes, the &lt;a href=&quot;qhelpsearchengine#searchingFinished&quot;&gt;searchingFinished&lt;/a&gt;() signal is emitted. The search process can be stopped by calling &lt;a href=&quot;qhelpsearchengine#cancelSearching&quot;&gt;cancelSearching&lt;/a&gt;().</source>
          <target state="translated">索引过程完成后，可以使用搜索引擎使用search（）函数在索引中搜索给定术语。当搜索输入传递到搜索引擎时，将发出&lt;a href=&quot;qhelpsearchengine#searchingStarted&quot;&gt;searchingStarted&lt;/a&gt;（）信号。搜索完成后，将发出&lt;a href=&quot;qhelpsearchengine#searchingFinished&quot;&gt;searchingFinished&lt;/a&gt;（）信号。可以通过调用&lt;a href=&quot;qhelpsearchengine#cancelSearching&quot;&gt;cancelSearching&lt;/a&gt;（）停止搜索过程。</target>
        </trans-unit>
        <trans-unit id="abed85d30a721e876a4399c7b26aa9eed3e46ead" translate="yes" xml:space="preserve">
          <source>When the input method requires the UI to update the contents of a selection list, it will emit the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListChanged-signal&quot;&gt;InputMethod::selectionListChanged&lt;/a&gt; signal. Likewise, if the input method requires the UI to highlight an item in the list, it will emit the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListActiveItemChanged-signal&quot;&gt;InputMethod::selectionListActiveItemChanged&lt;/a&gt; signal.</source>
          <target state="translated">当输入法要求UI更新选择列表的内容时，它将发出&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListChanged-signal&quot;&gt;InputMethod :: selectionListChanged&lt;/a&gt;信号。同样，如果输入法要求UI突出显示列表中的项目，则它将发出&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListActiveItemChanged-signal&quot;&gt;InputMethod :: selectionListActiveItemChanged&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="af13632c6936ddc6476f8bec001c16d3ccdb1b88" translate="yes" xml:space="preserve">
          <source>When the interaction is completed we strongly recommend releasing the user interaction semaphore with a call to &lt;a href=&quot;qsessionmanager#release&quot;&gt;release&lt;/a&gt;(). This way, other applications may get the chance to interact with the user while your application is still busy saving data. (The semaphore is implicitly released when the application exits.)</source>
          <target state="translated">交互完成后，我们强烈建议您通过调用&lt;a href=&quot;qsessionmanager#release&quot;&gt;release&lt;/a&gt;（）释放用户交互信号。这样，当您的应用程序仍在忙于保存数据时，其他应用程序就有机会与用户进行交互。（当应用程序退出时，信号量被隐式释放。）</target>
        </trans-unit>
        <trans-unit id="a08dbc79fd5ced7fe929c3d064e1b645b21d39b2" translate="yes" xml:space="preserve">
          <source>When the labels are editable the user will be able to change the range of the axis conveniently by editing any of the labels. This feature is only supported for the &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; and the &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;.</source>
          <target state="translated">当标签是可编辑的时，用户将能够通过编辑任何标签来方便地更改轴的范围。此功能仅支持对&lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;和&lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16aac338dd8507181525a913639f185cb93e3d46" translate="yes" xml:space="preserve">
          <source>When the layout direction is set on a widget, it will propagate to the widget's children, but not to a child that is a window and not to a child for which setLayoutDirection() has been explicitly called. Also, child widgets added</source>
          <target state="translated">当在小组件上设置布局方向时,它将传播到小组件的子节点,但不会传播到作为窗口的子节点,也不会传播到已明确调用 setLayoutDirection()的子节点。此外,添加的子部件</target>
        </trans-unit>
        <trans-unit id="757e208faf34bd91da1b625ef70871bbc740552e" translate="yes" xml:space="preserve">
          <source>When the layout's geometry changes, &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; immediately rearranges all of its managed items by calling &lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;() on each item. This rearrangement is called</source>
          <target state="translated">当布局的几何形状更改时，&lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;通过在每个项目上调用&lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;（）来立即重新排列其所有托管项目。这种重排称为</target>
        </trans-unit>
        <trans-unit id="14d52274c262e663bee4bb6936d376e01f9d9786" translate="yes" xml:space="preserve">
          <source>When the layout's geometry changes, QGraphicsLayout immediately rearranges all of its managed items by calling &lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;() on each item. This rearrangement is called</source>
          <target state="translated">当布局的几何形状更改时，QGraphicsLayout通过在每个项目上调用&lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;（）来立即重新排列其所有托管项目。这种重排称为</target>
        </trans-unit>
        <trans-unit id="a4868cf3fc8227fd58f7cf326e3d937144f921d5" translate="yes" xml:space="preserve">
          <source>When the locale is not specified, the default system locale is used instead.</source>
          <target state="translated">当没有指定locale时,将使用默认的系统locale。</target>
        </trans-unit>
        <trans-unit id="d8c8da609611d53dcc5b14869c74793f679093e3" translate="yes" xml:space="preserve">
          <source>When the machine is in state &lt;code&gt;s2&lt;/code&gt;, the machine will play the default animation for the property &lt;code&gt;fooBar&lt;/code&gt; since this property is assigned by &lt;code&gt;s2&lt;/code&gt;.</source>
          <target state="translated">当机器处于状态 &lt;code&gt;s2&lt;/code&gt; 时，机器将为 &lt;code&gt;fooBar&lt;/code&gt; 属性播放默认动画，因为此属性是由 &lt;code&gt;s2&lt;/code&gt; 分配的。</target>
        </trans-unit>
        <trans-unit id="e08c3bd224be28ab8da0d15a3e80244ae34b5521" translate="yes" xml:space="preserve">
          <source>When the map is displayed, each possible geographic coordinate that is visible will map to some pixel X and Y coordinate on the screen. To perform conversions between these two, Map provides the &lt;a href=&quot;qml-qtlocation-map#toCoordinate-method&quot;&gt;toCoordinate&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-map#fromCoordinate-method&quot;&gt;fromCoordinate&lt;/a&gt; functions, which are of general utility.</source>
          <target state="translated">显示地图时，可见的每个可能的地理坐标都将映射到屏幕上的某些像素X和Y坐标。为了在这两者之间进行转换，Map提供了&lt;a href=&quot;qml-qtlocation-map#toCoordinate-method&quot;&gt;toCoordinate&lt;/a&gt;和&lt;a href=&quot;qml-qtlocation-map#fromCoordinate-method&quot;&gt;fromCoordinate&lt;/a&gt;函数，它们具有通用性。</target>
        </trans-unit>
        <trans-unit id="c5d7b44152d91a8b1270640c20696e9ece89a8be" translate="yes" xml:space="preserve">
          <source>When the mode changes, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits &lt;a href=&quot;qsslsocket#modeChanged&quot;&gt;modeChanged&lt;/a&gt;()</source>
          <target state="translated">当模式改变时，&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;发射&lt;a href=&quot;qsslsocket#modeChanged&quot;&gt;modeChanged&lt;/a&gt;（）</target>
        </trans-unit>
        <trans-unit id="f34a87a12fe283ceded3dd1abbd77031338a6cd0" translate="yes" xml:space="preserve">
          <source>When the model has multiple roles, &lt;code&gt;textRole&lt;/code&gt; can be set to determine which role should be displayed.</source>
          <target state="translated">当模型具有多个角色时，可以设置 &lt;code&gt;textRole&lt;/code&gt; 以确定应该显示哪个角色。</target>
        </trans-unit>
        <trans-unit id="da9a781aefd18e2834be4ea55a33a7e98b410511" translate="yes" xml:space="preserve">
          <source>When the model has multiple roles, textRole can be set to determine which role should be displayed.</source>
          <target state="translated">当模型有多个角色时,可以设置textRole来确定应该显示哪个角色。</target>
        </trans-unit>
        <trans-unit id="422c5c92ca52eb6e2a6538c002cc9123999cfea0" translate="yes" xml:space="preserve">
          <source>When the mouse is pressed, the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; changes to the</source>
          <target state="translated">按下鼠标后，&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;变为</target>
        </trans-unit>
        <trans-unit id="5657ede20e143f6d442db18b090e618d804d1de7" translate="yes" xml:space="preserve">
          <source>When the mouse moves over the item,</source>
          <target state="translated">当鼠标移动到该项目上时。</target>
        </trans-unit>
        <trans-unit id="91af59e60e5984086456c7ad2a2054d514962b50" translate="yes" xml:space="preserve">
          <source>When the number of commands on a stack exceedes the stack's undoLimit, commands are deleted from the bottom of the stack. Macro commands (commands with child commands) are treated as one command. The default value is 0, which means that there is no limit.</source>
          <target state="translated">当堆栈上的命令数量超过堆栈的 undoLimit 时,命令将从堆栈底部删除。宏命令(带有子命令的命令)被视为一条命令。默认值为0,这意味着没有限制。</target>
        </trans-unit>
        <trans-unit id="001d63f0ced7bf39910f29efe7f6f5fd05b477ff" translate="yes" xml:space="preserve">
          <source>When the number of matches cannot be determined in advance, a common idiom is to use &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;() in a loop. For example:</source>
          <target state="translated">当无法预先确定匹配数时，常见的习惯用法是在循环中使用&lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;（）。例如：</target>
        </trans-unit>
        <trans-unit id="19d271264efc628bb86bca221e850d0c5cb77458" translate="yes" xml:space="preserve">
          <source>When the object supports multiple selections (e.g. in a word processor), this adds a new selection, otherwise it replaces the previous selection.</source>
          <target state="translated">当对象支持多个选择时(例如在文字处理机中),这将增加一个新的选择,否则它将替换之前的选择。</target>
        </trans-unit>
        <trans-unit id="73cf6131f4a582c72bc9f9330edcb48af4fcc81f" translate="yes" xml:space="preserve">
          <source>When the page is inserted into a wizard using &lt;a href=&quot;qwizard#addPage&quot;&gt;QWizard::addPage&lt;/a&gt;() or &lt;a href=&quot;qwizard#setPage&quot;&gt;QWizard::setPage&lt;/a&gt;(), the parent is automatically set to be the wizard.</source>
          <target state="translated">当使用&lt;a href=&quot;qwizard#addPage&quot;&gt;QWizard :: addPage&lt;/a&gt;（）或&lt;a href=&quot;qwizard#setPage&quot;&gt;QWizard :: setPage&lt;/a&gt;（）将页面插入向导时，父级将自动设置为向导。</target>
        </trans-unit>
        <trans-unit id="35fc6c728ad882d547072f431eb37b1425e9f468" translate="yes" xml:space="preserve">
          <source>When the paint event occurs, the update region has normally been erased, so you are painting on the widget's background.</source>
          <target state="translated">当油漆事件发生时,更新区域通常已被擦除,因此您是在小组件的背景上作画。</target>
        </trans-unit>
        <trans-unit id="f30c7c3f40f1a872547881cd7951c22cee36c1cd" translate="yes" xml:space="preserve">
          <source>When the parameter is set to &lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;DepthMode&lt;/a&gt;, then accessing it from the shader will access the depth component as a single float, as normal. But when the parameter is set to &lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;StencilMode&lt;/a&gt;, the shader will access the stencil component.</source>
          <target state="translated">当参数设置为&lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;DepthMode时&lt;/a&gt;，从着色器对其进行访问将照常作为单个浮点访问深度分量。但是，当参数设置为&lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;StencilMode时&lt;/a&gt;，着色器将访问模板组件。</target>
        </trans-unit>
        <trans-unit id="2375fc19af6a76757eb823a66fb6127ba87e61c2" translate="yes" xml:space="preserve">
          <source>When the parser encounters an error, it signals the event by making &lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;() return false and &lt;a href=&quot;qurl#toString&quot;&gt;toString&lt;/a&gt;() / &lt;a href=&quot;qurl#toEncoded&quot;&gt;toEncoded&lt;/a&gt;() return an empty string. If it is necessary to show the user the reason why the URL failed to parse, the error condition can be obtained from &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; by calling &lt;a href=&quot;qurl#errorString&quot;&gt;errorString&lt;/a&gt;(). Note that this message is highly technical and may not make sense to end-users.</source>
          <target state="translated">当解析器遇到错误时，它将通过使&lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;（）返回false以及&lt;a href=&quot;qurl#toString&quot;&gt;toString&lt;/a&gt;（）/ &lt;a href=&quot;qurl#toEncoded&quot;&gt;toEncoded&lt;/a&gt;（）返回空字符串来通知事件。如果有必要向用户显示URL解析失败的原因，则可以通过调用&lt;a href=&quot;qurl#errorString&quot;&gt;errorString&lt;/a&gt;（）从&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;获取错误条件。请注意，此消息是高度技术性的，对最终用户而言可能没有意义。</target>
        </trans-unit>
        <trans-unit id="811d686f479044d2209c2819d361efa6d361ce38" translate="yes" xml:space="preserve">
          <source>When the parser encounters an error, it signals the event by making &lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;() return false and &lt;a href=&quot;qurl#toString&quot;&gt;toString&lt;/a&gt;() / &lt;a href=&quot;qurl#toEncoded&quot;&gt;toEncoded&lt;/a&gt;() return an empty string. If it is necessary to show the user the reason why the URL failed to parse, the error condition can be obtained from QUrl by calling &lt;a href=&quot;qurl#errorString&quot;&gt;errorString&lt;/a&gt;(). Note that this message is highly technical and may not make sense to end-users.</source>
          <target state="translated">当解析器遇到错误时，它将通过使&lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;（）返回false以及&lt;a href=&quot;qurl#toString&quot;&gt;toString&lt;/a&gt;（）/ &lt;a href=&quot;qurl#toEncoded&quot;&gt;toEncoded&lt;/a&gt;（）返回一个空字符串来向事件发出信号。如果有必要向用户显示URL解析失败的原因，则可以通过调用&lt;a href=&quot;qurl#errorString&quot;&gt;errorString&lt;/a&gt;（）从QUrl获取错误条件。请注意，此消息是高度技术性的，对最终用户而言可能没有意义。</target>
        </trans-unit>
        <trans-unit id="50ba901eeb2daca251dbecc6e227457e431d3835" translate="yes" xml:space="preserve">
          <source>When the player object is buffering; this property holds the percentage of the temporary buffer that is filled. The buffer will need to reach 100% filled before playback can start or resume, at which time &lt;a href=&quot;qmediaplayer#mediaStatus-prop&quot;&gt;mediaStatus&lt;/a&gt;() will return &lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;BufferedMedia&lt;/a&gt; or &lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;BufferingMedia&lt;/a&gt;. If the value is anything lower than &lt;code&gt;100&lt;/code&gt;, &lt;a href=&quot;qmediaplayer#mediaStatus-prop&quot;&gt;mediaStatus&lt;/a&gt;() will return &lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;StalledMedia&lt;/a&gt;.</source>
          <target state="translated">当播放器对象正在缓冲时；此属性保存已填充的临时缓冲区的百分比。在开始或继续播放之前，缓冲区需要达到100％的已满状态，此时&lt;a href=&quot;qmediaplayer#mediaStatus-prop&quot;&gt;mediaStatus&lt;/a&gt;（）将返回&lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;BufferedMedia&lt;/a&gt;或&lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;BufferingMedia&lt;/a&gt;。如果该值小于 &lt;code&gt;100&lt;/code&gt; ，&lt;a href=&quot;qmediaplayer#mediaStatus-prop&quot;&gt;mediaStatus&lt;/a&gt;（）将返回&lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;StalledMedia&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da64dfb7cefdbeef317abcd7e43d7b305a5ee3ab" translate="yes" xml:space="preserve">
          <source>When the popup actually receives focus, &lt;a href=&quot;qml-qtquick-controls2-popup#activeFocus-prop&quot;&gt;activeFocus&lt;/a&gt; will be &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;a href=&quot;qtquick-input-focus&quot;&gt;Keyboard Focus in Qt Quick&lt;/a&gt;.</source>
          <target state="translated">当弹出窗口实际获得焦点时，&lt;a href=&quot;qml-qtquick-controls2-popup#activeFocus-prop&quot;&gt;activeFocus&lt;/a&gt;将为 &lt;code&gt;true&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;qtquick-input-focus&quot;&gt;Qt Quick中的Keyboard Focus&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6f2faeb8b71e0aaa953aece87da658ef327fd51" translate="yes" xml:space="preserve">
          <source>When the popup actually receives focus, activeFocus will be &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;a href=&quot;qtquick-input-focus&quot;&gt;Keyboard Focus in Qt Quick&lt;/a&gt;.</source>
          <target state="translated">当弹出窗口实际获得焦点时，activeFocus将为 &lt;code&gt;true&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;qtquick-input-focus&quot;&gt;Qt Quick中的Keyboard Focus&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1bac0637a72484b23805b1cfc6b209249217f5b" translate="yes" xml:space="preserve">
          <source>When the process exits, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; reenters the &lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;NotRunning&lt;/a&gt; state (the initial state), and emits &lt;a href=&quot;qprocess#finished&quot;&gt;finished&lt;/a&gt;().</source>
          <target state="translated">当处理退出，&lt;a href=&quot;qprocess&quot;&gt;QProcess中&lt;/a&gt;重新进入&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;notrunning状态&lt;/a&gt;的状态（初始状态），并发出&lt;a href=&quot;qprocess#finished&quot;&gt;完成&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="166deb4e86216777686c8338ec5e1b04fbb74123" translate="yes" xml:space="preserve">
          <source>When the process exits, QProcess reenters the &lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;NotRunning&lt;/a&gt; state (the initial state), and emits &lt;a href=&quot;qprocess#finished&quot;&gt;finished&lt;/a&gt;().</source>
          <target state="translated">当处理退出，QProcess中重新进入&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;notrunning状态&lt;/a&gt;的状态（初始状态），并发出&lt;a href=&quot;qprocess#finished&quot;&gt;完成&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="48359f3ebe88aa74d829db24de3e755c6a235ddd" translate="yes" xml:space="preserve">
          <source>When the property is &lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt::LogicalMoveStyle&lt;/a&gt; (the default), within a LTR text block, increase cursor position when pressing left arrow key, decrease cursor position when pressing the right arrow key. If the text block is right to left, the opposite behavior applies.</source>
          <target state="translated">当属性为&lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt :: LogicalMoveStyle&lt;/a&gt;（默认值）时，在LTR文本块中，按左箭头键时增加光标位置，按右箭头键时减少光标位置。如果文本块从右到左，则适用相反的行为。</target>
        </trans-unit>
        <trans-unit id="8bce9d7a133b3737e2c5d22d038d7b3c4e7911f8" translate="yes" xml:space="preserve">
          <source>When the property is set to &lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;, the user will be unable to select dates, but they can still be selected programmatically. Note that the date that is selected when the property is set to &lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt; will still be the selected date of the calendar.</source>
          <target state="translated">当属性设置为&lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;NoSelection时&lt;/a&gt;，用户将无法选择日期，但仍可以通过编程方式选择日期。请注意，将属性设置为&lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;时选择的日期仍将是日历的选定日期。</target>
        </trans-unit>
        <trans-unit id="1fdcbc355a573b53369d224635c5476baea07222" translate="yes" xml:space="preserve">
          <source>When the property is set to false, these controls are hidden.</source>
          <target state="translated">当该属性设置为false时,这些控件被隐藏。</target>
        </trans-unit>
        <trans-unit id="aa8094b9e2a50ed05d31d86aa20fac7cfb61c508" translate="yes" xml:space="preserve">
          <source>When the renderer reaches a leaf node of the framegraph, it collects together all of the state specified by the path from the leaf node to the root node. This defines the state used to render a section of the frame. If you are interested in the internals of Qt 3D, this collection of state is called a</source>
          <target state="translated">当渲染器到达框架图的叶子节点时,它将叶子节点到根节点的路径所指定的所有状态收集在一起。这定义了用于渲染帧的一部分的状态。如果您对 Qt 3D 的内部结构感兴趣,这个状态集合被称为</target>
        </trans-unit>
        <trans-unit id="db214d0296a6a87ece4578bc42783f851f457093" translate="yes" xml:space="preserve">
          <source>When the request is processed and a reply is available, it should be sent using the &lt;code&gt;QDBusMessage&lt;/code&gt; object that was obtained. In our example, the reply code could be something as follows:</source>
          <target state="translated">处理请求并提供答复后，应使用获取的 &lt;code&gt;QDBusMessage&lt;/code&gt; 对象发送该请求。在我们的示例中，回复代码可能如下所示：</target>
        </trans-unit>
        <trans-unit id="e9c261a6d9a18c81b00b86054be2cb1f457e3e61" translate="yes" xml:space="preserve">
          <source>When the resource is built as part of the application.</source>
          <target state="translated">当资源作为应用程序的一部分构建时。</target>
        </trans-unit>
        <trans-unit id="d423d7c636824ae52f6ad702d48541b6157aba13" translate="yes" xml:space="preserve">
          <source>When the resource is built with CMake as part of a static library.</source>
          <target state="translated">当资源作为静态库的一部分用CMake构建时。</target>
        </trans-unit>
        <trans-unit id="53d591cc65e5ee2ed7378bddbef5b69a1bcfde7b" translate="yes" xml:space="preserve">
          <source>When the results of an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; are returned in a sequence of &lt;a href=&quot;qxmlresultitems&quot;&gt;result items&lt;/a&gt;, atomic values in the sequence are treated as instances of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. Suppose that instead of serializing the results of the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; as XML, we process the results programatically. Modify the standard Qt XML Patterns code sequence to call the overload of &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;QXmlQuery::evaluateTo&lt;/a&gt;() that populates a sequence of &lt;a href=&quot;qxmlresultitems&quot;&gt;result items&lt;/a&gt; with the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; results:</source>
          <target state="translated">当&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;的结果在&lt;a href=&quot;qxmlresultitems&quot;&gt;结果项&lt;/a&gt;序列中返回时，该序列中的原子值被视为&lt;a href=&quot;qvariant&quot;&gt;QVariant的&lt;/a&gt;实例。假设我们没有以编程方式处理结果，而不是将&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;的结果序列化为XML。修改标准的Qt XML模式代码序列以调用&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;QXmlQuery :: evaluateTo&lt;/a&gt;（）的重载，该重载用&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;结果填充&lt;a href=&quot;qxmlresultitems&quot;&gt;结果项&lt;/a&gt;序列：</target>
        </trans-unit>
        <trans-unit id="351834125e0c92d0f208676bc4e74950d662675c" translate="yes" xml:space="preserve">
          <source>When the results of an XQuery are returned in a sequence of &lt;a href=&quot;qxmlresultitems&quot;&gt;result items&lt;/a&gt;, atomic values in the sequence are treated as instances of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. Suppose that instead of serializing the results of the XQuery as XML, we process the results programatically. Modify the standard Qt XML Patterns code sequence to call the overload of &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;QXmlQuery::evaluateTo&lt;/a&gt;() that populates a sequence of &lt;a href=&quot;qxmlresultitems&quot;&gt;result items&lt;/a&gt; with the XQuery results:</source>
          <target state="translated">当XQuery的结果在&lt;a href=&quot;qxmlresultitems&quot;&gt;结果项&lt;/a&gt;序列中返回时，该序列中的原子值被视为&lt;a href=&quot;qvariant&quot;&gt;QVariant的&lt;/a&gt;实例。假设我们没有以编程方式处理结果，而不是将XQuery的结果序列化为XML。修改标准的Qt XML模式代码序列以调用&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;QXmlQuery :: evaluateTo&lt;/a&gt;（）的重载，该重载用XQuery结果填充&lt;a href=&quot;qxmlresultitems&quot;&gt;结果项&lt;/a&gt;序列：</target>
        </trans-unit>
        <trans-unit id="763552f30b01b66449cf8883bed75293d360c6fc" translate="yes" xml:space="preserve">
          <source>When the return value is &lt;code&gt;false&lt;/code&gt;, vertex array object support is not available. This is not an error: on systems with OpenGL 2.x or OpenGL ES 2.0 vertex array objects may not be supported. The application is free to continue execution in this case, but it then has to be prepared to operate in a VAO-less manner too. This means that instead of merely calling &lt;a href=&quot;qopenglvertexarrayobject#bind&quot;&gt;bind&lt;/a&gt;(), the value of &lt;a href=&quot;qopenglvertexarrayobject#isCreated&quot;&gt;isCreated&lt;/a&gt;() must be checked and the vertex arrays has to be initialized in the traditional way when there is no vertex array object present.</source>
          <target state="translated">当返回值为 &lt;code&gt;false&lt;/code&gt; 时，不支持顶点数组对象。这不是错误：在带有OpenGL 2.x或OpenGL ES 2.0顶点数组对象的系统上，可能不支持此功能。在这种情况下，应用程序可以自由地继续执行，但是随后还必须准备以无VAO的方式运行。这意味着必须检查&lt;a href=&quot;qopenglvertexarrayobject#isCreated&quot;&gt;isCreated&lt;/a&gt;（）的值，而不仅仅是调用&lt;a href=&quot;qopenglvertexarrayobject#bind&quot;&gt;bind&lt;/a&gt;（），并且当不存在顶点数组对象时，必须以传统方式初始化顶点数组。</target>
        </trans-unit>
        <trans-unit id="446681578342ec9dac4cdce0d061b46969bca33b" translate="yes" xml:space="preserve">
          <source>When the run type is set to Manual, calling trigger will make the compute command be executed for the next</source>
          <target state="translated">当运行类型设置为手动时,调用触发器将使计算命令在下一次运行时被执行。</target>
        </trans-unit>
        <trans-unit id="cbc6fc235d0cf1450284a0b09b674e76a1fb4c28" translate="yes" xml:space="preserve">
          <source>When the sample count is greater than 1, &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; will create a multisample color buffer instead of simply targeting the swapchain's images. The rendering in the multisample buffer will get resolved into the non-multisample buffers at the end of each frame.</source>
          <target state="translated">当样本数量大于1时，&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;将创建一个多样本颜色缓冲区，而不是简单地针对交换链的图像。多样本缓冲区中的渲染将在每个帧的末尾解析为非多样本缓冲区。</target>
        </trans-unit>
        <trans-unit id="76d0f8de32742e81b566f43e9a337f26a0e51322" translate="yes" xml:space="preserve">
          <source>When the scene graph is initialized, which typically happens when the window becomes exposed or, in case of redirected rendering, initialization is performed &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;via QQuickRenderControl&lt;/a&gt;, the context or device objects necessary for rendering are created automatically. This includes OpenGL contexts, Direct3D devices and device contexts, Vulkan and Metal devices. These are also queriable by application code afterwards via &lt;a href=&quot;qsgrendererinterface#getResource&quot;&gt;QSGRendererInterface&lt;/a&gt;. When using the &lt;code&gt;basic&lt;/code&gt; render loop, which performs all rendering on the GUI thread, the same context or device is used with all visible QQuickWindows. The &lt;code&gt;threaded&lt;/code&gt; render loop uses a dedicated context or device object for each rendering thread, and so for each QQuickWindow. With some graphics APIs, there is a degree of customizability provided via &lt;a href=&quot;qquickwindow#setGraphicsConfiguration&quot;&gt;setGraphicsConfiguration&lt;/a&gt;(). This makes it possible, for example, to specify the list of Vulkan extensions to enable on the &lt;code&gt;VkDevice&lt;/code&gt;. Alternatively, it is also possible to provide a set of existing context or device objects for use by the QQuickWindow, instead of letting it construct its own. This is achieved through &lt;a href=&quot;qquickwindow#setGraphicsDevice&quot;&gt;setGraphicsDevice&lt;/a&gt;().</source>
          <target state="translated">场景图初始化时（通常发生在窗口暴露时），或者在重定向渲染的情况下，&lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;通过QQuickRenderControl&lt;/a&gt;进行初始化时，将自动创建渲染所需的上下文或设备对象。这包括OpenGL上下文，Direct3D设备和设备上下文，Vulkan和Metal设备。这些也可以通过&lt;a href=&quot;qsgrendererinterface#getResource&quot;&gt;QSGRendererInterface&lt;/a&gt;通过应用程序代码查询。使用 &lt;code&gt;basic&lt;/code&gt; 渲染循环（在GUI线程上执行所有渲染）时，所有可见的QQuickWindows都使用相同的上下文或设备。该 &lt;code&gt;threaded&lt;/code&gt; 渲染循环为每个渲染线程，以及每个QQuickWindow使用专用的上下文或设备对象。对于某些图形API，通过&lt;a href=&quot;qquickwindow#setGraphicsConfiguration&quot;&gt;setGraphicsConfiguration&lt;/a&gt;（）提供了一定程度的可定制性。例如，这使得可以指定要在 &lt;code&gt;VkDevice&lt;/code&gt; 上启用的Vulkan扩展列表。或者，也可以提供一组现有的上下文或设备对象供QQuickWindow使用，而不是让它构造自己的上下文或设备对象。这是通过&lt;a href=&quot;qquickwindow#setGraphicsDevice&quot;&gt;setGraphicsDevice&lt;/a&gt;（）实现的。</target>
        </trans-unit>
        <trans-unit id="a0108434fca29b4ba915f772a93d81ad894fc73c" translate="yes" xml:space="preserve">
          <source>When the scene graph processes the request, it will call &lt;a href=&quot;qquickitem#updatePolish&quot;&gt;updatePolish&lt;/a&gt;() on this item.</source>
          <target state="translated">当场景图处理请求时，它将对此项目调用&lt;a href=&quot;qquickitem#updatePolish&quot;&gt;updatePolish&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="0f8384d11074379cec34a34f700b2ed0ee337a55" translate="yes" xml:space="preserve">
          <source>When the scene graph uses OpenGL, the returned texture will be using &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; as texture target and &lt;code&gt;GL_RGBA&lt;/code&gt; as internal format. With other graphics APIs, the texture format is typically &lt;code&gt;RGBA8&lt;/code&gt;. Reimplement &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; to create textures with different parameters.</source>
          <target state="translated">当场景图使用OpenGL时，返回的纹理将使用 &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; 作为纹理目标，并使用 &lt;code&gt;GL_RGBA&lt;/code&gt; 作为内部格式。对于其他图形API，纹理格式通常为 &lt;code&gt;RGBA8&lt;/code&gt; 。重新实现&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;以创建具有不同参数的纹理。</target>
        </trans-unit>
        <trans-unit id="79ad0782b661b14989a03456b369b188f17379b0" translate="yes" xml:space="preserve">
          <source>When the scene is active, this functions returns the scene's current focus item, or &lt;code&gt;nullptr&lt;/code&gt; if no item currently has focus. When the scene is inactive, this functions returns the item that will gain input focus when the scene becomes active.</source>
          <target state="translated">当场景处于活动状态时，此函数返回场景的当前焦点项；如果当前没有焦点，则返回 &lt;code&gt;nullptr&lt;/code&gt; 。当场景处于非活动状态时，此函数返回在场景变为活动状态时将获得输入焦点的项目。</target>
        </trans-unit>
        <trans-unit id="9df9de9d839910e5f63e81af88c3113617106dce" translate="yes" xml:space="preserve">
          <source>When the scene is rendered, any item whose width or height, transformed to the target view, is smaller that minimumRenderSize(), will not be rendered. If an item is not rendered and it clips its children items they will also not be rendered. Set this value to speed up rendering of scenes with many objects rendered on a zoomed out view.</source>
          <target state="translated">当场景被渲染时,任何项目的宽度或高度,转换到目标视图后,如果小于最小渲染尺寸(),将不会被渲染。如果一个项目没有被渲染,并且它剪辑了它的子项目,它们也不会被渲染。设置这个值可以加快在放大视图上渲染许多对象的场景的渲染速度。</target>
        </trans-unit>
        <trans-unit id="0a43ef95854a2f8ebe7bf8d74d52b1e7933022c7" translate="yes" xml:space="preserve">
          <source>When the script has been executed,</source>
          <target state="translated">当脚本被执行后。</target>
        </trans-unit>
        <trans-unit id="d413663e989f70315f8c202cae18ed2f762ace07" translate="yes" xml:space="preserve">
          <source>When the scroll bars change value, we need to update the widget position, i.e., find the part of the widget that is to be drawn in the viewport:</source>
          <target state="translated">当滚动条的数值发生变化时,我们需要更新widget的位置,即找到widget在视口中要绘制的部分。</target>
        </trans-unit>
        <trans-unit id="7e550de4fcd183b4278cd6cc624e2d0424a701cc" translate="yes" xml:space="preserve">
          <source>When the selected test users that you have added to your alpha or beta program purchase in-app products in your application, they will make actual purchases and will be charged for them. For testing purchases, you can register the e-mail addresses that should have testing access, under &lt;b&gt;Settings&lt;/b&gt; in the developer console. The users with these e-mail addresses can purchase your in-app products without being charged for the purchase, and the transaction is canceled automatically at a later stage.</source>
          <target state="translated">当您添加到Alpha或Beta计划中的所选测试用户购买了应用程序中的应用内商品时，他们将进行实际购买并向他们收费。对于测试购买，您可以在开发者控制台的&lt;b&gt;&amp;ldquo;设置&amp;rdquo;&lt;/b&gt;下注册应该具有测试访问权限的电子邮件地址。具有这些电子邮件地址的用户可以购买您的应用内商品，而无需支付购买费用，并且交易会在以后自动取消。</target>
        </trans-unit>
        <trans-unit id="afec543fcd1da24c4160336959d91fe3f583bac8" translate="yes" xml:space="preserve">
          <source>When the selection changes and the dialog is accepted, this signal is emitted with the (possibly empty) list of selected</source>
          <target state="translated">当选择发生变化,对话框被接受时,这个信号与所选的(可能是空的)列表一起发出。</target>
        </trans-unit>
        <trans-unit id="904758544b0861950c3ab2beb21af5f0d9b36272" translate="yes" xml:space="preserve">
          <source>When the selection changes and the dialog is accepted, this signal is emitted with the (possibly empty) selected</source>
          <target state="translated">当选择发生变化,对话框被接受时,这个信号与所选的(可能是空的)对象一起发出。</target>
        </trans-unit>
        <trans-unit id="e7de7d16009452344b6e4636a059a260b420895c" translate="yes" xml:space="preserve">
          <source>When the selection changes for local operations and the dialog is accepted, this signal is emitted with the (possibly empty) list of</source>
          <target state="translated">当本地操作的选择发生变化,并且对话框被接受时,这个信号发出的(可能是空的)列表中的</target>
        </trans-unit>
        <trans-unit id="f75edcab2adacd739be3bdebfa6bfa280edf2de0" translate="yes" xml:space="preserve">
          <source>When the selection changes for local operations and the dialog is accepted, this signal is emitted with the (possibly empty) selected</source>
          <target state="translated">当本地操作的选择发生变化,且对话框被接受时,发出该信号,所选的(可能为空)。</target>
        </trans-unit>
        <trans-unit id="5131d672b1bc3aac6ebdcf6c8b2ac57826b0e767" translate="yes" xml:space="preserve">
          <source>When the selection mode changes and the selected item is visible</source>
          <target state="translated">当选择模式发生变化,所选项目可见时。</target>
        </trans-unit>
        <trans-unit id="31520c42359fb2cf1348100dd78b79ebb3e7ffdd" translate="yes" xml:space="preserve">
          <source>When the sensor is started with buffering option, values are collected from that moment onwards. There is no pre-existing buffer that can be utilized.</source>
          <target state="translated">当传感器以缓冲选项启动时,从那一刻开始收集值。没有预先存在的缓冲区可以利用。</target>
        </trans-unit>
        <trans-unit id="ce0fb53c6b17959f1dc8d1d19b6e99cbdbd76451" translate="yes" xml:space="preserve">
          <source>When the server receives the ClientHello message with a cookie, it generates a new cookie as described above. This new cookie is compared to the one found in the ClientHello message.</source>
          <target state="translated">当服务器接收到带有cookie的ClientHello消息时,它会生成一个新的cookie,如上所述。这个新的cookie会与ClientHello消息中发现的cookie进行比较。</target>
        </trans-unit>
        <trans-unit id="f10b8edd85c55e75835eb4536f6583dfa1033451" translate="yes" xml:space="preserve">
          <source>When the service that this method call is sent to is already running, the method call is sent to it. If the service is not running yet, the D-Bus daemon is requested to autostart the service that is assigned to this service name. This is handled by .service files that are placed in a directory known to the D-Bus server. These files then each contain a service name and the path to a program that should be executed when this service name is requested.</source>
          <target state="translated">当这个方法调用所要发送的服务已经在运行时,方法调用就会被发送到它。如果服务还没有运行,则要求D-Bus守护进程自动启动分配给这个服务名的服务。这是由.service文件来处理的,这些文件被放置在D-Bus服务器已知的目录中。然后,这些文件都包含一个服务名和一个程序的路径,当这个服务名被请求时,这个程序应该被执行。</target>
        </trans-unit>
        <trans-unit id="c0cd1279176cf81f0c6aca038bccf60c5d81a29f" translate="yes" xml:space="preserve">
          <source>When the shader program is used normally, the shader program's id will be created on demand.</source>
          <target state="translated">正常使用shader程序时,shader程序的id会按需创建。</target>
        </trans-unit>
        <trans-unit id="a62f09dbef147b4bf1f669c8ce754ebe864f003f" translate="yes" xml:space="preserve">
          <source>When the signal associated with this signal transition is emitted the guard condition is evaluated. In the guard condition the arguments of the signal can be used as demonstrated in the example below.</source>
          <target state="translated">当与该信号转换相关的信号发出时,将评估防护条件。在保护条件中,可以使用信号的参数,如下例所示。</target>
        </trans-unit>
        <trans-unit id="558725310a73c041dc3d4a5f9bb58e65f3b99606" translate="yes" xml:space="preserve">
          <source>When the signal is emitted, the &lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;sliderPosition&lt;/a&gt; has been adjusted according to the action, but the &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;value&lt;/a&gt; has not yet been propagated (meaning the &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal was not yet emitted), and the visual display has not been updated. In slots connected to this signal you can thus safely adjust any action by calling &lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;setSliderPosition&lt;/a&gt;() yourself, based on both the action and the slider's value.</source>
          <target state="translated">发出信号时，已根据操作调整了&lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;sliderPosition&lt;/a&gt;，但尚未传播该&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;值&lt;/a&gt;（这意味着尚未发出&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）信号），并且视觉显示尚未更新。因此，在与此信号连接的插槽中，您可以根据动作和滑块的值自己调用&lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;setSliderPosition&lt;/a&gt;（）来安全地调整任何动作。</target>
        </trans-unit>
        <trans-unit id="908f9032f0a18c7bfa32894d77bc808328603452" translate="yes" xml:space="preserve">
          <source>When the source and target areas' sizes do not match, the source contents are stretched to fit into the target area. By passing a &lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt::AspectRatioMode&lt;/a&gt; to the rendering function you are using, you can choose to maintain or ignore the aspect ratio of the scene when the contents are stretched.</source>
          <target state="translated">当源区域和目标区域的大小不匹配时，将拉伸源内容以适合目标区域。通过将&lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt :: AspectRatioMode&lt;/a&gt;传递给正在使用的渲染功能，可以选择在拉伸内容时保持或忽略场景的宽高比。</target>
        </trans-unit>
        <trans-unit id="8b00e9d3dd0cfb3eafd24644444bab1097364474" translate="yes" xml:space="preserve">
          <source>When the source is static, the &lt;a href=&quot;qml-qtgraphicaleffects-dropshadow#cached-prop&quot;&gt;cached&lt;/a&gt; property can be set to allocate another buffer to avoid performing the blur every time it is drawn.</source>
          <target state="translated">当源是静态的时，可以将&lt;a href=&quot;qml-qtgraphicaleffects-dropshadow#cached-prop&quot;&gt;cached&lt;/a&gt;属性设置为分配另一个缓冲区，以避免在每次绘制时执行模糊。</target>
        </trans-unit>
        <trans-unit id="3ad8f5ada47559d8d884af8a03a452189fd6075c" translate="yes" xml:space="preserve">
          <source>When the space key is pressed, adding an item to the model, the new item will fade in and increase in scale over 400 milliseconds as it is added to the view. Also, any item that is displaced by the addition of a new item will animate to its new position in the view over 400 milliseconds, as specified by the &lt;code&gt;displaced&lt;/code&gt; transition.</source>
          <target state="translated">当按下空格键，向模型中添加一个项目时，新项目将淡入并随着添加到视图中而在400毫秒内按比例增加。同样，通过添加新项目而被替换的任何项目将在400毫秒内动画化其视图中的新位置，这由被 &lt;code&gt;displaced&lt;/code&gt; 过渡指定。</target>
        </trans-unit>
        <trans-unit id="a9fca68b12abe757685e2f8e3f26bf8a64e1d4fe" translate="yes" xml:space="preserve">
          <source>When the space key is pressed, three items are moved from index 5 to index 1. For each moved item, the &lt;code&gt;moveTransition&lt;/code&gt; sequence presumably animates the item's color to &quot;yellow&quot;, then animates it to its final position, then changes the item color back to &quot;lightsteelblue&quot; using a &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt;. However, when run, the transition does not produce the intended result:</source>
          <target state="translated">当按下空格键时，三个项目从索引5移到索引1。对于每个移动的项目， &lt;code&gt;moveTransition&lt;/code&gt; 序列大概将其颜色设置为&amp;ldquo;黄色&amp;rdquo;，然后将其设置为最终位置，然后将其更改回原来的颜色。使用&lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt;来&amp;ldquo; lightsteelblue&amp;rdquo; 。但是，运行时，过渡不会产生预期的结果：</target>
        </trans-unit>
        <trans-unit id="18e0f4ff06d659b8f94b4bfba82f6378285470e7" translate="yes" xml:space="preserve">
          <source>When the string is not already a valid URL, a best guess is performed, making various assumptions.</source>
          <target state="translated">当字符串还不是一个有效的URL时,会进行最佳猜测,做出各种假设。</target>
        </trans-unit>
        <trans-unit id="aed377e3125e7efb3e464b02103995ebd5fa07a4" translate="yes" xml:space="preserve">
          <source>When the string is not already a valid URL, a best guess is performed, making various web related assumptions.</source>
          <target state="translated">当该字符串不是有效的URL时,会进行最佳猜测,做出各种网络相关的假设。</target>
        </trans-unit>
        <trans-unit id="8b456c366b0bedadf7f4c24ff98787915a0f574f" translate="yes" xml:space="preserve">
          <source>When the text changes the &lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged&lt;/a&gt;() signal is emitted; when the text changes other than by calling &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;() the &lt;a href=&quot;qlineedit#textEdited&quot;&gt;textEdited&lt;/a&gt;() signal is emitted; when the cursor is moved the &lt;a href=&quot;qlineedit#cursorPositionChanged&quot;&gt;cursorPositionChanged&lt;/a&gt;() signal is emitted; and when the Return or Enter key is pressed the &lt;a href=&quot;qlineedit#returnPressed&quot;&gt;returnPressed&lt;/a&gt;() signal is emitted.</source>
          <target state="translated">当文本更改时，将发出&lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged&lt;/a&gt;（）信号；当文本不是通过调用&lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;（）进行更改时，将发出&lt;a href=&quot;qlineedit#textEdited&quot;&gt;textEdited&lt;/a&gt;（）信号；当光标移动时，会发出&lt;a href=&quot;qlineedit#cursorPositionChanged&quot;&gt;cursorPositionChanged&lt;/a&gt;（）信号；当按下Return或Enter键时，将返回&lt;a href=&quot;qlineedit#returnPressed&quot;&gt;returnPressed&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="76aa286a7763afdcffbd10ec6e5b9d39bd8e0eec" translate="yes" xml:space="preserve">
          <source>When the texture coordinate is even, only the fractional part is used. When odd, the texture coordinate is set to &lt;code&gt;1 - fractional part&lt;/code&gt;. This value has been introduced in Qt 5.10.</source>
          <target state="translated">当纹理坐标为偶数时，仅使用小数部分。当为奇数时，纹理坐标设置为 &lt;code&gt;1 - fractional part&lt;/code&gt; 。此值已在Qt 5.10中引入。</target>
        </trans-unit>
        <trans-unit id="4630c4b073fe0b95c546ea9b15793119393a3a9b" translate="yes" xml:space="preserve">
          <source>When the thread is terminated, all threads waiting for the thread to finish will be woken up.</source>
          <target state="translated">当线程被终止时,所有等待线程结束的线程将被唤醒。</target>
        </trans-unit>
        <trans-unit id="ce5657c3b84150a03593be32c94dfb5cdc403f11" translate="yes" xml:space="preserve">
          <source>When the time comes to render the scene, these 2D items' QSGNodes are passed to the Qt Quick Renderer to generate the appropriate render commands. Because the commands are done inline and take the current 3D transformation into consideration, they are rendered exactly the same as in the 2D renderer, but show up as if they were rendered in 3D.</source>
          <target state="translated">当需要渲染场景的时候,这些2D项的QSGN节点会被传递给Qt Quick Renderer来生成相应的渲染命令。因为这些命令是在线完成的,并且考虑到了当前的3D变换,所以它们的渲染效果和在2D渲染器中完全一样,但显示出来的效果就像它们是在3D中渲染的一样。</target>
        </trans-unit>
        <trans-unit id="87fd2e26c464b557c4a3c28bad0e013a2a60bdaf" translate="yes" xml:space="preserve">
          <source>When the timeline is disabled, all items will have their regular values. When the timeline is enabled, the values of items are determined by the current frame and the keyframes.</source>
          <target state="translated">当禁用时间轴时,所有的项目将具有其常规值。当启用时间轴时,项目的值由当前帧和关键帧决定。</target>
        </trans-unit>
        <trans-unit id="d8b9c7726d3aff7845aa848c6697f0885c506e1a" translate="yes" xml:space="preserve">
          <source>When the title bar is vertical, the &lt;a href=&quot;#vertical-ps&quot;&gt;:vertical&lt;/a&gt; pseudo class is set. In addition, depending on &lt;a href=&quot;qdockwidget#DockWidgetFeature-enum&quot;&gt;QDockWidget::DockWidgetFeature&lt;/a&gt;, the &lt;a href=&quot;#closable-ps&quot;&gt;:closable&lt;/a&gt;, &lt;a href=&quot;#floatable-ps&quot;&gt;:floatable&lt;/a&gt; and &lt;a href=&quot;#movable-ps&quot;&gt;:movable&lt;/a&gt; pseudo states are set.</source>
          <target state="translated">当标题栏为垂直时，将设置&lt;a href=&quot;#vertical-ps&quot;&gt;：vertical&lt;/a&gt;伪类。另外，根据&lt;a href=&quot;qdockwidget#DockWidgetFeature-enum&quot;&gt;QDockWidget :: DockWidgetFeature&lt;/a&gt;，设置&lt;a href=&quot;#closable-ps&quot;&gt;：&lt;/a&gt;closesable，&lt;a href=&quot;#floatable-ps&quot;&gt;：floatable&lt;/a&gt;和&lt;a href=&quot;#movable-ps&quot;&gt;：movable&lt;/a&gt;伪状态。</target>
        </trans-unit>
        <trans-unit id="dcbf714b2e65ae5994ea2abb0210ddd12a11925f" translate="yes" xml:space="preserve">
          <source>When the title bar is vertical, the &lt;a href=&quot;stylesheet-reference#vertical-ps&quot;&gt;:vertical&lt;/a&gt; pseudo class is set. In addition, depending on &lt;a href=&quot;qdockwidget#DockWidgetFeature-enum&quot;&gt;QDockWidget::DockWidgetFeature&lt;/a&gt;, the &lt;a href=&quot;stylesheet-reference#closable-ps&quot;&gt;:closable&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#floatable-ps&quot;&gt;:floatable&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#movable-ps&quot;&gt;:movable&lt;/a&gt; pseudo states are set.</source>
          <target state="translated">当标题栏为垂直时，将设置&lt;a href=&quot;stylesheet-reference#vertical-ps&quot;&gt;：vertical&lt;/a&gt;伪类。另外，根据&lt;a href=&quot;qdockwidget#DockWidgetFeature-enum&quot;&gt;QDockWidget :: DockWidgetFeature&lt;/a&gt;，设置&lt;a href=&quot;stylesheet-reference#closable-ps&quot;&gt;：&lt;/a&gt;closesable，&lt;a href=&quot;stylesheet-reference#floatable-ps&quot;&gt;：floatable&lt;/a&gt;和&lt;a href=&quot;stylesheet-reference#movable-ps&quot;&gt;：movable&lt;/a&gt;伪状态。</target>
        </trans-unit>
        <trans-unit id="cf6a38dec8a46a3efde082aa9bb646234ab5665d" translate="yes" xml:space="preserve">
          <source>When the traceEnd method is called, the input method may begin processing of the data contained in the trace object. After processing the data, the input method should destroy the object. This also removes the trace rendered to the screen.</source>
          <target state="translated">当调用traceEnd方法时,输入方法可以开始处理跟踪对象中包含的数据。在处理完数据后,输入方法应该销毁该对象。这也就删除了渲染到屏幕上的跟踪对象。</target>
        </trans-unit>
        <trans-unit id="5ed406ff23fcc29a091f1169edcf6e63e1f2b5ea" translate="yes" xml:space="preserve">
          <source>When the transition is initialized, the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt;&lt;code&gt;target&lt;/code&gt; will be set to the respective &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item for the transition and will later run with the correct item target as expected.</source>
          <target state="translated">初始化过渡后，&lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction &lt;/a&gt; &lt;code&gt;target&lt;/code&gt; 将设置为过渡的相应&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; .item，然后将按预期使用正确的项目目标运行。</target>
        </trans-unit>
        <trans-unit id="a112026d8a84f01ac36a7325fb20f0691ad743ce" translate="yes" xml:space="preserve">
          <source>When the transition is initialized, the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt;&lt;code&gt;target&lt;/code&gt; will be set to the respective ViewTransition.item for the transition and will later run with the correct item target as expected.</source>
          <target state="translated">初始化过渡时，&lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; &lt;code&gt;target&lt;/code&gt; 将设置为过渡的相应ViewTransition.item，然后将按预期使用正确的项目目标运行。</target>
        </trans-unit>
        <trans-unit id="61999efc5174872ead16b86264178dba1fb54b01" translate="yes" xml:space="preserve">
          <source>When the transition starts, the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; will search for a transition that matches the operation executed. There are three transitions to choose from: &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#pushTransition-prop&quot;&gt;pushTransition&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#popTransition-prop&quot;&gt;popTransition&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#replaceTransition-prop&quot;&gt;replaceTransition&lt;/a&gt;. Each implements how &lt;code&gt;enterItem&lt;/code&gt; should animate in, and &lt;code&gt;exitItem&lt;/code&gt; out. The transitions are collected inside a &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate&quot;&gt;StackViewDelegate&lt;/a&gt; object assigned to &lt;a href=&quot;qml-qtquick-controls-stackview#delegate-prop&quot;&gt;delegate&lt;/a&gt;. By default, popTransition and replaceTransition will be the same as pushTransition, unless you set them to something else.</source>
          <target state="translated">过渡开始时，&lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;将搜索与执行的操作匹配的过渡。有三种转换可供选择：&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#pushTransition-prop&quot;&gt;pushTransition&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#popTransition-prop&quot;&gt;popTransition&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#replaceTransition-prop&quot;&gt;replaceTransition&lt;/a&gt;。每个工具如何 &lt;code&gt;enterItem&lt;/code&gt; 应该在动画和 &lt;code&gt;exitItem&lt;/code&gt; 出来。转换收集在分配给&lt;a href=&quot;qml-qtquick-controls-stackview#delegate-prop&quot;&gt;委托&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate&quot;&gt;StackViewDelegate&lt;/a&gt;对象内。默认情况下，除非您将popTransition和replaceTransition设置为其他值，否则它们将与pushTransition相同。</target>
        </trans-unit>
        <trans-unit id="b481fca32b65e43470c3c94e4e0c2377f104c54a" translate="yes" xml:space="preserve">
          <source>When the transition starts, the StackView will search for a transition that matches the operation executed. There are three transitions to choose from: &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#pushTransition-prop&quot;&gt;pushTransition&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#popTransition-prop&quot;&gt;popTransition&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#replaceTransition-prop&quot;&gt;replaceTransition&lt;/a&gt;. Each implements how &lt;code&gt;enterItem&lt;/code&gt; should animate in, and &lt;code&gt;exitItem&lt;/code&gt; out. The transitions are collected inside a &lt;a href=&quot;qml-qtquick-controls-stackviewdelegate&quot;&gt;StackViewDelegate&lt;/a&gt; object assigned to &lt;a href=&quot;qml-qtquick-controls-stackview#delegate-prop&quot;&gt;delegate&lt;/a&gt;. By default, popTransition and replaceTransition will be the same as pushTransition, unless you set them to something else.</source>
          <target state="translated">当过渡开始时，StackView将搜索与执行的操作匹配的过渡。有三种转换可供选择：&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#pushTransition-prop&quot;&gt;pushTransition&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#popTransition-prop&quot;&gt;popTransition&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#replaceTransition-prop&quot;&gt;replaceTransition&lt;/a&gt;。每个工具如何 &lt;code&gt;enterItem&lt;/code&gt; 应该在动画和 &lt;code&gt;exitItem&lt;/code&gt; 出来。转换收集在分配给&lt;a href=&quot;qml-qtquick-controls-stackview#delegate-prop&quot;&gt;委托&lt;/a&gt;的&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate&quot;&gt;StackViewDelegate&lt;/a&gt;对象内。默认情况下，除非您将popTransition和replaceTransition设置为其他值，否则它们将与pushTransition相同。</target>
        </trans-unit>
        <trans-unit id="89b086c5ef03dd1208f5e9b3c1c02fa2b6600cb5" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;LineString&lt;/code&gt; the data ia a &lt;a href=&quot;qgeopath&quot;&gt;QGeoPath&lt;/a&gt;.</source>
          <target state="translated">当类型为 &lt;code&gt;LineString&lt;/code&gt; 时，数据为&lt;a href=&quot;qgeopath&quot;&gt;QGeoPath&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6627a2ffbe714cf5363a2179e7f88f8aa52c1d77" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;MultiLineString&lt;/code&gt;, the data is a List of LineStrings.</source>
          <target state="translated">当类型为 &lt;code&gt;MultiLineString&lt;/code&gt; 时，数据为LineStrings列表。</target>
        </trans-unit>
        <trans-unit id="f684debed13b1e187fdab34246a351f68171025c" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;MultiPoint&lt;/code&gt;, the data is a List of Points.</source>
          <target state="translated">当类型为 &lt;code&gt;MultiPoint&lt;/code&gt; 时，数据为点列表。</target>
        </trans-unit>
        <trans-unit id="65efa0e33ec24ae86c53c350f1ee9d661694a7b1" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;MultiPolygon&lt;/code&gt;, the data is a List of Polygons.</source>
          <target state="translated">当类型为 &lt;code&gt;MultiPolygon&lt;/code&gt; 时，数据为多边形列表。</target>
        </trans-unit>
        <trans-unit id="dbc2b0b0072c28b487940a65dedc17930539d2ec" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;Point&lt;/code&gt;, the data is a &lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt; with the point coordinates stored in the center property.</source>
          <target state="translated">当类型为 &lt;code&gt;Point&lt;/code&gt; 时，数据为&lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt;，其点坐标存储在center属性中。</target>
        </trans-unit>
        <trans-unit id="23332dc4a0d7fb448b924e422877dc966cb8e77a" translate="yes" xml:space="preserve">
          <source>When the type is &lt;code&gt;Polygon&lt;/code&gt;, the data is a &lt;a href=&quot;qgeopolygon&quot;&gt;QGeoPolygon&lt;/a&gt; (holes are supported).</source>
          <target state="translated">当类型为 &lt;code&gt;Polygon&lt;/code&gt; 时，数据为&lt;a href=&quot;qgeopolygon&quot;&gt;QGeoPolygon&lt;/a&gt;（支持孔）。</target>
        </trans-unit>
        <trans-unit id="37e47c478e8b7cde10b9e2d57a87561d517265a6" translate="yes" xml:space="preserve">
          <source>When the underlying rendering API is OpenGL, this function should return a mask where each bit represents graphics states changed by the &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() function:</source>
          <target state="translated">当基础渲染API是OpenGL时，此函数应返回一个掩码，其中每个位代表由&lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;（）函数更改的图形状态：</target>
        </trans-unit>
        <trans-unit id="3151bd80e155cc711d1dfb4c28d12fa02d1b602b" translate="yes" xml:space="preserve">
          <source>When the update behavior is set to &lt;code&gt;NoPartialUpdate&lt;/code&gt;, there is no separate framebuffer object. In this case the returned value is the ID of the default framebuffer.</source>
          <target state="translated">将更新行为设置为 &lt;code&gt;NoPartialUpdate&lt;/code&gt; 时，没有单独的帧缓冲区对象。在这种情况下，返回值是默认帧缓冲区的ID。</target>
        </trans-unit>
        <trans-unit id="38a70a3f9388a6d25db9221a160c7eb74efac68f" translate="yes" xml:space="preserve">
          <source>When the update mode is set to &lt;a href=&quot;qopenglwindow#UpdateBehavior-enum&quot;&gt;NoPartialUpdate&lt;/a&gt;, there is no difference between this function and &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(), performing rendering in either of them leads to the same result.</source>
          <target state="translated">当更新模式设置为&lt;a href=&quot;qopenglwindow#UpdateBehavior-enum&quot;&gt;NoPartialUpdate时&lt;/a&gt;，此函数和&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）之间没有区别，在它们两者中执行渲染都会导致相同的结果。</target>
        </trans-unit>
        <trans-unit id="90a4d8b7976d6357d0d51104a651d5693a247b6e" translate="yes" xml:space="preserve">
          <source>When the update mode is set to &lt;code&gt;NoPartialUpdate&lt;/code&gt;, there is no difference between this function and &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(), performing rendering in either of them leads to the same result.</source>
          <target state="translated">当更新模式设置为 &lt;code&gt;NoPartialUpdate&lt;/code&gt; 时，此函数和&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）之间没有区别，在它们两者中执行渲染都会导致相同的结果。</target>
        </trans-unit>
        <trans-unit id="7fbf049a32dd0640f6dd43ed769625f8cee33a4d" translate="yes" xml:space="preserve">
          <source>When the user attempts to close a window, the &lt;a href=&quot;qml-qtquick-window-window#closing-signal&quot;&gt;closing&lt;/a&gt; signal will be emitted. You can force the window to stay open (for example to prompt the user to save changes) by writing an &lt;code&gt;onClosing&lt;/code&gt; handler and setting &lt;code&gt;close.accepted = false&lt;/code&gt;.</source>
          <target state="translated">当用户试图关闭窗户时，将发出&lt;a href=&quot;qml-qtquick-window-window#closing-signal&quot;&gt;关闭&lt;/a&gt;信号。您可以通过编写 &lt;code&gt;onClosing&lt;/code&gt; 处理程序并设置 &lt;code&gt;close.accepted = false&lt;/code&gt; 来强制窗口保持打开状态（例如，提示用户保存更改）。</target>
        </trans-unit>
        <trans-unit id="9eeacf8e7be359603aa85acba91a0d62e601147b" translate="yes" xml:space="preserve">
          <source>When the user attempts to close a window, the &lt;a href=&quot;qml-window#closing-signal&quot;&gt;closing&lt;/a&gt; signal will be emitted. You can force the window to stay open (for example to prompt the user to save changes) by writing an &lt;code&gt;onClosing&lt;/code&gt; handler and setting &lt;code&gt;close.accepted = false&lt;/code&gt;.</source>
          <target state="translated">当用户试图关闭窗户时，将发出&lt;a href=&quot;qml-window#closing-signal&quot;&gt;关闭&lt;/a&gt;信号。您可以通过编写 &lt;code&gt;onClosing&lt;/code&gt; 处理程序并设置 &lt;code&gt;close.accepted = false&lt;/code&gt; 来强制窗口保持打开状态（例如，提示用户保存更改）。</target>
        </trans-unit>
        <trans-unit id="f089242c4828bfa1c4990e6f2f452f8aa6f68fa8" translate="yes" xml:space="preserve">
          <source>When the user clicks anywhere within the rectangle, &lt;code&gt;sendMessage()&lt;/code&gt; is called, triggering the &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; handler in &lt;code&gt;script.mjs&lt;/code&gt;. This in turn sends a reply message that is then received by the &lt;code&gt;onMessage()&lt;/code&gt; handler of &lt;code&gt;myWorker&lt;/code&gt;.</source>
          <target state="translated">当用户的矩形范围内的任何地方点击， &lt;code&gt;sendMessage()&lt;/code&gt; 被调用时，触发 &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; 中的处理程序 &lt;code&gt;script.mjs&lt;/code&gt; 。依次发送一个回复消息，然后由 &lt;code&gt;myWorker&lt;/code&gt; 的 &lt;code&gt;onMessage()&lt;/code&gt; 处理程序接收该消息。</target>
        </trans-unit>
        <trans-unit id="9e806fe43114f8c1140dcea68026addc98aa8292" translate="yes" xml:space="preserve">
          <source>When the user enters a new string in an editable combobox, the widget may or may not insert it, and it can insert it in several locations. The default policy is &lt;a href=&quot;qcombobox#InsertPolicy-enum&quot;&gt;InsertAtBottom&lt;/a&gt; but you can change this using &lt;a href=&quot;qcombobox#insertPolicy-prop&quot;&gt;setInsertPolicy&lt;/a&gt;().</source>
          <target state="translated">当用户在可编辑的组合框中输入新字符串时，该窗口小部件可能会插入也可能不会插入，并且可以将其插入多个位置。默认策略是&lt;a href=&quot;qcombobox#InsertPolicy-enum&quot;&gt;InsertAtBottom，&lt;/a&gt;但是您可以使用&lt;a href=&quot;qcombobox#insertPolicy-prop&quot;&gt;setInsertPolicy&lt;/a&gt;（）进行更改。</target>
        </trans-unit>
        <trans-unit id="7a33c93bf7f01a0e67730291d39734d96a1a1c84" translate="yes" xml:space="preserve">
          <source>When the user has finished editing the value in the spin box, the view asks the delegate to store the edited value in the model by calling the &lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData()&lt;/a&gt; function.</source>
          <target state="translated">当用户完成在旋转框中的值编辑后，视图通过调用&lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData（）&lt;/a&gt;函数要求委托将已编辑的值存储在模型中。</target>
        </trans-unit>
        <trans-unit id="92fa0779d8d3b6243f1940a69448d7de41b9ecd3" translate="yes" xml:space="preserve">
          <source>When the user presses or releases a key, the following occurs:</source>
          <target state="translated">当用户按下或松开某个键时,会发生以下情况。</target>
        </trans-unit>
        <trans-unit id="0593af2ddbf4e80d0b0321de8e5024100fcd08c9" translate="yes" xml:space="preserve">
          <source>When the user presses the first key on a keyboard, an input context is created. This input context will contain a string of the typed characters.</source>
          <target state="translated">当用户按下键盘上的第一个键时,一个输入上下文会被创建。这个输入上下文将包含一个输入字符的字符串。</target>
        </trans-unit>
        <trans-unit id="17b14a687e250bb8ebffd69d26cedf3fe0182667" translate="yes" xml:space="preserve">
          <source>When the user presses the shortcut key indicated by this label, the keyboard focus is transferred to the label's buddy widget.</source>
          <target state="translated">当用户按下该标签所指示的快捷键时,键盘焦点会转移到该标签的好友小部件上。</target>
        </trans-unit>
        <trans-unit id="d8718161543f49d12ebfce2a24d45c7fc9cbd16e" translate="yes" xml:space="preserve">
          <source>When the user resizes the window, the size will move in steps of &lt;a href=&quot;qwindow#sizeIncrement&quot;&gt;sizeIncrement&lt;/a&gt;().&lt;a href=&quot;qwindow#width-prop&quot;&gt;width&lt;/a&gt;() pixels horizontally and &lt;a href=&quot;qwindow#sizeIncrement&quot;&gt;sizeIncrement&lt;/a&gt;().&lt;a href=&quot;qwindow#height-prop&quot;&gt;height&lt;/a&gt;() pixels vertically, with &lt;a href=&quot;qwindow#baseSize&quot;&gt;baseSize&lt;/a&gt;() as the basis.</source>
          <target state="translated">当用户调整窗口大小时，大小将以&lt;a href=&quot;qwindow#sizeIncrement&quot;&gt;sizeIncrement&lt;/a&gt;（）的步长移动。水平的&lt;a href=&quot;qwindow#width-prop&quot;&gt;width&lt;/a&gt;（）像素和&lt;a href=&quot;qwindow#sizeIncrement&quot;&gt;sizeIncrement&lt;/a&gt;（）。垂直&lt;a href=&quot;qwindow#height-prop&quot;&gt;高度&lt;/a&gt;（）像素，以&lt;a href=&quot;qwindow#baseSize&quot;&gt;baseSize&lt;/a&gt;（）为基础。</target>
        </trans-unit>
        <trans-unit id="9e453a57cc507da9b2902f79db75133ddc061ac8" translate="yes" xml:space="preserve">
          <source>When the user resizes the window, the size will move in steps of sizeIncrement().&lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;() pixels horizontally and sizeIncrement.&lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;() pixels vertically, with &lt;a href=&quot;qwidget#baseSize-prop&quot;&gt;baseSize&lt;/a&gt;() as the basis. Preferred widget sizes are for non-negative integers</source>
          <target state="translated">当用户调整窗口大小时，大小将以sizeIncrement（）的步长移动。水平的&lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;（）像素和sizeIncrement。垂直&lt;a href=&quot;qwidget#height-prop&quot;&gt;高度&lt;/a&gt;（）像素，以&lt;a href=&quot;qwidget#baseSize-prop&quot;&gt;baseSize&lt;/a&gt;（）为基础。首选窗口小部件大小适用于非负整数</target>
        </trans-unit>
        <trans-unit id="e9e23684b39294a601601a344c7bf87e80ee521d" translate="yes" xml:space="preserve">
          <source>When the user selects a new font, the &lt;a href=&quot;qfontcombobox#currentFontChanged&quot;&gt;currentFontChanged&lt;/a&gt;() signal is emitted in addition to &lt;a href=&quot;qcombobox#currentIndexChanged&quot;&gt;currentIndexChanged&lt;/a&gt;().</source>
          <target state="translated">当用户选择新字体时，除了&lt;a href=&quot;qcombobox#currentIndexChanged&quot;&gt;currentIndexChanged&lt;/a&gt;（）之外，还会发出&lt;a href=&quot;qfontcombobox#currentFontChanged&quot;&gt;currentFontChanged&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="4da46bc51fcc82534c06603bbbd59ebe7d50ebb4" translate="yes" xml:space="preserve">
          <source>When the user selects an item in the list, the input method responds to the event in the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListItemSelected-method&quot;&gt;InputMethod::selectionListItemSelected&lt;/a&gt; method callback.</source>
          <target state="translated">当用户在列表中选择一个项目时，输入法将响应&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#selectionListItemSelected-method&quot;&gt;InputMethod :: selectionListItemSelected&lt;/a&gt;方法回调中的事件。</target>
        </trans-unit>
        <trans-unit id="c109346817c0c000e5fe1e4e0a164874e2cf7eaf" translate="yes" xml:space="preserve">
          <source>When the user selects an item in the usual way, the selection is cleared and the new item selected. However, if the user presses the Ctrl key when clicking on an item, the clicked item gets toggled and all other items are left untouched. If the user presses the Shift key while clicking on an item, all items between the current item and the clicked item are selected or unselected, depending on the state of the clicked item. Multiple items can be selected by dragging the mouse over them.</source>
          <target state="translated">当用户以通常的方式选择一个项目时,选择会被清除,并选择新的项目。但是,如果用户在点击一个项目时按下Ctrl键,被点击的项目就会被切换,而其他项目则不会被触及。如果用户在点击一个项目时按Shift键,则当前项目和被点击项目之间的所有项目都会被选中或取消选中,这取决于被点击项目的状态。通过在多个项目上拖动鼠标,可以选择多个项目。</target>
        </trans-unit>
        <trans-unit id="239784d9cf52110a5610a0352def4b21651a1ec0" translate="yes" xml:space="preserve">
          <source>When the user selects an item in the usual way, the selection is cleared and the new item selected. However, if the user presses the Shift key while clicking on an item, all items between the current item and the clicked item are selected or unselected, depending on the state of the clicked item.</source>
          <target state="translated">当用户以通常的方式选择一个项目时,选择的项目会被清除,并选择新的项目,但如果用户在点击一个项目时按Shift键,则当前项目和点击的项目之间的所有项目都会被选择或不被选择,这取决于点击项目的状态。但是,如果用户在点击项目时按Shift键,则根据点击项目的状态,当前项目和被点击项目之间的所有项目都会被选择或取消选择。</target>
        </trans-unit>
        <trans-unit id="b63a60a0cef1fb52e61ed1b641072b5077221c1a" translate="yes" xml:space="preserve">
          <source>When the user selects an item in the usual way, the selection status of that item is toggled and the other items are left alone. Multiple items can be toggled by dragging the mouse over them.</source>
          <target state="translated">当用户以通常的方式选择一个项目时,该项目的选择状态被切换,而其他项目则被单独保留。通过在多个项目上拖动鼠标,可以切换多个项目。</target>
        </trans-unit>
        <trans-unit id="48e3c32ce598a7fbfd8868c52569756e58fdf828" translate="yes" xml:space="preserve">
          <source>When the user selects an item, any already-selected item becomes unselected. It is possible for the user to deselect the selected item by pressing the Ctrl key when clicking the selected item.</source>
          <target state="translated">当用户选择一个项目时,任何已经选择的项目都将被取消选择。用户可以在点击选中的项目时按Ctrl键取消选中的项目。</target>
        </trans-unit>
        <trans-unit id="432b100478d155eb5754fdf1b8519f514ff3bcfa" translate="yes" xml:space="preserve">
          <source>When the user selects an item, any already-selected item becomes unselected. It is possible for the user to deselect the selected item.</source>
          <target state="translated">当用户选择一个项目时,任何已经选择的项目将被取消选择。用户可以取消选择项目。</target>
        </trans-unit>
        <trans-unit id="40c8efdfbff08c7bc6b912d42d8681b4819162a6" translate="yes" xml:space="preserve">
          <source>When the user triggers a step whilst holding the &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::ControlModifier&lt;/a&gt;, &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; steps by 10 instead of making a single step. This step modifier affects wheel events, key events and interaction with the spinbox buttons. Note that on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, Control corresponds to the Command key.</source>
          <target state="translated">当用户在按住&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: ControlModifier的情况下&lt;/a&gt;触发某个步骤时，&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox将&lt;/a&gt;逐步执行10次操作，而不是执行单个步骤。此步骤修改器会影响滚轮事件，键事件以及与Spinbox按钮的交互。请注意，在&lt;a href=&quot;internationalization#macos&quot;&gt;macOS上&lt;/a&gt;，Control对应于Command键。</target>
        </trans-unit>
        <trans-unit id="34d7335e57478339ba71faccb6f2bf5634476339" translate="yes" xml:space="preserve">
          <source>When the user triggers a step whilst holding the &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::ControlModifier&lt;/a&gt;, QAbstractSpinBox steps by 10 instead of making a single step. This step modifier affects wheel events, key events and interaction with the spinbox buttons. Note that on macOS, Control corresponds to the Command key.</source>
          <target state="translated">当用户在按住&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: ControlModifier的情况下&lt;/a&gt;触发一个步骤时，QAbstractSpinBox将以10的步长步进，而不是一步一步。此步骤修改器会影响滚轮事件，键事件以及与Spinbox按钮的交互。请注意，在macOS上，Control对应于Command键。</target>
        </trans-unit>
        <trans-unit id="3de1fafb709edfc8e71149ea8ddc3fd104d090bd" translate="yes" xml:space="preserve">
          <source>When the user types the &lt;a href=&quot;qkeysequence&quot;&gt;key sequence&lt;/a&gt; for a given shortcut, the shortcut's &lt;a href=&quot;qshortcut#activated&quot;&gt;activated&lt;/a&gt;() signal is emitted. (In the case of ambiguity, the &lt;a href=&quot;qshortcut#activatedAmbiguously&quot;&gt;activatedAmbiguously&lt;/a&gt;() signal is emitted.) A shortcut is &quot;listened for&quot; by Qt's event loop when the shortcut's parent widget is receiving events.</source>
          <target state="translated">当用户键入给定快捷方式的&lt;a href=&quot;qkeysequence&quot;&gt;按键序列时&lt;/a&gt;，将发出快捷方式的&lt;a href=&quot;qshortcut#activated&quot;&gt;Activated&lt;/a&gt;（）信号。（在模棱两可的情况下，会发出&lt;a href=&quot;qshortcut#activatedAmbiguously&quot;&gt;ActivateAmbiguously&lt;/a&gt;（）信号。）当快捷方式的父窗口小部件正在接收事件时，Qt的事件循环会&amp;ldquo;监听&amp;rdquo;该快捷方式。</target>
        </trans-unit>
        <trans-unit id="07467a76ec47313778f1640f3f2853d179a4c454" translate="yes" xml:space="preserve">
          <source>When the user uses the arrows to change the spin box's value the value will be incremented/decremented by the amount of the singleStep. The default value is 1. Setting a singleStep value of less than 0 does nothing.</source>
          <target state="translated">当用户使用箭头改变自旋盒的值时,该值将按单步的数值递增/递减,默认值为1。默认值是1。设置一个小于0的singleStep值不会有任何作用。</target>
        </trans-unit>
        <trans-unit id="1a7fbae2e2cb0c5b805b7e0f23104cafdd5b43a3" translate="yes" xml:space="preserve">
          <source>When the user uses the arrows to change the spin box's value the value will be incremented/decremented by the amount of the singleStep. The default value is 1.0. Setting a singleStep value of less than 0 does nothing.</source>
          <target state="translated">当用户使用箭头改变自旋盒的值时,该值将按单步的量递增/递减。默认值是1.0。设置一个小于0的singleStep值不会有任何作用。</target>
        </trans-unit>
        <trans-unit id="55b72162369d6d7fefe6c5eeff0d064284c9c1e9" translate="yes" xml:space="preserve">
          <source>When the user wants to purchase a product, call &lt;a href=&quot;qinappproduct#purchase&quot;&gt;QInAppProduct::purchase&lt;/a&gt;() on the product. This launches a platform-specific, asynchronous process to purchase the product, for example by requesting the user's password and confirmation of the purchase. In most cases, you must make sure that the application UI is not accepting input while the purchase request is being processed, as this is not handled automatically on all platforms.</source>
          <target state="translated">当用户想要购买产品时，请&lt;a href=&quot;qinappproduct#purchase&quot;&gt;对该&lt;/a&gt;产品调用QInAppProduct :: purchase（）。这将启动特定于平台的异步过程来购买产品，例如通过请求用户密码和购买确认。在大多数情况下，您必须确保在处理购买请求时应用程序UI不接受输入，因为并非在所有平台上都会自动处理输入。</target>
        </trans-unit>
        <trans-unit id="53e007fcb539e15013065a7fcca5f31963711f7f" translate="yes" xml:space="preserve">
          <source>When the view changes, the &lt;code&gt;inputViewChanged&lt;/code&gt; signal is emitted.</source>
          <target state="translated">当视图更改时，将发出 &lt;code&gt;inputViewChanged&lt;/code&gt; 信号。</target>
        </trans-unit>
        <trans-unit id="6bf292009c41ae3996b782ddaf7f2171babcb34d" translate="yes" xml:space="preserve">
          <source>When the view is initialized, the view will create all the necessary items for the view, then animate them to their correct positions within the view over one second.</source>
          <target state="translated">当视图被初始化后,视图将为视图创建所有必要的项目,然后在一秒钟内将它们动画化到视图中的正确位置。</target>
        </trans-unit>
        <trans-unit id="bf9267cdf13126ffe2807371579c3234aa2c025f" translate="yes" xml:space="preserve">
          <source>When the widget is embedded, its state (e.g., visible, enabled, geometry, size hints) is copied into the proxy widget. If the embedded widget is explicitly hidden or disabled, the proxy widget will become explicitly hidden or disabled after embedding is complete. The class documentation has a full overview over the shared state.</source>
          <target state="translated">嵌入小组件时,其状态(如可见、启用、几何体、大小提示)将被复制到代理小组件中。如果嵌入的小组件被显式隐藏或禁用,则嵌入完成后,代理小组件将成为显式隐藏或禁用。类文档中有关于共享状态的完整概述。</target>
        </trans-unit>
        <trans-unit id="0eed7c85c5152e46b5d87508ebba22a259d445d6" translate="yes" xml:space="preserve">
          <source>When the widget needs to generate a set of preview pages, a &lt;a href=&quot;qprintpreviewwidget#paintRequested&quot;&gt;paintRequested&lt;/a&gt;() signal will be emitted from the widget. Connect a slot to this signal, and draw onto the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; passed in as a signal parameter. Call &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;(), to start a new page in the preview.</source>
          <target state="translated">当窗口小部件需要生成一组预览页面时，将从窗口小部件发出&lt;a href=&quot;qprintpreviewwidget#paintRequested&quot;&gt;paintRequested&lt;/a&gt;（）信号。将插槽连接到该信号，然后绘制到作为信号参数传入的&lt;a href=&quot;qprinter&quot;&gt;QPrinter上&lt;/a&gt;。调用&lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter :: newPage&lt;/a&gt;（），以在预览中开始一个新页面。</target>
        </trans-unit>
        <trans-unit id="17365a086c8d8f3707090a7d37af79afa83d7862" translate="yes" xml:space="preserve">
          <source>When the widget's window and the related OpenGL resources are not yet initialized, the return value is the format that has been set via &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;().</source>
          <target state="translated">当窗口小部件的窗口和相关的OpenGL资源尚未初始化时，返回值就是通过&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）设置的格式。</target>
        </trans-unit>
        <trans-unit id="43847dedad7e1417643232066e6b313499c2942c" translate="yes" xml:space="preserve">
          <source>When the widget-style font and palette propagation is enabled, font and palette changes made through Qt Style Sheets will behave as though the user had manually called the corresponding &lt;a href=&quot;qwidget#palette-prop&quot;&gt;QWidget::setPalette&lt;/a&gt;() and &lt;a href=&quot;qwidget#font-prop&quot;&gt;QWidget::setFont&lt;/a&gt;() methods on all of the QWidgets targeted by the style sheet. If this would have caused propagation in C++, it will cause propagation in style sheets and vice versa.</source>
          <target state="translated">当启用插件式的字体和调色板传播，字体和调色板改变通过Qt的样式表由将表现得好像用户已经手动地称为对应&lt;a href=&quot;qwidget#palette-prop&quot;&gt;的QWidget ::调用SetPalette&lt;/a&gt;（）和&lt;a href=&quot;qwidget#font-prop&quot;&gt;QWidget的:: setfont程序&lt;/a&gt;上的所有的（）方法样式表定位的QWidget。如果这会导致在C ++中传播，那么将导致在样式表中传播，反之亦然。</target>
        </trans-unit>
        <trans-unit id="9300bab43b3b48a079567bdbc19485dd9b08456a" translate="yes" xml:space="preserve">
          <source>When the width of a &lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt; is not large enough to display text, that text is elided. Depending on which parts of the text are elided, this can make selecting an item difficult for the end user. An efficient way of ensuring that a &lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt; is wide enough to avoid text being elided is to set a width that is known to be large enough:</source>
          <target state="translated">当&lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt;的宽度不足以显示文本时，该文本将被忽略。根据删除文本的哪些部分，这可能会使最终用户难以选择项目。确保&lt;a href=&quot;qtquickcontrols-changes-qt6#combobox&quot;&gt;ComboBox&lt;/a&gt;足够宽以避免出现文本被掩盖的有效方法是设置一个已知足够大的宽度：</target>
        </trans-unit>
        <trans-unit id="d46c08525c4ed676f1a7ccbb248c7080204996de" translate="yes" xml:space="preserve">
          <source>When the window is made visible, the content is updated automatically. Further updates can be requested by calling &lt;a href=&quot;qwindow#requestUpdate&quot;&gt;QWindow::requestUpdate&lt;/a&gt;(). To render continuously, call &lt;a href=&quot;qwindow#requestUpdate&quot;&gt;requestUpdate&lt;/a&gt;() after &lt;a href=&quot;qvulkanwindow#frameReady&quot;&gt;frameReady&lt;/a&gt;().</source>
          <target state="translated">使窗口可见后，内容将自动更新。可以通过调用&lt;a href=&quot;qwindow#requestUpdate&quot;&gt;QWindow :: requestUpdate&lt;/a&gt;（）来请求进一步的更新。要连续渲染，请在&lt;a href=&quot;qvulkanwindow#frameReady&quot;&gt;frameReady&lt;/a&gt;（）之后调用&lt;a href=&quot;qwindow#requestUpdate&quot;&gt;requestUpdate&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5c3efeb67a9891aa4bb21e727fa3ddd55e1376a5" translate="yes" xml:space="preserve">
          <source>When the window is not exposed, it is shown by the application but it is still not showing in the windowing system, so the application should minimize animations and other graphical activities.</source>
          <target state="translated">当窗口没有暴露时,虽然被应用程序显示出来,但在窗口系统中仍然没有显示出来,所以应用程序应尽量减少动画和其他图形活动。</target>
        </trans-unit>
        <trans-unit id="d0885d46fa70f463e2de0a22a1a8f497582d4166" translate="yes" xml:space="preserve">
          <source>When the window is not exposed, it is shown by the application but it is still not showing in the windowing system, so the application should minimize rendering and other graphical activities.</source>
          <target state="translated">当窗口没有暴露出来时,虽然被应用程序显示出来了,但在窗口系统中仍然没有显示出来,所以应用程序应该尽量减少渲染和其他图形活动。</target>
        </trans-unit>
        <trans-unit id="298ff46be999c313b755a4569e2c0f50522cc6cd" translate="yes" xml:space="preserve">
          <source>When the window state changes, the widget receives a &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent&lt;/a&gt;() of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::WindowStateChange&lt;/a&gt;.</source>
          <target state="translated">当窗口状态更改时，窗口小部件会收到&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: WindowStateChange&lt;/a&gt;类型的&lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="4430665a811124c03a76c8e73574aa765dc47098" translate="yes" xml:space="preserve">
          <source>When there are too many tabs in a tab bar for its size, the tab bar can either choose to expand its size or to add buttons that allow you to scroll through the tabs.</source>
          <target state="translated">当标签栏中的标签太多而无法满足其大小时,标签栏可以选择扩大其大小或添加按钮,允许你滚动浏览标签。</target>
        </trans-unit>
        <trans-unit id="328188d436a703678d89704707e3862740fee438" translate="yes" xml:space="preserve">
          <source>When these images are loaded by QML, it looks for a matching image provider and calls its &lt;a href=&quot;qquickimageprovider#requestImage&quot;&gt;requestImage&lt;/a&gt;() or &lt;a href=&quot;qquickimageprovider#requestPixmap&quot;&gt;requestPixmap&lt;/a&gt;() method (depending on its &lt;a href=&quot;qquickimageprovider#imageType&quot;&gt;imageType&lt;/a&gt;()) to load the image. The method is called with the &lt;code&gt;id&lt;/code&gt; parameter set to &quot;yellow&quot; for the first image, and &quot;red&quot; for the second.</source>
          <target state="translated">当这些图像由QML加载时，它将查找匹配的图像提供程序，并调用其&lt;a href=&quot;qquickimageprovider#requestImage&quot;&gt;requestImage&lt;/a&gt;（）或&lt;a href=&quot;qquickimageprovider#requestPixmap&quot;&gt;requestPixmap&lt;/a&gt;（）方法（取决于其&lt;a href=&quot;qquickimageprovider#imageType&quot;&gt;imageType&lt;/a&gt;（））来加载图像。调用该方法时，第一个图像的 &lt;code&gt;id&lt;/code&gt; 参数设置为&amp;ldquo;黄色&amp;rdquo;，第二个图像的id参数设置为&amp;ldquo;红色&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="280d1db6d231e9b9540bfc8acf026c5df8031216" translate="yes" xml:space="preserve">
          <source>When this argument is used, a second argument is required, which specifies the module whose classes are to be listed. QDoc generates a table containing those classes. Each class is listed with the text of its &lt;a href=&quot;11-qdoc-commands-specialcontent#brief-command&quot;&gt;\brief&lt;/a&gt; command.</source>
          <target state="translated">使用此参数时，需要第二个参数，该参数指定要列出其类的模块。QDoc生成一个包含这些类的表。每个类都列出了其&lt;a href=&quot;11-qdoc-commands-specialcontent#brief-command&quot;&gt;\ brief&lt;/a&gt;命令的文本。</target>
        </trans-unit>
        <trans-unit id="ed8f319625948db2e4a131ba28a779620a6396b0" translate="yes" xml:space="preserve">
          <source>When this attribute is set, the native on-screen virtual keyboard will not be shown automatically when a text input widget gains focus on a system without a physical keyboard. Currently supported on the Windows platform only. This value was added in 5.15</source>
          <target state="translated">设置此属性时,当文本输入部件在没有物理键盘的系统上获得焦点时,屏幕上的原生虚拟键盘将不会自动显示。目前仅在 Windows 平台上支持。此值是在5.15中添加的。</target>
        </trans-unit>
        <trans-unit id="f22d3c8dc2e110f12cd3eeae061d95d96bf789a7" translate="yes" xml:space="preserve">
          <source>When this attribute is true Qt will not do the remapping, and pressing the Command modifier will result in &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::MetaModifier&lt;/a&gt;, while pressing the Control modifier will result in &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::ControlModifier&lt;/a&gt;.</source>
          <target state="translated">当此属性为true时，Qt将不会重新映射，按Command修饰符将导致&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: MetaModifier&lt;/a&gt;，而按Control修饰符将导致&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: ControlModifier&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="278d7e1255bd96582c739bd15df2833e0be8a868" translate="yes" xml:space="preserve">
          <source>When this code is loaded by the engine, it creates an object tree with a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object at the root; this object has a &lt;a href=&quot;qml-qtquick-gradient&quot;&gt;Gradient&lt;/a&gt; child object, which in turn has two &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; children.</source>
          <target state="translated">当引擎加载此代码时，它将创建一个对象树，其根为&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;对象。该对象具有一个&lt;a href=&quot;qml-qtquick-gradient&quot;&gt;Gradient&lt;/a&gt;子对象，而该对象又具有两个&lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt;子对象。</target>
        </trans-unit>
        <trans-unit id="bef518027d6e82c3441e9a6878947589c6671093" translate="yes" xml:space="preserve">
          <source>When this event occurs it is customary to show a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; with a context menu, if this is relevant to the context.</source>
          <target state="translated">发生此事件时，通常会显示带有上下文菜单的&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;（如果与上下文相关）。</target>
        </trans-unit>
        <trans-unit id="1c5aa92c276833ef89412fc07466f6fcff736ad0" translate="yes" xml:space="preserve">
          <source>When this feature is on (the default is off), clicking on a header section sorts the items according to that column. By clicking repeatedly, the user can alternate between ascending and descending order.</source>
          <target state="translated">当此功能开启时(默认情况下是关闭的),点击页眉部分会根据该列进行排序。通过反复点击,用户可以在升序和降序之间交替进行。</target>
        </trans-unit>
        <trans-unit id="5aafd154ba0fcb35eccabb15e1a7d96cc39747d6" translate="yes" xml:space="preserve">
          <source>When this function is called after the program has been linked, the program will need to be relinked for the change to take effect.</source>
          <target state="translated">当这个函数在程序被链接后被调用时,程序需要重新链接才能使改变生效。</target>
        </trans-unit>
        <trans-unit id="c9186348bdc67fdf223b859066aa3c52ea35863b" translate="yes" xml:space="preserve">
          <source>When this function is called multiple times in quick succession with the same function as its first argument, that function will be called only once.</source>
          <target state="translated">当这个函数以同一个函数作为第一个参数连续多次调用时,该函数将只被调用一次。</target>
        </trans-unit>
        <trans-unit id="5cd069345d45f7e507dfd16fbeee6b09a2a2033f" translate="yes" xml:space="preserve">
          <source>When this function is called, any graphics commands enqueued by the scenegraph are submitted to the context or command queue, whichever is applicable.</source>
          <target state="translated">当这个函数被调用时,任何被scenegraph enqueued的图形命令都会被提交到上下文或命令队列中,以适用者为准。</target>
        </trans-unit>
        <trans-unit id="398a779395d95b160c8ff7f5a1fe0f7602c5e153" translate="yes" xml:space="preserve">
          <source>When this function is called, the purchase process is initiated. At some point during the process, the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore::transactionReady&lt;/a&gt;() signal is emitted, and the slot registered earlier is called. In this function, you can save data about a successful purchase so that it survives across application runs. After verifying that the data has been stored, finalize the transaction. If the transaction fails, display information about the failure to the user and finalize the transaction.</source>
          <target state="translated">调用此功能后，将启动购买过程。在此过程中的某个时刻，将&lt;a href=&quot;qinappstore#transactionReady&quot;&gt;发出QInAppStore :: transactionReady&lt;/a&gt;（）信号，并调用较早注册的插槽。在此功能中，您可以保存有关成功购买的数据，以便在整个应用程序运行中保留下来。验证数据已存储后，完成交易。如果事务失败，请向用户显示有关失败的信息并完成事务。</target>
        </trans-unit>
        <trans-unit id="f8d7fdf287ae94d30f4f05c7d5f8dbbfbde44b75" translate="yes" xml:space="preserve">
          <source>When this function is not called at all, and the equivalent environment variable &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; is not set either, the scene graph will choose the graphics API to use based on the platform.</source>
          <target state="translated">如果根本没有调用此函数，并且也未设置等效的环境变量 &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; ，则场景图将基于平台选择要使用的图形API。</target>
        </trans-unit>
        <trans-unit id="0a8adea584e450f3c916a9833293ed806c718263" translate="yes" xml:space="preserve">
          <source>When this hint is set and it is applicable, the clip region will be generated from &lt;a href=&quot;qsgclipnode#clipRect&quot;&gt;clipRect&lt;/a&gt;() rather than &lt;a href=&quot;qsgbasicgeometrynode#geometry&quot;&gt;geometry&lt;/a&gt;().</source>
          <target state="translated">设置此提示并使其适用后，剪辑区域将从&lt;a href=&quot;qsgclipnode#clipRect&quot;&gt;clipRect&lt;/a&gt;（）而不是&lt;a href=&quot;qsgbasicgeometrynode#geometry&quot;&gt;geometry&lt;/a&gt;（）生成。</target>
        </trans-unit>
        <trans-unit id="25c548388c50d22300a6331c81e8413c5cbc46fc" translate="yes" xml:space="preserve">
          <source>When this is enabled, qmake will process all libraries linked to by the application and find their meta-information. qmake will use this to determine the relevant linking information, specifically adding values to the application project file's list of &lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;DEFINES&lt;/a&gt; as well as &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt;. Once qmake has processed this file, it will then look through the newly introduced libraries in the &lt;code&gt;LIBS&lt;/code&gt; variable, and find their dependent .prl files, continuing until all libraries have been resolved. At this point, the Makefile is created as usual, and the libraries are linked explicitly against the application.</source>
          <target state="translated">启用此功能后，qmake将处理该应用程序链接的所有库，并找到它们的元信息。 qmake将使用它来确定相关的链接信息，特别是将值添加到应用程序项目文件的&lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;DEFINES&lt;/a&gt;以及&lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt;列表中。一旦qmake处理了该文件，它将在 &lt;code&gt;LIBS&lt;/code&gt; 变量中浏览新引入的库，并找到它们的相关.prl文件，直到所有库都被解析为止。此时，将像往常一样创建Makefile，并将库与应用程序明确链接。</target>
        </trans-unit>
        <trans-unit id="e1c2654888290051c11e8d6edd467ee92c8e7a88" translate="yes" xml:space="preserve">
          <source>When this is repeated for each leaf node in the framegraph, the frame is complete and the renderer calls &lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;QOpenGLContext::swapBuffers&lt;/a&gt;() to display the frame.</source>
          <target state="translated">对框架图中的每个叶节点重复此操作时，框架已完成，渲染器调用&lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;QOpenGLContext :: swapBuffers&lt;/a&gt;（）来显示框架。</target>
        </trans-unit>
        <trans-unit id="ec52fd20354c1402a9e5c8a902314529744bb69a" translate="yes" xml:space="preserve">
          <source>When this method is called it additionally sets either the &lt;a href=&quot;qml-qtquick-controls-textarea#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-controls-textarea#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt; (whichever was at the previous cursor position) to the specified position. This allows you to easily extend and contract the selected text range.</source>
          <target state="translated">调用此方法时，它还会将&lt;a href=&quot;qml-qtquick-controls-textarea#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-controls-textarea#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt;（以先前的光标位置为准）设置为指定位置。这使您可以轻松扩展和缩小所选文本范围。</target>
        </trans-unit>
        <trans-unit id="0b402258b559da375e5607dca734ac8dba2f14ee" translate="yes" xml:space="preserve">
          <source>When this method is called it additionally sets either the &lt;a href=&quot;qml-qtquick-textedit#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-textedit#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt; (whichever was at the previous cursor position) to the specified position. This allows you to easily extend and contract the selected text range.</source>
          <target state="translated">调用此方法时，它还会将&lt;a href=&quot;qml-qtquick-textedit#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-textedit#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt;（以先前的光标位置为准）设置为指定位置。这使您可以轻松扩展和缩小所选文本范围。</target>
        </trans-unit>
        <trans-unit id="81183ac8bcf1dd186d0806619cf0a4b7150e1d76" translate="yes" xml:space="preserve">
          <source>When this method is called it additionally sets either the &lt;a href=&quot;qml-qtquick-textinput#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-textinput#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt; (whichever was at the previous cursor position) to the specified position. This allows you to easily extend and contract the selected text range.</source>
          <target state="translated">调用此方法时，它还会将&lt;a href=&quot;qml-qtquick-textinput#selectionStart-prop&quot;&gt;selectionStart&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-textinput#selectionEnd-prop&quot;&gt;selectionEnd&lt;/a&gt;（以先前的光标位置为准）设置为指定位置。这使您可以轻松扩展和缩小所选文本范围。</target>
        </trans-unit>
        <trans-unit id="3be9f15b12fa7586e346464303593068b7d2ddce" translate="yes" xml:space="preserve">
          <source>When this method is called, or when the user tries to close the window by its title bar button, the &lt;a href=&quot;qml-qtquick-window-window#closing-signal&quot;&gt;closing&lt;/a&gt; signal will be emitted. If there is no handler, or the handler does not revoke permission to close, the window will subsequently close. If the &lt;a href=&quot;qguiapplication#quitOnLastWindowClosed-prop&quot;&gt;QGuiApplication::quitOnLastWindowClosed&lt;/a&gt; property is &lt;code&gt;true&lt;/code&gt;, and there are no other windows open, the application will quit.</source>
          <target state="translated">当调用此方法时，或者当用户尝试通过其标题栏按钮关闭窗口时，将发出&lt;a href=&quot;qml-qtquick-window-window#closing-signal&quot;&gt;关闭&lt;/a&gt;信号。如果没有处理程序，或者处理程序未撤消关闭权限，则该窗口随后将关闭。如果&lt;a href=&quot;qguiapplication#quitOnLastWindowClosed-prop&quot;&gt;QGuiApplication :: quitOnLastWindowClosed&lt;/a&gt;属性为 &lt;code&gt;true&lt;/code&gt; ，并且没有其他窗口打开，则应用程序将退出。</target>
        </trans-unit>
        <trans-unit id="a97005f25bbdd2a327396d2cf3176ffcd4f75915" translate="yes" xml:space="preserve">
          <source>When this method is called, or when the user tries to close the window by its title bar button, the &lt;a href=&quot;qml-window#closing-signal&quot;&gt;closing&lt;/a&gt; signal will be emitted. If there is no handler, or the handler does not revoke permission to close, the window will subsequently close. If the &lt;a href=&quot;qguiapplication#quitOnLastWindowClosed-prop&quot;&gt;QGuiApplication::quitOnLastWindowClosed&lt;/a&gt; property is &lt;code&gt;true&lt;/code&gt;, and there are no other windows open, the application will quit.</source>
          <target state="translated">当调用此方法时，或者当用户尝试通过其标题栏按钮关闭窗口时，将发出&lt;a href=&quot;qml-window#closing-signal&quot;&gt;关闭&lt;/a&gt;信号。如果没有处理程序，或者处理程序未撤消关闭权限，则该窗口随后将关闭。如果&lt;a href=&quot;qguiapplication#quitOnLastWindowClosed-prop&quot;&gt;QGuiApplication :: quitOnLastWindowClosed&lt;/a&gt;属性为 &lt;code&gt;true&lt;/code&gt; ，并且没有其他窗口打开，则应用程序将退出。</target>
        </trans-unit>
        <trans-unit id="4ca058932c3f0b4bb0aeaff104b696065bebb8ff" translate="yes" xml:space="preserve">
          <source>When this option is enabled, qmake will process all libraries linked to by the application and find their meta-information (see &lt;a href=&quot;qmake-advanced-usage#libdepend&quot;&gt;Library Dependencies&lt;/a&gt; for more info).</source>
          <target state="translated">启用此选项后，qmake将处理该应用程序链接的所有库并找到其元信息（有关更多信息，请参见&lt;a href=&quot;qmake-advanced-usage#libdepend&quot;&gt;库依赖关系&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e954b1e0533aa197768aa31122dd76fd088a3473" translate="yes" xml:space="preserve">
          <source>When this option is set, &lt;a href=&quot;qtextline#naturalTextWidth&quot;&gt;QTextLine::naturalTextWidth&lt;/a&gt;() and &lt;a href=&quot;qtextline#naturalTextRect&quot;&gt;QTextLine::naturalTextRect&lt;/a&gt;() will return a value that includes the width of trailing spaces in the text; otherwise this width is excluded.</source>
          <target state="translated">设置此选项后，&lt;a href=&quot;qtextline#naturalTextWidth&quot;&gt;QTextLine :: naturalTextWidth&lt;/a&gt;（）和&lt;a href=&quot;qtextline#naturalTextRect&quot;&gt;QTextLine :: naturalTextRect&lt;/a&gt;（）将返回一个值，该值包括文本中尾随空格的宽度。否则，将不包括此宽度。</target>
        </trans-unit>
        <trans-unit id="7e4b2c0654bf40a5f19574c6810ff26dfd4d2ceb" translate="yes" xml:space="preserve">
          <source>When this option is set, &lt;a href=&quot;qtextline#naturalTextWidth&quot;&gt;QTextLine::naturalTextWidth&lt;/a&gt;() and naturalTextRect() will return a value that includes the width of trailing spaces in the text; otherwise this width is excluded.</source>
          <target state="translated">设置此选项后，&lt;a href=&quot;qtextline#naturalTextWidth&quot;&gt;QTextLine :: naturalTextWidth&lt;/a&gt;（）和naturalTextRect（）将返回一个值，该值包括文本中尾随空格的宽度。否则，将不包括此宽度。</target>
        </trans-unit>
        <trans-unit id="f271981227ef20d87cc64f0259c4f19f522399df" translate="yes" xml:space="preserve">
          <source>When this property changes, a scrollable view should automatically scroll itself in such a way as to ensure that this region is visible; for example, it could try to position the upper-left corner near the upper-left of its own viewport, subject to the constraints of the scrollable area.</source>
          <target state="translated">当这个属性发生变化时,可滚动视图应该以这样一种方式自动滚动自己,以确保这个区域是可见的;例如,它可以尝试将左上角定位在自己视口的左上角附近,但要受到可滚动区域的限制。</target>
        </trans-unit>
        <trans-unit id="7c42f5c456658d1e6cc7ae9de66d3b8a114c246a" translate="yes" xml:space="preserve">
          <source>When this property changes, the &lt;code&gt;topLevelChanged()&lt;/code&gt; signal is emitted.</source>
          <target state="translated">当此属性更改时，将发出 &lt;code&gt;topLevelChanged()&lt;/code&gt; 信号。</target>
        </trans-unit>
        <trans-unit id="2e8947f71029eebb8d494bf176ad2f080cf20f26" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;false&lt;/code&gt;, it's not possible to drag the dial across the from and to values.</source>
          <target state="translated">如果此属性为 &lt;code&gt;false&lt;/code&gt; ，则无法将拨盘拖动到from和to值之间。</target>
        </trans-unit>
        <trans-unit id="2cf377eb087a92958eeac23380aef05f26d062d5" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt; (the default), the next month, previous month, month selection, year selection controls are shown on top.</source>
          <target state="translated">当此属性为 &lt;code&gt;true&lt;/code&gt; （默认设置）时，下个月，上个月，月份选择，年份选择控件显示在顶部。</target>
        </trans-unit>
        <trans-unit id="e001d3612422e2e98bda1806f3de5d100dc0ffd9" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt; and the &lt;a href=&quot;qml-qtquick3d-model#tessellationMode-prop&quot;&gt;tessellationMode&lt;/a&gt; is not Model.NoTessellation, a wireframe is displayed to highlight the additional geometry created by the tessellation generator.</source>
          <target state="translated">当此属性为 &lt;code&gt;true&lt;/code&gt; 且&lt;a href=&quot;qml-qtquick3d-model#tessellationMode-prop&quot;&gt;tessellationMode&lt;/a&gt;不是Model.NoTessellation时，将显示线框以突出显示由镶嵌细分生成器创建的其他几何。</target>
        </trans-unit>
        <trans-unit id="7c6308ea5aac847e02c97a8f794ffa729d592dd4" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt; object outside the frustum will be culled, meaning they will not be rendered. By default this property is set to &lt;code&gt;false&lt;/code&gt;, but for complex scene where a lot of the objects are outside the camera frustum it might be beneficial to enable frustum culling.</source>
          <target state="translated">如果此属性为 &lt;code&gt;true&lt;/code&gt; ，则将剔除截头锥体外部的对象，这意味着它们将不会被渲染。默认情况下，此属性设置为 &lt;code&gt;false&lt;/code&gt; ，但是对于复杂的场景，在该场景中许多对象位于视锥范围之外，启用视锥剔除可能是有益的。</target>
        </trans-unit>
        <trans-unit id="70e8e0ceef6e0e89be2d8ebe69b7b194ca42b59e" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt;, objects outside the camera frustum will be culled, meaning they will not be passed to the renderer. By default this property is set to &lt;code&gt;false&lt;/code&gt;. For scenes where all or most objects are inside the camera frustum, frustum culling is an unnecessary performance overhead. But for complex scenes where large parts are located outside the camera's view, enabling frustum culling may improve performance.</source>
          <target state="translated">如果此属性为 &lt;code&gt;true&lt;/code&gt; ，则将剔除摄像机视锥中的对象，这意味着它们将不会传递给渲染器。默认情况下，此属性设置为 &lt;code&gt;false&lt;/code&gt; 。对于所有或大多数对象都位于相机视锥内部的场景，视锥剔除是不必要的性能开销。但是对于复杂的场景，其中大部分位于相机的视线之外，启用视锥剔除可能会提高性能。</target>
        </trans-unit>
        <trans-unit id="9c6d22c0bbc6a53d1f13528b30f888d0610b3d76" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt;, shadows can be cast onto this item. So the shadow map is applied to this model by the renderer.</source>
          <target state="translated">当此属性为 &lt;code&gt;true&lt;/code&gt; 时，可以将阴影投射到此项目上。因此，阴影贴图由渲染器应用于此模型。</target>
        </trans-unit>
        <trans-unit id="ae3ac6a5c511fb8757d09b3ced0b9ec19d6b694d" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;true&lt;/code&gt;, the geometry of this model is used when rendering to the shadow maps.</source>
          <target state="translated">如果此属性为 &lt;code&gt;true&lt;/code&gt; ，则在渲染到阴影贴图时将使用此模型的几何形状。</target>
        </trans-unit>
        <trans-unit id="5435f7b9bf2979fd82564870b5b12500055a6cde" translate="yes" xml:space="preserve">
          <source>When this property is enabled it scatters the edges of the ambient occlusion shadow bands to improve smoothness (at the risk of sometimes producing obvious patterned artifacts).</source>
          <target state="translated">当启用此属性时,它会分散环境遮挡阴影带的边缘,以提高平滑度(有时会产生明显的图案化伪影的风险)。</target>
        </trans-unit>
        <trans-unit id="0e970705b8c985988e06ca43a11e32d86795a38e" translate="yes" xml:space="preserve">
          <source>When this property is enabled more shortcuts are taken to approximate the light contributes of the light probe at the expense of quality.</source>
          <target state="translated">当启用该属性时,会采取更多的捷径来近似光探针的光贡献,而牺牲质量。</target>
        </trans-unit>
        <trans-unit id="7dac3a5e67061b28cd41b0e9edb5be2c4bdef12b" translate="yes" xml:space="preserve">
          <source>When this property is enabled temporal antialiasing will be used.</source>
          <target state="translated">启用此属性后,将使用时空反锯齿。</target>
        </trans-unit>
        <trans-unit id="3fd821d6a927b06c3741219adce2a495492f9002" translate="yes" xml:space="preserve">
          <source>When this property is enabled, the light will cast shadows. The default value is false.</source>
          <target state="translated">启用此属性时,灯光将投射阴影。默认值为false。</target>
        </trans-unit>
        <trans-unit id="100dd97a4fb38bb0a31c18fad05f76672fb1531a" translate="yes" xml:space="preserve">
          <source>When this property is enabled, the material will use vertex colors from the mesh. These will be multiplied by any other colors specified for the material.</source>
          <target state="translated">启用此属性后,材质将使用网格中的顶点颜色。这些颜色将与为材质指定的任何其他颜色相乘。</target>
        </trans-unit>
        <trans-unit id="bf43a8d4ad0de35433838bc85feefa148dfa808b" translate="yes" xml:space="preserve">
          <source>When this property is set and the &lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;velocity&lt;/a&gt; value is greater than 0, the &lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;velocity&lt;/a&gt; limits the maximum speed.</source>
          <target state="translated">设置此属性并且&lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;速度&lt;/a&gt;值大于0时，&lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;速度&lt;/a&gt;将限制最大速度。</target>
        </trans-unit>
        <trans-unit id="bf92afa5571a2082abd019a22b3b5e076f89feca" translate="yes" xml:space="preserve">
          <source>When this property is set any current decoding is stopped, and any audio buffers are discarded.</source>
          <target state="translated">当此属性被设置时,任何当前的解码都会停止,任何音频缓冲区都会被丢弃。</target>
        </trans-unit>
        <trans-unit id="6f37ded37bad8b26d03755297e0d0d1d2d468416" translate="yes" xml:space="preserve">
          <source>When this property is set the tab widget frame is not rendered. This mode is useful for showing document-type pages where the page covers most of the tab widget area.</source>
          <target state="translated">设置此属性时,标签小组件框架不会呈现。此模式对于显示文档类型的页面很有用,因为页面覆盖了大部分标签小组件区域。</target>
        </trans-unit>
        <trans-unit id="bb1f39d69438f440f90e503c95bb71197010e140" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;SingleSelection&lt;/a&gt;, the user can select a date within the minimum and maximum allowed dates, using either the mouse or the keyboard.</source>
          <target state="translated">当此属性设置为&lt;a href=&quot;qcalendarwidget#SelectionMode-enum&quot;&gt;SingleSelection时&lt;/a&gt;，用户可以使用鼠标或键盘在最小和最大允许日期内选择一个日期。</target>
        </trans-unit>
        <trans-unit id="4747a4a028b83a9e0e586a4b5157956a8881beee" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt::VisualMoveStyle&lt;/a&gt;, the line edit will use visual movement style. Pressing the left arrow key will always cause the cursor to move left, regardless of the text's writing direction. The same behavior applies to right arrow key.</source>
          <target state="translated">当此属性设置为&lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt :: VisualMoveStyle时&lt;/a&gt;，线编辑将使用视觉移动样式。无论文本的书写方向如何，按左箭头键都将始终导致光标向左移动。右箭头键也有相同的行为。</target>
        </trans-unit>
        <trans-unit id="6350e57b73a741c92757bc74c17a0770b6b20fee" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;false&lt;/code&gt;, the Z-buffer is not used, the depth test is skipped, and all objects, including fully opaque ones, are rendered in one go sorted back to front.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;false&lt;/code&gt; ，则不使用Z缓冲区，深度测试将被跳过，所有对象（包括完全不透明的对象）都将被渲染到从前到后的顺序。</target>
        </trans-unit>
        <trans-unit id="f10c2ce3dfc1214b29770522b194d17ecde31cf0" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;false&lt;/code&gt;, the Z-buffer is not written and tested against, the depth test is skipped, and all objects, including fully opaque ones, are rendered in one go, sorted back to front.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;false&lt;/code&gt; ，则不会编写Z缓冲区并对其进行测试，将不进行深度测试，并且一次性渲染所有对象（包括完全不透明的对象），并从头到尾排序。</target>
        </trans-unit>
        <trans-unit id="710938eb5f7574c93c37fb85ff7b7153741a117c" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;true&lt;/code&gt;, the model's materials take shadow contribution from shadow casting lights into account.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;true&lt;/code&gt; ，则模型的材质将考虑阴影投射光的阴影贡献。</target>
        </trans-unit>
        <trans-unit id="0edc644e371fc7727ba54cb716093cdd57e0cd9c" translate="yes" xml:space="preserve">
          <source>When this property is set, the given folder will be treated as the root in the file system, so that you can only traverse subfolders within it.</source>
          <target state="translated">当设置此属性时,给定的文件夹将被视为文件系统中的根目录,因此你只能遍历其中的子文件夹。</target>
        </trans-unit>
        <trans-unit id="b2d44a4363149f5868c0478951229cd0f684ca40" translate="yes" xml:space="preserve">
          <source>When this property is set, the specified opacity is also applied individually to child items. This may have an unintended effect in some circumstances. For example in the second set of rectangles below, the red rectangle has specified an opacity of 0.5, which affects the opacity of its blue child rectangle even though the child has not specified an opacity.</source>
          <target state="translated">当设置此属性时,指定的不透明度也会单独应用于子项目。这在某些情况下可能会产生意想不到的效果。例如,在下面第二组矩形中,红色矩形指定了 0.5 的不透明度,这会影响蓝色子矩形的不透明度,即使子矩形没有指定不透明度。</target>
        </trans-unit>
        <trans-unit id="1f016f4e737a52e8f462fcd37b82c141a90134d0" translate="yes" xml:space="preserve">
          <source>When this property is true, the Node (and its children) can be visible.</source>
          <target state="translated">当这个属性为真时,Node(和它的子节点)可以被显示。</target>
        </trans-unit>
        <trans-unit id="d9f5748d3f3423c22760b03f83dc84f38b1f3b1f" translate="yes" xml:space="preserve">
          <source>When this propery is set to false text edit will accept only plain text input from the user. For example through clipboard or drag and drop.</source>
          <target state="translated">当这个属性设置为false时,文本编辑将只接受用户的纯文本输入。例如,通过剪贴板或拖放。</target>
        </trans-unit>
        <trans-unit id="aec3729055d25b18cd030179a5d7fbd186ecaf3f" translate="yes" xml:space="preserve">
          <source>When this restore policy is set, the machine will automatically restore all properties. If it enters a state where a given property is not set, it will first search the hierarchy of ancestors to see if the property is defined there. If it is, the property will be restored to the value defined by the closest ancestor. If not, it will be restored to its initial value (i.e. the value of the property before any property assignments in states were executed.)</source>
          <target state="translated">当设置该还原策略时,机器将自动还原所有属性。如果它进入一个给定属性未被设置的状态,它将首先搜索祖先的层次结构,查看该属性是否在那里被定义。如果有,该属性将被还原为最接近的祖先所定义的值。如果没有,它将被恢复到它的初始值(即在状态中的任何属性赋值被执行之前的属性值)。</target>
        </trans-unit>
        <trans-unit id="2cb4559c1cf0ab4e52e4f01892955e108435ae26" translate="yes" xml:space="preserve">
          <source>When this signal is emitted, the event loop has already stopped running. No more events will be processed in the thread, except for deferred deletion events. This signal can be connected to &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;(), to free objects in that thread.</source>
          <target state="translated">发出此信号时，事件循环已经停止运行。除了延迟的删除事件外，线程中将不再处理其他事件。该信号可以连接到&lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject :: deleteLater&lt;/a&gt;（），以释放该线程中的对象。</target>
        </trans-unit>
        <trans-unit id="bc470d3a44b5fd1b983e2c2d38610b55df6e2808" translate="yes" xml:space="preserve">
          <source>When this signal is emitted, the socket may not be ready for a reconnect attempt. In that case, attempts to reconnect should be done from the event loop. For example, use a &lt;a href=&quot;qtimer#singleShot&quot;&gt;QTimer::singleShot&lt;/a&gt;() with 0 as the timeout.</source>
          <target state="translated">发出此信号后，插座可能未准备好进行重新连接。在这种情况下，应尝试从事件循环中进行重新连接。例如，使用&lt;a href=&quot;qtimer#singleShot&quot;&gt;QTimer :: singleShot&lt;/a&gt;（）将0用作超时。</target>
        </trans-unit>
        <trans-unit id="68f5a54216eb63b6271e28125c316438880cf091" translate="yes" xml:space="preserve">
          <source>When tr() is called, it looks up the translatable string using a &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; object. For translation to work, one or more of these must have been installed on the application object in the way described in &lt;a href=&quot;internationalization#enabling-translation&quot;&gt;Enabling Translation&lt;/a&gt;.</source>
          <target state="translated">调用tr（）时，它将使用&lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;对象查找可翻译的字符串。为了使翻译正常工作，必须按照&amp;ldquo; &lt;a href=&quot;internationalization#enabling-translation&quot;&gt;启用翻译&amp;rdquo;&lt;/a&gt;中所述的方式将其中一个或多个安装在应用程序对象上。</target>
        </trans-unit>
        <trans-unit id="b9ebf77d443c0f3c1d237e7890cbd696ca28dded" translate="yes" xml:space="preserve">
          <source>When transforming a pixmap using the &lt;a href=&quot;qpixmap#transformed&quot;&gt;transformed&lt;/a&gt;() function, the transformation matrix is internally adjusted to compensate for unwanted translation, i.e. &lt;a href=&quot;qpixmap#transformed&quot;&gt;transformed&lt;/a&gt;() returns the smallest pixmap containing all transformed points of the original pixmap. This function returns the modified matrix, which maps points correctly from the original pixmap into the new pixmap.</source>
          <target state="translated">当使用&lt;a href=&quot;qpixmap#transformed&quot;&gt;transformed&lt;/a&gt;（）函数对像素图进行转换时，将对转换矩阵进行内部调整以补偿不必要的翻译，即&lt;a href=&quot;qpixmap#transformed&quot;&gt;transform&lt;/a&gt;（）返回包含原始像素图的所有转换点的最小像素图。此函数返回修改后的矩阵，该矩阵将点正确地从原始像素图映射到新像素图。</target>
        </trans-unit>
        <trans-unit id="e797276249bcc854a69b6e49354f4d62d00c23f8" translate="yes" xml:space="preserve">
          <source>When transforming an embedded widget, Graphics View makes sure that the widget is transformed resolution independently, allowing the fonts and style to stay crisp when zoomed in. (Note that the effect of resolution independence depends on the style.)</source>
          <target state="translated">在转换嵌入式小组件时,Graphics View可确保小组件独立地转换分辨率,使字体和样式在放大时保持清晰。注意,分辨率独立的效果取决于样式)。</target>
        </trans-unit>
        <trans-unit id="3aa1fd29b9548bcc37cb012b55271fdb19e2ee54" translate="yes" xml:space="preserve">
          <source>When transforming an image using the &lt;a href=&quot;qimage#transformed&quot;&gt;transformed&lt;/a&gt;() function, the transformation matrix is internally adjusted to compensate for unwanted translation, i.e. &lt;a href=&quot;qimage#transformed&quot;&gt;transformed&lt;/a&gt;() returns the smallest image containing all transformed points of the original image. This function returns the modified matrix, which maps points correctly from the original image into the new image.</source>
          <target state="translated">当使用&lt;a href=&quot;qimage#transformed&quot;&gt;transformd&lt;/a&gt;（）函数对图像进行转换时，将对转换矩阵进行内部调整以补偿不必要的平移，即，&lt;a href=&quot;qimage#transformed&quot;&gt;transformd&lt;/a&gt;（）返回包含原始图像所有转换点的最小图像。此函数返回修改后的矩阵，该矩阵将点正确地从原始图像映射到新图像。</target>
        </trans-unit>
        <trans-unit id="4d6a460eeff2d6a334a698745ed9d8d6a6ebeec9" translate="yes" xml:space="preserve">
          <source>When transforming an image using the transformed() function, the transformation matrix is internally adjusted to compensate for unwanted translation, i.e. transformed() returns the smallest image containing all transformed points of the original image. This function returns the modified matrix, which maps points correctly from the original image into the new image.</source>
          <target state="translated">当使用transformed()函数变换图像时,变换矩阵会进行内部调整,以补偿不需要的变换,即transformed()返回包含原始图像所有变换点的最小图像。该函数返回修改后的矩阵,将原图像中的点正确映射到新图像中。</target>
        </trans-unit>
        <trans-unit id="7221d90a96209f3128795a80a97a531cead2f548" translate="yes" xml:space="preserve">
          <source>When transforming from clip to normalized space, a division by the w component of the vector components takes place. To prevent dividing by 0 if w equals to 0, it is set to 1.</source>
          <target state="translated">当从剪辑转换到归一化空间时,会发生矢量分量的w分量除法。如果w等于0,为了防止除以0,将其设置为1。</target>
        </trans-unit>
        <trans-unit id="fbec62568b02f257db0ec31fbe2b5f21cf0c220e" translate="yes" xml:space="preserve">
          <source>When transforming from clip to normalized space, a division by the w component on the vector components takes place. To prevent dividing by 0 if w equals to 0, it is set to 1.</source>
          <target state="translated">当从剪辑转换到归一化空间时,向量分量上的w分量会被除掉。如果w等于0,为了防止除以0,将其设置为1。</target>
        </trans-unit>
        <trans-unit id="f520f592321df5d529bf39711026e14f01be91fb" translate="yes" xml:space="preserve">
          <source>When true, the menu contains a special tear-off item (often shown as a dashed line at the top of the menu) that creates a copy of the menu when it is triggered.</source>
          <target state="translated">当为真时,菜单中包含一个特殊的拆分项(通常显示为菜单顶部的虚线),当它被触发时,会创建一个菜单的副本。</target>
        </trans-unit>
        <trans-unit id="a89b60404dcbc2f5c915acfe02c16712d4bb61d2" translate="yes" xml:space="preserve">
          <source>When two manuals are located in the same virtual folder, it is possible to refer to sections of the other manual using relative paths. The virtual folder tag is mandatory and the folder must not contain any '/'.</source>
          <target state="translated">当两本手册位于同一个虚拟文件夹中时,可以使用相对路径引用另一本手册的章节。虚拟文件夹标签是必须的,并且文件夹不得包含任何&quot;/&quot;。</target>
        </trans-unit>
        <trans-unit id="611300300598b513a04acdc4158b65a1b90365bd" translate="yes" xml:space="preserve">
          <source>When two widgets are adjacent to each other in a horizontal layout, setting the horizontal stretch factor of the widget on the left to 2 and the factor of widget on the right to 1 will ensure that the widget on the left will always be twice the size of the one on the right.</source>
          <target state="translated">当两个小组件在水平布局中相邻时,将左边小组件的水平拉伸系数设置为2,右边小组件的系数设置为1,将确保左边小组件的大小始终是右边小组件的两倍。</target>
        </trans-unit>
        <trans-unit id="33931b591564c5ce659c5439a00ac167ba2235e2" translate="yes" xml:space="preserve">
          <source>When two widgets are adjacent to each other in a vertical layout, setting the vertical stretch factor of the widget on the top to 2 and the factor of widget on the bottom to 1 will ensure that the widget on the top will always be twice the size of the one on the bottom.</source>
          <target state="translated">当两个小组件在垂直布局中相邻时,将顶部小组件的垂直拉伸系数设置为2,底部小组件的系数设置为1,将确保顶部小组件的大小始终是底部小组件的两倍。</target>
        </trans-unit>
        <trans-unit id="55c03842e144167485cbd5e8643bcbb80f6a7794" translate="yes" xml:space="preserve">
          <source>When unshared (or const version is called), this executes in &lt;a href=&quot;containers#constant-time&quot;&gt;constant time&lt;/a&gt;.</source>
          <target state="translated">取消共享（或调用const版本）时，此操作将以&lt;a href=&quot;containers#constant-time&quot;&gt;固定时间&lt;/a&gt;执行。</target>
        </trans-unit>
        <trans-unit id="bcc9e75ff489b96d3335be53af67c254b116188b" translate="yes" xml:space="preserve">
          <source>When unshared (or const version is called), this executes in &lt;a href=&quot;containers#logarithmic-time&quot;&gt;logarithmic time&lt;/a&gt;.</source>
          <target state="translated">当取消共享（或调用const版本）时，此操作以&lt;a href=&quot;containers#logarithmic-time&quot;&gt;对数时间&lt;/a&gt;执行。</target>
        </trans-unit>
        <trans-unit id="991f02e2c91e5a7647479f2f811f8738759e3c87" translate="yes" xml:space="preserve">
          <source>When updating the current time, &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt; will emit &lt;a href=&quot;qtimeline#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() if the current value changed, and &lt;a href=&quot;qtimeline#frameChanged&quot;&gt;frameChanged&lt;/a&gt;() if the frame changed.</source>
          <target state="translated">更新当前时间时，如果当前值发生更改，&lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt;将发出&lt;a href=&quot;qtimeline#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（），如果框架发生更改，则将发出&lt;a href=&quot;qtimeline#frameChanged&quot;&gt;frameChanged&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5e145cfe947de4c48b51f93dc8297d7f125256bd" translate="yes" xml:space="preserve">
          <source>When upgrading the code base to Qt 6, this API change would most likely result in compiler warnings about narrowing type conversions. Having the following example code:</source>
          <target state="translated">当将代码库升级到Qt 6时,这个API的变化很可能会导致编译器对缩小类型转换的警告。有以下示例代码。</target>
        </trans-unit>
        <trans-unit id="daf7b6e7fdbba2dfca1eadbe18a1d7de3b720e7b" translate="yes" xml:space="preserve">
          <source>When used as a context menu, the recommended way of opening the menu is to call &lt;a href=&quot;qml-qtquick-controls2-menu#popup-method&quot;&gt;popup()&lt;/a&gt;. Unless a position is explicitly specified, the menu is positioned at the mouse cursor on desktop platforms that have a mouse cursor available, and otherwise centered over its parent item.</source>
          <target state="translated">当用作上下文菜单时，建议打开菜单的方法是调用&lt;a href=&quot;qml-qtquick-controls2-menu#popup-method&quot;&gt;popup（）&lt;/a&gt;。除非明确指定位置，否则菜单将位于有鼠标光标的桌面平台上的鼠标光标处，否则将位于其父项上方。</target>
        </trans-unit>
        <trans-unit id="e42ccc06c2943db340e29e9634bf18dbc9e13468" translate="yes" xml:space="preserve">
          <source>When used as a popup menu, it is easiest to specify the position by specifying the desired &lt;a href=&quot;qml-qtquick-controls2-popup#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-popup#y-prop&quot;&gt;y&lt;/a&gt; coordinates using the respective properties, and call &lt;a href=&quot;qml-qtquick-controls2-popup#open-method&quot;&gt;open()&lt;/a&gt; to open the menu.</source>
          <target state="translated">当用作弹出菜单时，最简单的方法是使用相应的属性通过指定所需的&lt;a href=&quot;qml-qtquick-controls2-popup#x-prop&quot;&gt;x&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-popup#y-prop&quot;&gt;y&lt;/a&gt;坐标来指定位置，然后调用&lt;a href=&quot;qml-qtquick-controls2-popup#open-method&quot;&gt;open（）&lt;/a&gt;打开菜单。</target>
        </trans-unit>
        <trans-unit id="51c1a4b96d0ac9fe7349345183028fcd340a1cf9" translate="yes" xml:space="preserve">
          <source>When used as a standalone application,</source>
          <target state="translated">当作为一个独立的应用程序使用时。</target>
        </trans-unit>
        <trans-unit id="7c8523a9cdaa732605d1c3ca0c57e7327514b32b" translate="yes" xml:space="preserve">
          <source>When used as an interface type, &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; allows a single function to accept a wide variety of UTF-16 string data sources. One function accepting &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; thus replaces three function overloads (taking &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;, and &lt;code&gt;(const QChar*, int)&lt;/code&gt;), while at the same time enabling even more string data sources to be passed to the function, such as &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt;, a &lt;code&gt;char16_t&lt;/code&gt; string literal.</source>
          <target state="translated">当用作接口类型时，&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;允许单个函数接受各种UTF-16字符串数据源。因此，一个接受&lt;a href=&quot;qstringview&quot;&gt;QStringView的&lt;/a&gt;函数替换了三个函数重载（采用&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;和 &lt;code&gt;(const QChar*, int)&lt;/code&gt; ），同时允许将更多的字符串数据源传递给该函数，例如 &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt; ，一个 &lt;code&gt;char16_t&lt;/code&gt; 字符串文字。</target>
        </trans-unit>
        <trans-unit id="c2331b7f75357b1ee5e892039a4c5bc36abc3ebb" translate="yes" xml:space="preserve">
          <source>When used as an interface type, QAnyStringView allows a single function to accept a wide variety of string data sources. One function accepting QAnyStringView thus replaces five function overloads (taking &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;code&gt;(const QChar*, int)&lt;/code&gt;, &lt;a href=&quot;qutf8stringview&quot;&gt;QUtf8StringView&lt;/a&gt;, &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; (but see above), and &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;), while at the same time enabling even more string data sources to be passed to the function, such as &lt;code&gt;u8&quot;Hello World&quot;&lt;/code&gt;, a &lt;code&gt;char8_t&lt;/code&gt; string literal.</source>
          <target state="translated">当用作接口类型时，QAnyStringView允许单个函数接受各种字符串数据源。因此，一个接受QAnyStringView的函数替换了五个函数重载（采用&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;， &lt;code&gt;(const QChar*, int)&lt;/code&gt; ，&lt;a href=&quot;qutf8stringview&quot;&gt;QUtf8StringView&lt;/a&gt;，&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;（但见上文）和&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;），同时使更多的字符串数据源可以传递给函数，例如 &lt;code&gt;u8&quot;Hello World&quot;&lt;/code&gt; （一个 &lt;code&gt;char8_t&lt;/code&gt; 字符串文字）。</target>
        </trans-unit>
        <trans-unit id="cc4ca000bbdcd588a928f4c8ebed8bb2e8e1a089" translate="yes" xml:space="preserve">
          <source>When used as an interface type, QByteArrayView allows a single function to accept a wide variety of byte-array-like data sources. One function accepting QByteArrayView thus replaces several function overloads (taking, for example, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, const char *, etc.) while at the same time enabling even more byte array data sources to be passed to the function.</source>
          <target state="translated">当用作接口类型时，QByteArrayView允许单个函数接受各种各样的类似字节数组的数据源。因此，一个接受QByteArrayView的函数替换了几个函数重载（例如，&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;，const char *等），同时允许将更多字节数组数据源传递给该函数。</target>
        </trans-unit>
        <trans-unit id="daa321fda042d9ed390371715ca51be5b7197d06" translate="yes" xml:space="preserve">
          <source>When used as an interface type, QStringView allows a single function to accept a wide variety of UTF-16 string data sources. One function accepting QStringView thus replaces three function overloads (taking &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and &lt;code&gt;(const QChar*, int)&lt;/code&gt;), while at the same time enabling even more string data sources to be passed to the function, such as &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt;, a &lt;code&gt;char16_t&lt;/code&gt; string literal.</source>
          <target state="translated">当用作接口类型时，QStringView允许单个函数接受各种UTF-16字符串数据源。因此，一个接受QStringView的函数替换了三个函数重载（采用&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;和 &lt;code&gt;(const QChar*, int)&lt;/code&gt; ），同时允许将更多的字符串数据源传递给该函数，例如 &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt; ， &lt;code&gt;char16_t&lt;/code&gt; 字符串字面量。</target>
        </trans-unit>
        <trans-unit id="3d30f2719e4dfd488693920afd51d738514f58fc" translate="yes" xml:space="preserve">
          <source>When used as an interface type, QStringView allows a single function to accept a wide variety of UTF-16 string data sources. One function accepting QStringView thus replaces three function overloads (taking &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;, and &lt;code&gt;(const QChar*, int)&lt;/code&gt;), while at the same time enabling even more string data sources to be passed to the function, such as &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt;, a &lt;code&gt;char16_t&lt;/code&gt; string literal.</source>
          <target state="translated">当用作接口类型时，QStringView允许单个函数接受各种UTF-16字符串数据源。因此，一个接受QStringView的函数替换了三个函数重载（采用&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;，&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;和 &lt;code&gt;(const QChar*, int)&lt;/code&gt; ），同时允许将更多的字符串数据源传递给该函数，例如 &lt;code&gt;u&quot;Hello World&quot;&lt;/code&gt; ，一个 &lt;code&gt;char16_t&lt;/code&gt; 字符串文字。</target>
        </trans-unit>
        <trans-unit id="b756621a27b88c05453eea04740bc04dc68c1ddb" translate="yes" xml:space="preserve">
          <source>When used as an interface type, QUtf8StringView allows a single function to accept a wide variety of UTF-8 string data sources. One function accepting QUtf8StringView thus replaces several function overloads (taking e.g. &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;), while at the same time enabling even more string data sources to be passed to the function, such as &lt;code&gt;u8&quot;Hello World&quot;&lt;/code&gt;, a &lt;code&gt;char8_t&lt;/code&gt; (C++20) or &lt;code&gt;char&lt;/code&gt; (C++17) string literal. The &lt;code&gt;char8_t&lt;/code&gt; incompatibility between C++17 and C++20 goes away when using QUtf8StringView.</source>
          <target state="translated">当用作接口类型时，QUtf8StringView允许单个函数接受各种UTF-8字符串数据源。这样，一个接受QUtf8StringView的函数将替换几个函数重载（例如&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;），同时允许将更多的字符串数据源传递给该函数，例如 &lt;code&gt;u8&quot;Hello World&quot;&lt;/code&gt; ， &lt;code&gt;char8_t&lt;/code&gt; （C ++ 20）或 &lt;code&gt;char&lt;/code&gt; （C ++ 17）字符串文字。使用 &lt;code&gt;char8_t&lt;/code&gt; ，C ++ 17和C ++ 20之间的char8_t不兼容现象消失了。</target>
        </trans-unit>
        <trans-unit id="2e868d59396f0fc788445bb00690275ea6245ac1" translate="yes" xml:space="preserve">
          <source>When used as flags, enumerators can be combined using the OR operator.</source>
          <target state="translated">当作为标志使用时,可以使用OR操作符将枚举器组合起来。</target>
        </trans-unit>
        <trans-unit id="06c2c617a12597a994b108366e0d50cfb932d1fd" translate="yes" xml:space="preserve">
          <source>When used as part of a Transition, you can also target a specific &lt;a href=&quot;qml-qtquick-statechangescript&quot;&gt;StateChangeScript&lt;/a&gt; to run using the &lt;code&gt;scriptName&lt;/code&gt; property.</source>
          <target state="translated">当用作过渡的一部分时，您还可以使用 &lt;code&gt;scriptName&lt;/code&gt; 属性将特定的&lt;a href=&quot;qml-qtquick-statechangescript&quot;&gt;StateChangeScript定位&lt;/a&gt;为运行。</target>
        </trans-unit>
        <trans-unit id="59f0102a4ce38b4f2ee3e6dec5be09d72963e0c7" translate="yes" xml:space="preserve">
          <source>When used in a &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pauseanimation&quot;&gt;PauseAnimation&lt;/a&gt; is a step when nothing happens, for a specified duration.</source>
          <target state="translated">在&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation中&lt;/a&gt;使用时，&lt;a href=&quot;qml-qtquick-pauseanimation&quot;&gt;PauseAnimation&lt;/a&gt;是在指定的持续时间内什么都没有发生的步骤。</target>
        </trans-unit>
        <trans-unit id="32a85cc6f1a776a818b49cfac1cb9534a2a52415" translate="yes" xml:space="preserve">
          <source>When used in a &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;, PauseAnimation is a step when nothing happens, for a specified duration.</source>
          <target state="translated">在&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation中&lt;/a&gt;使用时，PauseAnimation是在指定持续时间内什么都不发生的步骤。</target>
        </trans-unit>
        <trans-unit id="a1ec54421dbb8796f81a74d96171dee0c22a448e" translate="yes" xml:space="preserve">
          <source>When used in a transition, a property animation is assumed to match</source>
          <target state="translated">当在过渡期中使用时,属性动画被假设为与</target>
        </trans-unit>
        <trans-unit id="c62896cbdfc7c3f4c1df9f239489204e6ebe788a" translate="yes" xml:space="preserve">
          <source>When used in a transition, if no target is specified, all &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; occurrences are animated by the &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt;.</source>
          <target state="translated">在过渡中使用时，如果未指定目标，则所有&lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;事件均由&lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt;设置动画。</target>
        </trans-unit>
        <trans-unit id="28b437395e782784d83371eebd653fd7c3c66b90" translate="yes" xml:space="preserve">
          <source>When used in a transition, the path can be specified without start or end points, for example:</source>
          <target state="translated">例如,在过渡期中使用时,可以不指定路径的起始点或终点。</target>
        </trans-unit>
        <trans-unit id="ad15b94076fc6d62e74b16ac21ba031bb2e8713a" translate="yes" xml:space="preserve">
          <source>When used in combination with &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, the first column is not movable (since it contains the tree structure), by default. You can make it movable with &lt;a href=&quot;qheaderview#firstSectionMovable-prop&quot;&gt;setFirstSectionMovable&lt;/a&gt;(true).</source>
          <target state="translated">当与&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;结合使用时，默认情况下第一列是不可移动的（因为它包含树结构）。您可以使用&lt;a href=&quot;qheaderview#firstSectionMovable-prop&quot;&gt;setFirstSectionMovable&lt;/a&gt;（true）使它可移动。</target>
        </trans-unit>
        <trans-unit id="80921d8c37af7cbb33ff4de031ae482a77195e92" translate="yes" xml:space="preserve">
          <source>When used in conjunction with QTextureWrapMode::Repeat, textureScale provides a simple way to tile a texture across a surface. For example, a texture scale of &lt;code&gt;4.0&lt;/code&gt; would result in 16 (4x4) tiles.</source>
          <target state="translated">当与QTextureWrapMode :: Repeat结合使用时，textureScale提供了一种在表面上平铺纹理的简单方法。例如，纹理比例为 &lt;code&gt;4.0&lt;/code&gt; 将产生16（4x4）个图块。</target>
        </trans-unit>
        <trans-unit id="8adf2789c382dae59470f104ac31491a01be4c17" translate="yes" xml:space="preserve">
          <source>When used in conjunction with WrapMode.Repeat, textureScale provides a simple way to tile a texture across a surface. For example, a texture scale of &lt;code&gt;4.0&lt;/code&gt; would result in 16 (4x4) tiles.</source>
          <target state="translated">与WrapMode.Repeat结合使用时，textureScale提供了一种在表面上平铺纹理的简单方法。例如，纹理比例为 &lt;code&gt;4.0&lt;/code&gt; 将产生16（4x4）个图块。</target>
        </trans-unit>
        <trans-unit id="004dc51d90326bec6d46cfd29896a25f4617d992" translate="yes" xml:space="preserve">
          <source>When used in conjunction with the &lt;a href=&quot;qml-qtquick-loader#source-prop&quot;&gt;source&lt;/a&gt; property, loading and compilation will also be performed in a background thread.</source>
          <target state="translated">当与&lt;a href=&quot;qml-qtquick-loader#source-prop&quot;&gt;source&lt;/a&gt;属性一起使用时，加载和编译也将在后台线程中执行。</target>
        </trans-unit>
        <trans-unit id="50af634dadcc9340640490a9af221cd3bbb07199" translate="yes" xml:space="preserve">
          <source>When used in conjunction with the &lt;a href=&quot;qml-qtquick3d-loader3d#source-prop&quot;&gt;source&lt;/a&gt; property, loading and compilation will also be performed in a background thread.</source>
          <target state="translated">当与&lt;a href=&quot;qml-qtquick3d-loader3d#source-prop&quot;&gt;source&lt;/a&gt;属性一起使用时，加载和编译也将在后台线程中执行。</target>
        </trans-unit>
        <trans-unit id="4b5ebb2f8eef3c956f23605775c3ca22ba3215b5" translate="yes" xml:space="preserve">
          <source>When used with list models, the first item in the returned list is used for matching.</source>
          <target state="translated">当与列表模型一起使用时,返回的列表中的第一个项目被用于匹配。</target>
        </trans-unit>
        <trans-unit id="dd791f890c76a8c37cce3455ef2668c607b23ee1" translate="yes" xml:space="preserve">
          <source>When user defines a new functor or generator, they need to implement the &lt;a href=&quot;qt3dcore-qabstractfunctor#id&quot;&gt;QAbstractFunctor::id&lt;/a&gt;() method, which should be done using the &lt;code&gt;QT3D_FUNCTOR&lt;/code&gt; macro in the class definition.</source>
          <target state="translated">当用户定义新的函子或生成器时，他们需要实现&lt;a href=&quot;qt3dcore-qabstractfunctor#id&quot;&gt;QAbstractFunctor :: id&lt;/a&gt;（）方法，该方法应使用类定义中的 &lt;code&gt;QT3D_FUNCTOR&lt;/code&gt; 宏来完成。</target>
        </trans-unit>
        <trans-unit id="2aa79e373766a60d20b2141aeac582a5a8df07d6" translate="yes" xml:space="preserve">
          <source>When user defines a new functor or generator, they need to implement the &lt;a href=&quot;qt3drender-qabstractfunctor#id&quot;&gt;QAbstractFunctor::id&lt;/a&gt;() method, which should be done using the &lt;code&gt;QT3D_FUNCTOR&lt;/code&gt; macro in the class definition.</source>
          <target state="translated">当用户定义新的函子或生成器时，他们需要实现&lt;a href=&quot;qt3drender-qabstractfunctor#id&quot;&gt;QAbstractFunctor :: id&lt;/a&gt;（）方法，该方法应使用类定义中的 &lt;code&gt;QT3D_FUNCTOR&lt;/code&gt; 宏来完成。</target>
        </trans-unit>
        <trans-unit id="1426cfebd5b7719f33b6e2b9f2a97f042b4572ab" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; based widgets, you should enable the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_AcceptTouchEvents&lt;/a&gt; attribute on the scroll area's &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport&lt;/a&gt;.</source>
          <target state="translated">使用基于&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;的窗口小部件时，应在滚动区域的&lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;视口&lt;/a&gt;上启用&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_AcceptTouchEvents&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="575c3ca33cbc8c0e49967dd6868de7d0cd46c7ed" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;, transferred exceptions will be thrown when calling the following functions:</source>
          <target state="translated">使用&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;时，调用以下函数时将引发已传送的异常：</target>
        </trans-unit>
        <trans-unit id="6d8f6cec0c5597c992eb3a8a60ec3ad82996acf4" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; components, picking is triggered by mouse events.</source>
          <target state="translated">使用&lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt;组件时，鼠标事件触发选择。</target>
        </trans-unit>
        <trans-unit id="84a71d92671a35f5e7502b348babb72bc64cf8ed" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qml-qt3d-render-raycaster&quot;&gt;RayCaster&lt;/a&gt; or &lt;a href=&quot;qml-qt3d-render-screenraycaster&quot;&gt;ScreenRayCaster&lt;/a&gt; components, picking can be explicitly triggered by the application.</source>
          <target state="translated">使用&lt;a href=&quot;qml-qt3d-render-raycaster&quot;&gt;RayCaster&lt;/a&gt;或&lt;a href=&quot;qml-qt3d-render-screenraycaster&quot;&gt;ScreenRayCaster&lt;/a&gt;组件时，拾取可以由应用程序显式触发。</target>
        </trans-unit>
        <trans-unit id="8b9d22db787646c3b272fef7eabbedc341942ce2" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (or a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;), previously the &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; would be cleared by the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor. Now, the &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; is cleared by the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; destructor (since this is when &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects are cleared). Any QPointers tracking a widget will &lt;b&gt;NOT&lt;/b&gt; be cleared before the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor destroys the children for the widget being tracked.</source>
          <target state="translated">当使用&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;上的&lt;a href=&quot;qwidget&quot;&gt;QWidget的&lt;/a&gt;（或子类&lt;a href=&quot;qwidget&quot;&gt;的QWidget&lt;/a&gt;），先前的&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;将通过清除&lt;a href=&quot;qwidget&quot;&gt;QWidget的&lt;/a&gt;析构函数。现在，通过&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;析构函数清除&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;（因为这是清除&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;对象的时间）。在&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;析构函数销毁要跟踪的窗口小部件的子级之前，&lt;b&gt;不会&lt;/b&gt;清除任何跟踪窗口小部件的QPointers 。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="9cb101985a20e335f82bea2786675dac07ad4743" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, the responsibility for driving the rendering loop is transferred to the application. In this case no built-in render loop is used. Instead, it is up to the application to invoke the polish, synchronize and rendering steps at the appropriate time. It is possible to implement either a threaded or non-threaded behavior similar to the ones shown above.</source>
          <target state="translated">使用&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl时&lt;/a&gt;，驱动渲染循环的责任已转移到应用程序。在这种情况下，不使用内置的渲染循环。取而代之的是，应由应用程序在适当的时候调用抛光，同步和渲染步骤。可以实现类似于上述行为的线程行为或非线程行为。</target>
        </trans-unit>
        <trans-unit id="d012f8d1021f21cc24a25741a7fb9a69b828bff8" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;, character classes such as &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, etc. match characters with the corresponding Unicode property: for instance, &lt;code&gt;\d&lt;/code&gt; matches any character with the Unicode Nd (decimal digit) property.</source>
          <target state="translated">当使用&lt;a href=&quot;qregexp&quot;&gt;QRegExp时&lt;/a&gt;，诸如 &lt;code&gt;\w&lt;/code&gt; ， &lt;code&gt;\d&lt;/code&gt; 等字符类将具有相应Unicode属性的字符匹配：例如， &lt;code&gt;\d&lt;/code&gt; 匹配具有Unicode Nd（十进制数字）属性的任何字符。</target>
        </trans-unit>
        <trans-unit id="ac6f985a54a309fa51d578fd26c8d0b4e738a09d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;(), if an exact match was not found, one could still find out how much of the subject string was matched by the regular expression by calling &lt;a href=&quot;qregexp#matchedLength&quot;&gt;QRegExp::matchedLength&lt;/a&gt;(). If the returned length was equal to the subject string's length, then one could conclude that a partial match was found.</source>
          <target state="translated">使用&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp :: exactMatch&lt;/a&gt;（）时，如果未找到完全匹配的内容，则仍可以通过调用&lt;a href=&quot;qregexp#matchedLength&quot;&gt;QRegExp :: matchedLength&lt;/a&gt;（）来找出正则表达式匹配了多少主题字符串。如果返回的长度等于主题字符串的长度，则可以得出结论，发现部分匹配。</target>
        </trans-unit>
        <trans-unit id="7d94095f2415c5876a4a1aa870624cea946f6341" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qsqlrelationaltablemodel#setData&quot;&gt;setData&lt;/a&gt;() the role should always be &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt;, and when using &lt;a href=&quot;qsqlrelationaltablemodel#data&quot;&gt;data&lt;/a&gt;() the role should always be &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;qsqlrelationaltablemodel#setData&quot;&gt;setData&lt;/a&gt;（）时，角色应始终为&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt;；使用&lt;a href=&quot;qsqlrelationaltablemodel#data&quot;&gt;data&lt;/a&gt;（）时，角色应始终为&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: DisplayRole&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a13ee32d4578c512ae1659dfec745b53cf236ec8" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; components, picking is triggered by mouse events.</source>
          <target state="translated">使用&lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt;组件时，鼠标事件触发选择。</target>
        </trans-unit>
        <trans-unit id="0f56fc20751ece8353bd515ce19ac51a3e3f37cf" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qt3drender-qraycaster&quot;&gt;QRayCaster&lt;/a&gt; or &lt;a href=&quot;qt3drender-qscreenraycaster&quot;&gt;QScreenRayCaster&lt;/a&gt; components, picking can be explicitly triggered by the application.</source>
          <target state="translated">使用&lt;a href=&quot;qt3drender-qraycaster&quot;&gt;QRayCaster&lt;/a&gt;或&lt;a href=&quot;qt3drender-qscreenraycaster&quot;&gt;QScreenRayCaster&lt;/a&gt;组件时，可以由应用程序显式触发选择。</target>
        </trans-unit>
        <trans-unit id="0bc4fe98c52b381a2aadae88fd44cf619ed0b21e" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;, transferred exceptions will be thrown when calling the following functions:</source>
          <target state="translated">使用&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;时，调用以下函数时将引发已传送的异常：</target>
        </trans-unit>
        <trans-unit id="4bb450b8e4af0bd506a47d7330ff8573095a4a13" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() and &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() consecutively, it is possible for &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() to return true, but &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() to return false. This is typically because &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() only reports the general ability of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; to convert between types given suitable data; it is still possible to supply data which cannot actually be converted.</source>
          <target state="translated">当连续使用&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）和&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）时，&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）可能返回true，但是&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）返回false。这通常是因为&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）仅报告&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;在给定适当数据的类型之间进行转换的一般能力。仍然有可能提供无法实际转换的数据。</target>
        </trans-unit>
        <trans-unit id="d37f68c0c35e188254d8435a84da82e74251cffd" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() and &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() consecutively, it is possible for &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() to return true, but &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() to return false. This is typically because &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() only reports the general ability of QVariant to convert between types given suitable data; it is still possible to supply data which cannot actually be converted.</source>
          <target state="translated">当连续使用&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）和&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）时，&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）可能返回true，但是&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）返回false。这通常是因为&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）仅报告QVariant在给定适当数据的类型之间进行转换的一般能力。仍然有可能提供无法实际转换的数据。</target>
        </trans-unit>
        <trans-unit id="93607a503a8f7f722105088c33d8d1a71ff17341" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;() and &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() consecutively, it is possible for &lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;() to return true, but &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() to return false. This is typically because &lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;() only reports the general ability of QVariant to convert between types given suitable data; it is still possible to supply data which cannot actually be converted.</source>
          <target state="translated">当连续使用&lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;（）和&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）时，&lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;（）可能返回true，但是&lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;（）返回false。这通常是因为&lt;a href=&quot;qvariant#canConvert-2&quot;&gt;canConvert&lt;/a&gt;（）仅报告QVariant在给定适当数据的类型之间进行转换的一般能力。仍然有可能提供无法实际转换的数据。</target>
        </trans-unit>
        <trans-unit id="63a5b0e4cc7f8c24a778525455fed9bdd298ad8d" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt;, diffuse and specular lighting are calculated for each rendered pixel. Certain effects (such as a Fresnel or bump map) require &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; to work.</source>
          <target state="translated">使用 &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; 时，将为每个渲染像素计算漫反射和镜面照明。某些效果（例如菲涅耳或凹凸贴图）需要 &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; 才能起作用。</target>
        </trans-unit>
        <trans-unit id="181a002e05e8272926d9351f95bbfbfb7cdf85dc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;DefaultMaterial.NoLighting&lt;/code&gt; no lighting is calculated. This mode is (predictably) very fast, and quite effective when image maps are used that do not need to be shaded by lighting.</source>
          <target state="translated">当使用 &lt;code&gt;DefaultMaterial.NoLighting&lt;/code&gt; 时,不计算照明。此模式非常快（可预测），并且在使用不需要通过光照着色的图像贴图时非常有效。</target>
        </trans-unit>
        <trans-unit id="f5c98171bdab97a1919d644be562260acc1d76be" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Drag.Automatic&lt;/code&gt; you should also define &lt;a href=&quot;qml-qtquick-drag#mimeData-attached-prop&quot;&gt;mimeData&lt;/a&gt; and bind the &lt;a href=&quot;qml-qtquick-drag#active-attached-prop&quot;&gt;active&lt;/a&gt; property to the active property of &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; : &lt;a href=&quot;qml-qtquick-mousearea#drag.active-prop&quot;&gt;MouseArea::drag.active&lt;/a&gt;</source>
          <target state="translated">使用 &lt;code&gt;Drag.Automatic&lt;/code&gt; 时,还应该定义&lt;a href=&quot;qml-qtquick-drag#mimeData-attached-prop&quot;&gt;mimeData&lt;/a&gt;并将&lt;a href=&quot;qml-qtquick-drag#active-attached-prop&quot;&gt;active&lt;/a&gt;属性绑定到&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;的active属性：&lt;a href=&quot;qml-qtquick-mousearea#drag.active-prop&quot;&gt;MouseArea :: drag.active&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f748b0d6e3f84aeeb3819d9034a189b81e556575" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt;, diffuse and specular lighting is calculated for each rendered pixel. Certain effects (such as a Fresnel or normal map) require &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; to work.</source>
          <target state="translated">使用 &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; 时，将为每个渲染像素计算漫反射和镜面照明。某些效果（例如菲涅耳或法线贴图）需要 &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; 才能起作用。</target>
        </trans-unit>
        <trans-unit id="12e29fd22ce81fc6972c0d59e6992cae2fc2597f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; no lighting is calculated. This mode is (predictably) very fast, and is quite effective when image maps are used that you do not need to be shaded by lighting.</source>
          <target state="translated">当使用 &lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; 时,不计算照明。此模式非常快（可以预测），当使用图像贴图且不需要被光照着色时，此模式非常有效。</target>
        </trans-unit>
        <trans-unit id="546e609f1fd18fd7bc410127d39e9e19ec5b16a8" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; no lighting is calculated. This mode is (predictably) very fast, and is quite effective when image maps are used that you do not need to be shaded by lighting. All other shading properties except &lt;a href=&quot;qml-qtquick3d-principledmaterial#baseColor-prop&quot;&gt;baseColor&lt;/a&gt; values, alpha values, and vertex colors will be ignored.</source>
          <target state="translated">当使用 &lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; 时,不计算照明。此模式非常快（可以预测），当使用图像贴图且不需要被光照着色时，此模式非常有效。除&lt;a href=&quot;qml-qtquick3d-principledmaterial#baseColor-prop&quot;&gt;baseColor&lt;/a&gt;值，alpha值和顶点颜色以外的所有其他着色属性都将被忽略。</target>
        </trans-unit>
        <trans-unit id="41f53f3fe7bbb3775a71ffa1e9c1e78f1fe5d53b" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;QRegExp::exactMatch()&lt;/code&gt;, if an exact match was not found, one could still find out how much of the subject string was matched by the regular expression by calling &lt;code&gt;QRegExp::matchedLength()&lt;/code&gt;. If the returned length was equal to the subject string's length, then one could conclude that a partial match was found. &lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; supports partial matching explicitly by means of the appropriate &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression::MatchType&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;QRegExp::exactMatch()&lt;/code&gt; ，如果未找到完全匹配的内容，则仍可以通过调用 &lt;code&gt;QRegExp::matchedLength()&lt;/code&gt; 正则表达式匹配了多少主题字符串。如果返回的长度等于主题字符串的长度，则可以得出结论，找到了部分匹配项。&lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;通过适当的&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression :: MatchType&lt;/a&gt;显式支持部分匹配。</target>
        </trans-unit>
        <trans-unit id="cb2aed55ec2520ea5e048890963966947598734b" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;QRegExp&lt;/code&gt;, character classes such as &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, etc. match characters with the corresponding Unicode property: for instance, &lt;code&gt;\d&lt;/code&gt; matches any character with the Unicode Nd (decimal digit) property. Those character classes only match ASCII characters by default. When using &lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the 0-9 ASCII range. It is possible to change this behavior by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="translated">当使用 &lt;code&gt;QRegExp&lt;/code&gt; 时，诸如 &lt;code&gt;\w&lt;/code&gt; ， &lt;code&gt;\d&lt;/code&gt; 等字符类将具有相应Unicode属性的字符匹配：例如， &lt;code&gt;\d&lt;/code&gt; 匹配具有Unicode Nd（十进制数字）属性的任何字符。默认情况下，这些字符类仅与ASCII字符匹配。例如，当使用&lt;a href=&quot;qtcore-changes-qt6#qregularexpression&quot;&gt;QRegularExpression时&lt;/a&gt;， &lt;code&gt;\d&lt;/code&gt; 与0-9 ASCII范围内的字符完全匹配。通过使用&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression :: UseUnicodePropertiesOption&lt;/a&gt;模式选项，可以更改此行为。</target>
        </trans-unit>
        <trans-unit id="bb15798a6838b0b5d9ff2812930cc61f9da64382" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;swipe.left&lt;/code&gt; and &lt;code&gt;swipe.right&lt;/code&gt;, the control cannot be swiped past the left and right edges. To achieve this type of &quot;wrapping&quot; behavior, set &lt;code&gt;swipe.behind&lt;/code&gt; instead. This will result in the same item being shown regardless of which direction the control is swiped. For example, in the image below, we set &lt;code&gt;swipe.behind&lt;/code&gt; and then swipe the control repeatedly in both directions:</source>
          <target state="translated">使用 &lt;code&gt;swipe.left&lt;/code&gt; 和 &lt;code&gt;swipe.right&lt;/code&gt; 时，无法将控件滑过左右边缘。要实现这种&amp;ldquo;包装&amp;rdquo;行为， &lt;code&gt;swipe.behind&lt;/code&gt; 改为设置swipe.behind。无论控件向哪个方向滑动，都将显示相同的项目。例如，在下图中，我们将 &lt;code&gt;swipe.behind&lt;/code&gt; 设置在其后，然后在两个方向上重复滑动该控件：</target>
        </trans-unit>
        <trans-unit id="61bedb3305669141647e1f5b49411e374f737ba6" translate="yes" xml:space="preserve">
          <source>When using BlockWithGui, applications must be prepared for reentrancy in any function.</source>
          <target state="translated">当使用BlockWithGui时,应用程序必须为任何函数的重入做好准备。</target>
        </trans-unit>
        <trans-unit id="62f4bd548f8779658ed7ed0fc958d3e08e13ec54" translate="yes" xml:space="preserve">
          <source>When using DBus in a peer-to-peer context (i.e., not on a bus), the</source>
          <target state="translated">当在点对点上下文中使用DBus时(即不在总线上使用时),在</target>
        </trans-unit>
        <trans-unit id="691c13e7d09d858f3074039dda4ddcb22ceb97bd" translate="yes" xml:space="preserve">
          <source>When using OpenGL directly, the default adaptation is capable of providing the full Qt Quick 2 feature set. For more details, see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Default Adaptation&lt;/a&gt;.</source>
          <target state="translated">直接使用OpenGL时，默认的适配功能可以提供完整的Qt Quick 2功能集。有关更多详细信息，请参见&lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;默认适应&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3443c88fd0bfeed377ff1535febbb39cfd07c48f" translate="yes" xml:space="preserve">
          <source>When using OpenGL, Vulkan, Metal, or Direct 3D via the RHI, the default adaptation is capable of providing most features, including the full batching renderer described in &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Default Adaptation&lt;/a&gt;, but some additional features may not be available as of Qt 5.14.</source>
          <target state="translated">通过RHI使用OpenGL，Vulkan，Metal或Direct 3D时，默认改编能够提供大多数功能，包括&amp;ldquo;&lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;默认改编&amp;rdquo;中&lt;/a&gt;描述的完整批处理渲染器，但是从Qt 5.14开始，某些附加功能可能不可用。</target>
        </trans-unit>
        <trans-unit id="e12fe5aed3159ac2d8ab33ab64fb58ad7f96fad6" translate="yes" xml:space="preserve">
          <source>When using OpenGL, the &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; used for rendering by the scene graph will be bound at this point.</source>
          <target state="translated">使用OpenGL时，此时将&lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;绑定&lt;/a&gt;用于场景图渲染的QOpenGLContext。</target>
        </trans-unit>
        <trans-unit id="1050985281b9ecb52ace1f9f25c0094bcb38a505" translate="yes" xml:space="preserve">
          <source>When using PSK, the client must send to the server a valid identity and a valid pre shared key, in order for the SSL handshake to continue. Applications can provide this information in a slot connected to this signal, by filling in the passed</source>
          <target state="translated">当使用PSK时,客户端必须向服务器发送有效的身份和有效的预共享密钥,以便SSL握手继续。应用程序可以在连接到该信号的插槽中提供这些信息,通过填写通过的</target>
        </trans-unit>
        <trans-unit id="39ee444b0ae6c83e2b1c9912b7c4bafa58d26ba0" translate="yes" xml:space="preserve">
          <source>When using PSK, the client must send to the server a valid identity and a valid pre shared key, in order for the TLS handshake to continue. Applications can provide this information in a slot connected to this signal, by filling in the passed</source>
          <target state="translated">当使用PSK时,客户端必须向服务器发送有效的身份信息和有效的预共享密钥,以便继续进行TLS握手。应用程序可以在连接到这个信号的槽中提供这些信息,通过填写通过的</target>
        </trans-unit>
        <trans-unit id="3ddef15731edb7f2ec01ffcdbebf9f233547ee7b" translate="yes" xml:space="preserve">
          <source>When using QPointer on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (or a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;), previously the QPointer would be cleared by the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor. Now, the QPointer is cleared by the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; destructor (since this is when &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects are cleared). Any QPointers tracking a widget will &lt;b&gt;NOT&lt;/b&gt; be cleared before the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor destroys the children for the widget being tracked.</source>
          <target state="translated">当在使用QPointer &lt;a href=&quot;qwidget&quot;&gt;QWidget的&lt;/a&gt;（或子类&lt;a href=&quot;qwidget&quot;&gt;的QWidget&lt;/a&gt;），先前的QPointer将通过清除&lt;a href=&quot;qwidget&quot;&gt;QWidget的&lt;/a&gt;析构函数。现在，通过&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;析构函数清除QPointer （因为这是清除&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;对象的时间）。在&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;析构函数销毁要跟踪的窗口小部件的子级之前，&lt;b&gt;不会&lt;/b&gt;清除任何跟踪窗口小部件的QPointers 。</target>
        </trans-unit>
        <trans-unit id="f685ef46fe7dd6007175d02c9f869a4880a42cb0" translate="yes" xml:space="preserve">
          <source>When using QPointer on a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; (or a subclass of &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;), previously the QPointer would be cleared by the &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; destructor. Now, the QPointer is cleared by the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; destructor (since this is when &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects are cleared). Any QPointers tracking a widget will &lt;b&gt;NOT&lt;/b&gt; be cleared before the &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; destructor destroys the children for the widget being tracked.</source>
          <target state="translated">当在使用QPointer &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget的&lt;/a&gt;（或子类&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;的QWidget&lt;/a&gt;），先前的QPointer将通过清除&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget的&lt;/a&gt;析构函数。现在，通过&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;析构函数清除QPointer （因为这是清除&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;对象的时间）。在&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;析构函数销毁要跟踪的窗口小部件的子级之前，&lt;b&gt;不会&lt;/b&gt;清除任何跟踪窗口小部件的QPointers 。</target>
        </trans-unit>
        <trans-unit id="40529dce9d600493e59329b79adee1882ab5990d" translate="yes" xml:space="preserve">
          <source>When using QRegExp, character classes such as &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, etc. match characters with the corresponding Unicode property: for instance, &lt;code&gt;\d&lt;/code&gt; matches any character with the Unicode Nd (decimal digit) property.</source>
          <target state="translated">当使用QRegExp时，诸如 &lt;code&gt;\w&lt;/code&gt; ， &lt;code&gt;\d&lt;/code&gt; 等字符类将具有相应Unicode属性的字符匹配：例如， &lt;code&gt;\d&lt;/code&gt; 匹配具有Unicode Nd（十进制数字）属性的任何字符。</target>
        </trans-unit>
        <trans-unit id="255f0d84a345be8b50ad54e3ccc3e16895694fac" translate="yes" xml:space="preserve">
          <source>When using Qt Assistant as the help browser for an application, it should be possible to customize it to fit the application better, so that it does not look like an independent, standalone help browser. To achieve this, several additional properties can be set in a Qt help collection file, to change for example the title or application icon of Qt Assistant. For more information, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtassistant-index.html&quot;&gt;Qt Assistant Manual&lt;/a&gt;.</source>
          <target state="translated">将Qt Assistant用作应用程序的帮助浏览器时，应该可以对其进行自定义以更好地适合该应用程序，以使其看起来不像独立的独立帮助浏览器。为此，可以在Qt帮助收集文件中设置几个其他属性，以更改例如Qt Assistant的标题或应用程序图标。有关更多信息，请参见《&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtassistant-index.html&quot;&gt;Qt助手手册》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e885d834a3a8009f53361c87cc4af716e63bfd9" translate="yes" xml:space="preserve">
          <source>When using Qt Assistant as the help browser for an application, it should be possible to customize it to fit the application better, so that it does not look like an independent, standalone help browser. To achieve this, several additional properties can be set in a Qt help collection file, to change for example the title or application icon of Qt Assistant. For more information, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtassistant-index.html&quot;&gt;Qt Assistant Manual&lt;/a&gt;.</source>
          <target state="translated">将Qt Assistant用作应用程序的帮助浏览器时，应该可以对其进行自定义以更好地适合该应用程序，从而使其看起来不像独立的独立帮助浏览器。为此，可以在Qt帮助收集文件中设置几个其他属性，以更改例如Qt Assistant的标题或应用程序图标。有关更多信息，请参见《&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtassistant-index.html&quot;&gt;Qt助手手册》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96485953fffbb5b7190077868fd5884bb7139bfb" translate="yes" xml:space="preserve">
          <source>When using Qt Quick 3D with OpenGL it is necessary to take extra steps to define what kind of &lt;a href=&quot;qsurfaceformat&quot;&gt;surface format&lt;/a&gt; is used when initializing Qt Quick. This is because by the time Qt Quick is aware that 3D content is being used, the OpenGL context and window surface has already been initialized. So this helper class is provided to request the ideal surface format from Qt Quick 3D so that it can be set as the default surface for Qt Quick before initialization.</source>
          <target state="translated">当将Qt Quick 3D与OpenGL一起使用时，有必要采取额外的步骤来定义初始化Qt Quick时使用的&lt;a href=&quot;qsurfaceformat&quot;&gt;表面格式&lt;/a&gt;。这是因为，当Qt Quick意识到正在使用3D内容时，OpenGL上下文和窗口表面已经被初始化。因此，提供了此帮助程序类以从Qt Quick 3D请求理想的表面格式，以便可以在初始化之前将其设置为Qt Quick的默认表面。</target>
        </trans-unit>
        <trans-unit id="18dc1be3da1b58f61947b20badaafabb7fb35324" translate="yes" xml:space="preserve">
          <source>When using Qt Virtual Keyboard in a &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; on a touch device, it is necessary to set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_AcceptTouchEvents&lt;/a&gt; attribute via &lt;a href=&quot;qwidget#setAttribute&quot;&gt;QWidget::setAttribute&lt;/a&gt;(). Without this attribute set, events from a touch device will be converted into synthesized mouse events.</source>
          <target state="translated">在触摸设备上的&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget中&lt;/a&gt;使用Qt虚拟键盘时，必须通过&lt;a href=&quot;qwidget#setAttribute&quot;&gt;QWidget :: setAttribute&lt;/a&gt;（）设置&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_AcceptTouchEvents&lt;/a&gt;属性。如果未设置此属性，则来自触摸设备的事件将转换为合成的鼠标事件。</target>
        </trans-unit>
        <trans-unit id="9bb69ac7d44bcdb70b16a6a8c3dec221adfbb779" translate="yes" xml:space="preserve">
          <source>When using QtConcurrent::filteredReduced() or QtConcurrent::blockingFilteredReduced(), you can mix the use of normal functions, member functions and lambda expressions freely.</source>
          <target state="translated">当使用QtConcurrent::filteredReduced()或QtConcurrent::blockingFilteredReduced()时,可以自由混合使用普通函数、成员函数和lambda表达式。</target>
        </trans-unit>
        <trans-unit id="a1c254e1d734f7df6f457b7084886f659ba24ae2" translate="yes" xml:space="preserve">
          <source>When using QtConcurrent::mappedReduced() or QtConcurrent::blockingMappedReduced(), you can mix the use of normal functions, member functions and lambda expressions freely.</source>
          <target state="translated">当使用QtConcurrent::mappedReduced()或QtConcurrent::blockingMappedReduced()时,可以自由混合使用普通函数、成员函数和lambda表达式。</target>
        </trans-unit>
        <trans-unit id="59ae4dd2c93a30c9950ccf14f13424ea63eff467" translate="yes" xml:space="preserve">
          <source>When using RAII instead:</source>
          <target state="translated">当使用RAII代替时:</target>
        </trans-unit>
        <trans-unit id="f80391d56bd8dbe1d1d5d1ff4b40d280c7727957" translate="yes" xml:space="preserve">
          <source>When using Scene3D with Scene3DViews the following conditions are expected:</source>
          <target state="translated">当使用Scene3D与Scene3DViews时,预计会出现以下情况。</target>
        </trans-unit>
        <trans-unit id="e422bafae46d9dd9ccf967b028eb5668db1686e3" translate="yes" xml:space="preserve">
          <source>When using Shape, it is important to be aware of potential performance implications:</source>
          <target state="translated">在使用Shape时,必须注意潜在的性能影响。</target>
        </trans-unit>
        <trans-unit id="0c9b345b7b1fc2466da60489483904127a5bf06c" translate="yes" xml:space="preserve">
          <source>When using Vulkan, a QQuickWindow is automatically associated with a &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; that is created and managed internally by the scene graph. This way most applications do not need to worry about having a &lt;code&gt;VkInstance&lt;/code&gt; available since it all happens automatically. In advanced cases an application may wish to create its own &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;, in order to configure it in a specific way. That is possible as well. Calling &lt;a href=&quot;qwindow#setVulkanInstance&quot;&gt;setVulkanInstance()&lt;/a&gt; on the QQuickWindow right after construction, before making it visible, leads to using the application-supplied &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; (and the underlying &lt;code&gt;VkInstance&lt;/code&gt;). When redirecting via &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, there is no &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; provided automatically, but rather the application is expected to provide its own and associate it with the QQuickWindow.</source>
          <target state="translated">使用Vulkan时，QQuickWindow会自动与由场景图在内部创建和管理的&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;关联。这样，大多数应用程序都不必担心 &lt;code&gt;VkInstance&lt;/code&gt; 可用，因为它会自动发生。在高级情况下，应用程序可能希望创建自己的&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;，以便以特定方式对其进行配置。这也是可能的。在构造之后立即在QQuickWindow上调用&lt;a href=&quot;qwindow#setVulkanInstance&quot;&gt;setVulkanInstance（）&lt;/a&gt;，然后使其可见，从而导致使用应用程序提供的&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;（和基础 &lt;code&gt;VkInstance&lt;/code&gt; ）。通过&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;重定向时，没有&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance是&lt;/a&gt;自动提供的，但是应该由应用程序提供它自己的并将其与QQuickWindow关联。</target>
        </trans-unit>
        <trans-unit id="a851e0e65e59f989e18111dd9dfcb0d6119a5f48" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; with standard buttons, this function returns a &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;StandardButton&lt;/a&gt; value indicating the standard button that was clicked. When using &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; with custom buttons, this function returns an opaque value; use &lt;a href=&quot;qmessagebox#clickedButton&quot;&gt;clickedButton&lt;/a&gt;() to determine which button was clicked.</source>
          <target state="translated">当使用带有标准按钮的&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;时，此函数返回一个&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;StandardButton&lt;/a&gt;值，该值指示单击的标准按钮。当使用带有自定义按钮的&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;时，此函数返回一个不透明的值。使用&lt;a href=&quot;qmessagebox#clickedButton&quot;&gt;clickedButton&lt;/a&gt;（）确定单击了哪个按钮。</target>
        </trans-unit>
        <trans-unit id="30651043e9ed73a939b318e30f3870f1b9b5bc98" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt;, the associated easing curve will be used to control the progress of the interpolation between startValue and endValue:</source>
          <target state="translated">使用&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation时&lt;/a&gt;，关联的缓动曲线将用于控制startValue和endValue之间插值的进度：</target>
        </trans-unit>
        <trans-unit id="5a31447cc9a9078502d4a9e972623e7f14cea339" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to render a Qt Quick user interface to an OpenGL surface, the &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt; type is not rendered correctly. The web engine view attempts to use a global OpenGL context created by &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt;, but there is no public API for accessing that context in order to share it with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; context.</source>
          <target state="translated">使用&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;将Qt Quick用户界面呈现到OpenGL表面时，&lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt;类型无法正确呈现。Web引擎视图尝试使用&lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine :: initialize&lt;/a&gt;创建的全局OpenGL上下文，但是没有公共API可以访问该上下文以便与 &lt;code&gt;QQuickRenderControl&lt;/code&gt; 上下文共享。</target>
        </trans-unit>
        <trans-unit id="0a571dc6486203daf8731422c32ede8be4dfec57" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to render a Qt Quick user interface to an OpenGL surface, the WebEngineView type is not rendered correctly. The web engine view attempts to use a global OpenGL context created by &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt;, but there is no public API for accessing that context in order to share it with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; context.</source>
          <target state="translated">使用&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;将Qt Quick用户界面呈现到OpenGL表面时，WebEngineView类型无法正确呈现。Web引擎视图尝试使用&lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine :: initialize&lt;/a&gt;创建的全局OpenGL上下文，但是没有公共API可以访问该上下文以便与 &lt;code&gt;QQuickRenderControl&lt;/code&gt; 上下文共享。</target>
        </trans-unit>
        <trans-unit id="60e200581fc9c0dbc0f625c7881a7ac6d7e373bc" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; does not have to be shown or even created at all. This means there will not be an underlying native window for it. Instead, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance is associated with the render control, using the overload of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; constructor, and an OpenGL framebuffer object by calling &lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow::setRenderTarget&lt;/a&gt;().</source>
          <target state="translated">使用&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl时&lt;/a&gt;，&lt;a href=&quot;qquickwindow&quot;&gt;根本&lt;/a&gt;不必显示甚至创建QQuickWindow。这意味着将没有底层的本机窗口。而是使用&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;构造函数的重载将&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;实例与渲染控件关联，并通过调用&lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow :: setRenderTarget&lt;/a&gt;（）将其与OpenGL帧缓冲区对象关联。</target>
        </trans-unit>
        <trans-unit id="9c0f7af3daf2a24d712370fbb31d193c69bdb078" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, its indexes have their own internal pointer. It is not advisable to access this internal pointer outside of the model. Use the &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;() function instead.</source>
          <target state="translated">使用&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel时&lt;/a&gt;，其索引具有自己的内部指针。建议不要在模型外部访问此内部指针。使用&lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;（）函数代替。</target>
        </trans-unit>
        <trans-unit id="3253f7be2be37eee03bfba036af9e50c1f08039e" translate="yes" xml:space="preserve">
          <source>When using a QQuickRenderControl, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; does not have to be shown or even created at all. This means there will not be an underlying native window for it. Instead, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance is associated with the render control, using the overload of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; constructor, and a texture or image object specified via &lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow::setRenderTarget&lt;/a&gt;().</source>
          <target state="translated">使用QQuickRenderControl时，&lt;a href=&quot;qquickwindow&quot;&gt;根本&lt;/a&gt;不需要显示甚至创建QQuickWindow。这意味着将没有底层的本机窗口。而是使用&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;构造函数的重载以及通过&lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow :: setRenderTarget&lt;/a&gt;（）指定的纹理或图像对象，将&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;实例与呈现控件关联。</target>
        </trans-unit>
        <trans-unit id="a88d7821b71c83767d5c98f6683690b451dd882b" translate="yes" xml:space="preserve">
          <source>When using a QQuickRenderControl, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; does not have to be shown or even created at all. This means there will not be an underlying native window for it. Instead, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance is associated with the render control, using the overload of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; constructor, and an OpenGL framebuffer object by calling &lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow::setRenderTarget&lt;/a&gt;().</source>
          <target state="translated">使用QQuickRenderControl时，&lt;a href=&quot;qquickwindow&quot;&gt;根本&lt;/a&gt;不需要显示甚至创建QQuickWindow。这意味着将没有底层的本机窗口。而是使用&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;构造函数的重载将&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;实例与渲染控件关联，并通过调用&lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow :: setRenderTarget&lt;/a&gt;（）将其与OpenGL帧缓冲区对象关联。</target>
        </trans-unit>
        <trans-unit id="cd633ea15d629a0822189477ace7c2e694f5b907" translate="yes" xml:space="preserve">
          <source>When using a camera, there are several times when some form of feedback to the user is given - for example, when an image is taken, or when recording is started. You can enable or disable some of this feedback, or adjust what sound might be played for these actions.</source>
          <target state="translated">在使用摄像机时,有时会向用户提供某种形式的反馈,例如,在拍摄图像或开始录制时。您可以启用或禁用其中的一些反馈,或调整这些操作时可能播放的声音。</target>
        </trans-unit>
        <trans-unit id="57ef1cc43a22d3ee9d7ad2ec71b8d3288bb14e4d" translate="yes" xml:space="preserve">
          <source>When using a generator the data will be loaded asynchronously in a job. The loaded data can be read back if the &lt;a href=&quot;qt3drender-qbuffer#syncData-prop&quot;&gt;QBuffer::syncData&lt;/a&gt; flag is set to true.</source>
          <target state="translated">使用生成器时，数据将异步加载到作业中。如果&lt;a href=&quot;qt3drender-qbuffer#syncData-prop&quot;&gt;QBuffer :: syncData&lt;/a&gt;标志设置为true，则可以读取加载的数据。</target>
        </trans-unit>
        <trans-unit id="4a99ea3d9c74b7bdbe4f19c498b2969932d3fbb5" translate="yes" xml:space="preserve">
          <source>When using a link-local or site-local address for IPv6 connections, you must specify the scope ID. The scope ID for a link-local address is usually the same as the interface name (e.g., &quot;eth0&quot;, &quot;en1&quot;) or number (e.g., &quot;1&quot;, &quot;2&quot;).</source>
          <target state="translated">当使用链接本地地址或站点本地地址进行IPv6连接时,必须指定作用域ID。链接本地地址的作用域ID通常与接口名称(如 &quot;eth0&quot;、&quot;en1&quot;)或编号(如 &quot;1&quot;、&quot;2&quot;)相同。</target>
        </trans-unit>
        <trans-unit id="a7f5a0c47b510324b9693fda936ac9e1340194e1" translate="yes" xml:space="preserve">
          <source>When using a local connection, a unique name must be used. For tcp connections, a unique address and port number combination much be used.</source>
          <target state="translated">当使用本地连接时,必须使用一个唯一的名称,对于tcp连接,必须使用唯一的地址和端口号组合。对于tcp连接,必须使用唯一的地址和端口号组合。</target>
        </trans-unit>
        <trans-unit id="c2f9377446ae02ec808861ff5dcc31b378366901" translate="yes" xml:space="preserve">
          <source>When using a non-attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;, the following must be done manually:</source>
          <target state="translated">使用非附加的&lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar时&lt;/a&gt;，必须手动执行以下操作：</target>
        </trans-unit>
        <trans-unit id="6da62cb45d6ee1b90ef5d92ea4bb2964d3440f6e" translate="yes" xml:space="preserve">
          <source>When using a non-attached ScrollBar, the following must be done manually:</source>
          <target state="translated">当使用非附加的滚动条时,必须手动完成以下操作。</target>
        </trans-unit>
        <trans-unit id="54441c60f964e66b066ac92b3af3ac7719c4b710" translate="yes" xml:space="preserve">
          <source>When using a scroll area to display the contents of a custom widget, it is important to ensure that the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;size hint&lt;/a&gt; of the child widget is set to a suitable value. If a standard &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is used for the child widget, it may be necessary to call &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget::setMinimumSize&lt;/a&gt;() to ensure that the contents of the widget are shown correctly within the scroll area.</source>
          <target state="translated">使用滚动区域显示自定义窗口小部件的内容时，重要的是确保将子窗口小部件的&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;大小提示&lt;/a&gt;设置为合适的值。如果将标准&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;用于子窗口小部件，则可能有必要调用&lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget :: setMinimumSize&lt;/a&gt;（）以确保在滚动区域内正确显示窗口小部件的内容。</target>
        </trans-unit>
        <trans-unit id="7bc88faa885d5cad5c7f827526a87ebbbef568f0" translate="yes" xml:space="preserve">
          <source>When using a scroll area to display the contents of a custom widget, it is important to ensure that the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;size hint&lt;/a&gt; of the child widget is set to a suitable value. If a standard &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; is used for the child widget, it may be necessary to call &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget::setMinimumSize&lt;/a&gt;() to ensure that the contents of the widget are shown correctly within the scroll area.</source>
          <target state="translated">使用滚动区域显示自定义窗口小部件的内容时，重要的是确保将子窗口小部件的&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;大小提示&lt;/a&gt;设置为合适的值。如果将标准&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;用于子窗口小部件，则可能有必要调用&lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget :: setMinimumSize&lt;/a&gt;（）以确保在滚动区域内正确显示窗口小部件的内容。</target>
        </trans-unit>
        <trans-unit id="237a8500ee38265470768b77eb9c5ecf303eea63" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">当使用&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;抗锯齿&lt;/a&gt;画笔时，&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;的边界线将在数学矩形边界线的两侧对称地渲染。但是，当使用别名画家（默认设置）时，其他规则也适用。</target>
        </trans-unit>
        <trans-unit id="f114b9cf2bdf5128d5944856498efe44e97fd95c" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">当使用&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;抗锯齿&lt;/a&gt;画笔时，&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;的边界线将在数学矩形边界线的两侧对称地渲染。但是，当使用别名画家（默认设置）时，其他规则也适用。</target>
        </trans-unit>
        <trans-unit id="329d3637523def7a6d1c7ee9fe4ece6f4bdc8c4b" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a QRect will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">使用&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;抗锯齿&lt;/a&gt;画笔时，QRect的边界线将在数学矩形边界线的两侧对称地渲染。但是，当使用别名画家（默认设置）时，其他规则也适用。</target>
        </trans-unit>
        <trans-unit id="cccfc9b262e50cc0b347cae5b9d8220cd04d8f64" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a QRectF will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">使用&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;抗锯齿&lt;/a&gt;画笔时，QRectF的边界线将在数学矩形边界线的两侧对称地渲染。但是，当使用别名画家（默认设置）时，其他规则也适用。</target>
        </trans-unit>
        <trans-unit id="8f28cb22408509ba937d73e207cf823f044e3c30" translate="yes" xml:space="preserve">
          <source>When using enum classes, there can be multiple enums using the same identifiers. The unscoped registration will be overwriten by the last registered enum. For classes that contain such name conficts it is possible to disable the unscoped registration by annotating your class with a special &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; macro. Use the name &lt;code&gt;RegisterEnumClassesUnscoped&lt;/code&gt; with the value &lt;code&gt;false&lt;/code&gt; to prevent scoped enums from being merged into the same name space.</source>
          <target state="translated">使用枚举类时，可以有多个使用相同标识符的枚举。未注册的注册将被最后注册的枚举覆盖。对于包含此类名称冲突的类，可以通过使用特殊的&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;宏注释类来禁用无范围的注册。将名称 &lt;code&gt;RegisterEnumClassesUnscoped&lt;/code&gt; 与 &lt;code&gt;false&lt;/code&gt; 一起使用，以防止将作用域枚举合并到相同的名称空间中。</target>
        </trans-unit>
        <trans-unit id="b3126c9de4f125026d9844406caca004b124783e" translate="yes" xml:space="preserve">
          <source>When using files with relative paths, the path should be relative to the file where &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; is executed.</source>
          <target state="translated">当使用具有相对路径的文件时，该路径应相对于执行&lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent（）&lt;/a&gt;的文件。</target>
        </trans-unit>
        <trans-unit id="05136cc2fa83900ae89c6a84b5c5f5b066eb03d6" translate="yes" xml:space="preserve">
          <source>When using minimum and maximum extents, these are considered to be the opposite corners of an axis aligned bounding box, in the geometry's local coordinate system.</source>
          <target state="translated">当使用最小和最大外延时,在几何体的局部坐标系中,这些被认为是轴线对齐的边界框的相反角。</target>
        </trans-unit>
        <trans-unit id="f5f60225ff679f2aec3bcaa7f21687a9cdf848c4" translate="yes" xml:space="preserve">
          <source>When using models that have multiple named roles, &lt;a href=&quot;qml-qtquick-controls2-combobox&quot;&gt;ComboBox&lt;/a&gt; must be configured to use a specific &lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;text role&lt;/a&gt; for its &lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;display text&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; instances.</source>
          <target state="translated">使用具有多个命名角色的模型时，必须将&lt;a href=&quot;qml-qtquick-controls2-combobox&quot;&gt;ComboBox&lt;/a&gt;配置为对其&lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;显示文本&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;委托&lt;/a&gt;实例使用特定的&lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;文本角色&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9d8a722032ee00831331d0ac92b8b27597b4afb" translate="yes" xml:space="preserve">
          <source>When using models that have multiple named roles, ComboBox must be configured to use a specific &lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;text role&lt;/a&gt; for its &lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;display text&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; instances. If you want to use a role of the model item that corresponds to the text role, set &lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRole&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;currentValue&lt;/a&gt; property and &lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue()&lt;/a&gt; method can then be used to get information about those values.</source>
          <target state="translated">使用具有多个命名角色的模型时，必须将ComboBox配置为对其&lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;显示文本&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;委托&lt;/a&gt;实例使用特定的&lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;文本角色&lt;/a&gt;。如果要使用与文本角色相对应的模型项的角色，请设置&lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRole&lt;/a&gt;。的&lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;CurrentValue的&lt;/a&gt;属性和&lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue（）&lt;/a&gt;方法然后可以用于获取关于这些值的信息。</target>
        </trans-unit>
        <trans-unit id="592ced4892c306ac3db6fd37ad0058a8f5ee66f8" translate="yes" xml:space="preserve">
          <source>When using models that have multiple named roles, ComboBox must be configured to use a specific &lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;text role&lt;/a&gt; for its &lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;display text&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; instances. If you want to use a role of the model item that corresponds to the text role, set &lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRole&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;currentValue&lt;/a&gt; property and &lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue()&lt;/a&gt; method can then be used to get information about those values.</source>
          <target state="translated">使用具有多个命名角色的模型时，必须将ComboBox配置为对其&lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;显示文本&lt;/a&gt;和&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;委托&lt;/a&gt;实例使用特定的&lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;文本角色&lt;/a&gt;。如果要使用与文本角色相对应的模型项的角色，请设置&lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRole&lt;/a&gt;。的&lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;CurrentValue的&lt;/a&gt;属性和&lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue（）&lt;/a&gt;方法然后可以用于获取关于这些值的信息。</target>
        </trans-unit>
        <trans-unit id="84026de8d0a3f70ccf99a3d61c901fae1dc693fe" translate="yes" xml:space="preserve">
          <source>When using more than one parameter, or when an argument contains whitespace, enclose each argument in braces:</source>
          <target state="translated">当使用一个以上的参数时,或者当一个参数包含空格时,请将每个参数用括号括起来。</target>
        </trans-unit>
        <trans-unit id="63464950e02567c5f6896365686d6ecf23afb027" translate="yes" xml:space="preserve">
          <source>When using multiple containers, such as &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;, together, their &lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; properties can be bound to each other to keep them in sync. When the user interacts with either container, its current index changes automatically propagate to the other container.</source>
          <target state="translated">当一起使用多个容器（例如&lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;）时，它们的&lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;属性可以相互绑定以保持它们同步。当用户与其中一个容器进行交互时，其当前索引更改将自动传播到另一个容器。</target>
        </trans-unit>
        <trans-unit id="c02b1287c2c05e3b9d628e626b4034e4caa62387" translate="yes" xml:space="preserve">
          <source>When using multiple containers, such as &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;, together, their &lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; properties can be bound to each other to keep them in sync. When the user interacts with either container, its current index changes automatically propagate to the other container.</source>
          <target state="translated">当一起使用多个容器（例如&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;）时，它们的&lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;属性可以相互绑定以保持它们同步。当用户与其中一个容器进行交互时，其当前索引更改将自动传播到另一个容器。</target>
        </trans-unit>
        <trans-unit id="ca9be1c0704ec7f9de07358b36382bb3fde46554" translate="yes" xml:space="preserve">
          <source>When using multiple subviewports in the FrameGraph, NoPicking can be useful to prevent picking conflicts between overlapping viewports or non visual ones. It can also be used as an optimization to prevent unnecessary work for hidden viewports or for sections of the scenes which don't require any picking.</source>
          <target state="translated">当在FrameGraph中使用多个子视口时,NoPicking可以有用地防止重叠视口或非可视视口之间的选取冲突。它也可以作为一种优化,以防止为隐藏的视口或不需要任何选取的场景部分进行不必要的工作。</target>
        </trans-unit>
        <trans-unit id="4ba136a12eb6326be4975550c6ccf182f6dc733c" translate="yes" xml:space="preserve">
          <source>When using multiple subviewports in the FrameGraph, QNoPicking can be useful to prevent picking conflicts between overlapping viewports or non visual ones. It can also be used as an optimization to prevent unnecessary work for hidden viewports or for sections of the scenes which don't require any picking.</source>
          <target state="translated">当在FrameGraph中使用多个子视口时,QNoPicking可以用来防止重叠视口或非可视视口之间的选取冲突。它也可以作为一种优化,以防止为隐藏的视口或不需要任何选取的场景部分进行不必要的工作。</target>
        </trans-unit>
        <trans-unit id="641175720b4c0c2ab3449cc419129333b3bfdd72" translate="yes" xml:space="preserve">
          <source>When using one of the default names, you can call this function in &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; to get the localized string.</source>
          <target state="translated">使用默认名称之一时，可以在&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface中&lt;/a&gt;调用此函数以获取本地化的字符串。</target>
        </trans-unit>
        <trans-unit id="f1d4042297fd9e70e9779d429f6a3c3de84a9661" translate="yes" xml:space="preserve">
          <source>When using qmake to build just the Qt WebEngine module, the following command can be used (in this example, the Qt WebEngine source code is located in &lt;code&gt;C:\qt\qtwebengine&lt;/code&gt;):</source>
          <target state="translated">当使用qmake仅构建Qt WebEngine模块时，可以使用以下命令（在此示例中，Qt WebEngine源代码位于 &lt;code&gt;C:\qt\qtwebengine&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="eed4f78c25ca0fa8144d6414eb478fa129284fb5" translate="yes" xml:space="preserve">
          <source>When using signals and slots with multiple threads, see &lt;a href=&quot;threads-qobject#signals-and-slots-across-threads&quot;&gt;Signals and Slots Across Threads&lt;/a&gt;.</source>
          <target state="translated">当使用具有多个线程的&lt;a href=&quot;threads-qobject#signals-and-slots-across-threads&quot;&gt;信号和插槽时&lt;/a&gt;，请参阅跨线程的信号和插槽。</target>
        </trans-unit>
        <trans-unit id="e7ad568fc4f11eefe9c8b40e9b450dc9cb930b9a" translate="yes" xml:space="preserve">
          <source>When using style sheets, every widget is treated as a box with four concentric rectangles: the margin rectangle, the border rectangle, the padding rectangle, and the content rectangle. The box model describes this in further detail.</source>
          <target state="translated">当使用样式表时,每一个widget都被当作一个有四个同心矩形的盒子:margin矩形、border矩形、padding矩形和content矩形。箱子模型对此进行了进一步的详细描述。</target>
        </trans-unit>
        <trans-unit id="16c96094aa814c7a1c7563b4a9f7232f4480180a" translate="yes" xml:space="preserve">
          <source>When using the &quot;IJW&quot; method, in principle the only limitation is the time required to write the wrapper classes and data type conversion functions.</source>
          <target state="translated">当使用 &quot;IJW &quot;方法时,原则上唯一的限制是编写封装类和数据类型转换函数所需的时间。</target>
        </trans-unit>
        <trans-unit id="5d54c37317bd3e6ec2902ccadabbc8a4e682a663" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine Widgets Module&lt;/a&gt;, &lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage::acceptNavigationRequest&lt;/a&gt;() offers further options to accept or block requests.</source>
          <target state="translated">使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine窗口小部件模块时&lt;/a&gt;，&lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage :: acceptNavigationRequest&lt;/a&gt;（）提供更多选项来接受或阻止请求。</target>
        </trans-unit>
        <trans-unit id="754ebecc3841708d8e573d2b2f6eedc39b9c8a36" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine Widgets Module&lt;/a&gt;, &lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage::acceptNavigationRequest&lt;/a&gt;() offers further options to accept or block requests.</source>
          <target state="translated">使用&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine窗口小部件模块时&lt;/a&gt;，&lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage :: acceptNavigationRequest&lt;/a&gt;（）提供更多选项来接受或阻止请求。</target>
        </trans-unit>
        <trans-unit id="6fb6ab57911172363d9a639cf841213adb489aa0" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;qml-qtquick3d-view3d#renderMode-prop&quot;&gt;Overlay&lt;/a&gt; mode the 3D scene is directly rendered to the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; containing the &lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;. Rendering occurs as a result of the signal &lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;QQuickWindow::afterRenderPassRecording&lt;/a&gt;() which means that the 3D content will be rendered on top of all other Qt Quick content.</source>
          <target state="translated">使用&amp;ldquo;&lt;a href=&quot;qml-qtquick3d-view3d#renderMode-prop&quot;&gt;覆盖&amp;rdquo;&lt;/a&gt;模式时，&lt;a href=&quot;qquickwindow&quot;&gt;会将&lt;/a&gt;3D场景直接渲染到包含&lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;的QQuickWindow中。渲染是由于信号&lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;QQuickWindow :: afterRenderPassRecording&lt;/a&gt;（）的结果而发生的，这意味着3D内容将被渲染在所有其他Qt Quick内容之上。</target>
        </trans-unit>
        <trans-unit id="0cc560cbad4fa2abdd3851fcc3a031341158f832" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;qml-qtquick3d-view3d#renderMode-prop&quot;&gt;Underlay&lt;/a&gt; mode the 3D scene is directly rendered to the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; containing the &lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;. Rendering occurs as a result of the signal &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;QQuickWindow::beforeRenderPassRecording&lt;/a&gt;() which means that everything else in Qt Quick will be rendered on top of the 3D content.</source>
          <target state="translated">使用&lt;a href=&quot;qml-qtquick3d-view3d#renderMode-prop&quot;&gt;Underlay&lt;/a&gt;模式时，&lt;a href=&quot;qquickwindow&quot;&gt;会将&lt;/a&gt;3D场景直接渲染到包含&lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;的QQuickWindow中。渲染是由于信号&lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;QQuickWindow :: beforeRenderPassRecording&lt;/a&gt;（）导致的，这意味着Qt Quick中的所有其他内容都将在3D内容之上进行渲染。</target>
        </trans-unit>
        <trans-unit id="8ef195bdee4cf1c4a71bf9effed3c312e0927143" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;QtQuick&lt;/code&gt; module, you will need to know how to write QML applications using the QML language. In particular, QML Basics and QML Essentials from the &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; page.</source>
          <target state="translated">使用 &lt;code&gt;QtQuick&lt;/code&gt; 模块时，您将需要知道如何使用QML语言编写QML应用程序。特别是，&amp;ldquo; &lt;a href=&quot;qmlapplications&quot;&gt;QML应用程序&amp;rdquo;&lt;/a&gt;页面中的QML基础知识和QML基本知识。</target>
        </trans-unit>
        <trans-unit id="9dec366696ef07cbdd46b7724c483ed995ac86b0" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;lib&lt;/code&gt; template, the following options can be added to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable to determine the type of library that is built:</source>
          <target state="translated">使用 &lt;code&gt;lib&lt;/code&gt; 模板时，可以将以下选项添加到&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt;变量中，以确定所构建的库的类型：</target>
        </trans-unit>
        <trans-unit id="d153de69dddd03efc877a5be750870814c8a62b4" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;qt6_add_shaders&lt;/code&gt; function, the &lt;a href=&quot;qtshadertools-qsb&quot;&gt;qsb&lt;/a&gt; tool will get invokved automatically by the build system, and the resulting &lt;code&gt;.qsb&lt;/code&gt; files get added to the resource system implicitly.</source>
          <target state="translated">使用 &lt;code&gt;qt6_add_shaders&lt;/code&gt; 函数时，构建系统将自动&lt;a href=&quot;qtshadertools-qsb&quot;&gt;调用qsb&lt;/a&gt;工具，并且将生成的 &lt;code&gt;.qsb&lt;/code&gt; 文件隐式添加到资源系统中。</target>
        </trans-unit>
        <trans-unit id="1accbb909d9654643b1007c4b005eaf944aacb54" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;subdirs&lt;/code&gt; template, this option specifies that the directories listed should be processed in the order in which they are given.</source>
          <target state="translated">使用 &lt;code&gt;subdirs&lt;/code&gt; 模板时，此选项指定应按给出的顺序处理列出的目录。</target>
        </trans-unit>
        <trans-unit id="9302e4403ba3d658ded6f72d8e2eb9b0d3b0d85a" translate="yes" xml:space="preserve">
          <source>When using the OpenGL adaptation, the returned texture will be using &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; as texture target and &lt;code&gt;GL_RGBA&lt;/code&gt; as internal format. Reimplement &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; to create textures with different parameters.</source>
          <target state="translated">使用OpenGL适应时，返回的纹理将使用 &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; 作为纹理目标，并使用 &lt;code&gt;GL_RGBA&lt;/code&gt; 作为内部格式。重新实现&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;以创建具有不同参数的纹理。</target>
        </trans-unit>
        <trans-unit id="5f5b2c24ae4c28b1f7b4b66c98b3d23e3e684245" translate="yes" xml:space="preserve">
          <source>When using the Qt Purchasing API in QML, the application should instantiate one Store and then instantiate products as children of this store. The products created as children of the Store object will automatically be queried from the external market place if one is available on the current platform.</source>
          <target state="translated">在QML中使用Qt采购API时,应用程序应该实例化一个Store,然后将产品实例化为这个Store的子对象。作为Store对象的子对象创建的产品将自动从外部市场中查询,如果当前平台上有可用的产品。</target>
        </trans-unit>
        <trans-unit id="f6f72840bfb0e735f7adfc573a48c8e922aaa4b7" translate="yes" xml:space="preserve">
          <source>When using the Qt Quick Timeline there are no code changes required when porting to Qt 6.</source>
          <target state="translated">当使用Qt Quick Timeline时,移植到Qt 6时不需要修改代码。</target>
        </trans-unit>
        <trans-unit id="fd10ad4c60e4d2d39aa84088b49311a2cd15a737" translate="yes" xml:space="preserve">
          <source>When using the RHI, the signal is emitted after scene graph has added its commands to the command buffer, which is not yet submitted to the graphics queue. If desired, the slot function connected to this signal can query native resources, like the command buffer, before via &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. Note however that the render pass (or passes) are already recorded at this point and it is not possible to add more commands within the scenegraph's pass. Instead, use &lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;() for that. This signal has therefore limited use and is rarely needed in an RHI-based setup. Rather, it is the combination of &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;() + &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;() + &lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;() that is typically used to achieve under- or overlaying of the custom rendering.</source>
          <target state="translated">使用RHI时，场景图将其命令添加到命令缓冲区（尚未提交到图形队列）后，将发出信号。如果需要，连接到该信号的插槽功能可以在通过&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;之前查询本机资源，例如命令缓冲区。但是请注意，渲染通行证（或多个通行证）此时已被记录，并且无法在场景图形的通行证中添加更多命令。而是使用&lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;（）。因此，该信号的使用受到限制，并且在基于RHI的设置中几乎不需要。相反，它是&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;（）+ &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;（）或&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;（）+的组合&lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;（）通常用于实现自定义渲染的不足或重叠。</target>
        </trans-unit>
        <trans-unit id="25e692c03b3d10cf511b4d19105847b9627e4f18" translate="yes" xml:space="preserve">
          <source>When using the RHI, the signal is emitted after the preparations for the frame have been done, meaning there is a command buffer in recording mode, where applicable. If desired, the slot function connected to this signal can query native resources like the command before via &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. Note however that the recording of the main render pass is not yet started at this point and it is not possible to add commands within that pass. Starting a pass means clearing the color, depth, and stencil buffers so it is not possible to achieve an underlay type of rendering by just connecting to this signal. Rather, connect to &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;(). However, connecting to this signal is still important if the recording of copy type of commands is desired since those cannot be enqueued within a render pass.</source>
          <target state="translated">使用RHI时，在准备好帧之后会发出信号，这意味着在记录模式下有一个命令缓冲区（如果适用）。如果需要，连接到该信号的插槽功能可以像之前通过&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;一样查询本机资源。但是请注意，此时尚未开始记录主要渲染过程，因此无法在该过程中添加命令。开始通过意味着清除颜色，深度和模板缓冲区，因此仅通过连接到该信号就无法实现底层类型的渲染。而是连接到&lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;（）。但是，如果需要记录命令的复制类型，则连接到该信号仍然很重要，因为这些命令无法在渲染过程中排队。</target>
        </trans-unit>
        <trans-unit id="c520b2944e06b29e0ffe182f18017f3df7a8cce9" translate="yes" xml:space="preserve">
          <source>When using the SAP HANA database, the connection has to be established using the option &quot;SCROLLABLERESULT=TRUE&quot;, as the HANA ODBC driver does not provide scrollable results by default, e.g.:</source>
          <target state="translated">当使用SAP HANA数据库时,必须使用 &quot;SCROLLABLERESULT=TRUE &quot;选项建立连接,因为HANA ODBC驱动程序默认不提供可滚动的结果,例如。</target>
        </trans-unit>
        <trans-unit id="f6512b3be0d117dfa21e663e8a3f57fcd47481b4" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;用于语言环境布局时，网格定位器的可视布局方向将被镜像。但是，属性&lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;将保持不变。</target>
        </trans-unit>
        <trans-unit id="ad819fcb35bbe53948b4887616213f681fcff7f9" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-grid#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;用于语言环境布局时，网格定位器的可视布局方向将被镜像。但是，属性&lt;a href=&quot;qml-qtquick-grid#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;将保持不变。</target>
        </trans-unit>
        <trans-unit id="f834cbf23f423046bd6a4e706aba1ff65a30a170" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-gridview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;用于语言环境布局时，网格的可视布局方向将被镜像。但是，属性&lt;a href=&quot;qml-qtquick-gridview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;将保持不变。</target>
        </trans-unit>
        <trans-unit id="f36c0ab165b9200f9ec8aa1357d728964f40f2cc" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the horizontal list will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-listview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;用于语言环境布局时，水平列表的可视布局方向将被镜像。但是，属性&lt;a href=&quot;qml-qtquick-listview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;将保持不变。</target>
        </trans-unit>
        <trans-unit id="fb66c1b45ac982beb02c022093529fd3f56e9448" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the row positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-row#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;用于语言环境布局时，行定位器的可视布局方向将被镜像。但是，属性&lt;a href=&quot;qml-qtquick-row#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;将保持不变。</target>
        </trans-unit>
        <trans-unit id="69d87d4ee077dc734724b86f9fa8e15d248506e7" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;来镜像应用程序布局时，文本的水平对齐方式也将被镜像。但是，属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 将保持不变。要查询&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;的有效水平对齐方式，请使用只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d651e972a8b73ac33b7c1d33d8d380ac2eceec38" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;来镜像应用程序布局时，文本的水平对齐方式也将被镜像。但是，属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 将保持不变。要查询&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;的有效水平对齐方式，请使用只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35d324bfc12c5d6ba6efc643a3b1dde7d26fce03" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;来镜像应用程序布局时，文本的水平对齐方式也将被镜像。但是，属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 将保持不变。要查询&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;的有效水平对齐方式，请使用只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2b5e6a5d5f5d78d3c5d95616a1f194fccea4c23" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of Text, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;来镜像应用程序布局时，文本的水平对齐方式也将被镜像。但是，属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 将保持不变。要查询文本的有效水平对齐方式，请使用只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20616dd35d75d11331c9fc082c83b9be05505dab" translate="yes" xml:space="preserve">
          <source>When using the attached property, &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt;, to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">当使用附加属性&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;来镜像应用程序布局时，文本的水平对齐方式也将被镜像。但是，属性 &lt;code&gt;horizontalAlignment&lt;/code&gt; 将保持不变。要查询&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;的有效水平对齐方式，请使用只读属性 &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a3979e0f25e3b5cc70f71695bbc56f938aca359" translate="yes" xml:space="preserve">
          <source>When using the default OpenGL adaptation, it is possible to integrate OpenGL calls directly into the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; using the same OpenGL context as the Qt Quick Scene Graph. This is done by connecting to the &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow::beforeRendering&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow::afterRendering&lt;/a&gt;() signal.</source>
          <target state="translated">使用默认的OpenGL适应时，可以使用与Qt Quick Scene Graph相同的OpenGL上下文将OpenGL调用直接集成到&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow中&lt;/a&gt;。这是通过连接到完成&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow :: beforeRendering&lt;/a&gt;（）或&lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow :: afterRendering&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="97faf04114fa9f9416c91f1c23b496eb6915deef" translate="yes" xml:space="preserve">
          <source>When using the default OpenGL adaptation, it is possible to integrate OpenGL calls directly into the QQuickWindow using the same OpenGL context as the Qt Quick Scene Graph. This is done by connecting to the &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow::beforeRendering&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow::afterRendering&lt;/a&gt;() signal.</source>
          <target state="translated">使用默认的OpenGL适应时，可以使用与Qt Quick Scene Graph相同的OpenGL上下文将OpenGL调用直接集成到QQuickWindow中。这是通过连接到完成&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow :: beforeRendering&lt;/a&gt;（）或&lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow :: afterRendering&lt;/a&gt;（）信号。</target>
        </trans-unit>
        <trans-unit id="34f1d72237c8018c967d74b627ccc1dfb27d0ed2" translate="yes" xml:space="preserve">
          <source>When using the provided matrices, the coordinate system for vertex data follows the usual &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; conventions: top-left is (0, 0), bottom-right is the corresponding &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;'s width() and height() minus one. For example, assuming a two float (x-y) per vertex coordinate layout, a triangle covering half of the item can be specified as (width - 1, height - 1), (0, 0), (0, height - 1) using counter-clockwise direction.</source>
          <target state="translated">使用提供的矩阵时，顶点数据的坐标系遵循通常的&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;约定：左上角是（0，0），右下角是相应的&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;的width（）和height（）减一。例如，假设每个顶点坐标布局有两个浮点（xy），则可以使用以下方式将覆盖项目一半的三角形指定为（width-1，height-1），（0，0），（0，height-1）逆时针方向。</target>
        </trans-unit>
        <trans-unit id="68b907ff756cd93a73b7aa07652187badb219c5e" translate="yes" xml:space="preserve">
          <source>When using the resulting HBITMAP as application icon or a systray icon, the image should have the format &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32&lt;/a&gt;.</source>
          <target state="translated">当使用生成的HBITMAP作为应用程序图标或系统托盘图标时，图像的格式应为&lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage :: Format_ARGB32&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ceb131bc2281e76736822d7b82ae8a5fdb44998" translate="yes" xml:space="preserve">
          <source>When using the resulting HBITMAP for the &lt;code&gt;AlphaBlend()&lt;/code&gt; GDI function, the image should have the format &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32_Premultiplied&lt;/a&gt; (use &lt;a href=&quot;qimage#convertToFormat&quot;&gt;convertToFormat&lt;/a&gt;()).</source>
          <target state="translated">当将所得的HBITMAP用于 &lt;code&gt;AlphaBlend()&lt;/code&gt; GDI函数时，图像应具有&lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage :: Format_ARGB32_Premultiplied&lt;/a&gt;格式（使用&lt;a href=&quot;qimage#convertToFormat&quot;&gt;convertToFormat&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="a0b66cc2a5a4e3c2e1a7db60e140c73cb4965b48" translate="yes" xml:space="preserve">
          <source>When using the same &lt;code&gt;.so&lt;/code&gt; lib file, your application's &lt;code&gt;main()&lt;/code&gt; function is executed two times, one to start the main activity and the second time to start the service. Thus, you have to handle each execution according to the provided argument. One way to acheive that is as follows:</source>
          <target state="translated">当使用相同的 &lt;code&gt;.so&lt;/code&gt; lib文件时，应用程序的 &lt;code&gt;main()&lt;/code&gt; 函数将执行两次，一次是启动主活动，第二次是启动服务。因此，您必须根据提供的参数处理每次执行。实现这一目标的一种方法如下：</target>
        </trans-unit>
        <trans-unit id="9ab3c5753ca173c3d3ab6370d02e203aa5f107b9" translate="yes" xml:space="preserve">
          <source>When using the vcapp template this will put all the source files into the source group and the header files into the header group regardless of what directory they reside in. Turning this option off will group the files within the source/header group depending on the directory they reside. This is turned on by default.</source>
          <target state="translated">当使用vcapp模板时,这将会把所有的源文件放到源组中,而头文件放到头组中,而不考虑它们所在的目录。关闭这个选项,将根据文件所在的目录,将文件归入源文件组/头文件组。默认情况下,这个选项是打开的。</target>
        </trans-unit>
        <trans-unit id="885cb4ce8dcd663d12b984998a03134539d02bc3" translate="yes" xml:space="preserve">
          <source>When using these functions be aware that they return data in &lt;b&gt;column-major&lt;/b&gt; format:</source>
          <target state="translated">使用这些函数时，请注意它们以&lt;b&gt;列主&lt;/b&gt;格式返回数据：</target>
        </trans-unit>
        <trans-unit id="5f1afdca4aa38b214b00a782de3c5aa53f22b470" translate="yes" xml:space="preserve">
          <source>When using this class, be aware of the following platform differences:</source>
          <target state="translated">在使用该类时,要注意以下平台差异。</target>
        </trans-unit>
        <trans-unit id="0eb1d67852478a07e0591b585644fc15d3d64036" translate="yes" xml:space="preserve">
          <source>When using this function, one should not call &lt;code&gt;accept()&lt;/code&gt;.</source>
          <target state="translated">使用此函数时，不应调用 &lt;code&gt;accept()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a04c05a9070969e9eb67d44a8928461707a0a965" translate="yes" xml:space="preserve">
          <source>When using this method, Qt WebEngine assumes that external resources, such as JavaScript programs or style sheets, are encoded in UTF-8 unless otherwise specified. For example, the encoding of an external script can be specified through the &lt;code&gt;charset&lt;/code&gt; attribute of the HTML script tag. Alternatively, the encoding can be specified by the web server.</source>
          <target state="translated">使用此方法时，除非另有说明，否则Qt WebEngine假定外部资源（例如JavaScript程序或样式表）均以UTF-8编码。例如，可以通过HTML脚本标签的 &lt;code&gt;charset&lt;/code&gt; 属性指定外部脚本的编码。或者，可以由Web服务器指定编码。</target>
        </trans-unit>
        <trans-unit id="fdf1b54e645c47e0218c40636ac9436b5bcd1515" translate="yes" xml:space="preserve">
          <source>When using this method, the web engine assumes that external resources, such as JavaScript programs or style sheets, are encoded in UTF-8 unless otherwise specified. For example, the encoding of an external script can be specified through the charset attribute of the HTML script tag. It is also possible for the encoding to be specified by the web server.</source>
          <target state="translated">当使用此方法时,除非另有规定,否则网络引擎会假定外部资源,如JavaScript程序或样式表,是以UTF-8编码的。例如,外部脚本的编码可以通过HTML脚本标签的charset属性来指定。也可以由Web服务器指定编码。</target>
        </trans-unit>
        <trans-unit id="5a2a1ceb612d654821cdebdcfcb18990c549b921" translate="yes" xml:space="preserve">
          <source>When using this plugin, the &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt; objects in the returned route may contain additional extended attributes (see &lt;a href=&quot;qml-qtlocation-routemaneuver#extendedAttributes-prop&quot;&gt;RouteManeuver::extendedAttributes&lt;/a&gt;), where available. These attributes are described in detail in the official &lt;a href=&quot;https://www.mapbox.com/api-documentation/#stepmaneuver-object&quot;&gt;Mapbox direction API documentation&lt;/a&gt;.</source>
          <target state="translated">使用此插件时，返回的路由中的&lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;对象可能包含其他扩展属性（请参见&lt;a href=&quot;qml-qtlocation-routemaneuver#extendedAttributes-prop&quot;&gt;RouteManeuver :: extendedAttributes&lt;/a&gt;）（如果有）。这些属性在&lt;a href=&quot;https://www.mapbox.com/api-documentation/#stepmaneuver-object&quot;&gt;Mapbox&lt;/a&gt;官方API文档中有详细描述。</target>
        </trans-unit>
        <trans-unit id="9f4d4482c71183bdaf1a8256f7c7d2b382d163cc" translate="yes" xml:space="preserve">
          <source>When using this template, the following qmake system variables are recognized. You should use these in your .pro file to specify information about your application. For additional platform-dependent system variables, you could have a look at the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">使用此模板时，将识别以下qmake系统变量。您应该在.pro文件中使用它们来指定有关您的应用程序的信息。对于其他依赖于平台的系统变量，您可以查看&lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8de68a2cf4346e4f75f69795025d7ee380ea618b" translate="yes" xml:space="preserve">
          <source>When using this template, the following qmake system variables are recognized. You should use these in your .pro file to specify information about your application. For additional platform-dependent system variables, you could have a look at the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">使用此模板时，将识别以下qmake系统变量。您应该在.pro文件中使用它们来指定有关您的应用程序的信息。对于其他依赖于平台的系统变量，您可以查看&lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8e8e68b8ce727bee069d21cdb1bf990c4178a5" translate="yes" xml:space="preserve">
          <source>When we communicate with the assistive technologies, we need to describe Qt's user interface in a way that they can understand. Qt applications use &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; to expose information about the individual UI elements. Currently, Qt provides support for its widgets and widget parts, e.g., slider handles, but the interface could also be implemented for any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; if necessary. &lt;a href=&quot;qaccessible&quot;&gt;QAccessible&lt;/a&gt; contains enums that describe the UI. We will examine the enums in the course of this document.</source>
          <target state="translated">与辅助技术进行交流时，我们需要以一种他们能够理解的方式来描述Qt的用户界面。 Qt应用程序使用&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;公开有关各个UI元素的信息。当前，Qt为其小部件和小部件（例如，滑块手柄）提供支持，但是如果需要，也可以为任何&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;实现该接口。&lt;a href=&quot;qaccessible&quot;&gt;QAccessible&lt;/a&gt;包含描述UI的枚举。我们将在本文档中研究枚举。</target>
        </trans-unit>
        <trans-unit id="870d36a92f2ae13647e01707539daa266e80b994" translate="yes" xml:space="preserve">
          <source>When we create a field using &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;(), we pass a unique field name and a widget. We can also provide a Qt property name and a &quot;changed&quot; signal (a signal that is emitted when the property changes) as third and fourth arguments; however, this is not necessary for the most common Qt widgets, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, because &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; knows which properties to look for.</source>
          <target state="translated">当我们使用&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）创建一个字段时，我们传递一个唯一的字段名和一个小部件。我们还可以提供Qt属性名称和&amp;ldquo; changed&amp;rdquo;信号（当属性更改时发出的信号）作为第三和第四自变量。但是，对于最常见的Qt小部件（例如&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;，&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;和&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;）来说，这不是必需的，因为&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;知道要查找的属性。</target>
        </trans-unit>
        <trans-unit id="0ef0b64bff35974267abf786dcf1eda874d19d4b" translate="yes" xml:space="preserve">
          <source>When we create a field using &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;(), we pass a unique field name and a widget. We can also provide a Qt property name and a &quot;changed&quot; signal (a signal that is emitted when the property changes) as third and fourth arguments; however, this is not necessary for the most common Qt widgets, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, because QWizard knows which properties to look for.</source>
          <target state="translated">当我们使用&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）创建一个字段时，我们传递一个唯一的字段名和一个小部件。我们还可以提供Qt属性名称和&amp;ldquo; changed&amp;rdquo;信号（当属性更改时发出的信号）作为第三和第四自变量；但是，对于最常见的Qt小部件（例如&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;，&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;和&lt;a href=&quot;qcombobox&quot;&gt;QComboBox）&lt;/a&gt;而言，这不是必需的，因为QWizard知道要查找的属性。</target>
        </trans-unit>
        <trans-unit id="785fad77e6226d72185e1f1510c20471fd564951" translate="yes" xml:space="preserve">
          <source>When we create a field using &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;(), we pass a unique field name and a widget. We can also provide a Qt property name and a &quot;changed&quot; signal (a signal that is emitted when the property changes) as third and fourth arguments; however, this is not necessary for the most common Qt widgets, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;widgets-changes-qt6#qcombobox&quot;&gt;QComboBox&lt;/a&gt;, because QWizard knows which properties to look for.</source>
          <target state="translated">当我们使用&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）创建一个字段时，我们传递一个唯一的字段名和一个小部件。我们还可以提供Qt属性名称和&amp;ldquo; changed&amp;rdquo;信号（当属性更改时发出的信号）作为第三和第四自变量；但是，对于最常见的Qt小部件（例如&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;，&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;和&lt;a href=&quot;widgets-changes-qt6#qcombobox&quot;&gt;QComboBox）&lt;/a&gt;而言，这不是必需的，因为QWizard知道要查找的属性。</target>
        </trans-unit>
        <trans-unit id="d28a9032eec48f88438cdec09fd45cc48b6758eb" translate="yes" xml:space="preserve">
          <source>When we select those widgets and close the dialog the two widgets will now be available from the toolbox as grey squares with their name next to it</source>
          <target state="translated">当我们选择这些小组件并关闭对话框时,这两个小组件现在将以灰色方块的形式出现在工具箱中,旁边还有它们的名称。</target>
        </trans-unit>
        <trans-unit id="3fd645480f7c8c8a441a005df178284bbfe8bf76" translate="yes" xml:space="preserve">
          <source>When we specify a value for the length of an element in a text document, we often need to provide some other information so that the length is used in the way we expect. For example, when we specify a table width, the value can represent a fixed number of pixels, or it can be a percentage value. This information changes both the meaning of the value and the way it is used.</source>
          <target state="translated">当我们在文本文档中指定一个元素的长度值时,我们经常需要提供一些其他信息,以便以我们期望的方式使用该长度。例如,当我们指定一个表格宽度时,该值可以代表一个固定的像素数,也可以是一个百分比值。这些信息既改变了值的含义,也改变了值的使用方式。</target>
        </trans-unit>
        <trans-unit id="284899e0845013f5c711a6352c8742fd3ae424f1" translate="yes" xml:space="preserve">
          <source>When working with MIME data, Qt will interate through all instances of &lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt; to find an instance that can convert to, or from, a specific MIME type. It will do this by calling &lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;() on each instance, starting with (and choosing) the last created instance first. The actual conversions will be done by using &lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;() and &lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;().</source>
          <target state="translated">当使用MIME数据时，QT将interate通过的所有实例&lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt;找到，可以转换到，或从一个特定的MIME类型的实例。为此，&lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;它将&lt;/a&gt;在每个实例上调用canConvert（），首先从（并选择）最后创建的实例开始。实际的转换将通过使用&lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;（）和&lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;（）完成。</target>
        </trans-unit>
        <trans-unit id="571daad4b1080b726a23421270240a628454d741" translate="yes" xml:space="preserve">
          <source>When working with MIME data, Qt will interate through all instances of QMacPasteboardMime to find an instance that can convert to, or from, a specific MIME type. It will do this by calling &lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;() on each instance, starting with (and choosing) the last created instance first. The actual conversions will be done by using &lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;() and &lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;().</source>
          <target state="translated">当处理MIME数据时，Qt将遍历QMacPasteboardMime的所有实例，以查找可以与特定MIME类型相互转换的实例。它将通过在每个实例上调用&lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;（）来实现此目的，首先从（并选择）最后一个创建的实例开始。实际的转换将通过使用&lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;（）和&lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;（）完成。</target>
        </trans-unit>
        <trans-unit id="4e8e4ed4ccd8ff19293050034a255b064f2a3965" translate="yes" xml:space="preserve">
          <source>When working with sRGB framebuffers, it will be necessary to specify a format like &lt;code&gt;GL_SRGB8_ALPHA8&lt;/code&gt;. This can be achieved by calling this function.</source>
          <target state="translated">使用sRGB帧缓冲区时，有必要指定 &lt;code&gt;GL_SRGB8_ALPHA8&lt;/code&gt; 之类的格式。这可以通过调用此函数来实现。</target>
        </trans-unit>
        <trans-unit id="b6293b5ac5127952d6ebfc84cb05237b6185107b" translate="yes" xml:space="preserve">
          <source>When writing GLSL 450 shader code to use with Qt 3D's RHI backend, the default uniforms will be provided as 2 uniform buffer objects.</source>
          <target state="translated">当编写GLSL 450着色器代码与Qt 3D的RHI后端一起使用时,默认的制服将被提供为2个制服缓冲对象。</target>
        </trans-unit>
        <trans-unit id="6f312a263e4af61bbd702f1cea50f4bdda448b76" translate="yes" xml:space="preserve">
          <source>When writing a &lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; in Qt Quick, this class can be used to display a client's contents on an output device and will pass user input to the client.</source>
          <target state="translated">在Qt Quick中编写&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt;时，此类可用于在输出设备上显示客户端的内容，并将用户输入传递给客户端。</target>
        </trans-unit>
        <trans-unit id="410b86178a5dfdcde1c78964c7d14183b1876a0b" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;() data to a non-empty array, the array will be reallocated and the new data copied to it. You can avoid this behavior by calling &lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;(), which preallocates a certain amount of memory. You can also call &lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; actually allocated. Data appended to an empty array is not copied.</source>
          <target state="translated">当您&lt;a href=&quot;qbytearray#append&quot;&gt;将&lt;/a&gt;（）数据附加到非空数组时，将重新分配该数组并将新数据复制到该数组。您可以通过调用&lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;（）来避免此行为，该方法会预先分配一定数量的内存。您还可以调用&lt;a href=&quot;qbytearray#capacity&quot;&gt;Capacity&lt;/a&gt;（）来找出&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;实际分配了多少内存。追加到空数组的数据不会被复制。</target>
        </trans-unit>
        <trans-unit id="706fe5a63795456778db27342449bdf7cabe6ed0" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;() data to a non-empty array, the array will be reallocated and the new data copied to it. You can avoid this behavior by calling &lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;(), which preallocates a certain amount of memory. You can also call &lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory QByteArray actually allocated. Data appended to an empty array is not copied.</source>
          <target state="translated">当您&lt;a href=&quot;qbytearray#append&quot;&gt;将&lt;/a&gt;（）数据附加到非空数组时，将重新分配该数组并将新数据复制到该数组中。您可以通过调用&lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;（）来避免此行为，该方法会预先分配一定数量的内存。您还可以调用&lt;a href=&quot;qbytearray#capacity&quot;&gt;Capacity&lt;/a&gt;（）来找出QByteArray实际分配了多少内存。附加到空数组的数据不会被复制。</target>
        </trans-unit>
        <trans-unit id="e206e4859b01e1c09bb56347d89a744afe0086be" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qwidget#hide&quot;&gt;hide&lt;/a&gt;() a child, its space will be distributed among the other children. It will be reinstated when you &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() it again.</source>
          <target state="translated">当您&lt;a href=&quot;qwidget#hide&quot;&gt;隐藏&lt;/a&gt;（）孩子时，其空间将在其他孩子之间分配。再次&lt;a href=&quot;qwidget#show&quot;&gt;显示&lt;/a&gt;（）时，它将恢复。</target>
        </trans-unit>
        <trans-unit id="2ae32a06b61e1a7246efea4bce7751cf08c416ce" translate="yes" xml:space="preserve">
          <source>When you add widgets to a layout, the layout process works as follows:</source>
          <target state="translated">当您将小组件添加到布局中时,布局流程如下。</target>
        </trans-unit>
        <trans-unit id="90fb4ea82c0d848dd1c76043e760d581c3542117" translate="yes" xml:space="preserve">
          <source>When you are done, call &lt;a href=&quot;qinapptransaction#finalize&quot;&gt;QInAppTransaction::finalize&lt;/a&gt;(), regardless of its status. Transactions which are not finalized will be emitted again the next time your application calls &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;() for the same product.</source>
          <target state="translated">&lt;a href=&quot;qinapptransaction#finalize&quot;&gt;完成后&lt;/a&gt;，无论其状态如何，均调用QInAppTransaction :: finalize（）。下一次您的应用程序为同一产品调用&lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;（）时，未完成的交易将再次发出。</target>
        </trans-unit>
        <trans-unit id="ca9c1c1922961985d5b3578d590ea428455c5e94" translate="yes" xml:space="preserve">
          <source>When you assign a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; sub-class to this property, the QML engine does the interface cast to &lt;code&gt;FooInterface*&lt;/code&gt; automatically.</source>
          <target state="translated">当您为该属性分配&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类时，QML引擎会自动将接口 &lt;code&gt;FooInterface*&lt;/code&gt; 为FooInterface *。</target>
        </trans-unit>
        <trans-unit id="203801501ed91c63352794b08170d38e294688a8" translate="yes" xml:space="preserve">
          <source>When you assign a new font to a widget, the properties from this font are combined with the widget's default font to form the widget's final font. You can call &lt;a href=&quot;qwidget#fontInfo&quot;&gt;fontInfo&lt;/a&gt;() to get a copy of the widget's final font. The final font is also used to initialize &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s font.</source>
          <target state="translated">当您为窗口小部件分配新字体时，该字体的属性将与窗口小部件的默认字体组合在一起，以形成窗口小部件的最终字体。您可以调用&lt;a href=&quot;qwidget#fontInfo&quot;&gt;fontInfo&lt;/a&gt;（）获得小部件的最终字体的副本。最终字体也用于初始化&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的字体。</target>
        </trans-unit>
        <trans-unit id="af2046c186d7103eac993dbd56c9ad5be66e4723" translate="yes" xml:space="preserve">
          <source>When you assign a new palette to a widget, the color roles from this palette are combined with the widget's default palette to form the widget's final palette. The palette entry for the widget's background role is used to fill the widget's background (see &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;QWidget::autoFillBackground&lt;/a&gt;), and the foreground role initializes &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s pen.</source>
          <target state="translated">当您为窗口小部件分配新的调色板时，该调色板的颜色角色将与窗口小部件的默认调色板组合在一起，以形成窗口小部件的最终调色板。小部件的背景角色的调色板条目用于填充小部件的背景（请参阅&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;QWidget :: autoFillBackground&lt;/a&gt;），而前台角色将初始化&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;的笔。</target>
        </trans-unit>
        <trans-unit id="9e46f6202b38da8549f0268e4a4fe0abf934e7f4" translate="yes" xml:space="preserve">
          <source>When you build Qt, frameworks are built by default, and inside the framework you will find both a release and a debug version (e.g., &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and QtCore_debug). If you pass the &lt;code&gt;-no-framework&lt;/code&gt; flag when you build Qt, two dylibs are built for each Qt library (e.g., libQtCore.4.dylib and libQtCore_debug.4.dylib).</source>
          <target state="translated">当您构建Qt时，默认情况下会构建框架，并且在框架内您会发现发行版和调试版本（例如&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;和QtCore_debug）。如果在构建Qt时传递 &lt;code&gt;-no-framework&lt;/code&gt; 标志，则将为每个Qt库构建两个dylib（例如，libQtCore.4.dylib和libQtCore_debug.4.dylib）。</target>
        </trans-unit>
        <trans-unit id="51ec8bb6c1e25445908ed2540d53f85248b08802" translate="yes" xml:space="preserve">
          <source>When you build Qt, frameworks are built by default, and inside the framework you will find both a release and a debug version (e.g., &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and QtCore_debug). If you pass the &lt;code&gt;-no-framework&lt;/code&gt; flag when you build Qt, two dylibs are built for each Qt library (e.g., libQtCore.4.dylib and libQtCore_debug.4.dylib).</source>
          <target state="translated">当您构建Qt时，默认情况下会构建框架，并且在框架内您会发现发行版和调试版本（例如&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;和QtCore_debug）。如果在构建Qt时传递 &lt;code&gt;-no-framework&lt;/code&gt; 标志，则将为每个Qt库构建两个dylib（例如，libQtCore.4.dylib和libQtCore_debug.4.dylib）。</target>
        </trans-unit>
        <trans-unit id="1bfad1fe70413b2afa2e96ceeb6fb1c3147a98cc" translate="yes" xml:space="preserve">
          <source>When you build Qt, frameworks are built by default, and inside the framework you will find both a release and a debug version (e.g., &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and QtCore_debug). If you pass the &lt;code&gt;-no-framework&lt;/code&gt; flag when you build Qt, two dylibs are built for each Qt library (e.g., libQtCore.4.dylib and libQtCore_debug.4.dylib).</source>
          <target state="translated">当您构建Qt时，默认情况下会构建框架，并且在框架内您会发现发行版和调试版本（例如&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;和QtCore_debug）。如果在构建Qt时传递 &lt;code&gt;-no-framework&lt;/code&gt; 标志，则将为每个Qt库构建两个dylib（例如，libQtCore.4.dylib和libQtCore_debug.4.dylib）。</target>
        </trans-unit>
        <trans-unit id="0a87e705d339a4e673804de6e41e480ac5d48e14" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in a thread, other threads that try to call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in the same place will block until the thread that got the lock calls &lt;a href=&quot;qmutex#unlock&quot;&gt;unlock&lt;/a&gt;(). A non-blocking alternative to &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() is &lt;a href=&quot;qmutex#tryLock&quot;&gt;tryLock&lt;/a&gt;().</source>
          <target state="translated">当您在线程中调用&lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;（）时，其他尝试在同一位置调用&lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;（）的线程将阻塞，直到获得锁的线程调用&lt;a href=&quot;qmutex#unlock&quot;&gt;unlock&lt;/a&gt;（）为止。&lt;a href=&quot;qmutex#lock&quot;&gt;锁定&lt;/a&gt;（）的一种非阻塞替代方法是&lt;a href=&quot;qmutex#tryLock&quot;&gt;tryLock&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3895403974f0e093b1adb4983c512e48803fc7c3" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in a thread, other threads that try to call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in the same place will block until the thread that got the lock calls &lt;a href=&quot;qmutex#unlock&quot;&gt;unlock&lt;/a&gt;(). A non-blocking alternative to &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() is &lt;a href=&quot;qmutex#tryLock-1&quot;&gt;tryLock&lt;/a&gt;().</source>
          <target state="translated">当您在线程中调用&lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;（）时，其他尝试在同一位置调用&lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;（）的线程将阻塞，直到获得锁的线程调用&lt;a href=&quot;qmutex#unlock&quot;&gt;unlock&lt;/a&gt;（）为止。&lt;a href=&quot;qmutex#lock&quot;&gt;锁定&lt;/a&gt;（）的一种非阻塞替代方法是&lt;a href=&quot;qmutex#tryLock-1&quot;&gt;tryLock&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="6c51b78ef404aa9256758848a787e698738ccda1" translate="yes" xml:space="preserve">
          <source>When you click &lt;b&gt;OK&lt;/b&gt; or &lt;b&gt;Apply&lt;/b&gt;, Qt Designer will automatically display the widget with its new stylesheet.</source>
          <target state="translated">当您单击&lt;b&gt;OK&lt;/b&gt;或&lt;b&gt;Apply时&lt;/b&gt;，Qt Designer将自动显示带有新样式表的小部件。</target>
        </trans-unit>
        <trans-unit id="a29f5adc1b71f2d82537e70f37ce91b1e7581ebe" translate="yes" xml:space="preserve">
          <source>When you click on the slider and drag it to a certain value, you want the spin box to display the slider's position. To accomplish this behavior, you need to connect the slider's &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged()&lt;/a&gt; signal to the spin box's &lt;a href=&quot;qspinbox#value-prop&quot;&gt;setValue()&lt;/a&gt; slot. You also need to make the reverse connections, e.g., connect the spin box's &lt;a href=&quot;qspinbox#valueChanged&quot;&gt;valueChanged()&lt;/a&gt; signal to the slider's &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue()&lt;/a&gt; slot.</source>
          <target state="translated">当您单击滑块并将其拖动到某个值时，您希望旋转框显示滑块的位置。若要实现此行为，您需要将滑块的&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged（）&lt;/a&gt;信号连接到旋转框的&lt;a href=&quot;qspinbox#value-prop&quot;&gt;setValue（）&lt;/a&gt;插槽。您还需要进行反向连接，例如，将旋转框的&lt;a href=&quot;qspinbox#valueChanged&quot;&gt;valueChanged（）&lt;/a&gt;信号连接到滑块的&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue（）&lt;/a&gt;插槽。</target>
        </trans-unit>
        <trans-unit id="16d343fa86e79c1573178210409175ac2c2a9e85" translate="yes" xml:space="preserve">
          <source>When you compile your application, you must explicitly enable the debugging infrastructure. If you use qmake, you can add the configuration parameters to the project &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">编译应用程序时，必须显式启用调试基础结构。如果使用qmake，则可以将配置参数添加到项目 &lt;code&gt;.pro&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="2aceba6d77a63e6f2b3b7fb5d2e861200bdf01c2" translate="yes" xml:space="preserve">
          <source>When you create a &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; object you specify various attributes that you want the font to have. Qt will use the font with the specified attributes, or if no matching font exists, Qt will use the closest matching installed font. The attributes of the font that is actually used are retrievable from a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object. If the window system provides an exact match &lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; to get measurements, e.g. the pixel length of a string using QFontMetrics::width().</source>
          <target state="translated">创建&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;对象时，可以指定希望字体具有的各种属性。Qt将使用具有指定属性的字体，或者如果不存在匹配的字体，则Qt将使用最接近的匹配安装字体。可以从&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;对象检索实际使用的字体的属性。如果窗口系统提供精确匹配，则&lt;a href=&quot;qfont#exactMatch&quot;&gt;matchMatch&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 。使用&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;获取测量值，例如，使用QFontMetrics :: width（）获得字符串的像素长度。</target>
        </trans-unit>
        <trans-unit id="c60c2a106febe9d8810b691e03aaff098d3cba22" translate="yes" xml:space="preserve">
          <source>When you create a QFont object you specify various attributes that you want the font to have. Qt will use the font with the specified attributes, or if no matching font exists, Qt will use the closest matching installed font. The attributes of the font that is actually used are retrievable from a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object. If the window system provides an exact match &lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; to get measurements, e.g. the pixel length of a string using QFontMetrics::width().</source>
          <target state="translated">创建QFont对象时，请指定希望字体具有的各种属性。Qt将使用具有指定属性的字体，或者如果不存在匹配的字体，则Qt将使用最接近的匹配安装字体。可从&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;对象检索实际使用的字体的属性。如果窗口系统提供精确匹配，则&lt;a href=&quot;qfont#exactMatch&quot;&gt;compareMatch&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 。使用&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;获取测量值，例如，使用QFontMetrics :: width（）获得字符串的像素长度。</target>
        </trans-unit>
        <trans-unit id="28ec5a0e3b20169c458bbcc9cde4d66c22062727" translate="yes" xml:space="preserve">
          <source>When you create an instance of your &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; subclass, pass it the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; that you want the syntax highlighting to be applied to. For example:</source>
          <target state="translated">当创建&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;子类的实例时，&lt;a href=&quot;qtextdocument&quot;&gt;向其&lt;/a&gt;传递要对其应用语法突出显示的QTextDocument。例如：</target>
        </trans-unit>
        <trans-unit id="acf4ae51281130900b153e1649564a2683553896" translate="yes" xml:space="preserve">
          <source>When you create an instance of your QSyntaxHighlighter subclass, pass it the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; that you want the syntax highlighting to be applied to. For example:</source>
          <target state="translated">当创建QSyntaxHighlighter子类的实例时，&lt;a href=&quot;qtextdocument&quot;&gt;向其&lt;/a&gt;传递要对其应用语法突出显示的QTextDocument。例如：</target>
        </trans-unit>
        <trans-unit id="6ca044dcc761989ec3d45fb4cbef2b702bc2b544" translate="yes" xml:space="preserve">
          <source>When you create your own subwindow, you must set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_DeleteOnClose&lt;/a&gt; widget attribute if you want the window to be deleted when closed in the MDI area. If not, the window will be hidden and the MDI area will not activate the next subwindow.</source>
          <target state="translated">创建自己的子窗口时，如果希望在MDI区域中关闭窗口时删除窗口，则必须设置&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_DeleteOnClose&lt;/a&gt;小部件属性。否则，该窗口将被隐藏，并且MDI区域将不会激活下一个子窗口。</target>
        </trans-unit>
        <trans-unit id="de40a9dc45275aef4c5df5f40038b770fe409001" translate="yes" xml:space="preserve">
          <source>When you define your filter, note that it can be called from different threads; but never concurrently. This filter cannot call any static functions from &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">在定义过滤器时，请注意可以从不同的线程中调用它。但绝不能同时发生。该过滤器无法从&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;调用任何静态函数。</target>
        </trans-unit>
        <trans-unit id="84840db2f97361935bdbfd339750fb2aacff31cf" translate="yes" xml:space="preserve">
          <source>When you develop a BSP for your board, you should include the following utilities to enable Qt Creator to deploy, run, debug, and stop applications on QNX devices:</source>
          <target state="translated">在为电路板开发 BSP 时,您应包含以下实用程序,以便 Qt Creator 在 QNX 设备上部署、运行、调试和停止应用程序。</target>
        </trans-unit>
        <trans-unit id="4c480aff5cf79a86ac02aed41c87410316570513" translate="yes" xml:space="preserve">
          <source>When you develop an application for an Apple platform, you must set the deployment target. Various build tools within the Xcode toolchain all have a flag which you can use to set this value, including but not limited to the compiler and linker. By setting the deployment target value, you are explicitly declaring that your application must work on at least that version, and will not work with any earlier versions of the OS. It is then up to you to ensure that your use of the system APIs matches what you have declared. Since the compiler knows what you have declared, it can help in enforcing that.</source>
          <target state="translated">当你为Apple平台开发应用程序时,你必须设置部署目标。Xcode工具链中的各种构建工具都有一个标志,您可以用它来设置这个值,包括但不限于编译器和链接器。通过设置部署目标值,您明确声明您的应用程序必须至少在该版本上工作,而不能在任何早期版本的操作系统上工作。然后,你要确保你对系统API的使用与你所声明的一致。由于编译器知道你所声明的内容,它可以帮助强制执行。</target>
        </trans-unit>
        <trans-unit id="8e624447ece8794817624f7b1b843a60aecc9b62" translate="yes" xml:space="preserve">
          <source>When you develop an application for an Apple platform, you should always use the latest version of Xcode and the latest SDK available at the time of development. On some platforms, like iOS, you will actually be rejected from the App Store if you do not. Therefore, the SDK version is always greater than or equal to the deployment target.</source>
          <target state="translated">当你为苹果平台开发应用程序时,你应该始终使用最新版本的Xcode和开发时可用的最新SDK。在某些平台上,比如iOS,如果你不这样做,实际上会被App Store拒绝。因此,SDK版本总是大于或等于部署目标。</target>
        </trans-unit>
        <trans-unit id="4c7b64797b21f9f607e1ffa6f6ab445278f5f0b8" translate="yes" xml:space="preserve">
          <source>When you develop an application with QML, there are many ways to debug possible issues that you may face. The sections below describe the debugging tools available and how to use them.</source>
          <target state="translated">当你用QML开发一个应用程序时,有很多方法可以调试你可能面临的问题。下面的章节描述了可用的调试工具以及如何使用它们。</target>
        </trans-unit>
        <trans-unit id="665dc5dbb39005e2b8624150def3c9dc88cec3b1" translate="yes" xml:space="preserve">
          <source>When you develop custom widgets, you can create custom subclasses of &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and distribute them as plugins (using &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;) or compile them into the application. Likewise, Qt's predefined accessibility support can be built as plugin (the default) or directly into the Qt library. The main advantage of using plugins is that the accessibility classes are only loaded into memory if they are actually used; they don't slow down the common case where no assistive technology is being used.</source>
          <target state="translated">开发自定义窗口小部件时，可以创建&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface的&lt;/a&gt;自定义子类并将其作为插件分发（使用&lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;）或将其编译到应用程序中。同样，Qt的预定义可访问性支持可以作为插件（默认）构建，也可以直接构建到Qt库中。使用插件的主要优点是，可访问性类只有在实际使用时才加载到内存中。它们不会减慢不使用辅助技术的常见情况。</target>
        </trans-unit>
        <trans-unit id="bd0d4bcaee27591a27f5364969032d286331c9d5" translate="yes" xml:space="preserve">
          <source>When you distribute your application, remember to include</source>
          <target state="translated">当您发布您的申请时,请记住包括</target>
        </trans-unit>
        <trans-unit id="8f9dd307dc92d46d630aa224d3859e9783a0c824" translate="yes" xml:space="preserve">
          <source>When you distribute your application, remember to include libpq.dll in your installation package. It must be placed in the same folder as the application executable.</source>
          <target state="translated">当您发布应用程序时,请记住在安装包中包含libpq.dll。它必须和应用程序的可执行文件放在同一个文件夹中。</target>
        </trans-unit>
        <trans-unit id="5ea8acaa7e79eefa675682ec7a314c688674b2bb" translate="yes" xml:space="preserve">
          <source>When you do a &lt;code&gt;make install&lt;/code&gt;, and you don't have a build of the project yet, the project is first built, and then installed. If you don't want this behavior, set this config value to ensure that the build target is not added as a dependency to the install target.</source>
          <target state="translated">当您进行 &lt;code&gt;make install&lt;/code&gt; 时，您还没有该项目的构建，那么先构建该项目，然后再安装。如果您不希望出现这种情况，请设置此配置值，以确保不将构建目标作为依赖项添加到安装目标。</target>
        </trans-unit>
        <trans-unit id="f239ccd84b95fa1bd3731891bc9b99327baddf53" translate="yes" xml:space="preserve">
          <source>When you have a data set that updates rapidly, it is important to handle data properly to ensure good performance. Since memory allocation is a costly operation, always use &lt;a href=&quot;qlist#reserve&quot;&gt;QList::reserve&lt;/a&gt;() and &lt;a href=&quot;qvector#resize&quot;&gt;QVector::resize&lt;/a&gt;() where possible to avoid unnecessary reallocations when constructing the array to give to the proxy. If you need to change the entire data set for each frame, it is in most cases best to reuse the existing array - especially if the array dimensions do not change. If you need to add, insert, remove, or change several rows or items for each frame, it is always more efficient to do it with one method call instead of multiple calls affecting a single row or item each. For example, adding ten rows with a single &lt;a href=&quot;qbardataproxy#addRows&quot;&gt;QBarDataProxy::addRows&lt;/a&gt;() call is much more efficient than ten separate &lt;a href=&quot;qbardataproxy#addRow&quot;&gt;QBarDataProxy::addRow&lt;/a&gt;() calls.</source>
          <target state="translated">当您拥有一个快速更新的数据集时，正确处理数据以确保良好的性能非常重要。由于内存分配是一项昂贵的操作，因此在构造要提供给代理的数组时，请尽可能使用&lt;a href=&quot;qlist#reserve&quot;&gt;QList :: reserve&lt;/a&gt;（）和&lt;a href=&quot;qvector#resize&quot;&gt;QVector :: resize&lt;/a&gt;（）以避免不必要的重新分配。如果您需要更改每一帧的整个数据集，则在大多数情况下，最好重用现有阵列-尤其是在阵列尺寸不变的情况下。如果您需要为每个框架添加，插入，删除或更改几行或几项，那么使用一个方法调用来完成它总是更有效的，而不是通过多个调用来影响单个行或每个项目。例如，使用单个&lt;a href=&quot;qbardataproxy#addRows&quot;&gt;QBarDataProxy :: addRows&lt;/a&gt;添加十行（）调用比十个单独的&lt;a href=&quot;qbardataproxy#addRow&quot;&gt;QBarDataProxy :: addRow&lt;/a&gt;（）调用效率更高。</target>
        </trans-unit>
        <trans-unit id="850eb12314b4562298a7215df379da3fe4b7c57c" translate="yes" xml:space="preserve">
          <source>When you have multiple displays connected, the level of support to target one or more of these displays from one single Qt application, varies between the platform plugins and often depends on the device and its graphics stack.</source>
          <target state="translated">当你连接了多个显示器时,从一个单一的Qt应用程序中针对一个或多个显示器的支持程度,在不同的平台插件之间是不同的,通常取决于设备及其图形堆栈。</target>
        </trans-unit>
        <trans-unit id="f2c795f997957d917a037b7558d2111076f2f860" translate="yes" xml:space="preserve">
          <source>When you have set up your account, click on &lt;b&gt;Add new application&lt;/b&gt; in Google Play's developer console.</source>
          <target state="translated">设置帐户后，请在Google Play开发者控制台中单击&amp;ldquo; &lt;b&gt;添加新应用&amp;rdquo;&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="da2b2d3afb5483b4a1db7b7d7fb239c631a77696" translate="yes" xml:space="preserve">
          <source>When you implement styles, there are several issues to consider. We will give some hints and advice on implementation here.</source>
          <target state="translated">在实现样式的时候,有几个问题需要考虑。我们将在这里给出一些关于实现的提示和建议。</target>
        </trans-unit>
        <trans-unit id="8212971e42c4deca42aba3c17bc98fcd36818d32" translate="yes" xml:space="preserve">
          <source>When you make your own widget class, you should also communicate its layout properties. If the widget uses one of Qt's layouts, this is already taken care of. If the widget does not have any child widgets, or uses a manual layout, you can change the behavior of the widget using any or all of the following mechanisms:</source>
          <target state="translated">当你制作自己的widget类时,你也应该传达它的布局属性。如果widget使用Qt的布局之一,这已经被处理好了。如果widget没有任何子widget,或者使用手动布局,您可以使用以下任何或全部机制来改变widget的行为。</target>
        </trans-unit>
        <trans-unit id="11e1d05bbb73ce5b03a0982e43710997b6d84eef" translate="yes" xml:space="preserve">
          <source>When you need to invoke item functionality in a &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;-based API (e.g. &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;), you can call this function to obtain an index that corresponds to the item's location in the model.</source>
          <target state="translated">当您需要在基于&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;的API中调用项目功能（例如&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;）时，可以调用此函数以获得与项目在模型中位置相对应的索引。</target>
        </trans-unit>
        <trans-unit id="8810b0890f73b99ba2b69adf7bbab05a3b05df5c" translate="yes" xml:space="preserve">
          <source>When you publish a &lt;code&gt;QObject&lt;/code&gt; that has overloaded methods, &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; will resolve method invocations to the best match. Note that due to JavaScript's type system, there is only a single 'number' type which maps best to a C++ 'double'. When overloads differ only in the type of a number-like parameter, &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; will always choose that overload which best matches the JavaScript 'number' type. When you connect to an overloaded signal, the &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; client will by default only connect to the first signal overload of that name. Additionally, overloads of methods and signals can explicitly be requested by their complete &lt;code&gt;QMetaMethod&lt;/code&gt; signature. Assume we have the following &lt;code&gt;QObject&lt;/code&gt; subclass on the C++ side:</source>
          <target state="translated">当发布具有重载方法的 &lt;code&gt;QObject&lt;/code&gt; 时，&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;会将方法调用解析为最佳匹配。请注意，由于JavaScript的类型系统，只有一个&amp;ldquo;数字&amp;rdquo;类型可以最好地映射到C ++的&amp;ldquo;双&amp;rdquo;类型。当重载仅在类似于数字的参数类型上有所不同时，&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;将始终选择与JavaScript&amp;ldquo;数字&amp;rdquo;类型最匹配的重载。当您连接到过载信号时，默认情况下，&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;客户端将仅连接到该名称的第一个信号过载。此外，方法和信号的重载可以通过其完整的 &lt;code&gt;QMetaMethod&lt;/code&gt; 签名显式地请求。假设我们有以下 &lt;code&gt;QObject&lt;/code&gt; C ++方面的子类：</target>
        </trans-unit>
        <trans-unit id="fa3c3f800f477ad4b6074ff08c0beb3cbd07d4a4" translate="yes" xml:space="preserve">
          <source>When you receive the signal, you call &lt;a href=&quot;qstandarditemmodel#itemFromIndex&quot;&gt;itemFromIndex&lt;/a&gt;() on the given model index to get a pointer to the item:</source>
          <target state="translated">收到信号后，请在给定的模型索引上调用&lt;a href=&quot;qstandarditemmodel#itemFromIndex&quot;&gt;itemFromIndex&lt;/a&gt;（）以获取指向该项目的指针：</target>
        </trans-unit>
        <trans-unit id="11bc559026d9ce92e05880b306679f8d18cde9a7" translate="yes" xml:space="preserve">
          <source>When you reimplement your own paint engine, you must reimplement &lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine::drawTextItem&lt;/a&gt;(), a function that takes a &lt;a href=&quot;qtextitem&quot;&gt;QTextItem&lt;/a&gt; as one of its arguments.</source>
          <target state="translated">重新实现自己的绘画引擎时，必须重新实现&lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine :: drawTextItem&lt;/a&gt;（），该函数将&lt;a href=&quot;qtextitem&quot;&gt;QTextItem&lt;/a&gt;作为其参数之一。</target>
        </trans-unit>
        <trans-unit id="48d1f1f930cc85404c3f11ae3d2fbe97abc80529" translate="yes" xml:space="preserve">
          <source>When you reimplement your own paint engine, you must reimplement &lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine::drawTextItem&lt;/a&gt;(), a function that takes a QTextItem as one of its arguments.</source>
          <target state="translated">重新实现自己的绘画引擎时，必须重新实现&lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine :: drawTextItem&lt;/a&gt;（），该函数将QTextItem作为其参数之一。</target>
        </trans-unit>
        <trans-unit id="cc3622a2958b0c7677184a6e7b09570f3e9ffbeb" translate="yes" xml:space="preserve">
          <source>When you retrieve a pixmap using pixmap(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, Mode, State), and no pixmap for this given size, mode and state has been added with &lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() or &lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), then &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; will generate one on the fly. This pixmap generation happens in a &lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;. The default engine scales pixmaps down if required, but never up, and it uses the current style to calculate a disabled appearance. By using custom icon engines, you can customize every aspect of generated icons. With &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt; it is possible to register different icon engines for different file suffixes, making it possible for third parties to provide additional icon engines to those included with Qt.</source>
          <target state="translated">当您使用pixmap（&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;，Mode，State）检索pixmap时，如果没有给定大小的pixmap，则使用&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;（）或&lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）添加mode和state时，&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;会即时生成一个。像素图生成发生在&lt;a href=&quot;qiconengine&quot;&gt;QIconEngine中&lt;/a&gt;。如果需要，默认引擎会缩小像素图，但永远不会放大，它使用当前样式来计算禁用的外观。通过使用自定义图标引擎，您可以自定义生成图标的各个方面。借助&lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;，可以为不同的文件后缀注册不同的图标引擎，从而使第三方可以为Qt附带的图标引擎提供其他图标引擎。</target>
        </trans-unit>
        <trans-unit id="9f0467d78e10463d2a8ba36f6d8d3579b988d37d" translate="yes" xml:space="preserve">
          <source>When you retrieve a pixmap using pixmap(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, Mode, State), and no pixmap for this given size, mode and state has been added with &lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() or &lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), then QIcon will generate one on the fly. This pixmap generation happens in a &lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;. The default engine scales pixmaps down if required, but never up, and it uses the current style to calculate a disabled appearance. By using custom icon engines, you can customize every aspect of generated icons. With &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt; it is possible to register different icon engines for different file suffixes, making it possible for third parties to provide additional icon engines to those included with Qt.</source>
          <target state="translated">当您使用pixmap（&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;，Mode，State）检索pixmap时，并且没有给定大小的pixmap时，使用&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;（）或&lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）添加了mode和state ，那么QIcon会即时生成一个。像素图生成在&lt;a href=&quot;qiconengine&quot;&gt;QIconEngine中进行&lt;/a&gt;。默认引擎在需要时将像素图缩小，但从不放大，它使用当前样式来计算禁用的外观。通过使用自定义图标引擎，您可以自定义生成图标的各个方面。借助&lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;，可以为不同的文件后缀注册不同的图标引擎，从而使第三方可以为Qt附带的图标引擎提供其他图标引擎。</target>
        </trans-unit>
        <trans-unit id="571197ffd60fff66160ddd0d5152ea57afa360f9" translate="yes" xml:space="preserve">
          <source>When you run a Qt application, you can specify several command-line options that can help with debugging. These are recognized by &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;.</source>
          <target state="translated">运行Qt应用程序时，可以指定几个命令行选项，这些选项可以帮助调试。这些被&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;识别。</target>
        </trans-unit>
        <trans-unit id="349b845c24584a63440e56578dc469286bd5d62e" translate="yes" xml:space="preserve">
          <source>When you run an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; using the C++ API in a Qt application, you will often want to bind program variables to $variables in the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;. After the query is evaluated, you will want to interpret the sequence of data items in the result set.</source>
          <target state="translated">在Qt应用程序中使用C ++ API运行&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery时&lt;/a&gt;，通常会希望将程序变量绑定到&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery中的&lt;/a&gt;$ variables 。评估查询后，您将需要解释结果集中数据项的顺序。</target>
        </trans-unit>
        <trans-unit id="dcbc1472c5e4961da67399a01267a56000ea1f91" translate="yes" xml:space="preserve">
          <source>When you run an XQuery using the C++ API in a Qt application, you will often want to bind program variables to $variables in the XQuery. After the query is evaluated, you will want to interpret the sequence of data items in the result set.</source>
          <target state="translated">当你在Qt应用程序中使用C++API运行一个XQuery时,你经常会想把程序变量绑定到XQuery中的$variables。在查询被评估后,你会想要解释结果集中的数据项序列。</target>
        </trans-unit>
        <trans-unit id="74898dc919ae9ab35b6672e91c4aea88a18f022f" translate="yes" xml:space="preserve">
          <source>When you run your application, you will also need to add the &lt;code&gt;oci.dll&lt;/code&gt; path to your &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">运行应用程序时，还需要将 &lt;code&gt;oci.dll&lt;/code&gt; 路径添加到 &lt;code&gt;PATH&lt;/code&gt; 环境变量中：</target>
        </trans-unit>
        <trans-unit id="d0c6b234a298b905aa90c3eef8101c41b23a9179" translate="yes" xml:space="preserve">
          <source>When you start developing on a given embedded device, often it's necessary to verify the behavior of the device and drivers, and that the connected displays are working as they should. One easy way is to use the &lt;b&gt;hellowindow&lt;/b&gt; example. Launching it with the &lt;code&gt;-platform eglfs --multiscreen --timeout&lt;/code&gt; arguments shows a rotating Qt logo on each connected screen for a few seconds.</source>
          <target state="translated">当您开始在给定的嵌入式设备上进行开发时，通常需要验证设备和驱动程序的行为，以及所连接的显示器是否按预期工作。一种简单的方法是使用&lt;b&gt;hellowindow&lt;/b&gt;示例。使用 &lt;code&gt;-platform eglfs --multiscreen --timeout&lt;/code&gt; 参数启动它会在每个连接的屏幕上显示旋转的Qt徽标几秒钟。</target>
        </trans-unit>
        <trans-unit id="ee8546a04dd2a56a0ac326f7d2e48820793cd419" translate="yes" xml:space="preserve">
          <source>When you tell</source>
          <target state="translated">当你告诉</target>
        </trans-unit>
        <trans-unit id="1fa91e235bb1e0e43574ae5fec7e6d97da21cd4c" translate="yes" xml:space="preserve">
          <source>When you use &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;, and &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; to access the file system with Qt, you can use Unicode file names. On Unix, these file names are converted to an 8-bit encoding. If you want to use standard C++ APIs (&lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;) or platform-specific APIs to access files instead of &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, you can use the &lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;() and &lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;() functions to convert between Unicode file names and 8-bit file names.</source>
          <target state="translated">使用&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;，&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;和&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;通过Qt访问文件系统时，可以使用Unicode文件名。在Unix上，这些文件名被转换为8位编码。如果要使用标准C ++ API（ &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; ）或特定于平台的API来访问文件而不是&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;，则可以使用&lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;（）和&lt;a href=&quot;qfile#decodeName&quot;&gt;encodeName&lt;/a&gt;（）函数在Unicode文件名和8之间进行转换。位文件名。</target>
        </trans-unit>
        <trans-unit id="219842d63fb103c1dd2829e0b37f7c43d7849402" translate="yes" xml:space="preserve">
          <source>When you use QFile, &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;, and &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; to access the file system with Qt, you can use Unicode file names. On Unix, these file names are converted to an 8-bit encoding. If you want to use standard C++ APIs (&lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;) or platform-specific APIs to access files instead of QFile, you can use the &lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;() and &lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;() functions to convert between Unicode file names and 8-bit file names.</source>
          <target state="translated">当您使用QFile，&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;和&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;通过Qt访问文件系统时，可以使用Unicode文件名。在Unix上，这些文件名被转换为8位编码。如果要使用标准C ++ API（ &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; ）或特定于平台的API来访问文件而不是QFile，则可以使用&lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;（）和&lt;a href=&quot;qfile#decodeName&quot;&gt;encodeName&lt;/a&gt;（）函数在Unicode文件名和8之间进行转换。位文件名。</target>
        </trans-unit>
        <trans-unit id="80fb6f7c17f227081e6e0638953d3b9f7a80a55c" translate="yes" xml:space="preserve">
          <source>When you use a Button in your application, the &lt;code&gt;background&lt;/code&gt; and &lt;code&gt;contentItem&lt;/code&gt; items will be created and parented to the root &lt;code&gt;Button&lt;/code&gt; item:</source>
          <target state="translated">在应用程序中使用Button时，将创建 &lt;code&gt;background&lt;/code&gt; 和 &lt;code&gt;contentItem&lt;/code&gt; 项并将它们作为根 &lt;code&gt;Button&lt;/code&gt; 项的父项：</target>
        </trans-unit>
        <trans-unit id="6ed92c03ec92c021add70bc2437e374d7f1ddbaf" translate="yes" xml:space="preserve">
          <source>When you use a layout, you do not need to pass a parent when constructing the child widgets. The layout will automatically reparent the widgets (using &lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget::setParent&lt;/a&gt;()) so that they are children of the widget on which the layout is installed.</source>
          <target state="translated">使用布局时，在构造子窗口小部件时不需要传递父级。布局将自动重设窗口小部件的父级（使用&lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget :: setParent&lt;/a&gt;（）），以使它们成为安装了布局的窗口小部件的子级。</target>
        </trans-unit>
        <trans-unit id="da35347dbd73ff3a30bfc301345e76eff709d5d4" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;debug_and_release&lt;/code&gt; option (which is the default under Windows), the project will be processed three times: one time to produce a &quot;meta&quot; Makefile, and two more times to produce a Makefile.Debug and a Makefile.Release.</source>
          <target state="translated">当您使用 &lt;code&gt;debug_and_release&lt;/code&gt; 选项（在Windows下是默认设置）时，将对项目进行三次处理：一次生成&amp;ldquo;元&amp;rdquo; Makefile，另一次生成Makefile.Debug和Makefile.Release。</target>
        </trans-unit>
        <trans-unit id="60d4ef933d47b492272cf35cd6a80f96f67accbc" translate="yes" xml:space="preserve">
          <source>When you want a list or tree, you typically create an empty &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; and use &lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;() to add items to the model, and &lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;() to access an item. If your model represents a table, you typically pass the dimensions of the table to the &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; constructor and use &lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;() to position items into the table. You can also use &lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;() to alter the dimensions of the model. To insert items, use &lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;(), and to remove items, use &lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;().</source>
          <target state="translated">当您需要列表或树时，通常创建一个空的&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;并使用&lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;（）将项目添加到模型中，并使用&lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;（）访问项目。如果您的模型代表一个表，则通常将表的尺寸传递给&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;构造函数，并使用&lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;（）将项定位到表中。您还可以使用&lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;（）和&lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;（）更改模型的尺寸。要插入项目，请使用&lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;（）或&lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;（），要删除项目，请使用&lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;（）或&lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="4be51d41f9dcd2a63e9244eac2472e02cc98fe35" translate="yes" xml:space="preserve">
          <source>When you want a list or tree, you typically create an empty QStandardItemModel and use &lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;() to add items to the model, and &lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;() to access an item. If your model represents a table, you typically pass the dimensions of the table to the QStandardItemModel constructor and use &lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;() to position items into the table. You can also use &lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;() to alter the dimensions of the model. To insert items, use &lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;(), and to remove items, use &lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;().</source>
          <target state="translated">当需要列表或树时，通常创建一个空的QStandardItemModel并使用&lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;（）将项目添加到模型中，并使用&lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;（）访问项目。如果您的模型代表一个表，则通常将表的尺寸传递给QStandardItemModel构造函数，并使用&lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;（）将项定位到表中。您还可以使用&lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;（）和&lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;（）更改模型的尺寸。要插入项目，请使用&lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;（）或&lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;（），要删除项目，请使用&lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;（）或&lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7170217aec4e1498546cac59074468c5f11f708f" translate="yes" xml:space="preserve">
          <source>When you want to run a parameterized &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; from your Qt application, you will need to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;bind variables&lt;/a&gt; in your program to $name variables in your &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">当您想从Qt应用程序运行参数化的&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery时&lt;/a&gt;，需要&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;将&lt;/a&gt;程序中的变量绑定到&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery中的&lt;/a&gt;$ name变量。</target>
        </trans-unit>
        <trans-unit id="2584a7ed7c056364ed2d913bf3cd8afc1f83ee3b" translate="yes" xml:space="preserve">
          <source>When you want to run a parameterized XQuery from your Qt application, you will need to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;bind variables&lt;/a&gt; in your program to $name variables in your XQuery.</source>
          <target state="translated">当您想从Qt应用程序运行参数化的XQuery时，需要&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;将&lt;/a&gt;程序中的变量绑定到XQuery中的$ name变量。</target>
        </trans-unit>
        <trans-unit id="78943cac7e531af0096129c5e938f47ed5b0b259" translate="yes" xml:space="preserve">
          <source>When you write your own text input controls, use &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;. In some languages (e.g. Arabic or languages from the Indian subcontinent), the width and shape of a glyph changes depending on the surrounding characters, which &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; takes into account. Writing input controls usually requires a certain knowledge of the scripts it is going to be used in. Usually the easiest way is to subclass &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; or &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;.</source>
          <target state="translated">编写自己的文本输入控件时，请使用&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;。在某些语言（例如阿拉伯语或印度次大陆的语言）中，字形的宽度和形状根据周围的字符而变化，&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;考虑了这些字符。编写输入控件通常需要对将要使用的脚本有一定的了解。通常最简单的方法是将&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;或&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;子类化。</target>
        </trans-unit>
        <trans-unit id="0fcbb31161cb56fe5288b022cf20ee3adfe4a05b" translate="yes" xml:space="preserve">
          <source>When you're finished changing a record, you should always call &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;QSqlTableModel::submitAll&lt;/a&gt;() to ensure that the changes are written to the database.</source>
          <target state="translated">完成记录更改后，应始终调用&lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;QSqlTableModel :: submitAll&lt;/a&gt;（）以确保将更改写入数据库。</target>
        </trans-unit>
        <trans-unit id="a73269c31e4068b1b206c35bf9e9ab6195ba01df" translate="yes" xml:space="preserve">
          <source>When you're reviewing a change, you can adapt this workflow to check that the change does indeed come with a test for a problem it does fix.</source>
          <target state="translated">当你在审查一个变更时,你可以调整这个工作流程,以检查该变更是否确实带有测试它确实修复的问题。</target>
        </trans-unit>
        <trans-unit id="c483778adddb3d8e4d84a4e99e535203121a7d52" translate="yes" xml:space="preserve">
          <source>When your ActiveX server can also run as a stand-alone application, run the server executable with the &lt;code&gt;-regserver&lt;/code&gt; command line parameter after installing the executable on the target system. After that the controls provided by the server will be available to ActiveX clients.</source>
          <target state="translated">当您的ActiveX服务器也可以作为独立应用程序运行时，请在目标系统上安装可执行文件后，使用 &lt;code&gt;-regserver&lt;/code&gt; 命令行参数运行该服务器可执行文件。之后，服务器提供的控件将对ActiveX客户端可用。</target>
        </trans-unit>
        <trans-unit id="14bd0a3d9cc58e093620fbe1426775b51697ae9b" translate="yes" xml:space="preserve">
          <source>When your ActiveX server is part of an installation package, use the &lt;code&gt;regsvr32&lt;/code&gt; tool provided by Microsoft to register the controls on the target system. If this tool is not present, load the DLL into your installer process, resolve the &lt;code&gt;DllRegisterServer&lt;/code&gt; symbol and call the function:</source>
          <target state="translated">当您的ActiveX服务器是安装软件包的一部分时，请使用Microsoft提供的 &lt;code&gt;regsvr32&lt;/code&gt; 工具在目标系统上注册控件。如果不存在此工具，则将DLL加载到安装程序进程中，解析 &lt;code&gt;DllRegisterServer&lt;/code&gt; 符号并调用该函数：</target>
        </trans-unit>
        <trans-unit id="65dc96c99575af20d0c9102011208535a2e1118f" translate="yes" xml:space="preserve">
          <source>When your application loads a QML or JavaScript file for the first time, the QML engine compiles the file into a byte code representation on the fly and runs it. The compiling process can be time consuming, and subsequent loads of the same document yield the same result. To optimize this step, the QML engine can cache the result. It stores the byte code in a cache file and later loads the cache file instead of re-compiling when the same file is requested again. Usually the files are stored in a subdirectory &lt;code&gt;qmlcache&lt;/code&gt; of the system's cache directory, as denoted by &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::CacheLocation&lt;/a&gt;. Checks are in place to make sure that the cache files are only loaded if all of the following conditions are met:</source>
          <target state="translated">当您的应用程序首次加载QML或JavaScript文件时，QML引擎会即时将该文件编译为字节码表示形式并运行它。编译过程可能很耗时，并且相同文档的后续加载会产生相同的结果。为了优化此步骤，QML引擎可以缓存结果。它将字节代码存储在高速缓存文件中，然后在再次请求相同文件时加载高速缓存文件，而不是重新编译。通常，文件存储在系统缓存目录的子目录 &lt;code&gt;qmlcache&lt;/code&gt; 中，如&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths :: CacheLocation所示&lt;/a&gt;。检查到位以确保仅在满足以下所有条件的情况下才加载缓存文件：</target>
        </trans-unit>
        <trans-unit id="ccc533c9390848ea4b2a56fc523e5772f7a9f05a" translate="yes" xml:space="preserve">
          <source>When your model has a consistent silhouette, you can apply an opacity map that makes the outer edge of the geometry transparent. Using a gradient for the opacity will let the edge of the object smoothly disappear. However, even if your opacity map transitions directly from fully-opaque to fully-transparent over the space of one pixel, the result will still provide anti-aliased edges as seen in the example above. This is because image maps, including opacity maps, use bilinear interpolation.</source>
          <target state="translated">当你的模型有一个一致的轮廓时,你可以应用一个不透明度贴图,使几何体的外缘透明。对不透明度使用渐变会让对象的边缘平滑地消失。然而,即使你的不透明度贴图在一个像素的空间内直接从完全不透明过渡到完全透明,结果仍然会提供反锯齿边缘,如上例所示。这是因为图像贴图,包括不透明度贴图,使用双线插值。</target>
        </trans-unit>
        <trans-unit id="027ec3bc4d20f0e86797e47980aa9a9475deabbe" translate="yes" xml:space="preserve">
          <source>Whenever `processTextMessage()` is triggered, we retrieve the sender, and if valid, send back the original message (`sendTextMessage()`). The same is done with binary messages.</source>
          <target state="translated">每当 &quot;processTextMessage()&quot;被触发时,我们就检索发件人,如果有效,就发回原始消息(&quot;sendTextMessage()&quot;)。对于二进制消息也是如此。</target>
        </trans-unit>
        <trans-unit id="3cd3563583d0b4557a8fb5a3af277b71d7d4fa6f" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBox&lt;/a&gt; is clicked, it emits the &lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">每当单击&lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBox时&lt;/a&gt;，它都会发出&lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked（）&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="b506669184758650a5512c38b3282045fabaae85" translate="yes" xml:space="preserve">
          <source>Whenever a CheckBox is clicked, it emits the &lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">每当单击CheckBox时，它都会发出&lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked（）&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="53a69c8a1f964bb9777baba93c7827da52f72065" translate="yes" xml:space="preserve">
          <source>Whenever a button is switched on or off, it emits the &lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt;() signal. Connect to this signal if you want to trigger an action each time the button changes state. Use &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() to see if a particular button is selected.</source>
          <target state="translated">每当按钮打开或关闭时，它都会发出&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;切换&lt;/a&gt;（）信号。如果您想在每次按钮更改状态时触发一个动作，请连接到此信号。使用&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（）查看是否选择了特定按钮。</target>
        </trans-unit>
        <trans-unit id="98df15d5cd2ca206ae0b777515f1789f82058d70" translate="yes" xml:space="preserve">
          <source>Whenever a checkbox is checked or cleared, it emits the signal &lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;stateChanged&lt;/a&gt;(). Connect to this signal if you want to trigger an action each time the checkbox changes state. You can use &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() to query whether or not a checkbox is checked.</source>
          <target state="translated">每当选中或清除复选框时，它都会发出信号&lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）。如果您想在每次复选框更改状态时触发操作，请连接到此信号。您可以使用&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（）查询是否选中了一个复选框。</target>
        </trans-unit>
        <trans-unit id="622050ab0f3753e8f422b1fec5fa59fed4693f03" translate="yes" xml:space="preserve">
          <source>Whenever a help event occurs, this function is called with the</source>
          <target state="translated">每当有帮助事件发生时,这个函数就会被调用,并以</target>
        </trans-unit>
        <trans-unit id="695fe6b59174187c21971601195bbbdc7ae00fac" translate="yes" xml:space="preserve">
          <source>Whenever a message is received, we write it out.</source>
          <target state="translated">每当收到一条信息,我们就把它写出来。</target>
        </trans-unit>
        <trans-unit id="90fe0cc17049ffdb58a0f22d6b9f296fcdc96921" translate="yes" xml:space="preserve">
          <source>Whenever a new frame is available in the movie, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will emit &lt;a href=&quot;qmovie#updated&quot;&gt;updated&lt;/a&gt;(). If the size of the frame changes, &lt;a href=&quot;qmovie#resized&quot;&gt;resized&lt;/a&gt;() is emitted. You can call &lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;() or &lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;() to get a copy of the current frame. When the movie is done, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; emits &lt;a href=&quot;qmovie#finished&quot;&gt;finished&lt;/a&gt;(). If any error occurs during playback (i.e, the image file is corrupt), &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will emit &lt;a href=&quot;qmovie#error&quot;&gt;error&lt;/a&gt;().</source>
          <target state="translated">只要电影中有新帧，&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;就会发出&lt;a href=&quot;qmovie#updated&quot;&gt;更新的&lt;/a&gt;（）。如果帧的大小发生变化，则发出&lt;a href=&quot;qmovie#resized&quot;&gt;resize&lt;/a&gt;（）。您可以调用&lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;（）或&lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;（）来获取当前帧的副本。电影&lt;a href=&quot;qmovie&quot;&gt;播放&lt;/a&gt;&lt;a href=&quot;qmovie#finished&quot;&gt;完后&lt;/a&gt;，QMovie发出finish（）。如果在播放过程中发生任何错误（即，图像文件已损坏），则&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;将发出&lt;a href=&quot;qmovie#error&quot;&gt;错误&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="dea4145ce4f75997826b07037b31828f8852e594" translate="yes" xml:space="preserve">
          <source>Whenever a new frame is available in the movie, QMovie will emit &lt;a href=&quot;qmovie#updated&quot;&gt;updated&lt;/a&gt;(). If the size of the frame changes, &lt;a href=&quot;qmovie#resized&quot;&gt;resized&lt;/a&gt;() is emitted. You can call &lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;() or &lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;() to get a copy of the current frame. When the movie is done, QMovie emits &lt;a href=&quot;qmovie#finished&quot;&gt;finished&lt;/a&gt;(). If any error occurs during playback (i.e, the image file is corrupt), QMovie will emit &lt;a href=&quot;qmovie#error&quot;&gt;error&lt;/a&gt;().</source>
          <target state="translated">只要电影中有新的帧，QMovie就会发出&lt;a href=&quot;qmovie#updated&quot;&gt;更新的&lt;/a&gt;（）。如果帧的大小发生变化，则发出&lt;a href=&quot;qmovie#resized&quot;&gt;resize&lt;/a&gt;（）。您可以调用&lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;（）或&lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;（）来获取当前帧的副本。电影播放&lt;a href=&quot;qmovie#finished&quot;&gt;完后&lt;/a&gt;，QMovie发出finish （）。如果在播放过程中发生任何错误（即，图像文件已损坏），则QMovie将发出&lt;a href=&quot;qmovie#error&quot;&gt;错误&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="ce06d5f1ff8e225d1adc268c9cdd8c9e9dc54f82" translate="yes" xml:space="preserve">
          <source>Whenever a socket is disconnected, we remove it from the clients list and delete the socket. Note: it is best to use `deleteLater()` to delete the socket.</source>
          <target state="translated">每当一个套接字被断开时,我们都会将其从客户端列表中删除,并删除该套接字。注意:最好使用`deleteLater()`来删除socket。</target>
        </trans-unit>
        <trans-unit id="73df17f4d1de1623ad4e92d56228608091517aaf" translate="yes" xml:space="preserve">
          <source>Whenever a widget loses focus, the widget's current value is set to the item model.</source>
          <target state="translated">每当小组件失去焦点时,小组件的当前值就会被设置为项目模型。</target>
        </trans-unit>
        <trans-unit id="aeeb8caf9d0b96887fbffb95f418d29cecb00031" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, all items beneath the new item are displaced, causing them to move down (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the new item that has been added to the view; to animate the added items, set the &lt;a href=&quot;qml-qtquick-gridview#add-signal&quot;&gt;add&lt;/a&gt; property.</source>
          <target state="translated">每当将一个项目添加到上方视图时，新项目下方的所有项目都会移位，从而导致它们在视图内向下移动（或横向移动，如果是水平方向）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此过渡不适用于已添加到视图中的新项目。要为添加的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-gridview#add-signal&quot;&gt;add&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="78d2be573356e883c161ace1948bad51ebd33c75" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, all items beneath the new item are displaced, causing them to move down (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the new item that has been added to the view; to animate the added items, set the &lt;a href=&quot;qml-qtquick-listview#add-signal&quot;&gt;add&lt;/a&gt; property.</source>
          <target state="translated">每当将一个项目添加到上方视图时，新项目下方的所有项目都会移位，从而导致它们在视图内向下移动（或横向移动，如果是水平方向）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此过渡不适用于已添加到视图中的新项目。要为添加的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-listview#add-signal&quot;&gt;add&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="a92651cada4705e95a6599aa36b9830bb5133d4d" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, the item will be animated from the position (100,100) to its final x,y position within the view, over one second. The transition only applies to the new items that are added to the view; it does not apply to the items below that are displaced by the addition of the new items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">只要将项目添加到上方视图中，该项目就会在一秒内从位置（100,100）到视图中其最终x，y位置进行动画处理。过渡仅适用于添加到视图中的新项目。它不适用于以下因添加新项目而被替换的项目。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="fedd4c064ea3bd87026e3e226e4cb864f52ee584" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, the item will be animated from the position (100,100) to its final x,y position within the view, over one second. The transition only applies to the new items that are added to the view; it does not apply to the items below that are displaced by the addition of the new items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">只要将项目添加到上方视图中，该项目就会在一秒内从位置（100,100）到视图中其最终x，y位置进行动画处理。过渡仅适用于添加到视图中的新项目。它不适用于以下因添加新项目而被替换的项目。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="9ee2054577a98ab0392d1b4d7970f9f828507766" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, all items beneath it are displaced, causing them to move upwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the item that has actually been removed from the view; to animate the removed items, set the &lt;a href=&quot;qml-qtquick-gridview#remove-signal&quot;&gt;remove&lt;/a&gt; property.</source>
          <target state="translated">每当从上面的视图中删除一个项目时，它下面的所有项目都将移动，从而导致它们在视图内向上移动（或横向移动，如果水平放置）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此过渡不适用于实际上已从视图中删除的项目；要为删除的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-gridview#remove-signal&quot;&gt;remove&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="cdeea51a30e773755896b273b1df58c42cfa78ae" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, all items beneath it are displaced, causing them to move upwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the item that has actually been removed from the view; to animate the removed items, set the &lt;a href=&quot;qml-qtquick-listview#remove-signal&quot;&gt;remove&lt;/a&gt; property.</source>
          <target state="translated">每当从上面的视图中删除一个项目时，它下面的所有项目都将移动，从而导致它们在视图内向上移动（或横向移动，如果水平放置）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此过渡不适用于实际上已从视图中删除的项目；要为删除的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-listview#remove-signal&quot;&gt;remove&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="67676ecbc12193a248e3d1903f192afb7d8ef887" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, the item will be animated to the position (100,100) over one second, and in parallel will also change its opacity to 0. The transition only applies to the items that are removed from the view; it does not apply to the items below them that are displaced by the removal of the items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">每当从上面的视图中删除一个项目时，该项目将在1秒钟内动画化到位置（100,100），同时还将其不透明度更改为0。过渡仅适用于从视图中删除的项目；它不适用于由于移除这些物品而移位的下方物品。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="2afd00d420f68d960660023e82ce1e61cc08329e" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, the item will be animated to the position (100,100) over one second, and in parallel will also change its opacity to 0. The transition only applies to the items that are removed from the view; it does not apply to the items below them that are displaced by the removal of the items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">每当从上面的视图中删除一个项目时，该项目将在1秒钟内动画化到位置（100,100），同时还将其不透明度更改为0。过渡仅适用于从视图中删除的项目；它不适用于由于移除这些物品而移位的下方物品。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="cfc98cc90a563ec8a39f14335a650018c11cc6a6" translate="yes" xml:space="preserve">
          <source>Whenever an object has a property of type URL (&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;), assigning a string to that property will actually assign an absolute URL - by resolving the string against the URL of the document where the string is used.</source>
          <target state="translated">每当一个对象具有URL（&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;）类型的属性时，为该属性分配字符串实际上将分配一个绝对URL-通过将字符串与使用该字符串的文档的URL进行解析。</target>
        </trans-unit>
        <trans-unit id="40cd1e35d67f7694a72feed5daaea2235bf6410d" translate="yes" xml:space="preserve">
          <source>Whenever making decisions regarding memory allocation or performance trade-offs, it is important to keep in mind the impact of CPU-cache performance, operating system paging, and JavaScript engine garbage collection. Potential solutions should be benchmarked carefully in order to ensure that the best one is selected.</source>
          <target state="translated">每当做出有关内存分配或性能权衡的决定时,必须牢记CPU缓存性能、操作系统分页和JavaScript引擎垃圾收集的影响。应该仔细地对潜在的解决方案进行基准测试,以确保选择最佳的解决方案。</target>
        </trans-unit>
        <trans-unit id="6a3c3d9411e762b86fd3a5863bcca1bdd7dc8c51" translate="yes" xml:space="preserve">
          <source>Whenever possible, use the</source>
          <target state="translated">在可能的情况下,使用</target>
        </trans-unit>
        <trans-unit id="b69002a47278bca07bf9cc0356566ca80fcfbcc1" translate="yes" xml:space="preserve">
          <source>Whenever re-applying data obtained with QUrl::FullyDecoded into a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, care must be taken to use the &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; parameter to the setters (like &lt;a href=&quot;qurl#setPath&quot;&gt;setPath&lt;/a&gt;() and &lt;a href=&quot;qurl#setUserName&quot;&gt;setUserName&lt;/a&gt;()). Failure to do so may cause re-interpretation of the percent character ('%') as the beginning of a percent-encoded sequence.</source>
          <target state="translated">每当将通过QUrl :: FullyDecoded获得的数据重新应用到&lt;a href=&quot;qurl&quot;&gt;QUrl时&lt;/a&gt;，都必须注意将&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl :: DecodedMode&lt;/a&gt;参数用于设置器（例如&lt;a href=&quot;qurl#setPath&quot;&gt;setPath&lt;/a&gt;（）和&lt;a href=&quot;qurl#setUserName&quot;&gt;setUserName&lt;/a&gt;（））。否则，可能导致将百分比字符（'％'）重新解释为百分比编码序列的开始。</target>
        </trans-unit>
        <trans-unit id="7197f3cbde6d24213802f4f813e9afce6114c878" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the items between the source and destination indexes of the move operation are displaced, causing them to move upwards or downwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the items that are the actual subjects of the move operation; to animate the moved items, set the &lt;a href=&quot;qml-qtquick-gridview#move-prop&quot;&gt;move&lt;/a&gt; property.</source>
          <target state="translated">每当&lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;模型&lt;/a&gt;执行移动操作以移动一组特定的索引时，该移动操作的源索引和目标索引之间的项目就会移位，从而导致它们在视图内向上或向下移动（或横向移动，如果是水平方向）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此转换不适用于作为移动操作实际主题的项目；要为移动的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-gridview#move-prop&quot;&gt;move&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="4eafa499c61ca66b47ae5a64ffa25154048cdb36" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the respective items in the view will be animated to their new positions in the view over one second. The transition only applies to the items that are the subject of the move operation in the model; it does not apply to items below them that are displaced by the move operation. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">每当&lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;模型&lt;/a&gt;执行移动操作以移动一组特定的索引时，视图中的各个项目将在一秒钟内被动画化到视图中的新位置。过渡仅适用于模型中作为移动操作主题的项目；它不适用于由于移动操作而在其下方移动的物品。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="c1337f1735bc8b49ad5d3a854d08f4521666286f" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the items between the source and destination indexes of the move operation are displaced, causing them to move upwards or downwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the items that are the actual subjects of the move operation; to animate the moved items, set the &lt;a href=&quot;qml-qtquick-listview#move-prop&quot;&gt;move&lt;/a&gt; property.</source>
          <target state="translated">每当&lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;模型&lt;/a&gt;执行移动操作以移动一组特定的索引时，该移动操作的源索引和目标索引之间的项目就会移位，从而导致它们在视图内向上或向下移动（或横向移动，如果是水平方向）。当发生这种位移时，将按指定的&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;时间&lt;/a&gt;在一秒内通过NumberAnimation为视图中的项目移动到其新的x，y位置进行动画处理。此转换不适用于作为移动操作实际主题的项目；要为移动的项目设置动画，请设置&lt;a href=&quot;qml-qtquick-listview#move-prop&quot;&gt;move&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="ae168b2b3b3e8491daed829e8981a3546f712af4" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the respective items in the view will be animated to their new positions in the view over one second. The transition only applies to the items that are the subject of the move operation in the model; it does not apply to items below them that are displaced by the move operation. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">每当&lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;模型&lt;/a&gt;执行移动操作以移动一组特定的索引时，视图中的各个项目将在一秒钟内被动画化到视图中的新位置。过渡仅适用于模型中作为移动操作主题的项目；它不适用于由于移动操作而在其下方移动的物品。要设置置换对象的动画，请设置&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;置换&lt;/a&gt;或&lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="312d51cc1df09e3da5c1a58d9d776f953d5789e4" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;'s &lt;code&gt;tapped&lt;/code&gt; signal is emitted, the &lt;code&gt;send&lt;/code&gt; signal will automatically be emitted as well.</source>
          <target state="translated">每当发射&lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;的 &lt;code&gt;tapped&lt;/code&gt; 信号时， &lt;code&gt;send&lt;/code&gt; 信号也会自动发射。</target>
        </trans-unit>
        <trans-unit id="9576aa0bc72ea121c51b19950d20787edffca2bb" translate="yes" xml:space="preserve">
          <source>Whenever the current widget in the layout changes or a widget is removed from the layout, the &lt;a href=&quot;qstackedlayout#currentChanged&quot;&gt;currentChanged&lt;/a&gt;() and &lt;a href=&quot;qstackedlayout#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;() signals are emitted respectively.</source>
          <target state="translated">每当布局中的当前窗口小部件更改或从布局中删除窗口小部件时，&lt;a href=&quot;qstackedlayout#widgetRemoved&quot;&gt;就会&lt;/a&gt;分别发出&lt;a href=&quot;qstackedlayout#currentChanged&quot;&gt;currentChanged&lt;/a&gt;（）和widgetRemoved（）信号。</target>
        </trans-unit>
        <trans-unit id="2fcf7292f793de5fb0c3b7f25d1338a1fbc959c5" translate="yes" xml:space="preserve">
          <source>Whenever the current widget in the stacked widget changes or a widget is removed from the stacked widget, the &lt;a href=&quot;qstackedwidget#currentChanged&quot;&gt;currentChanged&lt;/a&gt;() and &lt;a href=&quot;qstackedwidget#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;() signals are emitted respectively.</source>
          <target state="translated">每当堆叠的窗口小部件中的当前窗口小部件发生更改或从堆叠的窗口小部件中删除窗口小部件时，&lt;a href=&quot;qstackedwidget#widgetRemoved&quot;&gt;就会&lt;/a&gt;分别发出&lt;a href=&quot;qstackedwidget#currentChanged&quot;&gt;currentChanged&lt;/a&gt;（）和widgetRemoved（）信号。</target>
        </trans-unit>
        <trans-unit id="1c80e7b5c4fae4e99cfb0927909f6c46e4768a09" translate="yes" xml:space="preserve">
          <source>Whenever the height of the parent rectangle changes, the height of the blue rectangle automatically updates to be of the same value.</source>
          <target state="translated">每当父矩形的高度发生变化时,蓝色矩形的高度会自动更新为相同的值。</target>
        </trans-unit>
        <trans-unit id="6af29bff3595f2471deb90ce61a0ea67813b87c4" translate="yes" xml:space="preserve">
          <source>Whenever the stack returns to this state through the use of undo/redo commands, it emits the signal &lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;(). This signal is also emitted when the stack leaves the clean state.</source>
          <target state="translated">每当堆栈通过使用撤消/重做命令返回到此状态时，它都会发出信号&lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;（）。当堆栈离开清洁状态时，也会发出此信号。</target>
        </trans-unit>
        <trans-unit id="1e1b23a9100f3611f6cf8c3c148eab441d5bca9d" translate="yes" xml:space="preserve">
          <source>Where &quot;example&quot; is the identifier to use to uniquely identify this set of tests. Finally, add &lt;code&gt;CONFIG += qmltestcase&lt;/code&gt; to the project file:</source>
          <target state="translated">其中&amp;ldquo;示例&amp;rdquo;是用于唯一标识这组测试的标识符。最后，将 &lt;code&gt;CONFIG += qmltestcase&lt;/code&gt; 添加到项目文件中：</target>
        </trans-unit>
        <trans-unit id="9e105a40b89e83cd14ee624f6364465c2e91af73" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;arch&amp;gt; can take a value of: &lt;code&gt;arm&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, &lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x86_64&lt;/code&gt;.</source>
          <target state="translated">其中&amp;lt;arch&amp;gt;可以取值为： &lt;code&gt;arm&lt;/code&gt; ， &lt;code&gt;arm64&lt;/code&gt; ， &lt;code&gt;x86&lt;/code&gt; ， &lt;code&gt;x86_64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e60e5656f07f947fa3b6795e9084ca0fb310950" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; refers to a local network port. The web developer tools can then be accessed by launching a browser at the address &lt;code&gt;http://localhost:&amp;lt;port_number&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; 指的是本地网络端口。然后，可以通过启动地址为 &lt;code&gt;http://localhost:&amp;lt;port_number&amp;gt;&lt;/code&gt; 的浏览器来访问Web开发人员工具。</target>
        </trans-unit>
        <trans-unit id="1ccb20ef56eb59f145da42f8c73e2d50a4d5c84e" translate="yes" xml:space="preserve">
          <source>Where Java and C++ are</source>
          <target state="translated">Java和C++是什么?</target>
        </trans-unit>
        <trans-unit id="5fe26829762535c4f6607cb6eff88448d6a0cf28" translate="yes" xml:space="preserve">
          <source>Where To Go From Here</source>
          <target state="translated">何去何从</target>
        </trans-unit>
        <trans-unit id="a4126a2b85566e3cc6be9c07a1704ba767059ac6" translate="yes" xml:space="preserve">
          <source>Where a traditional 2D API, such as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, Cairo or &lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;, is written to handle thousands of individual draw calls per frame, OpenGL is a pure hardware API and performs best when the number of draw calls is very low and state changes are kept to a minimum. Consider the following use case:</source>
          <target state="translated">在编写传统的2D API（例如&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;，Cairo或&lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;）以处理每帧数千个单独的绘制调用的情况下，OpenGL是一种纯硬件API，当绘制调用的次数非常少且状态更改保持为低时，其性能最佳。最低。考虑以下用例：</target>
        </trans-unit>
        <trans-unit id="bd67edc7c5b1892b7a13306768dc165ddac00d26" translate="yes" xml:space="preserve">
          <source>Where applicable (Vulkan, Direct3D), enables the graphics API implementation's debug and/or validation layers, if available.</source>
          <target state="translated">在适用的情况下(Vulkan、Direct3D),启用图形API实现的调试和/或验证层(如果可用)。</target>
        </trans-unit>
        <trans-unit id="c0801f30b2ef37ca11d8e39aebcc01052b29ae10" translate="yes" xml:space="preserve">
          <source>Where possible, use programmatic means, such as verifying properties of objects and variables, instead of capturing and comparing bitmaps.</source>
          <target state="translated">在可能的情况下,使用程序化的手段,如验证对象和变量的属性,而不是捕捉和比较位图。</target>
        </trans-unit>
        <trans-unit id="d1c4c915ffa0d273da9dcbd143eb982e3969434e" translate="yes" xml:space="preserve">
          <source>Where rotation around an axis is used, the rotation shall be expressed as a Right Hand rotation.</source>
          <target state="translated">当使用绕轴旋转时,应以右手旋转来表示。</target>
        </trans-unit>
        <trans-unit id="952ee39a9cfff990fc53dd4027e5610fab89057e" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; and &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API requires a bit of boilerplate code to create a functioning material, the &lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt; tries to hide some of this through the use of templates.</source>
          <target state="translated">如果&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;和&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API需要一些样板代码来创建起作用的材料，则&lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt;尝试通过使用模板来隐藏其中的一些内容。</target>
        </trans-unit>
        <trans-unit id="8fdf085fc05f049a1769f3683bf038d0dfa4f7f4" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; and &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API requires a bit of boilerplate code to create a functioning material, the QSGSimpleMaterialShader tries to hide some of this through the use of templates.</source>
          <target state="translated">如果&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;和&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API需要一些样板代码来创建起作用的材料，则QSGSimpleMaterialShader会尝试通过使用模板来隐藏其中的一些内容。</target>
        </trans-unit>
        <trans-unit id="ff4b3d1492ec67a940dc896fa1d87c9ba99f2fdd" translate="yes" xml:space="preserve">
          <source>Where the time zone display names have changed over time then the most recent names will be used.</source>
          <target state="translated">如果时区显示名称随着时间的推移而改变,则将使用最新的名称。</target>
        </trans-unit>
        <trans-unit id="b8883f0096050f1e4dd29bf9f7b6190b35e33b6d" translate="yes" xml:space="preserve">
          <source>Where to Go from Here</source>
          <target state="translated">何去何从</target>
        </trans-unit>
        <trans-unit id="ca2aed1ce9ee9fb4480d35e3c0166d266a031dfb" translate="yes" xml:space="preserve">
          <source>Where will the Qt build be deployed on the device? In the example we will use &lt;code&gt;/usr/local/qt6&lt;/code&gt;.</source>
          <target state="translated">Qt构建将在哪里部署在设备上？在示例中，我们将使用 &lt;code&gt;/usr/local/qt6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20ff5fb97d054b614eee2ba69d3d9ff5254b0b75" translate="yes" xml:space="preserve">
          <source>Where will the Qt build be installed on the local system once the build completes? In the example we will use &lt;code&gt;$HOME/qt6-rpi&lt;/code&gt;.</source>
          <target state="translated">构建完成后，将在本地系统上将Qt构建安装在何处？在示例中，我们将使用 &lt;code&gt;$HOME/qt6-rpi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52d06efbef6698a9090cd765a2d437e704a1a5e2" translate="yes" xml:space="preserve">
          <source>Where with &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; you would write:</source>
          <target state="translated">使用&lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt;可以在哪里写：</target>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="f4092a9df66ba8f2af73c5f2492f8269ffdc70eb" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt; can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">而&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt;从单一的动画片段获取其动画数据，&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;能够融合在一起多个片段。动画数据是通过评估所谓的</target>
        </trans-unit>
        <trans-unit id="129aad2c02bf5a9a4dd80cc4832a2669b5535e5f" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, BlendedClipAnimator can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">而&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt;从单一的动画片段获取其动画数据，BlendedClipAnimator能够融合在一起多个片段。动画数据是通过评估所谓的</target>
        </trans-unit>
        <trans-unit id="804bb2445f1402ea00ca4b54f378df57627e0205" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt; can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">而&lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt;从单一的动画片段获取其动画数据，&lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt;能够融合在一起多个片段。动画数据是通过评估所谓的</target>
        </trans-unit>
        <trans-unit id="846f3e0882dcf22331fd8436d7896ee93de9c4e3" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, QBlendedClipAnimator can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">而&lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt;从单一的动画片段获取其动画数据，QBlendedClipAnimator能够融合在一起多个片段。动画数据是通过评估所谓的</target>
        </trans-unit>
        <trans-unit id="9e1667965fb72ff02c0f89f70ccdb72aa593f105" translate="yes" xml:space="preserve">
          <source>Whereas a traditional 2D API, such as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, Cairo or &lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;, is written to handle thousands of individual draw calls per frame, OpenGL and other hardware accelerated APIs perform best when the number of draw calls is very low and state changes are kept to a minimum.</source>
          <target state="translated">传统的2D API（例如&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;，Cairo或&lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;）被编写为每帧处理数千个单独的绘制调用，而当绘制调用的次数非常少且状态更改保持在一定水平时，OpenGL和其他硬件加速的API表现最佳。最低限度。</target>
        </trans-unit>
        <trans-unit id="df6677fe4ed41b6de2a02f43a28dc5ef92063aba" translate="yes" xml:space="preserve">
          <source>Wherever your program uses a string literal (quoted text) that will be presented to the user, ensure that it is processed by the &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() function. Essentially all that is necessary to achieve this is to use the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function to obtain translated text for your classes, typically for display purposes. This function is also used to indicate which text strings in an application are translatable.</source>
          <target state="translated">无论程序在何处使用将显示给用户的字符串文字（带引号的文本），请确保由&lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication :: translate&lt;/a&gt;（）函数对其进行处理。基本上，实现此目的所需的所有操作是使用&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;函数获取类的翻译文本，通常用于显示目的。此功能还用于指示应用程序中哪些文本字符串可翻译。</target>
        </trans-unit>
        <trans-unit id="9a2b119e0e1b94041afad99d2082aedabe60692d" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; paints alternating row colors for the area that does not have any items.</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;是否为没有任何项目的区域绘制交替的行颜色。</target>
        </trans-unit>
        <trans-unit id="7479afd99480f623a47cad8dc7dc8c35d62ddf02" translate="yes" xml:space="preserve">
          <source>Whether a tab bar should suggest a size to prevent scoll arrows.</source>
          <target state="translated">标签栏是否应该建议一个尺寸,以防止滚动箭头。</target>
        </trans-unit>
        <trans-unit id="27d2672fc5a7413ecd5e7f19492a53aff397d05c" translate="yes" xml:space="preserve">
          <source>Whether and how the background image is repeated to fill the &lt;code&gt;background-origin&lt;/code&gt; rectangle.</source>
          <target state="translated">是否重复背景图像以及如何重复背景图像以填充 &lt;code&gt;background-origin&lt;/code&gt; 矩形。</target>
        </trans-unit>
        <trans-unit id="f522af9862a1abe54c91f2811e719d24e11b59a8" translate="yes" xml:space="preserve">
          <source>Whether anything will be available for reading from the returned object is protocol dependent. For HTTP, the server may send a small HTML page indicating the upload was successful (or not). Other protocols will probably have content in their replies.</source>
          <target state="translated">是否有任何东西可以从返回的对象中读取是依赖于协议的。对于HTTP,服务器可能会发送一个小的HTML页面,表明上传成功(或不成功)。其他协议可能会在其回复中包含内容。</target>
        </trans-unit>
        <trans-unit id="a6fc5303526351baac559d5b0c024e2b8b1e467d" translate="yes" xml:space="preserve">
          <source>Whether clipping is enabled or not is dirty and needs to be updated.</source>
          <target state="translated">是否启用剪接是脏,需要更新。</target>
        </trans-unit>
        <trans-unit id="891d6c71b96dc92f38e7de49fa32354e43d7aa65" translate="yes" xml:space="preserve">
          <source>Whether cursor should blink when text is selected.</source>
          <target state="translated">当选择文本时,光标是否应该闪烁。</target>
        </trans-unit>
        <trans-unit id="f536d64fe87af77f3302f5448b26e34a3608e7e7" translate="yes" xml:space="preserve">
          <source>Whether it's a 32- or 64-bit application. Possible values are: &quot;llp64&quot; (Windows 64-bit), &quot;lp64&quot; (Unix 64-bit), &quot;ilp32&quot; (32-bit)</source>
          <target state="translated">是32位还是64位的应用程序。可能的值有。&quot;lp64&quot;(Windows 64位)、&quot;lp64&quot;(Unix 64位)、&quot;ilp32&quot;(32位)</target>
        </trans-unit>
        <trans-unit id="88159a3d977ef502f02f2a123d6990749dcb7c82" translate="yes" xml:space="preserve">
          <source>Whether more than one filename can be selected.</source>
          <target state="translated">是否可以选择一个以上的文件名。</target>
        </trans-unit>
        <trans-unit id="351fd14608eef6c08e17ef09a05f49229c55a5dc" translate="yes" xml:space="preserve">
          <source>Whether numbers are localized.</source>
          <target state="translated">数字是否本地化。</target>
        </trans-unit>
        <trans-unit id="fdd3579e60a02aac738192bea12695a023ba77d5" translate="yes" xml:space="preserve">
          <source>Whether offsets specified using &lt;a href=&quot;#left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;#right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;#top-prop&quot;&gt;top&lt;/a&gt;, and &lt;a href=&quot;#bottom-prop&quot;&gt;bottom&lt;/a&gt; are relative or absolute coordinates.</source>
          <target state="translated">使用&lt;a href=&quot;#left-prop&quot;&gt;left&lt;/a&gt;，&lt;a href=&quot;#right-prop&quot;&gt;right&lt;/a&gt;，&lt;a href=&quot;#top-prop&quot;&gt;top&lt;/a&gt;和&lt;a href=&quot;#bottom-prop&quot;&gt;bottom&lt;/a&gt;指定的偏移量是相对坐标还是绝对坐标。</target>
        </trans-unit>
        <trans-unit id="3af21ab04403fdec385f370eafd737a810bb7461" translate="yes" xml:space="preserve">
          <source>Whether offsets specified using &lt;a href=&quot;stylesheet-reference#left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#top-prop&quot;&gt;top&lt;/a&gt;, and &lt;a href=&quot;stylesheet-reference#bottom-prop&quot;&gt;bottom&lt;/a&gt; are relative or absolute coordinates.</source>
          <target state="translated">使用&lt;a href=&quot;stylesheet-reference#left-prop&quot;&gt;left&lt;/a&gt;，&lt;a href=&quot;stylesheet-reference#right-prop&quot;&gt;right&lt;/a&gt;，&lt;a href=&quot;stylesheet-reference#top-prop&quot;&gt;top&lt;/a&gt;和&lt;a href=&quot;stylesheet-reference#bottom-prop&quot;&gt;bottom&lt;/a&gt;指定的偏移量是相对坐标还是绝对坐标。</target>
        </trans-unit>
        <trans-unit id="615c9e373bf582bda486791fb038c25503b09240" translate="yes" xml:space="preserve">
          <source>Whether only existing files or directories can be selected.</source>
          <target state="translated">是否只能选择现有的文件或目录。</target>
        </trans-unit>
        <trans-unit id="0fc0e926e626973c36cb23fef10be34740429705" translate="yes" xml:space="preserve">
          <source>Whether or not a scroll bar has a context menu.</source>
          <target state="translated">滚动条是否有上下文菜单。</target>
        </trans-unit>
        <trans-unit id="e975490d1d1d8e036dbd88951f98d62fa4a9e421" translate="yes" xml:space="preserve">
          <source>Whether or not an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; has active focus can be queried through the &lt;code&gt;Item::activeFocus&lt;/code&gt; property. For example, here we have a &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; type whose text is determined by whether or not it has active focus.</source>
          <target state="translated">无论一个&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;已经自动对焦可通过查询 &lt;code&gt;Item::activeFocus&lt;/code&gt; 财产。例如，这里有一个&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;类型，其文本由其是否具有活动焦点来确定。</target>
        </trans-unit>
        <trans-unit id="3ef85e6b7ba3ab7e4c00b4ec7423e9327a00a361" translate="yes" xml:space="preserve">
          <source>Whether or not end points are drawn when the pen width is 0 or 1 depends on the cap style. Using &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::SquareCap&lt;/a&gt; or &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::RoundCap&lt;/a&gt; they are drawn, using &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::FlatCap&lt;/a&gt; they are not drawn.</source>
          <target state="translated">笔宽为0或1时是否绘制端点取决于笔帽样式。使用&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt :: SquareCap&lt;/a&gt;或&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt :: RoundCap&lt;/a&gt;绘制它们，而使用&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt :: FlatCap&lt;/a&gt;则不绘制它们。</target>
        </trans-unit>
        <trans-unit id="0fdef606fa391f439f4e94770a38e210051c3a1a" translate="yes" xml:space="preserve">
          <source>Whether or not the cache should be in-memory only. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;. When set to &lt;b&gt;true&lt;/b&gt;, the disk cache is never created. The ambient cache will work in-memory, but the offline database cannot be used with this option enabled.</source>
          <target state="translated">缓存是否仅应在内存中。有效值为&lt;b&gt;true&lt;/b&gt;和&lt;b&gt;false&lt;/b&gt;。默认值为&lt;b&gt;false&lt;/b&gt;。设置为&lt;b&gt;true时&lt;/b&gt;，永远不会创建磁盘缓存。环境高速缓存将在内存中工作，但是在启用此选项的情况下不能使用脱机数据库。</target>
        </trans-unit>
        <trans-unit id="e4800f01cf3f03c22bd30261d92d64c5bd92d1e7" translate="yes" xml:space="preserve">
          <source>Whether or not to request high dpi tiles. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;.</source>
          <target state="translated">是否请求高dpi的图块。有效值为&lt;b&gt;true&lt;/b&gt;和&lt;b&gt;false&lt;/b&gt;。默认值为&lt;b&gt;false&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="fa6c99ad4b900578d7248fa09d22485bed6fda3e" translate="yes" xml:space="preserve">
          <source>Whether or not to request high dpi tiles. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;. Please note that not all map types are available in high dpi. Setting this parameter to true might even have no effect if no map type is available in high dpi at the moment. Provider information files for high dpi tiles are named &lt;code&gt;street-hires&lt;/code&gt;, &lt;code&gt;satellite-hires&lt;/code&gt;, &lt;code&gt;cycle-hires&lt;/code&gt;, &lt;code&gt;transit-hires&lt;/code&gt;, &lt;code&gt;night-transit-hires&lt;/code&gt;, &lt;code&gt;terrain-hires&lt;/code&gt; and &lt;code&gt;hiking-hires&lt;/code&gt;. These are fetched from the same location used for the low dpi counterparts.</source>
          <target state="translated">是否请求高dpi的图块。有效值为&lt;b&gt;true&lt;/b&gt;和&lt;b&gt;false&lt;/b&gt;。默认值为&lt;b&gt;false&lt;/b&gt;。请注意，并非所有地图类型都可以使用高dpi。如果当前没有高dpi的地图类型可用，则将此参数设置为true可能甚至无效。高dpi磁贴的提供者信息文件称为 &lt;code&gt;street-hires&lt;/code&gt; ， &lt;code&gt;satellite-hires&lt;/code&gt; ， &lt;code&gt;cycle-hires&lt;/code&gt; ， &lt;code&gt;transit-hires&lt;/code&gt; ， &lt;code&gt;night-transit-hires&lt;/code&gt; ， &lt;code&gt;terrain-hires&lt;/code&gt; 和 &lt;code&gt;hiking-hires&lt;/code&gt; 。这些文件是从与低dpi对应文件相同的位置获取的。</target>
        </trans-unit>
        <trans-unit id="1f50d751bdd0ca1e8cc3139cd93bda59afb6866e" translate="yes" xml:space="preserve">
          <source>Whether or not to reverse the direction of property change if QQuickPointerScrollEvent::inverted is true. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果QQuickPointerScrollEvent :: inverted为true，是否反转属性更改的方向。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14ccd186c3ee461482c7326fa36c9623c2a63da2" translate="yes" xml:space="preserve">
          <source>Whether popup menus must support scrolling.</source>
          <target state="translated">弹出式菜单是否必须支持滚动。</target>
        </trans-unit>
        <trans-unit id="c355998709d5a91ea161e2e9efbdc94bd8c86622" translate="yes" xml:space="preserve">
          <source>Whether popup menus must support the user moving the mouse cursor to a submenu while crossing other items of the menu. This is supported on most modern desktop platforms.</source>
          <target state="translated">弹出式菜单是否必须支持用户移动鼠标光标到子菜单,同时越过菜单的其他项目。大多数现代桌面平台都支持这个功能。</target>
        </trans-unit>
        <trans-unit id="7bfd520185d930289c35d432ad81bff039435224" translate="yes" xml:space="preserve">
          <source>Whether popups should allow the selections to wrap, that is when selection should the next item be the first item.</source>
          <target state="translated">弹出窗口是否应该允许选择包裹,也就是在选择时应该将下一项作为第一项。</target>
        </trans-unit>
        <trans-unit id="9a3d16ff05060262b6fe37cd15bdb7b02685468d" translate="yes" xml:space="preserve">
          <source>Whether reverse order is used for the markers in the legend. This property is &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">图例中的标记是否使用相反的顺序。默认情况下，此属性为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ff6b09ef26c0c42bd41a6e8d723830a76216c42" translate="yes" xml:space="preserve">
          <source>Whether richtext selections should extend to the full width of the document.</source>
          <target state="translated">richtext选择是否应该扩展到文档的整个宽度。</target>
        </trans-unit>
        <trans-unit id="5d92844548ddcee7f47f82c0d52f0d492b6551db" translate="yes" xml:space="preserve">
          <source>Whether scrolling popups should fill the screen as they are scrolled.</source>
          <target state="translated">滚动的弹出窗口是否应该在滚动时填满屏幕。</target>
        </trans-unit>
        <trans-unit id="b7e9ec658e8e6fbee4a20e58cb2317e5a2859441" translate="yes" xml:space="preserve">
          <source>Whether scrollviews draw their frame only around contents (like Motif), or around contents, scroll bars and corner widgets (like Windows).</source>
          <target state="translated">滚动视图是只在内容周围画框(如Motif),还是在内容、滚动条和角落部件周围画框(如Windows)。</target>
        </trans-unit>
        <trans-unit id="008cc77dc296fe4b1f921abb283c4b2c99c1dfbd" translate="yes" xml:space="preserve">
          <source>Whether shortcuts are underlined.</source>
          <target state="translated">捷径是否有下划线。</target>
        </trans-unit>
        <trans-unit id="f31f23419bacc3b9dd9493977a9ee560f48b4e25" translate="yes" xml:space="preserve">
          <source>Whether spacing is absolute or relative to bar thickness.</source>
          <target state="translated">间距是绝对的还是相对于钢筋厚度的。</target>
        </trans-unit>
        <trans-unit id="14ccdf486541f6d046b78ebc3c46ca84f28aef3f" translate="yes" xml:space="preserve">
          <source>Whether text entered by the user will overwrite existing text.</source>
          <target state="translated">用户输入的文本是否会覆盖现有文本。</target>
        </trans-unit>
        <trans-unit id="44ed9a68ce96302bd93afa75be5a913dc9974e1f" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; should automatically be repositioned in such a way that it is transformed around the mouse cursor position while the &lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;property&lt;/a&gt; is adjusted. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">是否应自动调整&lt;a href=&quot;qmake-variable-reference#target&quot;&gt;目标的&lt;/a&gt;位置，以便在调整&lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;属性时&lt;/a&gt;围绕鼠标光标的位置对其进行转换。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="127d2d6dad872f802d502a5787fa664c518d7d37" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; should gain active focus on a mouse press. By default this is set to true.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;是否应集中在鼠标上。默认情况下，它设置为true。</target>
        </trans-unit>
        <trans-unit id="8e664258644cf6fce609f74537c27de9ea32e9ed" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; should keep the selection visible when it loses active focus to another item in the scene. By default this is set to false.</source>
          <target state="translated">当&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;失去对场景中另一个项目的主动焦点时，是否应保持选择可见。默认情况下，它设置为false。</target>
        </trans-unit>
        <trans-unit id="02b30757d1bfc1211e2b3c3bfa3a4b027191d826" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should gain active focus on a mouse press. By default this is set to true.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;是否应该通过鼠标按下来获得主动焦点。默认情况下，它设置为true。</target>
        </trans-unit>
        <trans-unit id="442e7401e06ac4bd53d35ebfcd0514393c01617d" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should keep its selection when it loses active focus to another item in the scene. By default this is set to false;</source>
          <target state="translated">当&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;失去对场景中另一个项目的主动焦点时，是否应保留其选择。默认情况下，它设置为false；</target>
        </trans-unit>
        <trans-unit id="2d56da9754f2d55c0bf314485e7193fadc26d78b" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should scroll when the text is longer than the width. By default this is set to true.</source>
          <target state="translated">当文本长于宽度时，&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;是否应滚动。默认情况下，它设置为true。</target>
        </trans-unit>
        <trans-unit id="b84569d2c058a1d40c8935ffb676582eb4339696" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; paints alternating row colors for the empty area (i.e the area where there are no items)</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;是否为空白区域（即没有项目的区域）绘制交替的行颜色</target>
        </trans-unit>
        <trans-unit id="15885eff30424361e27c06e3896534c4ffea6121" translate="yes" xml:space="preserve">
          <source>Whether the action is enabled, and can be triggered. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">该操作是否启用，并且可以被触发。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b63603a16b0a875dd05ed6eac90f935bb37e855" translate="yes" xml:space="preserve">
          <source>Whether the affected particles have their existing position/velocity/acceleration added to the new one.</source>
          <target state="translated">受影响的粒子是否将其现有的位置/速度/加速度添加到新的位置/速度/加速度中。</target>
        </trans-unit>
        <trans-unit id="b51f81c2e2c5eb6252b205609801f5564200de49" translate="yes" xml:space="preserve">
          <source>Whether the animation is played backwards after it finishes. This is an easy way to create circular animations.</source>
          <target state="translated">动画完成后是否向后播放。这是一种创建循环动画的简单方法。</target>
        </trans-unit>
        <trans-unit id="5999480ac2251870246c63b5ba009ded8d924ae6" translate="yes" xml:space="preserve">
          <source>Whether the background drop shadow effect is enabled.</source>
          <target state="translated">是否启用背景下拉阴影效果。</target>
        </trans-unit>
        <trans-unit id="8830a5c00be149d6708cd3d5520bd56902a70ed9" translate="yes" xml:space="preserve">
          <source>Whether the button has active focus.</source>
          <target state="translated">按钮是否有活动焦点。</target>
        </trans-unit>
        <trans-unit id="d39bb8df504512eda2056344d9c178981fb5fc7e" translate="yes" xml:space="preserve">
          <source>Whether the button is hovered.</source>
          <target state="translated">按钮是否被悬停。</target>
        </trans-unit>
        <trans-unit id="06019445aa3ae5cd4bf1f60ed6011fccfc4f6ab5" translate="yes" xml:space="preserve">
          <source>Whether the button is pressed.</source>
          <target state="translated">按钮是否被按下。</target>
        </trans-unit>
        <trans-unit id="f36941b4851bd2c3920b4ff750fc4cc2ea2af042" translate="yes" xml:space="preserve">
          <source>Whether the buttons in a &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; show icons</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogBu​​ttonBox中&lt;/a&gt;的按钮是否显示图标</target>
        </trans-unit>
        <trans-unit id="0445017d5d0d51a6a257d1970e1a509763b6ed2d" translate="yes" xml:space="preserve">
          <source>Whether the certificate is only self-signed.</source>
          <target state="translated">证书是否只有自签。</target>
        </trans-unit>
        <trans-unit id="63e8eeda8f01dcbef8512ab31c579994488aba62" translate="yes" xml:space="preserve">
          <source>Whether the data points are visible and should be drawn.</source>
          <target state="translated">数据点是否可见,是否应该绘制。</target>
        </trans-unit>
        <trans-unit id="40b49f5eb966eb2a50a803b79429e9d47ed678fd" translate="yes" xml:space="preserve">
          <source>Whether the database is capable of reporting the size of a query. Note that some databases do not support returning the size (i.e. number of rows returned) of a query, in which case &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() will return -1.</source>
          <target state="translated">数据库是否能够报告查询的大小。请注意，某些数据库不支持返回查询的大小（即返回的行数），在这种情况下，&lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt;（）将返回-1。</target>
        </trans-unit>
        <trans-unit id="21c37b0f1a2eb0a2c3d7635acf315d721ff4cb14" translate="yes" xml:space="preserve">
          <source>Whether the default or static mode is used for rendering optimization.</source>
          <target state="translated">是采用默认模式还是静态模式进行渲染优化。</target>
        </trans-unit>
        <trans-unit id="be688207dd50b674f91323550645b69bc6dd0334" translate="yes" xml:space="preserve">
          <source>Whether the delegate represents today</source>
          <target state="translated">该代表是否代表今天</target>
        </trans-unit>
        <trans-unit id="3a8755b16bb8d183f894885ca5c5dee9425d78f1" translate="yes" xml:space="preserve">
          <source>Whether the dialog should be shown modal with respect to the window containing the dialog's parent Item, modal with respect to the whole application, or non-modal.</source>
          <target state="translated">对话框是否应该相对于包含对话框父项的窗口以模式显示,相对于整个应用程序以模式显示,或者以非模式显示。</target>
        </trans-unit>
        <trans-unit id="adf54c46f7d89665f69a6765399db289b890d5de" translate="yes" xml:space="preserve">
          <source>Whether the dialog will provide a means of changing the opacity.</source>
          <target state="translated">对话框是否会提供改变不透明度的方法。</target>
        </trans-unit>
        <trans-unit id="81a0e45f8611929993879c1cfe29a62cf62d6198" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show monospaced fonts or not.</source>
          <target state="translated">对话框是否会显示单间隔字体。</target>
        </trans-unit>
        <trans-unit id="5056ef7166f692cfde907604b07cee9df549b43e" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show non scalable fonts or not.</source>
          <target state="translated">对话框是否会显示非可伸缩字体。</target>
        </trans-unit>
        <trans-unit id="bdc8e11957087489dc414aada8890efc5cf613cc" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show proportional fonts or not.</source>
          <target state="translated">对话框是否会显示比例字体。</target>
        </trans-unit>
        <trans-unit id="cf59371c1a2ab75dd88122e67ecd4d968653945f" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show scalable fonts or not.</source>
          <target state="translated">对话框是否会显示可伸缩字体。</target>
        </trans-unit>
        <trans-unit id="a8096a1b98e7942757eb338dc4ac310987e368de" translate="yes" xml:space="preserve">
          <source>Whether the driver allows cancelling a running query.</source>
          <target state="translated">驱动程序是否允许取消正在运行的查询。</target>
        </trans-unit>
        <trans-unit id="bad7dffba90736fb616a6a5b7d5ad2c46ea8a969" translate="yes" xml:space="preserve">
          <source>Whether the driver allows fetching numerical values with low precision.</source>
          <target state="translated">驱动程序是否允许获取低精度的数值。</target>
        </trans-unit>
        <trans-unit id="3c7f787b2f9cd46ea9f39398ae0c7d4485ca5fc8" translate="yes" xml:space="preserve">
          <source>Whether the driver can access multiple result sets returned from batched statements or stored procedures.</source>
          <target state="translated">驱动程序是否可以访问从批处理语句或存储过程返回的多个结果集。</target>
        </trans-unit>
        <trans-unit id="ed4bc20d5aa787a8e008253aa117335c9aa08d81" translate="yes" xml:space="preserve">
          <source>Whether the driver can do any low-level resource cleanup when &lt;a href=&quot;qsqlquery#finish&quot;&gt;QSqlQuery::finish&lt;/a&gt;() is called.</source>
          <target state="translated">调用&lt;a href=&quot;qsqlquery#finish&quot;&gt;QSqlQuery :: finish&lt;/a&gt;（）时，驱动程序是否可以执行任何低级资源清除。</target>
        </trans-unit>
        <trans-unit id="210464c5de5626efc42d1df157c9de9e9c7d0158" translate="yes" xml:space="preserve">
          <source>Whether the driver disallows a write lock on a table while other queries have a read lock on it.</source>
          <target state="translated">驱动程序是否不允许对表进行写锁,而其他查询对表有读锁。</target>
        </trans-unit>
        <trans-unit id="4e4f69b95b47bd4f3d99879fb2bd280a082c0786" translate="yes" xml:space="preserve">
          <source>Whether the driver supports Binary Large Object fields.</source>
          <target state="translated">驱动程序是否支持二进制大对象字段。</target>
        </trans-unit>
        <trans-unit id="1bd1162a270f0edcfe194947159af7188cd907e5" translate="yes" xml:space="preserve">
          <source>Whether the driver supports SQL transactions.</source>
          <target state="translated">驱动程序是否支持SQL事务。</target>
        </trans-unit>
        <trans-unit id="845a4430bcc8fbfbbff1ac48b77c4dd33f0996d9" translate="yes" xml:space="preserve">
          <source>Whether the driver supports Unicode strings if the database server does.</source>
          <target state="translated">如果数据库服务器支持Unicode字符串,则驱动程序是否支持Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="99e2eef4a7afa6967f2bfdb3d2317bc8259b8b38" translate="yes" xml:space="preserve">
          <source>Whether the driver supports batched operations, see &lt;a href=&quot;qsqlquery#execBatch&quot;&gt;QSqlQuery::execBatch&lt;/a&gt;()</source>
          <target state="translated">驱动程序是否支持批处理操作，请参见&lt;a href=&quot;qsqlquery#execBatch&quot;&gt;QSqlQuery :: execBatch&lt;/a&gt;（）</target>
        </trans-unit>
        <trans-unit id="cc692b7b64b01e95bec2490419dbacbec52f5ac5" translate="yes" xml:space="preserve">
          <source>Whether the driver supports database event notifications.</source>
          <target state="translated">驱动程序是否支持数据库事件通知。</target>
        </trans-unit>
        <trans-unit id="628444820187e4c76acfe865374c57be9597b3c4" translate="yes" xml:space="preserve">
          <source>Whether the driver supports prepared query execution.</source>
          <target state="translated">驱动程序是否支持准备好的查询执行。</target>
        </trans-unit>
        <trans-unit id="d578a8324e172000e823c2e578c26df8d857120a" translate="yes" xml:space="preserve">
          <source>Whether the driver supports returning the Id of the last touched row.</source>
          <target state="translated">驱动程序是否支持返回最后触及的行的Id。</target>
        </trans-unit>
        <trans-unit id="0c016f85910ee59575e37aaa781500e68ac6489e" translate="yes" xml:space="preserve">
          <source>Whether the driver supports the use of named placeholders.</source>
          <target state="translated">驱动程序是否支持使用命名占位符。</target>
        </trans-unit>
        <trans-unit id="f5fabd5d2f9f3ba4bba291487dcd50948e6e0eac" translate="yes" xml:space="preserve">
          <source>Whether the driver supports the use of positional placeholders.</source>
          <target state="translated">驱动程序是否支持使用位置占位符。</target>
        </trans-unit>
        <trans-unit id="e7c605a10ccaa6b790d36479ca5cd3464b7e3e99" translate="yes" xml:space="preserve">
          <source>Whether the focus is is at the border or inside the widget.</source>
          <target state="translated">焦点是在边框还是在小组件内。</target>
        </trans-unit>
        <trans-unit id="fbd034ed932cf240c748ee945667de15e7a72c46" translate="yes" xml:space="preserve">
          <source>Whether the item is pressed</source>
          <target state="translated">该项目是否被按下</target>
        </trans-unit>
        <trans-unit id="46ebf14697d16b952c232d4c529425aeba2ec058" translate="yes" xml:space="preserve">
          <source>Whether the label is drawn.</source>
          <target state="translated">是否绘制标签。</target>
        </trans-unit>
        <trans-unit id="aaf559ded4da7eb7934bbeb8f5160f6fd7699b4b" translate="yes" xml:space="preserve">
          <source>Whether the legend background is visible.</source>
          <target state="translated">图例背景是否可见。</target>
        </trans-unit>
        <trans-unit id="37313d12a7a0be8af88693a899b7344efb257291" translate="yes" xml:space="preserve">
          <source>Whether the legend is visible.</source>
          <target state="translated">是否能看到传说。</target>
        </trans-unit>
        <trans-unit id="3144153f16d0769f79b9785e618f134de4aefa6a" translate="yes" xml:space="preserve">
          <source>Whether the line is the last. This property can change if you set the</source>
          <target state="translated">该行是否为最后一行。这个属性可以改变,如果你设置了</target>
        </trans-unit>
        <trans-unit id="9ea42eeadcc56647ffbc101f32710a47b1a0a933" translate="yes" xml:space="preserve">
          <source>Whether the map type is optimized for the use on a mobile device.</source>
          <target state="translated">地图类型是否优化为在移动设备上使用。</target>
        </trans-unit>
        <trans-unit id="03f0ed19d3ba562825d7a428e850d0d4ae79787e" translate="yes" xml:space="preserve">
          <source>Whether the map type is optimized for use at night.</source>
          <target state="translated">地图类型是否优化为夜间使用。</target>
        </trans-unit>
        <trans-unit id="621b2949699553f62dcb51e30d25da4b13f98472" translate="yes" xml:space="preserve">
          <source>Whether the menu is enabled, and responsive to user interaction as a submenu. Its value defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">菜单是否启用，并作为子菜单响应用户交互。其值默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08f744dfb74a52e0e277283ba5907cc6f1378d72" translate="yes" xml:space="preserve">
          <source>Whether the menu item can be checked, or toggled. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">菜单项是否可以检查或切换。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c1b888a2cec2b100297f179f869b0944945d49d" translate="yes" xml:space="preserve">
          <source>Whether the menu item is enabled, and responsive to user interaction. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">菜单项是否启用，并响应用户交互。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce8fa3229c69c96181da21931047a6e1d51bf634" translate="yes" xml:space="preserve">
          <source>Whether the menu item should be visible. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">菜单项是否应可见。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92a63e59bfc40ad15c5be2816466eb24eacc2ef5" translate="yes" xml:space="preserve">
          <source>Whether the menu separator should be visible.</source>
          <target state="translated">菜单分隔符是否应该可见。</target>
        </trans-unit>
        <trans-unit id="3cf2e278ef17de70651570a3447bc45e677d370d" translate="yes" xml:space="preserve">
          <source>Whether the menu should be visible as a submenu of another Menu, or as a menu on a &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt;. Its value defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">菜单是应显示为另一个菜单的子菜单，还是显示为&lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt;上的菜单。其值默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8088e05c590a3e0bf008c00d389801153a3d00b6" translate="yes" xml:space="preserve">
          <source>Whether the navigation issue is requested for a top level page.</source>
          <target state="translated">是否要求顶层页面的导航问题。</target>
        </trans-unit>
        <trans-unit id="235d5328b4f194c49658a5369d777c354e0bc206" translate="yes" xml:space="preserve">
          <source>Whether the reimplementation of &lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren()&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, it may not be necessary for the view to call &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount()&lt;/a&gt; to find out how many children are present. For example, &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; does not need to know how many children there are if the parent item has not been expanded to show them.</source>
          <target state="translated">无论是否重新实现&lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren（）&lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ，该视图都不必调用&lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount（）&lt;/a&gt;来找出存在多少个子代。例如，如果未扩展父项来显示它们，则&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;不需要知道有多少个子级。</target>
        </trans-unit>
        <trans-unit id="538f44ad7b42229493c7d7d9e3ef2b46b9b9269d" translate="yes" xml:space="preserve">
          <source>Whether the selected item should be a folder.</source>
          <target state="translated">所选项目是否应该是一个文件夹。</target>
        </trans-unit>
        <trans-unit id="8b37630a9ab7e8561ccfcc973792499cdd1c2fc9" translate="yes" xml:space="preserve">
          <source>Whether the slice is separated from the pie.</source>
          <target state="translated">片与饼是否分离。</target>
        </trans-unit>
        <trans-unit id="1e51bb9bffd87efbffac7ced9051c8e36ae66ea8" translate="yes" xml:space="preserve">
          <source>Whether the sprite is animating or not.</source>
          <target state="translated">无论精灵是否有动画。</target>
        </trans-unit>
        <trans-unit id="15b788e281bbb09b261892870f8a1722b24dac42" translate="yes" xml:space="preserve">
          <source>Whether the state machine was invoked from an outer state machine.</source>
          <target state="translated">是否从外部状态机中调用了状态机。</target>
        </trans-unit>
        <trans-unit id="a0b1a3343f7c152c3d6e8ee37fef9d099e50a0ff" translate="yes" xml:space="preserve">
          <source>Whether the style should underline the menu item's label mnemonic.</source>
          <target state="translated">样式是否应该在菜单项的标签记号下划线。</target>
        </trans-unit>
        <trans-unit id="c38308bf37133d3debb54fd9749488e0eb788394" translate="yes" xml:space="preserve">
          <source>Whether the timeline is enabled.</source>
          <target state="translated">是否启用时间轴。</target>
        </trans-unit>
        <trans-unit id="6800a5d87cf42840acdc7fcb220f0eab7fdd1856" translate="yes" xml:space="preserve">
          <source>Whether the user can interact with the &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt; item.</source>
          <target state="translated">用户是否可以与&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;项目进行交互。</target>
        </trans-unit>
        <trans-unit id="3404ae7c0bcb4ef4a1fedd302f33d359c7dbd904" translate="yes" xml:space="preserve">
          <source>Whether the user can interact with the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; item. If this property is set to true the text cannot be edited by user interaction.</source>
          <target state="translated">用户是否可以与&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;项进行交互。如果将此属性设置为true，则无法通过用户交互来编辑文本。</target>
        </trans-unit>
        <trans-unit id="421117e08c0b75cdb15d7908f28bc054bc099c36" translate="yes" xml:space="preserve">
          <source>Whether the values are reported for dragging and/or flicking is determined by &lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;boundsBehavior&lt;/a&gt;. The overshoot distance is reported even when &lt;a href=&quot;qml-qtquick-flickable#boundsMovement-prop&quot;&gt;boundsMovement&lt;/a&gt; is &lt;code&gt;Flickable.StopAtBounds&lt;/code&gt;.</source>
          <target state="translated">是否报告针对拖动和/或轻拂的值由&lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;boundsBehavior&lt;/a&gt;确定。即使&lt;a href=&quot;qml-qtquick-flickable#boundsMovement-prop&quot;&gt;boundsMovement&lt;/a&gt;为 &lt;code&gt;Flickable.StopAtBounds&lt;/code&gt; ,也会报告超调距离。</target>
        </trans-unit>
        <trans-unit id="e6ceaafbfc10047970bada881dcbd1c1197929a3" translate="yes" xml:space="preserve">
          <source>Whether the web engine profile is</source>
          <target state="translated">网络引擎简介是否</target>
        </trans-unit>
        <trans-unit id="3415d4ca07d6a652c116c2d85a4d5f784d1a62b9" translate="yes" xml:space="preserve">
          <source>Whether the window has a custom background color set.</source>
          <target state="translated">窗口是否有自定义背景色设置。</target>
        </trans-unit>
        <trans-unit id="3f356add3a289b463a5638963da464dcfa8cedbc" translate="yes" xml:space="preserve">
          <source>Whether the window is visible on the screen.</source>
          <target state="translated">窗口在屏幕上是否可见。</target>
        </trans-unit>
        <trans-unit id="913fc48b2bd67968d18a833b0cf728c3541e7c15" translate="yes" xml:space="preserve">
          <source>Whether this download is finished (completed, cancelled, or non-resumable interrupted state).</source>
          <target state="translated">本次下载是否完成(完成、取消或不可恢复的中断状态)。</target>
        </trans-unit>
        <trans-unit id="10665e34f2783f8fa2a19993bf61804f7d9d48e8" translate="yes" xml:space="preserve">
          <source>Whether this download is paused.</source>
          <target state="translated">本次下载是否暂停。</target>
        </trans-unit>
        <trans-unit id="c87f3e63dd21c4200bb479597f1ec7b574bdee0e" translate="yes" xml:space="preserve">
          <source>Whether this element should be disconnected from the previous Path element (or startX/Y).</source>
          <target state="translated">该元素是否应该与前一个Path元素(或startX/Y)断开。</target>
        </trans-unit>
        <trans-unit id="577931957ce048bb07933998686fe00fd1a4e569" translate="yes" xml:space="preserve">
          <source>Whether this is a download request for saving a web page or a file.</source>
          <target state="translated">无论是保存网页还是文件的下载请求。</target>
        </trans-unit>
        <trans-unit id="fb9cfcf1336fb0bab461c8a796b1628a9b1dba5b" translate="yes" xml:space="preserve">
          <source>Whether this window request was directly triggered as the result of a keyboard or mouse event.</source>
          <target state="translated">这个窗口请求是否是由于键盘或鼠标事件而直接触发的。</target>
        </trans-unit>
        <trans-unit id="9f0457984bd91b6556f4c2015acaf5a05c1691bd" translate="yes" xml:space="preserve">
          <source>Whether to accept or ignore the navigation request.</source>
          <target state="translated">是否接受或忽略导航请求。</target>
        </trans-unit>
        <trans-unit id="1a30ac0ac903d864bd8a03b00460c0d402a09ff3" translate="yes" xml:space="preserve">
          <source>Whether to use a large arc as defined by the arc points.</source>
          <target state="translated">是否使用弧点定义的大弧度。</target>
        </trans-unit>
        <trans-unit id="acf3d78a191e4a37d63681f2767dfaa3b23c48e5" translate="yes" xml:space="preserve">
          <source>Whether to use the instruction text that came with the response from the server (true) or the text generated by the plugin. The default value is true. Note that if instructions in a language that is not directly supported by Mapbox are needed (see &lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;here&lt;/a&gt; for the supported languages), it is possible to use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt; to translate &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; to the desired language, and set this parameter to false in order to use the translated built-in instructions.</source>
          <target state="translated">是使用服务器响应（true）附带的指​​令文本，还是使用插件生成的文本。默认值是true。请注意，如果需要使用Mapbox不直接支持的语言的指令（有关支持的语言，请参见&lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;此处&lt;/a&gt;），则可以使用&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt;将&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt;转换为所需的语言，并将此参数设置为false以便使用翻译后的内置说明。</target>
        </trans-unit>
        <trans-unit id="1fcccc4a8ddc8959e8c2dd3a070f746efff6d17d" translate="yes" xml:space="preserve">
          <source>Whether to use the instruction text that came with the response from the server (true) or the text generated by the plugin. The default value is true. Note that if instructions in a language that is not directly supported by Mapbox are needed (see &lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;here&lt;/a&gt; for the supported languages), it is possible to use the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt; to translate &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; to the desired language, and set this parameter to false in order to use the translated built-in instructions.</source>
          <target state="translated">是使用服务器响应（true）附带的指​​令文本，还是使用插件生成的文本。默认值是true。请注意，如果需要使用Mapbox不直接支持的语言的指令（有关支持的语言，请参见&lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;此处&lt;/a&gt;），则可以使用&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt;将&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt;转换为所需的语言，并将此参数设置为false以便使用翻译后的内置说明。</target>
        </trans-unit>
        <trans-unit id="5ad7a9dbe1c579bd84d6196251c8df00e0a9061e" translate="yes" xml:space="preserve">
          <source>Whether tool tips are shown on window title bar buttons.</source>
          <target state="translated">工具提示是否显示在窗口标题栏按钮上。</target>
        </trans-unit>
        <trans-unit id="13bccea668c4304e35b3c2648c61d13a84c0a8e9" translate="yes" xml:space="preserve">
          <source>Whether tooltips are shown when the text is truncated. This property is &lt;code&gt;false&lt;/code&gt; by default. This property currently has no effect as there is no support for tooltips in QML.</source>
          <target state="translated">文本被截断时是否显示工具提示。默认情况下，此属性为 &lt;code&gt;false&lt;/code&gt; 。该属性当前不起作用，因为QML中不支持工具提示。</target>
        </trans-unit>
        <trans-unit id="31fad663cc5a6c9e201e536434fd859471a2a47c" translate="yes" xml:space="preserve">
          <source>Whether your COM server should run as a stand-alone executable or as a shared library in the client process depends mainly on the type of COM objects you want to provide in the server.</source>
          <target state="translated">你的COM服务器是应该作为独立的可执行文件运行,还是作为客户端进程中的共享库运行,主要取决于你想在服务器中提供的COM对象的类型。</target>
        </trans-unit>
        <trans-unit id="70bef61f89759f7b941e6e11ce1d973c5bf9fbe3" translate="yes" xml:space="preserve">
          <source>Which APIs of the COM object are available through scripting depends on the script language used.</source>
          <target state="translated">COM对象的哪些API可以通过脚本获得,取决于所使用的脚本语言。</target>
        </trans-unit>
        <trans-unit id="793d21dbade3ed082aff6e7f64034df5c8fb7bc4" translate="yes" xml:space="preserve">
          <source>Which button gets the default status in a dialog's button widget.</source>
          <target state="translated">在对话框的按钮部件中,哪个按钮获得默认状态。</target>
        </trans-unit>
        <trans-unit id="3db94e72d3b34a0e4e2719f79caf5739c7fca8b2" translate="yes" xml:space="preserve">
          <source>Which can then be used in a Qt Quick 3D project by using that QML Component:</source>
          <target state="translated">然后可以通过使用该QML组件在Qt Quick 3D项目中使用。</target>
        </trans-unit>
        <trans-unit id="c852b7c7494dc6886d8b68161e6704f86567c96f" translate="yes" xml:space="preserve">
          <source>Which content to show</source>
          <target state="translated">展示哪些内容</target>
        </trans-unit>
        <trans-unit id="c0b12e319739b053134fc0caec91714a71612d6b" translate="yes" xml:space="preserve">
          <source>Which include statement is needed to use this class?</source>
          <target state="translated">使用这个类需要哪个include语句?</target>
        </trans-unit>
        <trans-unit id="2db588c843f0fd8abd06af7fd113c24d90771081" translate="yes" xml:space="preserve">
          <source>Which is equivalent to the following, much more verbose code:</source>
          <target state="translated">相当于下面这段更加冗长的代码。</target>
        </trans-unit>
        <trans-unit id="608a0352c63aabee07da1f6a81bdd20076990125" translate="yes" xml:space="preserve">
          <source>Which logical particle groups will be affected.</source>
          <target state="translated">哪些逻辑粒子组会受到影响。</target>
        </trans-unit>
        <trans-unit id="25e530a3452f532ae132324593d82cc6b8193cfd" translate="yes" xml:space="preserve">
          <source>Which logical particle groups will be painted.</source>
          <target state="translated">哪些逻辑粒子组会被画出来。</target>
        </trans-unit>
        <trans-unit id="3d4b605c5f5f983a4bd45171bb55ac43a2d266df" translate="yes" xml:space="preserve">
          <source>Which modifier keys are currently pressed</source>
          <target state="translated">当前按下了哪些修饰键</target>
        </trans-unit>
        <trans-unit id="81602f452c808bea87345f9047105a0cca0c7c26" translate="yes" xml:space="preserve">
          <source>Which mouse buttons cause a slider to page step the value.</source>
          <target state="translated">哪些鼠标按钮会使滑块分页步进值。</target>
        </trans-unit>
        <trans-unit id="14b2d9e139d29168831e1c17e4d323900f8d3b0d" translate="yes" xml:space="preserve">
          <source>Which mouse buttons cause a slider to set the value to the position clicked on.</source>
          <target state="translated">哪些鼠标按钮会使滑块的值设置到点击的位置。</target>
        </trans-unit>
        <trans-unit id="efdebfca3891aee71d0e4ed022793cc1b44becb2" translate="yes" xml:space="preserve">
          <source>Which mouse or stylus buttons are currently pressed</source>
          <target state="translated">鼠标或触控笔的哪个按钮正在被按下?</target>
        </trans-unit>
        <trans-unit id="1efe3552692d8bb927cb6e3656a6eb4fac500a0c" translate="yes" xml:space="preserve">
          <source>Which of the &lt;a href=&quot;qml-qtquick-dialogs-filedialog#nameFilters-prop&quot;&gt;nameFilters&lt;/a&gt; is currently selected.</source>
          <target state="translated">当前选择了哪个&lt;a href=&quot;qml-qtquick-dialogs-filedialog#nameFilters-prop&quot;&gt;nameFilters&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce70c525d60cbc2afd202f541aa3a5307f50aa58" translate="yes" xml:space="preserve">
          <source>Which properties that have changed can at any time be retrieved using the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() function. This function returns an instance of the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlags&lt;/a&gt; type which stores an OR combination of &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlag&lt;/a&gt; values. The &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlag&lt;/a&gt; enum defines whether a property has changed since the last update or not.</source>
          <target state="translated">可以随时使用&lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;（）函数来检索已更改的属性。此函数返回&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlags&lt;/a&gt;类型的实例，该实例存储&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlag&lt;/a&gt;值的或组合。该&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlag&lt;/a&gt;枚举定义的属性是否具有自上次更新还是没有改变。</target>
        </trans-unit>
        <trans-unit id="e1df1f5e64d59ab6dd483dbd8de2ec583fac2e6a" translate="yes" xml:space="preserve">
          <source>Which type of mouse event should cause a list view expansion to be selected.</source>
          <target state="translated">哪种类型的鼠标事件应该导致列表视图扩展被选中。</target>
        </trans-unit>
        <trans-unit id="ec4e8958dac6b783178c5d6e15aae8d62c60049e" translate="yes" xml:space="preserve">
          <source>Which type of mouse event should cause a tab to be selected.</source>
          <target state="translated">哪种类型的鼠标事件应该导致选项卡被选中。</target>
        </trans-unit>
        <trans-unit id="866ed4526e153c6c9530e1af557d9e77faec2523" translate="yes" xml:space="preserve">
          <source>Which wheel to react to. The default is &lt;code&gt;Qt.Vertical&lt;/code&gt;.</source>
          <target state="translated">对哪个车轮做出反应。默认值为 &lt;code&gt;Qt.Vertical&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d4a3d8f1568fbbfc148324db5db9d1ae0cc6949" translate="yes" xml:space="preserve">
          <source>Whichever type &lt;a href=&quot;qcborvalue#toJsonValue&quot;&gt;QCborValue::toJsonValue&lt;/a&gt;() returns.</source>
          <target state="translated">无论使用何种类型&lt;a href=&quot;qcborvalue#toJsonValue&quot;&gt;QCborValue :: toJsonValue&lt;/a&gt;（）返回。</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="0c92333f95ca45dcb239bb12adff2c5c85e31dd7" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; attempts to smooth over the differences between the different supported platforms, there are still a few differences that you should be aware of when porting your application:</source>
          <target state="translated">虽然&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;尝试理顺不同支持平台之间的差异，但在移植应用程序时仍应注意一些差异：</target>
        </trans-unit>
        <trans-unit id="916913c0cc31f207656b815c201c7061964f589f" translate="yes" xml:space="preserve">
          <source>While CMake is the only supported build system for building Qt itself, applications may still be built using &lt;code&gt;qmake&lt;/code&gt; in Qt 6.0. In order to get a &lt;code&gt;qmake&lt;/code&gt; setup that is functional with cross-compilation, one will need to specify some of the legacy arguments to CMake or to configure.</source>
          <target state="translated">虽然CMake是唯一支持自身构建Qt的构建系统，但仍可以在Qt 6.0中使用 &lt;code&gt;qmake&lt;/code&gt; 来构建应用程序。为了获得可以交叉编译的 &lt;code&gt;qmake&lt;/code&gt; 设置，将需要为CMake指定一些旧参数或进行配置。</target>
        </trans-unit>
        <trans-unit id="0b071fa22d15d222cb6c92bb69c100ebbc5362ee" translate="yes" xml:space="preserve">
          <source>While FrameGraphNodes can be individually enabled and disabled via the &lt;code&gt;enabled&lt;/code&gt; property, this can become tedious when an entire path needs to be turned on or off. SubtreeEnabler is a convenience node that makes this use case trivial, allowing all of its children to be controlled by a single switch.</source>
          <target state="translated">虽然可以通过 &lt;code&gt;enabled&lt;/code&gt; 属性分别启用和禁用FrameGraphNodes ，但是当需要打开或关闭整个路径时，这可能变得很乏味。SubtreeEnabler是一个便利节点，它使该用例变得微不足道，从而允许其所有子级由单个开关控制。</target>
        </trans-unit>
        <trans-unit id="80cc72a6fe5a9ef131329278224272da11157a25" translate="yes" xml:space="preserve">
          <source>While QFrameGraphNodes can be individually enabled and disabled via the &lt;code&gt;enabled&lt;/code&gt; property, this can become tedious when an entire path needs to be turned on or off. QSubtreeEnabler is a convenience node that makes this use case trivial, allowing all of its children to be controlled by a single switch.</source>
          <target state="translated">虽然可以通过 &lt;code&gt;enabled&lt;/code&gt; 属性分别启用和禁用QFrameGraphNodes ，但是当需要打开或关闭整个路径时，这会变得很乏味。QSubtreeEnabler是一个便利节点，它使该用例变得微不足道，从而允许其所有子级由单个开关控制。</target>
        </trans-unit>
        <trans-unit id="805d12233c47b77ed4b3e62b7584c32850936965" translate="yes" xml:space="preserve">
          <source>While QML objects instantiated in a context are not strictly owned by that context, their bindings are. If a context is destroyed, the property bindings of outstanding QML objects will stop evaluating.</source>
          <target state="translated">虽然在上下文中实例化的QML对象并不是严格意义上的该上下文所拥有的,但它们的绑定却是。如果一个上下文被破坏,未完成的QML对象的属性绑定将停止评估。</target>
        </trans-unit>
        <trans-unit id="63d99cb7559ceb26aa76fb0f9748bade0a0e5027" translate="yes" xml:space="preserve">
          <source>While QSettings attempts to smooth over the differences between the different supported platforms, there are still a few differences that you should be aware of when porting your application:</source>
          <target state="translated">虽然QSettings试图抚平不同支持平台之间的差异,但在移植你的应用程序时,仍然有一些差异是你应该注意的。</target>
        </trans-unit>
        <trans-unit id="88b774c74a2776122de7b559a743e91ffaed05ef" translate="yes" xml:space="preserve">
          <source>While Qt Quick provides basic graphical elements, &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; provides ready-made QML types for use within an application.</source>
          <target state="translated">Qt Quick提供基本的图形元素，而&lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt;提供现成的QML类型以在应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="a5caad6194e0d31eb78a5652257e4bbde771723c" translate="yes" xml:space="preserve">
          <source>While Qt Remote Objects (QtRO) handles the initialization and synchronization of &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects, there are numerous steps happening behind the scenes which can fail and that aren't encountered in single process Qt applications. See &lt;a href=&quot;qtremoteobjects-troubleshooting#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt; for advice on how to handle such issues when using a remote objects network.</source>
          <target state="translated">虽然Qt远程对象（QtRO）处理&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;副本&lt;/a&gt;对象的初始化和同步，但幕后发生的许多步骤可能会失败，而在单进程Qt应用程序中不会遇到。有关使用远程对象网络时如何处理此类问题的建议，请参阅&lt;a href=&quot;qtremoteobjects-troubleshooting#troubleshooting&quot;&gt;疑难解答&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8dc3249320abae6037c56c4dfaf988c3e01c6b36" translate="yes" xml:space="preserve">
          <source>While Qt Remote Objects supports sharing any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; over the network (using enableRemoting on the Source side and acquireDynamic on the Replica side), there are a couple of advantages to letting repc define your objects. First of all, while &lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;DynamicReplicas&lt;/a&gt; are useful, they are more cumbersome to work with. The API is not known until the object is initialized, and using the API from C++ requires string lookups through &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;'s methods. Secondly, having the interface known at compile time finds any issues at compile vs. at runtime. Thirdly, the rep format supports default values, which can be handy if you are unable to ensure the Source is available when the Replica is instantiated.</source>
          <target state="translated">虽然Qt Remote Objects支持通过网络共享任何&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;（使用Source端的enableRemoting和Replica端的AcquireDynamic），但是让repc定义对象有两个优点。首先，虽然&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;DynamicReplicas&lt;/a&gt;非常有用，但使用起来却比较麻烦。在初始化对象之前，该API才是未知的，并且使用C ++中的API要求通过&lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;的方法进行字符串查找。其次，在编译时知道该接口会在编译与运行时发现任何问题。第三，rep格式支持默认值，如果您无法确保在实例化副本服务器时无法确保源可用，则可以使用默认值。</target>
        </trans-unit>
        <trans-unit id="e457f9c50b36136e1b62d4d3cceb2a290ccb7e89" translate="yes" xml:space="preserve">
          <source>While Qt offers a lot of classes for writing your application, Apple's Cocoa frameworks offer functionality that is not currently available (or may never end up) in Qt. Using &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;, it is possible to take an arbitrary NSView-derived class from Cocoa and put it in a Qt widgets hierarchy. Depending on the level of integration you need, you can use &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; directly or subclass it to wrap more functionality of the underlying NSView.</source>
          <target state="translated">虽然Qt提供了许多用于编写应用程序的类，但Apple的Cocoa框架提供了Qt当前不可用（或可能永远不会终止）的功能。使用&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;，可以从Cocoa中获取一个任意的NSView派生类，并将其放入Qt小部件层次结构中。根据所需的集成级别，可以直接使用&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;或对其进行子类化，以包装基础NSView的更多功能。</target>
        </trans-unit>
        <trans-unit id="5c324cf8835a3580c511d22b5dd7d8641994d4b4" translate="yes" xml:space="preserve">
          <source>While Qt offers a lot of classes for writing your application, Apple's Cocoa frameworks offer functionality that is not currently available (or may never end up) in Qt. Using QMacCocoaViewContainer, it is possible to take an arbitrary NSView-derived class from Cocoa and put it in a Qt widgets hierarchy. Depending on the level of integration you need, you can use QMacCocoaViewContainer directly or subclass it to wrap more functionality of the underlying NSView.</source>
          <target state="translated">虽然Qt提供了很多类来编写你的应用程序,但苹果的Cocoa框架提供了目前在Qt中无法使用(或者可能永远不会出现)的功能。使用QMacCocoaViewContainer,可以从Cocoa中提取一个任意的NSView派生类,并将其放入Qt widgets层次结构中。根据您所需要的集成度,您可以直接使用QMacCocoaViewContainer,或者将其子类化以包裹更多底层NSView的功能。</target>
        </trans-unit>
        <trans-unit id="5e3a813065803d8f7f9a418b84f2a634dd5bb47f" translate="yes" xml:space="preserve">
          <source>While Qt solves many of the typical tasks of writing an application, there are always corner cases that Qt can not cover, or where it makes more sense to build a feature on top of the platform specific APIs, or another toolkit.</source>
          <target state="translated">虽然Qt解决了许多编写应用程序的典型任务,但总有一些Qt无法覆盖的角落情况,或者在平台特定的API或其他工具包之上构建一个功能更有意义。</target>
        </trans-unit>
        <trans-unit id="639e47c0cc3c90dd85258bd8d0bd4929efba9b42" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;qml-qtquick-multipointtoucharea&quot;&gt;MultiPointTouchArea&lt;/a&gt;</source>
          <target state="translated">而&lt;a href=&quot;qml-qtquick-multipointtoucharea&quot;&gt;MultiPointTouchArea&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b959e54026f44244ceaee1db91eabf22b5bfbf5" translate="yes" xml:space="preserve">
          <source>While a MultiPointTouchArea</source>
          <target state="translated">当一个多点触控区域</target>
        </trans-unit>
        <trans-unit id="2be60205fdac058f6976a555c3e4b7cf8fccfd3c" translate="yes" xml:space="preserve">
          <source>While a drag is active any change in an item's position will send a QDragMove event with item's new position to the scene.</source>
          <target state="translated">当拖动处于活动状态时,物品位置的任何变化都会向场景发送一个带有物品新位置的QDragMove事件。</target>
        </trans-unit>
        <trans-unit id="64fdcb92b68611667252ebd05f072432ecdbc0e3" translate="yes" xml:space="preserve">
          <source>While a drag is active this property holds the last object to accept an enter event from the dragged item, if the current drag position doesn't intersect any accepting targets it is null.</source>
          <target state="translated">当拖动处于活动状态时,此属性持有最后一个接受被拖动项目输入事件的对象,如果当前拖动位置没有与任何接受目标相交,则为空。</target>
        </trans-unit>
        <trans-unit id="247ae0dc4720cc9ae6c9b6dc97a0b81e78b8ae50" translate="yes" xml:space="preserve">
          <source>While a macro is being composed, the stack is disabled. This means that:</source>
          <target state="translated">当一个宏正在组成时,堆栈被禁用。这意味着:</target>
        </trans-unit>
        <trans-unit id="22ccfc8a81c58bbd58008c5dfd34ce0aeb43404c" translate="yes" xml:space="preserve">
          <source>While adding a 2D item tree into the 3D scene is fairly cheap, excess amounts (hundreds or more) of 2D subtrees within the 3D scene should be avoided, because in large amounts this may lead to increased memory and graphics resource usage. Note that this refers to the number of separate &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; subtrees under 3D nodes, not the total number of 2D items in those subtrees. For example, the QML snippet above contains only one 2D subtree.</source>
          <target state="translated">尽管在3D场景中添加2D项树是相当便宜的，但应避免在3D场景中出现过多（数百个或更多）的2D子树，因为大量这样做可能会导致内存和图形资源的使用增加。请注意，这是指3D节点下单独的&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;子树的数量，而不是这些子树中2D项的总数。例如，上面的QML代码段仅包含一个2D子树。</target>
        </trans-unit>
        <trans-unit id="4a2a381df229651fb2b9af1341ddde4ce9fc06a2" translate="yes" xml:space="preserve">
          <source>While an address is preferred, it may be used by the operating system as the source address for new, outgoing packets. After it becomes deprecated, it will remain valid for incoming packets for a while longer until finally removed (see &lt;a href=&quot;qnetworkaddressentry#validityLifetime&quot;&gt;validityLifetime&lt;/a&gt;()).</source>
          <target state="translated">尽管首选地址，但操作系统可以将其用作新的传出数据包的源地址。弃用后，它将对传入的数据包保持更长的时间，直到最终将其删除（请参阅&lt;a href=&quot;qnetworkaddressentry#validityLifetime&quot;&gt;validityLifetime&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="a60f8140c28c40aa06364e2fef4119b3f1df6143" translate="yes" xml:space="preserve">
          <source>While an address is valid, it will be accepted by the operating system as a valid destination address for this machine. Whether it is used as a source address for new, outgoing packets is controlled by, among other rules, the preferred lifetime (see &lt;a href=&quot;qnetworkaddressentry#preferredLifetime&quot;&gt;preferredLifetime&lt;/a&gt;()).</source>
          <target state="translated">地址有效时，它将被操作系统接受为该计算机的有效目标地址。除其他规则外，是否将其用作新的传出数据包的源地址，还取决于其首选生命周期（请参见&lt;a href=&quot;qnetworkaddressentry#preferredLifetime&quot;&gt;preferredLifetime&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="8e73dec0fd5276fb04a6a4d81f2ba3c17a6241b7" translate="yes" xml:space="preserve">
          <source>While both the left and the right mouse button are pressed, mouse movement along y-axis zooms the camera in and out without changing the view center.</source>
          <target state="translated">当同时按下鼠标左键和右键时,鼠标沿y轴移动可将摄像机放大或缩小,而不改变视图中心。</target>
        </trans-unit>
        <trans-unit id="37dcf4f1f9a6dc145fe2352f6113680e83b3cfc9" translate="yes" xml:space="preserve">
          <source>While determining the line-break positions take into account the space added for drawing a separator character.</source>
          <target state="translated">在确定换行位置时,要考虑到为绘制分隔符所增加的空间。</target>
        </trans-unit>
        <trans-unit id="097e642748a4c03d61bb9e6313a60b0554cb6e9e" translate="yes" xml:space="preserve">
          <source>While disabled by default, multisample antialiasing is fully supported by &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;. Additional color buffers and resolving into the swapchain's non-multisample buffers are all managed automatically.</source>
          <target state="translated">默认情况下禁用时，&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;完全支持多样本抗锯齿。额外的颜色缓冲区和解析到交换链的非多样本缓冲区都将自动进行管理。</target>
        </trans-unit>
        <trans-unit id="a4b0c4e696c9c6c84624775ee4ad3557f8221ec2" translate="yes" xml:space="preserve">
          <source>While disabled by default, multisample antialiasing is fully supported by QVulkanWindow. Additional color buffers and resolving into the swapchain's non-multisample buffers are all managed automatically.</source>
          <target state="translated">虽然默认情况下是禁用的,但QVulkanWindow完全支持多采样抗锯齿。额外的颜色缓冲区和解析到交换链的非多采样缓冲区都是自动管理的。</target>
        </trans-unit>
        <trans-unit id="cc493c81f134da0d8d432b045a7b6c1b96604a9a" translate="yes" xml:space="preserve">
          <source>While future versions of QML should be able to handle this situation more gracefully, there are currently several ways to rework your application to avoid this problem.</source>
          <target state="translated">虽然未来的QML版本应该能够更优雅地处理这种情况,但目前有几种方法可以重新设计你的应用程序来避免这个问题。</target>
        </trans-unit>
        <trans-unit id="15fb18a74816c4333c9f8ad309dfcbc4e6433902" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入法可能依赖于&lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox中的&lt;/a&gt;鼠标或按键事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="f0466a621b603d8099a666cbf3e7b909d22a359a" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入法可能依赖于&lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox中的&lt;/a&gt;鼠标或键盘事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="67890a4a1a8bd48d3e98cca62e936d86fb94fba6" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入法可能依赖于&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea中的&lt;/a&gt;鼠标或键盘事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="ee371465fb28bf9a9949849a252c923b3f791e81" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入方法可能依赖于&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField中的&lt;/a&gt;鼠标或按键事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="906c9a011624e84967f351e402a95c8ae3f33f47" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入法可能依赖于&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit中的&lt;/a&gt;鼠标或键盘事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="99aaa194e92ccb9db37b15111ae52bc3f39b615c" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">在编写时，输入法可能依赖于&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;上的鼠标或键事件来编辑或提交部分文本。此属性可用于确定何时禁用可能会干扰输入法的正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="30b6907453cc980cea56c0043dbb5616963a3884" translate="yes" xml:space="preserve">
          <source>While it is composing, an input method may rely on mouse or key events from the combo box to edit or commit the partial text. This property can be used to determine when to disable event handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">当输入法在合成时,它可能会依赖来自组合框的鼠标或按键事件来编辑或提交部分文本。此属性可用于确定何时禁用可能干扰输入法正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="f2dab60a71379a492f0e39b6fc63d2e821e5fdd4" translate="yes" xml:space="preserve">
          <source>While it is composing, an input method may rely on mouse or key events from the spin box to edit or commit the partial text. This property can be used to determine when to disable event handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">输入法在合成时,可能会依赖来自旋转框的鼠标或按键事件来编辑或提交部分文本。此属性可用于决定何时禁用可能干扰输入法正确操作的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="069a6a0bb496e21a470f5f44072de4e196f8f174" translate="yes" xml:space="preserve">
          <source>While it is possible to create complex animations by nesting &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;, it is generally more convenient to use &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquicktimeline-overview.html&quot;&gt;timeline animations&lt;/a&gt; for animating skinned models.</source>
          <target state="translated">尽管可以通过嵌套&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;，&lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt;和&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;来创建复杂的动画，但是通常使用&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquicktimeline-overview.html&quot;&gt;时间轴动画&lt;/a&gt;对蒙皮模型进行动画处理更为方便。</target>
        </trans-unit>
        <trans-unit id="c27c4b353a9047c17a52a5e4e759a2368954c6a2" translate="yes" xml:space="preserve">
          <source>While it is possible to implement this RPC-style behavior in QtRO, as Sources without properties, and slots that have return values, QtRO hides the fact that the processing is really remote. You let a node give you the Replica instead of creating it yourself, possibly use the status signals (&lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid()&lt;/a&gt;), but then interact with the object like you would with any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based type.</source>
          <target state="translated">尽管可以在QtRO中实现这种RPC样式的行为，但作为没有属性的源和具有返回值的插槽，QtRO隐藏了这样的事实：处理过程实际上是远程的。您让节点为您提供副本而不是自己创建副本，可能使用状态信号（&lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid（）&lt;/a&gt;），但是然后像与任何其他基于&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;的类型一样，与对象进行交互。</target>
        </trans-unit>
        <trans-unit id="9c0e4e02be847126b0fd3cb6759e533d4badf024" translate="yes" xml:space="preserve">
          <source>While it is possible to specify a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; for every &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; by calling the member function &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;(), windows may also be created from QML by using the Window and &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; elements. In this case there is no C++ code involved in the creation of the window instance, yet applications may still wish to set certain surface format values, for example to request a given OpenGL version or profile. Such applications can call the static function &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() at startup. The specified format will be used for all Quick windows created afterwards.</source>
          <target state="translated">尽管可以通过调用成员函数&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）为每个&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;指定一个&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;，但是也可以使用Window和&lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;元素从QML创建窗口。在这种情况下，创建窗口实例不涉及C ++代码，但是应用程序仍可能希望设置某些表面格式值，例如，请求给定的OpenGL版本或配置文件。这样的应用程序可以在启动时调用静态函数&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）。指定的格式将用于以后创建的所有快速窗口。</target>
        </trans-unit>
        <trans-unit id="588eb2b8408f7414400ddc0b28377391fa01e003" translate="yes" xml:space="preserve">
          <source>While it is possible to specify a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; for every QQuickWindow by calling the member function &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;(), windows may also be created from QML by using the Window and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; elements. In this case there is no C++ code involved in the creation of the window instance, yet applications may still wish to set certain surface format values, for example to request a given OpenGL version or profile. Such applications can call the static function &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() at startup. The specified format will be used for all Quick windows created afterwards.</source>
          <target state="translated">虽然可以通过调用成员函数&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）为每个QQuickWindow指定一个&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;，但是也可以使用Window和&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;元素从QML创建窗口。在这种情况下，创建窗口实例不涉及C ++代码，但是应用程序仍可能希望设置某些表面格式值，例如，请求给定的OpenGL版本或配置文件。这样的应用程序可以在启动时调用静态函数&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）。指定的格式将用于以后创建的所有&amp;ldquo;快速&amp;rdquo;窗口。</target>
        </trans-unit>
        <trans-unit id="5ffd992bca64b3df8820aad156dff57860726a0e" translate="yes" xml:space="preserve">
          <source>While it is possible to specify a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; for every QQuickWindow by calling the member function &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;(), windows may also be created from QML by using the Window and &lt;a href=&quot;qtquickcontrols-changes-qt6#applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; elements. In this case there is no C++ code involved in the creation of the window instance, yet applications may still wish to set certain surface format values, for example to request a given OpenGL version or profile. Such applications can call the static function &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() at startup. The specified format will be used for all Quick windows created afterwards.</source>
          <target state="translated">虽然可以通过调用成员函数&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）为每个QQuickWindow指定一个&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;，但是也可以使用Window和&lt;a href=&quot;qtquickcontrols-changes-qt6#applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;元素从QML创建窗口。在这种情况下，创建窗口实例不涉及C ++代码，但是应用程序仍可能希望设置某些表面格式值，例如，请求给定的OpenGL版本或配置文件。这样的应用程序可以在启动时调用静态函数&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）。指定的格式将用于以后创建的所有&amp;ldquo;快速&amp;rdquo;窗口。</target>
        </trans-unit>
        <trans-unit id="d036a10c64b9ec62641a8f90891f12d594f9c476" translate="yes" xml:space="preserve">
          <source>While it is possible to use &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; as a base class without the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro and without meta-object code, neither signals and slots nor the other features described here will be available if the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro is not used. From the meta-object system's point of view, a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass without meta code is equivalent to its closest ancestor with meta-object code. This means for example, that &lt;a href=&quot;qmetaobject#className&quot;&gt;QMetaObject::className&lt;/a&gt;() will not return the actual name of your class, but the class name of this ancestor.</source>
          <target state="translated">虽然可以使用&lt;a href=&quot;qobject&quot;&gt;的QObject&lt;/a&gt;作为基类，而不&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;宏和不元对象代码，既没有在此描述将是可利用，如果信号和槽，也没有其它特征&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;不使用宏。从元对象系统的角度来看，没有元代码的&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;子类等效于它的具有元对象代码的最接近的祖先。例如，这意味着&lt;a href=&quot;qmetaobject#className&quot;&gt;QMetaObject :: className&lt;/a&gt;（）不会返回您的类的实际名称，而是该祖先的类名称。</target>
        </trans-unit>
        <trans-unit id="b1bd735d79c63a934856f518d3884332e545cd51" translate="yes" xml:space="preserve">
          <source>While it's not necessary for modern touch screens, some resistive, single-touch touch screens may require that you fallback to using &lt;code&gt;tslib&lt;/code&gt; instead of relying on the Linux multi-touch protocol and the event devices.</source>
          <target state="translated">尽管现代触摸屏没有必要，但是某些电阻性单触摸屏可能会要求您回 &lt;code&gt;tslib&lt;/code&gt; 使用tslib，而不是依赖Linux多点触摸协议和事件设备。</target>
        </trans-unit>
        <trans-unit id="00116c5d770003a6be6fa449a53e06f8fa0b3b92" translate="yes" xml:space="preserve">
          <source>While many applications will be fine with the default behavior of &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; when it comes to swapchain image formats, &lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;() allows requesting a pre-defined format. This is useful most notably when working in the sRGB color space. Passing a format like &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; results in choosing an sRGB format, when available.</source>
          <target state="translated">虽然许多应用程序都可以使用&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;的默认行为来处理交换链图像格式，但是&lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;（）允许请求预定义的格式。在sRGB色彩空间中工作时，这尤其有用。传递类似 &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; 的格式会导致选择sRGB格式（如果可用）。</target>
        </trans-unit>
        <trans-unit id="8a2d57746c5d049a964b836436995db7b2faf9e5" translate="yes" xml:space="preserve">
          <source>While many applications will be fine with the default behavior of QVulkanWindow when it comes to swapchain image formats, &lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;() allows requesting a pre-defined format. This is useful most notably when working in the sRGB color space. Passing a format like &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; results in choosing an sRGB format, when available.</source>
          <target state="translated">虽然许多应用程序都可以使用QVulkanWindow的默认行为来处理交换链图像格式，但是&lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;（）允许请求预定义的格式。在sRGB颜色空间中工作时，此功能尤其有用。传递 &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; 之类的格式会导致选择sRGB格式（如果可用）。</target>
        </trans-unit>
        <trans-unit id="7caa3c55c15a9e4c6b92a5f5323d4e687f6eb1af" translate="yes" xml:space="preserve">
          <source>While mapped the contents of a video frame can be accessed directly through the pointer returned by the &lt;a href=&quot;qvideoframe#bits&quot;&gt;bits&lt;/a&gt;() function.</source>
          <target state="translated">在映射时，可以通过由&lt;a href=&quot;qvideoframe#bits&quot;&gt;bits&lt;/a&gt;（）函数返回的指针直接访问视频帧的内容。</target>
        </trans-unit>
        <trans-unit id="45e6d91218c65ba74df0c36e01a88a27f955cb3a" translate="yes" xml:space="preserve">
          <source>While navigating the results in forward-only mode, the handle of &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; may change. Applications that use the low-level handle of SQL result must get a new handle after each call to any of &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; fetch functions. Example:</source>
          <target state="translated">在仅前进模式下导航结果时，&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;的句柄可能会更改。每次调用任何&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;获取函数后，使用SQL结果的低级句柄的应用程序必须获得一个新的句柄。例：</target>
        </trans-unit>
        <trans-unit id="d5704d0e1830aca0738fcc7114f136a7e87d7f0e" translate="yes" xml:space="preserve">
          <source>While not strictly required, the typical usage is to inherit from this class. The subclass is then exposed to QML by registering it to the type system. The &lt;a href=&quot;qml-qtquick3d-model#geometry-prop&quot;&gt;geometry&lt;/a&gt; property of a Model can then be set to reference an instance of the registered type.</source>
          <target state="translated">尽管不是严格要求，但是典型用法是从此类继承。然后，通过将子类注册到类型系统，使其暴露于QML。然后可以将模型的&lt;a href=&quot;qml-qtquick3d-model#geometry-prop&quot;&gt;geometry&lt;/a&gt;属性设置为引用已注册类型的实例。</target>
        </trans-unit>
        <trans-unit id="267b16b9caaea63b7c9b12c77bfdbff984b8309c" translate="yes" xml:space="preserve">
          <source>While not strictly required, the typical usage is to inherit from this class. The subclass is then exposed to QML by registering it to the type system. The &lt;a href=&quot;qml-qtquick3d-texture#textureData-prop&quot;&gt;textureData&lt;/a&gt; property of a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; can then be set to reference an instance of the registered type.</source>
          <target state="translated">尽管不是严格要求，但是典型用法是从此类继承。然后，通过将子类注册到类型系统，使其暴露于QML。然后可以将&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt;的&lt;a href=&quot;qml-qtquick3d-texture#textureData-prop&quot;&gt;textureData&lt;/a&gt;属性设置为引用已注册类型的实例。</target>
        </trans-unit>
        <trans-unit id="e4eed71ab9ac65e6204cd8a210e65b08c5bb6b65" translate="yes" xml:space="preserve">
          <source>While not the default for &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;, OpenGL is still commonly used in many Qt applications, for example in &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;-based applications building on &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; or &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;. The following sections cover some OpenGL specifics of a Qt build.</source>
          <target state="translated">尽管不是&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;的默认设置，但OpenGL仍在许多Qt应用程序中普遍使用，例如，在&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;或&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;上基于&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;的应用程序中。以下各节介绍了Qt构建的一些OpenGL详细信息。</target>
        </trans-unit>
        <trans-unit id="13af66f226f16c92acb9212a88a7d8e27f29fa0c" translate="yes" xml:space="preserve">
          <source>While on some platforms this will be a no-op, some may perform windowing system dependent synchronization. For example, on Wayland this will add send a wl_surface.frame request in order to prevent the driver from blocking for minimized windows.</source>
          <target state="translated">虽然在一些平台上,这将是一个没有操作,一些平台可能会执行依赖于窗口系统的同步。例如,在Wayland上,这将增加发送wl_surface.frame请求,以防止驱动程序阻塞最小化窗口。</target>
        </trans-unit>
        <trans-unit id="19a0ca3fe34ef687144b8c5cae796cac1b5dca67" translate="yes" xml:space="preserve">
          <source>While on some platforms this will be a no-op, some may perform windowing system dependent synchronization. For example, on X11 this will update &lt;code&gt;_NET_WM_SYNC_REQUEST_COUNTER&lt;/code&gt;.</source>
          <target state="translated">在某些平台上，这将是无人值守的，而某些平台可能会执行与窗口系统相关的同步。例如，在X11上，这将更新 &lt;code&gt;_NET_WM_SYNC_REQUEST_COUNTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec118cf91cb7bab4a1355e9d50cae4dc0e6da10a" translate="yes" xml:space="preserve">
          <source>While reading the results of a forward-only query with PostgreSQL, the database connection cannot be used to execute other queries. This is a limitation of libpq library. Example:</source>
          <target state="translated">当使用PostgreSQL读取只向前查询的结果时,数据库连接不能用于执行其他查询。这是libpq库的一个限制。例子:</target>
        </trans-unit>
        <trans-unit id="39b99b5cba25006c2627aba1051f9c2cb6e01931" translate="yes" xml:space="preserve">
          <source>While syntactically identical, the way 2D child items are handled is quite different internally. In Qt 6.0 there is no implicit render to texture step. Rather, the 2D Qt Quick content is rendered in line, with the appropriate perspective projection, in the same render pass, which provides better performance, lower resource usage, and in some cases potentially improved visual fidelity (with &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;, for example). See &lt;a href=&quot;qtquick3d-2d&quot;&gt;Qt Quick 3D Scenes with 2D Content&lt;/a&gt; for an overview.</source>
          <target state="translated">虽然语法上相同，但内部处理2D子项的方式却大不相同。在Qt 6.0中，没有隐式渲染到纹理的步骤。相反，二维Qt Quick内容以适当的透视投影在同一渲染过程中按行渲染，从而提供了更好的性能，更低的资源使用率，并且在某些情况下（例如使用&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;）可能会改善视觉保真度。有关概述，请参见&lt;a href=&quot;qtquick3d-2d&quot;&gt;具有2D内容的Qt Quick 3D场景&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c8ae4c94f6e1a743964b2192598896bed81eaf5" translate="yes" xml:space="preserve">
          <source>While the 2D items are rended in-line with 3D objects, they do not participate in lighting, and will not be casting shadows.</source>
          <target state="translated">虽然2D物品是与3D物体同步渲染的,但它们不参与照明,也不会投射阴影。</target>
        </trans-unit>
        <trans-unit id="3f23969546517ae0fc928eb331bb4454b78e90fa" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;qremoteobjecthostbase#proxy&quot;&gt;proxy&lt;/a&gt;() functionality allows &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects on another network to be acquired(), reverseProxy() allows &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects to be &quot;pushed&quot; to an otherwise inaccessible network.</source>
          <target state="translated">虽然&lt;a href=&quot;qremoteobjecthostbase#proxy&quot;&gt;proxy&lt;/a&gt;（）功能允许获取另一个网络上的&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;对象，但是reverseProxy（）允许将&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;对象&amp;ldquo;推&amp;rdquo;到原本无法访问的网络中。</target>
        </trans-unit>
        <trans-unit id="95dcf4df6cd449f4e72807f18f0a7e1c2207be7f" translate="yes" xml:space="preserve">
          <source>While the API is very similar, there is an important difference between the two: &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; always renders offscreen, using framebuffer objects. QGLWidget on the other hand uses a native window and surface. The latter causes issues when using it in complex user interfaces since, depending on the platform, such native child widgets may have various limitations, regarding stacking orders for example. &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; avoids this by not creating a separate native window.</source>
          <target state="translated">尽管API非常相似，但两者之间有一个重要区别：&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;始终使用帧缓冲对象在屏幕外渲染。另一方面，QGLWidget使用本机窗口和表面。后者在复杂的用户界面中使用时会引起问题，因为根据平台的不同，此类本机子窗口小部件可能具有各种限制，例如，有关堆叠顺序的限制。&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;通过不创建单独的本机窗口来避免这种情况。</target>
        </trans-unit>
        <trans-unit id="45b78736fc537ea4149117477455ad4f321b16bb" translate="yes" xml:space="preserve">
          <source>While the API is very similar, there is an important difference between the two: QOpenGLWidget always renders offscreen, using framebuffer objects. QGLWidget on the other hand uses a native window and surface. The latter causes issues when using it in complex user interfaces since, depending on the platform, such native child widgets may have various limitations, regarding stacking orders for example. QOpenGLWidget avoids this by not creating a separate native window.</source>
          <target state="translated">虽然API非常相似,但两者之间有一个重要的区别。QOpenGLWidget总是在屏幕外使用framebuffer对象进行渲染。而QGLWidget则使用原生窗口和曲面。后者会导致在复杂的用户界面中使用它时出现问题,因为根据平台的不同,这种原生的子部件可能会有各种限制,例如关于堆叠顺序。QOpenGLWidget通过不创建一个单独的本地窗口来避免这个问题。</target>
        </trans-unit>
        <trans-unit id="217d5ce3e3111946893366d407e8970f2bee79c3" translate="yes" xml:space="preserve">
          <source>While the Navigator is in active tracking mode, this property tells whether the position from &lt;a href=&quot;qml-qt-labs-location-navigator#positionSource-prop&quot;&gt;positionSource&lt;/a&gt; is on the route or not.</source>
          <target state="translated">在导航器处于活动跟踪模式下时，此属性将指示positionSource中的&lt;a href=&quot;qml-qt-labs-location-navigator#positionSource-prop&quot;&gt;位置&lt;/a&gt;是否在路线上。</target>
        </trans-unit>
        <trans-unit id="b0c7bac6a26931f3dd8042bafc31473fb658a0dc" translate="yes" xml:space="preserve">
          <source>While the QML engine allows QML application to load images from filesystem or network resources, some applications may require the additional option of loading images from C++ based processes. This can be implemented through the &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; class, which provides support for pixmap loading and threaded image requests for QML applications. Any QML application that requests an image through the special &quot;image:&quot; URL scheme will be directed to an appropriate image provider to load the image.</source>
          <target state="translated">虽然QML引擎允许QML应用程序从文件系统或网络资源加载图像，但某些应用程序可能需要从基于C ++的进程加载图像的附加选项。这可以通过&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt;类实现，该类为QML应用程序的像素图加载和线程图像请求提供支持。通过特殊的&amp;ldquo; image：&amp;rdquo; URL方案请求图像的任何QML应用程序都将被定向到适当的图像提供程序以加载图像。</target>
        </trans-unit>
        <trans-unit id="ee656c10b36be3adf856d1d9d60459c249296f12" translate="yes" xml:space="preserve">
          <source>While the Qt Quick module already provides a rich library of visual item types for use in a QML application, some developers may wish to define their own item-derived types in C++ and expose them to the QML type system. The easiest way to do this is to subclass &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;, which is the base type for all visual types in the Qt Quick module. See the &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; documentation for more details.</source>
          <target state="translated">虽然Qt Quick模块已经提供了丰富的可视项类型库，供QML应用程序使用，但某些开发人员可能希望在C ++中定义自己的项派生类型，并将其公开给QML类型系统。最简单的方法是将&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;子类化，QQuickItem是Qt Quick模块中所有视觉类型的基本类型。有关更多详细信息，请参见&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="6b18fffad1b970f0544fddddb700de339361caab" translate="yes" xml:space="preserve">
          <source>While the RGB and HSV color models are used for display on computer monitors, the CMYK model is used in the four-color printing process of printing presses and some hard-copy devices.</source>
          <target state="translated">RGB和HSV颜色模型用于计算机显示器上的显示,而CMYK模型则用于印刷机和一些硬拷贝设备的四色印刷过程。</target>
        </trans-unit>
        <trans-unit id="ea08020ac5982c94133bf1a8ad5929632038751a" translate="yes" xml:space="preserve">
          <source>While the built-in materials of Qt Quick 3D, &lt;a href=&quot;qml-qtquick3d-defaultmaterial&quot;&gt;DefaultMaterial&lt;/a&gt; and &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt;, allow a wide degree of customization via their properties, they do not provide programmability on the vertex and fragment shader level. To allow that, the &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; type is provided.</source>
          <target state="translated">虽然Qt Quick 3D的内置材料&lt;a href=&quot;qml-qtquick3d-defaultmaterial&quot;&gt;DefaultMaterial&lt;/a&gt;和&lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt;通过其属性可以进行广泛的自定义，但它们不能在顶点和片段着色器级别提供可编程性。为此，提供了&lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="11e570f8e057d209301344726ad6db9a786ee25f" translate="yes" xml:space="preserve">
          <source>While the camera state is changed to &lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera::ActiveState&lt;/a&gt;, starting the camera service can be asynchronous with the actual status reported with &lt;a href=&quot;qcamera#status-prop&quot;&gt;QCamera::status&lt;/a&gt; property.</source>
          <target state="translated">当摄像机状态更改为&lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera :: ActiveState时&lt;/a&gt;，启动摄像机服务可以与&lt;a href=&quot;qcamera#status-prop&quot;&gt;QCamera :: status&lt;/a&gt;属性报告的实际状态异步。</target>
        </trans-unit>
        <trans-unit id="214a66a92cca6a7dbdb605829f4f9982ba3fffe2" translate="yes" xml:space="preserve">
          <source>While the example is simple, there is a lot going on behind the scenes. Whenever the current item changes, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; sets the delegate's &lt;code&gt;Item::focus&lt;/code&gt; property. As the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; is a focus scope, this doesn't affect the rest of the application. However, if the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; itself has active focus this causes the delegate itself to receive active focus. In this example, the root type of the delegate is also a focus scope, which in turn gives active focus to the &lt;code&gt;Text&lt;/code&gt; type that actually performs the work of handling the &lt;code&gt;Return&lt;/code&gt; key.</source>
          <target state="translated">尽管示例很简单，但是幕后还有很多事情要做。每当当前项目更改时，&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView都会&lt;/a&gt;设置委托的 &lt;code&gt;Item::focus&lt;/code&gt; 属性。由于&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;是焦点范围，因此不会影响应用程序的其余部分。但是，如果&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;本身具有活动焦点，则这将导致委托本身获得活动焦点。在此示例中，委托的根类型也是焦点范围，这又将焦点集中在实际执行处理 &lt;code&gt;Return&lt;/code&gt; 键的 &lt;code&gt;Text&lt;/code&gt; 类型上。</target>
        </trans-unit>
        <trans-unit id="ff5c637f31b54b94be971c280f66902ea205e702" translate="yes" xml:space="preserve">
          <source>While the integer based functions take values in the range 0-255 (except &lt;a href=&quot;qcolor#hue&quot;&gt;hue&lt;/a&gt;() which must have values within the range 0-359), the floating point functions accept values in the range 0.0 - 1.0.</source>
          <target state="translated">尽管基于整数的函数的取值范围为0-255（&lt;a href=&quot;qcolor#hue&quot;&gt;色相&lt;/a&gt;（）除外，其值必须在0-359范围内），但浮点函数接受的取值范围为0.0-1.0。</target>
        </trans-unit>
        <trans-unit id="7e88c44a246cc0acfeed178fecc66c12a45168dd" translate="yes" xml:space="preserve">
          <source>While the left mouse button is pressed, mouse movement along x-axis moves the camera left and right and movement along y-axis moves it up and down.</source>
          <target state="translated">当鼠标左键被按下时,鼠标沿x轴移动摄像机左右移动,沿y轴移动摄像机上下移动。</target>
        </trans-unit>
        <trans-unit id="238539bec1e5de17e07b2d331eb50ed9a24ba8a1" translate="yes" xml:space="preserve">
          <source>While the left mouse button is pressed, mouse movement along x-axis pans the camera and movement along y-axis tilts it.</source>
          <target state="translated">当按下鼠标左键时,鼠标沿X轴移动可平移摄像机,沿Y轴移动可使其倾斜。</target>
        </trans-unit>
        <trans-unit id="956d26cf53341ebbab10aed503e09b8c67ae1e6c" translate="yes" xml:space="preserve">
          <source>While the macOS style fully supports high-DPI, the Windows desktop style currently has some limitations with certain scale factors. In these cases, consider using the Fusion style instead, which aims to support high-DPI in all cases.</source>
          <target state="translated">虽然macOS风格完全支持高DPI,但Windows桌面风格目前在某些比例因素上有一些限制。在这些情况下,可以考虑使用Fusion风格代替,它的目标是在所有情况下都支持高DPI。</target>
        </trans-unit>
        <trans-unit id="25ad61f405be913349b3f8c561eee5a0327bb8b2" translate="yes" xml:space="preserve">
          <source>While the macOS style fully supports high-DPI, the Windows desktop style currently has some limitations with certain scale factors. In these cases, consider using the Fusion style instead, which supports high-DPI in all cases.</source>
          <target state="translated">虽然macOS风格完全支持高DPI,但Windows桌面风格目前在某些比例因素上有一些限制。在这些情况下,可以考虑使用Fusion风格来代替,它在所有情况下都支持高DPI。</target>
        </trans-unit>
        <trans-unit id="78d1e6aef8ef4ed7cd7b8d0163ca00a8f0d7bbd3" translate="yes" xml:space="preserve">
          <source>While the model is updating the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; of the model is set to &lt;code&gt;PlaceSearchModel.Loading&lt;/code&gt;. If the model is successfully updated the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchModel.Ready&lt;/code&gt;, while if it unsuccessfully completes, the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchModel.Error&lt;/code&gt; and the model cleared.</source>
          <target state="translated">在模型更新时，模型的&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchModel.Loading&lt;/code&gt; 。如果成功更新了模型，则将&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchModel.Ready&lt;/code&gt; ，如果未成功完成，则将&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchModel.Error&lt;/code&gt; 并清除模型。</target>
        </trans-unit>
        <trans-unit id="82409defd12979c4c5e7be418ea87926591930b2" translate="yes" xml:space="preserve">
          <source>While the model is updating the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; of the model is set to &lt;code&gt;PlaceSearchSuggestionModel.Loading&lt;/code&gt;. If the model is successfully updated, the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchSuggestionModel.Ready&lt;/code&gt;, while if it unsuccessfully completes, the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchSuggestionModel.Error&lt;/code&gt; and the model cleared.</source>
          <target state="translated">在模型更新时，模型的&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchSuggestionModel.Loading&lt;/code&gt; 。如果成功更新了模型，则将&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchSuggestionModel.Ready&lt;/code&gt; ，如果未成功完成，则将&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;状态&lt;/a&gt;设置为 &lt;code&gt;PlaceSearchSuggestionModel.Error&lt;/code&gt; 并清除模型。</target>
        </trans-unit>
        <trans-unit id="5c49b7bf8b7f523926345002ea02335ac0fed742" translate="yes" xml:space="preserve">
          <source>While the purpose of threads is to allow code to run in parallel, there are times where threads must stop and wait for other threads. For example, if two threads try to write to the same variable simultaneously, the result is undefined. The principle of forcing threads to wait for one another is called</source>
          <target state="translated">虽然线程的目的是让代码并行运行,但有些时候,线程必须停下来等待其他线程。例如,如果两个线程试图同时向同一个变量写入,结果是未定义的。强制线程互相等待的原则叫做</target>
        </trans-unit>
        <trans-unit id="8892b409c35b28da95d5741e0a7c085aa4772a1d" translate="yes" xml:space="preserve">
          <source>While the recorder state is changed immediately to &lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder::RecordingState&lt;/a&gt;, recording may start asynchronously, with &lt;a href=&quot;qmediarecorder#status-prop&quot;&gt;statusChanged&lt;/a&gt;(&lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder::RecordingStatus&lt;/a&gt;) signal emitted when recording starts.</source>
          <target state="translated">当记录器状态立即更改为&lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder :: RecordingState时&lt;/a&gt;，记录可能异步开始，并在记录开始时发出&lt;a href=&quot;qmediarecorder#status-prop&quot;&gt;statusChanged&lt;/a&gt;（&lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder :: RecordingStatus&lt;/a&gt;）信号。</target>
        </trans-unit>
        <trans-unit id="378fb9d85b29aaa0bdd3082e5a9f0f6de11a9f08" translate="yes" xml:space="preserve">
          <source>While the render thread is preparing the new frame, the GUI thread calls &lt;a href=&quot;qquickitem#updatePolish&quot;&gt;QQuickItem::updatePolish&lt;/a&gt;() to do final touch-up of items before they are rendered.</source>
          <target state="translated">在渲染线程准备新框架时，GUI线程调用&lt;a href=&quot;qquickitem#updatePolish&quot;&gt;QQuickItem :: updatePolish&lt;/a&gt;（）对项目进行最终修饰，然后再渲染它们。</target>
        </trans-unit>
        <trans-unit id="33b9994a33576273756053dd2bfc7d127452b698" translate="yes" xml:space="preserve">
          <source>While the render thread is rendering, the GUI is free to advance animations, process events, etc.</source>
          <target state="translated">在渲染线程渲染时,GUI可以自由地推进动画、处理事件等。</target>
        </trans-unit>
        <trans-unit id="2836e2c9a00364d76e8fc6eb4948bfa345cdd8bf" translate="yes" xml:space="preserve">
          <source>While the right mouse button is pressed, mouse movement along x-axis pans the camera around the camera view center and movement along y-axis tilts it around the camera view center.</source>
          <target state="translated">当按下鼠标右键时,鼠标沿X轴移动时,摄像机围绕摄像机视图中心平移,沿Y轴移动时,摄像机围绕摄像机视图中心倾斜。</target>
        </trans-unit>
        <trans-unit id="62fe0b25f36e60029229d490f46787627435cfd5" translate="yes" xml:space="preserve">
          <source>While the scene manager is an internal API, it is important to know that the scene manager is responsible for calling updateSpatialNode on all objects that have been marked dirty by calling the update() method.</source>
          <target state="translated">虽然场景管理器是一个内部API,但要知道,场景管理器负责对所有通过调用update()方法被标记为脏的对象调用updateSpatialNode。</target>
        </trans-unit>
        <trans-unit id="c73547bc5f11f1dcff2753df8c5f50a9d2d0b231" translate="yes" xml:space="preserve">
          <source>While the stream is playing, you can set a notify interval in milliseconds with &lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;(). This interval specifies the time between two emissions of the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal. This is relative to the position in the stream, i.e., if the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; is in the SuspendedState or the IdleState, the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal is not emitted. A typical use-case would be to update a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt; that allows seeking in the stream. If you want the time since playback started regardless of which states the audio output has been in, &lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;() is the function for you.</source>
          <target state="translated">在播放流时，可以使用&lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;（）设置通知间隔（以毫秒为单位）。该间隔指定两次发出&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号之间的时间。这是相对于流中的位置的，即，如果&lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;位于SuspendedState或IdleState中，则不会发出&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号。典型的用例是更新允许在流中查找的&lt;a href=&quot;qslider&quot;&gt;滑块&lt;/a&gt;。如果您希望自播放开始以来的时间，而不管音频输出处于哪种状态，&lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;那么elapsedUSecs&lt;/a&gt;（）就是您的理想选择。</target>
        </trans-unit>
        <trans-unit id="3f52ae25e878f476dc42b3fe4bc01a6ca0b253de" translate="yes" xml:space="preserve">
          <source>While the stream is playing, you can set a notify interval in milliseconds with &lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;(). This interval specifies the time between two emissions of the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal. This is relative to the position in the stream, i.e., if the QAudioOutput is in the SuspendedState or the IdleState, the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal is not emitted. A typical use-case would be to update a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt; that allows seeking in the stream. If you want the time since playback started regardless of which states the audio output has been in, &lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;() is the function for you.</source>
          <target state="translated">在播放流时，可以使用&lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;（）设置通知间隔（以毫秒为单位）。此时间间隔指定两次发出&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号之间的时间。这是相对于流中的位置的，即，如果QAudioOutput位于SuspendedState或IdleState中，则不会发出&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号。典型的用例是更新允许在流中查找的&lt;a href=&quot;qslider&quot;&gt;滑块&lt;/a&gt;。如果您希望自播放开始以来的时间，而不管音频输出处于哪种状态，&lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;那么elapsedUSecs&lt;/a&gt;（）就是您的理想选择。</target>
        </trans-unit>
        <trans-unit id="c8000f6c4a4a4fdf29886c2d5b63a829f3261e81" translate="yes" xml:space="preserve">
          <source>While the supported settings are unknown in this state, it's allowed to set the camera capture settings like codec, resolution, or frame rate.</source>
          <target state="translated">虽然在这种状态下支持的设置是未知的,但可以设置相机的捕捉设置,如编解码器、分辨率或帧率。</target>
        </trans-unit>
        <trans-unit id="5e63a013e47eab68d0585a4350fc0e24e27e3ba9" translate="yes" xml:space="preserve">
          <source>While the supported settings are unknown in this state, you can still set the camera capture settings like codec, resolution, or frame rate.</source>
          <target state="translated">虽然在这种状态下支持的设置是未知的,但你仍然可以设置相机的捕捉设置,如编解码器、分辨率或帧率。</target>
        </trans-unit>
        <trans-unit id="890d662caad82c18a023c4949978cc81f5a914ad" translate="yes" xml:space="preserve">
          <source>While the triggering of this signal may be considered an error condition, it does not imply the emission of the &lt;code&gt;error()&lt;/code&gt; signal. Only the emission of &lt;code&gt;requestTimeout()&lt;/code&gt; is required to indicate a timeout.</source>
          <target state="translated">尽管此信号的触发可以被认为是错误情况，但这并不意味着会发出 &lt;code&gt;error()&lt;/code&gt; 信号。仅需要发出 &lt;code&gt;requestTimeout()&lt;/code&gt; 来指示超时。</target>
        </trans-unit>
        <trans-unit id="3db5f5027c5bfbd27756e1a4d5f2db9c6ab87ab4" translate="yes" xml:space="preserve">
          <source>While the triggering of this signal may be considered an error condition, it does not imply the emission of the &lt;code&gt;error()&lt;/code&gt; signal. Only the emission of &lt;code&gt;updateTimeout()&lt;/code&gt; is required to indicate a timeout.</source>
          <target state="translated">尽管此信号的触发可以被认为是错误情况，但这并不意味着会发出 &lt;code&gt;error()&lt;/code&gt; 信号。仅需要发出 &lt;code&gt;updateTimeout()&lt;/code&gt; 即可指示超时。</target>
        </trans-unit>
        <trans-unit id="1965514ae7dbcb22178d0c72da3b0f18ece39132" translate="yes" xml:space="preserve">
          <source>While the type has a name and a type, it cannot be created, and the given error</source>
          <target state="translated">虽然该类型有一个名称和类型,但它不能被创建,并且给出的错误是</target>
        </trans-unit>
        <trans-unit id="b6cec89d64ecf87ac7795c052dd8a1107c1c1a45" translate="yes" xml:space="preserve">
          <source>While the type has a name and a type, it cannot be created. An error message with the given</source>
          <target state="translated">虽然该类型有名称和类型,但不能创建。给定的错误信息为</target>
        </trans-unit>
        <trans-unit id="a01d732f1e6078a18b3d77f11f5920c2a0f80499" translate="yes" xml:space="preserve">
          <source>While this is a convenient way to store array and map-type values, you must be aware that the &lt;code&gt;items&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; properties above are</source>
          <target state="translated">尽管这是一种方便的存储数组和地图类型值的方法，但您必须意识到上面的 &lt;code&gt;items&lt;/code&gt; 和 &lt;code&gt;attributes&lt;/code&gt; 属性是</target>
        </trans-unit>
        <trans-unit id="19234880a4c7a1d117b722d68478a705dd237820" translate="yes" xml:space="preserve">
          <source>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</source>
          <target state="translated">虽然这个属性是在Qt 5.5中引入的,但相关的访问函数从这个类的第一个版本开始就存在。</target>
        </trans-unit>
        <trans-unit id="14f55592618070d907f9667b31b4b236d2545fe0" translate="yes" xml:space="preserve">
          <source>While this property was introduced in 5.10, the corresponding accessor method has always been there.</source>
          <target state="translated">虽然这个属性是在5.10中引入的,但相应的访问器方法一直存在。</target>
        </trans-unit>
        <trans-unit id="7cb57e8a4fc04a5334c677b4e1587452ee29bf97" translate="yes" xml:space="preserve">
          <source>While unavoidable with techniques that need it, &lt;code&gt;DEPTH_TEXTURE&lt;/code&gt; implies an additional rendering pass to generate the contents of that texture, which can also present a hit on less capable hardware. Therefore, use &lt;code&gt;DEPTH_TEXTURE&lt;/code&gt; in the effect's shaders only when essential.</source>
          <target state="translated">尽管在需要它的技术中不可避免，但是 &lt;code&gt;DEPTH_TEXTURE&lt;/code&gt; 意味着需要进行一次额外的渲染以生成该纹理的内容，这也可能对功能较弱的硬件造成打击。因此，仅在必要 &lt;code&gt;DEPTH_TEXTURE&lt;/code&gt; 在效果的着色器中使用DEPTH_TEXTURE。</target>
        </trans-unit>
        <trans-unit id="3487f0c2d4d848ba0d1eeb18fa26d7605ad3426b" translate="yes" xml:space="preserve">
          <source>While using &lt;a href=&quot;qml-qtremoteobjects-qtremoteobjects&quot;&gt;Qt Remote Objects&lt;/a&gt; for communication is a cross-platform solution, &lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; Class Reference} is Android specific. &lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; is a convenience class that implements the most important methods in &lt;a href=&quot;https://developer.android.com/reference/android/os/Binder.html&quot;&gt;Android: Binder&lt;/a&gt;. It allows sending &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; objcets between processes.</source>
          <target state="translated">使用&lt;a href=&quot;qml-qtremoteobjects-qtremoteobjects&quot;&gt;Qt远程对象&lt;/a&gt;进行通信是跨平台的解决方案，而&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt;类参考}是Android特定的。&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt;是一个便利类，用于实现&lt;a href=&quot;https://developer.android.com/reference/android/os/Binder.html&quot;&gt;Android中&lt;/a&gt;最重要的方法：Binder。它允许在进程之间发送&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;或&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; objcets。</target>
        </trans-unit>
        <trans-unit id="4bbe1a0f6b383349e0d6ab2f7de0714b0c79ce7c" translate="yes" xml:space="preserve">
          <source>While verifying test results by capturing and comparing bitmaps is sometimes necessary, it can be quite fragile and labor-intensive.</source>
          <target state="translated">虽然通过捕获和比较位图来验证测试结果有时是必要的,但它可能是相当脆弱和劳动密集型的。</target>
        </trans-unit>
        <trans-unit id="f22dbb245db35894cef5ae8f4a1c53d507430ac2" translate="yes" xml:space="preserve">
          <source>While we are at it, why not visualize normals as well, this time on a sphere. Like with UVs, if a custom vertex shader snippet were to alter the value of NORMAL, the interpolated per-fragment value in the fragment shader, also exposed under the name NORMAL, would reflect those adjustments.</source>
          <target state="translated">既然如此,为什么不把法线也可视化呢,这次是在一个球体上。和UV一样,如果一个自定义顶点着色器代码段改变了NORMAL的值,那么同样以NORMAL为名的片段着色器中的每片段内插值将反映出这些调整。</target>
        </trans-unit>
        <trans-unit id="4a2a6a35c6ca4d0d3ac0d2ce600a59b30c8d8a82" translate="yes" xml:space="preserve">
          <source>While we prefer to name our C++ source files &lt;code&gt;.cpp&lt;/code&gt;, you can use any other extension, such as &lt;code&gt;.C&lt;/code&gt;, &lt;code&gt;.cc&lt;/code&gt;, &lt;code&gt;.CC&lt;/code&gt;, &lt;code&gt;.cxx&lt;/code&gt;, and &lt;code&gt;.c++&lt;/code&gt;, if you prefer.</source>
          <target state="translated">尽管我们更喜欢将C ++源文件命名为 &lt;code&gt;.cpp&lt;/code&gt; ，但您可以根据需要使用其他任何扩展名，例如 &lt;code&gt;.C&lt;/code&gt; ， &lt;code&gt;.cc&lt;/code&gt; ， &lt;code&gt;.CC&lt;/code&gt; ， &lt;code&gt;.cxx&lt;/code&gt; 和 &lt;code&gt;.c++&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="040a4d00e5bebdab30cb275ef54f205c01e7f2d8" translate="yes" xml:space="preserve">
          <source>While writing, the contents will be written to a temporary file, and if no error happened, &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() will move it to the final file. This ensures that no data at the final file is lost in case an error happens while writing, and no partially-written file is ever present at the final location. Always use &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; when saving entire documents to disk.</source>
          <target state="translated">写入时，内容将被写入一个临时文件，如果没有错误发生，则&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）会将其移至最终文件。这样可以确保在写入过程中发生错误时，最终文件中的数据不会丢失，并且最终位置中不会存在任何部分写入的文件。将整个文档保存到磁盘时，请始终使用&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83cb1a8109e22dda2f457728fc209701acd558d6" translate="yes" xml:space="preserve">
          <source>While writing, the contents will be written to a temporary file, and if no error happened, &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() will move it to the final file. This ensures that no data at the final file is lost in case an error happens while writing, and no partially-written file is ever present at the final location. Always use QSaveFile when saving entire documents to disk.</source>
          <target state="translated">写入时，内容将被写入一个临时文件，如果没有错误发生，则&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）会将其移至最终文件。这样可确保在写入过程中发生错误时，最终文件中的数据不会丢失，并且最终位置中永远不会存在部分写入的文件。将整个文档保存到磁盘时，请始终使用QSaveFile。</target>
        </trans-unit>
        <trans-unit id="b4261e57f9b901a912688d75b22edcb877eeea97" translate="yes" xml:space="preserve">
          <source>Whilst SAX2 leaves it to the user to define and implement whatever features are required, support for</source>
          <target state="translated">虽然SAX2允许用户定义和实现任何所需的功能,但对以下功能的支持也是如此</target>
        </trans-unit>
        <trans-unit id="ee1c3d063ab64e3830ce46d40aa25b31fd6708f9" translate="yes" xml:space="preserve">
          <source>Whilst reading (a SAX2 parser is usually referred to as &quot;reader&quot;) the above document three events would be triggered:</source>
          <target state="translated">在阅读时(SAX2解析器通常被称为 &quot;阅读器&quot;),上述文档会被触发三个事件。</target>
        </trans-unit>
        <trans-unit id="7aa362991263dbce17194eb62185c8c8a4149920" translate="yes" xml:space="preserve">
          <source>Whilst this class provides access to any type of extension, only some are guaranteed to be returned in a format that will remain unchanged between releases. The &lt;a href=&quot;qsslcertificateextension#isSupported&quot;&gt;isSupported&lt;/a&gt;() method returns &lt;code&gt;true&lt;/code&gt; for extensions where this is the case.</source>
          <target state="translated">尽管此类提供了对任何类型的扩展名的访问权限，但仅保证某些扩展名将以在发行版之间保持不变的格式返回。在这种情况下，&lt;a href=&quot;qsslcertificateextension#isSupported&quot;&gt;isSupported&lt;/a&gt;（）方法对扩展名返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4716b4e4fbe6f125c22cea63b8d59f96bd0d83c4" translate="yes" xml:space="preserve">
          <source>Whilst this is a fast and simple approach to read XML documents, manipulation is difficult because data is not stored, simply handled and discarded serially. The &lt;a href=&quot;xml-dom-tml#&quot;&gt;DOM interface&lt;/a&gt; reads in and stores the whole document in a tree structure; this takes more memory, but makes it easier to manipulate the document's structure.</source>
          <target state="translated">尽管这是一种读取XML文档的快速简便的方法，但是由于没有按顺序存储，简单处理和丢弃数据，因此操作很困难。该&lt;a href=&quot;xml-dom-tml#&quot;&gt;DOM接口&lt;/a&gt;中读取并存储在一个树状结构整个文档; 这会占用更多的内存，但更易于操纵文档的结构。</target>
        </trans-unit>
        <trans-unit id="37619fc13053f82b7cb7da3d24ceb1598ab6d05c" translate="yes" xml:space="preserve">
          <source>White</source>
          <target state="translated">White</target>
        </trans-unit>
        <trans-unit id="be119f3e9b0742347aed947d1e924019cdc133d2" translate="yes" xml:space="preserve">
          <source>WhiteBalance</source>
          <target state="translated">WhiteBalance</target>
        </trans-unit>
        <trans-unit id="4190ce86b53993cb85718f334bfe5be99c073792" translate="yes" xml:space="preserve">
          <source>WhiteBalanceAuto</source>
          <target state="translated">WhiteBalanceAuto</target>
        </trans-unit>
        <trans-unit id="8939e2ac028fecf3300eb31b7396ce21fc017d61" translate="yes" xml:space="preserve">
          <source>WhiteBalanceCloudy</source>
          <target state="translated">WhiteBalanceCloudy</target>
        </trans-unit>
        <trans-unit id="b90e622dfa822b4dbb410c3ab4b32c80a54c0986" translate="yes" xml:space="preserve">
          <source>WhiteBalanceFlash</source>
          <target state="translated">WhiteBalanceFlash</target>
        </trans-unit>
        <trans-unit id="c1eab86531fbb329775b9990bfbb92b507eff540" translate="yes" xml:space="preserve">
          <source>WhiteBalanceFluorescent</source>
          <target state="translated">WhiteBalanceFluorescent</target>
        </trans-unit>
        <trans-unit id="893c1c3eff47e7fe498e0c6a700c33fd7380079c" translate="yes" xml:space="preserve">
          <source>WhiteBalanceManual</source>
          <target state="translated">WhiteBalanceManual</target>
        </trans-unit>
        <trans-unit id="d166e9c2606b779a48db9dd1654fdcd0f3aff31f" translate="yes" xml:space="preserve">
          <source>WhiteBalanceShade</source>
          <target state="translated">WhiteBalanceShade</target>
        </trans-unit>
        <trans-unit id="28b156f19ce49170e930c3340ac5df603218a633" translate="yes" xml:space="preserve">
          <source>WhiteBalanceSunlight</source>
          <target state="translated">WhiteBalanceSunlight</target>
        </trans-unit>
        <trans-unit id="23d7b3ae856fedabb39a2ada5effb06748e4eccf" translate="yes" xml:space="preserve">
          <source>WhiteBalanceSunset</source>
          <target state="translated">WhiteBalanceSunset</target>
        </trans-unit>
        <trans-unit id="6ae0c09dcbe702fd9cf02b30e60a3b7a8ba80fa8" translate="yes" xml:space="preserve">
          <source>WhiteBalanceTungsten</source>
          <target state="translated">WhiteBalanceTungsten</target>
        </trans-unit>
        <trans-unit id="9f3680581edbf2de7a09abd43359e2ff52fb8c75" translate="yes" xml:space="preserve">
          <source>WhiteBalanceVendor</source>
          <target state="translated">WhiteBalanceVendor</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="cf484dd6e26d5d8b523ce770ee700fdbc2cc42c0" translate="yes" xml:space="preserve">
          <source>Whitespace characters are all characters for which &lt;a href=&quot;qchar#isSpace&quot;&gt;QChar::isSpace&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">空格字符是&lt;a href=&quot;qchar#isSpace&quot;&gt;QChar :: isSpace&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 的所有字符。</target>
        </trans-unit>
        <trans-unit id="1bfce1148b8b147bf4f6c5c29d0b2ac864eccd7e" translate="yes" xml:space="preserve">
          <source>Whitespace is</source>
          <target state="translated">空白空间是</target>
        </trans-unit>
        <trans-unit id="619560393f5f70fda43352d58eaed0fa0beb1331" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which &lt;a href=&quot;qchar#isSpace&quot;&gt;QChar::isSpace&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空格表示&lt;a href=&quot;qchar#isSpace&quot;&gt;QChar :: isSpace&lt;/a&gt;（）返回 &lt;code&gt;true&lt;/code&gt; 的任何字符。这包括ASCII字符&amp;ldquo; \ t&amp;rdquo;，&amp;ldquo; \ n&amp;rdquo;，&amp;ldquo; \ v&amp;rdquo;，&amp;ldquo; \ f&amp;rdquo;，&amp;ldquo; \ r&amp;rdquo;和&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7bb86b55ec209f85b6753199094e7094ccac938d" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which the standard C++ &lt;code&gt;isspace()&lt;/code&gt; function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空格表示标准C ++ &lt;code&gt;isspace()&lt;/code&gt; 函数在C语言环境中返回 &lt;code&gt;true&lt;/code&gt; 的任何字符。这包括ASCII字符&amp;ldquo; \ t&amp;rdquo;，&amp;ldquo; \ n&amp;rdquo;，&amp;ldquo; \ v&amp;rdquo;，&amp;ldquo; \ f&amp;rdquo;，&amp;ldquo; \ r&amp;rdquo;和&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="761de1d78a55a5525fb526764547bc19aba5b107" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which the standard C++ &lt;code&gt;isspace()&lt;/code&gt; function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII isspace() function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空格表示标准C ++ &lt;code&gt;isspace()&lt;/code&gt; 函数在C语言环境中返回 &lt;code&gt;true&lt;/code&gt; 的任何字符。这包括ASCII isspace（）函数在C语言环境中返回 &lt;code&gt;true&lt;/code&gt; 。这包括ASCII字符&amp;ldquo; \ t&amp;rdquo;，&amp;ldquo; \ n&amp;rdquo;，&amp;ldquo; \ v&amp;rdquo;，&amp;ldquo; \ f&amp;rdquo;，&amp;ldquo; \ r&amp;rdquo;和&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2233df9a38ffce2a090e971a0244daca24a2351d" translate="yes" xml:space="preserve">
          <source>Whole number, e.g. 0, 10, or -20</source>
          <target state="translated">整数</target>
        </trans-unit>
        <trans-unit id="94b58a9bbcda32cd58aa6773214ce8f8577f38f2" translate="yes" xml:space="preserve">
          <source>Why Does Qt Use Moc for Signals and Slots?</source>
          <target state="translated">为什么Qt使用Moc做信号和插槽?</target>
        </trans-unit>
        <trans-unit id="bf8ddd04f924762daf335c1039abb1518d5d7a00" translate="yes" xml:space="preserve">
          <source>Why Single Execution Mode Is Much Faster</source>
          <target state="translated">为什么单次执行模式速度更快?</target>
        </trans-unit>
        <trans-unit id="6768deb223077e5a055916dae8c4c8a62d6eac6d" translate="yes" xml:space="preserve">
          <source>Why Standard Mode Is Slow</source>
          <target state="translated">为什么标准模式很慢</target>
        </trans-unit>
        <trans-unit id="d28289455c6a63f4c4d5e5674b844c64ced4953a" translate="yes" xml:space="preserve">
          <source>Why Use Multi-Process</source>
          <target state="translated">为什么要使用多进程</target>
        </trans-unit>
        <trans-unit id="59c0f38fe6c70095f1fe1a57575de23f6686b98e" translate="yes" xml:space="preserve">
          <source>Why Use Wayland Instead of X11 or Custom Solutions</source>
          <target state="translated">为什么要使用Wayland而不是X11或自定义解决方案?</target>
        </trans-unit>
        <trans-unit id="75faf730d6357ede69847c7a7ca9b978b5db0d56" translate="yes" xml:space="preserve">
          <source>Why are my elements created in the wrong order?</source>
          <target state="translated">为什么我的元素创建顺序错误?</target>
        </trans-unit>
        <trans-unit id="6da49307967cc44ac3bddaa3c5b248c5bd424e9f" translate="yes" xml:space="preserve">
          <source>Why can't I use &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in my XQuery?</source>
          <target state="translated">为什么我不能在XQuery中使用 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="8dd571ea364273914dcd00b60733716f9ef1f2fe" translate="yes" xml:space="preserve">
          <source>Why didn't my expression get evaluated?</source>
          <target state="translated">为什么我的表达式没有被评估?</target>
        </trans-unit>
        <trans-unit id="a4372bfde3e7592aabced7cd95c0ddefabee172a" translate="yes" xml:space="preserve">
          <source>Why didn't my path expression match anything?</source>
          <target state="translated">为什么我的路径表达没有任何匹配?</target>
        </trans-unit>
        <trans-unit id="a247f5521396b787b90f7af1088f96f87e2bf597" translate="yes" xml:space="preserve">
          <source>Why doesn't my FLWOR behave as expected?</source>
          <target state="translated">为什么我的FLWORD不能像预期的那样工作?</target>
        </trans-unit>
        <trans-unit id="83d0bcb2a31ec1e790fdb9b17582bad006644268" translate="yes" xml:space="preserve">
          <source>Why doesn't my return clause work?</source>
          <target state="translated">为什么我的退货条款不起作用?</target>
        </trans-unit>
        <trans-unit id="9d863fbd4a4b35d1abc87eb5fac9e58af686e66b" translate="yes" xml:space="preserve">
          <source>Why is this?</source>
          <target state="translated">为什么会这样?</target>
        </trans-unit>
        <trans-unit id="8c43626059ddc397faa99b3542a5abebf426b981" translate="yes" xml:space="preserve">
          <source>WiMAX</source>
          <target state="translated">WiMAX</target>
        </trans-unit>
        <trans-unit id="7d66c73954780bbe3b7d4d83a7707b18dddd48fc" translate="yes" xml:space="preserve">
          <source>Wide logo image file. This has to be 310x150 pixels. Supported on all Windows Store App platforms. Default provided by the mkspec.</source>
          <target state="translated">宽大的标志图像文件。这必须是310x150像素。支持所有Windows Store应用平台。默认由mkspec提供。</target>
        </trans-unit>
        <trans-unit id="df15305cc141d8294713eba43aaee44d1edfe3bd" translate="yes" xml:space="preserve">
          <source>Widget</source>
          <target state="translated">Widget</target>
        </trans-unit>
        <trans-unit id="1e44fcf40bcd1a072dad4b1c2c9eb0730c5aab3a" translate="yes" xml:space="preserve">
          <source>Widget Appearance and Style Related Classes</source>
          <target state="translated">小部件外观和样式相关类</target>
        </trans-unit>
        <trans-unit id="16f89fdc158507a8c9b68b673198d439286de1d9" translate="yes" xml:space="preserve">
          <source>Widget Appearance and Style-Related Classes</source>
          <target state="translated">小工具外观和风格相关的类</target>
        </trans-unit>
        <trans-unit id="31e064aa645d7208a9b4c1753e3e88ac210d308a" translate="yes" xml:space="preserve">
          <source>Widget Attribute</source>
          <target state="translated">小部件属性</target>
        </trans-unit>
        <trans-unit id="8a5e70773dcc3d881bcad04771d137842fe11c48" translate="yes" xml:space="preserve">
          <source>Widget Editing Mode</source>
          <target state="translated">小工具编辑模式</target>
        </trans-unit>
        <trans-unit id="82cba10de183bd2d066e4d81d2062e021a9ffc67" translate="yes" xml:space="preserve">
          <source>Widget Reference</source>
          <target state="translated">小工具参考</target>
        </trans-unit>
        <trans-unit id="669cd26f040ce8a52269e10701598141be881183" translate="yes" xml:space="preserve">
          <source>Widget Style Sheets</source>
          <target state="translated">小工具样式表</target>
        </trans-unit>
        <trans-unit id="decfc1956f3c1dad2ed2b8ec3230103ae01f3cec" translate="yes" xml:space="preserve">
          <source>Widget Walkthrough</source>
          <target state="translated">小工具演练</target>
        </trans-unit>
        <trans-unit id="3fb06c3da187ae118abe889db66ce6d91eba057e" translate="yes" xml:space="preserve">
          <source>Widget based examples layout incorrectly in iOS.</source>
          <target state="translated">基于小部件的例子在iOS中布局不正确。</target>
        </trans-unit>
        <trans-unit id="bd612066fd6c8940320fa98b2cbea5a4a13e6ed1" translate="yes" xml:space="preserve">
          <source>Widget for displaying the contents of a QGraphicsScene</source>
          <target state="translated">用于显示QGraphicsScene内容的小工具。</target>
        </trans-unit>
        <trans-unit id="4665d8fe3f895566ba2adc2b5e8336a1ac72d65b" translate="yes" xml:space="preserve">
          <source>Widget for editing dates and times</source>
          <target state="translated">编辑日期和时间的小工具</target>
        </trans-unit>
        <trans-unit id="e943a3b202aca7f181da9d270c259094ac6bfb6a" translate="yes" xml:space="preserve">
          <source>Widget for editing dates based on the QDateTimeEdit widget</source>
          <target state="translated">基于QDateTimeEdit小部件的编辑日期的小部件。</target>
        </trans-unit>
        <trans-unit id="40ecd7df1c60b8c35ece200872419d71bf64a6aa" translate="yes" xml:space="preserve">
          <source>Widget for editing times based on the QDateTimeEdit widget</source>
          <target state="translated">基于QDateTimeEdit小部件的编辑时间的小部件。</target>
        </trans-unit>
        <trans-unit id="57fe7643fd42b7d71e68aafba7d777e70cececfe" translate="yes" xml:space="preserve">
          <source>Widget for macOS that can be used to wrap arbitrary Cocoa views (i.e., NSView subclasses) and insert them into Qt hierarchies</source>
          <target state="translated">适用于macOS的小工具,可用于封装任意的Cocoa视图(即NSView子类),并将其插入Qt层次结构中。</target>
        </trans-unit>
        <trans-unit id="ba8679b21e1cd84939151ffa87f19f70ed2e7abd" translate="yes" xml:space="preserve">
          <source>Widget for macOS that provides a way to put Qt widgets into Cocoa hierarchies</source>
          <target state="translated">适用于macOS的小部件,它提供了一种将Qt小部件放入Cocoa层次结构的方法。</target>
        </trans-unit>
        <trans-unit id="3ea7e844a83e697d848193d0d86e6fe16d53be8e" translate="yes" xml:space="preserve">
          <source>Widget for previewing page layouts for printer output</source>
          <target state="translated">用于预览打印机输出的页面布局的小工具。</target>
        </trans-unit>
        <trans-unit id="3f50b33af17dd83c26762db6efa9c0abf87ac76e" translate="yes" xml:space="preserve">
          <source>Widget items do not support modality.</source>
          <target state="translated">小工具项目不支持模式。</target>
        </trans-unit>
        <trans-unit id="60e1290cd940a65020cfcf939c14de3016ab3930" translate="yes" xml:space="preserve">
          <source>Widget layout needs to be redone.</source>
          <target state="translated">小工具布局需要重做。</target>
        </trans-unit>
        <trans-unit id="ecb1b35e7261d239875412961edd8155c83fc298" translate="yes" xml:space="preserve">
          <source>Widget or Window focus is about to change (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;)</source>
          <target state="translated">窗口小部件或窗口的焦点即将更改（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6a56d7d6d3eda0d0f9b2013bbf44fdd531ae93b6" translate="yes" xml:space="preserve">
          <source>Widget or Window gains keyboard focus (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;).</source>
          <target state="translated">小部件或窗口获得键盘焦点（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b7260b87e9f172faa1c09738f92fd4ba736eceab" translate="yes" xml:space="preserve">
          <source>Widget or Window loses keyboard focus (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;).</source>
          <target state="translated">窗口小部件或窗口失去键盘焦点（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7a5b139b81da872d2ffc1ade6fb2283143ea9618" translate="yes" xml:space="preserve">
          <source>Widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop</source>
          <target state="translated">可以停靠在QMainWindow内或作为桌面上的顶层窗口浮动的小部件。</target>
        </trans-unit>
        <trans-unit id="e2ce56d39cc1d9d25a590bb2970603c4447d82ed" translate="yes" xml:space="preserve">
          <source>Widget that is used to display the contents of Scalable Vector Graphics (SVG) files</source>
          <target state="translated">用于显示可缩放矢量图形(SVG)文件内容的小工具。</target>
        </trans-unit>
        <trans-unit id="66b55f4774ddd3de11f64896fb31548eea207c27" translate="yes" xml:space="preserve">
          <source>Widget that is used to edit and display both plain and rich text</source>
          <target state="translated">用于编辑和显示纯文本和富文本的小工具。</target>
        </trans-unit>
        <trans-unit id="548ced6612af891b2750ce5cb89c5f41ea5df05d" translate="yes" xml:space="preserve">
          <source>Widget that is used to edit and display plain text</source>
          <target state="translated">用于编辑和显示纯文本的小工具。</target>
        </trans-unit>
        <trans-unit id="cee9cdd37b180dbf0d8251a214ae81a450ff6719" translate="yes" xml:space="preserve">
          <source>Widget that presents buttons in a layout that is appropriate to the current widget style</source>
          <target state="translated">以适合当前widget样式的布局显示按钮的widget。</target>
        </trans-unit>
        <trans-unit id="d339946ed5020f7b0aa387e1de734f5abb40c3bd" translate="yes" xml:space="preserve">
          <source>Widget was closed (&lt;a href=&quot;qcloseevent&quot;&gt;QCloseEvent&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qcloseevent&quot;&gt;窗口&lt;/a&gt;小部件已关闭（QCloseEvent）。</target>
        </trans-unit>
        <trans-unit id="07985052ee7750ec4f2a85bcac585e5a9c4788a3" translate="yes" xml:space="preserve">
          <source>Widget was hidden (&lt;a href=&quot;qhideevent&quot;&gt;QHideEvent&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qhideevent&quot;&gt;窗口&lt;/a&gt;小部件已隐藏（QHideEvent）。</target>
        </trans-unit>
        <trans-unit id="033bbc513d6dc62765474a6197875b4ced504eeb" translate="yes" xml:space="preserve">
          <source>Widget was moved (&lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;).</source>
          <target state="translated">小部件已移动（&lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="518f7ec608083e16824e10a10b08f51fe6ab73b5" translate="yes" xml:space="preserve">
          <source>Widget was resized (&lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;).</source>
          <target state="translated">窗口小部件已调整大小（&lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5eab2ea2104372c35211fb62f52c62a0a93daa42" translate="yes" xml:space="preserve">
          <source>Widget was shown on screen (&lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;).</source>
          <target state="translated">小部件显示在屏幕上（&lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9c7ef8d3feb63b591ee1fab94e628138b8697817" translate="yes" xml:space="preserve">
          <source>Widget's enabled state has changed.</source>
          <target state="translated">小工具的启用状态已经改变。</target>
        </trans-unit>
        <trans-unit id="7cb5faf0a4f21248e054a55edf6eabe09c1c8c5f" translate="yes" xml:space="preserve">
          <source>Widget's font has changed.</source>
          <target state="translated">小工具的字体已经改变。</target>
        </trans-unit>
        <trans-unit id="d4ac6f485c980b110b2956c14e39abda18f5f080" translate="yes" xml:space="preserve">
          <source>Widget's icon text has been changed. (Deprecated)</source>
          <target state="translated">小工具的图标文字已被更改。(已废弃)</target>
        </trans-unit>
        <trans-unit id="41c8a56257c77412816e996cea5101822508caa2" translate="yes" xml:space="preserve">
          <source>Widget's position changed (&lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;).</source>
          <target state="translated">小部件的位置已更改（&lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="32744d45deebf14ce0ec6527d0dab358dc236133" translate="yes" xml:space="preserve">
          <source>Widget's read-only state has changed (since Qt 5.4).</source>
          <target state="translated">Widget 的只读状态已经改变(自 Qt 5.4 起)。</target>
        </trans-unit>
        <trans-unit id="54318932bd246e420fc1b5da13204b7213a11ddb" translate="yes" xml:space="preserve">
          <source>Widget's size changed (&lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qresizeevent&quot;&gt;窗口&lt;/a&gt;小部件的大小已更改（QResizeEvent）。</target>
        </trans-unit>
        <trans-unit id="29db40d8bb7ea1e90d1dbc18279543169a4ce3ed" translate="yes" xml:space="preserve">
          <source>Widget's style has been changed.</source>
          <target state="translated">小工具的风格已经改变。</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="3f421c0aac098c418b50c5c3bcbd110589223e73" translate="yes" xml:space="preserve">
          <source>Widgets Classes</source>
          <target state="translated">小工具类</target>
        </trans-unit>
        <trans-unit id="26e41ea52b5739b9e0ec9255510d6463dbaf9639" translate="yes" xml:space="preserve">
          <source>Widgets Inside C++ Namespaces</source>
          <target state="translated">在C++命名空间内的小部件</target>
        </trans-unit>
        <trans-unit id="008ecc276f0fa35c32ff2bf4e97c5a9ce8676de0" translate="yes" xml:space="preserve">
          <source>Widgets Tutorial</source>
          <target state="translated">小工具教程</target>
        </trans-unit>
        <trans-unit id="a07d0d90d7eb4ac5ebbea3ebe5dd8d5d991c5eed" translate="yes" xml:space="preserve">
          <source>Widgets and Dialogs with Auto-Connect</source>
          <target state="translated">具有自动连接功能的小组件和对话框。</target>
        </trans-unit>
        <trans-unit id="344641154bdac90c3e210fb6d62e3c21264b495f" translate="yes" xml:space="preserve">
          <source>Widgets and Layouts</source>
          <target state="translated">小工具和布局</target>
        </trans-unit>
        <trans-unit id="1a27ba46d254289b76d964159e27c5c9e7cb5eae" translate="yes" xml:space="preserve">
          <source>Widgets and forms created with</source>
          <target state="translated">小部件和表格创建</target>
        </trans-unit>
        <trans-unit id="a85fe50534a0d44188b440e220eb499d9e7f63b4" translate="yes" xml:space="preserve">
          <source>Widgets are hidden if:</source>
          <target state="translated">小工具被隐藏,如果。</target>
        </trans-unit>
        <trans-unit id="5cc092b01f77dca9f63f3dd517ef7f260d13bdbe" translate="yes" xml:space="preserve">
          <source>Widgets are normally created without any stretch factor set. When they are laid out in a layout the widgets are given a share of space in accordance with their &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget::sizePolicy&lt;/a&gt;() or their minimum size hint whichever is the greater. Stretch factors are used to change how much space widgets are given in proportion to one another.</source>
          <target state="translated">小部件通常是在未设置任何拉伸因子的情况下创建的。当将它们布置在布局中时，将根据其&lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget :: sizePolicy&lt;/a&gt;（）或它们的最小大小提示（以较大者为准）为它们分配一定的空间。拉伸因子用于更改彼此之间成比例分配的空间小部件。</target>
        </trans-unit>
        <trans-unit id="1ad1a58da08f3901a8a19b9940b1b58f5d1fc6c7" translate="yes" xml:space="preserve">
          <source>Widgets are not necessarily drawn by asking the style to draw only one element. Widgets can make several calls to the style to draw different elements. An example is &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, which draws its tabs and frame individually.</source>
          <target state="translated">不必通过要求样式仅绘制一个元素来绘制小部件。小部件可以多次调用样式以绘制不同的元素。一个示例是&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;，它分别绘制其选项卡和框架。</target>
        </trans-unit>
        <trans-unit id="d86289290055f720dba269dd8dd2c2c63966ce9f" translate="yes" xml:space="preserve">
          <source>Widgets are not unique objects; you can make as many copies of them as you need. To quickly duplicate a widget, you can clone it by holding down the &lt;b&gt;Ctrl&lt;/b&gt; key and dragging it. This allows widgets to be copied and placed on the form more quickly than with clipboard operations.</source>
          <target state="translated">小部件不是唯一的对象。您可以根据需要制作任意数量的副本。要快速复制小部件，您可以通过按住&lt;b&gt;Ctrl&lt;/b&gt;键并将其拖动来克隆它。这样，与剪贴板操作相比，可以更快地复制小部件并将其放置在表单上。</target>
        </trans-unit>
        <trans-unit id="97be29d34b1e53ced8877c1f56afbe4b40018dba" translate="yes" xml:space="preserve">
          <source>Widgets are the primary elements for creating user interfaces in Qt. &lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;Widgets&lt;/a&gt; can display data and status information, receive user input, and provide a container for other widgets that should be grouped together. A widget that is not embedded in a parent widget is called a &lt;a href=&quot;application-windows&quot;&gt;window&lt;/a&gt;.</source>
          <target state="translated">小部件是在Qt中创建用户界面的主要元素。&lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;小部件&lt;/a&gt;可以显示数据和状态信息，接收用户输入，并为应分组在一起的其他小部件提供容器。未嵌入到父窗口小部件中的&lt;a href=&quot;application-windows&quot;&gt;窗口&lt;/a&gt;小部件称为窗口。</target>
        </trans-unit>
        <trans-unit id="fc7d42f09b3be487104e98c77490d831d6731b3f" translate="yes" xml:space="preserve">
          <source>Widgets are the primary elements for creating user interfaces in Qt. &lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;Widgets&lt;/a&gt; can display data and status information, receive user input, and provide a container for other widgets that should be grouped together. A widget that is not embedded in a parent widget is called a &lt;a href=&quot;application-windows#&quot;&gt;window&lt;/a&gt;.</source>
          <target state="translated">小部件是在Qt中创建用户界面的主要元素。&lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;小部件&lt;/a&gt;可以显示数据和状态信息，接收用户输入，并为应分组在一起的其他小部件提供容器。未嵌入到父窗口小部件中的&lt;a href=&quot;application-windows#&quot;&gt;窗口&lt;/a&gt;小部件称为窗口。</target>
        </trans-unit>
        <trans-unit id="1375cc23552403a3c4ee37608323f1a1ac92fd07" translate="yes" xml:space="preserve">
          <source>Widgets automatically detect HTML markup and display rich text accordingly. For example, setting a label's &lt;a href=&quot;qlabel#text-prop&quot;&gt;text&lt;/a&gt; property with the string &lt;code&gt;&quot;&amp;lt;b&amp;gt;Hello&amp;lt;/b&amp;gt; &amp;lt;i&amp;gt;Qt!&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; will result in the label displaying text like this: &lt;b&gt;Hello&lt;/b&gt;</source>
          <target state="translated">窗口小部件会自动检测HTML标记并相应地显示RTF。例如，使用字符串 &lt;code&gt;&quot;&amp;lt;b&amp;gt;Hello&amp;lt;/b&amp;gt; &amp;lt;i&amp;gt;Qt!&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; 设置标签的&lt;a href=&quot;qlabel#text-prop&quot;&gt;text&lt;/a&gt;属性将导致标签显示如下文本：&lt;b&gt;Hello&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6c54f63c2c46258996ecf5d8a376b81d66276c95" translate="yes" xml:space="preserve">
          <source>Widgets can also be &quot;cloned&quot; on the form: Holding down &lt;b&gt;Ctrl&lt;/b&gt; and dragging the widget creates a copy of the widget that can be dragged to a new position.</source>
          <target state="translated">也可以在表单上&amp;ldquo;克隆&amp;rdquo;窗口小部件：按住&lt;b&gt;Ctrl&lt;/b&gt;并拖动窗口小部件可创建窗口小部件的副本，然后将其拖动到新位置。</target>
        </trans-unit>
        <trans-unit id="26e7dd3385f17f40b7a475c739c5234561e03aa8" translate="yes" xml:space="preserve">
          <source>Widgets can be added to menus by using instances of the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class to hold them. These actions can then be inserted into menus in the usual way; see the &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; documentation for more details.</source>
          <target state="translated">可以通过使用&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;类的实例将小部件添加到菜单中来保存它们。然后可以按照通常的方式将这些操作插入菜单。有关更多详细信息，请参见&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="273dfa86751e5e4476bb799b555744e688a1a0b7" translate="yes" xml:space="preserve">
          <source>Widgets can be inserted into menus with the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class. Instances of this class are used to hold widgets, and are inserted into menus with the &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;() overload that takes a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;类将小部件插入菜单。此类的实例用于容纳窗口小部件，并使用带有&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;的&lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;（）重载插入菜单。</target>
        </trans-unit>
        <trans-unit id="b8cde9c4e84fb4f449300f7ecf063ddbdc149db4" translate="yes" xml:space="preserve">
          <source>Widgets can be inserted into menus with the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class. Instances of this class are used to hold widgets, and are inserted into menus with the &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;() overload that takes a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;. If the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; fires the &lt;a href=&quot;qmenu#triggered&quot;&gt;triggered&lt;/a&gt;() signal, the menu will close.</source>
          <target state="translated">可以使用&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;类将小部件插入菜单。此类的实例用于容纳窗口小部件，并使用带有&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;的&lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;（）重载插入菜单。如果&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;触发了&lt;a href=&quot;qmenu#triggered&quot;&gt;触发的&lt;/a&gt;（）信号，则菜单将关闭。</target>
        </trans-unit>
        <trans-unit id="288931136cef5721a6fc4f71b7afc624ff77e8d9" translate="yes" xml:space="preserve">
          <source>Widgets for editing item data in views and delegates</source>
          <target state="translated">在视图和委托中编辑项目数据的小工具</target>
        </trans-unit>
        <trans-unit id="3bb11f9c59b3c02c1e6de3844683793b55cba22d" translate="yes" xml:space="preserve">
          <source>Widgets modification state has been changed.</source>
          <target state="translated">小工具的修改状态已经改变。</target>
        </trans-unit>
        <trans-unit id="242c88c452d76a5d4144f060e7e7ca1774e6c7d1" translate="yes" xml:space="preserve">
          <source>Widgets provided by Qt use this class to place tooltips, menus and dialog boxes on the correct screen for their parent or application widgets. Applications can use this class to obtain information that can be used to save window positions, or to place child widgets and dialogs on one particular screen.</source>
          <target state="translated">Qt提供的Widgets使用该类将工具提示、菜单和对话框放置在正确的屏幕上,以便于它们的父Widgets或应用程序Widgets。应用程序可以使用这个类来获取信息,这些信息可以用来保存窗口位置,或者将子部件和对话框放置在一个特定的屏幕上。</target>
        </trans-unit>
        <trans-unit id="8435adf39417939d470169f9dd634d2c7c95c2ce" translate="yes" xml:space="preserve">
          <source>Widgets respond to events that are typically caused by user actions. Qt delivers events to widgets by calling specific event handler functions with instances of &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; subclasses containing information about each event.</source>
          <target state="translated">窗口小部件响应通常由用户操作引起的事件。Qt通过使用包含有关每个事件信息的&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;子类的实例调用特定的事件处理函数来将事件传递给窗口小部件。</target>
        </trans-unit>
        <trans-unit id="2b8947d39fb6587b9472fef874de80f84ce0c6ae" translate="yes" xml:space="preserve">
          <source>Widgets that accept keyboard input need to reimplement a few more event handlers:</source>
          <target state="translated">接受键盘输入的小部件需要重新实现一些事件处理程序。</target>
        </trans-unit>
        <trans-unit id="13aa1b4026942b9bb6ce1d114f57043c15bb811a" translate="yes" xml:space="preserve">
          <source>Width of a check box indicator.</source>
          <target state="translated">复选框指示器的宽度。</target>
        </trans-unit>
        <trans-unit id="92d4f7c9f5b5b6ac456fc0ee64663a9569268102" translate="yes" xml:space="preserve">
          <source>Width of a chunk in a progress bar indicator.</source>
          <target state="translated">进度条指标中的块的宽度。</target>
        </trans-unit>
        <trans-unit id="1bbc2f9725c899cb0bb83f2ac435543faf31e492" translate="yes" xml:space="preserve">
          <source>Width of a minimized MDI window.</source>
          <target state="translated">最小化MDI窗口的宽度。</target>
        </trans-unit>
        <trans-unit id="14711779662ca811a72137d0c1355bfa4f31084a" translate="yes" xml:space="preserve">
          <source>Width of a radio button indicator.</source>
          <target state="translated">单选按钮指示灯的宽度。</target>
        </trans-unit>
        <trans-unit id="474ac5fcafa931fe0fd6910ec15a46cc6c3ce29f" translate="yes" xml:space="preserve">
          <source>Width of a separator in a horizontal dock window and the height of a separator in a vertical dock window.</source>
          <target state="translated">水平停靠窗口中分隔符的宽度和垂直停靠窗口中分隔符的高度。</target>
        </trans-unit>
        <trans-unit id="f9cbd344f389b2fdebda9d82f10d6de85a07d4a5" translate="yes" xml:space="preserve">
          <source>Width of a single frame in this &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt;.</source>
          <target state="translated">此&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite中&lt;/a&gt;单个框架的宽度。</target>
        </trans-unit>
        <trans-unit id="4a8fe03d63b5269a8ee17b3af8c19e9ab02f872f" translate="yes" xml:space="preserve">
          <source>Width of a single frame in this sprite.</source>
          <target state="translated">该精灵中单帧的宽度。</target>
        </trans-unit>
        <trans-unit id="61f0e5039b4c2de4949e55939503187e4677dbee" translate="yes" xml:space="preserve">
          <source>Width of a splitter.</source>
          <target state="translated">分流器的宽度。</target>
        </trans-unit>
        <trans-unit id="8f394f722525a92857f04c8b25a4ff0084fcc97b" translate="yes" xml:space="preserve">
          <source>Width of a toolbar extension button in a horizontal toolbar and the height of the button in a vertical toolbar.</source>
          <target state="translated">水平工具栏中工具栏扩展按钮的宽度和垂直工具栏中按钮的高度。</target>
        </trans-unit>
        <trans-unit id="a276f4d87ef046e18ddd9eaa41ad0a5ce04c4153" translate="yes" xml:space="preserve">
          <source>Width of a toolbar handle in a horizontal toolbar and the height of the handle in a vertical toolbar.</source>
          <target state="translated">水平工具栏中工具栏手柄的宽度和垂直工具栏中手柄的高度。</target>
        </trans-unit>
        <trans-unit id="f6475409c1ca0bbf3519ed0b865993d83442f005" translate="yes" xml:space="preserve">
          <source>Width of a toolbar separator in a horizontal toolbar and the height of a separator in a vertical toolbar.</source>
          <target state="translated">水平工具栏中工具栏分隔符的宽度和垂直工具栏中分隔符的高度。</target>
        </trans-unit>
        <trans-unit id="f32cdf111f802f1e77076f374ad98edca36bb759" translate="yes" xml:space="preserve">
          <source>Width of a vertical scroll bar and the height of a horizontal scroll bar.</source>
          <target state="translated">垂直滚动条的宽度和水平滚动条的高度。</target>
        </trans-unit>
        <trans-unit id="b1b76acd84d65d7c89a34bfe549816feb6684e6e" translate="yes" xml:space="preserve">
          <source>Width of table or cell border</source>
          <target state="translated">表格或单元格边框的宽度</target>
        </trans-unit>
        <trans-unit id="894a83e2504cfb44500a8d72eba1c5a9876f1107" translate="yes" xml:space="preserve">
          <source>Width of the alternate keys list item.</source>
          <target state="translated">备用键列表项的宽度。</target>
        </trans-unit>
        <trans-unit id="ca01378df4fc7f57ef1854241261d4957d8070cb" translate="yes" xml:space="preserve">
          <source>Width of the default-button indicator frame.</source>
          <target state="translated">默认按钮指示框的宽度。</target>
        </trans-unit>
        <trans-unit id="bff587a72664f0ce6c24d49d77072e269e5af574" translate="yes" xml:space="preserve">
          <source>Width of the frame around toolbars.</source>
          <target state="translated">工具栏周围的框架宽度。</target>
        </trans-unit>
        <trans-unit id="32d20c7e2973072db1690d05d4a9bbb06c5587ac" translate="yes" xml:space="preserve">
          <source>Width of the handle in a horizontal dock window and the height of the handle in a vertical dock window.</source>
          <target state="translated">水平停靠窗口中手柄的宽度和垂直停靠窗口中手柄的高度。</target>
        </trans-unit>
        <trans-unit id="30d21fa5d9cb79597ff503bf1dbbb488b65a5ede" translate="yes" xml:space="preserve">
          <source>Width of the menu button indicator proportional to the widget height.</source>
          <target state="translated">菜单按钮指示器的宽度与小组件的高度成比例。</target>
        </trans-unit>
        <trans-unit id="4f983a660ea1223340ae32159c1ab35d5e29bd2f" translate="yes" xml:space="preserve">
          <source>Wiki</source>
          <target state="translated">Wiki</target>
        </trans-unit>
        <trans-unit id="641be895c08513d3bfd01d7c1a2ff3ca352244e4" translate="yes" xml:space="preserve">
          <source>Wildcard Matching</source>
          <target state="translated">通配符匹配</target>
        </trans-unit>
        <trans-unit id="264c29d9ea22af548e907b36f322bb974b5a6976" translate="yes" xml:space="preserve">
          <source>Wildcard matching</source>
          <target state="translated">通配符匹配</target>
        </trans-unit>
        <trans-unit id="0689321b58e7a5fc78253890378bdaabbc1eb587" translate="yes" xml:space="preserve">
          <source>Wildcard matching can be convenient because of its simplicity, but any wildcard regexp can be defined using full regexps, e.g. &lt;b&gt;.*\.html$&lt;/b&gt;. Notice that we can't match both &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.htm&lt;/code&gt; files with a wildcard unless we use &lt;b&gt;*.htm*&lt;/b&gt; which will also match 'test.html.bak'. A full regexp gives us the precision we need, &lt;b&gt;.*\.html?$&lt;/b&gt;.</source>
          <target state="translated">通配符匹配由于其简单性而很方便，但是任何通配符regexp都可以使用完整的regexp定义，例如&lt;b&gt;。* \。html $&lt;/b&gt;。请注意，除非使用&lt;b&gt;* .htm *（&lt;/b&gt;也将匹配&amp;ldquo; test.html.bak&amp;rdquo;），否则我们不能同时使用通配符匹配 &lt;code&gt;.html&lt;/code&gt; 和 &lt;code&gt;.htm&lt;/code&gt; 文件。完整的正则表达式为我们提供了所需的精度&lt;b&gt;。* \。html？$&lt;/b&gt;。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="842dc21d7451aa6ca7d995ac3b01dfa569693150" translate="yes" xml:space="preserve">
          <source>Wildcards in Name Tests</source>
          <target state="translated">名称测试中的通配符</target>
        </trans-unit>
        <trans-unit id="6e5c972bd26124738ee77c46943b74e25b91eac4" translate="yes" xml:space="preserve">
          <source>Will apply kerning between adjacent glyphs. Note that OpenType GPOS based kerning is currently not supported.</source>
          <target state="translated">将在相邻的字形之间应用kerning。请注意,目前不支持基于OpenType GPOS的内核。</target>
        </trans-unit>
        <trans-unit id="6adcd11c4e61fb7fcde2432b7a7de1f735d1edeb" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checkable&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and its appearance may depend on &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.exclusive&lt;/a&gt;, i.e., whether it will behave like a checkbox or a radio button. Use &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checked&lt;/a&gt; for the checked state.</source>
          <target state="translated">将在&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checkable&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; 且其外观可能取决于&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.exclusive时使用&lt;/a&gt;，即它的行为类似于复选框还是单选按钮。使用&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checked&lt;/a&gt;作为检查状态。</target>
        </trans-unit>
        <trans-unit id="51a4364950010d7d1a3acb13be6215316f24c111" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt; equals &lt;code&gt;MenuItemType.ScrollIndicator&lt;/code&gt;. Its appearance should follow &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.scrollerDirection&lt;/a&gt;.</source>
          <target state="translated">当&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt;等于 &lt;code&gt;MenuItemType.ScrollIndicator&lt;/code&gt; 时将使用。其外观应遵循&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.scrollerDirection&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d3d1b653fde72951f28f65e2262012bbda10fb4" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt; equals &lt;code&gt;MenuItemType.Separator&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt;等于 &lt;code&gt;MenuItemType.Separator&lt;/code&gt; 时将使用。</target>
        </trans-unit>
        <trans-unit id="2f33960d13f8f9fc04e9fc9347816f610864f0b2" translate="yes" xml:space="preserve">
          <source>Will calculate the advance for each glyph separately.</source>
          <target state="translated">会分别计算每个字形的预付款。</target>
        </trans-unit>
        <trans-unit id="4ce4d9e973b6847fa6d154ff1d851dfe8de757ff" translate="yes" xml:space="preserve">
          <source>Will emit the &lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;triggered&lt;/a&gt; signal if the action is enabled. You may provide a source object if the Action would benefit from knowing the origin of the triggering (e.g. for analytics). Will also emit the &lt;a href=&quot;qml-qtquick-controls-action#toggled-signal&quot;&gt;toggled&lt;/a&gt; signal if it is checkable.</source>
          <target state="translated">如果启用该动作，将发出&lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;触发&lt;/a&gt;信号。如果可以从知道触发源的操作中受益（例如，用于分析），则可以提供源对象。如果可检查，还将发出&lt;a href=&quot;qml-qtquick-controls-action#toggled-signal&quot;&gt;触发&lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="7301c83fbf138cebca4da71bad28da58a32bc6c1" translate="yes" xml:space="preserve">
          <source>Will emit the &lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;triggered&lt;/a&gt; signal on</source>
          <target state="translated">会发出&lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;触发&lt;/a&gt;信号</target>
        </trans-unit>
        <trans-unit id="d1fe5801cc23bc8576afb39d3f08ee6b2c234d3f" translate="yes" xml:space="preserve">
          <source>Will import to Qt Quick 3D as...</source>
          <target state="translated">将导入Qt Quick 3D为...</target>
        </trans-unit>
        <trans-unit id="992c93fbc65bfa4b132279890e307aebb42bb7f8" translate="yes" xml:space="preserve">
          <source>Will rasterize by measuring the coverage of each subpixel, returning a separate alpha value for each of the red, green and blue components of each pixel.</source>
          <target state="translated">将通过测量每个子像素的覆盖率进行栅格化,为每个像素的红、绿、蓝三部分分别返回一个alpha值。</target>
        </trans-unit>
        <trans-unit id="9d68c46bc41f81a77f83f10f64be90ea8298c3af" translate="yes" xml:space="preserve">
          <source>Will rasterize by measuring the coverage of the shape on whole pixels. The returned image contains the alpha values of each pixel based on the coverage of the glyph shape.</source>
          <target state="translated">将通过测量整个像素的覆盖率来光栅化。返回的图像包含了基于字形覆盖率的每个像素的alpha值。</target>
        </trans-unit>
        <trans-unit id="cfd625b13d3522bd90aa1cf7729a05018cda7fe8" translate="yes" xml:space="preserve">
          <source>Will return &lt;code&gt;0&lt;/code&gt; if the size is automatically controlled by &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;.</source>
          <target state="translated">如果大小由&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;自动控制，则将返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bacdfcd8e58eaf720dc472b61c16ef6202195524" translate="yes" xml:space="preserve">
          <source>Will return &lt;code&gt;0&lt;/code&gt; if the size is automatically controlled by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;.</source>
          <target state="translated">如果大小由&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;自动控制，则将返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="694d20076668702064af4b5c6b9aab479e6fa21a" translate="yes" xml:space="preserve">
          <source>Will return an invalid &lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt; if no information has been attached to the starting point of this route segment.</source>
          <target state="translated">如果此路段的起点未附加任何信息，将返回无效的&lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a4ef5f5759743ffb735d1db3489350440cdf859" translate="yes" xml:space="preserve">
          <source>Will return an invalid route segment if there are no route segments associated with the route.</source>
          <target state="translated">如果没有与途径相关联的途径段,将返回无效的途径段。</target>
        </trans-unit>
        <trans-unit id="5159390ce4cc4497f2c1225b18cf5c8e403dd9f6" translate="yes" xml:space="preserve">
          <source>Will return an invalid route segment if this is the last route segment in the route.</source>
          <target state="translated">如果这是途径中的最后一个途径段,将返回一个无效的途径段。</target>
        </trans-unit>
        <trans-unit id="7ad1aafdccf8b805105c57c9e774c1ad40595b7a" translate="yes" xml:space="preserve">
          <source>Will return invalid maneuver if no information has been attached to the endpoint of this route segment.</source>
          <target state="translated">如果这个路由段的端点没有附加任何信息,将返回无效操纵。</target>
        </trans-unit>
        <trans-unit id="7b653c1a1342f29b6e1ca16ef44b1d14c98a11e3" translate="yes" xml:space="preserve">
          <source>Win32</source>
          <target state="translated">Win32</target>
        </trans-unit>
        <trans-unit id="d2afd817a9a21d99da015861401e78ff2526d7a1" translate="yes" xml:space="preserve">
          <source>WinLayout</source>
          <target state="translated">WinLayout</target>
        </trans-unit>
        <trans-unit id="075ad31795be6f90667ef90b6e5605875ceafe6f" translate="yes" xml:space="preserve">
          <source>WinRT</source>
          <target state="translated">WinRT</target>
        </trans-unit>
        <trans-unit id="ee05c284cf8b3483c03d4f9413a6c2310a64206c" translate="yes" xml:space="preserve">
          <source>WinRT - Not supported</source>
          <target state="translated">WinRT-不支持</target>
        </trans-unit>
        <trans-unit id="6cc4e52a56e0ff55e5943fa5bda3b3d49ec65e52" translate="yes" xml:space="preserve">
          <source>WinRT - Not supported yet</source>
          <target state="translated">WinRT-还不支持</target>
        </trans-unit>
        <trans-unit id="b0ecf59b61b6d43691094d1b7be8be240577897f" translate="yes" xml:space="preserve">
          <source>WinRT Runner Tool</source>
          <target state="translated">WinRT Runner工具</target>
        </trans-unit>
        <trans-unit id="b2b2b1b85fe8deb53a167363dcd5fa56d7734c79" translate="yes" xml:space="preserve">
          <source>WinRT and Windows Phone support</source>
          <target state="translated">支持WinRT和Windows Phone</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="b30704d31f5e4aca87353b66ee27f0816caa9047" translate="yes" xml:space="preserve">
          <source>Window (QML type)</source>
          <target state="translated">窗口(QML型)</target>
        </trans-unit>
        <trans-unit id="a6f90711f4f4ceeeabf6b9b10a46a7febed2ecf4" translate="yes" xml:space="preserve">
          <source>Window Embedding</source>
          <target state="translated">窗口嵌入</target>
        </trans-unit>
        <trans-unit id="afaebc89cf3ada29e4b3c2ac4b9b1ed9b0776e61" translate="yes" xml:space="preserve">
          <source>Window Geometry</source>
          <target state="translated">窗户的几何形状</target>
        </trans-unit>
        <trans-unit id="8c70131ff98a78ebc4b38d71ff8aaf60f268bc44" translate="yes" xml:space="preserve">
          <source>Window Managers</source>
          <target state="translated">窗口经理</target>
        </trans-unit>
        <trans-unit id="25c90920abe1ae75b09c4a801a9be777978eb59e" translate="yes" xml:space="preserve">
          <source>Window QML Type</source>
          <target state="translated">窗口QML类型</target>
        </trans-unit>
        <trans-unit id="b99fcf0354e6f2b755b1cd4436f8833d7b57f92d" translate="yes" xml:space="preserve">
          <source>Window and Dialog Widgets</source>
          <target state="translated">窗口和对话框小部件</target>
        </trans-unit>
        <trans-unit id="df2b265af4964191becf35116f05a11290f1a10a" translate="yes" xml:space="preserve">
          <source>Window contents</source>
          <target state="translated">窗口内容</target>
        </trans-unit>
        <trans-unit id="0693d8804ff10e8ccf636d73f83dc84b2aebcac8" translate="yes" xml:space="preserve">
          <source>Window flags are a combination of a type (e.g. &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt;) and zero or more hints to the window system (e.g. &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::FramelessWindowHint&lt;/a&gt;).</source>
          <target state="translated">窗口标志是一种类型（例如&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt;）和零个或多个窗口系统提示（例如&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: FramelessWindowHint&lt;/a&gt;）的组合。</target>
        </trans-unit>
        <trans-unit id="c757786995d9190138fd07f2d2690dd25188aab3" translate="yes" xml:space="preserve">
          <source>Window flags are a combination of a window type (e.g., &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt;) and several flags giving hints on the behavior of the window. The behavior is platform-dependent.</source>
          <target state="translated">窗口标志是窗口类型（例如&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt;）和几个标志的组合，这些标志给出了窗口的行为提示。该行为是平台相关的。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">窗口功能</target>
        </trans-unit>
        <trans-unit id="3fa481de6469402233a67efbe0146e989104a11b" translate="yes" xml:space="preserve">
          <source>Window resize handle; see also &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;.</source>
          <target state="translated">窗口大小调整手柄；另请参见&lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc2b89e9ddde77184a7e10f4c0458e6e48f4ab30" translate="yes" xml:space="preserve">
          <source>Window size for connection-level flow control is 65535 octets</source>
          <target state="translated">连接级流量控制的窗口大小为65535八位字节。</target>
        </trans-unit>
        <trans-unit id="20055eafb15abf4e19c72399a0ab5d4ef5aa99b6" translate="yes" xml:space="preserve">
          <source>Window size for connection-level flowcontrol is 2147483647 octets</source>
          <target state="translated">连接级流控的窗口大小为2147483647八位字节。</target>
        </trans-unit>
        <trans-unit id="4b26bc7091bc1c4af3f32a7ab5a2cefcc82220cb" translate="yes" xml:space="preserve">
          <source>Window size for stream-level flow control is 65535 octets</source>
          <target state="translated">流级流量控制的窗口大小为65535八位字节。</target>
        </trans-unit>
        <trans-unit id="e4bc6262ebe06c4edde4142238b17583c9cd16ce" translate="yes" xml:space="preserve">
          <source>Window size for stream-level flowcontrol is 21474836 octets</source>
          <target state="translated">流级流量控制的窗口大小为21474836八位字节。</target>
        </trans-unit>
        <trans-unit id="662302c92612f391c0343147262ec6b92216d67b" translate="yes" xml:space="preserve">
          <source>Window system integration</source>
          <target state="translated">窗口系统集成</target>
        </trans-unit>
        <trans-unit id="d18acd2371180466957c4dbeb8c95ca75708947a" translate="yes" xml:space="preserve">
          <source>Window title label.</source>
          <target state="translated">窗口标题标签。</target>
        </trans-unit>
        <trans-unit id="1e7af5039c861fb07ace18801d508cb564adec81" translate="yes" xml:space="preserve">
          <source>Window was activated.</source>
          <target state="translated">窗口被激活。</target>
        </trans-unit>
        <trans-unit id="11241d466e6bf788119916fe31fa36aaa7c680d9" translate="yes" xml:space="preserve">
          <source>Window was deactivated.</source>
          <target state="translated">窗口被停用。</target>
        </trans-unit>
        <trans-unit id="4e78ce50aed27fdd7018ad1a6b33852628dd8aaf" translate="yes" xml:space="preserve">
          <source>Window-Viewport Conversion</source>
          <target state="translated">窗口-视口转换</target>
        </trans-unit>
        <trans-unit id="9a56ea565b4ff2a96660fbe8df2fd15d5fb6f4db" translate="yes" xml:space="preserve">
          <source>Window. This will lead to the windowing system managing the clip of the window, so it will be clipped to the</source>
          <target state="translated">窗口。这将导致窗口系统管理窗口的夹子,所以将夹子夹到了</target>
        </trans-unit>
        <trans-unit id="75aa12a30bbd7073b47f5f7cb99f4d1c6a2ea986" translate="yes" xml:space="preserve">
          <source>Window.Window.active</source>
          <target state="translated">Window.Window.active</target>
        </trans-unit>
        <trans-unit id="69cabe1a21fa926547a70fb8587746688fc196f1" translate="yes" xml:space="preserve">
          <source>Window.Window.activeFocusItem</source>
          <target state="translated">Window.Window.activeFocusItem</target>
        </trans-unit>
        <trans-unit id="616a52190bba5239135d8c4e401392811e83de3c" translate="yes" xml:space="preserve">
          <source>Window.Window.contentItem</source>
          <target state="translated">Window.Window.contentItem</target>
        </trans-unit>
        <trans-unit id="93e40620929c8582b0726b5723364e2d780aa677" translate="yes" xml:space="preserve">
          <source>Window.Window.height</source>
          <target state="translated">Window.Window.height</target>
        </trans-unit>
        <trans-unit id="22953b19762a43065d9148abdac6278d7ff2c104" translate="yes" xml:space="preserve">
          <source>Window.Window.visibility</source>
          <target state="translated">Window.Window.visibility</target>
        </trans-unit>
        <trans-unit id="84c607816af9ce44f380ed26c792699caaa61a38" translate="yes" xml:space="preserve">
          <source>Window.Window.width</source>
          <target state="translated">Window.Window.width</target>
        </trans-unit>
        <trans-unit id="0d4fed8f27b6cb28fb107fea7f57b40019985ce5" translate="yes" xml:space="preserve">
          <source>Window.Window.window</source>
          <target state="translated">Window.Window.window</target>
        </trans-unit>
        <trans-unit id="179cf5d5f2dd427ea72db08711aff317c829519c" translate="yes" xml:space="preserve">
          <source>Window.active</source>
          <target state="translated">Window.active</target>
        </trans-unit>
        <trans-unit id="2ec4c77567c5777d0776cd5af31f66116b105f3c" translate="yes" xml:space="preserve">
          <source>Window.active : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">Window.active：&lt;a href=&quot;qml-bool&quot;&gt;布尔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bbff09b2773e67a67998e0160db3a070da2a71c" translate="yes" xml:space="preserve">
          <source>Window.activeFocusItem</source>
          <target state="translated">Window.activeFocusItem</target>
        </trans-unit>
        <trans-unit id="102676071e8f5b0b5bf6e797da1cc51a37367db6" translate="yes" xml:space="preserve">
          <source>Window.activeFocusItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">Window.activeFocusItem：&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="323f1a195c556f532788c13c5175ee9673596fa3" translate="yes" xml:space="preserve">
          <source>Window.afterAnimating()</source>
          <target state="translated">Window.afterAnimating()</target>
        </trans-unit>
        <trans-unit id="4f8be4631d56a2a94c008c796a3eb4aa92aca3cb" translate="yes" xml:space="preserve">
          <source>Window.alert()</source>
          <target state="translated">Window.alert()</target>
        </trans-unit>
        <trans-unit id="6b43e57fc6c8546f7d0a20f409e420ff5d4e65f9" translate="yes" xml:space="preserve">
          <source>Window.close()</source>
          <target state="translated">Window.close()</target>
        </trans-unit>
        <trans-unit id="a7c9eb3479ef7276390ef7962c488325517f5cbb" translate="yes" xml:space="preserve">
          <source>Window.closing()</source>
          <target state="translated">Window.closing()</target>
        </trans-unit>
        <trans-unit id="f3bde14aa0bf20f81ada76a1e414cbe06cc13469" translate="yes" xml:space="preserve">
          <source>Window.color</source>
          <target state="translated">Window.color</target>
        </trans-unit>
        <trans-unit id="f7faf5ce1f3058190f74f96458908c816c80839e" translate="yes" xml:space="preserve">
          <source>Window.contentItem</source>
          <target state="translated">Window.contentItem</target>
        </trans-unit>
        <trans-unit id="09dc7d67387c54c429eabc833a823f696fb935b5" translate="yes" xml:space="preserve">
          <source>Window.contentItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">Window.contentItem：&lt;a href=&quot;qml-qtquick-item&quot;&gt;项目&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f032a1a0e9d0f20ee5939a3ea15f61dbe8f060f9" translate="yes" xml:space="preserve">
          <source>Window.contentOrientation</source>
          <target state="translated">Window.contentOrientation</target>
        </trans-unit>
        <trans-unit id="d613e60a74c019962e8dc76775ee501bcbf5920a" translate="yes" xml:space="preserve">
          <source>Window.data</source>
          <target state="translated">Window.data</target>
        </trans-unit>
        <trans-unit id="11fcb002371eb69617294814e444f487941c6fa1" translate="yes" xml:space="preserve">
          <source>Window.flags</source>
          <target state="translated">Window.flags</target>
        </trans-unit>
        <trans-unit id="fdef13059eb9fcd4647cf759253900561f86103a" translate="yes" xml:space="preserve">
          <source>Window.frameSwapped()</source>
          <target state="translated">Window.frameSwapped()</target>
        </trans-unit>
        <trans-unit id="a929ff2e9d86ab477a20d2aeeae60315aa00bfb2" translate="yes" xml:space="preserve">
          <source>Window.height</source>
          <target state="translated">Window.height</target>
        </trans-unit>
        <trans-unit id="793cfeb4fba43fe8d353fe472138623da6f45bc2" translate="yes" xml:space="preserve">
          <source>Window.height : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">Window.height : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76df9491595a49d076cf9f272b97202e15e48128" translate="yes" xml:space="preserve">
          <source>Window.hide()</source>
          <target state="translated">Window.hide()</target>
        </trans-unit>
        <trans-unit id="d1d8ee90db101d9aa7127f0ec7d71ef5b59327e6" translate="yes" xml:space="preserve">
          <source>Window.lower()</source>
          <target state="translated">Window.lower()</target>
        </trans-unit>
        <trans-unit id="811e064daed87f7ca3ccdfcb7526934f9e065065" translate="yes" xml:space="preserve">
          <source>Window.maximumHeight</source>
          <target state="translated">Window.maximumHeight</target>
        </trans-unit>
        <trans-unit id="ed13acfb5440376e7f9248628afa96f7cc080358" translate="yes" xml:space="preserve">
          <source>Window.maximumWidth</source>
          <target state="translated">Window.maximumWidth</target>
        </trans-unit>
        <trans-unit id="400afce45a5265eb1019dbc9d1f9bb720f661363" translate="yes" xml:space="preserve">
          <source>Window.minimumHeight</source>
          <target state="translated">Window.minimumHeight</target>
        </trans-unit>
        <trans-unit id="aebb18a4f2359f546fa8b333d847995d3a5ef4e8" translate="yes" xml:space="preserve">
          <source>Window.minimumWidth</source>
          <target state="translated">Window.minimumWidth</target>
        </trans-unit>
        <trans-unit id="215facd6841224bd8b80b0e006b6ac17f0950cbb" translate="yes" xml:space="preserve">
          <source>Window.modality</source>
          <target state="translated">Window.modality</target>
        </trans-unit>
        <trans-unit id="52b30f9332e30d272f1cbe7146d9734ff2e3a054" translate="yes" xml:space="preserve">
          <source>Window.opacity</source>
          <target state="translated">Window.opacity</target>
        </trans-unit>
        <trans-unit id="5c1a6d6492ac874f9e18f2d2de58a1ed70ac7075" translate="yes" xml:space="preserve">
          <source>Window.raise()</source>
          <target state="translated">Window.raise()</target>
        </trans-unit>
        <trans-unit id="500cae6ce1cd976b0844ee9632f2878e1490269c" translate="yes" xml:space="preserve">
          <source>Window.requestActivate()</source>
          <target state="translated">Window.requestActivate()</target>
        </trans-unit>
        <trans-unit id="eb32abc5b963808e0f1c4b506580bafb1dabdc33" translate="yes" xml:space="preserve">
          <source>Window.sceneGraphError()</source>
          <target state="translated">Window.sceneGraphError()</target>
        </trans-unit>
        <trans-unit id="962ec69a27517c38617be980e1a32ddfb58994c1" translate="yes" xml:space="preserve">
          <source>Window.screen</source>
          <target state="translated">Window.screen</target>
        </trans-unit>
        <trans-unit id="0836742cd959538d97470c7c5bb8e340e0e0b143" translate="yes" xml:space="preserve">
          <source>Window.show()</source>
          <target state="translated">Window.show()</target>
        </trans-unit>
        <trans-unit id="15504334bab2ba8401f9c0c42488a68ecf682d96" translate="yes" xml:space="preserve">
          <source>Window.showFullScreen()</source>
          <target state="translated">Window.showFullScreen()</target>
        </trans-unit>
        <trans-unit id="7a246186c9eb48c96b4f883f3c6ed5900df7bd62" translate="yes" xml:space="preserve">
          <source>Window.showMaximized()</source>
          <target state="translated">Window.showMaximized()</target>
        </trans-unit>
        <trans-unit id="9721d3ac26edfe36e03b800b63ea8a88c859ba6d" translate="yes" xml:space="preserve">
          <source>Window.showMinimized()</source>
          <target state="translated">Window.showMinimized()</target>
        </trans-unit>
        <trans-unit id="ecb33e6d10f93ea783d42c3441c123f5ac26ae90" translate="yes" xml:space="preserve">
          <source>Window.showNormal()</source>
          <target state="translated">Window.showNormal()</target>
        </trans-unit>
        <trans-unit id="b1a931100f91b3faa30216470bb54c3f9ef3a759" translate="yes" xml:space="preserve">
          <source>Window.title</source>
          <target state="translated">Window.title</target>
        </trans-unit>
        <trans-unit id="f84bfdc72053f81e11626d23f71d5a72df94234a" translate="yes" xml:space="preserve">
          <source>Window.transientParent</source>
          <target state="translated">Window.transientParent</target>
        </trans-unit>
        <trans-unit id="add5b572eae34b1475c4ac663ea27705fe0c5b75" translate="yes" xml:space="preserve">
          <source>Window.visibility</source>
          <target state="translated">Window.visibility</target>
        </trans-unit>
        <trans-unit id="31290646537daaae9feb4d0a6aa47fa2d4fe8dd1" translate="yes" xml:space="preserve">
          <source>Window.visibility : QWindow::Visibility</source>
          <target state="translated">窗口.可见性:QWindow::Visibility</target>
        </trans-unit>
        <trans-unit id="040ee819374dd276f63a974e22660242040fe0ef" translate="yes" xml:space="preserve">
          <source>Window.visible</source>
          <target state="translated">Window.visible</target>
        </trans-unit>
        <trans-unit id="e2b6f01ff5b633118333310b09ad9f8d07bb756c" translate="yes" xml:space="preserve">
          <source>Window.width : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">Window.width：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec9ee6d9fc2efb6ef3252fdd48706b294f871836" translate="yes" xml:space="preserve">
          <source>Window.window : &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;</source>
          <target state="translated">Window.window：&lt;a href=&quot;qml-qtquick-window-window&quot;&gt;窗口&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcec8455d55425584f2b15ec6321324bf53d5617" translate="yes" xml:space="preserve">
          <source>Window.x</source>
          <target state="translated">Window.x</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="14bcdd30e3b008c3e7cd704a84f73d1bfd731c35" translate="yes" xml:space="preserve">
          <source>Windows (UWP)</source>
          <target state="translated">Windows (UWP)</target>
        </trans-unit>
        <trans-unit id="d1964a9d6c89b899acb90493c815573a0d6f6ea7" translate="yes" xml:space="preserve">
          <source>Windows (Win32 desktop, via XInput 1.3 &amp;amp; 1.4)</source>
          <target state="translated">Windows（Win32桌面，通过XInput 1.3和1.4）</target>
        </trans-unit>
        <trans-unit id="964670c3979f39f09220262ac02382dcc43eb2c3" translate="yes" xml:space="preserve">
          <source>Windows (classic desktop)</source>
          <target state="translated">Windows(经典桌面)</target>
        </trans-unit>
        <trans-unit id="ba69620743da0d9dcd1d7e5dc758450978354d5d" translate="yes" xml:space="preserve">
          <source>Windows (desktop)</source>
          <target state="translated">视窗(桌面)</target>
        </trans-unit>
        <trans-unit id="cd2780c0a461f71c64280f5c562710d620fd6396" translate="yes" xml:space="preserve">
          <source>Windows - Intel(R) C++ Compiler for 32-bit applications, Version 9.1.040.</source>
          <target state="translated">Windows-Intel(R)C++Compiler for 32-bit applications,Version 9.1.040.</target>
        </trans-unit>
        <trans-unit id="1cb7956bf146a8ba0806fced6a0163472a25a83e" translate="yes" xml:space="preserve">
          <source>Windows 10</source>
          <target state="translated">Windows 10</target>
        </trans-unit>
        <trans-unit id="1afe86f5efcb6d9798deb38cbf3ecf0a9ebaf810" translate="yes" xml:space="preserve">
          <source>Windows 10 (1809) October 2018 Update</source>
          <target state="translated">Windows 10(1809)2018年10月更新</target>
        </trans-unit>
        <trans-unit id="d23b7faed6bed5922202a2b284d65aff84bf884f" translate="yes" xml:space="preserve">
          <source>Windows 10 Desktop</source>
          <target state="translated">Windows 10桌面</target>
        </trans-unit>
        <trans-unit id="ad030707429da2bedc40732e3d358db41d7651fa" translate="yes" xml:space="preserve">
          <source>Windows 10 IoT</source>
          <target state="translated">Windows 10 IoT</target>
        </trans-unit>
        <trans-unit id="4db48ac648a42f512034fb991a7275e05d76ee88" translate="yes" xml:space="preserve">
          <source>Windows 10 Mobile</source>
          <target state="translated">Windows 10移动版</target>
        </trans-unit>
        <trans-unit id="8cb565cb88209e257041b93101044e961a66e53d" translate="yes" xml:space="preserve">
          <source>Windows 10 SDK version 10.0.18362 or later</source>
          <target state="translated">Windows 10 SDK 10.0.18362或更高版本。</target>
        </trans-unit>
        <trans-unit id="94cada20ad68e1ffe3678826da4a09dc6377e803" translate="yes" xml:space="preserve">
          <source>Windows 7</source>
          <target state="translated">Windows 7</target>
        </trans-unit>
        <trans-unit id="2421598f872b2a34cd8e8c5cdad74ac27cddd334" translate="yes" xml:space="preserve">
          <source>Windows 7 and Windows Vista (w/Platform Update) and DirectWrite enabled in Qt</source>
          <target state="translated">Windows 7和Windows Vista (w/Platform Update),并在Qt中启用DirectWrite。</target>
        </trans-unit>
        <trans-unit id="9fe8c734d18c33e1fe587ed88ac86891c9413013" translate="yes" xml:space="preserve">
          <source>Windows 8.1</source>
          <target state="translated">Windows 8.1</target>
        </trans-unit>
        <trans-unit id="0059c3585082dc8d8fa84aace5dd9574f5a647b2" translate="yes" xml:space="preserve">
          <source>Windows Aero look</source>
          <target state="translated">Windows Aero外观</target>
        </trans-unit>
        <trans-unit id="9603341802d381e4f5dc9450d5f60203fbb1367e" translate="yes" xml:space="preserve">
          <source>Windows Bitmap</source>
          <target state="translated">窗口位图</target>
        </trans-unit>
        <trans-unit id="b5752a2453d550da484c9d85a1aca88f944da161" translate="yes" xml:space="preserve">
          <source>Windows Format</source>
          <target state="translated">Windows格式</target>
        </trans-unit>
        <trans-unit id="c779efcd40e07a5f099b994086b2eecbec95fdbf" translate="yes" xml:space="preserve">
          <source>Windows RT</source>
          <target state="translated">Windows RT</target>
        </trans-unit>
        <trans-unit id="176562ff7a9ca628c45f66dfe5d7eb18c0c0ff3c" translate="yes" xml:space="preserve">
          <source>Windows Runtime</source>
          <target state="translated">Windows运行时</target>
        </trans-unit>
        <trans-unit id="fb193893e70258d483f93a714af1f0fbcff9cfab" translate="yes" xml:space="preserve">
          <source>Windows Time Zones</source>
          <target state="translated">窗口时区</target>
        </trans-unit>
        <trans-unit id="abcf695d570ffe730c49f508b0e37f63d25ee587" translate="yes" xml:space="preserve">
          <source>Windows Vista (w/o Platform Update) and earlier</source>
          <target state="translated">Windows Vista (不含平台更新)和更早的版本。</target>
        </trans-unit>
        <trans-unit id="76f20bccfe3512339ad2cea01fc1c7809e7d3d15" translate="yes" xml:space="preserve">
          <source>Windows XP</source>
          <target state="translated">视窗XP</target>
        </trans-unit>
        <trans-unit id="dd2494d5f30b3df0c2226e4d63b5a83102d7c014" translate="yes" xml:space="preserve">
          <source>Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; do not support the global mouse selection; they only supports the global clipboard, i.e. they only add text to the clipboard when an explicit copy or cut is made.</source>
          <target state="translated">Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;不支持全局鼠标选择。它们仅支持全局剪贴板，即仅在进行显式复制或剪切时才将文本添加到剪贴板。</target>
        </trans-unit>
        <trans-unit id="c6f63f1ca0009002926ff7190a74402cec32c6d5" translate="yes" xml:space="preserve">
          <source>Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; does not have the concept of ownership; the clipboard is a fully global resource so all applications are notified of changes.</source>
          <target state="translated">Windows和&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;没有所有权的概念。剪贴板是一个完全全局的资源，因此会将更改通知所有应用程序。</target>
        </trans-unit>
        <trans-unit id="88023dbcc508c8f7a7c5cbf262c9b6f719968ac5" translate="yes" xml:space="preserve">
          <source>Windows and Screen</source>
          <target state="translated">窗口和屏幕</target>
        </trans-unit>
        <trans-unit id="bbb43768d8d0148f00fdbeb53721d8cc5c4ca014" translate="yes" xml:space="preserve">
          <source>Windows and macOS do not support the global mouse selection; they only supports the global clipboard, i.e. they only add text to the clipboard when an explicit copy or cut is made.</source>
          <target state="translated">Windows和macOS不支持全局鼠标选择,它们只支持全局剪贴板,即只有在明确复制或剪切时才会向剪贴板添加文本。</target>
        </trans-unit>
        <trans-unit id="9e67941add41d372575cffb3e9bae73319fda15c" translate="yes" xml:space="preserve">
          <source>Windows and macOS does not have the concept of ownership; the clipboard is a fully global resource so all applications are notified of changes.</source>
          <target state="translated">Windows和macOS没有所有权的概念,剪贴板是一个完全的全局资源,所以所有的应用程序都会被通知更改。</target>
        </trans-unit>
        <trans-unit id="4530472b3bdecaac3503faee0951ef1625f27946" translate="yes" xml:space="preserve">
          <source>Windows are panels. If you set the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; flag, the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag will be set automatically. If you clear the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; flag, the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag is also cleared. Note that the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag can be set independently of &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;.</source>
          <target state="translated">窗户是面板。如果您设置&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;标志，则&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;标志将自动设置。如果您清除&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;标志，则也会清除&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;标志。请注意，可以独立于&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;设置&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="6864cc15af1f952f69248443d0f4dc03d3b25bb5" translate="yes" xml:space="preserve">
          <source>Windows can potentially use a lot of memory. A usual measurement is width times height times color depth. A window might also include multiple buffers to support double and triple buffering, as well as depth and stencil buffers. To release a window's memory resources, call the &lt;a href=&quot;qwindow#destroy&quot;&gt;destroy&lt;/a&gt;() function.</source>
          <target state="translated">Windows可能会使用大量内存。通常的度量是宽度乘以高度乘以色深。一个窗口可能还包括多个缓冲区，以支持双重和三次缓冲，以及深度和模板缓冲。要释放窗口的内存资源，请调用&lt;a href=&quot;qwindow#destroy&quot;&gt;destroy&lt;/a&gt;（）函数。</target>
        </trans-unit>
        <trans-unit id="80a5f06785e1b4d4f45cb3f6ff587163b46ba663" translate="yes" xml:space="preserve">
          <source>Windows created by the underlying platform APIs may be used as both parent containers for Qt windows, or embedded into Qt windows as child windows.</source>
          <target state="translated">由底层平台API创建的窗口既可以作为Qt窗口的父容器,也可以作为子窗口嵌入到Qt窗口中。</target>
        </trans-unit>
        <trans-unit id="c001b9e66e2b63587d28dcdcba9f086ad6b8b570" translate="yes" xml:space="preserve">
          <source>Windows native time zone support is severely limited compared to the standard IANA TZ Database. Windows time zones cover larger geographic areas and are thus less accurate in their conversions. They also do not support as much historic conversion data and so may only be accurate for the current year.</source>
          <target state="translated">与标准的IANA TZ数据库相比,Windows本地时区支持受到严重限制。Windows时区覆盖了更大的地理区域,因此其转换的准确性较低。它们也不支持那么多的历史转换数据,因此可能只对当年的时区准确。</target>
        </trans-unit>
        <trans-unit id="dc3313e9f2888acedb3a46ca240a29badb9ae9a8" translate="yes" xml:space="preserve">
          <source>Windows only, Direct2D based engine</source>
          <target state="translated">仅限Windows,基于Direct2D引擎</target>
        </trans-unit>
        <trans-unit id="a42fff1d14dd2ae9835c8ac0c2f009a4f65d20db" translate="yes" xml:space="preserve">
          <source>Windows only, Direct3D based engine</source>
          <target state="translated">仅限Windows,基于Direct3D引擎</target>
        </trans-unit>
        <trans-unit id="d199049029a1551cfb834f30df67ee5137b30d5f" translate="yes" xml:space="preserve">
          <source>Windows only. Creates a library project for Visual Studio.</source>
          <target state="translated">仅限Windows。为Visual Studio创建一个库项目。</target>
        </trans-unit>
        <trans-unit id="2e356099ec8eff63706235872ca98e82811f76e2" translate="yes" xml:space="preserve">
          <source>Windows only. Creates an application project for Visual Studio. See &lt;a href=&quot;qmake-platform-notes#creating-visual-studio-project-files&quot;&gt;Creating Visual Studio Project Files&lt;/a&gt; for more information.</source>
          <target state="translated">仅Windows。为Visual Studio创建一个应用程序项目。有关更多信息，请参见&lt;a href=&quot;qmake-platform-notes#creating-visual-studio-project-files&quot;&gt;创建Visual Studio项目文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a507b2bcfe2d1bdca3de1fb8ef440ea096e7258" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the codepage that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定应在生成的.rc文件中指定的代码页。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="3fdb2557cdee44b9fa5f8e3ee5e8c140653c66f4" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the codepage that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定应在生成的.rc文件中指定的代码页。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="413e03f22d7a023136e0f546cc4f986f284360e2" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the comments for the project target; this is used where applicable for putting the comments in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的注释；适用于将注释放入应用程序属性的地方。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="2243d54caddf6d062e1a834d48f6f71722158bf3" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the company for the project target; this is used where applicable for putting the company name in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的公司；适用于将公司名称放入应用程序属性的情况。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="f385c9f8ae2cbe01cd516861e2aaf5494726c187" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the company for the project target; this is used where applicable for putting the company name in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的公司；适用于将公司名称放入应用程序属性的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="19bf01b86a10419b90ee1ccfb53e051d44003eb6" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the copyright information for the project target; this is used where applicable for putting the copyright information in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的版权信息；适用于将版权信息放入应用程序属性的地方。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="980cb7321b9fed4018d18b965510753498662576" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the copyright information for the project target; this is used where applicable for putting the copyright information in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的版权信息；适用于将版权信息放入应用程序属性的地方。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="c333020ab74e8a3179b0ccde29f65fc886d6230a" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the description for the project target; this is used where applicable for putting the description in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的描述；适用于将说明放入应用程序属性的地方。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="ab636508ffe15886e5a7dd50accae6ccbf38940d" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the description for the project target; this is used where applicable for putting the description in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的描述；适用于将说明放在应用程序属性中的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="147326ac5b89ba5b28c67ac522efbc70c06eb4e4" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the icons that should be included into a generated .rc file. This is only utilized if the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variable are not set. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">仅Windows。指定应包含在生成的.rc文件中的图标。仅在未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。有关.rc文件生成的更多详细信息，请参见&lt;a href=&quot;qmake-platform-notes#&quot;&gt;平台说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a0c03c74a03f108cc96f855ca13c952c62ebd7d" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the icons that should be included into a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variable are not set. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">仅Windows。指定应包含在生成的.rc文件中的图标。仅在未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。有关.rc文件生成的更多详细信息，请参见&lt;a href=&quot;qmake-platform-notes&quot;&gt;平台说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9ca87a793eeb7ea22195138ad7a17fc1e456a8a" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the internal name for the project target; this is used where applicable for putting the internal name in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的内部名称；适用于将内部名称放入应用程序属性的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="40ae8a9f462e8bb651ff56c1c30dfab4c72ea64b" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the language that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定应在生成的.rc文件中指定的语言。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="0fb789011f5e73b0a394ab15fdfb133db0b442e0" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the language that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定应在生成的.rc文件中指定的语言。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="98f8cb350c0780aa1e7ffe6f5b94989586bf657f" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the manifest file for the project target. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. Don't forget to remove embed_manifest_exe and embed_manifest_dll from the CONFIG variable, otherwise it will conflict with the compiler generated one.</source>
          <target state="translated">仅Windows。指定项目目标的清单文件。仅在未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。不要忘记从CONFIG变量中删除embed_manifest_exe和embed_manifest_dll，否则它将与编译器生成的冲突。</target>
        </trans-unit>
        <trans-unit id="63a612f72a6e9db0d4224fac3f264427c04501e3" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the name of the Windows resource compiler's output file for this target. See &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Adding Windows Resource Files&lt;/a&gt;.</source>
          <target state="translated">仅Windows。指定此目标的Windows资源编译器的输出文件的名称。请参见&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;添加Windows资源文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f37cbd28ad7237e4d71b047cdf422bdc4c74c5d6" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the name of the Windows resource file (.rc) for the target. See &lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Adding Windows Resource Files&lt;/a&gt;.</source>
          <target state="translated">仅Windows。指定目标的Windows资源文件（.rc）的名称。请参阅&lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;添加Windows资源文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6082b0f9a070a75f28add48a4b799b292f12b26b" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the original file name for the project target; this is used where applicable for putting the original file name in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的原始文件名；适用于将原始文件名放在应用程序属性中的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="52b3eb085c22889904a231f68cf350b66520f1d0" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the product for the project target; this is used where applicable for putting the product in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的产品；适用于将产品置于应用程序属性中的情况。仅当设置了&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量而未设置&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量时，才使用此功能。</target>
        </trans-unit>
        <trans-unit id="e19f9e393f7d7e2821916ad1c1b0a5262a897b47" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the product for the project target; this is used where applicable for putting the product in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的产品；适用于将产品置于应用程序属性中的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="546c2d2fbfa3458fba3a9ea511bf5b029c84b008" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the trademark information for the project target; this is used where applicable for putting the trademark information in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">仅Windows。指定项目目标的商标信息；适用于将商标信息放入应用程序属性的情况。仅在设置了&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;或&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;变量且未设置&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;和&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;变量的情况下才使用此功能。</target>
        </trans-unit>
        <trans-unit id="e68c590bba3dc40637f317996ef3738619b01f03" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the version number, that the Windows linker puts into the header of the .exe or .dll file via the /VERSION option. Only a major and minor version may be specified. If &lt;a href=&quot;#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt; is not set, it falls back to the major and minor version from &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; (if set).</source>
          <target state="translated">仅Windows。指定Windows链接程序通过/ VERSION选项将其放入.exe或.dll文件头的版本号。只能指定主要版本和次要版本。如果未设置&lt;a href=&quot;#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt;，它将从&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;（如果已设置）退回到主要版本和次要版本。</target>
        </trans-unit>
        <trans-unit id="ce30491cc2abc691711575dbaede3ae3b2060619" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the version number, that the Windows linker puts into the header of the .exe or .dll file via the /VERSION option. Only a major and minor version may be specified. If &lt;a href=&quot;qmake-variable-reference#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt; is not set, it falls back to the major and minor version from &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; (if set).</source>
          <target state="translated">仅Windows。指定Windows链接程序通过/ VERSION选项将其放入.exe或.dll文件头的版本号。只能指定主要版本和次要版本。如果未设置&lt;a href=&quot;qmake-variable-reference#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt;，它将从&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;（如果已设置）退回到主要版本和次要版本。</target>
        </trans-unit>
        <trans-unit id="3155e904f0d062c5d534df0d5a48138de41c9b3f" translate="yes" xml:space="preserve">
          <source>Windows only. qmake adds the values of this variable as RC preprocessor macros (/d option). If this variable is not set, the &lt;a href=&quot;#defines&quot;&gt;DEFINES&lt;/a&gt; variable is used instead.</source>
          <target state="translated">仅Windows。qmake将此变量的值添加为RC预处理器宏（/ d选项）。如果未设置此变量，则使用&lt;a href=&quot;#defines&quot;&gt;DEFINES&lt;/a&gt;变量。</target>
        </trans-unit>
        <trans-unit id="46e6b3ff4863172bf8f5600c53e33bdeea31f93d" translate="yes" xml:space="preserve">
          <source>Windows only. qmake adds the values of this variable as RC preprocessor macros (/d option). If this variable is not set, the &lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;DEFINES&lt;/a&gt; variable is used instead.</source>
          <target state="translated">仅Windows。qmake将此变量的值添加为RC预处理器宏（/ d选项）。如果未设置此变量，则&lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;改用DEFINES&lt;/a&gt;变量。</target>
        </trans-unit>
        <trans-unit id="4df68020be8317aea615b4ce4211f35ec1fa9587" translate="yes" xml:space="preserve">
          <source>Windows only: Explicitly access the 32-bit system registry from a 64-bit application running on 64-bit Windows. On 32-bit Windows or from a 32-bit application on 64-bit Windows, this works the same as specifying NativeFormat. This enum value was added in Qt 5.7.</source>
          <target state="translated">仅限Windows。从运行在64位Windows上的64位应用程序中明确访问32位系统注册表。在32位Windows上或从64位Windows上的32位应用程序中,这与指定NativeFormat的工作原理相同。这个枚举值是在Qt 5.7中添加的。</target>
        </trans-unit>
        <trans-unit id="2f06158236694c4fb22e3870b5033f303b0fbab3" translate="yes" xml:space="preserve">
          <source>Windows only: Explicitly access the 64-bit system registry from a 32-bit application running on 64-bit Windows. On 32-bit Windows or from a 64-bit application on 64-bit Windows, this works the same as specifying NativeFormat. This enum value was added in Qt 5.7.</source>
          <target state="translated">仅限Windows。从运行在64位Windows上的32位应用程序中明确访问64位系统注册表。在32位Windows上或从64位Windows上的64位应用程序中,这与指定NativeFormat的工作原理相同。这个枚举值是在Qt 5.7中添加的。</target>
        </trans-unit>
        <trans-unit id="c18ab2a2d650cd3f8fdeaea3ea846924ef5abbe6" translate="yes" xml:space="preserve">
          <source>Windows only: This option can be changed while printing and will take effect from the next call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;()</source>
          <target state="translated">仅限Windows：此选项可以在打印时更改，并且在下次调用&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）时生效</target>
        </trans-unit>
        <trans-unit id="46fafa0dbfc4874967bb0f32006cc0a4a53860bd" translate="yes" xml:space="preserve">
          <source>Windows support</source>
          <target state="translated">支持Windows</target>
        </trans-unit>
        <trans-unit id="debbba0ec9e721880339c3e545c9bf4685ce620c" translate="yes" xml:space="preserve">
          <source>Windows, negate the scope like this:</source>
          <target state="translated">Windows,否定这样的范围。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
