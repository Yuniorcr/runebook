<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">只删除被 Git 忽略的文件。这对于从头开始重建所有文件可能很有用,但要保留手动创建的文件。</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">删除没有本地副本的远程分支。例如，如果不再存在具有相同名称的本地分支，则将删除远程分支 &lt;code&gt;tmp&lt;/code&gt; 。这也 &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; ，例如git push --prune remote refs / heads / *：refs / tmp / *将确保如果 &lt;code&gt;refs/heads/foo&lt;/code&gt; 不存在，则将删除远程 &lt;code&gt;refs/tmp/foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">从索引中删除文件,即使工作目录中还有这样一个文件。(意味着--remove。)</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">从配置文件中删除给定的部分。</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">从配置文件中删除与密钥匹配的行。</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">删除给定对象的注释（默认为HEAD）。从命令行提供零个或一个对象时，这等效于为 &lt;code&gt;edit&lt;/code&gt; 子命令指定空注释消息。</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">删除由git-filter-branch备份的原始ref：说 &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">删除名为&amp;lt;name&amp;gt;的远程服务器。远程的所有远程跟踪分支和配置设置都将被删除。</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">删除&amp;lt;分支名称&amp;gt;的上游信息。如果未指定任何分支，则默认为当前分支。</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">删除不必要的空白</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">从工作树中删除未被跟踪的文件。</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">移除的内容用&quot;-&quot;开头的行表示。您可以通过将&quot;-&quot;转换为&quot;&quot;(空格)来防止分期删除。</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">从 &lt;code&gt;Documentation&lt;/code&gt; 目录及其任何子目录下的索引中删除所有 &lt;code&gt;*.txt&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">删除从文件系统中消失的文件。</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">重命名git-diff和git-diff-tree的检测选项。默认值为（'-M'）; 将其设置为（'-C'）或（'-C'，'-C'）也可以检测副本，或者将其设置为（），即如果您不想进行重命名检测，则为空列表。</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">将给定的部分重新命名为一个新的名称。</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">将名为&amp;lt;old&amp;gt;的远程重命名为&amp;lt;new&amp;gt;。远程的所有远程跟踪分支和配置设置均已更新。</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">Git不会检测到重命名和复制的目录，因此在提交SVN时不会对其进行跟踪。我不打算为此增加支持，因为要在所有可能的极端情况下工作都是非常困难且耗时的（Git也不这样做）。如果它们足够相似，Git可以检测到它们，则完全支持提交重命名和复制的文件。</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">重命名或复制的条目具有以下格式:</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">将现有的文件或子目录重命名到分支的不同位置。现有文件或目录必须存在。如果目标目录存在,它将被源目录替换。</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">重新排序和编辑提交通常会产生未经测试的中间步骤。您可能想通过运行测试来检查您的历史编辑是否没有破坏任何东西,或者至少通过使用 &quot;exec &quot;命令(快捷键 &quot;x&quot;)在历史的中间点重新编译。您可以通过创建一个像这样的待办事项列表来实现。</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">重新排列组成补丁的文件差异不影响ID。特别是，通过将相同的两棵树与&amp;ldquo; -O &amp;lt;orderfile&amp;gt;&amp;rdquo;的两个不同设置进行比较而生成的两个补丁将产生相同的补丁ID签名，从而允许将计算结果用作索引有关以下内容的某些元信息的关键字两棵树之间的变化；</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">从补丁系列中重新排序或选择</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">重新打包历史数据</target>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">重复最后两个步骤,直到你的工作树干净为止。</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">用给定的名称替换现有的标签(而不是失败)。</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">替换每个父 &lt;code&gt;P&lt;/code&gt; 的 &lt;code&gt;C'&lt;/code&gt; 以其简化 &lt;code&gt;P'&lt;/code&gt; 。在此过程中，丢弃作为其他父项的祖先或根的父项会将TREESAME提交到一棵空树，并删除重复的树，但请注意不要丢弃我们作为TREESAME的所有父项。</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">通过创建新的提交来替换当前分支的尖端。记录的树照常准备（包括 &lt;code&gt;-i&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt; 选项的作用以及显式pathspec），并且当未指定其他消息时，将原始提交的消息用作起点，而不是空消息从命令行通过 &lt;code&gt;-m&lt;/code&gt; ， &lt;code&gt;-F&lt;/code&gt; ， &lt;code&gt;-c&lt;/code&gt; 等选项。新提交的父代和作者与当前提交的父代和作者相同（ &lt;code&gt;--reset-author&lt;/code&gt; 选项可以对此提出要求）。</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">用 Git 要调用的服务的长名(git-receive-pack、git-upload-pack 或 git-upload-archive)代替。</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">用 Git 要调用的服务名称(receive-pack、upload-pack 或 upload-archive)代替。</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">除了那些进行可达性遍历的命令(prune、pack transfer和fsck)之外,所有Git命令都会默认使用替换引用。</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">报告所有删除的对象。</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">向主要进行开发和维护的Git邮件列表&amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt; 报告错误。您不必订阅列表即可在此处发送消息。有关以前的错误报告和其他讨论，请参阅&lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt;上的列表存档。</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">更详细地报告。</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">报告密码的成功或失败。如果凭证允许操作成功完成，则可以使用&amp;ldquo;批准&amp;rdquo;操作对其进行标记，以告知 &lt;code&gt;git credential&lt;/code&gt; 在其下一次调用中重用它。如果该凭证在操作期间被拒绝，请使用&amp;ldquo;拒绝&amp;rdquo;操作，以便 &lt;code&gt;git credential&lt;/code&gt; 在下一次调用时将要求输入新密码。无论哪种情况，都应将 &lt;code&gt;git credential&lt;/code&gt; 与从步骤（2）获得的凭据描述一起提供（还包含步骤（1）中提供的凭据描述）。</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">向stderr报告进度。</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">向 stderr 报告进度。默认情况下,只打印关于当前正在应用的补丁的消息。此选项将导致报告其他信息。</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">报告根节点。</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">报告标签:</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">报告正在本地行走的对象列表和成功发送到远程存储库的对象列表。</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">移动时报告文件的名称。</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">报告索引中增加和删除的内容。</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">报告下载的内容。</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">报告错误</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">储存库和分支机构</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">存储库管理</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">存储库的维护</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">仓库特定的配置文件。</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">版本库的配置文件。如果设置了 $GIT_COMMON_DIR,这个文件将被忽略,而使用 &quot;$GIT_COMMON_DIR/config&quot;。</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">代表使用 &quot;git-ssl foo.example /bar &quot;帮助程序访问的仓库。请求的类型可以由帮助程序使用环境变量来决定(见上文)。</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">代表一个仓库,其路径为/repo,使用 &quot;git-server-alias foo &quot;助手程序访问。协议流中传递的远程服务器主机名是 &quot;foo&quot;(这允许多个虚拟 Git 服务器共享一个链接级地址)。</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">代表一个仓库,其路径为/repo,可以通过 &quot;git-server-alias foo &quot;帮助程序访问。仓库的路径和请求类型不是在命令行中传递的,而是作为协议流的一部分,就像git://协议一样。</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">用帮助程序&amp;ldquo; git-server-alias foo&amp;rdquo; 表示具有路径 &lt;code&gt;/repo with spaces&lt;/code&gt; 的存储库，并带有空格。在协议流中传递的远程服务器的主机名将为&amp;ldquo; foo&amp;rdquo;（这允许多个虚拟Git服务器共享链接级地址）。</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">代表版本库,其路径为/somerepo,可通过git协议在抽象命名空间地址/git-server处访问。</target>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">向用户请求一个有效的修订版，然后设置 &lt;code&gt;REVISION&lt;/code&gt; 环境变量。在其他方面，此选项类似于 &lt;code&gt;argPrompt&lt;/code&gt; ，并且可以与其一起使用。</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">向用户请求一个字符串参数，然后通过 &lt;code&gt;ARGS&lt;/code&gt; 环境变量将其传递给工具。由于请求参数意味着确认，因此，如果启用了 &lt;code&gt;confirm&lt;/code&gt; 选项，则该选项无效。如果该选项设置为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; ，则对话框使用内置的通用提示；否则，将使用默认提示。否则，将使用变量的确切值。</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">要求帮助者检查克隆的连接性。</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">请求助手执行强制更新。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">索取全权证书</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">请求将一个文件修订版本写入packfile。该修订版未与任何提交关联；必须通过分配的标记引用Blob，才能在后续的 &lt;code&gt;commit&lt;/code&gt; 命令中形成此连接。</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">要求fast-import支持指定的功能,如果不支持则放弃。</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">要求后端分别支持 &lt;code&gt;get-mark&lt;/code&gt; ， &lt;code&gt;cat-blob&lt;/code&gt; 或 &lt;code&gt;ls&lt;/code&gt; 命令。不支持指定命令的快速导入版本将退出，并显示一条消息指示。这样可以通过清晰的消息尽早消除导入错误，而不是在检测到不受支持的命令之前浪费时间在导入的早期。</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">要求后端支持 &lt;code&gt;commit&lt;/code&gt; 命令的 &lt;code&gt;notemodify&lt;/code&gt; （N）子命令。不支持注释的快速导入版本将退出，并显示一条消息指示。</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">需要 &lt;code&gt;--stdout&lt;/code&gt; 。从生成的packfile中省略某些对象（通常是blob）。有关有效的 &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; 格式，请参见&lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">保留的字符有 &quot;%&quot;(用于编码)、&quot;+&quot;(可用于编码SPACE)、Perl中定义的所有空白字符,包括SP、TAB和LF(用于分隔记录中的字段)。</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">保留指令</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">将&amp;lt;分支名称&amp;gt;重置为&amp;lt;起点&amp;gt;，即使&amp;lt;分支名称&amp;gt;已经存在。如果没有 &lt;code&gt;-f&lt;/code&gt; ，则 &lt;code&gt;git branch&lt;/code&gt; 拒绝更改现有分支。与 &lt;code&gt;-d&lt;/code&gt; （或 &lt;code&gt;--delete&lt;/code&gt; ）结合使用，无论其合并状态如何，都允许删除该分支。与 &lt;code&gt;-m&lt;/code&gt; （或 &lt;code&gt;--move&lt;/code&gt; ）结合使用，即使新的分支名称已经存在，也允许重命名分支， &lt;code&gt;-c&lt;/code&gt; （或 &lt;code&gt;--copy&lt;/code&gt; ）也是如此。</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">重置索引中的单个文件</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">将现有分支(或新分支)重置为特定的版本。这条命令必须用于改变分支到一个特定的版本,而不需要提交。</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">将当前HEAD复位到指定状态</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">重置为&amp;lt;pathspec&amp;gt;中的当前冲突重新记录的冲突解决方案。</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">如果要中止合并解析，请重置rerere使用的元数据。调用 &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; 或 &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; 将自动调用此命令。</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">重置、还原和恢复</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">重置索引条目并更新工作树中 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件。如果 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件具有本地更改，则重置将中止。</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">重置索引并更新工作树中 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件，但保留那些索引和工作树中不同的文件（即，尚未添加的更改）。如果 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和索引之间的另一个文件具有未暂存的更改，则重置将中止。</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">重置索引和工作树。自 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 以来，工作树中跟踪文件的任何更改都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">重置索引,但不重置工作树(即保留修改后的文件,但不标记为提交),并报告未更新的内容。这是默认操作。</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">解析&amp;ldquo; $ GIT_DIR / &amp;lt;路径&amp;gt;&amp;rdquo;，并考虑其他路径重定位变量，例如$ GIT_OBJECT_DIRECTORY，$ GIT_INDEX_FILE&amp;hellip;。例如，如果$ GIT_OBJECT_DIRECTORY设置为/ foo / bar，则&amp;ldquo; git rev-parse --git-path objects / abc&amp;rdquo;将返回/ foo / bar / abc。</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">解决冲突。Git将在工作树中标记冲突。将文件编辑为shape并 &lt;code&gt;git add&lt;/code&gt; 它们添加到索引中。使用 &lt;code&gt;git commit&lt;/code&gt; 或 &lt;code&gt;git merge --continue&lt;/code&gt; 完成交易。后者命令在调用 &lt;code&gt;git commit&lt;/code&gt; 之前检查是否正在进行（中断的）合并。</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">解决合并问题</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">查找值时，请遵守配置文件中的 &lt;code&gt;include.*&lt;/code&gt; 指令。给定特定文件（例如，使用 &lt;code&gt;--file&lt;/code&gt; ，-- &lt;code&gt;--global&lt;/code&gt; 等）时，默认为 &lt;code&gt;off&lt;/code&gt; &lt;code&gt;on&lt;/code&gt; 当搜索所有配置文件时，默认为打开。</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">遵守 &lt;code&gt;--format&lt;/code&gt; 选项中指定的任何颜色。所述 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 字段必须之一 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; ，或 &lt;code&gt;auto&lt;/code&gt; （如果 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 不存在时，表现得好像 &lt;code&gt;always&lt;/code&gt; 给予）。</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">对命令的反应</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">重新启动 httpd 实例并退出。根据需要重新生成配置文件以生成新的实例。</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">在解决了合并冲突后,重新启动重定基过程。</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">跳过当前的补丁,重新启动重基过程。</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">还原工作树中指定的路径与还原源中的一些内容。如果一个路径被跟踪,但在还原源中不存在,它将被删除以匹配源。</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">恢复原来的分支,中止补丁操作。</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">用给定树的内容恢复工作树文件。通常通过命名与之相关的提交、分支或标签来指定源树。</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">恢复工作树文件</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">如果意外清除了文件，则在合并期间恢复文件的未 &lt;code&gt;unmerged&lt;/code&gt; 或 &lt;code&gt;needs updating&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">根据 &quot;岛屿 &quot;限制三角区的匹配。见下文三角洲岛屿。</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">仅在不需要文件级合并的情况下，才通过 &lt;code&gt;git read-tree&lt;/code&gt; 限制三路合并，而不是在琐碎的情况下解决合并问题并在索引中未解决有冲突的文件。</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">仅限Git的SSH访问的限制登录shell</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">结果与git 1.9和更早版本产生的值不同，或者与配置了&amp;ldquo;不稳定&amp;rdquo;哈希（请参阅下面的--unstable）时产生的值不同-即使在不使用任何&amp;ldquo; -O &amp;lt;orderfile&amp;gt;&amp;rdquo;的差异输出上使用时，从而使存储此类&amp;ldquo;不稳定&amp;rdquo;或历史补丁ID的现有数据库不可用。</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">检索和存储用户证书</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">检索遥控器的URL。在此扩展了 &lt;code&gt;insteadOf&lt;/code&gt; 和 &lt;code&gt;pushInsteadOf&lt;/code&gt; 的配置。默认情况下，仅列出第一个URL。</target>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">以纯文本邮件格式返回提交，适用于&lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">以给定的路径和修订版返回给定存储库中文件的原始数据。指向此操作的链接标记为 &lt;code&gt;raw&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">重新使用记录的解决冲突的合并</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">在应用补丁之前,在工作中的CVS结账中反转CVS关键字的扩展(例如:$Revision:1.2.3.4$变成$Revision$)。</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">反转所有后续修订说明符（直到下一个 &lt;code&gt;--not&lt;/code&gt; ）的 &lt;code&gt;^&lt;/code&gt; 前缀的含义（或不存在）。</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">恢复一些现有的提交</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">将主目录下第五次提交(包括)到第三次提交(包括)所做的修改还原,但不创建任何包含还原后修改的提交。还原只修改工作树和索引。</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">将 HEAD 中最后一个提交的第四个提交所指定的更改还原,并将还原后的更改创建一个新的提交。</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">对合并提交进行反转,就意味着你永远不会想要合并带来的树形变化。因此,以后的合并将只引入不是先前已恢复的合并的祖先的提交所带来的树形变化。这可能是你想要的,也可能不是。</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">查看并编辑您要发送的每个补丁。默认值为 &lt;code&gt;sendemail.annotate&lt;/code&gt; 的值。有关 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; 的信息,请参见&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">修订范围摘要</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">显示的修订版。默认为HEAD。</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">首先是修订，然后是路径。例如在 &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; 中， &lt;code&gt;v1.0&lt;/code&gt; 和 &lt;code&gt;v2.0&lt;/code&gt; 是修订版，而 &lt;code&gt;arch/x86&lt;/code&gt; 和 &lt;code&gt;include/asm-x86&lt;/code&gt; 是路径。</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">重启主分支,去掉这三个提交。</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">重写分支</target>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">重写一次提交</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">重写历史和维护补丁系列</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">要分割的Maildir的根目录。这个目录应该包含cur、tmp和new等子目录。</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">粗略地说，有两个重要的工作流程：合并和修补。重要的区别在于，合并工作流可以传播包括合并在内的完整历史记录，而补丁则不能。这两个工作流程可以并行使用：在 &lt;code&gt;git.git&lt;/code&gt; 中，只有子系统维护人员使用合并工作流程，而其他所有人都发送补丁。</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">帮助解析远程存储库访问参数的例程。</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">规则:只在明确界定的地点向下游合并。</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">规则。向上合并</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">规则。扔掉的整合分支</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">规则:主题分支</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">对文本文件进行3路文件级合并,但从两个版本中取行,而不是留下冲突标记。这样做往往会使增加的行在结果文件中以随机顺序排列,用户应该验证结果。如果你不明白其中的含义,请不要使用这个方法。</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">偶尔从上游的公共存储库中运行 &lt;code&gt;git fetch origin&lt;/code&gt; 。这仅执行 &lt;code&gt;git pull&lt;/code&gt; 的前半部分，但不会合并。公共存储库的头存储在 &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">如果需要，最后运行 &lt;code&gt;git gc --auto&lt;/code&gt; 以执行垃圾收集。默认情况下启用。</target>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">对需要合并的文件进行合并。</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">运行三方文件合并</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">就像在 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 中而不是当前工作目录中启动git一样运行。当给出多个 &lt;code&gt;-C&lt;/code&gt; 选项时，每个后续非绝对 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 相对于前面的 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 。如果 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 存在但为空，例如 &lt;code&gt;-C &quot;&quot;&lt;/code&gt; ，则当前工作目录保持不变。</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">运行 git-daemon 从 inetd 服务 /pub/scm。</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">运行git-daemon从xinetd服务/pub/scm。</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">互动运行。</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">对索引中所有需要合并的文件进行合并。</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">运行合并冲突解决工具,解决合并冲突。</target>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">默默地运行该命令,不需要创建一个窗口来显示其输出。</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">仅在GUI中选择差异时才运行该工具。它保证 &lt;code&gt;FILENAME&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">运行此脚本并将其输出保存到文件中。然后，该文件可用作项目列表文件，这意味着您可以将 &lt;code&gt;$projects_list&lt;/code&gt; 设置为其文件名。</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">奔跑在口头上。</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">静态运行。不影响向标准误差流报告进度状态。</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">在没有参数的情况下运行 &quot;git tag &quot;也会列出所有标签。模式是 shell 通配符(即使用 fnmatch(3)匹配)。可以给出多个模式;如果其中任何一个匹配,就会显示该标签。</target>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">运行&lt;a href=&quot;git-diff&quot;&gt;的git-DIFF [1] &lt;/a&gt;，&lt;a href=&quot;git-log&quot;&gt;git的日志[1] &lt;/a&gt;，&lt;a href=&quot;git-show&quot;&gt;混帐显示[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-index&quot;&gt;混帐的Diff-指数[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-tree&quot;&gt;混帐的Diff-树[1] ，&lt;/a&gt;或&lt;a href=&quot;git-diff-files&quot;&gt;混帐的Diff-文件[1]&lt;/a&gt;用在 &lt;code&gt;-p&lt;/code&gt; 选项生成补丁文本。您可以通过 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; 和 &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 环境变量来自定义补丁文本的创建。</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">仅在将对象添加到存储库中而不定期运行此类瓷器命令，一次性执行存储库优化或清理次优批量导入时，才需要手动运行 &lt;code&gt;git gc&lt;/code&gt; 。有关导入案例的更多详细信息，请参见&lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]中&lt;/a&gt;的&amp;ldquo; PACKFILE OPTIMIZATION&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">在现有存储库中运行 &lt;code&gt;git init&lt;/code&gt; 是安全的。它不会覆盖已经存在的内容。重新运行 &lt;code&gt;git init&lt;/code&gt; 的主要原因是选择新添加的模板（如果给定了--separate-git-dir，则将存储库移至另一个位置）。</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">不建议在打算从中 &lt;code&gt;dcommit&lt;/code&gt; 的分支上运行 &lt;code&gt;git merge&lt;/code&gt; 或 &lt;code&gt;git pull&lt;/code&gt; ，因为Subversion用户看不到您进行的任何合并。此外，如果从作为SVN分支镜像的Git分支合并或提取，则 &lt;code&gt;dcommit&lt;/code&gt; 可能会提交到错误的分支。</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在存储库中运行 &lt;code&gt;git pack-refs&lt;/code&gt; 使其在1.5.1.2之前的Git版本无法通过诸如HTTP之类的愚蠢传输方式使其无法克隆。这个变量确定 &lt;code&gt;git gc&lt;/code&gt; 是否运行 &lt;code&gt;git pack-refs&lt;/code&gt; 。可以将其设置为 &lt;code&gt;notbare&lt;/code&gt; 以在所有非裸仓库中启用它，也可以将其设置为布尔值。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">在&amp;lt;rev-list options&amp;gt;中使用--tags或--all运行git-filter-branch。为了将带注释的标签保留为带注释，必须使用--tag-name-filter（并且必须在以前的错误重写中未从refs / original /中还原）。</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">发生冲突的自动合并后，立即运行 &lt;code&gt;git rerere&lt;/code&gt; 命令记录冲突的工作树文件，并在其中包含通常的冲突标记 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;=======&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 。稍后，在解决冲突之后，再次运行 &lt;code&gt;git rerere&lt;/code&gt; 将记录这些文件的已解决状态。假设您是在将master的测试合并创建到topic分支时执行此操作的。</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">在索引条目不同于 &lt;code&gt;HEAD&lt;/code&gt; 提交的路径上运行 &lt;code&gt;git update-index&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">运行 &lt;code&gt;init&lt;/code&gt; 并 &lt;code&gt;fetch&lt;/code&gt; 。它将根据传递给它的URL的基本名称自动创建一个目录；或者是否传递了第二个参数；它将创建一个目录并在其中工作。它接受 &lt;code&gt;init&lt;/code&gt; 和 &lt;code&gt;fetch&lt;/code&gt; 命令接受的所有参数。 &lt;code&gt;--fetch-all&lt;/code&gt; 和 &lt;code&gt;--parent&lt;/code&gt; 除外。克隆存储库后， &lt;code&gt;fetch&lt;/code&gt; 命令将能够在不影响工作树的情况下更新修订版。和 &lt;code&gt;rebase&lt;/code&gt; 命令就能用最新的修改工作树。</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">在当前存储库中运行许多内务处理任务，例如压缩文件修订版（以减少磁盘空间并提高性能），删除可能由先前的 &lt;code&gt;git add&lt;/code&gt; 调用，打包引用，修剪reflog，rerere元数据或旧的工作树。可能还会更新辅助索引，例如提交图。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">Git提交对象的SHA-1标识符。</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">Git标签对象的SHA-1标识符。</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH和文件传输</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">SVN本身只存储UTC的时间,没有其他时间。常规的svn客户端会将UTC时间转换为当地时间(或基于TZ=环境)。这个命令也有同样的行为。</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">可悲的是，许多合并并非微不足道。如果已添加，移动或删除了文件，或者两个分支都修改了同一文件，则将剩下一个索引树，其中包含&amp;ldquo;合并条目&amp;rdquo;。这样的索引树不能&amp;ldquo;不&amp;rdquo;写到树对象，并且您必须使用其他工具解决任何此类合并冲突，然后才能写出结果。</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">将你的数据从另一个人们爱恨交加的SCM中抢救出来。</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">与 --mode 相同,但取模式编码为数字。这主要用于已经解析布局模式的其他命令。</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">与--receive-pack = &amp;lt;git-receive-pack&amp;gt;相同。</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">与--upload-pack = &amp;lt;git-upload-pack&amp;gt;相同。</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">与-m相同，只是未合并的条目将被丢弃而不是失败。与 &lt;code&gt;-u&lt;/code&gt; 一起使用时，导致丢失工作树更改的更新不会中止该操作。</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">与 &lt;code&gt;--max-depth=-1&lt;/code&gt; 相同 ; 这是默认值。</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--max-depth=0&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">与 &lt;code&gt;--untracked-cache&lt;/code&gt; 相同。提供与旧版本Git的向后兼容性，其中 &lt;code&gt;--untracked-cache&lt;/code&gt; 曾经暗示 &lt;code&gt;--test-untracked-cache&lt;/code&gt; untracked-cache，但是此选项将无条件启用扩展。</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">与 &lt;code&gt;--verify&lt;/code&gt; 相同，但将对象名称缩短为具有至少 &lt;code&gt;length&lt;/code&gt; 字符的唯一前缀。最小长度为4，默认值为 &lt;code&gt;core.abbrev&lt;/code&gt; 配置变量的有效值（请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">与 &lt;code&gt;-a&lt;/code&gt; 相同，除非使用 &lt;code&gt;-d&lt;/code&gt; 。然后，先前包中的所有无法到达的对象将变成松散的，未打包的对象，而不是留在旧包中。无法到达的对象永远不会有意添加到包装中，即使重新包装也是如此。此选项可防止无法访问的对象通过留在旧包中然后被删除而立即删除。取而代之的是，在下次 &lt;code&gt;git gc&lt;/code&gt; 调用时，将根据正常的到期规则修剪松散的无法访问的对象。参见&lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">与 &lt;code&gt;git gui citool&lt;/code&gt; 相同（如上所述）。</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">与 &lt;code&gt;group&lt;/code&gt; 相同，但使存储库对所有用户可读。</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">除未删除#commentary之外，其他与 &lt;code&gt;strip&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">如果要编辑消息，则与 &lt;code&gt;strip&lt;/code&gt; 相同。否则为 &lt;code&gt;whitespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">与 &lt;code&gt;whitespace&lt;/code&gt; 相同，不同之处在于，如果要编辑消息，则以下一行中的所有内容（包括以下内容）都将被截断。可以使用core.commentChar自定义&amp;ldquo; &lt;code&gt;#&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">同上,但格式是根据输出文件推断的。</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">同上,但使用内置的 tar.gz 处理。</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">同上。</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">与默认模式相同,但不会修剪一些历史记录。</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">把这个补丁保存到UNIX邮箱格式的文件中。比如说,把它叫做a.patch。</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">将进程ID保存在 &lt;code&gt;file&lt;/code&gt; 中。当守护程序在 &lt;code&gt;--inetd&lt;/code&gt; 下运行时被忽略。</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">将本地修改保存到新的 &lt;code&gt;stash entry&lt;/code&gt; 然后将其回滚到HEAD（在工作树和索引中）。&amp;lt;message&amp;gt;部分是可选的，并提供说明以及隐藏状态。</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">保存日志并重播</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">假设您使用&lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; &lt;/a&gt;修改了一个分支，然后意识到该分支是您历史上唯一需要参考的地方。</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">扫描 &lt;code&gt;Documentation/&lt;/code&gt; 以查找其他遗漏的内容；特别是：</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">扫描邮件档案,寻找其他遗漏的东西</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">扫描人页,看看是否有任何假设比本手册提供的背景更多。</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">方案（例如 &lt;code&gt;https&lt;/code&gt; ://example.com/中的 &lt;code&gt;https://example.com/&lt;/code&gt; ）。此字段必须与config键和URL之间完全匹配。</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">搜索当前目录下不属于 Git 管理的文件。</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">搜索回归。</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">搜索策略</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">第二个用户特定的配置文件。如果$ XDG_CONFIG_HOME未设置或为空，则将使用 &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; 。此文件中设置的任何单值变量都将被 &lt;code&gt;~/.gitconfig&lt;/code&gt; 。如果您有时使用较旧版本的Git，最好不要创建此文件，因为该文件的支持是最近才添加的。</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">第二个特定于用户的凭证文件。如果 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 未设置或为空，则将使用 &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; 。如果 &lt;code&gt;~/.git-credentials&lt;/code&gt; 也具有匹配的凭据，则不会使用此文件中存储的任何凭据。如果您有时使用不支持该文件的旧版本，则最好不要创建此文件。</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">其次，可以通过 &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; 和 &lt;code&gt;http://git.example.org/var/&lt;/code&gt; 访问在 &lt;code&gt;/pub/scm/&lt;/code&gt; 和 &lt;code&gt;/var/git/&lt;/code&gt; 找到的存储库。您可以通过添加重写规则（例如第三和第四条）来添加任意数量的项目根目录。</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">几秒钟后重新连接到smtp服务器。另请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;的 &lt;code&gt;--relogin-delay&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">节可以进一步划分为子节。要开始一个子节,请将其名称用双引号括起来,并与节名用空格隔开,就像下面的例子。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">有关这三个命令之间的差异，请参见&lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt;中的&amp;ldquo;重置，还原和还原&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">有关如何安全读取此输出的详细信息，请参见下面的&amp;ldquo;对命令的响应&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">有关完整的详细信息，请参见&lt;a href=&quot;api-trace2&quot;&gt;Trace2文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">有关核心变量，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;；有关差异生成的设置，请参见git- &lt;a href=&quot;git-diff&quot;&gt;diff [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">有关上述配置选项的更多详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;；有关refspec语法的更多详细信息，请参见git- &lt;a href=&quot;git-fetch&quot;&gt;fetch [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">有关支持的选项的完整列表，请参见&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">有关详细信息，包括如何显示和处理冲突，请参见&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">有关解决此类冲突的一些提示，请参见&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt;以获得生成新包和替换现有包的选项。</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">有关说明，请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">有关说明，请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;。请注意，此设置不受 &lt;code&gt;identity&lt;/code&gt; 机制的约束。</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">有关钩子执行的更多常规信息，请参见&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">有关语法的详细说明，请参见&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;。您还可以将.gitignore文件放在工作树中的其他目录中，它们将应用于这些目录及其子目录。该 &lt;code&gt;.gitignore&lt;/code&gt; 文件可以被添加到您的资料库像任何其他文件（只需要运行 &lt;code&gt;git add .gitignore&lt;/code&gt; 和 &lt;code&gt;git commit&lt;/code&gt; ，像往常一样），这是方便当排除模式（如匹配生成输出文件模式），也会使意义克隆您的存储库的其他用户。</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;。经验法则是，当您需要直接访问$ GIT_DIR内部的内容时，不要对路径属于$ GIT_DIR还是$ GIT_COMMON_DIR做出任何假设。使用 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 获取最终路径。</target>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">请参阅&lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt;以开始使用，然后参阅&lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt;以获取有用的最小命令集。《&lt;a href=&quot;user-manual&quot;&gt;Git用户手册》&lt;/a&gt;有更深入的介绍。</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;以获得描述。</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;以获得描述。</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">有关推荐的工作流程的概述，请参见&lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">有关gitweb源代码的信息，请参见&lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt;，使用gitweb本身浏览。</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">有关多包索引功能的更多信息，请参见&lt;a href=&quot;multi-pack-index&quot;&gt;多包索引设计文档&lt;/a&gt;和&lt;a href=&quot;pack-format&quot;&gt;多包索引格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">有关 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 的详细说明，请参见上面的 &lt;code&gt;filemodify&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">有关 &lt;code&gt;p4 help revisions&lt;/code&gt; 版本说明符的完整语法，请参见p4帮助版本。</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">如果要使 &lt;code&gt;git pull&lt;/code&gt; ，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中的&lt;/a&gt; &lt;code&gt;pull.rebase&lt;/code&gt; ， &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; 和 &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; ，始终使用 &lt;code&gt;--rebase&lt;/code&gt; 而不是合并。</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">当前定义的选项列表请参见OPTIONS。</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">当前定义的属性列表请参见REF LIST ATTRIBUTES。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">另请参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;联机帮助页中的&amp;ldquo;存储库&amp;rdquo;和后续小节。</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#FILES&quot;&gt;文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#git-quick-start&quot;&gt;Git快速参考&lt;/a&gt;，以简要概述Git命令，没有任何说明。</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">另请参阅&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;以获取一种更友好的方式来对索引执行一些最常见的操作。</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">另见&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt;和&lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns .org /&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">另请参见 &lt;code&gt;%avatar_size&lt;/code&gt; 以及图标和头像的像素大小（&amp;ldquo;默认&amp;rdquo;用于单行，例如&amp;ldquo; log&amp;rdquo;和&amp;ldquo; shortlog&amp;rdquo;，&amp;ldquo; double&amp;rdquo;用于两行，例如&amp;ldquo; commit&amp;rdquo;，&amp;ldquo; commitdiff&amp;rdquo;或&amp;ldquo; tag&amp;rdquo; &amp;rdquo;）。如果更改了默认字体大小或行高（例如，通过在 &lt;code&gt;@stylesheets&lt;/code&gt; 中添加额外的CSS样式表），则更改这些值可能是适当的。</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; 和&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]的&lt;/a&gt;PRUNING部分。</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">另请参见下面的 &quot;不合适的选项&quot;。</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">另请参见下面的 &quot;支持合并 &quot;和 &quot;不合适的选择&quot;。</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">另请参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;联机帮助页的&amp;ldquo;控制对Git存储库的访问&amp;rdquo;小节中涉及更多的示例。</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">另请参见&lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt;文档以获取一些有用的示例。</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;的 &lt;code&gt;--amend&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;的 &lt;code&gt;--negotiation-tip&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中&lt;/a&gt;记录的 &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; 配置变量。</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">有关 &lt;code&gt;data&lt;/code&gt; 命令的详细说明，请参见下文。</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">有关配置文件的详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;的&amp;ldquo; CONFIGURATION FILE&amp;rdquo;部分。该文件为纯文本，因此您也可以使用自己喜欢的编辑器对其进行编辑。</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">有关每种格式的一些其他详细信息，请参见&amp;ldquo; PRETTY FORMATS&amp;rdquo;部分。如果省略 &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; 部分，则默认为 &lt;code&gt;medium&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">请参阅&amp;ldquo; notes.rewrite。&amp;lt;命令&amp;gt;&amp;rdquo;配置，以了解如何在重写提交的命令之间携带注释。</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">有关更多使用说明，请参见&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;和&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;联机帮助页。</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">请参阅&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;命令以了解如何创建和验证标签对象。（请注意，&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;也可以用于创建&amp;ldquo;轻量级标签&amp;rdquo;，这些标签根本不是标签对象，而只是名称以 &lt;code&gt;refs/tags/&lt;/code&gt; 开头的简单引用）。</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;还原故障合并方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">有关更多显示选项，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;手册页中的 &lt;code&gt;--pretty&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">有关更多详细信息，请参见上面的 &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">有关更多详细信息，请参见上面的 &lt;code&gt;--trust-exit-code&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">有关此启发式工作方式的信息，请参见下面&amp;ldquo;配置&amp;rdquo;部分中的 &lt;code&gt;gc.auto&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">请参阅下面的 &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; 配置变量。使用时，它将影响自动打包限制的工作方式。</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]中&lt;/a&gt;的 &lt;code&gt;pathspec&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">见 &lt;code&gt;pickaxe&lt;/code&gt; 在入门&lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">有关 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; 的信息,请参见&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">详见下面的修剪部分。</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;的PRUNING部分，以了解它会根据各种配置进行修剪。</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">默认远程的定义见添加子命令。</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]中&lt;/a&gt; &lt;code&gt;--depth&lt;/code&gt; 选项的文档。</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]中&lt;/a&gt; &lt;code&gt;--window&lt;/code&gt; 选项的文档。</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中&lt;/a&gt; &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; ， &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; 和 &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; 选项的说明。</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">请参阅Git源代码树中的文件gitweb / INSTALL和&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]，&lt;/a&gt;以获取有关使用CGI或支持Perl的服务器设置永久安装的详细信息的说明。</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">详见下文关于检疫环境的说明。</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">请参阅 &quot;描述 &quot;部分的参考资料,开始使用Git。下面的内容对于初次使用的人来说可能会比较详细。</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">有关匹配语义的讨论，请参见上面描述 &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; 的部分。</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">请注意，在&lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]中的&lt;/a&gt; &amp;ldquo;隔离环境&amp;rdquo; 部分。</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">查看 &lt;code&gt;git submodule&lt;/code&gt; 创建了哪些文件：</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">选择&amp;ldquo;创建新项目&amp;rarr;从CVS签出&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">选择要包含在下次提交中的文件内容,然后进行提交。</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">选择非匹配的线路。</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">仅选择已添加（ &lt;code&gt;A&lt;/code&gt; ），已复制（ &lt;code&gt;C&lt;/code&gt; ），已删除（ &lt;code&gt;D&lt;/code&gt; ），已修改（ &lt;code&gt;M&lt;/code&gt; ），已重命名（ &lt;code&gt;R&lt;/code&gt; ），其类型（即常规文件，符号链接，子模块等）更改（ &lt;code&gt;T&lt;/code&gt; ）的文件，是未合并（ &lt;code&gt;U&lt;/code&gt; ），是未知（ &lt;code&gt;X&lt;/code&gt; ）或已配对（ &lt;code&gt;B&lt;/code&gt; ）。可以使用过滤器字符的任何组合（包括无）。将 &lt;code&gt;*&lt;/code&gt; （全或无）添加到组合中时，如果在比较中有任何文件与其他条件匹配，则选择所有路径；如果没有符合其他条件的文件，则不会选择任何内容。</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">加载图形后，选择指定的提交。默认行为等同于指定 &lt;code&gt;--select-commit=HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">发送一个 &quot;瘦身 &quot;包,根据包中未包含的对象,以deltified的形式记录对象,以减少网络流量。</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">以电子邮件的形式发送补丁集合</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">从 stdin 发送补丁集合到 IMAP 文件夹。</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">将档案发回git-archive</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">即使安全检查会阻止发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">将日志消息发送到指定的目的地。请注意，此选项并不意味着--verbose，因此默认情况下将仅记录错误情况。&amp;lt;目标&amp;gt;必须是以下之一：</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">将打包好的对象送回git-fetch-pack。</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将结果发送到标准输出，而不是覆盖 &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">给自己发送补丁,完全按照自己的方式发送,只是收件人:和抄送:行不包含列表和维护者地址。</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">将&lt;strong&gt;SIGUSR1&lt;/strong&gt;发送到 &lt;code&gt;git fast-import&lt;/code&gt; 进程将模拟 &lt;code&gt;checkpoint&lt;/code&gt; 命令，尽早结束当前packfile 。不耐烦的操作员可以使用此工具来窥视进行中的导入中的对象和参考，这会花费一些额外的运行时间和更差的压缩率。</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">将丢失的对象发送到远程仓库,并更新远程分支。</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">单独的变化</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">分离出隐藏在NUL字节后面的其他信息（例如，代理字符串作为一种功能，可以使用 &lt;code&gt;ls-refs&lt;/code&gt; 请求symrefs ）</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">用 NULs 分开提交,而不是用新行。</target>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">将参数与选项分开</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">过滤器命令行中的序列&quot;%f &quot;被替换为过滤器正在处理的文件名。过滤器可能会在关键字替换中使用这个。例如</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">定序器子命令</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">服务器管理</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">服务器端通过HTTP实现Git</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">服务器端语法在&amp;ldquo; blob&amp;rdquo;视图中突出显示支持。它要求 &lt;code&gt;$highlight_bin&lt;/code&gt; 程序可用（请参见上面&amp;ldquo;配置变量&amp;rdquo;部分中的此变量说明），因此默认情况下处于禁用状态。</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">验证&amp;lt;oldvalue&amp;gt;后，将&amp;lt;ref&amp;gt;设置为&amp;lt;newvalue&amp;gt;（如果有）。指定零&amp;lt;newvalue&amp;gt;以确保引用在更新后不存在，和/或零&amp;lt;oldvalue&amp;gt;以确保引用在更新前不存在。</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">将 &lt;code&gt;$maxload&lt;/code&gt; 设置为未定义的值（ &lt;code&gt;undef&lt;/code&gt; ）以关闭此功能。默认值为300。</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">设置 &lt;code&gt;C'&lt;/code&gt; 到 &lt;code&gt;C&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">除非已经设置，否则将 &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; 环境设置为给定的字符串（通常是程序的名称）。每当脚本运行用于更新引用的 &lt;code&gt;git&lt;/code&gt; 命令时，都会使用该字符串的值创建引用日志条目，以保留更新该引用的命令的记录。</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">在新创建的存储库中设置配置变量；这将在初始化存储库之后，但在获取远程历史记录或签出任何文件之前立即生效。密钥的格式与&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;期望的格式相同（例如， &lt;code&gt;core.eol=true&lt;/code&gt; ）。如果为同一个键指定了多个值，则每个值都将写入配置文件。例如，这可以确保向原始远程服务器添加其他提取refspec。</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">设置一个自定义目录来存储生成的文件,而不是当前的工作目录。所有目录组件都将被创建。</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">使用克隆/获取/推送命令设置协议 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 使用的策略。有关可用策略，请参见上面的 &lt;code&gt;protocol.allow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">设置一个要使用的替代 CVSROOT。这与 CVS -d 参数相对应。通常用户不希望设置这个参数,除非以非对称方式使用 CVS。</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">设置 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量。参见&lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;noMetadata&lt;/code&gt; 选项。不建议使用此选项，请在使用此选项之前阅读此联机帮助页的 &lt;code&gt;svn.noMetadata&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;rewriteRoot&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;rewriteUUID&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;useSvmProps&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;useSvnsyncProps&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">设置Git命名空间。有关更多详细信息，请参见&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;。等效于设置 &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">设置Git命名空间；有关详细信息，请参见&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;。该 &lt;code&gt;--namespace&lt;/code&gt; 命令行选项还设置这个值。</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">设置合并提交时使用的提交信息(如果创建了合并提交)。</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">将创建/删除成本软糖系数设置为 &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; 。默认值为60。如果 &lt;code&gt;git range-diff&lt;/code&gt; 错误地将较大的更改视为总重写（删除一个提交并添加另一个提交），则尝试较大的值，反之则尝试较小的值。请参阅下面的``算法''部分以获取为什么需要这样做的解释。</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">设置 &lt;code&gt;log&lt;/code&gt; 命令的默认日期时间模式。为log.date设置值类似于使用 &lt;code&gt;git log&lt;/code&gt; 的 &lt;code&gt;--date&lt;/code&gt; 选项。有关详细信息，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">设置默认的匹配行为。使用的价值 &lt;code&gt;basic&lt;/code&gt; ， &lt;code&gt;extended&lt;/code&gt; ， &lt;code&gt;fixed&lt;/code&gt; ，或 &lt;code&gt;perl&lt;/code&gt; 将使 &lt;code&gt;--basic-regexp&lt;/code&gt; ， &lt;code&gt;--extended-regexp&lt;/code&gt; ， &lt;code&gt;--fixed-strings&lt;/code&gt; ，或 &lt;code&gt;--perl-regexp&lt;/code&gt; 选项因此，当值 &lt;code&gt;default&lt;/code&gt; 将返回默认匹配行为。</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">设置更新文件的执行权限。</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">设置对象名称的缩写长度。如果未指定或设置为 &quot;auto&quot;,则会根据版本库中打包对象的大致数量计算出一个适当的值,希望这个值足以让缩写的对象名称在一段时间内保持唯一性。最小长度为4。</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">设置用于对HTTP代理进行身份验证的方法。仅当配置的代理字符串包含用户名部分（即形式为 &lt;code&gt;user@host&lt;/code&gt; 或 &lt;code&gt;user@host:port&lt;/code&gt; ）时，此选项才生效。可以逐个远程覆盖它；请参见 &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; 。两者都可以被 &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; 环境变量覆盖。可能的值为：</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">设置由 --preserve-empty-dirs 创建的占位符文件的名称。默认:&quot;.gitignore&quot;</target>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">设置存储库的路径。也可以通过设置 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量来控制。它可以是当前工作目录的绝对路径或相对路径。</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">将路径设置为工作树的根。如果设置了 &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; 环境变量，则core.worktree将被忽略并且不用于确定工作树的根。可以通过 &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; 环境变量和 &lt;code&gt;--work-tree&lt;/code&gt; 命令行选项来覆盖它。该值可以是绝对路径，也可以是相对于.git目录路径的绝对路径，该路径可以由--git-dir或GIT_DIR指定，也可以自动发现。如果指定了--git-dir或GIT_DIR，但未指定--work-tree，GIT_WORK_TREE和core.worktree，则当前工作目录将被视为工作树的顶层。</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">将路径设置为工作树的根。这也可以通过 &lt;code&gt;--work-tree&lt;/code&gt; 命令行选项和core.worktree配置变量来控制。</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">设置工作树的路径。它可以是绝对路径，也可以是相对于当前工作目录的路径。这也可以通过设置GIT_WORK_TREE环境变量和core.worktree配置变量来控制（有关更详细的讨论，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;中的core.worktree ）。</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将创建新提交的起点设置为&amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;的合并基础。运行 &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; 与运行 &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; 等效。</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">将此选项设置为 &lt;code&gt;false&lt;/code&gt; 可禁用默认的试探法，该试探法可改变diff块边界以使补丁更易于阅读。</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">将此选项设置为true可使差异驱动程序缓存文本转换输出。有关详细信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">将此选项设置为true可使diff驱动程序将文件视为二进制文件。有关详细信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">如果要同时禁用 &lt;code&gt;pushNonFFCurrent&lt;/code&gt; ， &lt;code&gt;pushNonFFMatching&lt;/code&gt; ， &lt;code&gt;pushAlreadyExists&lt;/code&gt; ， &lt;code&gt;pushFetchFirst&lt;/code&gt; 和 &lt;code&gt;pushNeedsForce&lt;/code&gt; ，请将此变量设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">设置为0可以防止获取/推送/克隆所使用的配置为 &lt;code&gt;user&lt;/code&gt; 状态的协议。这对于限制不受信任的存储库中的递归子模块初始化或对于将可能不受信任的URL馈送到git命令的程序很有用。有关更多详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">如果希望默认情况下忽略空白 &lt;code&gt;change&lt;/code&gt; ，请设置为change。设置为以下之一：如果您希望空格的变化很大，则为false。</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 可以使用&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;的旧shell脚本实现。默认情况下为 &lt;code&gt;true&lt;/code&gt; ，这意味着使用C中的内置重写。</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">设置为一个值</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">设置为false可在&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;和&lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt;命令中启用 &lt;code&gt;--no-show-forced-updates&lt;/code&gt; 。默认为true。</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">设置为需要调用的服务助手的长名称（git-upload-pack等）</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">设置为需要调用的服务助手的长名称（upload-pack等）。</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">设置为字符串值 &quot;自动&quot;。</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">设置为字符串值 &quot;crlf&quot;</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">设置为字符串值 &quot;lf&quot;</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">设置为true以默认在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;启用--branch 。选项--no-branch优先于此变量。</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">设置为true以默认在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;启用--short 。选项--no-short优先于此变量。</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">对于非瓷器状态格式，在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;设置为true以启用 &lt;code&gt;--ahead-behind&lt;/code&gt; ，默认为false启用 &lt;code&gt;--no-ahead-behind&lt;/code&gt; 。默认为true。</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">设置为true可以在每个从远程下载包文件的 &lt;code&gt;git fetch&lt;/code&gt; 命令之后写入提交图。使用 &lt;code&gt;--split&lt;/code&gt; 选项，大多数执行将在现有提交图文件之上创建一个非常小的提交图文件。有时，这些文件将合并，并且写入可能需要更长的时间。拥有更新的提交图文件有助于许多Git命令的性能，包括 &lt;code&gt;git merge-base&lt;/code&gt; ， &lt;code&gt;git push -f&lt;/code&gt; 和 &lt;code&gt;git log --graph&lt;/code&gt; 。除非 &lt;code&gt;feature.experimental&lt;/code&gt; 为true ，否则默认为false 。</target>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">设置&amp;lt;分支名称&amp;gt;的跟踪信息，以便将&amp;lt;上游&amp;gt;视为&amp;lt;分支名称&amp;gt;的上游分支。如果未指定&amp;lt;branchname&amp;gt;，则默认为当前分支。</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">设置源存储库的镜像。这意味着 &lt;code&gt;--bare&lt;/code&gt; 。与 &lt;code&gt;--bare&lt;/code&gt; 相比，-- &lt;code&gt;--mirror&lt;/code&gt; 不仅将源的本地分支映射到目标的本地分支，还映射所有引用（包括远程跟踪分支，注释等），并设置一个refspec配置，以便所有这些引用被目标存储库中的 &lt;code&gt;git remote update&lt;/code&gt; 覆盖。</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">设置用于合并到分支&amp;lt;名称&amp;gt;的默认选项。语法和受支持的选项与&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]相同&lt;/a&gt;，但是当前不支持包含空格字符的选项值。</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">设置用于合并到分支&amp;lt;名称&amp;gt;的默认选项。语法和支持的选项与 &lt;code&gt;git merge&lt;/code&gt; 相同，但是当前不支持包含空格字符的选项值。</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">设置全系统通用配置文件的位置。</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">设置后备系统范围配置文件的位置。如果每个实例的配置文件不存在,则该文件只被读取。</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">设置每个实例配置文件的位置。</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">设置或删除命名远程对象的默认分支（即symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; 的目标）。不需要远程的默认分支，但可以指定远程的名称来代替特定的分支。例如，如果默认分支 &lt;code&gt;origin&lt;/code&gt; 设置为 &lt;code&gt;master&lt;/code&gt; ，则 &lt;code&gt;origin&lt;/code&gt; 可以指定任何你通常会指定 &lt;code&gt;origin/master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">为下一次连接设置服务路径(--upload-pack、--receive-pack等)。远程助手可以支持这个选项,但不能依赖在连接请求发生前设置这个选项。</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">将作为第一个参数的Subversion属性,设置为作为第三个参数的文件的第二个参数的值。</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">将指定子模块的URL设置为&amp;lt;newurl&amp;gt;。然后，它将自动同步子模块的新远程URL配置。</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">设置是否在发送前进行确认的默认值。必须是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; ， &lt;code&gt;cc&lt;/code&gt; ， &lt;code&gt;compose&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。有关这些值的含义，请参见上一节中的 &lt;code&gt;--confirm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">设置子模块的默认远程跟踪分支。该 &lt;code&gt;--branch&lt;/code&gt; 选项允许指定的远程分支。所述 &lt;code&gt;--default&lt;/code&gt; 选项删除子模块。&amp;lt;名称&amp;gt; .branch配置密钥，这将导致跟踪分支到默认到 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">设置--ignore-submodules的默认值。请注意，这仅影响 &lt;code&gt;git diff&lt;/code&gt; Porcelain，而不影响较低级别的 &lt;code&gt;diff&lt;/code&gt; 命令，例如 &lt;code&gt;git diff-files&lt;/code&gt; 。报告未提交的更改时， &lt;code&gt;git checkout&lt;/code&gt; 和 &lt;code&gt;git switch&lt;/code&gt; 也将接受此设置。将其设置为 &lt;code&gt;all&lt;/code&gt; 会禁用通常在设置 &lt;code&gt;status.submoduleSummary&lt;/code&gt; 时由 &lt;code&gt;git commit&lt;/code&gt; 和 &lt;code&gt;git status&lt;/code&gt; 显示的子模块摘要，除非使用--ignore-submodules命令行选项将其覆盖。在 &lt;code&gt;git submodule&lt;/code&gt; 的命令不受此设置。</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">设置 git refspec,用来比较搁置的 P4 变更列表。默认为 p4/master。</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">设置行尾类型以在工作目录中用于标记为文本的文件（通过设置 &lt;code&gt;text&lt;/code&gt; 属性，或者通过设置 &lt;code&gt;text=auto&lt;/code&gt; 和Git自动将内容检测为文本）。可以选择 &lt;code&gt;lf&lt;/code&gt; ， &lt;code&gt;crlf&lt;/code&gt; 和 &lt;code&gt;native&lt;/code&gt; ，它们使用平台的本机行结尾。默认值为 &lt;code&gt;native&lt;/code&gt; 。有关行尾转换的更多信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。请注意，如果 &lt;code&gt;core.autocrlf&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;input&lt;/code&gt; ,则将忽略此值。</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">将传输帮助器选项&amp;lt;名称&amp;gt;设置为&amp;lt;值&amp;gt;。输出一行，其中包含 &lt;code&gt;ok&lt;/code&gt; （成功设置选项）， &lt;code&gt;unsupported&lt;/code&gt; （无法识别选项）或 &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; （支持选项&amp;lt;name&amp;gt;，但&amp;lt;value&amp;gt;无效）之一。应该在其他命令之前设置选项，并且可能会影响这些命令的行为。</target>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">设置 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 将由&lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt;接收，但改为接受此类数据集的 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; ，或者克隆或获取设置为 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">设置未知的 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 值将导致fsck死亡，但是对 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 和 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 进行相同操作只会导致git警告。</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">设置 &quot;二进制 &quot;属性也会像上面一样取消设置 &quot;text &quot;和 &quot;diff &quot;属性。请注意,宏属性只能是 &quot;设置&quot;,尽管设置一个属性可能会产生设置或取消设置其他属性的效果,甚至将其他属性返回到 &quot;未指定 &quot;状态。</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">将 &lt;code&gt;mergetool.keepBackup&lt;/code&gt; 配置变量设置为 &lt;code&gt;false&lt;/code&gt; 会导致 &lt;code&gt;git mergetool&lt;/code&gt; 在成功合并文件时自动删除备份。</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">在路径上设置 &lt;code&gt;text&lt;/code&gt; 属性可启用行尾规范化并将路径标记为文本文件。行尾转换不会猜测内容类型。</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">设置环境变量 &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; 将告诉gitweb使用命名文件（即在本示例中为 &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ）作为gitweb的配置。在上面的示例中，您实际上并不需要它；仅当您的配置文件与内置文件（在编译gitweb时） &lt;code&gt;gitweb_config.perl&lt;/code&gt; 或 &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; 不在同一位置时，才需要使用该文件。有关详细信息，请参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;，尤其是有关优先级规则的信息。</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">设置为0不仅会禁用基于松散对象数量的自动打包，还会禁用其他启发式 &lt;code&gt;git gc --auto&lt;/code&gt; 来确定是否有工作要做，例如 &lt;code&gt;gc.autoPackLimit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">将此值设置为&amp;lt;vcs&amp;gt;将使Git使用git-remote- &amp;lt;vcs&amp;gt;帮助程序与远程交互。</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">将此值设置为--no-tags时，从远程&amp;lt;name&amp;gt;进行获取时将禁用自动标记跟随。将其设置为--tags将从远程&amp;lt;name&amp;gt;获取每个标签，即使无法从远程分支头访问它们也是如此。将这些标志直接传递到&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;可以覆盖此设置。请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]的&lt;/a&gt; --tags和--no-tags选项。</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">将此变量设置为&amp;ldquo; true&amp;rdquo;与在所有文件上将 &lt;code&gt;text&lt;/code&gt; 属性设置为&amp;ldquo; auto&amp;rdquo;以及将core.eol设置为&amp;ldquo; crlf&amp;rdquo;相同。如果要在工作目录中包含 &lt;code&gt;CRLF&lt;/code&gt; 行尾，并且存储库中包含LF行尾，请设置为true 。可以将此变量设置为 &lt;code&gt;input&lt;/code&gt; ，在这种情况下，不执行输出转换。</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将导致Git将所有路径规范视为不区分大小写。</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将使Git将所有路径规范视为glob模式（也称为&amp;ldquo; glob&amp;rdquo;魔术）。</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将使Git将所有路径规范视为文字（也称为&amp;ldquo;文字&amp;rdquo;魔术）。</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将导致Git从字面上对待所有路径规范，而不是将其视为全局模式。例如，运行 &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; 将搜索触及路径 &lt;code&gt;*.c&lt;/code&gt; 的提交，而不搜索与glob &lt;code&gt;*.c&lt;/code&gt; 匹配的任何路径。如果您要向Git提供文字路径（例如，以前由 &lt;code&gt;git ls-tree&lt;/code&gt; ，-- &lt;code&gt;--raw&lt;/code&gt; diff输出等提供给您的路径），则可能需要这样做。</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">建立一个公共存储库</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">设置共享存储库</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">设置和配置</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">共享和更新项目</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">与他人分享发展</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">分享您的变化</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">项目（存储库）项目的单行简短描述（在项目列表页面中缩短为 &lt;code&gt;$projects_list_description_width&lt;/code&gt; ，默认为25个字符；请参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;）。纯文本文件；HTML将被转义。默认设置为</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">短格式</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">简称 &lt;code&gt;--log-destination=syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--copy --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--delete --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--move --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">经常使用的远程存储库的快捷方式版本。</target>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">显示文件的&amp;lt;eolinfo&amp;gt;和&amp;lt;eolattr&amp;gt;。&amp;lt;eolinfo&amp;gt;是当&amp;ldquo;文本&amp;rdquo;属性为&amp;ldquo;自动&amp;rdquo;（或未设置且core.autocrlf不为false）时Git使用的文件内容标识。&amp;lt;eolinfo&amp;gt;是&amp;ldquo; -text&amp;rdquo;，&amp;ldquo; none&amp;rdquo;，&amp;ldquo; lf&amp;rdquo;，&amp;ldquo; crlf&amp;rdquo;，&amp;ldquo; mixed&amp;rdquo;或&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;首行和尾随行，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;首行，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;行尾，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">显示 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 如果已定义），否则显示 &lt;code&gt;$GIT_DIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">如果定义，则显示 &lt;code&gt;$GIT_DIR&lt;/code&gt; 。否则，显示.git目录的路径。相对时，显示的路径是相对于当前工作目录的。</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">显示一个Git逻辑变量</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">显示浏览器，了解 &lt;code&gt;maint&lt;/code&gt; 分支的树。在浏览器中选择的文件可以使用内置的责备查看器进行查看。</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">在实际运行该工具之前,显示一个确认对话框。</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">在合并结束时显示一个diffstat。diffstat也由配置选项merge.stat控制。</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">显示自上次 rebase 以来上游变化的 diffstat。diffstat 也由配置选项 rebase.stat 控制。</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">显示单词diff，使用&amp;lt;mode&amp;gt;分隔更改的单词。默认情况下，单词用空格分隔；请参阅下面的 &lt;code&gt;--word-diff-regex&lt;/code&gt; 。&amp;lt;mode&amp;gt;默认为 &lt;code&gt;plain&lt;/code&gt; ，并且必须是以下之一：</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">显示所有可用的格式。</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">分别显示所有分支，标签或远程跟踪分支（即分别在 &lt;code&gt;refs/heads&lt;/code&gt; ， &lt;code&gt;refs/tags&lt;/code&gt; 或 &lt;code&gt;refs/remotes&lt;/code&gt; 中找到的refs）。</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">显示自 &lt;code&gt;v2.6.12&lt;/code&gt; 版本以来的所有提交，该提交更改了 &lt;code&gt;include/scsi&lt;/code&gt; 或 &lt;code&gt;drivers/scsi&lt;/code&gt; 子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">显示所有参考文献(分支、标签等)。</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">显示在 &lt;code&gt;refs/&lt;/code&gt; 找到的所有裁判。</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">显示所有与shell glob pattern &lt;code&gt;pattern&lt;/code&gt; 匹配的裁判。如果该模式不是以 &lt;code&gt;refs/&lt;/code&gt; 开头，则会自动添加该前缀。如果模式不包含通配符（ &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;[&lt;/code&gt; ），则通过添加 &lt;code&gt;/*&lt;/code&gt; 将其转换为前缀匹配。</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">将补丁版本从 &lt;code&gt;v2.6.12&lt;/code&gt; 开始显示为补丁，其中更改了include / scsi或drivers / scsi子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">显示最多100个对文件 &lt;code&gt;Makefile&lt;/code&gt; 的更改。不仅要在当前分支中查找更改，还要在所有分支中查找。</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">对边界提交显示空白的SHA-1。也可以通过 &lt;code&gt;blame.blankboundary&lt;/code&gt; 配置选项进行控制。</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">在&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]中&lt;/a&gt;显示边界提交的空白提交对象名称。此选项默认为false。</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">同时显示远程跟踪分支和本地分支。</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">显示分支和它们的提交</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">展示交互式git-clean的简要用法。</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">在输出中显示缓存文件(默认)</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">显示联系人的规范名称和电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">显示提交、提交和工作树之间的变化等。</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">显示工作树与索引或树之间的变化,索引与树之间的变化,两棵树之间的变化,两个blob对象之间的变化,或磁盘上两个文件之间的变化。</target>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">使用常见的差异工具显示变化</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">显示彩色差异。 &lt;code&gt;--color&lt;/code&gt; （即不带有 &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ）与 &lt;code&gt;--color=always&lt;/code&gt; 相同。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">显示彩色差异。 &lt;code&gt;--color&lt;/code&gt; （即不带有 &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ）与 &lt;code&gt;--color=always&lt;/code&gt; 相同。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。可以通过 &lt;code&gt;color.ui&lt;/code&gt; 和 &lt;code&gt;color.diff&lt;/code&gt; 配置设置进行更改。</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">显示彩色匹配。该值必须是始终(默认)、从不或自动。</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">显示提交日志</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">显示给定提交（默认为HEAD）和工作树/索引之间的提交摘要。对于有问题的子模块，显示了子模块中给定超级项目提交与索引或工作树（由 &lt;code&gt;--cached&lt;/code&gt; 切换）之间的一系列提交。如果给出了 &lt;code&gt;--files&lt;/code&gt; 选项，则显示子模块在超级项目的索引和子模块的工作树之间的提交系列（此选项不允许使用 &lt;code&gt;--cached&lt;/code&gt; 选项或提供显式的承诺）。</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">显示比特定日期更近的提交。</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">显示超过特定日期的提交。</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">以 &quot;diff3 &quot;风格显示冲突。</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">在输出中显示已删除的文件</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">在&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt;的输出中，在&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]中&lt;/a&gt;写入提交消息时显示的模板中以及在&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;所示的帮助消息中显示有关如何从当前状态继续的指示或&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;切换分支时。</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">显示名称以给定前缀开头的每个对象。&amp;lt;prefix&amp;gt;的长度必须至少为4个十六进制数字，以避免错误地列出存储库中的每个对象。</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">显示文件系统中由于文件/目录冲突而需要删除的文件,以便Checkout-index成功。</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">显示与任何模式都不匹配的给定路径。仅在启用 &lt;code&gt;--verbose&lt;/code&gt; 时才有意义，否则将无法区分与模式匹配的路径与不匹配模式的路径。</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">显示帮助信息。</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">也显示被忽略的文件。</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">以机器消费设计的格式显示。</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">显示索引和工作树中的文件信息。</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">只显示提交到p4的内容,不要改变Git或p4的状态。</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">显示每次提交的差异日志</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">显示长转速(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">在输出中显示修改过的文件</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">在显示其所有子代之前,不显示父代,避免在多行历史交错的情况下显示提交。</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">在显示所有子代之前不显示父代,否则按作者时间戳顺序显示提交。</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">在显示所有子代之前不显示父代,否则按提交时间戳顺序显示提交。</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">显示对象大小的blob(文件)条目。</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">仅显示指定修订范围内的提交。如果未指定&amp;lt;版本范围&amp;gt;，则默认为 &lt;code&gt;HEAD&lt;/code&gt; （即导致当前提交的整个历史记录）。 &lt;code&gt;origin..HEAD&lt;/code&gt; 指定从当前提交（即 &lt;code&gt;HEAD&lt;/code&gt; ）可以到达的所有提交，但不能从 &lt;code&gt;origin&lt;/code&gt; 到达。有关拼写&amp;lt;revision range&amp;gt;的方法的完整列表，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]的&lt;/a&gt; &amp;ldquo; Specification Ranges&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">仅显示指定修订范围内的提交。如果未指定&amp;lt;版本范围&amp;gt;，则默认为 &lt;code&gt;HEAD&lt;/code&gt; （即导致当前提交的整个历史记录）。 &lt;code&gt;origin..HEAD&lt;/code&gt; 指定当前提交（即 &lt;code&gt;HEAD&lt;/code&gt; ）可到达的所有提交，但不是 &lt;code&gt;origin&lt;/code&gt; 可以访问的所有提交。有关拼写&amp;lt;版本范围&amp;gt;的方法的完整列表，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt;的&amp;ldquo; &lt;code&gt;Specifying Ranges&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">仅显示足以说明与指定路径匹配的文件的提交。有关详细信息和其他简化模式，请参见下面的 &lt;code&gt;History Simplification&lt;/code&gt; 简化。</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">仅显示至少（或最多）许多父提交的提交。特别地， &lt;code&gt;--max-parents=1&lt;/code&gt; 是一样的 &lt;code&gt;--no-merges&lt;/code&gt; ， &lt;code&gt;--min-parents=2&lt;/code&gt; 是一样的 &lt;code&gt;--merges&lt;/code&gt; 。 &lt;code&gt;--max-parents=0&lt;/code&gt; 给出所有的根提交，-- &lt;code&gt;--min-parents=3&lt;/code&gt; 所有的章鱼合并。</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">在输出中仅显示忽略的文件。在索引中显示文件时，仅打印与排除模式匹配的文件。显示&amp;ldquo;其他&amp;rdquo;文件时，仅显示与排除模式匹配的文件。标准忽略规则不会自动激活，因此至少需要 &lt;code&gt;--exclude*&lt;/code&gt; 选项之一。</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">只显示修改、重命名、复制,不显示增加或删除。</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">仅显示更改文件的名称和状态。有关状态字母的含义，请参见 &lt;code&gt;--diff-filter&lt;/code&gt; 选项的描述。</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">只显示名称和变化的性质,但不显示实际的差异输出。</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">只显示更改后的文件名。</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">只显示命名的树条目本身,不显示其子条目。</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">在 &lt;code&gt;revPrompt&lt;/code&gt; 子对话框中仅显示未合并的分支。这对于类似于合并或变基的工具很有用，但对于诸如检出或重置之类的工具则无济于事。</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">在输出中显示其他(即未跟踪的)文件。</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">显示打包的档案索引</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">考虑对象时，在stderr上显示进度报告。所述 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 文本将被打印与每个进度更新。</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">在生成补丁时在stderr上显示进度报告。</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">显示进度。</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">显示原始时间戳(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">显示递归差异。</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">显示与一种或多种模式匹配的参考。模式从全名的末尾开始进行匹配，并且仅匹配完整的部分，例如， &lt;code&gt;master&lt;/code&gt; 匹配项 &lt;code&gt;refs/heads/master&lt;/code&gt; ， &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; ， &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; 而不是 &lt;code&gt;refs/heads/mymaster&lt;/code&gt; 或 &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">仅在此文件存在（在存储库中）时显示存储库。仅当此变量的值为true时才有效。可以在构建gitweb时通过设置 &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; 进行设置。此路径相对于 &lt;code&gt;GIT_DIR&lt;/code&gt; 。git-daemon [1]使用 &lt;code&gt;git-daemon-export-ok&lt;/code&gt; ，除非以 &lt;code&gt;--export-all&lt;/code&gt; 开头。默认情况下，未设置此变量，这意味着此功能已关闭。</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">在输出中显示阶段性内容的模式位、对象名称和阶段编号。</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">显示HEAD参考,即使通常会被过滤掉。</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">显示将当前存储库用作其子模块的超级项目工作树（如果存在）的根的绝对路径。如果当前存储库未被任何项目用作子模块，则不输出任何内容。</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">显示工作树的顶层目录的绝对路径。如果没有工作树,报告错误。</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">显示作者电子邮件而不是作者姓名（默认：关闭）。也可以通过 &lt;code&gt;blame.showEmail&lt;/code&gt; 配置选项进行控制。</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">在&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]中&lt;/a&gt;显示作者电子邮件而不是作者姓名。此选项默认为false。</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">即使是短格式,也能显示分支和跟踪信息。</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">显示最近两周对文件 &lt;code&gt;gitk&lt;/code&gt; 的更改。为了避免与名为 &lt;code&gt;gitk&lt;/code&gt; 的&lt;strong&gt;分支&lt;/strong&gt;混淆，必须使用&amp;ldquo;-&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">显示最近两周对文件 &lt;code&gt;gitk&lt;/code&gt; 的更改。的 &lt;code&gt;--&lt;/code&gt; 是必要的，以避免混乱&lt;strong&gt;分支&lt;/strong&gt;命名 &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">显示存储项中记录的更改，以作为存储项与首次创建存储项时的提交之间的差异。如果没有给出 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; ，它将显示最新的。默认情况下，该命令显示diffstat，但是它将接受 &lt;code&gt;git diff&lt;/code&gt; 已知的任何格式（例如， &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; 以补丁程序形式查看第二最新的条目）。您可以使用stash.showStat和/或stash.showPatch配置变量来更改默认行为。</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">显示自 &lt;code&gt;v2.6.12&lt;/code&gt; 版本以来的更改，该更改更改了include / scsi或drivers / scsi子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">即使 diff 本身是空的,也要显示提交本身和提交日志信息。</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">在SHA1s旁边显示提交对象。</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">显示在 &quot;测试 &quot;分支中但尚未进入 &quot;发布 &quot;分支的提交,以及每个提交修改的路径列表。</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">显示由当前工作树中为给定的&amp;lt;path&amp;gt;配置的过滤器转换的内容（即污迹过滤器，行尾转换等）。在这种情况下，&amp;lt;object&amp;gt;的格式必须为&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;或：&amp;lt;path&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">显示由textconv过滤器转换的内容。在这种情况下，&amp;lt;object&amp;gt;必须采用&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;或：&amp;lt;path&amp;gt;的形式，以便将过滤器应用于&amp;lt;path&amp;gt;索引中记录的内容。</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">在版本 &lt;code&gt;v0.99.8&lt;/code&gt; 中显示 &lt;code&gt;Makefile&lt;/code&gt; 的内容，并为每行提供注释。与以上示例不同，该文件是从对象数据库而不是工作目录中读取的。</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">在当前工作目录中显示文件 &lt;code&gt;Makefile&lt;/code&gt; 的内容，并为每行的原始作者以及将行移动到当前位置的人提供注释。未提交的文件带有注释，未提交的更改（如果有）明确地归因于 &lt;code&gt;Not Yet Committed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">显示diff块之间的上下文，直到指定的行数，从而融合彼此靠近的块。默认为 &lt;code&gt;diff.interHunkContext&lt;/code&gt; 或0（如果未设置config选项）。</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">显示diff块之间的上下文，直到指定的行数为止，从而融合彼此靠近的块。此值用作 &lt;code&gt;--inter-hunk-context&lt;/code&gt; 命令行选项的默认值。</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">在交互式变基中或由于冲突而停止变基时显示当前补丁。这等效于 &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">显示每个作者的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">显示 &quot;git am &quot;因为冲突而停止的全部邮件信息。</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">将文件名显示在该文件的匹配之上,而不是显示在每一行的开头。</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">显示原始提交中的文件名,默认情况下,如果有任何一行来自不同名称的文件,会显示文件名。默认情况下,如果有任何一行来自不同名称的文件,则会显示文件名。</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">显示完整的40字节十六进制提交对象名称。这会否定 &lt;code&gt;--abbrev-commit&lt;/code&gt; 和暗示它的那些选项，例如&amp;ldquo; --oneline&amp;rdquo;。它还将覆盖 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">显示给定的目的地前缀,而不是 &quot;b/&quot;。</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">显示给定的源前缀,而不是 &quot;a/&quot;。</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">显示原始提交中的行号(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">在显示提交日志消息时，显示注释提交的注释（请参阅&lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt;）。这是默认的 &lt;code&gt;git log&lt;/code&gt; ， &lt;code&gt;git show&lt;/code&gt; 和 &lt;code&gt;git whatchanged&lt;/code&gt; 命令时没有 &lt;code&gt;--pretty&lt;/code&gt; ， &lt;code&gt;--format&lt;/code&gt; 或 &lt;code&gt;--oneline&lt;/code&gt; 在命令行上给出的选项。</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">显示给定对象的注释(默认为HEAD)。</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">显示当前藏匿的作品数量。</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">显示用于存储库的对象格式（哈希算法），以将其存储在 &lt;code&gt;.git&lt;/code&gt; 目录，输入或输出中。对于输入，可以打印多个算法，以空格分隔。如果未指定，则默认值为&amp;ldquo;存储&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">在分割索引模式下显示共享索引文件的路径,如果不是分割索引模式,则显示为空。</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">显示 porcelain 格式,但输出每行的提交信息,而不仅仅是第一次引用提交时的信息。意味着--porcelain。</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">显示前一行包含匹​​配的函数名称，除非匹配的行本身是函数名称。名称的确定方法与 &lt;code&gt;git diff&lt;/code&gt; 计算补丁 &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 方式相同（请参阅在&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]中&lt;/a&gt;定义自定义块头）。</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">显示检查文件的进度。</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">显示远程跟踪分支。</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">以专为机器消耗而设计的格式递增显示结果。</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">显示子模块的状态。这将为每个子模块打印当前已检出提交的SHA-1，以及子模块路径和SHA-1 的 &lt;code&gt;git describe&lt;/code&gt; 输出。如果未初始化子模块，则每个SHA-1都可能带有 &lt;code&gt;-&lt;/code&gt; 前缀；如果当前签出的子模块提交与包含的存储库的索引中找到的SHA-1不匹配，则 &lt;code&gt;+&lt;/code&gt; ;如果子模块具有合并冲突，则前缀 &lt;code&gt;U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">显示从包含函数名的前一行到下一个函数名之前的周围文本,有效地显示找到匹配的整个函数。</target>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">在diff输出中显示树对象。这意味着 &lt;code&gt;-r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">显示整个提交历史,但跳过任何合并。</target>
        </trans-unit>
        <trans-unit id="41ba3127797e7497aaa54b06768281c0f54c0178" translate="yes" xml:space="preserve">
          <source>Show the working tree status</source>
          <target state="translated">显示工作树状态</target>
        </trans-unit>
        <trans-unit id="4be15cef7828db991e29f252f2096ac52eaa87a1" translate="yes" xml:space="preserve">
          <source>Show three-way merge without touching index</source>
          <target state="translated">在不触及索引的情况下显示三方合并</target>
        </trans-unit>
        <trans-unit id="c011e03eeb56d943a760cc013e6f2e4eb1d425c0" translate="yes" xml:space="preserve">
          <source>Show tree entries even when going to recurse them. Has no effect if &lt;code&gt;-r&lt;/code&gt; was not passed. &lt;code&gt;-d&lt;/code&gt; implies &lt;code&gt;-t&lt;/code&gt;.</source>
          <target state="translated">即使要递归也显示树条目。如果未通过 &lt;code&gt;-r&lt;/code&gt; ,则无效。 &lt;code&gt;-d&lt;/code&gt; 表示 &lt;code&gt;-t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebf2c3da3729666fcca774c5c0088e26b46bc94" translate="yes" xml:space="preserve">
          <source>Show unified diff between the HEAD commit and what would be committed at the bottom of the commit message template to help the user describe the commit by reminding what changes the commit has. Note that this diff output doesn&amp;rsquo;t have its lines prefixed with &lt;code&gt;#&lt;/code&gt;. This diff will not be a part of the commit message. See the &lt;code&gt;commit.verbose&lt;/code&gt; configuration variable in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">在提交消息模板的底部，在HEAD提交和将提交的内容之间显示统一的差异，以帮助用户通过提醒提交进行了哪些更改来描述提交。请注意，此diff输出的行没有以 &lt;code&gt;#&lt;/code&gt; 为前缀。该差异将不会成为提交消息的一部分。参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中&lt;/a&gt;的 &lt;code&gt;commit.verbose&lt;/code&gt; 配置变量。</target>
        </trans-unit>
        <trans-unit id="6ec5cbecb883dc178104f40a9f6290a06e20fc1c" translate="yes" xml:space="preserve">
          <source>Show uniquely abbreviated commit object as fallback.</source>
          <target state="translated">显示唯一简略的提交对象作为后备。</target>
        </trans-unit>
        <trans-unit id="10c7ca24c353332c5b887c6b6a1d6dd7a457b5d5" translate="yes" xml:space="preserve">
          <source>Show unmerged files in the output (forces --stage)</source>
          <target state="translated">在输出中显示未合并的文件(强制 --stage)</target>
        </trans-unit>
        <trans-unit id="b5d593f0c18fdb91296748ca1fac373587b954d6" translate="yes" xml:space="preserve">
          <source>Show untracked files.</source>
          <target state="translated">显示未被跟踪的文件。</target>
        </trans-unit>
        <trans-unit id="26b08d61663ae392b69c5a69245f4edf21293755" translate="yes" xml:space="preserve">
          <source>Show various types of objects</source>
          <target state="translated">显示各种类型的对象</target>
        </trans-unit>
        <trans-unit id="21c5bff92d5285947c85ec0c1484f22db009a919" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file</source>
          <target state="translated">显示文件中每行最后修改的版本和作者。</target>
        </trans-unit>
        <trans-unit id="966d3662ec6148441d1b868ba18110f8156c9e7e" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file. The output of this mode is format-compatible with the output of &amp;lsquo;svn blame&amp;rsquo; by default. Like the SVN blame command, local uncommitted changes in the working tree are ignored; the version of the file in the HEAD revision is annotated. Unknown arguments are passed directly to &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">显示哪个修订和作者最后修改了文件的每一行。默认情况下，此模式的输出与'svn blame'的输出格式兼容。像SVN blame命令一样，工作树中本地未提交的更改将被忽略；注释了HEAD修订版中文件的版本。未知参数直接传递给 &lt;code&gt;git blame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf9833b3864a606f143f671880d0d7c492524c3a" translate="yes" xml:space="preserve">
          <source>Show what would be done and clean files interactively. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">显示将要执行的操作并以交互方式清理文件。有关详细信息，请参见&amp;ldquo;交互模式&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="df9413d989d45b2c0aaf57aba32e9c05293cab52" translate="yes" xml:space="preserve">
          <source>Show what would be done, without making any changes.</source>
          <target state="translated">在不做任何改变的情况下,显示出会怎么做。</target>
        </trans-unit>
        <trans-unit id="be4ca0a0825cd627301347d0b898edf805764f04" translate="yes" xml:space="preserve">
          <source>Show whole surrounding functions of changes.</source>
          <target state="translated">显示整个周围功能的变化。</target>
        </trans-unit>
        <trans-unit id="468ba140a3b94d2f9cd6ef93cfa9cab1327c9537" translate="yes" xml:space="preserve">
          <source>Show words as &lt;code&gt;[-removed-]&lt;/code&gt; and &lt;code&gt;{+added+}&lt;/code&gt;. Makes no attempts to escape the delimiters if they appear in the input, so the output may be ambiguous.</source>
          <target state="translated">将单词显示为 &lt;code&gt;[-removed-]&lt;/code&gt; 和 &lt;code&gt;{+added+}&lt;/code&gt; 。如果分隔符出现在输入中，则不尝试转义分隔符，因此输出可能是不明确的。</target>
        </trans-unit>
        <trans-unit id="853a8e226495d515cddaf8f8812833ecd070bbe7" translate="yes" xml:space="preserve">
          <source>Showing commits unique to a given branch</source>
          <target state="translated">显示特定分支的唯一提交</target>
        </trans-unit>
        <trans-unit id="96ca3a302ef6077a82014da5f00857782e6cb86a" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; gives up trying to guess based on the source and destination refs what remote ref namespace the source belongs in, but where we can still suggest that the user push to either refs/heads/* or refs/tags/* based on the type of the source object.</source>
          <target state="translated">当&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;放弃尝试根据源引用和目标引用进行猜测时显示，但是源仍然可以建议用户将其推送到ref / heads / *或ref / tags / *基于源对象的类型。</target>
        </trans-unit>
        <trans-unit id="75d7e8b680f4e534527cb3c486bef0af3659328c" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that does not qualify for fast-forwarding (e.g., a tag.)</source>
          <target state="translated">当&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;拒绝不符合快进条件的更新（例如，标记）时显示。</target>
        </trans-unit>
        <trans-unit id="3a0a872703503f071b91634941e8be2dc5533cd1" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object that is not a commit-ish, or make the remote ref point at an object that is not a commit-ish.</source>
          <target state="translated">当&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;拒绝尝试覆盖指向非提交对象的远程引用或使远程引用指向非提交对象的更新时显示。</target>
        </trans-unit>
        <trans-unit id="3b4c04c7663321c0bb15512a5590b839a243ed3d" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object we do not have.</source>
          <target state="translated">当&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;拒绝尝试覆盖指向我们没有的对象的远程引用的更新时显示。</target>
        </trans-unit>
        <trans-unit id="78b784f23e7ef12a1020b996b898b9ff902a30e8" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; computes the ahead/behind counts for a local ref compared to its remote tracking ref, and that calculation takes longer than expected. Will not appear if &lt;code&gt;status.aheadBehind&lt;/code&gt; is false or the option &lt;code&gt;--no-ahead-behind&lt;/code&gt; is given.</source>
          <target state="translated">当&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt;计算本地参考的前后计数与远程跟踪参考相比时显示，并且计算所需的时间比预期的长。如果 &lt;code&gt;status.aheadBehind&lt;/code&gt; 为false或给出了 &lt;code&gt;--no-ahead-behind&lt;/code&gt; 选项，则不会出现。</target>
        </trans-unit>
        <trans-unit id="d338c5b596db1d1f3b4bc876559fe0665e8ac5fb" translate="yes" xml:space="preserve">
          <source>Shows &amp;lt;n&amp;gt; most recent ref-log entries for the given ref. If &amp;lt;base&amp;gt; is given, &amp;lt;n&amp;gt; entries going back from that entry. &amp;lt;base&amp;gt; can be specified as count or date. When no explicit &amp;lt;ref&amp;gt; parameter is given, it defaults to the current branch (or &lt;code&gt;HEAD&lt;/code&gt; if it is detached).</source>
          <target state="translated">显示给定参考的&amp;lt;n&amp;gt;个最新参考日志条目。如果给出&amp;lt;base&amp;gt;，则&amp;lt;n&amp;gt;个条目从该条目返回。可以将&amp;lt;base&amp;gt;指定为计数或日期。如果没有给出显式的&amp;lt;ref&amp;gt;参数，则默认为当前分支（如果是分离的，则为 &lt;code&gt;HEAD&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="145d28125d096ddf08f1e26c4d9787f99dd5cc7e" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in any of local branches but not in any of remote-tracking branches for &lt;code&gt;origin&lt;/code&gt; (what you have that origin doesn&amp;rsquo;t).</source>
          <target state="translated">显示在任何本地分支中但不在任何远程跟踪分支中的所有提交的提交（ &lt;code&gt;origin&lt;/code&gt; 您没有）。</target>
        </trans-unit>
        <trans-unit id="c51c52f011be107f5e19468bb7f02daf26af2024" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in local master but not in any remote repository master branches.</source>
          <target state="translated">显示所有在本地主库但不在远程主库分支的提交。</target>
        </trans-unit>
        <trans-unit id="10371d1293071dacd448b9fdd202c3afd277b14e" translate="yes" xml:space="preserve">
          <source>Shows commit logs and diff output each commit introduces.</source>
          <target state="translated">显示每次提交的提交日志和差异输出。</target>
        </trans-unit>
        <trans-unit id="476dac31e594be06f217fa896bee0115d58f6b4c" translate="yes" xml:space="preserve">
          <source>Shows history of the file or directory in a given repository path, starting from given revision (defaults to HEAD, i.e. default branch).</source>
          <target state="translated">显示给定版本库路径中的文件或目录的历史,从给定的版本开始(默认为 HEAD,即默认分支)。</target>
        </trans-unit>
        <trans-unit id="952b827e77460f64206eeaa3be7cd6994665a085" translate="yes" xml:space="preserve">
          <source>Shows how the function &lt;code&gt;main()&lt;/code&gt; in the file &lt;code&gt;main.c&lt;/code&gt; evolved over time.</source>
          <target state="translated">显示文件 &lt;code&gt;main.c&lt;/code&gt; 中的 &lt;code&gt;main()&lt;/code&gt; 函数如何随时间演变。</target>
        </trans-unit>
        <trans-unit id="ce9fdc182e7532561a25c9e84afbf603141702a1" translate="yes" xml:space="preserve">
          <source>Shows information about a file or directory similar to what &amp;lsquo;svn info&amp;rsquo; provides. Does not currently support a -r/--revision argument. Use the --url option to output only the value of the &lt;code&gt;URL:&lt;/code&gt; field.</source>
          <target state="translated">显示有关文件或目录的信息，类似于&amp;ldquo; svn info&amp;rdquo;提供的信息。当前不支持-r /-revision参数。使用--url选项仅输出 &lt;code&gt;URL:&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="ca1b824d0d56099189f69630ad24bacce78fa10f" translate="yes" xml:space="preserve">
          <source>Shows information about a specific commit in a repository. The &lt;code&gt;commit&lt;/code&gt; view shows information about commit in more detail, the &lt;code&gt;commitdiff&lt;/code&gt; action shows changeset for given commit.</source>
          <target state="translated">显示有关存储库中特定提交的信息。所述 &lt;code&gt;commit&lt;/code&gt; 视图显示信息更详细地了解提交， &lt;code&gt;commitdiff&lt;/code&gt; 动作显示变更集对于给定的提交。</target>
        </trans-unit>
        <trans-unit id="ab228fa7c7d65eb09f46d0e73fe8d72b79bc229a" translate="yes" xml:space="preserve">
          <source>Shows log information (commit message or just commit subject) for a given branch (starting from given revision).</source>
          <target state="translated">显示给定分支(从给定修订版开始)的日志信息(提交信息或仅仅是提交主题)。</target>
        </trans-unit>
        <trans-unit id="a3433f3c29ab88ea9167add81dd6a17e06d4de7e" translate="yes" xml:space="preserve">
          <source>Shows one or more objects (blobs, trees, tags and commits).</source>
          <target state="translated">显示一个或多个对象(blobs、树、标签和提交)。</target>
        </trans-unit>
        <trans-unit id="c89f1cda347c61bcda5c7bb78673af53b8dae0ad" translate="yes" xml:space="preserve">
          <source>Shows only commits that are NOT on the first branch given. This helps track topic branches by hiding any commit that is already in the main line of development. When given &quot;git show-branch --topics master topic1 topic2&quot;, this will show the revisions given by &quot;git rev-list ^master topic1 topic2&quot;</source>
          <target state="translated">只显示不在第一个分支上的提交。这有助于通过隐藏已经在主线开发中的提交来追踪主题分支。当给定 &quot;git show-branch --topics master topic1 topic2 &quot;时,将显示 &quot;git rev-list ^master topic1 topic2 &quot;给出的修订版。</target>
        </trans-unit>
        <trans-unit id="ad855617a566df1f282b86f94f82b5d862a150d3" translate="yes" xml:space="preserve">
          <source>Shows the Subversion externals. Use -r/--revision to specify a specific revision.</source>
          <target state="translated">显示 Subversion 外部文件。使用 -r/--revision 来指定一个特定的版本。</target>
        </trans-unit>
        <trans-unit id="71ee8b01832959c514dd0597fe4e33b8eee16c88" translate="yes" xml:space="preserve">
          <source>Shows the blame (also called annotation) information for a file. On a per line basis it shows the revision in which that line was last changed and the user that committed the change. The incremental version (which if configured is used automatically when JavaScript is enabled) uses Ajax to incrementally add blame info to the contents of given file.</source>
          <target state="translated">显示一个文件的责任(也叫注释)信息。在每行的基础上,它显示了该行最后被修改的版本以及提交修改的用户。增量版(如果配置了JavaScript,则会自动使用)使用Ajax向给定文件的内容增量添加责备信息。</target>
        </trans-unit>
        <trans-unit id="048347ade13621e5b8c85cb1ac7da77939e1ffa9" translate="yes" xml:space="preserve">
          <source>Shows the commit ancestry graph starting from the commits named with &amp;lt;rev&amp;gt;s or &amp;lt;glob&amp;gt;s (or all refs under refs/heads and/or refs/tags) semi-visually.</source>
          <target state="translated">半视觉显示以&amp;lt;rev&amp;gt;或&amp;lt;glob&amp;gt; s（或ref / heads和/或refs / tags下的所有refs）命名的提交开始的提交血统图。</target>
        </trans-unit>
        <trans-unit id="d974b70c2c30c4540e25d821a52ee3e8a89faf35" translate="yes" xml:space="preserve">
          <source>Shows the commit logs.</source>
          <target state="translated">显示提交日志。</target>
        </trans-unit>
        <trans-unit id="afa4aeeb0e59c57a072646fb612e51228d9e8ce5" translate="yes" xml:space="preserve">
          <source>Shows the commits that changed &lt;code&gt;builtin/rev-list.c&lt;/code&gt;, including those commits that occurred before the file was given its present name.</source>
          <target state="translated">显示更改了 &lt;code&gt;builtin/rev-list.c&lt;/code&gt; 的提交，包括在为文件提供其当前名称之前发生的那些提交。</target>
        </trans-unit>
        <trans-unit id="0d2116a149d849234c7b09c554d651b4894474fc" translate="yes" xml:space="preserve">
          <source>Shows the contents of the file &lt;code&gt;Documentation/README&lt;/code&gt; as they were current in the 10th last commit of the branch &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">显示文件 &lt;code&gt;Documentation/README&lt;/code&gt; 的内容，因为它们是 &lt;code&gt;next&lt;/code&gt; 的最后第十次提交中的最新内容。</target>
        </trans-unit>
        <trans-unit id="ccc9b587b1ac64f4516513aa59159ddedbb8a45f" translate="yes" xml:space="preserve">
          <source>Shows the difference between two revisions of the same file.</source>
          <target state="translated">显示同一文件的两个版本之间的差异。</target>
        </trans-unit>
        <trans-unit id="8c5916992e873dd9df6491dab9446ed99d2ca43b" translate="yes" xml:space="preserve">
          <source>Shows the files and directories in a given repository path, at given revision. This is default command if no action is specified in the URL, and path is given.</source>
          <target state="translated">显示给定版本的版本库路径中的文件和目录。如果在 URL 中没有指定操作,并且给定了路径,那么这是默认命令。</target>
        </trans-unit>
        <trans-unit id="890a038d1a0efbf86457550ddb0f94462d132854" translate="yes" xml:space="preserve">
          <source>Shows the history including change diffs, but only from the &amp;ldquo;main branch&amp;rdquo; perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.</source>
          <target state="translated">仅从&amp;ldquo;主分支&amp;rdquo;的角度显示包括更改差异的历史记录，跳过来自合并分支的提交，并显示合并引入的更改的完整差异。这仅在停留在单个集成分支上时遵循严格的合并所有主题分支的策略时才有意义。</target>
        </trans-unit>
        <trans-unit id="a6e093f4d97154b146a36fee068be195950aadfd" translate="yes" xml:space="preserve">
          <source>Shows the subject of the commit pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">显示标签 &lt;code&gt;v1.0.0&lt;/code&gt; 指向的提交主题。</target>
        </trans-unit>
        <trans-unit id="9b44c59ff3bc267fd7a4cbc7d7224ea23d69056e" translate="yes" xml:space="preserve">
          <source>Shows the tag &lt;code&gt;v1.0.0&lt;/code&gt;, along with the object the tags points at.</source>
          <target state="translated">显示标签 &lt;code&gt;v1.0.0&lt;/code&gt; 以及标签所指向的对象。</target>
        </trans-unit>
        <trans-unit id="092526538596a5fe7b0994948947cb6672086546" translate="yes" xml:space="preserve">
          <source>Shows the tree pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">显示标签 &lt;code&gt;v1.0.0&lt;/code&gt; 指向的树。</target>
        </trans-unit>
        <trans-unit id="436f07afaaab4f38cb1e7cf08118570b5794b7ea" translate="yes" xml:space="preserve">
          <source>Side note: Unfortunately, people tend to fixate on the written-in-shell aspect and periodically ask if git-filter-branch could be rewritten in another language to fix the performance issues. Not only does that ignore the bigger intrinsic problems with the design, it&amp;rsquo;d help less than you&amp;rsquo;d expect: if git-filter-branch itself were not shell, then the convenience functions (map(), skip_commit(), etc) and the &lt;code&gt;--setup&lt;/code&gt; argument could no longer be executed once at the beginning of the program but would instead need to be prepended to every user filter (and thus re-executed with every commit).</source>
          <target state="translated">旁注：不幸的是，人们倾向于专注于shell编写方面，并定期询问是否可以用另一种语言重写git-filter-branch来解决性能问题。这不仅忽略了设计中更大的内在问题，而且对您的帮助也比您预期的要小：如果git-filter-branch本身不是shell，则便捷函数（map（），skip_commit（）等）并且 &lt;code&gt;--setup&lt;/code&gt; 参数不再可以在程序开始时执行一次，而是需要在每个用户过滤器之前添加（并因此在每次提交时重新执行）。</target>
        </trans-unit>
        <trans-unit id="5a31cdd9cba3408afdcd7a253a0ac442839b0979" translate="yes" xml:space="preserve">
          <source>Side note: it may be possible to do step 2 with about:config and the following settings but no one&amp;rsquo;s tried yet.</source>
          <target state="translated">旁注：可能可以使用about：config和以下设置执行步骤2，但尚未尝试过。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="ff3ca843a6395cdc7d40686539d66fc535a8aaed" translate="yes" xml:space="preserve">
          <source>Signals the end of options; the rest of the parameters are &amp;lt;pathspec&amp;gt; limiters.</source>
          <target state="translated">表示选项结束；其余参数是&amp;lt;pathspec&amp;gt;限制器。</target>
        </trans-unit>
        <trans-unit id="221dd464fe44b38e2417a0ae6570e07534a3d7ea" translate="yes" xml:space="preserve">
          <source>Signing annotated tags during import from within fast-import is not supported. Trying to include your own PGP/GPG signature is not recommended, as the frontend does not (easily) have access to the complete set of bytes which normally goes into such a signature. If signing is required, create lightweight tags from within fast-import with &lt;code&gt;reset&lt;/code&gt;, then create the annotated versions of those tags offline with the standard &lt;code&gt;git tag&lt;/code&gt; process.</source>
          <target state="translated">不支持在快速导入中的导入过程中对带注释的标签进行签名。不建议尝试包含自己的PGP / GPG签名，因为前端无法（轻松地）访问通常用于这种签名的完整字节集。如果需要签名，请使用 &lt;code&gt;reset&lt;/code&gt; 在快速导入中创建轻量级标签，然后使用标准 &lt;code&gt;git tag&lt;/code&gt; 过程离线创建这些标签的带注释的版本。</target>
        </trans-unit>
        <trans-unit id="e73ba37a846fd05171a6c58829f1ab0aa4e069d7" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files from the merge result. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort.</source>
          <target state="translated">从合并结果中静默覆盖被忽略的文件。这是默认行为。使用 &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; 中止。</target>
        </trans-unit>
        <trans-unit id="a7ca941070a3e177fd03230132f7162630714492" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files when switching branches. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort the operation when the new branch contains ignored files.</source>
          <target state="translated">切换分支时静默覆盖被忽略的文件。这是默认行为。当新分支包含忽略的文件时，请使用 &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; 中止该操作。</target>
        </trans-unit>
        <trans-unit id="ffd6334e8fa69c33df5ff56f9d3009483e17a61e" translate="yes" xml:space="preserve">
          <source>Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history.</source>
          <target state="translated">与 --depth 类似,只是指定了从当前浅层边界提交的次数,而不是从每个远程分支历史记录的顶端提交的次数。</target>
        </trans-unit>
        <trans-unit id="16434785e2f2781f48016d9fab6f521e71729a0f" translate="yes" xml:space="preserve">
          <source>Similar to -u. But when re-coding, the charset specified here is used instead of the one specified by i18n.commitencoding or UTF-8.</source>
          <target state="translated">类似于-u。但在重新编码时,这里指定的字符集将代替i18n.commitencoding或UTF-8指定的字符集。</target>
        </trans-unit>
        <trans-unit id="35df8b1f29f7a7b94cf0adfb128190781a631c4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--create&lt;/code&gt; except that if &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; already exists, it will be reset to &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt;. This is a convenient shortcut for:</source>
          <target state="translated">与 &lt;code&gt;--create&lt;/code&gt; 相似，不同之处在于如果 &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; 已经存在，它将被重置为 &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; 。这是方便的快捷方式：</target>
        </trans-unit>
        <trans-unit id="a329dc4873c426988eca07322671d0e252450f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--file&lt;/code&gt; but use the given blob instead of a file. E.g. you can use &lt;code&gt;master:.gitmodules&lt;/code&gt; to read values from the file &lt;code&gt;.gitmodules&lt;/code&gt; in the master branch. See &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for a more complete list of ways to spell blob names.</source>
          <target state="translated">与 &lt;code&gt;--file&lt;/code&gt; 相似，但是使用给定的blob而不是文件。例如，您可以使用 &lt;code&gt;master:.gitmodules&lt;/code&gt; 从master分支中的文件 &lt;code&gt;.gitmodules&lt;/code&gt; 中读取值。有关拼写Blob名称的方法的完整列表，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt;中的&amp;ldquo;指定修订版&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="96ae9e148f9a848728ba835436ff9b06a051bf18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--local&lt;/code&gt; except that &lt;code&gt;.git/config.worktree&lt;/code&gt; is read from or written to if &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is present. If not it&amp;rsquo;s the same as &lt;code&gt;--local&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--local&lt;/code&gt; 相似，不同之处在于，如果存在 &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; ,则可以读取或写入 &lt;code&gt;.git/config.worktree&lt;/code&gt; 。如果不是，则与 &lt;code&gt;--local&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="9921875dc5f741363cc389c12f0a866da77aa3f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects-edge&lt;/code&gt;, but it tries harder to find excluded commits at the cost of increased time. This is used instead of &lt;code&gt;--objects-edge&lt;/code&gt; to build &amp;ldquo;thin&amp;rdquo; packs for shallow repositories.</source>
          <target state="translated">与 &lt;code&gt;--objects-edge&lt;/code&gt; 相似，但它会尝试以增加时间为代价来查找排除的提交。它用于代替 &lt;code&gt;--objects-edge&lt;/code&gt; 为浅层存储库构建&amp;ldquo;瘦&amp;rdquo;包。</target>
        </trans-unit>
        <trans-unit id="827a1dc116e1ce95f15ed3122df77ff565d151ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects&lt;/code&gt;, but also print the IDs of excluded commits prefixed with a &amp;ldquo;-&amp;rdquo; character. This is used by &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; to build a &amp;ldquo;thin&amp;rdquo; pack, which records objects in deltified form based on objects contained in these excluded commits to reduce network traffic.</source>
          <target state="translated">与 &lt;code&gt;--objects&lt;/code&gt; 相似，但也会打印排除的提交的ID并以&amp;ldquo;-&amp;rdquo;字符为前缀。这是用来通过&lt;a href=&quot;git-pack-objects&quot;&gt;GIT中包对象[1]&lt;/a&gt;建立一个&amp;ldquo;薄&amp;rdquo;包，其中记录根据对象deltified形式的对象包含在这些排除提交以减少网络流量。</target>
        </trans-unit>
        <trans-unit id="db4263bd2603c01331f2d853a8cad6132476aed7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--stat&lt;/code&gt; 相似，但是以十进制表示法和路径名显示添加和删除的行数，不带缩写，以使其对计算机更友好。对于二进制文件，输出两个 &lt;code&gt;-&lt;/code&gt; 而不是说 &lt;code&gt;0 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="507e19add19af137dd267ca439cffb2e494aaec7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows the number of added and deleted lines in decimal notation and the pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;. Turns off &quot;apply&quot;.</source>
          <target state="translated">与 &lt;code&gt;--stat&lt;/code&gt; 相似，但以十进制表示法添加和删除的行数以及不带缩写的路径名，以使其对计算机更友好。对于二进制文件，输出两个 &lt;code&gt;-&lt;/code&gt; 而不是说 &lt;code&gt;0 0&lt;/code&gt; 。关闭&amp;ldquo;应用&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cebb3f179c2f7afdfbf89dc9db3668db1b27ceee" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;assume unchanged&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">与 &lt;code&gt;-t&lt;/code&gt; 相似，但对于标记为未 &lt;code&gt;assume unchanged&lt;/code&gt; 文件，请使用小写字母（请参见&lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c8a85313dff4970a1ca58c4ac403a9e5f1e1fd26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;fsmonitor valid&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">与 &lt;code&gt;-t&lt;/code&gt; 相似，但对于标记为 &lt;code&gt;fsmonitor valid&lt;/code&gt; 文件，请使用小写字母（请参阅&lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d753bc37a0732c319a3b637b8b9f6c853acf890c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt;, except that it is used if and only if the caller wants to the resulting ref list to prepare push commands. A helper supporting both push and fetch can use this to distinguish for which operation the output of &lt;code&gt;list&lt;/code&gt; is going to be used, possibly reducing the amount of work that needs to be performed.</source>
          <target state="translated">与 &lt;code&gt;list&lt;/code&gt; 相似，不同之处在于它仅在且仅当调用者希望使用结果引用列表来准备推送命令时使用。同时支持推入和提取的助手可以使用它来区分将要使用 &lt;code&gt;list&lt;/code&gt; 输出的操作，从而可能减少需要执行的工作量。</target>
        </trans-unit>
        <trans-unit id="d877d80bc2ddec8772b0999fdcc01984ec807892" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;zebra&lt;/code&gt;, but additional dimming of uninteresting parts of moved code is performed. The bordering lines of two adjacent blocks are considered interesting, the rest is uninteresting. &lt;code&gt;dimmed_zebra&lt;/code&gt; is a deprecated synonym.</source>
          <target state="translated">与 &lt;code&gt;zebra&lt;/code&gt; 相似，但对移动的代码中不感兴趣的部分执行了其他调光。两个相邻块的边界线被认为很有趣，其余的都没有意思。 &lt;code&gt;dimmed_zebra&lt;/code&gt; 是已弃用的同义词。</target>
        </trans-unit>
        <trans-unit id="bf8bcfbd909889dac33d6d2f89b63bfd39d6ccea" translate="yes" xml:space="preserve">
          <source>Similar to Git&amp;rsquo;s &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt;, this key is designed to be used in cases where &lt;code&gt;url&lt;/code&gt; points to an SVN repository via a read-only transport, to provide an alternate read/write transport. It is assumed that both keys point to the same repository. Unlike &lt;code&gt;commiturl&lt;/code&gt;, &lt;code&gt;pushurl&lt;/code&gt; is a base path. If either &lt;code&gt;commiturl&lt;/code&gt; or &lt;code&gt;pushurl&lt;/code&gt; could be used, &lt;code&gt;commiturl&lt;/code&gt; takes precedence.</source>
          <target state="translated">类似于Git的 &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt; ，此键旨在用于 &lt;code&gt;url&lt;/code&gt; 通过只读传输指向SVN存储库的情况，以提供备用的读/写传输。假定两个键都指向同一个存储库。与 &lt;code&gt;commiturl&lt;/code&gt; 不同， &lt;code&gt;pushurl&lt;/code&gt; 是基本路径。如果可以使用 &lt;code&gt;commiturl&lt;/code&gt; 或 &lt;code&gt;pushurl&lt;/code&gt; ，则 &lt;code&gt;commiturl&lt;/code&gt; 优先。</target>
        </trans-unit>
        <trans-unit id="91682fd49c343f959bbb6403f6f6863feba84482" translate="yes" xml:space="preserve">
          <source>Similar to above:</source>
          <target state="translated">与上述类似。</target>
        </trans-unit>
        <trans-unit id="e5c2486b9a7763634d7231fd9214964f9084de7d" translate="yes" xml:space="preserve">
          <source>Similar to the above, but Apache can be used to return static files that are stored on disk. On many systems this may be more efficient as Apache can ask the kernel to copy the file contents from the file system directly to the network:</source>
          <target state="translated">与上面类似,但Apache可以用来返回存储在磁盘上的静态文件。在许多系统中,这可能更有效,因为Apache可以要求内核将文件内容从文件系统直接复制到网络上。</target>
        </trans-unit>
        <trans-unit id="1d010174e63754716183c2af28e1291061e29078" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users of the svnsync(1) command distributed with SVN 1.4.x and later.</source>
          <target state="translated">类似于 useSvmProps 选项;这是为使用 SVN 1.4.x 及以后版本的 svnsync(1)命令的用户准备的。</target>
        </trans-unit>
        <trans-unit id="742718eb04c74d19e18742babbe16ee5d5955f76" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users who need to remap the UUID manually. This may be useful in situations where the original UUID is not available via either useSvmProps or useSvnsyncProps.</source>
          <target state="translated">类似于 useSvmProps 选项;这适用于需要手动重映射 UUID 的用户。在通过useSvmProps或useSvnsyncProps都无法获得原始UUID的情况下,这个选项可能很有用。</target>
        </trans-unit>
        <trans-unit id="2b4ceb453e6bfcacc89ab013230d146d7c2efc84" translate="yes" xml:space="preserve">
          <source>Similar to two-line header for traditional &lt;code&gt;unified&lt;/code&gt; diff format, &lt;code&gt;/dev/null&lt;/code&gt; is used to signal created or deleted files.</source>
          <target state="translated">与传统的 &lt;code&gt;unified&lt;/code&gt; diff格式的两行标头相似， &lt;code&gt;/dev/null&lt;/code&gt; 用于表示创建或删除的文件。</target>
        </trans-unit>
        <trans-unit id="9acea96e7cbe682e6caa9d2b57eedce27f5ebab4" translate="yes" xml:space="preserve">
          <source>Similarly, for a maintenance release, &lt;code&gt;maint&lt;/code&gt; is tracking the commits to be released. Therefore, in the steps above simply tag and push &lt;code&gt;maint&lt;/code&gt; rather than &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">同样，对于维护版本， &lt;code&gt;maint&lt;/code&gt; 跟踪要发布的提交。因此，在上述步骤中，只需标记并推送 &lt;code&gt;maint&lt;/code&gt; 而不是 &lt;code&gt;master&lt;/code&gt; 即可。</target>
        </trans-unit>
        <trans-unit id="c8cf6e3fc26d2562fdbc09f3e09e2deb878c7a85" translate="yes" xml:space="preserve">
          <source>Similarly, when moving files around, one can find that filenames with non-ascii or special characters end up in a different directory, one that includes a double quote character. (This is technically the same issue as above with quoting, but perhaps an interesting different way that it can and has manifested as a problem.)</source>
          <target state="translated">同样,当移动文件时,可以发现带有非ascii或特殊字符的文件名最终会出现在不同的目录中,一个包含双引号字符的目录。(从技术上讲,这与上面的引号问题是一样的,但也许是一种有趣的不同方式,它可以而且已经表现为一个问题)。</target>
        </trans-unit>
        <trans-unit id="47fa1a83138cf11ea34d19a92cc77db11eb4b97c" translate="yes" xml:space="preserve">
          <source>Similarly, when the &quot;recursive&quot; merge strategy runs, and finds that there are criss-cross merges and thus more than one merge base (which is fairly unusual, but it does happen), it will generate one temporary midway tree (or possibly even more, if you had lots of criss-crossing merges and more than two merge bases) as a temporary internal merge base, and again, those are real objects, but the end result will not end up pointing to them, so they end up &quot;dangling&quot; in your repository.</source>
          <target state="translated">同样,当 &quot;递归 &quot;合并策略运行时,发现有交叉合并,因此有多个合并库(这是相当不寻常的,但确实发生了),它会生成一个临时的中间树(甚至可能更多,如果你有很多交叉合并和两个以上的合并库)作为临时的内部合并库,同样,这些都是真实的对象,但最终结果不会指向它们,所以它们最终会 &quot;悬空 &quot;在你的版本库中。</target>
        </trans-unit>
        <trans-unit id="50765cb4cf598285ffabcacb2eda47bdf85bbc67" translate="yes" xml:space="preserve">
          <source>Similarly, you need only trust the SHA-1 name of a top-level tree object to trust the contents of the entire directory that it refers to, and if you receive the SHA-1 name of a commit from a trusted source, then you can easily verify the entire history of commits reachable through parents of that commit, and all of those contents of the trees referred to by those commits.</source>
          <target state="translated">同样,你只需要信任一个顶层树对象的SHA-1名称,就可以信任它所引用的整个目录的内容,如果你从一个可信的源头接收到一个提交的SHA-1名称,那么你就可以很容易地验证通过该提交的父代所能到达的整个提交历史,以及这些提交所引用的树的所有这些内容。</target>
        </trans-unit>
        <trans-unit id="35267477ddadd32e54d2580eaf5f6347904aefaa" translate="yes" xml:space="preserve">
          <source>Simple UNIX mbox splitter program</source>
          <target state="translated">简单的UNIX mbox分割器程序</target>
        </trans-unit>
        <trans-unit id="e6081dd40a736a561294c958c5f476bf808af40b" translate="yes" xml:space="preserve">
          <source>Simplifies the history to the simplest history explaining the final state of the tree. Simplest because it prunes some side branches if the end result is the same (i.e. merging branches with the same content)</source>
          <target state="translated">将历史简化为最简单的历史,解释树的最终状态。最简单是因为如果最终结果相同(即合并内容相同的分支),它就会修剪一些侧枝。</target>
        </trans-unit>
        <trans-unit id="7d47a55c52a010c445880763e4c0c53ec8d956ef" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;dcommit&lt;/code&gt; uses rebase internally, any Git branches you &lt;code&gt;git push&lt;/code&gt; to before &lt;code&gt;dcommit&lt;/code&gt; on will require forcing an overwrite of the existing ref on the remote repository. This is generally considered bad practice, see the &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; documentation for details.</source>
          <target state="translated">由于 &lt;code&gt;dcommit&lt;/code&gt; 在内部使用rebase，因此您在 &lt;code&gt;dcommit&lt;/code&gt; 之前 &lt;code&gt;git push&lt;/code&gt; 到的任何Git分支都将要求强制覆盖远程存储库中的现有ref。通常认为这是不好的做法，有关详细信息，请参见&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d3cbf9539838f097e44d7366548fff10dd5a4bb6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;git fast-import&lt;/code&gt; cannot tag trees, you will not be able to export the linux.git repository completely, as it contains a tag referencing a tree instead of a commit.</source>
          <target state="translated">由于 &lt;code&gt;git fast-import&lt;/code&gt; 无法标记树，因此您将无法完全导出linux.git存储库，因为它包含一个引用树的标记而不是提交。</target>
        </trans-unit>
        <trans-unit id="e8a0aceddf81ac41c98d5a8bdbe00960df868272" translate="yes" xml:space="preserve">
          <source>Since every developer&amp;rsquo;s repository has the same complete copy of the project history, no repository is special, and it is trivial for another developer to take over maintenance of a project, either by mutual agreement, or because a maintainer becomes unresponsive or difficult to work with.</source>
          <target state="translated">由于每个开发人员的存储库都具有相同的项目历史记录完整副本，因此没有一个特殊的存储库，并且对于另一个开发人员而言，通过双方同意或维护者变得不响应或难以与之合作来接管项目的维护很简单。 。</target>
        </trans-unit>
        <trans-unit id="ff45ae2cc9973e736a0612a33b064d4efb949c7a" translate="yes" xml:space="preserve">
          <source>Since keeping up-to-date with both branches and tags on the remote is a common use-case the &lt;code&gt;--prune-tags&lt;/code&gt; option can be supplied along with &lt;code&gt;--prune&lt;/code&gt; to prune local tags that don&amp;rsquo;t exist on the remote, and force-update those tags that differ. Tag pruning can also be enabled with &lt;code&gt;fetch.pruneTags&lt;/code&gt; or &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">由于远程使用分支和标签都是最新的使用情况， &lt;code&gt;--prune-tags&lt;/code&gt; 可以与 &lt;code&gt;--prune&lt;/code&gt; 一起提供--prune-tags选项，以修剪远程上不存在的本地标签，并且强制更新那些不同的标签。标记修剪还可以通过配置中的 &lt;code&gt;fetch.pruneTags&lt;/code&gt; 或 &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; 启用。参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0932a869e1657064106036f8682ab82f7b34c539" translate="yes" xml:space="preserve">
          <source>Since object names are computed the same way in every repository, the same content stored in two repositories will always be stored under the same name.</source>
          <target state="translated">由于每个存储库的对象名称计算方式相同,所以存储在两个存储库中的相同内容将始终以相同的名称存储。</target>
        </trans-unit>
        <trans-unit id="c6783a475fdc4e2463b00ffd216c9d8a1b41c5ce" translate="yes" xml:space="preserve">
          <source>Since the blob is entirely defined by its data, if two files in a directory tree (or in multiple different versions of the repository) have the same contents, they will share the same blob object. The object is totally independent of its location in the directory tree, and renaming a file does not change the object that file is associated with.</source>
          <target state="translated">由于blob完全是由其数据定义的,如果一个目录树中的两个文件(或在多个不同版本的版本库中)具有相同的内容,它们将共享同一个blob对象。该对象完全独立于它在目录树中的位置,重命名一个文件不会改变该文件所关联的对象。</target>
        </trans-unit>
        <trans-unit id="a3fb22d6e6da288d244e8acdd9955bf43f0ad8d0" translate="yes" xml:space="preserve">
          <source>Since the current state of closing.txt is cached in the index file, it is listed as &quot;Changes to be committed&quot;. Since file.txt has changes in the working directory that aren&amp;rsquo;t reflected in the index, it is marked &quot;changed but not updated&quot;. At this point, running &quot;git commit&quot; would create a commit that added closing.txt (with its new contents), but that didn&amp;rsquo;t modify file.txt.</source>
          <target state="translated">由于close.txt的当前状态已缓存在索引文件中，因此将其列为&amp;ldquo;要提交的更改&amp;rdquo;。由于file.txt在工作目录中具有未反映在索引中的更改，因此将其标记为&amp;ldquo;已更改但未更新&amp;rdquo;。此时，运行&amp;ldquo; git commit&amp;rdquo;将创建一个添加了Closeing.txt（带有新内容）的提交，但未修改file.txt。</target>
        </trans-unit>
        <trans-unit id="78b19ba60aba5b2f618c3990a75d2fca7411595a" translate="yes" xml:space="preserve">
          <source>Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and useSvmProps options all affect the metadata generated and used by &lt;code&gt;git svn&lt;/code&gt;; they &lt;strong&gt;must&lt;/strong&gt; be set in the configuration file before any history is imported and these settings should never be changed once they are set.</source>
          <target state="translated">由于noMetadata，rewriteRoot，rewriteUUID，useSvnsyncProps和useSvmProps选项均会影响 &lt;code&gt;git svn&lt;/code&gt; 生成和使用的元数据；&lt;strong&gt;必须&lt;/strong&gt;先在配置文件中设置它们，然后再导入任何历史记录，并且一旦设置，就永远不能更改这些设置。</target>
        </trans-unit>
        <trans-unit id="6c0fcca9337c1cb048efaf57760c6fdc1a7b6b6f" translate="yes" xml:space="preserve">
          <source>Singe line category of a project, used to group projects if &lt;code&gt;$projects_list_group_categories&lt;/code&gt; is enabled. By default (file and configuration variable absent), uncategorized projects are put in the &lt;code&gt;$project_list_default_category&lt;/code&gt; category. You can use the &lt;code&gt;gitweb.category&lt;/code&gt; repo configuration variable, but the file takes precedence.</source>
          <target state="translated">项目的单行类别，如果启用 &lt;code&gt;$projects_list_group_categories&lt;/code&gt; ，则用于对项目进行分组。默认情况下（不存在文件和配置变量），未分类的项目位于 &lt;code&gt;$project_list_default_category&lt;/code&gt; 类别中。您可以使用 &lt;code&gt;gitweb.category&lt;/code&gt; 存储库配置变量，但文件优先。</target>
        </trans-unit>
        <trans-unit id="1622ee3a3548a98ace63f4a1f20c802cbd3d6865" translate="yes" xml:space="preserve">
          <source>Single Tree Merge</source>
          <target state="translated">单树合并</target>
        </trans-unit>
        <trans-unit id="68fe6fe857d1a576bbea2c5ba543ec91391124bd" translate="yes" xml:space="preserve">
          <source>Single URL for gitweb and for fetching</source>
          <target state="translated">为gitweb提供单一的URL,并用于获取。</target>
        </trans-unit>
        <trans-unit id="c63aa67778ae9fde52963fd98eabefccd9f535ba" translate="yes" xml:space="preserve">
          <source>Size of the Git repository: In its current form Git scales up poorly for large repositories containing content that is not compressed by delta computation between trees. For example, you can use submodules to hold large binary assets and these repositories can be shallowly cloned such that you do not have a large history locally.</source>
          <target state="translated">Git 仓库的大小。在目前的形式下,Git对于包含内容的大型仓库的扩展性很差,因为这些内容没有通过树之间的delta计算进行压缩。例如,你可以使用子模块来存放大型二进制资产,这些仓库可以浅层克隆,这样你在本地就不会有大量的历史记录。</target>
        </trans-unit>
        <trans-unit id="109e0b1e1d08be0f664fabdbefc14a841a52fd41" translate="yes" xml:space="preserve">
          <source>Skip &quot;branches&quot; and &quot;tags&quot; of first level directories</source>
          <target state="translated">跳过一级目录的 &quot;分支 &quot;和 &quot;标签&quot;。</target>
        </trans-unit>
        <trans-unit id="89ac85d0525bb0b20e17b8b50eb25e661e2c2664" translate="yes" xml:space="preserve">
          <source>Skip &quot;doc*&quot; directory for every fetch</source>
          <target state="translated">每次获取时跳过 &quot;doc*&quot;目录。</target>
        </trans-unit>
        <trans-unit id="160b3d2c26cf27627f75b323f1f2f273b38eb0f3" translate="yes" xml:space="preserve">
          <source>Skip &lt;code&gt;number&lt;/code&gt; commits before starting to show the commit output.</source>
          <target state="translated">在开始显示提交输出之前，跳过 &lt;code&gt;number&lt;/code&gt; 提交。</target>
        </trans-unit>
        <trans-unit id="143f0d9f0b5891b48ad38fad90174c475ab3d608" translate="yes" xml:space="preserve">
          <source>Skip algorithm</source>
          <target state="translated">跳过算法</target>
        </trans-unit>
        <trans-unit id="fd9da89bf39cfad867f423a79c66781ba5934141" translate="yes" xml:space="preserve">
          <source>Skip algorithm discussed</source>
          <target state="translated">跳过算法的讨论</target>
        </trans-unit>
        <trans-unit id="e6458f822412c73c4c309bd3d568b1a062547077" translate="yes" xml:space="preserve">
          <source>Skip and remove all lines starting with comment character (default &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">跳过并删除所有以注释字符（默认为 &lt;code&gt;#&lt;/code&gt; ）开头的行。</target>
        </trans-unit>
        <trans-unit id="8d0905b7d9c2aadf471da8a0572104f192b6463b" translate="yes" xml:space="preserve">
          <source>Skip move or rename actions which would lead to an error condition. An error happens when a source is neither existing nor controlled by Git, or when it would overwrite an existing file unless &lt;code&gt;-f&lt;/code&gt; is given.</source>
          <target state="translated">跳过移动或重命名可能导致错误情况的动作。当源既不存在也不不受Git控制时，或者覆盖源文件（除非指定 &lt;code&gt;-f&lt;/code&gt; ）时，都会发生错误。</target>
        </trans-unit>
        <trans-unit id="93791f01919fc21e7203f6ad13249cb4adbabc2c" translate="yes" xml:space="preserve">
          <source>Skip output of blob objects and instead refer to blobs via their original SHA-1 hash. This is useful when rewriting the directory structure or history of a repository without touching the contents of individual files. Note that the resulting stream can only be used by a repository which already contains the necessary objects.</source>
          <target state="translated">跳过blob对象的输出,而是通过它们原始的SHA-1哈希值来引用blob。当重写仓库的目录结构或历史记录而不触及单个文件的内容时,这很有用。请注意,生成的流只能由已经包含必要对象的版本库使用。</target>
        </trans-unit>
        <trans-unit id="3704502c09a46589e3fc638d0b7431bdbfb4de69" translate="yes" xml:space="preserve">
          <source>Skip paths matching the regex.</source>
          <target state="translated">跳过符合regex的路径。</target>
        </trans-unit>
        <trans-unit id="8024d787464bdc42cf9e1692fcecd2225427e388" translate="yes" xml:space="preserve">
          <source>Skip the current commit and continue with the rest of the sequence.</source>
          <target state="translated">跳过当前的提交,继续执行其余的序列。</target>
        </trans-unit>
        <trans-unit id="8b89cae0a7a7a1a500c597f44f79f240ec0b9f01" translate="yes" xml:space="preserve">
          <source>Skip the current patch. This is only meaningful when restarting an aborted patch.</source>
          <target state="translated">跳过当前的补丁。这只有在重新启动已中止的补丁时才有意义。</target>
        </trans-unit>
        <trans-unit id="37f2142ef251b529e2961f797b73a85bc8215244" translate="yes" xml:space="preserve">
          <source>Skip the first &amp;lt;nn&amp;gt; numbers, for example if -f3 is specified, start the numbering with 0004.</source>
          <target state="translated">跳过第一个&amp;lt;nn&amp;gt;数字，例如，如果指定了-f3，则从0004开始编号。</target>
        </trans-unit>
        <trans-unit id="53b34cae8fb29a9d928b4eaf4c1d1171200a7cd2" translate="yes" xml:space="preserve">
          <source>Skip untracked files matching pattern. Note that pattern is a shell wildcard pattern. See EXCLUDE PATTERNS below for more information.</source>
          <target state="translated">跳过与pattern匹配的未被跟踪的文件。请注意,pattern是一个shell通配符模式。更多信息请参见下面的EXCLUDE PATTERNS。</target>
        </trans-unit>
        <trans-unit id="5c514bc7b54c5d446f341bd390aa604bcfe7a779" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit</source>
          <target state="translated">跳过工作树位</target>
        </trans-unit>
        <trans-unit id="1c6f4418b45f18f2276258a670ff4fb3ee82370c" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit can be defined in one (long) sentence: When reading an entry, if it is marked as skip-worktree, then Git pretends its working directory version is up to date and read the index version instead.</source>
          <target state="translated">Skip-worktree位可以用一句话(长)来定义。当读取一个条目时,如果它被标记为skip-worktree,那么Git就会假装其工作目录版本是最新的,而读取索引版本。</target>
        </trans-unit>
        <trans-unit id="497781ce21708a17d4e26d12bd089a723d673b06" translate="yes" xml:space="preserve">
          <source>So &quot;git bisect&quot; is designed to help find a &quot;first bad commit&quot;. And to be as efficient as possible, it tries to perform a binary search.</source>
          <target state="translated">所以 &quot;git bisect &quot;是为了帮助找到 &quot;第一个坏提交&quot;。而且为了尽可能的高效,它试图进行二进制搜索。</target>
        </trans-unit>
        <trans-unit id="2f63b69e28337cf529c035b03d9daaf28859996c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;git diff&lt;/code&gt; is comparing against something other than the head. The thing that it&amp;rsquo;s comparing against is actually the index file, which is stored in .git/index in a binary format, but whose contents we can examine with ls-files:</source>
          <target state="translated">因此 &lt;code&gt;git diff&lt;/code&gt; 正在与head以外的其他东西进行比较。它要与之比较的实际上是索引文件，该文件以二进制格式存储在.git / index中，但是我们可以使用ls文件检查其内容：</target>
        </trans-unit>
        <trans-unit id="87fbbf25154de6df0238ad0568533ed6007a8d44" translate="yes" xml:space="preserve">
          <source>So a good work-flow should be designed around the above points. That is making bisecting easier, more useful and standard.</source>
          <target state="translated">所以一个好的工作流程应该围绕以上几点来设计。那就是让二分法更简单、更有用、更标准。</target>
        </trans-unit>
        <trans-unit id="fe9010d034fcf65a3dd663b44598da34c322ed58" translate="yes" xml:space="preserve">
          <source>So be careful when using this with a refspec like &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt;, or any other refspec which might map references from multiple remotes to the same local namespace.</source>
          <target state="translated">因此，在将其与诸如 &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; 的 refspec或可能会将多个远程对象的引用映射到同一本地名称空间的任何其他refspec 一起使用时要小心。</target>
        </trans-unit>
        <trans-unit id="2b170fc73b3dfabca43a4cde5eef61bd350b47e1" translate="yes" xml:space="preserve">
          <source>So by default &lt;code&gt;git commit&lt;/code&gt; uses the index to create the commit, not the working tree; the &quot;-a&quot; option to commit tells it to first update the index with all changes in the working tree.</source>
          <target state="translated">因此，默认情况下 &lt;code&gt;git commit&lt;/code&gt; 使用索引创建提交，而不是工作树；提交的&amp;ldquo; -a&amp;rdquo;选项告诉它首先使用工作树中的所有更改来更新索引。</target>
        </trans-unit>
        <trans-unit id="f86c14eb732dcf1c0bad37f2fc6a2cc528890e0c" translate="yes" xml:space="preserve">
          <source>So doing a &lt;code&gt;git diff-index --cached&lt;/code&gt; is basically very useful when you are asking yourself &quot;what have I already marked for being committed, and what&amp;rsquo;s the difference to a previous tree&quot;.</source>
          <target state="translated">因此，当您问自己&amp;ldquo;我已经标记为提交的内容以及与前一棵树有什么区别&amp;rdquo;时，执行 &lt;code&gt;git diff-index --cached&lt;/code&gt; 基本上非常有用。</target>
        </trans-unit>
        <trans-unit id="d45f632df019622532eb259f26fdc9a9f2411148" translate="yes" xml:space="preserve">
          <source>So for example when &lt;code&gt;--thread&lt;/code&gt; and &lt;code&gt;--no-chain-reply-to&lt;/code&gt; are specified, the second and subsequent patches will be replies to the first one like in the illustration below where &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; is in reply to &lt;code&gt;[PATCH 0/2]&lt;/code&gt;:</source>
          <target state="translated">因此，例如，当 &lt;code&gt;--thread&lt;/code&gt; 和 &lt;code&gt;--no-chain-reply-to&lt;/code&gt; 时，第二个及后续补丁将回复第一个补丁，如下图所示，其中 &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; 回复 &lt;code&gt;[PATCH 0/2]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8dac83a478835c1820a1dc8da47f73a69f302106" translate="yes" xml:space="preserve">
          <source>So git bisect is unconditional goodness - and feel free to quote that ;-)</source>
          <target state="translated">所以,git bisect是无条件的好--请随意引用这句话;-)</target>
        </trans-unit>
        <trans-unit id="9a21b5de38126daf9f68802ae918237cb622de11" translate="yes" xml:space="preserve">
          <source>So if there is no bad merge base, the bisection process continues as usual after this step.</source>
          <target state="translated">所以,如果没有不良的合并基础,这一步之后,二分过程照常进行。</target>
        </trans-unit>
        <trans-unit id="d61ad44b1ad1935830d69abe827279c6ac721854" translate="yes" xml:space="preserve">
          <source>So if we could just &quot;replace&quot; Z by Z' when we bisect, then we would not need to add anything to a script. It would just work for anyone in the project sharing the special branches and the replacements.</source>
          <target state="translated">因此,如果我们在进行二分法时,能用Z'来 &quot;替换 &quot;Z,那么我们就不需要在脚本中添加任何东西。这对项目中的任何人来说都是可行的,可以共享特殊的分支和替换。</target>
        </trans-unit>
        <trans-unit id="6be137f4b3e3bebc88bcbf9a9fd9420c4009228f" translate="yes" xml:space="preserve">
          <source>So if you know how to create test cases and how to bisect, you will be subject to a virtuous circle:</source>
          <target state="translated">所以,如果你知道如何创建测试用例,如何一分为二,你将会受到一个良性循环。</target>
        </trans-unit>
        <trans-unit id="b28d1446f9340641647b1bfa92704042d040df77" translate="yes" xml:space="preserve">
          <source>So if you used &quot;git bisect skip&quot; (or the run script exited with special code 125) you could get a result like this:</source>
          <target state="translated">因此,如果你使用 &quot;git bisect skip&quot;(或运行脚本退出时使用特殊代码125),你可以得到这样的结果。</target>
        </trans-unit>
        <trans-unit id="edcb1ada2530409c42369421497ba8e78619bff1" translate="yes" xml:space="preserve">
          <source>So in the above example the best bisection point is commit C.</source>
          <target state="translated">所以在上面的例子中,最佳的分界点是提交C。</target>
        </trans-unit>
        <trans-unit id="6fdeecf50af4098d1933aa89ebcede0a8177561f" translate="yes" xml:space="preserve">
          <source>So in the end this means that to find the best bisection commits we should maximize the function:</source>
          <target state="translated">所以最后这就意味着,为了找到最佳的二段提交,我们应该最大化函数。</target>
        </trans-unit>
        <trans-unit id="58a2f1d134fdcd7a3743e88aa224e9253e6fbd42" translate="yes" xml:space="preserve">
          <source>So it is a fact that commits near an untestable commit have a high probability of being untestable themselves. And the best bisection commits are often found together too (due to the bisection algorithm).</source>
          <target state="translated">所以一个事实是,在一个不可测试的提交附近的提交,本身就有很大的概率是不可测试的。而最好的二分法提交也往往是一起找到的(由于二分法算法)。</target>
        </trans-unit>
        <trans-unit id="aa016e179ca75d2a0eb71de197505264fa3225e9" translate="yes" xml:space="preserve">
          <source>So now we know how Git uses the object database to represent a project&amp;rsquo;s history:</source>
          <target state="translated">现在，我们知道了Git如何使用对象数据库来表示项目的历史记录：</target>
        </trans-unit>
        <trans-unit id="ce2a816c8c6bc197cebf7da353940391ec82e2e3" translate="yes" xml:space="preserve">
          <source>So now you know that the missing blob was the data for a file named &lt;code&gt;myfile&lt;/code&gt;. And chances are you can also identify the directory&amp;mdash;​let&amp;rsquo;s say it&amp;rsquo;s in &lt;code&gt;somedirectory&lt;/code&gt;. If you&amp;rsquo;re lucky the missing copy might be the same as the copy you have checked out in your working tree at &lt;code&gt;somedirectory/myfile&lt;/code&gt;; you can test whether that&amp;rsquo;s right with &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object[1]&lt;/a&gt;:</source>
          <target state="translated">因此，现在您知道丢失的Blob是名为 &lt;code&gt;myfile&lt;/code&gt; 的文件的数据。而且您还可以识别目录-假设它在 &lt;code&gt;somedirectory&lt;/code&gt; 中。如果幸运的话，丢失的副本可能与您在工作树中 &lt;code&gt;somedirectory/myfile&lt;/code&gt; 检出的副本相同；您可以使用&lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object [1]&lt;/a&gt;测试是否正确：</target>
        </trans-unit>
        <trans-unit id="02795e1f800cead1112ee5200f5eaf14f8868f55" translate="yes" xml:space="preserve">
          <source>So of course it&amp;rsquo;s much better as it&amp;rsquo;s O(N * T) vs O(N * T * M) if you would test everything after each commit.</source>
          <target state="translated">因此，如果您要在每次提交后测试所有内容，那当然是O（N * T）与O（N * T * M）更好。</target>
        </trans-unit>
        <trans-unit id="bf839044c5c4761411ba28111f62e6182a819140" translate="yes" xml:space="preserve">
          <source>So only the W and B commits will be kept. Because commits X and Y will have been removed by rules a) and b) respectively, and because commits G are removed by rule b) too.</source>
          <target state="translated">所以只有W和B的提交会被保留。因为提交X和Y将分别被规则a)和b)删除,而且提交G也被规则b)删除。</target>
        </trans-unit>
        <trans-unit id="2adeb678ade18152fba70f98a363a63cf540c6c1" translate="yes" xml:space="preserve">
          <source>So regressions are fought all the time by developers, and indeed it is well known that bugs should be fixed as soon as possible, so as soon as they are found. That&amp;rsquo;s why it is interesting to have good tools for this purpose.</source>
          <target state="translated">因此，开发人员一直在努力进行回归，并且众所周知，应该尽快修复错误，以便尽快发现它们。这就是为什么为此目的拥有好的工具很有趣。</target>
        </trans-unit>
        <trans-unit id="e3329398bcdff474dec989568418215901207762" translate="yes" xml:space="preserve">
          <source>So test suites and &quot;git bisect&quot; are complementary tools that are very powerful and efficient when used together.</source>
          <target state="translated">所以,测试套件和 &quot;git bisect &quot;是相辅相成的工具,一起使用时非常强大和高效。</target>
        </trans-unit>
        <trans-unit id="af6a5f3f7d1b778946d7ea3d80d407ba283ecbfd" translate="yes" xml:space="preserve">
          <source>So the algorithm used by &quot;git bisect&quot; to find the best bisection commit when there are no skipped commits is the following:</source>
          <target state="translated">所以,&quot;git bisect &quot;在没有跳过提交的情况下,寻找最佳的bisect提交的算法如下。</target>
        </trans-unit>
        <trans-unit id="d52372a3732a9693c38928f4af80ece55caba390" translate="yes" xml:space="preserve">
          <source>So the current algorithm seems to be the best possible given what we initially supposed.</source>
          <target state="translated">所以目前的算法似乎是我们最初设想的最好的算法。</target>
        </trans-unit>
        <trans-unit id="ff070bb5b96ce6bdea0ee7e21e6149356aab622c" translate="yes" xml:space="preserve">
          <source>So the ideal is usually to produce a series of patches such that:</source>
          <target state="translated">所以,理想的做法通常是制作一系列的补丁,这样。</target>
        </trans-unit>
        <trans-unit id="a9929fd0a7cc637ffed9aa6825e45ac8df015448" translate="yes" xml:space="preserve">
          <source>So to help people find commits that introduce a &quot;bad&quot; behavior, the &quot;git bisect&quot; set of commands was invented. And it follows of course that in &quot;git bisect&quot; parlance, commits where the &quot;interesting behavior&quot; is present are called &quot;bad&quot; commits, while other commits are called &quot;good&quot; commits. And a commit that introduce the behavior we are interested in is called a &quot;first bad commit&quot;. Note that there could be more than one &quot;first bad commit&quot; in the commit space we are searching.</source>
          <target state="translated">所以为了帮助人们找到引入 &quot;坏 &quot;行为的提交,人们发明了 &quot;git bisect &quot;这套命令。当然,在 &quot;git一分为二 &quot;的说法中,出现 &quot;有趣行为 &quot;的提交被称为 &quot;坏 &quot;提交,而其他提交则被称为 &quot;好 &quot;提交。而引入我们感兴趣的行为的提交被称为 &quot;第一个坏提交&quot;。请注意,在我们搜索的提交空间中,可能存在多个 &quot;第一个坏提交&quot;。</target>
        </trans-unit>
        <trans-unit id="15c2cfea7209fe12c9a7f928eefdf57e7efd00f9" translate="yes" xml:space="preserve">
          <source>So to introduce some real trust in the system, the only thing you need to do is to digitally sign just 'one' special note, which includes the name of a top-level commit. Your digital signature shows others that you trust that commit, and the immutability of the history of commits tells others that they can trust the whole history.</source>
          <target state="translated">因此,要想在系统中引入一些真正的信任,你唯一需要做的就是只需在 &quot;一个 &quot;特别说明上进行数字签名,其中包括一个顶层提交的名称。你的数字签名向别人展示了你对该提交的信任,而提交历史的不可更改性则告诉别人,他们可以信任整个历史。</target>
        </trans-unit>
        <trans-unit id="909741d50394835646e0e74eaab338b4f855de2e" translate="yes" xml:space="preserve">
          <source>So to populate the index with the two files you just created, you can do</source>
          <target state="translated">因此,要用你刚刚创建的两个文件来填充索引,你可以这样做</target>
        </trans-unit>
        <trans-unit id="f597f374b45ae15a5bbfbd431d1e5af284187139" translate="yes" xml:space="preserve">
          <source>So using a PRNG with a bias to favor commits away from the good and bad commits looked like a good choice.</source>
          <target state="translated">所以用一个有偏向性的PRNG来偏向于远离好的和坏的承诺,看起来是一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="1d3965fc903eee9b8f55d2c4363ff10ff9b5318f" translate="yes" xml:space="preserve">
          <source>So very soon it will not be possible to completely test everything.</source>
          <target state="translated">所以很快就不能完全测试所有的东西。</target>
        </trans-unit>
        <trans-unit id="c734302804af13b8fb3578fee7c8a382eab7f492" translate="yes" xml:space="preserve">
          <source>So we chose G, H, K or L as the best bisection point, which is better than F. Because if for example L is bad, then we will know not only that L, M and N are bad but also that G, H, I and J are not the first bad commit (since we suppose that there is only one first bad commit and it must be an ancestor of L).</source>
          <target state="translated">所以我们选择G、H、K或L作为最佳的二分点,这比F要好,因为如果比如L是坏的,那么我们不仅会知道L、M、N是坏的,而且会知道G、H、I、J不是第一坏犯(因为我们假设第一坏犯只有一个,它一定是L的祖先)。</target>
        </trans-unit>
        <trans-unit id="52135537297d21de1e1bab64c3c62387485ffd7b" translate="yes" xml:space="preserve">
          <source>So we would be left with only:</source>
          <target state="translated">所以我们就只剩下:</target>
        </trans-unit>
        <trans-unit id="9a854aba22b6e93e9800490c72e201394edc5390" translate="yes" xml:space="preserve">
          <source>So what are the tools used to fight regressions? They are nearly the same as those used to fight regular bugs. The only specific tools are test suites and tools similar as &quot;git bisect&quot;.</source>
          <target state="translated">那么,打击回归的工具是什么呢?它们和打击普通bug的工具几乎一样。唯一具体的工具是测试套件和类似于 &quot;git bisect &quot;的工具。</target>
        </trans-unit>
        <trans-unit id="17175b38ddc3adc987023ab7708e71618fdb213f" translate="yes" xml:space="preserve">
          <source>So what our &lt;code&gt;git add&lt;/code&gt; did was store a new blob and then put a reference to it in the index file. If we modify the file again, we&amp;rsquo;ll see that the new modifications are reflected in the &lt;code&gt;git diff&lt;/code&gt; output:</source>
          <target state="translated">因此，我们的 &lt;code&gt;git add&lt;/code&gt; 要做的是存储一个新的blob，然后在索引文件中添加对其的引用。如果再次修改文件，我们将看到新的修改反映在 &lt;code&gt;git diff&lt;/code&gt; 输出中：</target>
        </trans-unit>
        <trans-unit id="c52a5d49814c75f968644da3c05f28677f66e5d9" translate="yes" xml:space="preserve">
          <source>So when a commit is marked as &quot;bad&quot; we know we can remove all the commits in the graph except those that are ancestors of the new &quot;bad&quot; commit. This means that:</source>
          <target state="translated">所以当一个提交被标记为 &quot;坏 &quot;的时候,我们知道我们可以删除图中所有的提交,除了那些新的 &quot;坏 &quot;提交的祖先。这意味着:</target>
        </trans-unit>
        <trans-unit id="2ab9a98e063e3527611545f584f2c39a22096906" translate="yes" xml:space="preserve">
          <source>So, look into &lt;code&gt;builtin/cat-file.c&lt;/code&gt;, search for &lt;code&gt;cmd_cat_file()&lt;/code&gt; and look what it does.</source>
          <target state="translated">因此，查看 &lt;code&gt;cmd_cat_file()&lt;/code&gt; &lt;code&gt;builtin/cat-file.c&lt;/code&gt; file.c，搜索cmd_cat_file（）并查看其作用。</target>
        </trans-unit>
        <trans-unit id="190b1ee6ab5b81f82f0d76cf355df1a21f43d2e3" translate="yes" xml:space="preserve">
          <source>So, think about something which you are interested in, say, &quot;how can I access a blob just knowing the object name of it?&quot;. The first step is to find a Git command with which you can do it. In this example, it is either &lt;code&gt;git show&lt;/code&gt; or &lt;code&gt;git cat-file&lt;/code&gt;.</source>
          <target state="translated">因此，考虑一下您感兴趣的事情，例如：&amp;ldquo;仅知道对象名称，如何访问blob？&amp;rdquo;。第一步是找到可以使用它的Git命令。在此示例中，它是 &lt;code&gt;git show&lt;/code&gt; 或 &lt;code&gt;git cat-file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1efaef427fd5b515b3e304fc27457e91eec84a25" translate="yes" xml:space="preserve">
          <source>So, we can use somebody else&amp;rsquo;s work from a remote repository, but how can &lt;strong&gt;you&lt;/strong&gt; prepare a repository to let other people pull from it?</source>
          <target state="translated">所以，我们可以使用别人的作品从远程仓库，但如何能&lt;strong&gt;你&lt;/strong&gt;准备一个资料库，让其他人撤出它？</target>
        </trans-unit>
        <trans-unit id="1d69dd0a510947edc4fb12eee97c080f4a377f68" translate="yes" xml:space="preserve">
          <source>Software bugs, or errors, are so prevalent and so detrimental that they cost the U.S. economy an estimated $59.5 billion annually, or about 0.6 percent of the gross domestic product, according to a newly released study commissioned by the Department of Commerce&amp;rsquo;s National Institute of Standards and Technology (NIST). At the national level, over half of the costs are borne by software users and the remainder by software developers/vendors. The study also found that, although all errors cannot be removed, more than a third of these costs, or an estimated $22.2 billion, could be eliminated by an improved testing infrastructure that enables earlier and more effective identification and removal of software defects. These are the savings associated with finding an increased percentage (but not 100 percent) of errors closer to the development stages in which they are introduced. Currently, over half of all errors are not found until &quot;downstream&quot; in the development process or during post-sale software use.</source>
          <target state="translated">根据美国商务部国家标准研究院委托进行的一项最新研究，软件错误或错误非常普遍且有害，以至于它们每年给美国经济造成595亿美元的损失，约占国内生产总值的0.6％。和技术（NIST）。在国家一级，一半以上的成本由软件用户承担，其余部分由软件开发商/供应商承担。该研究还发现，尽管无法消除所有错误，但改进的测试基础架构可以消除这些错误的三分之一以上，或估计为222亿美元，从而可以更早，更有效地识别和消除软件缺陷。这些是与发现错误的百分比（而不是100％）接近引入错误的开发阶段相关的节省。当前，直到开发过程中的&amp;ldquo;下游&amp;rdquo;或售后软件使用期间，才发现所有错误的一半以上。</target>
        </trans-unit>
        <trans-unit id="f90a777e081dbed9d193d82399cc2e3159bf44a3" translate="yes" xml:space="preserve">
          <source>Software developers already spend approximately 80 percent of development costs on identifying and correcting defects, and yet few products of any type other than software are shipped with such high levels of errors.</source>
          <target state="translated">软件开发人员已经将大约80%的开发成本花在识别和纠正缺陷上,然而除了软件之外,很少有任何类型的产品在出厂时出现如此高的错误。</target>
        </trans-unit>
        <trans-unit id="b27e803e858c897a720eecea15e5bd37677e07bf" translate="yes" xml:space="preserve">
          <source>Some Git commands take options that are only used for plumbing or that are deprecated, and such options are hidden from the default usage. This option gives the full list of options.</source>
          <target state="translated">有些Git命令会使用一些只用于管道的选项,或者是一些已经废弃的选项,这些选项在默认的用法中是隐藏的。这个选项提供了完整的选项列表。</target>
        </trans-unit>
        <trans-unit id="987ad55498ef51019e6595f32f9ee9a10fb74d21" translate="yes" xml:space="preserve">
          <source>Some actions require or allow to specify two revisions, and sometimes even two pathnames. In most general form such path_info (component) based gitweb URL looks like this:</source>
          <target state="translated">有些动作需要或允许指定两个修订版,有时甚至是两个路径名。在最一般的形式下,这种基于路径_info(组件)的gitweb URL看起来像这样。</target>
        </trans-unit>
        <trans-unit id="4e1994dd201b175192ea5080be05071ba824a420" translate="yes" xml:space="preserve">
          <source>Some atoms like %(align) and %(if) always require a matching %(end). We call them &quot;opening atoms&quot; and sometimes denote them as %($open).</source>
          <target state="translated">有些原子,比如%(align)和%(if)总是需要一个匹配的%(end)。我们称它们为 &quot;开口原子&quot;,有时也将它们表示为%($open)。</target>
        </trans-unit>
        <trans-unit id="b05a87bd0e5e1c61140759ab02c7e9f3bf4a2773" translate="yes" xml:space="preserve">
          <source>Some basic familiarity with Git is required. Having gone through &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; and &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt; should be sufficient.</source>
          <target state="translated">需要对Git有一些基本的了解。通过&lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt;和&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt;应该足够了。</target>
        </trans-unit>
        <trans-unit id="61fa4c6dc6ae1d559b0a8be1b0de50848c850d66" translate="yes" xml:space="preserve">
          <source>Some changes are so trivial that it is not necessary to create a separate branch and then merge into each of the test and release branches. For these changes, just apply directly to the &lt;code&gt;release&lt;/code&gt; branch, and then merge that into the &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">某些更改是如此微不足道，以至于没有必要创建一个单独的分支然后合并到每个测试分支和发行分支中。对于这些更改，只需直接应用于 &lt;code&gt;release&lt;/code&gt; 分支，然后将其合并到 &lt;code&gt;test&lt;/code&gt; 分支即可。</target>
        </trans-unit>
        <trans-unit id="59b18808ec08d9ea8408e805bbd7fa2f7edcfa73" translate="yes" xml:space="preserve">
          <source>Some commands (e.g. svn and http interfaces) that interactively ask for a password can be told to use an external program given via the value of this variable. Can be overridden by the &lt;code&gt;GIT_ASKPASS&lt;/code&gt; environment variable. If not set, fall back to the value of the &lt;code&gt;SSH_ASKPASS&lt;/code&gt; environment variable or, failing that, a simple password prompt. The external program shall be given a suitable prompt as command-line argument and write the password on its STDOUT.</source>
          <target state="translated">可以告诉一些交互地要求输入密码的命令（例如svn和http接口），使用通过此变量的值指定的外部程序。可以被 &lt;code&gt;GIT_ASKPASS&lt;/code&gt; 环境变量覆盖。如果未设置，请退回到 &lt;code&gt;SSH_ASKPASS&lt;/code&gt; 环境变量的值，否则返回简单的密码提示。应该给外部程序适当的提示作为命令行参数，并在其STDOUT上写密码。</target>
        </trans-unit>
        <trans-unit id="c2234711ff3c27c62e0fc4ab53a0833622d8f13d" translate="yes" xml:space="preserve">
          <source>Some configuration variables control the way the &lt;code&gt;--trailer&lt;/code&gt; arguments are applied to each commit message and the way any existing trailer in the commit message is changed. They also make it possible to automatically add some trailers.</source>
          <target state="translated">一些配置变量控制 &lt;code&gt;--trailer&lt;/code&gt; 参数应用于每个提交消息的方式以及更改提交消息中任何现有的拖车的方式。它们还可以自动添加一些预告片。</target>
        </trans-unit>
        <trans-unit id="938be1fd3d7f894aaa8fcd897f4e95cd6aacc1b6" translate="yes" xml:space="preserve">
          <source>Some configuration variables have their default values (embedded in the CGI script) set during building gitweb &amp;mdash; if that is the case, this fact is put in their description. See gitweb&amp;rsquo;s &lt;code&gt;INSTALL&lt;/code&gt; file for instructions on building and installing gitweb.</source>
          <target state="translated">某些配置变量在构建gitweb时设置了默认值（嵌入CGI脚本中）-如果是这种情况，则将其放入描述中。有关构建和安装gitweb的说明，请参见gitweb的 &lt;code&gt;INSTALL&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="0d66e22fd5f2bbbc188c5b064782bc9e186f6b28" translate="yes" xml:space="preserve">
          <source>Some email servers (e.g. smtp.163.com) limit the number emails to be sent per session (connection) and this will lead to a failure when sending many messages. With this option, send-email will disconnect after sending $&amp;lt;num&amp;gt; messages and wait for a few seconds (see --relogin-delay) and reconnect, to work around such a limit. You may want to use some form of credential helper to avoid having to retype your password every time this happens. Defaults to the &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; configuration variable.</source>
          <target state="translated">某些电子邮件服务器（例如smtp.163.com）会限制每个会话（连接）发送的电子邮件数量，这会在发送许多邮件时导致失败。使用此选项，发送电子邮件将在发送$ &amp;lt;num&amp;gt;消息后断开连接，并等待几秒钟（请参阅--relogin-delay）并重新连接，以解决此限制。您可能需要使用某种形式的凭据帮助程序，以避免每次发生这种情况时都必须重新输入密码。默认为 &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; 配置变量。</target>
        </trans-unit>
        <trans-unit id="92168eb294cb53195c326d7cdc472c76b820a62e" translate="yes" xml:space="preserve">
          <source>Some features cannot be overridden per project. For those features the structure of appropriate &lt;code&gt;%feature&lt;/code&gt; hash element has a simpler form:</source>
          <target state="translated">每个项目不能覆盖某些功能。对于这些功能，适当的 &lt;code&gt;%feature&lt;/code&gt; 哈希元素的结构具有更简单的形式：</target>
        </trans-unit>
        <trans-unit id="7345fdef7f54471f79d673ac02c80817717e5d21" translate="yes" xml:space="preserve">
          <source>Some filesystems lose the executable bit when a file that is marked as executable is checked out, or checks out a non-executable file with executable bit on. &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; probe the filesystem to see if it handles the executable bit correctly and this variable is automatically set as necessary.</source>
          <target state="translated">当签出标记为可执行文件的文件或签出可执行文件位的非可执行文件时，某些文件系统会丢失可执行文件位。&lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt;或&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;探测文件系统以查看其是否正确处理了可执行位，并根据需要自动设置了此变量。</target>
        </trans-unit>
        <trans-unit id="1c65f795a263fd4e4ffc8fd7edc082e1bb01009b" translate="yes" xml:space="preserve">
          <source>Some filters will generate empty commits that leave the tree untouched. This option instructs git-filter-branch to remove such commits if they have exactly one or zero non-pruned parents; merge commits will therefore remain intact. This option cannot be used together with &lt;code&gt;--commit-filter&lt;/code&gt;, though the same effect can be achieved by using the provided &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; function in a commit filter.</source>
          <target state="translated">一些过滤器将生成空的提交，使树保持不变。这个选项指示git-filter-branch删除这样的提交，如果它们恰好具有一个或零个未修剪的父代；因此，合并提交将保持不变。尽管可以通过在提交过滤器中使用提供的 &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; 函数来实现相同的效果，但该选项不能与 &lt;code&gt;--commit-filter&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="172ca906089028fc890c646e25bab698db638084" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_fl()&lt;/code&gt; suffix to indicate that they take &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line-number&lt;/code&gt; arguments.</source>
          <target state="translated">某些函数具有 &lt;code&gt;_fl()&lt;/code&gt; 后缀，以指示它们采用 &lt;code&gt;file&lt;/code&gt; 和 &lt;code&gt;line-number&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="cf5b41401ecbf41c583b9f31bc11f9978bf853cb" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_printf_fl()&lt;/code&gt; suffix to indicate that they also take a varargs argument.</source>
          <target state="translated">某些函数具有 &lt;code&gt;_printf_fl()&lt;/code&gt; 后缀，以指示它们也采用varargs参数。</target>
        </trans-unit>
        <trans-unit id="c20fab9f2e759692fa04bbce7cef5cc908557231" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_va_fl()&lt;/code&gt; suffix to indicate that they also take a &lt;code&gt;va_list&lt;/code&gt; argument.</source>
          <target state="translated">某些函数具有 &lt;code&gt;_va_fl()&lt;/code&gt; 后缀，以指示它们也带有 &lt;code&gt;va_list&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="eba90c7cd2e8efb76a00a6ef6fd10ba0e6c2d355" translate="yes" xml:space="preserve">
          <source>Some improvements to the algorithms inside &quot;git bisect&quot; are possible and some new features could help in some cases, but overall &quot;git bisect&quot; works already very well, is used a lot, and is already very useful. To back up that last claim, let&amp;rsquo;s give the final word to Ingo Molnar when he was asked by the author how much time does he think &quot;git bisect&quot; saves him when he uses it:</source>
          <target state="translated">可以对&amp;ldquo; git bisect&amp;rdquo;内部的算法进行一些改进，并且某些情况下可以使用一些新功能，但是总体上，&amp;ldquo; git bisect&amp;rdquo;已经很好地工作了，使用了很多，并且已经非常有用。为了支持最后一个要求，让我们在作者问Ingo Molnar时说最后一句话，他认为使用git bisect可以节省多少时间：</target>
        </trans-unit>
        <trans-unit id="051a4238025a126fd35cea3d27808e1a33c19d81" translate="yes" xml:space="preserve">
          <source>Some key/value pairs are common to all events and some are event-specific.</source>
          <target state="translated">有些键/值对是所有事件共有的,有些则是特定事件。</target>
        </trans-unit>
        <trans-unit id="171887e25dc7a6bd359791fb5478731797724aa1" translate="yes" xml:space="preserve">
          <source>Some malformed strings may be accepted as valid dates. In some of these cases Git will still be able to obtain the correct date from the malformed string. There are also some types of malformed strings which Git will parse wrong, and yet consider valid. Seriously malformed strings will be rejected.</source>
          <target state="translated">有些畸形的字符串可能会被接受为有效的日期。在这种情况下,Git仍然可以从畸形的字符串中获得正确的日期。也有一些类型的畸形字符串,Git会将其解析为错误的,但仍然认为是有效的。严重畸形的字符串将被拒绝。</target>
        </trans-unit>
        <trans-unit id="783d5fee630f867a836aab31a09a1120dfa61932" translate="yes" xml:space="preserve">
          <source>Some more interesting work has been done in the upstream project, and &lt;code&gt;origin&lt;/code&gt; has advanced:</source>
          <target state="translated">在上游项目中完成了一些更有趣的工作，并且 &lt;code&gt;origin&lt;/code&gt; 有所发展：</target>
        </trans-unit>
        <trans-unit id="f3d95fe16308405a40d9c1590f99de534764e169" translate="yes" xml:space="preserve">
          <source>Some old repositories have tags without a tagger. The fast-import protocol was pretty strict about that, and did not allow that. So fake a tagger to be able to fast-import the output.</source>
          <target state="translated">一些老仓库的标签没有标签器。快速导入协议对这一点要求很严格,不允许这样。所以伪造一个标签器,才能快速导入输出。</target>
        </trans-unit>
        <trans-unit id="5f1322ce775635ebc0b366d585bc7dbdc07c75d2" translate="yes" xml:space="preserve">
          <source>Some optional features and policies</source>
          <target state="translated">一些可选的功能和政策</target>
        </trans-unit>
        <trans-unit id="184f39eeceeacf637176614462d419ff5408c775" translate="yes" xml:space="preserve">
          <source>Some other SCM systems let the user create a tag from multiple files which are not from the same commit/changeset. Or to create tags which are a subset of the files available in the repository.</source>
          <target state="translated">其他一些 SCM 系统允许用户从多个文件中创建一个标签,这些文件不是来自同一个提交/变更集。或者创建标签,这些标签是版本库中可用文件的一个子集。</target>
        </trans-unit>
        <trans-unit id="e0986df979670ad50493b8dd4aeecf085f900c18" translate="yes" xml:space="preserve">
          <source>Some other commands that also work on files in the working tree and/or in the index can take &lt;code&gt;--staged&lt;/code&gt; and/or &lt;code&gt;--worktree&lt;/code&gt;.</source>
          <target state="translated">其他一些对工作树和/或索引中的文件也起作用的命令可以采用 &lt;code&gt;--staged&lt;/code&gt; 和/或 &lt;code&gt;--worktree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e825ac68d84922615f20a915d3c1eb9e9c71680" translate="yes" xml:space="preserve">
          <source>Some placeholders may depend on other options given to the revision traversal engine. For example, the &lt;code&gt;%g*&lt;/code&gt; reflog options will insert an empty string unless we are traversing reflog entries (e.g., by &lt;code&gt;git log -g&lt;/code&gt;). The &lt;code&gt;%d&lt;/code&gt; and &lt;code&gt;%D&lt;/code&gt; placeholders will use the &quot;short&quot; decoration format if &lt;code&gt;--decorate&lt;/code&gt; was not already provided on the command line.</source>
          <target state="translated">一些占位符可能取决于赋予修订遍历引擎的其他选项。例如， &lt;code&gt;%g*&lt;/code&gt; reflog选项将插入一个空字符串，除非我们遍历reflog条目（例如，通过 &lt;code&gt;git log -g&lt;/code&gt; ）。的 &lt;code&gt;%d&lt;/code&gt; 和 &lt;code&gt;%D&lt;/code&gt; 占位符将使用&amp;ldquo;短&amp;rdquo;装饰格式如果 &lt;code&gt;--decorate&lt;/code&gt; 是不是已经提供的命令行。</target>
        </trans-unit>
        <trans-unit id="b90f1a06edbdea1cb1ea924bb534bf207be4c8cd" translate="yes" xml:space="preserve">
          <source>Some special diff options allow diffing the working directory against any of these stages:</source>
          <target state="translated">一些特殊的diff选项允许对这些阶段中的任何阶段进行工作目录的diff。</target>
        </trans-unit>
        <trans-unit id="379a99bc56f81a74676a3582df5345ad077361ae" translate="yes" xml:space="preserve">
          <source>Some workflows require that one or more branches of development on one machine be replicated on another machine, but the two machines cannot be directly connected, and therefore the interactive Git protocols (git, ssh, http) cannot be used.</source>
          <target state="translated">有些工作流程需要将一台机器上的一个或多个开发分支复制到另一台机器上,但两台机器不能直接连接,因此不能使用交互式Git协议(git、ssh、http)。</target>
        </trans-unit>
        <trans-unit id="4efa70b7553b32aea10bdaaf89e5cdb60eb1465e" translate="yes" xml:space="preserve">
          <source>Somebody asks you to pull, and the changes sound worthy of merging.</source>
          <target state="translated">有人让你拉,这些变化听起来值得合并。</target>
        </trans-unit>
        <trans-unit id="75bb6efa7b5bca1608dd13b1f00b4537d22f7537" translate="yes" xml:space="preserve">
          <source>Somebody hands you a copy of a file, and asks which commits modified a file such that it contained the given content either before or after the commit. You can find out with this:</source>
          <target state="translated">有人递给你一个文件的副本,并询问哪些提交修改了文件,使其在提交前或提交后包含了给定的内容。你可以用这个来了解。</target>
        </trans-unit>
        <trans-unit id="7ef51555538cdc5f80247933eec8146e7de62402" translate="yes" xml:space="preserve">
          <source>Someone can do a history rewrite, realize they messed up, restore from the backups in refs/original/, and then redo their git-filter-branch command. (The backup in refs/original/ is not a real backup; it dereferences tags first.)</source>
          <target state="translated">有人可以做一个历史重写,意识到自己搞砸了,从 refs/original/的备份中恢复,然后重做 git-filter-branch 命令。(refs/original/中的备份并不是真正的备份,它是先引用标签。)</target>
        </trans-unit>
        <trans-unit id="8b7568eaac49251d7ecfa53edc4f2d50e2427376" translate="yes" xml:space="preserve">
          <source>Someone can have a set of &quot;working and tested filters&quot; which they document or provide to a coworker, who then runs them on a different OS where the same commands are not working/tested (some examples in the git-filter-branch manpage are also affected by this). BSD vs. GNU userland differences can really bite. If lucky, error messages are spewed. But just as likely, the commands either don&amp;rsquo;t do the filtering requested, or silently corrupt by making some unwanted change. The unwanted change may only affect a few commits, so it&amp;rsquo;s not necessarily obvious either. (The fact that problems won&amp;rsquo;t necessarily be obvious means they are likely to go unnoticed until the rewritten history is in use for quite a while, at which point it&amp;rsquo;s really hard to justify another flag-day for another rewrite.)</source>
          <target state="translated">某人可以拥有一组&amp;ldquo;工作和经过测试的过滤器&amp;rdquo;，他们可以记录这些文件或提供给同事，然后由他们在无法运行/测试相同命令的其他OS上运行它们（git-filter-branch联机帮助页中的一些示例为也受此影响）。 BSD与GNU用户领域的差异确实可以引起人们的关注。如果幸运的话，会出现错误消息。但是很有可能，这些命令要么不执行请求的过滤，要么通过进行一些不必要的更改而无声地破坏。不需要的更改可能只影响一些提交，因此也不一定很明显。 （事实上​​，问题不一定会很明显，这意味着在重写的历史记录使用了相当长的一段时间后，问题很可能不会被注意到，在这一点上，很难为另一个重写日辩解是很困难的。）</target>
        </trans-unit>
        <trans-unit id="f6f28be0bc03c39873befbc10c61feb3cd6f09d9" translate="yes" xml:space="preserve">
          <source>Sometime later when enough time has passed and testing done, you can pull the same branch into the &lt;code&gt;release&lt;/code&gt; tree ready to go upstream. This is where you see the value of keeping each patch (or patch series) in its own branch. It means that the patches can be moved into the &lt;code&gt;release&lt;/code&gt; tree in any order.</source>
          <target state="translated">稍后，经过足够的时间并完成测试后，您可以将同一分支拉入 &lt;code&gt;release&lt;/code&gt; 树中，以准备上游。在这里，您可以看到将每个修补程序（或修补程序系列）保留在自己的分支中的价值。这意味着补丁可以以任何顺序移入 &lt;code&gt;release&lt;/code&gt; 树。</target>
        </trans-unit>
        <trans-unit id="f3de282e58de418da244c9ed4c8dec9bb8a8937a" translate="yes" xml:space="preserve">
          <source>Sometimes it happens that the current state cannot be tested, for example if it does not compile because there was a bug preventing it at that time. This is what the special exit code 125 is for. It tells &quot;git bisect run&quot; that the current commit should be marked as untestable and that another one should be chosen and checked out.</source>
          <target state="translated">有时会发生无法测试当前状态的情况,比如当时有bug阻止了它的编译,所以无法编译。这就是特殊的退出代码125的作用。它告诉 &quot;git bisect run&quot;,当前的提交应该被标记为不可测试,应该选择另一个提交进行检查。</target>
        </trans-unit>
        <trans-unit id="ab0983c0f5d9e7bd28c3834685713747f93c2919" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to see the diff of a text-converted version of some binary files. For example, a word processor document can be converted to an ASCII text representation, and the diff of the text shown. Even though this conversion loses some information, the resulting diff is useful for human viewing (but cannot be applied directly).</source>
          <target state="translated">有时,人们希望看到一些二进制文件的文本转换版本的差异。例如,一个文字处理文件可以被转换为ASCII文本表示,并显示文本的差异。尽管这种转换会损失一些信息,但产生的diff对人类的观察还是很有用的(但不能直接应用)。</target>
        </trans-unit>
        <trans-unit id="a66c6ccc61eb22dbd8fb180270521a352bb26eb7" translate="yes" xml:space="preserve">
          <source>Sometimes the thing fixed in b.2. cannot be amended to the not-quite perfect commit it fixes, because that commit is buried deeply in a patch series. That is exactly what interactive rebase is for: use it after plenty of &quot;a&quot;s and &quot;b&quot;s, by rearranging and editing commits, and squashing multiple commits into one.</source>
          <target state="translated">有时在 b.2.中修复的东西不能被修改成它所修复的不太完美的提交,因为那个提交被深深地埋在补丁系列中。这正是交互式重垒的作用:在大量的 &quot;a &quot;和 &quot;b &quot;之后,通过重新安排和编辑提交,将多个提交压成一个。</target>
        </trans-unit>
        <trans-unit id="7d8c42c4820860471a909b97a129a9232304c94a" translate="yes" xml:space="preserve">
          <source>Sometimes what you want instead is a set of patches; for this you can use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;:</source>
          <target state="translated">有时，您需要的是一组补丁。为此，您可以使用&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="abb396ee2420ccad29c3b6a0f48213b60cfe8e4f" translate="yes" xml:space="preserve">
          <source>Sometimes you are not looking for the commit that introduced a breakage, but rather for a commit that caused a change between some other &quot;old&quot; state and &quot;new&quot; state. For example, you might be looking for the commit that introduced a particular fix. Or you might be looking for the first commit in which the source-code filenames were finally all converted to your company&amp;rsquo;s naming standard. Or whatever.</source>
          <target state="translated">有时，您不是在寻找导致损坏的提交，而是在导致其他&amp;ldquo;旧&amp;rdquo;状态和&amp;ldquo;新&amp;rdquo;状态之间发生更改的提交。例如，您可能正在寻找引入了特定修复程序的提交。或者，您可能正在寻找第一次提交，其中最终将源代码文件名全部转换为公司的命名标准。管他呢。</target>
        </trans-unit>
        <trans-unit id="709d16fb784b306222cc9b75f2da6965fd037ce9" translate="yes" xml:space="preserve">
          <source>Sometimes you are only interested in parts of the history, for example the commits modifying a particular &amp;lt;path&amp;gt;. But there are two parts of &lt;code&gt;History Simplification&lt;/code&gt;, one part is selecting the commits and the other is how to do it, as there are various strategies to simplify the history.</source>
          <target state="translated">有时您只对历史的某些部分感兴趣，例如，修改特定&amp;lt;path&amp;gt;的提交。但是 &lt;code&gt;History Simplification&lt;/code&gt; 有两个部分，一个是选择提交，另一个是如何执行，因为有多种策略可以简化历史。</target>
        </trans-unit>
        <trans-unit id="3329bd14db714a1ebe54846da15c65686d4c297b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to create a new branch &lt;code&gt;without&lt;/code&gt; actually checking it out and switching to it. If so, just use the command</source>
          <target state="translated">有时您可能希望创建一个新分支， &lt;code&gt;without&lt;/code&gt; 实际签出并切换到该分支。如果是这样，只需使用命令</target>
        </trans-unit>
        <trans-unit id="9e0d77cc540587abb285618787352fd870a1def8" translate="yes" xml:space="preserve">
          <source>Sometimes you want to edit a commit deeper in your history. One approach is to use &lt;code&gt;git format-patch&lt;/code&gt; to create a series of patches and then reset the state to before the patches:</source>
          <target state="translated">有时您想在历史记录中更深入地编辑提交。一种方法是使用 &lt;code&gt;git format-patch&lt;/code&gt; 创建一系列补丁，然后将状态重置为补丁之前：</target>
        </trans-unit>
        <trans-unit id="17cc71829facf5cb6a6b321a2cbf6c64d2bc06da" translate="yes" xml:space="preserve">
          <source>Sometimes you would need to override a setting of an attribute for a path to &lt;code&gt;Unspecified&lt;/code&gt; state. This can be done by listing the name of the attribute prefixed with an exclamation point &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">有时，您需要覆盖到 &lt;code&gt;Unspecified&lt;/code&gt; 状态的路径的属性设置。这可以通过列出以感叹号为前缀的属性名称来完成 &lt;code&gt;!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18f66cee3089e3b2788a7d42c7fbfe71e8e6eab6" translate="yes" xml:space="preserve">
          <source>Sometimes, more than one builtin is contained in one source file. For example, &lt;code&gt;cmd_whatchanged()&lt;/code&gt; and &lt;code&gt;cmd_log()&lt;/code&gt; both reside in &lt;code&gt;builtin/log.c&lt;/code&gt;, since they share quite a bit of code. In that case, the commands which are &lt;code&gt;not&lt;/code&gt; named like the &lt;code&gt;.c&lt;/code&gt; file in which they live have to be listed in &lt;code&gt;BUILT_INS&lt;/code&gt; in the &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">有时，一个源文件中包含多个内置文件。例如， &lt;code&gt;cmd_whatchanged()&lt;/code&gt; 和 &lt;code&gt;cmd_log()&lt;/code&gt; 都驻留在 &lt;code&gt;builtin/log.c&lt;/code&gt; ，因为它们共享了很多代码。在这种情况下， &lt;code&gt;not&lt;/code&gt; 命名的命令（如它们所在的 &lt;code&gt;.c&lt;/code&gt; 文件）必须在 &lt;code&gt;Makefile&lt;/code&gt; 的 &lt;code&gt;BUILT_INS&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="59356e5b6f2fcc25a08169f8960c8b579beeb31f" translate="yes" xml:space="preserve">
          <source>Sometimes, you do not know where to look for a feature. In many such cases, it helps to search through the output of &lt;code&gt;git log&lt;/code&gt;, and then &lt;code&gt;git show&lt;/code&gt; the corresponding commit.</source>
          <target state="translated">有时，您不知道在哪里寻找功能。在许多情况下，它有助于搜索 &lt;code&gt;git log&lt;/code&gt; 的输出，然后 &lt;code&gt;git show&lt;/code&gt; 相应的提交。</target>
        </trans-unit>
        <trans-unit id="94a8d6cf12f26243dde0f5140dd4760ee8881bb4" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. Supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. See &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt; for more sort options, but be aware keys like &lt;code&gt;committerdate&lt;/code&gt; that require access to the objects themselves will not work for refs whose objects have not yet been fetched from the remote, and will give a &lt;code&gt;missing object&lt;/code&gt; error.</source>
          <target state="translated">根据给定的键排序。前缀 &lt;code&gt;-&lt;/code&gt; 以值的降序排序。支持&amp;ldquo;版本：refname&amp;rdquo;或&amp;ldquo; v：refname&amp;rdquo;（标记名称被视为版本）。 &amp;ldquo; version：refname&amp;rdquo;排序顺序也可能受&amp;ldquo; versionsort.suffix&amp;rdquo;配置变量影响。有关更多排序选项，请参见&lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt;，但是请注意，诸如 &lt;code&gt;committerdate&lt;/code&gt; 之类的键需要访问对象本身，这些键对于尚未从远程获取对象的ref无效，并且会 &lt;code&gt;missing object&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="4f8164295fbfdf007f932844e4ac7576dc2d1ee2" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. Also supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. The keys supported are the same as those in &lt;code&gt;git for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;tag.sort&lt;/code&gt; variable if it exists, or lexicographic order otherwise. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">根据给定的键排序。前缀 &lt;code&gt;-&lt;/code&gt; 以值的降序排序。您可以多次使用--sort = &amp;lt;key&amp;gt;选项，在这种情况下，最后一个键成为主键。还支持&amp;ldquo;版本：refname&amp;rdquo;或&amp;ldquo; v：refname&amp;rdquo;（标记名称被视为版本）。 &amp;ldquo; version：refname&amp;rdquo;排序顺序也可能受&amp;ldquo; versionsort.suffix&amp;rdquo;配置变量影响。支持的键与 &lt;code&gt;git for-each-ref&lt;/code&gt; 中的键相同。排序顺序默认为为 &lt;code&gt;tag.sort&lt;/code&gt; 变量配置的值（如果存在），否则为字典顺序。参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="235c15477db9421be496a9bdb61ee9fe5440e8e8" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. The keys supported are the same as those in &lt;code&gt;git
for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;branch.sort&lt;/code&gt; variable if exists, or to sorting based on the full refname (including &lt;code&gt;refs/...&lt;/code&gt; prefix). This lists detached HEAD (if present) first, then local branches and finally remote-tracking branches. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">根据给定的键排序。前缀 &lt;code&gt;-&lt;/code&gt; 以值的降序排序。您可以多次使用--sort = &amp;lt;key&amp;gt;选项，在这种情况下，最后一个键成为主键。支持的键与 &lt;code&gt;git for-each-ref&lt;/code&gt; 的键相同。排序顺序默认为为 &lt;code&gt;branch.sort&lt;/code&gt; 变量配置的值（如果存在），或者默认为基于完整的refname（包括 &lt;code&gt;refs/...&lt;/code&gt; 前缀）进行排序。这首先列出了分离的HEAD（如果存在），然后列出了本地分支，最后列出了远程跟踪分支。参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f1523e64bd22fd24a21f855bbd22c50e1efc550" translate="yes" xml:space="preserve">
          <source>Sort commits by date when possible.</source>
          <target state="translated">尽可能按日期排序提交。</target>
        </trans-unit>
        <trans-unit id="2c6b9826784b28663433b0a6dc2f2674e6b29a9a" translate="yes" xml:space="preserve">
          <source>Sort output according to the number of commits per author instead of author alphabetic order.</source>
          <target state="translated">根据每个作者的提交次数来排序,而不是按照作者的字母顺序。</target>
        </trans-unit>
        <trans-unit id="97d057704ff7369f19e3dfc333c10a22925317f1" translate="yes" xml:space="preserve">
          <source>Sorting and filtering branches are case insensitive.</source>
          <target state="translated">排序和过滤分支不区分大小写。</target>
        </trans-unit>
        <trans-unit id="5ce7d777697e6536cabaa9eaf03abf69552dd696" translate="yes" xml:space="preserve">
          <source>Sorting and filtering refs are case insensitive.</source>
          <target state="translated">排序和过滤参考文献是不区分大小写的。</target>
        </trans-unit>
        <trans-unit id="9d38ff15fbd7490d8843677184f9c7afbcdf73ce" translate="yes" xml:space="preserve">
          <source>Sorting and filtering tags are case insensitive.</source>
          <target state="translated">排序和过滤标签是不分大小写的。</target>
        </trans-unit>
        <trans-unit id="74d012567bc749743b2f7f680471d74e8b0444d4" translate="yes" xml:space="preserve">
          <source>Source code management (tool).</source>
          <target state="translated">源码管理(工具)。</target>
        </trans-unit>
        <trans-unit id="36b1651cdc36dfe13b6c0271ea5052804f0ae0c9" translate="yes" xml:space="preserve">
          <source>Sparse checkout</source>
          <target state="translated">稀疏的结账</target>
        </trans-unit>
        <trans-unit id="7aaf15f27eda1de7eaf7b123729519d3afe58336" translate="yes" xml:space="preserve">
          <source>Specifically, the following are removed until none of them remain:</source>
          <target state="translated">具体来说,就是将以下内容删除,直到一个都不剩。</target>
        </trans-unit>
        <trans-unit id="6fb30b05a9f660538f592f3613160c9d3d393240" translate="yes" xml:space="preserve">
          <source>Specified branch is an ancestor of the remote HEAD</source>
          <target state="translated">指定的分支是远程HEAD的祖先。</target>
        </trans-unit>
        <trans-unit id="095f9fffc528a2b593b5d023d80910beab9fba54" translate="yes" xml:space="preserve">
          <source>Specified branch resolves to an object that exists locally</source>
          <target state="translated">指定的分支解析到本地存在的对象。</target>
        </trans-unit>
        <trans-unit id="8bd7d2d739debb36a1057aa4a730675102718bfe" translate="yes" xml:space="preserve">
          <source>Specifies a port different from the default port (SMTP servers typically listen to smtp port 25, but may also listen to submission port 587, or the common SSL smtp port 465); symbolic port names (e.g. &quot;submission&quot; instead of 587) are also accepted. The port can also be set with the &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; configuration variable.</source>
          <target state="translated">指定与默认端口不同的端口（SMTP服务器通常侦听smtp端口25，但也可能侦听提交端口587或公共SSL smtp端口465）；也接受符号端口名（例如，&amp;ldquo; submission&amp;rdquo;代替587）。也可以使用 &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; 配置变量来设置端口。</target>
        </trans-unit>
        <trans-unit id="07c63275a8584ac825542ccb56fd0f5b3bf25b5a" translate="yes" xml:space="preserve">
          <source>Specifies compression level for newly-compressed data in the generated pack. If not specified, pack compression level is determined first by pack.compression, then by core.compression, and defaults to -1, the zlib default, if neither is set. Add --no-reuse-object if you want to force a uniform compression level on all data no matter the source.</source>
          <target state="translated">为生成的压缩包中新压缩的数据指定压缩级别。如果没有指定,压缩包的压缩级别首先由pack.compression决定,然后由core.compression决定,如果两者都没有设置,则默认为-1,即zlib默认值。如果你想在所有数据上强制使用统一的压缩级别,不管数据源是什么,可以添加--no-reuse-object。</target>
        </trans-unit>
        <trans-unit id="2e586cba19f8fbc5a10baac47fbd5c9e37781d67" translate="yes" xml:space="preserve">
          <source>Specifies how a merge is handled when the merged-in history is already a descendant of the current history. &lt;code&gt;--ff&lt;/code&gt; is the default unless merging an annotated (and possibly signed) tag that is not stored in its natural place in the &lt;code&gt;refs/tags/&lt;/code&gt; hierarchy, in which case &lt;code&gt;--no-ff&lt;/code&gt; is assumed.</source>
          <target state="translated">指定当合并的历史记录已经是当前历史记录的后代时，如何处理合并。除非合并未存储在 &lt;code&gt;refs/tags/&lt;/code&gt; 层次结构中其自然位置的带注释（且可能带有符号）的标记，否则默认为 &lt;code&gt;--ff&lt;/code&gt; ，在这种情况下，假定为 &lt;code&gt;--no-ff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e4cfa4b695628b655fba3d437b2ed50df8c7399" translate="yes" xml:space="preserve">
          <source>Specifies how many context lines should be used in calls to diff made by the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. The default is &quot;5&quot;.</source>
          <target state="translated">指定在&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt;进行的diff调用中应使用多少个上下文行。默认值为&amp;ldquo; 5&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ee05d66bfede680eae8d8ce792188074b5498ff4" translate="yes" xml:space="preserve">
          <source>Specifies how many submodules are fetched/cloned at the same time. A positive integer allows up to that number of submodules fetched in parallel. A value of 0 will give some reasonable default. If unset, it defaults to 1.</source>
          <target state="translated">指定同时取回/克隆多少个子模块。一个正的整数允许最多并行获取该数量的子模块。0的值会给出一些合理的默认值。如果未设置,默认为1。</target>
        </trans-unit>
        <trans-unit id="316fa49ea084b12859b1b97d79b0376bed50442d" translate="yes" xml:space="preserve">
          <source>Specifies how the submodules obtain alternates when submodules are cloned. Possible values are &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;superproject&lt;/code&gt;. By default &lt;code&gt;no&lt;/code&gt; is assumed, which doesn&amp;rsquo;t add references. When the value is set to &lt;code&gt;superproject&lt;/code&gt; the submodule to be cloned computes its alternates location relative to the superprojects alternate.</source>
          <target state="translated">指定在克隆子模块时子模块如何获取备用模块。可能的值是 &lt;code&gt;no&lt;/code&gt; ， &lt;code&gt;superproject&lt;/code&gt; 。默认情况下，假定为 &lt;code&gt;no&lt;/code&gt; ，它不添加引用。当将该值设置为 &lt;code&gt;superproject&lt;/code&gt; ，要克隆的子模块将计算其相对于超级项目替代项的替代位置。</target>
        </trans-unit>
        <trans-unit id="b31fc36154a26e26a1c078ebba51ee8a4995b30b" translate="yes" xml:space="preserve">
          <source>Specifies how to treat errors with the alternates for a submodule as computed via &lt;code&gt;submodule.alternateLocation&lt;/code&gt;. Possible values are &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;die&lt;/code&gt;. Default is &lt;code&gt;die&lt;/code&gt;. Note that if set to &lt;code&gt;ignore&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt;, and if there is an error with the computed alternate, the clone proceeds as if no alternate was specified.</source>
          <target state="translated">指定如何处理通过 &lt;code&gt;submodule.alternateLocation&lt;/code&gt; 计算的子模块的替代错误。可能的值是 &lt;code&gt;ignore&lt;/code&gt; ， &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;die&lt;/code&gt; 。默认值为 &lt;code&gt;die&lt;/code&gt; 。请注意，如果将其设置为 &lt;code&gt;ignore&lt;/code&gt; 或 &lt;code&gt;info&lt;/code&gt; ，并且计算的替代项出现错误，则克隆将继续进行，就像未指定替代项一样。</target>
        </trans-unit>
        <trans-unit id="be724c0999a6ad4178618a1619dc5ee566f604f6" translate="yes" xml:space="preserve">
          <source>Specifies if commands recurse into submodules by default. This applies to all commands that have a &lt;code&gt;--recurse-submodules&lt;/code&gt; option, except &lt;code&gt;clone&lt;/code&gt;. Defaults to false.</source>
          <target state="translated">指定默认情况下命令是否递归到子模块中。这适用于所有具有 &lt;code&gt;--recurse-submodules&lt;/code&gt; 选项的命令， &lt;code&gt;clone&lt;/code&gt; 除外。默认为false。</target>
        </trans-unit>
        <trans-unit id="4a0da697fa597c14275c00dd14541ab0c3dfd994" translate="yes" xml:space="preserve">
          <source>Specifies the Fully Qualified Domain Name (FQDN) used in the HELO/EHLO command to the SMTP server. Some servers require the FQDN to match your IP address. If not set, git send-email attempts to determine your FQDN automatically. Default is the value of &lt;code&gt;sendemail.smtpDomain&lt;/code&gt;.</source>
          <target state="translated">指定在SMTP服务器的HELO / EHLO命令中使用的完全限定域名（FQDN）。某些服务器需要FQDN来匹配您的IP地址。如果未设置，则git send-email会尝试自动确定您的FQDN。默认值为 &lt;code&gt;sendemail.smtpDomain&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="5037aaf03dca1f2f538183f1496bfc2b7e1efabf" translate="yes" xml:space="preserve">
          <source>Specifies the default encoding to use for displaying of file contents in &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; and &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt;. It can be overridden by setting the &lt;code&gt;encoding&lt;/code&gt; attribute for relevant files (see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;). If this option is not set, the tools default to the locale encoding.</source>
          <target state="translated">指定用于在&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt;和&lt;a href=&quot;gitk&quot;&gt;gitk [1]中&lt;/a&gt;显示文件内容的默认编码。可以通过设置相关文件的 &lt;code&gt;encoding&lt;/code&gt; 属性来覆盖它（请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;）。如果未设置此选项，则工具默认为区域设置编码。</target>
        </trans-unit>
        <trans-unit id="8d7b044fb5611f2bdd400a7d800ea730223f6289" translate="yes" xml:space="preserve">
          <source>Specifies the dictionary used for spell checking commit messages in the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. When set to &quot;none&quot; spell checking is turned off.</source>
          <target state="translated">在&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]中&lt;/a&gt;指定用于拼写检查提交消息的字典。设置为&amp;ldquo; none&amp;rdquo;时，将关闭拼写检查。</target>
        </trans-unit>
        <trans-unit id="d083f984efe9263940e7d58fa993a7931f1dd65f" translate="yes" xml:space="preserve">
          <source>Specifies the encoding used to output author names and commit summaries. Setting it to &lt;code&gt;none&lt;/code&gt; makes blame output unconverted data. For more information see the discussion about encoding in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; manual page.</source>
          <target state="translated">指定用于输出作者姓名和提交摘要的编码。将其设置为 &lt;code&gt;none&lt;/code&gt; 会使非输出未转换的数据。有关更多信息，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;手册页中有关编码的讨论。</target>
        </trans-unit>
        <trans-unit id="a27599ead22294e56acfe0afc5fbf545479773f2" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. If unset the iso format is used. For supported values, see the discussion of the &lt;code&gt;--date&lt;/code&gt; option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">指定用于在&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]中&lt;/a&gt;输出日期的格式。如果未设置，则使用iso格式。有关受支持的值，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;上有关 &lt;code&gt;--date&lt;/code&gt; 选项的讨论。</target>
        </trans-unit>
        <trans-unit id="08d91dd5a7053d3bafb0000dd55ac78c15731e93" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates. If --date is not provided, the value of the blame.date config variable is used. If the blame.date config variable is also not set, the iso format is used. For supported values, see the discussion of the --date option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">指定用于输出日期的格式。如果未提供--date，则使用blame.date配置变量的值。如果也未设置blame.date配置变量，则使用iso格式。有关受支持的值，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;上有关--date选项的讨论。</target>
        </trans-unit>
        <trans-unit id="08b582fd23612321f471de0a5131383c71313dc1" translate="yes" xml:space="preserve">
          <source>Specifies the general prompt string to display at the top of the dialog, before subsections for &lt;code&gt;argPrompt&lt;/code&gt; and &lt;code&gt;revPrompt&lt;/code&gt;. The default value includes the actual command.</source>
          <target state="translated">指定在 &lt;code&gt;argPrompt&lt;/code&gt; 和 &lt;code&gt;revPrompt&lt;/code&gt; 的小节之前显示在对话框顶部的常规提示字符串。默认值包括实际命令。</target>
        </trans-unit>
        <trans-unit id="a9e526c09a4c4719d9406e0b96ea75a516e14797" translate="yes" xml:space="preserve">
          <source>Specifies the maximal number of fetch operations to be run in parallel at a time (submodules, or remotes when the &lt;code&gt;--multiple&lt;/code&gt; option of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; is in effect).</source>
          <target state="translated">指定一次并行运行的最大提取操作数（当&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;的 &lt;code&gt;--multiple&lt;/code&gt; 选项生效时，子模块或远程）。</target>
        </trans-unit>
        <trans-unit id="841aeff1992a5e30906fb04c48bd487428f81ede" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when loading the index. This is meant to reduce index load time on multiprocessor machines. Specifying 0 or &lt;code&gt;true&lt;/code&gt; will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly. Specifying 1 or &lt;code&gt;false&lt;/code&gt; will disable multithreading. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">指定加载索引时要产生的线程数。这是为了减少多处理器计算机上的索引加载时间。指定0或 &lt;code&gt;true&lt;/code&gt; 将导致Git自动检测CPU的数量并相应地设置线程数。指定1或 &lt;code&gt;false&lt;/code&gt; 将禁用多线程。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1edc546a8b44445b5552ac6cb04ae2f0f6c55a7" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when resolving deltas. This requires that index-pack be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and use maximum 3 threads.</source>
          <target state="translated">指定解决增量时要产生的线程数。这要求使用pthreads编译index-pack，否则该选项将被警告忽略。这是为了减少多处理器机器上的打包时间。但是，增量搜索窗口所需的内存量将乘以线程数。指定0将导致Git自动检测CPU的数量并最多使用3个线程。</target>
        </trans-unit>
        <trans-unit id="62a88cce2e4d60d8d3773b73f0efea252799f6cf" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">指定搜索最佳增量匹配时要产生的线程数。这要求使用pthreads编译&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;，否则此选项将被警告忽略。这是为了减少多处理器机器上的打包时间。但是，增量搜索窗口所需的内存量将乘以线程数。指定0将导致Git自动检测CPU的数量并相应地设置线程数。</target>
        </trans-unit>
        <trans-unit id="b8f98a607312c9ba066372345125a9cb60221982" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that pack-objects be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">指定搜索最佳增量匹配时要产生的线程数。这要求使用pthreads编译pack-objects，否则此选项将被警告忽略。这是为了减少多处理器机器上的打包时间。但是，增量搜索窗口所需的内存量将乘以线程数。指定0将导致Git自动检测CPU的数量并相应地设置线程数。</target>
        </trans-unit>
        <trans-unit id="a17b7410705517c5284c60d4c1158e205890521a" translate="yes" xml:space="preserve">
          <source>Specifies the number of times to retry a p4 command (notably, &lt;code&gt;p4 sync&lt;/code&gt;) if the network times out. The default value is 3. Set the value to 0 to disable retries or if your p4 version does not support retries (pre 2012.2).</source>
          <target state="translated">指定在网络超时时重试p4命令的次数（特别是 &lt;code&gt;p4 sync&lt;/code&gt; ）。默认值为3。将值设置为0可禁用重试，或者您的p4版本不支持重试（2012.2之前的版本）。</target>
        </trans-unit>
        <trans-unit id="0ebc03abb12118370c422382dc91c5979f3d39ba" translate="yes" xml:space="preserve">
          <source>Specifies the pathname to the file that contains patterns to describe paths that are not meant to be tracked, in addition to &lt;code&gt;.gitignore&lt;/code&gt; (per-directory) and &lt;code&gt;.git/info/exclude&lt;/code&gt;. Defaults to &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt;. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is either not set or empty, &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; is used instead. See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;.</source>
          <target state="translated">指定文件的路径名，除了 &lt;code&gt;.gitignore&lt;/code&gt; （按目录）和 &lt;code&gt;.git/info/exclude&lt;/code&gt; 之外，该文件还包含描述不应该跟踪的路径的模式的文件。默认为 &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt; 。如果 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 未设置或为空，则改用 &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; 。参见&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d124e54be4e690b62098ac284ac76a08ab37106b" translate="yes" xml:space="preserve">
          <source>Specifies the radius of history context in days to show in &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt; for the selected commit, when the &lt;code&gt;Show History
Context&lt;/code&gt; menu item is invoked from &lt;code&gt;git gui blame&lt;/code&gt;. If this variable is set to zero, the whole history is shown.</source>
          <target state="translated">指定当从 &lt;code&gt;git gui blame&lt;/code&gt; 调用 &lt;code&gt;Show History Context&lt;/code&gt; 菜单项时，以天为单位的历史上下文的半径，以天为单位显示在&lt;a href=&quot;gitk&quot;&gt;gitk [1]&lt;/a&gt;中。如果将此变量设置为零，则显示整个历史记录。</target>
        </trans-unit>
        <trans-unit id="f11e5547d2e0c72dd049c0935b29638a6ee69cf3" translate="yes" xml:space="preserve">
          <source>Specifies the shell command line to execute when the corresponding item of the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;&lt;code&gt;Tools&lt;/code&gt; menu is invoked. This option is mandatory for every tool. The command is executed from the root of the working directory, and in the environment it receives the name of the tool as &lt;code&gt;GIT_GUITOOL&lt;/code&gt;, the name of the currently selected file as &lt;code&gt;FILENAME&lt;/code&gt;, and the name of the current branch as &lt;code&gt;CUR_BRANCH&lt;/code&gt; (if the head is detached, &lt;code&gt;CUR_BRANCH&lt;/code&gt; is empty).</source>
          <target state="translated">指定当调用&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&amp;ldquo; &lt;/a&gt; &lt;code&gt;Tools&lt;/code&gt; 菜单的相应项时要执行的shell命令行。对于每个工具，此选项都是必需的。该命令从工作目录的根目录执行，在该环境中，该工具的名称为 &lt;code&gt;GIT_GUITOOL&lt;/code&gt; ，当前所选文件的名称为 &lt;code&gt;FILENAME&lt;/code&gt; ，当前分支的名称为 &lt;code&gt;CUR_BRANCH&lt;/code&gt; （如果头为分离， &lt;code&gt;CUR_BRANCH&lt;/code&gt; 为空）。</target>
        </trans-unit>
        <trans-unit id="b9843bcfef468e8924053c3490935a52737f70b4" translate="yes" xml:space="preserve">
          <source>Specifies the threshold to use in &lt;code&gt;git gui blame&lt;/code&gt; original location detection, measured in alphanumeric characters. See the &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt; manual for more information on copy detection.</source>
          <target state="translated">指定在 &lt;code&gt;git gui blame&lt;/code&gt; 原始位置检测中使用的阈值，以字母数字字符度量。有关复制检测的更多信息，请参见&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;手册。</target>
        </trans-unit>
        <trans-unit id="35d941c623037130ce3eda15ee67700140f974b9" translate="yes" xml:space="preserve">
          <source>Specifies the title to use for the prompt dialog. The default is the tool name.</source>
          <target state="translated">指定提示对话框的标题。默认为工具名称。</target>
        </trans-unit>
        <trans-unit id="52c4a2a4dc795a08ca1c6e643c489de2ec8bd5e5" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;End Of Index Entry&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring EOIE extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定索引文件是否应包含&amp;ldquo;索引条目末尾&amp;rdquo;部分。这样可以减少多处理器计算机上索引的加载时间，但是在使用2.20之前的Git版本读取索引时会生成一条消息&amp;ldquo;忽略EOIE扩展&amp;rdquo;。如果已明确启用index.threads，则默认为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="525e2825828b98c76d10ccc05a720012cdd9968e" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;Index Entry Offset Table&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring IEOT extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定索引文件是否应包含&amp;ldquo;索引条目偏移表&amp;rdquo;部分。这减少了多处理器计算机上的索引加载时间，但是当使用2.20之前的Git版本读取索引时，会生成一条消息&amp;ldquo;忽略IEOT扩展&amp;rdquo;。如果已明确启用index.threads，则默认为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fdd8a31fc755f041d294b5f0a76be847216c212" translate="yes" xml:space="preserve">
          <source>Specifies which key format to use when signing with &lt;code&gt;--gpg-sign&lt;/code&gt;. Default is &quot;openpgp&quot; and another possible value is &quot;x509&quot;.</source>
          <target state="translated">指定使用 &lt;code&gt;--gpg-sign&lt;/code&gt; 签名时使用的密钥格式。默认值为&amp;ldquo; openpgp&amp;rdquo;，另一个可能的值为&amp;ldquo; x509&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="53399059f89e05e568d5d0da51714e4798f56246" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;#CRTB&quot;&gt;CONFIGURED REMOTE-TRACKING BRANCHES&lt;/a&gt; below).</source>
          <target state="translated">指定要获取的参考和要更新的本地参考。如果命令行上没有&amp;lt;refspec&amp;gt;出现，则从 &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 变量中读取要获取的ref （请参阅下面的&lt;a href=&quot;#CRTB&quot;&gt;CONFIGURED REMOTE-TRACKING BRANCHES&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="60264eae7c0d99030432a57153dd31a20ae2e753" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;).</source>
          <target state="translated">指定要获取的参考和要更新的本地参考。当命令行上没有&amp;lt;refspec&amp;gt;出现时，要从 &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 变量读取要提取的ref （请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="12c5a4fe1da6e3ddd052994379342b3963b9ece6" translate="yes" xml:space="preserve">
          <source>Specify a &quot;Bcc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.bcc&lt;/code&gt;.</source>
          <target state="translated">为每封电子邮件指定一个&amp;ldquo;密件抄送：&amp;rdquo;值。默认值为 &lt;code&gt;sendemail.bcc&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="490afafb9292b82bc6ff88488dc739661601f0fb" translate="yes" xml:space="preserve">
          <source>Specify a (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair that should be applied as a trailer to the input messages. See the description of this command.</source>
          <target state="translated">指定一个（&amp;lt;token&amp;gt;，&amp;lt;value&amp;gt;）对，该对应作为预告片应用于输入消息。请参阅此命令的描述。</target>
        </trans-unit>
        <trans-unit id="fda787c4a6303bd8c4899e47b2fd75ed69b102b2" translate="yes" xml:space="preserve">
          <source>Specify a comma separate list of common whitespace problems to notice in the same format as the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable.</source>
          <target state="translated">指定逗号分隔的常见空格问题列表，以与 &lt;code&gt;core.whitespace&lt;/code&gt; 配置变量相同的格式注意。</target>
        </trans-unit>
        <trans-unit id="f01423252b19025369d9eaeaea940daec72c630e" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;Cc:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.ccCmd&lt;/code&gt; configuration value.</source>
          <target state="translated">指定每个修补程序文件执行一次的命令，该命令应生成特定于修补程序文件的&amp;ldquo; Cc：&amp;rdquo;条目。此命令的输出必须是每行一个电子邮件地址。默认值为 &lt;code&gt;sendemail.ccCmd&lt;/code&gt; 配置值。</target>
        </trans-unit>
        <trans-unit id="8a69aa64125bc041f34a0988fcc820e93ea1cefe" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;To:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.tocmd&lt;/code&gt; configuration value.</source>
          <target state="translated">指定每个补丁文件执行一次的命令，该命令应生成补丁文件特定的&amp;ldquo; To：&amp;rdquo;条目。此命令的输出必须是每行一个电子邮件地址。默认值为 &lt;code&gt;sendemail.tocmd&lt;/code&gt; 配置值。</target>
        </trans-unit>
        <trans-unit id="f6cbbfb6d081efa8553064ef51812c93149ccd37" translate="yes" xml:space="preserve">
          <source>Specify a custom command for viewing diffs. &lt;code&gt;git-difftool&lt;/code&gt; ignores the configured defaults and runs &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; when this option is specified. Additionally, &lt;code&gt;$BASE&lt;/code&gt; is set in the environment.</source>
          <target state="translated">指定用于查看差异的自定义命令。 &lt;code&gt;git-difftool&lt;/code&gt; 忽略配置的默认值，并在指定此选项时运行 &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; 。此外，在环境中设置了 &lt;code&gt;$BASE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8f61e37f968bf27d42f1bb30c54e88a19aa0b4c" translate="yes" xml:space="preserve">
          <source>Specify a starting &quot;Cc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.cc&lt;/code&gt;.</source>
          <target state="translated">为每封电子邮件指定一个起始的&amp;ldquo;抄送：&amp;rdquo;值。默认值为 &lt;code&gt;sendemail.cc&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="d751165243a07b0d8cf01d157a40d624e1274cc2" translate="yes" xml:space="preserve">
          <source>Specify a web browser that may be used by some commands. Currently only &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; and &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; may use it.</source>
          <target state="translated">指定某些命令可能使用的Web浏览器。目前只有&lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt;和&lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt;可以使用它。</target>
        </trans-unit>
        <trans-unit id="3184d8ec3f5fc0c7b49c79eaaa392759be7aeb74" translate="yes" xml:space="preserve">
          <source>Specify an additional category of recipients to suppress the auto-cc of:</source>
          <target state="translated">指定一个额外的收件人类别,以抑制自动接收。</target>
        </trans-unit>
        <trans-unit id="6c3bb30f438f4e33cf02f17fe7e170959d2a5bad" translate="yes" xml:space="preserve">
          <source>Specify an external helper to be called when a username or password credential is needed; the helper may consult external storage to avoid prompting the user for the credentials. Note that multiple helpers may be defined. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for details.</source>
          <target state="translated">指定需要用户名或密码凭据时要调用的外部帮助程序；帮助程序可以咨询外部存储，以避免提示用户输入凭据。注意，可以定义多个助手。有关详细信息，请参见&lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88abf188bf279fdc57952e5f78070fe3d6b977d1" translate="yes" xml:space="preserve">
          <source>Specify an island name which gets to have its objects be packed first. This creates a kind of pseudo-pack at the front of one pack, so that the objects from the specified island are hopefully faster to copy into any pack that should be served to a user requesting these objects. In practice this means that the island specified should likely correspond to what is the most commonly cloned in the repo. See also &quot;DELTA ISLANDS&quot; in &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">指定一个岛名，该岛名首先要打包。这会在一个包的最前面创建一种伪包，以便希望将来自指定岛的对象更快地复制到应提供给请求这些对象的用户的任何包中。实际上，这意味着指定的岛可能应该对应于回购中最常克隆的岛。另请参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]中的&lt;/a&gt; &amp;ldquo; DELTA ISLANDS&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="4f4ddca39682ecb94c54d4e5428623a9fabd67c0" translate="yes" xml:space="preserve">
          <source>Specify any of the options listed under OPTIONS that do not change stream semantic to suit the frontend&amp;rsquo;s needs. This command is optional and is not needed to perform an import.</source>
          <target state="translated">指定&amp;ldquo;选项&amp;rdquo;下列出的任何选项，这些选项不会更改流语义以适应前端的需求。该命令是可选的，不需要执行导入。</target>
        </trans-unit>
        <trans-unit id="126df40ac6c274763f2820bec126088754eb50a7" translate="yes" xml:space="preserve">
          <source>Specify authenticate method for authentication with IMAP server. If Git was built with the NO_CURL option, or if your curl version is older than 7.34.0, or if you&amp;rsquo;re running git-imap-send with the &lt;code&gt;--no-curl&lt;/code&gt; option, the only supported method is &lt;code&gt;CRAM-MD5&lt;/code&gt;. If this is not set then &lt;code&gt;git imap-send&lt;/code&gt; uses the basic IMAP plaintext LOGIN command.</source>
          <target state="translated">指定用于使用IMAP服务器进行身份验证的身份验证方法。如果Git是使用NO_CURL选项构建的，或者您的curl版本早于7.34.0，或者如果您使用 &lt;code&gt;--no-curl&lt;/code&gt; 选项运行git-imap-send ，则唯一受支持的方法是 &lt;code&gt;CRAM-MD5&lt;/code&gt; 。如果未设置，则 &lt;code&gt;git imap-send&lt;/code&gt; 使用基本的IMAP纯文本LOGIN命令。</target>
        </trans-unit>
        <trans-unit id="db15aaae21c1056154eef62ce5f5cbd5e82beaa7" translate="yes" xml:space="preserve">
          <source>Specify encoding of compose message. Default is the value of the &lt;code&gt;sendemail.composeencoding&lt;/code&gt;; if that is unspecified, UTF-8 is assumed.</source>
          <target state="translated">指定撰写邮件的编码。默认值为 &lt;code&gt;sendemail.composeencoding&lt;/code&gt; 的值；如果未指定，则假定为UTF-8。</target>
        </trans-unit>
        <trans-unit id="bb2c4dacdd5136c6abef6fcc4de5e9c24a473010" translate="yes" xml:space="preserve">
          <source>Specify how differences in submodules are shown. When specifying &lt;code&gt;--submodule=short&lt;/code&gt; the &lt;code&gt;short&lt;/code&gt; format is used. This format just shows the names of the commits at the beginning and end of the range. When &lt;code&gt;--submodule&lt;/code&gt; or &lt;code&gt;--submodule=log&lt;/code&gt; is specified, the &lt;code&gt;log&lt;/code&gt; format is used. This format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. When &lt;code&gt;--submodule=diff&lt;/code&gt; is specified, the &lt;code&gt;diff&lt;/code&gt; format is used. This format shows an inline diff of the changes in the submodule contents between the commit range. Defaults to &lt;code&gt;diff.submodule&lt;/code&gt; or the &lt;code&gt;short&lt;/code&gt; format if the config option is unset.</source>
          <target state="translated">指定如何显示子模块中的差异。指定 &lt;code&gt;--submodule=short&lt;/code&gt; 时，使用 &lt;code&gt;short&lt;/code&gt; 格式。此格式仅显示范围开头和结尾的提交名称。当 &lt;code&gt;--submodule&lt;/code&gt; 或 &lt;code&gt;--submodule=log&lt;/code&gt; 被指定时，该 &lt;code&gt;log&lt;/code&gt; 用于格式。这种格式列出了&lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; 所做的范围内的提交。当指定 &lt;code&gt;--submodule=diff&lt;/code&gt; 时，将使用 &lt;code&gt;diff&lt;/code&gt; 格式。此格式显示提交范围之间子模块内容更改的内联差异。默认为 &lt;code&gt;diff.submodule&lt;/code&gt; 或 &lt;code&gt;short&lt;/code&gt; 如果未设置config选项，则设置格式。</target>
        </trans-unit>
        <trans-unit id="e212f603460a2824026571f0244622b2735e495f" translate="yes" xml:space="preserve">
          <source>Specify how multiple patterns are combined using Boolean expressions. &lt;code&gt;--or&lt;/code&gt; is the default operator. &lt;code&gt;--and&lt;/code&gt; has higher precedence than &lt;code&gt;--or&lt;/code&gt;. &lt;code&gt;-e&lt;/code&gt; has to be used for all patterns.</source>
          <target state="translated">指定如何使用布尔表达式组合多个模式。 &lt;code&gt;--or&lt;/code&gt; 为默认运算符。 &lt;code&gt;--and&lt;/code&gt; 的优先级高于 &lt;code&gt;--or&lt;/code&gt; 。 &lt;code&gt;-e&lt;/code&gt; 必须用于所有模式。</target>
        </trans-unit>
        <trans-unit id="ffbe8c6ac43df98980b6107e62dec3dfa7156507" translate="yes" xml:space="preserve">
          <source>Specify how to handle &lt;code&gt;encoding&lt;/code&gt; header in commit objects. When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering such a commit object. With &lt;code&gt;yes&lt;/code&gt;, the commit message will be re-encoded into UTF-8. With &lt;code&gt;no&lt;/code&gt;, the original encoding will be preserved.</source>
          <target state="translated">指定如何处理提交对象中的 &lt;code&gt;encoding&lt;/code&gt; 标头。当要求 &lt;code&gt;abort&lt;/code&gt; （默认）时，该程序将在遇到此类提交对象时死亡。使用 &lt;code&gt;yes&lt;/code&gt; ，提交消息将被重新编码为UTF-8。如果使用 &lt;code&gt;no&lt;/code&gt; ，则将保留原始编码。</target>
        </trans-unit>
        <trans-unit id="37815a435af244972cccaee7f12b140bf366ab25" translate="yes" xml:space="preserve">
          <source>Specify how to handle signed tags. Since any transformation after the export can change the tag names (which can also happen when excluding revisions) the signatures will not match.</source>
          <target state="translated">指定如何处理已签名的标记。由于导出后的任何转换都可以更改标签名称(排除修订版时也会发生),签名将不匹配。</target>
        </trans-unit>
        <trans-unit id="2e5b9b1beb3e649edbd3450c18f18cbc2b0b3c2a" translate="yes" xml:space="preserve">
          <source>Specify how to handle tags whose tagged object is filtered out. Since revisions and files to export can be limited by path, tagged objects may be filtered completely.</source>
          <target state="translated">指定如何处理标签对象被过滤掉的标签。由于修订版和要导出的文件可受路径限制,所以标记对象可能会被完全过滤掉。</target>
        </trans-unit>
        <trans-unit id="58a10039b2ffb00f4c15d28cf7a59fdf8252b1ba" translate="yes" xml:space="preserve">
          <source>Specify layout mode. See configuration variable column.ui for option syntax in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">指定布局模式。有关&lt;a href=&quot;git-config&quot;&gt;git-config [1]中的&lt;/a&gt;选项语法，请参见配置变量column.ui 。</target>
        </trans-unit>
        <trans-unit id="cd9fc5283ae0d7709eafb7d7c044a946ec4a926f" translate="yes" xml:space="preserve">
          <source>Specify submit behavior when a conflict with p4 is found, as per --conflict. The default behavior is &lt;code&gt;ask&lt;/code&gt;.</source>
          <target state="translated">当发现与p4发生冲突时，请按照--conflict指定提交行为。默认行为是 &lt;code&gt;ask&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b47b0eac1308c340a251aaa9bc02b368f9e6ec9" translate="yes" xml:space="preserve">
          <source>Specify that the Git repository is to be shared amongst several users. This allows users belonging to the same group to push into that repository. When specified, the config variable &quot;core.sharedRepository&quot; is set so that files and directories under &lt;code&gt;$GIT_DIR&lt;/code&gt; are created with the requested permissions. When not specified, Git will use permissions reported by umask(2).</source>
          <target state="translated">指定要在多个用户之间共享Git存储库。这允许属于同一组的用户推入该存储库。指定后，设置配置变量&amp;ldquo; core.sharedRepository&amp;rdquo;，以便使用请求的权限创建 &lt;code&gt;$GIT_DIR&lt;/code&gt; 下的文件和目录。如果未指定，则Git将使用umask（2）报告的权限。</target>
        </trans-unit>
        <trans-unit id="553f83584ef890feb9fc0a5fa486ad4027a85d31" translate="yes" xml:space="preserve">
          <source>Specify that the p4 client spec should be used to identify p4 depot paths of interest. This is equivalent to specifying the option &lt;code&gt;--use-client-spec&lt;/code&gt;. See the &quot;CLIENT SPEC&quot; section above. This variable is a boolean, not the name of a p4 client.</source>
          <target state="translated">指定应使用p4客户端规范来识别感兴趣的p4仓库路径。这等效于指定选项 &lt;code&gt;--use-client-spec&lt;/code&gt; 。请参阅上面的&amp;ldquo;客户端规格&amp;rdquo;部分。此变量是布尔值，而不是p4客户端的名称。</target>
        </trans-unit>
        <trans-unit id="ee45839e9a36541472b0e6b0c79bb025ae2d044b" translate="yes" xml:space="preserve">
          <source>Specify the SVN username to perform the commit as. This option overrides the &lt;code&gt;username&lt;/code&gt; configuration property.</source>
          <target state="translated">指定SVN用户名以执行提交。此选项将覆盖 &lt;code&gt;username&lt;/code&gt; 配置属性。</target>
        </trans-unit>
        <trans-unit id="ce5445a596c457d8087a3ba95eb2c606f830762e" translate="yes" xml:space="preserve">
          <source>Specify the [svn-remote &quot;&amp;lt;remote name&amp;gt;&quot;] section to use, this allows SVN multiple repositories to be tracked. Default: &quot;svn&quot;</source>
          <target state="translated">指定要使用的[svn-remote&amp;ldquo; &amp;lt;远程名称&amp;gt;&amp;rdquo;]部分，这将允许跟踪SVN多个存储库。默认值：&amp;ldquo; svn&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="9617526476bf00e3e1b98443975d22edd359d482" translate="yes" xml:space="preserve">
          <source>Specify the address where replies from recipients should go to. Use this if replies to messages should go to another address than what is specified with the --from parameter.</source>
          <target state="translated">指定收件人回复的地址。如果回复邮件的地址与--from参数中指定的地址不同,请使用这个地址。</target>
        </trans-unit>
        <trans-unit id="ee03a68cf221fcf3ea580414a042d4bf2bb9f1e8" translate="yes" xml:space="preserve">
          <source>Specify the browser that will be used to display help in the &lt;code&gt;web&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">指定将用于以 &lt;code&gt;web&lt;/code&gt; 格式显示帮助的浏览器。参见&lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8aa86dc00b5d1ada804b541ee50aabffe17fa3ad" translate="yes" xml:space="preserve">
          <source>Specify the character used to indicate new, old or context lines in the generated patch. Normally they are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and ' ' respectively.</source>
          <target state="translated">指定用于在生成的修补程序中指示新行，旧行或上下文行的字符。通常它们分别是 &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和''。</target>
        </trans-unit>
        <trans-unit id="cb636a61044a94ec71c2c0e48db959f09a640e28" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified browser. The specified command is evaluated in shell with the URLs passed as arguments. (See git-web{litdd}browse[1].)</source>
          <target state="translated">指定调用指定浏览器的命令。指定的命令在shell中与作为参数传递的URL一起被评估。参见 git-web{litdd}browse[1]。</target>
        </trans-unit>
        <trans-unit id="f8ec599a595d519e45f7089bd76b8eb2f0cf86d7" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool.</source>
          <target state="translated">指定调用指定diff工具的命令。</target>
        </trans-unit>
        <trans-unit id="045550ad84d88752a76cca9657a08fe5f6314875" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;LOCAL&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff pre-image and &lt;code&gt;REMOTE&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff post-image.</source>
          <target state="translated">指定命令以调用指定的差异工具。在Shell中使用以下可用变量评估指定的命令： &lt;code&gt;LOCAL&lt;/code&gt; 设置为包含diff前映像内容的临时文件的名称， &lt;code&gt;REMOTE&lt;/code&gt; 设置为包含diff post内容的临时文件的名称-图片。</target>
        </trans-unit>
        <trans-unit id="a4e7d7e1334d2dbe270d234d60ef8777bddd17c9" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified man viewer. The specified command is evaluated in shell with the man page passed as argument. (See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.)</source>
          <target state="translated">指定命令以调用指定的man查看器。在shell中评估指定的命令，并将手册页作为参数传递。（请参阅&lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="3a2ff684c7c448a4b91310593e49dad0e76d3118" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified merge tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;BASE&lt;/code&gt; is the name of a temporary file containing the common base of the files to be merged, if available; &lt;code&gt;LOCAL&lt;/code&gt; is the name of a temporary file containing the contents of the file on the current branch; &lt;code&gt;REMOTE&lt;/code&gt; is the name of a temporary file containing the contents of the file from the branch being merged; &lt;code&gt;MERGED&lt;/code&gt; contains the name of the file to which the merge tool should write the results of a successful merge.</source>
          <target state="translated">指定命令以调用指定的合并工具。在外壳程序中使用以下可用变量评估指定的命令： &lt;code&gt;BASE&lt;/code&gt; 是临时文件的名称，其中包含要合并的文件的公共基础（如果有）； &lt;code&gt;LOCAL&lt;/code&gt; 是包含当前分支上文件内容的临时文件的名称； &lt;code&gt;REMOTE&lt;/code&gt; 是一个临时文件的名称，其中包含来自合并分支的文件内容； &lt;code&gt;MERGED&lt;/code&gt; 包含合并工具应该向其中写入成功合并结果的文件的名称。</target>
        </trans-unit>
        <trans-unit id="6a0cfc4c034bf82c50504b5853ea3a2048b66aa0" translate="yes" xml:space="preserve">
          <source>Specify the default pack index version. Valid values are 1 for legacy pack index used by Git versions prior to 1.5.2, and 2 for the new pack index with capabilities for packs larger than 4 GB as well as proper protection against the repacking of corrupted packs. Version 2 is the default. Note that version 2 is enforced and this config option ignored whenever the corresponding pack is larger than 2 GB.</source>
          <target state="translated">指定默认的数据包索引版本,有效值是1代表Git 1.5.2之前的版本使用的传统数据包索引,2代表新的数据包索引。有效值为1,代表1.5.2之前的Git版本所使用的传统包索引,2代表新的包索引,它能够处理大于4GB的包,并且能够防止损坏的包被重新打包。版本2是默认的。请注意,只要对应的包大于2GB,就会强制执行版本2,并忽略这个配置选项。</target>
        </trans-unit>
        <trans-unit id="237b5a9487d0a4c4f3b292963fb14ac9431d7354" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be copied. (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">指定将从中复制模板的目录。（请参见&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;的&amp;ldquo;模板目录&amp;rdquo;部分。）</target>
        </trans-unit>
        <trans-unit id="9e017dab9e6089dc4c6b8916eff9198d29b5fa5a" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used. (See the &quot;TEMPLATE DIRECTORY&quot; section below.)</source>
          <target state="translated">指定使用模板的目录。参见下面的 &quot;TEMPLATE DIRECTORY &quot;部分)。</target>
        </trans-unit>
        <trans-unit id="10fbc8bd7f7f67034717ffef3bdc652592011a96" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used; (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">指定将使用模板的目录；（请参见&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;的&amp;ldquo;模板目录&amp;rdquo;部分。）</target>
        </trans-unit>
        <trans-unit id="6d06560706961e8be925ad5b0c5ec94cdc91c729" translate="yes" xml:space="preserve">
          <source>Specify the encryption to use, either &lt;code&gt;ssl&lt;/code&gt; or &lt;code&gt;tls&lt;/code&gt;. Any other value reverts to plain SMTP. Default is the value of &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt;.</source>
          <target state="translated">指定要使用的加密， &lt;code&gt;ssl&lt;/code&gt; 或 &lt;code&gt;tls&lt;/code&gt; 。其他任何值都将恢复为纯SMTP。默认值为 &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="4d476f2efa135b04b0d382124ae1d7eb2f09baec" translate="yes" xml:space="preserve">
          <source>Specify the envelope sender used to send the emails. This is useful if your default address is not the address that is subscribed to a list. In order to use the &lt;code&gt;From&lt;/code&gt; address, set the value to &quot;auto&quot;. If you use the sendmail binary, you must have suitable privileges for the -f parameter. Default is the value of the &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; configuration variable; if that is unspecified, choosing the envelope sender is left to your MTA.</source>
          <target state="translated">指定用于发送电子邮件的信封发件人。如果您的默认地址不是订阅列表的地址，这将很有用。为了使用 &lt;code&gt;From&lt;/code&gt; 地址，请将值设置为&amp;ldquo; auto&amp;rdquo;。如果使用sendmail二进制文件，则必须具有-f参数的适当特权。默认值为 &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; 配置变量的值；如果未指定，则选择信封发件人留给您的MTA。</target>
        </trans-unit>
        <trans-unit id="57154856f70bd26e9f32c73474da174dbb6a71bf" translate="yes" xml:space="preserve">
          <source>Specify the format in which differences in submodules are shown. The &quot;short&quot; format just shows the names of the commits at the beginning and end of the range. The &quot;log&quot; format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. The &quot;diff&quot; format shows an inline diff of the changed contents of the submodule. Defaults to &quot;short&quot;.</source>
          <target state="translated">指定显示子模块差异的格式。&amp;ldquo;短&amp;rdquo;格式仅在范围的开头和结尾显示提交的名称。&amp;ldquo;日志&amp;rdquo;格式列出了&lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; 所做的范围内的提交。&amp;ldquo; diff&amp;rdquo;格式显示子模块的更改内容的内联diff。默认为&amp;ldquo;短&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ee4e54ea6641c26749f683e2086f11110bfcb031" translate="yes" xml:space="preserve">
          <source>Specify the full path of &lt;code&gt;git-upload-pack&lt;/code&gt; on the remote host. This allows listing references from repositories accessed via SSH and where the SSH daemon does not use the PATH configured by the user.</source>
          <target state="translated">在远程主机上指定 &lt;code&gt;git-upload-pack&lt;/code&gt; 的完整路径。这允许列出来自通过SSH访问的存储库中的引用，并且SSH守护程序不使用用户配置的PATH。</target>
        </trans-unit>
        <trans-unit id="e05f34f2b12543d24deddf183d7f5563e4746b8d" translate="yes" xml:space="preserve">
          <source>Specify the initial subject of the email thread. Only necessary if --compose is also set. If --compose is not set, this will be prompted for.</source>
          <target state="translated">指定邮件线程的初始主题。只有在设置了 --compose 的情况下才需要。如果没有设置--compose,则会提示输入。</target>
        </trans-unit>
        <trans-unit id="7f0e894272a77fe6a04290fbdb329a63eb87bf76" translate="yes" xml:space="preserve">
          <source>Specify the layout when list items in &lt;code&gt;git clean -i&lt;/code&gt;, which always shows files and directories in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">在 &lt;code&gt;git clean -i&lt;/code&gt; 中列出列表项时指定布局，该布局始终以列显示文件和目录。有关详细信息，请参见 &lt;code&gt;column.ui&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7208179bdf36d6bc3e9b1d1f4f91288e1356b3f" translate="yes" xml:space="preserve">
          <source>Specify the location of the CVS checkout to use for the export. This option does not require GIT_DIR to be set before execution if the current directory is within a Git repository. The default is the value of &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt;.</source>
          <target state="translated">指定用于导出的CVS结帐的位置。如果当前目录位于Git存储库中，则此选项不需要在执行之前设置GIT_DIR。缺省值为 &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="4c1271576d0edb7f1f0d6c8d0d3f48964a9bd30e" translate="yes" xml:space="preserve">
          <source>Specify the most recent revision to keep. All later revisions are discarded.</source>
          <target state="translated">指定要保留的最新版本。之后的所有修订版都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="dbfd748a4216557f92920425eee493e6f587b7d2" translate="yes" xml:space="preserve">
          <source>Specify the name of a CVS checkout using the -w switch or execute it from the root of the CVS working copy. In the latter case GIT_DIR must be defined. See examples below.</source>
          <target state="translated">使用 -w 开关指定 CVS 检查程序的名称,或者从 CVS 工作副本的根目录下执行它。在后一种情况下,必须定义GIT_DIR。请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="6f5685351080bbe842e1b77f6e72d7f56e71124e" translate="yes" xml:space="preserve">
          <source>Specify the path where the HTML documentation resides. File system paths and URLs are supported. HTML pages will be prefixed with this path when help is displayed in the &lt;code&gt;web&lt;/code&gt; format. This defaults to the documentation path of your Git installation.</source>
          <target state="translated">指定HTML文档所在的路径。支持文件系统路径和URL。当以 &lt;code&gt;web&lt;/code&gt; 格式显示帮助时，HTML页面将以该路径作为前缀。这默认为Git安装的文档路径。</target>
        </trans-unit>
        <trans-unit id="3939c032cc21518f83cfc7e855a79944401164b0" translate="yes" xml:space="preserve">
          <source>Specify the pathname of a file to use as the template for new commit messages.</source>
          <target state="translated">指定文件的路径名,作为新提交信息的模板。</target>
        </trans-unit>
        <trans-unit id="626310e55266a25c38521d0786f942652add8252" translate="yes" xml:space="preserve">
          <source>Specify the primary recipient of the emails generated. Generally, this will be the upstream maintainer of the project involved. Default is the value of the &lt;code&gt;sendemail.to&lt;/code&gt; configuration value; if that is unspecified, and --to-cmd is not specified, this will be prompted for.</source>
          <target state="translated">指定生成的电子邮件的主要收件人。通常，这将是所涉及项目的上游维护者。默认值为 &lt;code&gt;sendemail.to&lt;/code&gt; 配置值；如果未指定，并且未指定--to-cmd，则会提示您输入。</target>
        </trans-unit>
        <trans-unit id="904cbddb8fe90053f040a40b660f937c8ee221c5" translate="yes" xml:space="preserve">
          <source>Specify the program that will be used to browse your working repository in gitweb. See &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt;.</source>
          <target state="translated">在gitweb中指定将用于浏览您的工作存储库的程序。参见&lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87648a4a4b9f3684c45dea895b93d3728e0b89f7" translate="yes" xml:space="preserve">
          <source>Specify the programs that may be used to display help in the &lt;code&gt;man&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">指定可用于以 &lt;code&gt;man&lt;/code&gt; 格式显示帮助的程序。参见&lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c051775f78daae77408669a949bcd688ddbd949c" translate="yes" xml:space="preserve">
          <source>Specify the restore location. If neither option is specified, by default the working tree is restored. Specifying &lt;code&gt;--staged&lt;/code&gt; will only restore the index. Specifying both restores both.</source>
          <target state="translated">指定还原位置。如果未指定任何选项，则默认情况下将还原工作树。指定 &lt;code&gt;--staged&lt;/code&gt; 将仅还原索引。同时指定两个都将恢复。</target>
        </trans-unit>
        <trans-unit id="95b7f682630cddb98a68355ef07c41860159997c" translate="yes" xml:space="preserve">
          <source>Specify the sender of the emails. If not specified on the command line, the value of the &lt;code&gt;sendemail.from&lt;/code&gt; configuration option is used. If neither the command-line option nor &lt;code&gt;sendemail.from&lt;/code&gt; are set, then the user will be prompted for the value. The default for the prompt will be the value of GIT_AUTHOR_IDENT, or GIT_COMMITTER_IDENT if that is not set, as returned by &quot;git var -l&quot;.</source>
          <target state="translated">指定电子邮件的发件人。如果未在命令行上指定，则使用 &lt;code&gt;sendemail.from&lt;/code&gt; 配置选项的值。如果既未设置命令行选项也 &lt;code&gt;sendemail.from&lt;/code&gt; 设置sendemail.from，则将提示用户输入该值。提示的默认值为GIT_AUTHOR_IDENT或GIT_COMMITTER_IDENT的值（如果未设置），由&amp;ldquo; git var -l&amp;rdquo;返回。</target>
        </trans-unit>
        <trans-unit id="8cba2f98ceccc0dae91e3c30287bb75513f4e951" translate="yes" xml:space="preserve">
          <source>Specify the style in which conflicted hunks are written out to working tree files upon merge. The default is &quot;merge&quot;, which shows a &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; conflict marker, changes made by one side, a &lt;code&gt;=======&lt;/code&gt; marker, changes made by the other side, and then a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; marker. An alternate style, &quot;diff3&quot;, adds a &lt;code&gt;|||||||&lt;/code&gt; marker and the original text before the &lt;code&gt;=======&lt;/code&gt; marker.</source>
          <target state="translated">指定在合并时将冲突的块块写出到工作树文件中的样式。默认值为&amp;ldquo;合并&amp;rdquo;，它显示一个 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; &amp;lt;冲突标记，一侧进行更改，一个 &lt;code&gt;=======&lt;/code&gt; =标记，另一侧进行更改，然后显示 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 标记。替代样式&amp;ldquo; diff3&amp;rdquo;添加 &lt;code&gt;|||||||&lt;/code&gt; |标记和 &lt;code&gt;=======&lt;/code&gt; 标记之前的原始文本。</target>
        </trans-unit>
        <trans-unit id="d1c5be6270e8c898e52c9ccc68e940ca06ec404b" translate="yes" xml:space="preserve">
          <source>Specify the system that is used for large (binary) files. Please note that large file systems do not support the &lt;code&gt;git p4 submit&lt;/code&gt; command. Only Git LFS is implemented right now (see &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https://git-lfs.github.com/&lt;/a&gt; for more information). Download and install the Git LFS command line extension to use this option and configure it like this:</source>
          <target state="translated">指定用于大型（二进制）文件的系统。请注意，大型文件系统不支持 &lt;code&gt;git p4 submit&lt;/code&gt; 命令。现在仅实现了Git LFS（有关更多信息，请参见&lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https://git-lfs.github.com/&lt;/a&gt;）。下载并安装Git LFS命令行扩展以使用此选项并进行如下配置：</target>
        </trans-unit>
        <trans-unit id="d0eef78fea38d4df295115dcb10e8e7ee7e56973" translate="yes" xml:space="preserve">
          <source>Specify the terminal width. By default &lt;code&gt;git column&lt;/code&gt; will detect the terminal width, or fall back to 80 if it is unable to do so.</source>
          <target state="translated">指定端子宽度。默认情况下， &lt;code&gt;git column&lt;/code&gt; 将检测终端宽度，如果无法检测则退回到80。</target>
        </trans-unit>
        <trans-unit id="724bb2755b4bad5b8b472dcd4850810c5212797c" translate="yes" xml:space="preserve">
          <source>Specify the transfer encoding to be used to send the message over SMTP. 7bit will fail upon encountering a non-ASCII message. quoted-printable can be useful when the repository contains files that contain carriage returns, but makes the raw patch email file (as saved from a MUA) much harder to inspect manually. base64 is even more fool proof, but also even more opaque. auto will use 8bit when possible, and quoted-printable otherwise.</source>
          <target state="translated">指定用于通过SMTP发送邮件的传输编码。7bit会在遇到非ASCII信息时失败。当存储库包含包含回车的文件时,加引号的可打印编码会很有用,但会使原始的补丁邮件文件(从MUA保存的)更难手动检查。base64更容易被发现,但也更不透明。</target>
        </trans-unit>
        <trans-unit id="9612f0c17aac603d9a46ca6cb5d976f3bf4c5bf3" translate="yes" xml:space="preserve">
          <source>Specify the type (default: &quot;blob&quot;).</source>
          <target state="translated">指定类型(默认:&quot;blob&quot;)。</target>
        </trans-unit>
        <trans-unit id="13769f1d436d268baed7051a7c066221785b088a" translate="yes" xml:space="preserve">
          <source>Specify the type of dates the frontend will supply to fast-import within &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;committer&lt;/code&gt; and &lt;code&gt;tagger&lt;/code&gt; commands. See &amp;ldquo;Date Formats&amp;rdquo; below for details about which formats are supported, and their syntax.</source>
          <target state="translated">在 &lt;code&gt;author&lt;/code&gt; ， &lt;code&gt;committer&lt;/code&gt; 和 &lt;code&gt;tagger&lt;/code&gt; 命令中指定前端提供给快速导入的日期的类型。有关支持哪些格式及其语法的详细信息，请参见下面的&amp;ldquo;日期格式&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="19ebff060f03d17e125a48bf86da29f25cd1bf35" translate="yes" xml:space="preserve">
          <source>Specify the version with which new index files should be initialized. This does not affect existing repositories. If &lt;code&gt;feature.manyFiles&lt;/code&gt; is enabled, then the default is 4.</source>
          <target state="translated">指定用于初始化新索引文件的版本。这不会影响现有存储库。如果启用 &lt;code&gt;feature.manyFiles&lt;/code&gt; ，则默认值为4。</target>
        </trans-unit>
        <trans-unit id="1dcaca1644c579ca7480d7fe912a3d5f89533d59" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is already at least one trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-exists&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-exists&lt;/code&gt; or &lt;code&gt;--no-if-exists&lt;/code&gt;. Possible actions are &lt;code&gt;addIfDifferent&lt;/code&gt;, &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;doNothing&lt;/code&gt;.</source>
          <target state="translated">指定消息中已经存在至少一个具有相同&amp;lt;token&amp;gt;的预告片时将执行的操作。 &lt;code&gt;--if-exists&lt;/code&gt; 随附的设置会覆盖所有配置变量，并应用于所有 &lt;code&gt;--trailer&lt;/code&gt; 选项，直到下次出现 &lt;code&gt;--if-exists&lt;/code&gt; 或 &lt;code&gt;--no-if-exists&lt;/code&gt; 为止。可能的操作是 &lt;code&gt;addIfDifferent&lt;/code&gt; ， &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt; ， &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;replace&lt;/code&gt; 和 &lt;code&gt;doNothing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0811642f4a0657e779f7ae4b567538044cd6208f" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is no other trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-missing&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-missing&lt;/code&gt; or &lt;code&gt;--no-if-missing&lt;/code&gt;. Possible actions are &lt;code&gt;doNothing&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">指定在消息中没有其他具有相同&amp;lt;token&amp;gt;的预告片时将执行的操作。 &lt;code&gt;--if-missing&lt;/code&gt; 提供的设置将覆盖所有配置变量，并应用于所有 &lt;code&gt;--trailer&lt;/code&gt; 选项，直到下次出现 &lt;code&gt;--if-missing&lt;/code&gt; 或 &lt;code&gt;--no-if-missing&lt;/code&gt; 为止。可能的操作是 &lt;code&gt;doNothing&lt;/code&gt; 或 &lt;code&gt;add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d686969af43bc9772a0a2bdde0f0d6918dfd1d4" translate="yes" xml:space="preserve">
          <source>Specify what destination ref to update with what source object. The format of a &amp;lt;refspec&amp;gt; parameter is an optional plus &lt;code&gt;+&lt;/code&gt;, followed by the source object &amp;lt;src&amp;gt;, followed by a colon &lt;code&gt;:&lt;/code&gt;, followed by the destination ref &amp;lt;dst&amp;gt;.</source>
          <target state="translated">指定要使用哪个源对象更新的目标引用。&amp;lt;refspec&amp;gt;参数的格式是可选的plus &lt;code&gt;+&lt;/code&gt; ，后跟源对象&amp;lt;src&amp;gt;，后跟冒号 &lt;code&gt;:&lt;/code&gt; ，然后是目标ref &amp;lt;dst&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="6138b51fead99efbf1d6930137f2b387251ef604" translate="yes" xml:space="preserve">
          <source>Specify where all new trailers will be added. A setting provided with &lt;code&gt;--where&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--where&lt;/code&gt; or &lt;code&gt;--no-where&lt;/code&gt;. Possible values are &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; or &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">指定将所有新预告片添加到的位置。设置有设定 &lt;code&gt;--where&lt;/code&gt; 覆盖所有配置变量，适用于所有 &lt;code&gt;--trailer&lt;/code&gt; 选项，直到下一次出现 &lt;code&gt;--where&lt;/code&gt; 或 &lt;code&gt;--no-where&lt;/code&gt; 。可能的值是 &lt;code&gt;after&lt;/code&gt; ， &lt;code&gt;before&lt;/code&gt; ， &lt;code&gt;end&lt;/code&gt; 或 &lt;code&gt;start&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9446eb9819e4ea522bac17e494630aff8d54bebb" translate="yes" xml:space="preserve">
          <source>Specify whether supported commands should output in columns. This variable consists of a list of tokens separated by spaces or commas:</source>
          <target state="translated">指定支持的命令是否应该以列的形式输出。这个变量由一个用空格或逗号分隔的标记列表组成。</target>
        </trans-unit>
        <trans-unit id="c44825f076cf0385d99447ca6f9388f9e5d821d6" translate="yes" xml:space="preserve">
          <source>Specify whether to output branch listing in &lt;code&gt;git branch&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">在列的 &lt;code&gt;git branch&lt;/code&gt; 中指定是否输出分支列表。有关详细信息，请参见 &lt;code&gt;column.ui&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb8ddb4258375ad9322849684e1d07ab6e005bcd" translate="yes" xml:space="preserve">
          <source>Specify whether to output tag listing in &lt;code&gt;git tag&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">指定是否在 &lt;code&gt;git tag&lt;/code&gt; 的列中输出标签列表。有关详细信息，请参见 &lt;code&gt;column.ui&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7607c69174b01d1bb15ae17f25fe8a2d96f9d58f" translate="yes" xml:space="preserve">
          <source>Specify whether to output untracked files in &lt;code&gt;git status&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">指定是否以 &lt;code&gt;git status&lt;/code&gt; 列输出未跟踪的文件。有关详细信息，请参见 &lt;code&gt;column.ui&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b984e35657451690beb2903dd3dd6390cb372f55" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;--no-symlinks&lt;/code&gt; instructs &lt;code&gt;git difftool&lt;/code&gt; to create copies instead. &lt;code&gt;--no-symlinks&lt;/code&gt; is the default on Windows.</source>
          <target state="translated">指定 &lt;code&gt;--no-symlinks&lt;/code&gt; 指示 &lt;code&gt;git difftool&lt;/code&gt; 创建副本。 &lt;code&gt;--no-symlinks&lt;/code&gt; 是Windows上的默认设置。</target>
        </trans-unit>
        <trans-unit id="3b6b4914f3cbc4ad3df641c0c4177b0ed1427ac9" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;-b&lt;/code&gt; causes a new branch to be created as if &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; were called and then checked out. In this case you can use the &lt;code&gt;--track&lt;/code&gt; or &lt;code&gt;--no-track&lt;/code&gt; options, which will be passed to &lt;code&gt;git branch&lt;/code&gt;. As a convenience, &lt;code&gt;--track&lt;/code&gt; without &lt;code&gt;-b&lt;/code&gt; implies branch creation; see the description of &lt;code&gt;--track&lt;/code&gt; below.</source>
          <target state="translated">指定 &lt;code&gt;-b&lt;/code&gt; 将导致创建新分支，就像调用&lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt;然后将其检出一样。在这种情况下，您可以使用 &lt;code&gt;--track&lt;/code&gt; 或 &lt;code&gt;--no-track&lt;/code&gt; 选项，这些选项将传递给 &lt;code&gt;git branch&lt;/code&gt; 。为方便起见，不带 &lt;code&gt;-b&lt;/code&gt; 的 &lt;code&gt;--track&lt;/code&gt; 表示创建分支；请参阅下面的 &lt;code&gt;--track&lt;/code&gt; 说明。</target>
        </trans-unit>
        <trans-unit id="3d1224dfe57ea23830be77ce6389d9ea1f14e370" translate="yes" xml:space="preserve">
          <source>Specifying ranges</source>
          <target state="translated">指定范围</target>
        </trans-unit>
        <trans-unit id="c7c8ec2e47baa0d09987a0c4d6001b20abaaf2b4" translate="yes" xml:space="preserve">
          <source>Specifying references</source>
          <target state="translated">指定参考文献</target>
        </trans-unit>
        <trans-unit id="393f3ea7b8cd86c4b234c1534e51343677169802" translate="yes" xml:space="preserve">
          <source>Specifying revisions</source>
          <target state="translated">指定修订</target>
        </trans-unit>
        <trans-unit id="c12054d536cbd9889e1a4db4d75b48d8a7f03cd2" translate="yes" xml:space="preserve">
          <source>Specifying the refs</source>
          <target state="translated">指定裁判</target>
        </trans-unit>
        <trans-unit id="31f2abfdb1a3e7bab64495f843d089d388ea45e0" translate="yes" xml:space="preserve">
          <source>Spend extra cycles to find renames, copies and complete rewrites (very expensive).</source>
          <target state="translated">花费额外的周期去寻找重名、副本和完成改写(非常昂贵)。</target>
        </trans-unit>
        <trans-unit id="6b695c34f0798ffd5026fe42cf041af8a841d861" translate="yes" xml:space="preserve">
          <source>Spend extra time to make sure the smallest possible diff is produced.</source>
          <target state="translated">花额外的时间来确保产生最小的差异。</target>
        </trans-unit>
        <trans-unit id="8622c4dc8f748203e018cc0d2ec4e20b07c9830d" translate="yes" xml:space="preserve">
          <source>Split a commit apart into a sequence of commits</source>
          <target state="translated">将一个提交分割成一系列的提交。</target>
        </trans-unit>
        <trans-unit id="9da7a78d6cd0199fb3cad874edd1ba683b830e12" translate="yes" xml:space="preserve">
          <source>Split index</source>
          <target state="translated">拆分指数</target>
        </trans-unit>
        <trans-unit id="704e5487b89b9b30fcd9e576ab8763e642a1b938" translate="yes" xml:space="preserve">
          <source>Splits a mbox file or a Maildir into a list of files: &quot;0001&quot; &quot;0002&quot; .. in the specified directory so you can process them further from there.</source>
          <target state="translated">将一个mbox文件或一个Maildir分割成一个文件列表。&quot;0001&quot;&quot;0002&quot;......在指定的目录下,所以你可以从那里进一步处理它们。</target>
        </trans-unit>
        <trans-unit id="30bc5e98fc4346f828d1d387cd6e1c89bab7df56" translate="yes" xml:space="preserve">
          <source>Splits mail messages in a mailbox into commit log message, authorship information and patches, and applies them to the current branch.</source>
          <target state="translated">将邮箱中的邮件信息拆分为提交日志信息、作者信息和补丁,并应用到当前分支。</target>
        </trans-unit>
        <trans-unit id="05a6d55bcdcfd4539a8e45cc0dd3c2f28f1895ad" translate="yes" xml:space="preserve">
          <source>Splitting a (logically single) project into multiple repositories and tying them back together. This can be used to overcome current limitations of Git&amp;rsquo;s implementation to have finer grained access:</source>
          <target state="translated">将一个（逻辑上单一的）项目拆分为多个存储库，并将其重新绑定在一起。这可以用来克服Git实现的当前限制，以实现更细粒度的访问：</target>
        </trans-unit>
        <trans-unit id="dca5d29240b446b8bdd6f26fb0b4e46cb995769f" translate="yes" xml:space="preserve">
          <source>Splitting commits</source>
          <target state="translated">分割承诺</target>
        </trans-unit>
        <trans-unit id="ab83ac1fcfed8f50260b11e517c47e9b533419b5" translate="yes" xml:space="preserve">
          <source>Splitting the CVS log into patch sets is done by &lt;code&gt;cvsps&lt;/code&gt;. At least version 2.1 is required.</source>
          <target state="translated">将CVS日志分为补丁集是由 &lt;code&gt;cvsps&lt;/code&gt; 完成的。至少需要版本2.1。</target>
        </trans-unit>
        <trans-unit id="a74a609811ea3b4041281496e2aa5c500ba6558b" translate="yes" xml:space="preserve">
          <source>Sq-quote</source>
          <target state="translated">Sq-quote</target>
        </trans-unit>
        <trans-unit id="d3e10219341e654fff6647b0dadeaeaf0534cae6" translate="yes" xml:space="preserve">
          <source>Squelch the progress indicator.</source>
          <target state="translated">压制进度指标。</target>
        </trans-unit>
        <trans-unit id="56175f21751e04201e148f2612c700747850548a" translate="yes" xml:space="preserve">
          <source>Start &lt;code&gt;git gui&lt;/code&gt; and arrange to make exactly one commit before exiting and returning to the shell. The interface is limited to only commit actions, slightly reducing the application&amp;rsquo;s startup time and simplifying the menubar.</source>
          <target state="translated">启动 &lt;code&gt;git gui&lt;/code&gt; 并安排在退出并返回shell之前进行一次完全提交。该界面仅限于提交操作，从而略微减少了应用程序的启动时间并简化了菜单栏。</target>
        </trans-unit>
        <trans-unit id="1ad6edca0ad31761798d28bd8f2bcba01ec6ebde" translate="yes" xml:space="preserve">
          <source>Start a blame viewer on the specified file on the given version (or working directory if not specified).</source>
          <target state="translated">在给定的版本(或未指定的工作目录)上对指定的文件启动一个责难查看器。</target>
        </trans-unit>
        <trans-unit id="27818282f52d064df23dffafcd6a743ee7870fc8" translate="yes" xml:space="preserve">
          <source>Start a new Git repository for an existing code base</source>
          <target state="translated">为现有的代码库启动一个新的 Git 仓库。</target>
        </trans-unit>
        <trans-unit id="749535e22d531edd1c6d9e666c57e169bc2a2908" translate="yes" xml:space="preserve">
          <source>Start a tree browser showing all files in the specified commit. Files selected through the browser are opened in the blame viewer.</source>
          <target state="translated">启动树形浏览器,显示指定提交中的所有文件。通过浏览器选择的文件会在责难查看器中打开。</target>
        </trans-unit>
        <trans-unit id="4f65c13509b4c270214524b3ab095bad926fc4e3" translate="yes" xml:space="preserve">
          <source>Start an interactive rebase with &lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt;, where &amp;lt;commit&amp;gt; is the commit you want to split. In fact, any commit range will do, as long as it contains that commit.</source>
          <target state="translated">使用 &lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt; 启动交互式rebase ，其中&amp;lt;commit&amp;gt;是要拆分的提交。实际上，任何提交范围都可以，只要它包含该提交即可。</target>
        </trans-unit>
        <trans-unit id="e89944344f3db8073a18706746155c852e5164e1" translate="yes" xml:space="preserve">
          <source>Start cleaning files and directories, and then quit.</source>
          <target state="translated">开始清理文件和目录,然后退出。</target>
        </trans-unit>
        <trans-unit id="b87ef51ca99e7074691b94843e801ff9544539ca" translate="yes" xml:space="preserve">
          <source>Start development from a known tag</source>
          <target state="translated">从已知标签开始开发</target>
        </trans-unit>
        <trans-unit id="57f8f31bd16af3371648ce77ae5076e70d2a7e21" translate="yes" xml:space="preserve">
          <source>Start it with the last commit you want to retain as-is:</source>
          <target state="translated">从你想保留原样的最后一个提交开始。</target>
        </trans-unit>
        <trans-unit id="2deb883b26612605cc58ed80bbd657e3f5419b69" translate="yes" xml:space="preserve">
          <source>Start numbering the patches at &amp;lt;n&amp;gt; instead of 1.</source>
          <target state="translated">从&amp;lt;n&amp;gt;而不是1开始编号补丁。</target>
        </trans-unit>
        <trans-unit id="f25f51b92f6dabcbe2c2bbe2f01c2d471018dd10" translate="yes" xml:space="preserve">
          <source>Start off with just creating any random files that you want to maintain in your Git repository. We&amp;rsquo;ll start off with a few bad examples, just to get a feel for how this works:</source>
          <target state="translated">首先创建仅要在Git存储库中维护的任何随机文件。我们将从一些不好的例子开始，只是为了了解它是如何工作的：</target>
        </trans-unit>
        <trans-unit id="93ea699c6796ebb7b82a3a5927dc702e8f1a7316" translate="yes" xml:space="preserve">
          <source>Start the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">启动 httpd 实例并退出。根据需要重新生成配置文件以生成新的实例。</target>
        </trans-unit>
        <trans-unit id="4e8cde71c6f29e3b4dc0142edc8a7bdf1a0bc89b" translate="yes" xml:space="preserve">
          <source>Start the stream with a &lt;code&gt;feature done&lt;/code&gt; stanza, and terminate it with a &lt;code&gt;done&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;feature done&lt;/code&gt; 节开始流，并使用 &lt;code&gt;done&lt;/code&gt; 命令终止流。</target>
        </trans-unit>
        <trans-unit id="96e592387dc94e730df0ef669b5a78ed012d4c94" translate="yes" xml:space="preserve">
          <source>Starting a bisection</source>
          <target state="translated">开始分段</target>
        </trans-unit>
        <trans-unit id="b8f1956c80187223247d01b968f642bf0007a014" translate="yes" xml:space="preserve">
          <source>Starting point at which to create the new commits. If the --onto option is not specified, the starting point is &amp;lt;upstream&amp;gt;. May be any valid commit, and not just an existing branch name.</source>
          <target state="translated">创建新提交的起点。如果未指定--onto选项，则起始点为&amp;lt;上游&amp;gt;。可以是任何有效的提交，而不仅仅是现有的分支名称。</target>
        </trans-unit>
        <trans-unit id="b2a5514cb8b0c290a6aeca31b2e191aff35672b1" translate="yes" xml:space="preserve">
          <source>Stash the changes in a dirty working directory away</source>
          <target state="translated">把修改的内容藏在一个肮脏的工作目录中。</target>
        </trans-unit>
        <trans-unit id="abb935cbc47e1b75159f277e4b22bfc5de7bbee9" translate="yes" xml:space="preserve">
          <source>Static configuration of usernames for a given authentication context.</source>
          <target state="translated">为给定的认证上下文静态配置用户名。</target>
        </trans-unit>
        <trans-unit id="20520ab082263228efd3ab7ffc11e41906666da4" translate="yes" xml:space="preserve">
          <source>Status letters C and R are always followed by a score (denoting the percentage of similarity between the source and target of the move or copy). Status letter M may be followed by a score (denoting the percentage of dissimilarity) for file rewrites.</source>
          <target state="translated">状态字母 C 和 R 后面总是跟着一个分数(表示移动或复制的源和目标之间相似性的百分比)。对于文件改写,状态字母M后面可能会有一个分数(表示相似性的百分比)。</target>
        </trans-unit>
        <trans-unit id="5910dfc64a273edb8d032604ca6d54bef3bf2f4e" translate="yes" xml:space="preserve">
          <source>Stop the httpd instance and exit. This does not generate any of the configuration files for spawning a new instance, nor does it close the browser.</source>
          <target state="translated">停止 httpd 实例并退出。这不会生成任何用于生成新实例的配置文件,也不会关闭浏览器。</target>
        </trans-unit>
        <trans-unit id="12d3bab755f474b20ad13c1ab918e01e5f4eb7c4" translate="yes" xml:space="preserve">
          <source>Stop when a given path disappears from the tree.</source>
          <target state="translated">当某个路径从树上消失时,停止。</target>
        </trans-unit>
        <trans-unit id="7363904e3ee0fd364e644f2e1b28c12dd383e027" translate="yes" xml:space="preserve">
          <source>Storage format</source>
          <target state="translated">存储格式</target>
        </trans-unit>
        <trans-unit id="9ff8274c9fcae633894b9e7ab1c37fd6e74f1f7a" translate="yes" xml:space="preserve">
          <source>Store Git commit times in the local time zone instead of UTC. This makes &lt;code&gt;git log&lt;/code&gt; (even without --date=local) show the same times that &lt;code&gt;svn log&lt;/code&gt; would in the local time zone.</source>
          <target state="translated">将Git提交时间存储在本地时区而不是UTC中。这使得 &lt;code&gt;git log&lt;/code&gt; （甚至没有--date = local）显示的时间与 &lt;code&gt;svn log&lt;/code&gt; 在本地时区的显示时间相同。</target>
        </trans-unit>
        <trans-unit id="c403801561a0441c1d742dd0499050f55d110cd9" translate="yes" xml:space="preserve">
          <source>Store a given stash created via &lt;code&gt;git stash create&lt;/code&gt; (which is a dangling merge commit) in the stash ref, updating the stash reflog. This is intended to be useful for scripts. It is probably not the command you want to use; see &quot;push&quot; above.</source>
          <target state="translated">将通过 &lt;code&gt;git stash create&lt;/code&gt; （这是一个悬空的合并提交）创建的给定存储存储在存储参考中，以更新存储参考日志。旨在对脚本有用。它可能不是您要使用的命令；请参阅上方的&amp;ldquo;推送&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b41300dc42c243e3949e2ecb7a4c10aea769103e" translate="yes" xml:space="preserve">
          <source>Store credentials indefinitely on disk. See &lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store[1]&lt;/a&gt; for details.</source>
          <target state="translated">将凭据无限期地存储在磁盘上。有关详细信息，请参见&lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5597429620f06451a38a8e17b35a345310b01123" translate="yes" xml:space="preserve">
          <source>Store the fetched branch into a local branch before merging into the current branch:</source>
          <target state="translated">在合并到当前分支之前,将获取的分支存储到本地分支中。</target>
        </trans-unit>
        <trans-unit id="687760eb98a14d7d5a6fbbba834cf9ccaaf83ea1" translate="yes" xml:space="preserve">
          <source>Store the files instead of deflating them.</source>
          <target state="translated">存储文件,而不是放气。</target>
        </trans-unit>
        <trans-unit id="1512a579e2c05cbf63724a7c8d50327696297b00" translate="yes" xml:space="preserve">
          <source>Stores a set of &quot;objects&quot;, and an individual &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt; is identified by its &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;. The objects usually live in &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt;.</source>
          <target state="translated">存储一组&amp;ldquo;对象&amp;rdquo;，并通过其&lt;a href=&quot;#def_object_name&quot;&gt;对象名称&lt;/a&gt;标识单个&lt;a href=&quot;#def_object&quot;&gt;对象&lt;/a&gt;。这些对象通常位于 &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6349a625008b244d26dbb9000ad7480816812a5" translate="yes" xml:space="preserve">
          <source>Stores shorthands for URL and default refnames for use when interacting with remote repositories via &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; commands. See the REMOTES section in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for details. This mechanism is legacy and not likely to be found in modern repositories. This directory is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/remotes&quot; will be used instead.</source>
          <target state="translated">存储通过 &lt;code&gt;git fetch&lt;/code&gt; ， &lt;code&gt;git pull&lt;/code&gt; 和 &lt;code&gt;git push&lt;/code&gt; 命令与远程存储库进行交互时使用的URL速记和默认refname 。有关详细信息，请参见&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]中&lt;/a&gt;的REMOTES部分。这种机制是遗留的，不太可能在现代存储库中找到。如果设置了$ GIT_COMMON_DIR，将忽略该目录，而将使用&amp;ldquo; $ GIT_COMMON_DIR / remotes&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="39f2d5fc66110ba4ba0f8069c43a058a9f84529f" translate="yes" xml:space="preserve">
          <source>Storing multiple repositories as namespaces of a single repository avoids storing duplicate copies of the same objects, such as when storing multiple branches of the same source. The alternates mechanism provides similar support for avoiding duplicates, but alternates do not prevent duplication between new objects added to the repositories without ongoing maintenance, while namespaces do.</source>
          <target state="translated">将多个存储库作为单一存储库的命名空间来存储,可以避免存储相同对象的重复拷贝,例如存储同一源的多个分支时。交替机制为避免重复提供了类似的支持,但交替机制并不能防止在没有持续维护的情况下添加到存储库的新对象之间的重复,而命名空间则可以。</target>
        </trans-unit>
        <trans-unit id="ca1c76454e0d7e7718b023221d2b0aad3d2a1aba" translate="yes" xml:space="preserve">
          <source>Stream Comments</source>
          <target state="translated">流评论</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="5ab8d5b6efb1646dea2e4ea7d3282e3cb65c24cb" translate="yes" xml:space="preserve">
          <source>String to be printed at the beginning of each line.</source>
          <target state="translated">每行开头要打印的字符串。</target>
        </trans-unit>
        <trans-unit id="382f9b3217a7726b3a52ca62702799f6d5434b48" translate="yes" xml:space="preserve">
          <source>String to be printed at the end of each line, including newline character.</source>
          <target state="translated">每行末尾打印的字符串,包括换行符。</target>
        </trans-unit>
        <trans-unit id="ae0208ff14e492381101b38c4426143fc9d98dd6" translate="yes" xml:space="preserve">
          <source>String(s) &lt;code&gt;receive-pack&lt;/code&gt; and &lt;code&gt;upload-pack&lt;/code&gt; use to decide which refs to omit from their initial advertisements. Use more than one definition to specify multiple prefix strings. A ref that is under the hierarchies listed in the value of this variable is excluded, and is hidden when responding to &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git
fetch&lt;/code&gt;. See &lt;code&gt;receive.hideRefs&lt;/code&gt; and &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; for program-specific versions of this config.</source>
          <target state="translated">字符串 &lt;code&gt;receive-pack&lt;/code&gt; 和 &lt;code&gt;upload-pack&lt;/code&gt; 用于确定从其初始广告中省略哪些引用。使用多个定义来指定多个前缀字符串。在此变量的值中列出的层次结构下的ref被排除，并且在响应 &lt;code&gt;git push&lt;/code&gt; 或 &lt;code&gt;git fetch&lt;/code&gt; 时被隐藏。有关此配置的程序特定版本，请参见 &lt;code&gt;receive.hideRefs&lt;/code&gt; 和 &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd5fa82aac351e4a1096fc62004ba110d66fe810" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing empty lines, trailing whitespace, commentary and collapse consecutive empty lines.</source>
          <target state="translated">剥离前导和尾部空行、尾部空白、注释和折叠连续的空行。</target>
        </trans-unit>
        <trans-unit id="7c8cf84261f17414d41a19324152deb0638ecb13" translate="yes" xml:space="preserve">
          <source>Subcommands</source>
          <target state="translated">Subcommands</target>
        </trans-unit>
        <trans-unit id="2dacf65959849884a011f36f76a04eebea94c5ea" translate="yes" xml:space="preserve">
          <source>Submit</source>
          <target state="translated">Submit</target>
        </trans-unit>
        <trans-unit id="f3de51d87e152838b373a65e626718325c16a058" translate="yes" xml:space="preserve">
          <source>Submit only the specified commit or range of commits, instead of the full list of changes that are in the current Git branch.</source>
          <target state="translated">只提交指定的提交或提交范围,而不是提交当前 Git 分支中的全部变更。</target>
        </trans-unit>
        <trans-unit id="08c8f65685b697a18634ff4dd66ae0c7b7f8944c" translate="yes" xml:space="preserve">
          <source>Submit options</source>
          <target state="translated">提交选项</target>
        </trans-unit>
        <trans-unit id="3e96d88de40c1b4ce507f5624d2a7a2ae94fe14f" translate="yes" xml:space="preserve">
          <source>Submit variables</source>
          <target state="translated">提交变量</target>
        </trans-unit>
        <trans-unit id="0213e9a40d8de329179170c49c9f0b36b9c8f25d" translate="yes" xml:space="preserve">
          <source>Submit your commits back to p4:</source>
          <target state="translated">将你的提交回p4。</target>
        </trans-unit>
        <trans-unit id="45b948a665e37752fe7a51975e7be3fc7f05181f" translate="yes" xml:space="preserve">
          <source>Submitting changes from a Git repository back to the p4 repository requires a separate p4 client workspace. This should be specified using the &lt;code&gt;P4CLIENT&lt;/code&gt; environment variable or the Git configuration variable &lt;code&gt;git-p4.client&lt;/code&gt;. The p4 client must exist, but the client root will be created and populated if it does not already exist.</source>
          <target state="translated">将更改从Git存储库提交回p4存储库需要一个单独的p4客户端工作空间。应该使用 &lt;code&gt;P4CLIENT&lt;/code&gt; 环境变量或Git配置变量 &lt;code&gt;git-p4.client&lt;/code&gt; 来指定。p4客户端必须存在，但如果客户端根目录尚不存在，则会创建该根目录并进行填充。</target>
        </trans-unit>
        <trans-unit id="6fdf0bad4a57f28ad8887a6fe4e3d9618491f48f" translate="yes" xml:space="preserve">
          <source>Submitting patches to a project</source>
          <target state="translated">提交补丁到项目</target>
        </trans-unit>
        <trans-unit id="d2d7b7a6dabf5680ef6fc53443124ea60acd88af" translate="yes" xml:space="preserve">
          <source>Submitting requires a p4 client, which is not in the same location as the Git repository. Patches are applied, one at a time, to this p4 client and submitted from there.</source>
          <target state="translated">提交补丁需要一个 p4 客户端,它和 Git 仓库不在同一个位置。补丁每次都会应用到这个 p4 客户端,然后从那里提交。</target>
        </trans-unit>
        <trans-unit id="e107551e51d7866e29fbfac7f1a9d70e892a1c9c" translate="yes" xml:space="preserve">
          <source>Submodule operations can be configured using the following mechanisms (from highest to lowest precedence):</source>
          <target state="translated">子模块操作可以使用以下机制进行配置(从高到低的优先级)。</target>
        </trans-unit>
        <trans-unit id="12d390f8025584ad2ceb29d8156199827eb766f2" translate="yes" xml:space="preserve">
          <source>Submodules</source>
          <target state="translated">Submodules</target>
        </trans-unit>
        <trans-unit id="8b3b72a48d6b77673f309811c21a1f34bda69f2a" translate="yes" xml:space="preserve">
          <source>Submodules are initialized and cloned using their default settings. This is equivalent to running &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; immediately after the clone is finished. This option is ignored if the cloned repository does not have a worktree/checkout (i.e. if any of &lt;code&gt;--no-checkout&lt;/code&gt;/&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--bare&lt;/code&gt;, or &lt;code&gt;--mirror&lt;/code&gt; is given)</source>
          <target state="translated">子模块使用其默认设置进行初始化和克隆。这等效于克隆完成后立即运行 &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; 。如果克隆库不具有worktree /结帐忽略此选项（即如果任何 &lt;code&gt;--no-checkout&lt;/code&gt; / &lt;code&gt;-n&lt;/code&gt; ， &lt;code&gt;--bare&lt;/code&gt; ，或 &lt;code&gt;--mirror&lt;/code&gt; 给出）</target>
        </trans-unit>
        <trans-unit id="f0558d8aae211aae78435cf5f18fbee56b357b16" translate="yes" xml:space="preserve">
          <source>Submodules can be used for at least two different use cases:</source>
          <target state="translated">子模块可以用于至少两个不同的用例。</target>
        </trans-unit>
        <trans-unit id="2a4ac6e80eae220504fcac25436c9a1e818ef8b5" translate="yes" xml:space="preserve">
          <source>Submodules can take the following forms:</source>
          <target state="translated">子模块可采取以下形式:</target>
        </trans-unit>
        <trans-unit id="8ee6b51df0a5b53ba35723ec36f91cb14154873c" translate="yes" xml:space="preserve">
          <source>Submodules have more state and instead report M the submodule has a different HEAD than recorded in the index m the submodule has modified content ? the submodule has untracked files since modified content or untracked files in a submodule cannot be added via &lt;code&gt;git add&lt;/code&gt; in the superproject to prepare a commit.</source>
          <target state="translated">子模块具有更多状态，而是报告M子模块具有与记录在索引m中不同的HEAD子模块已修改内容？该子模块具有未跟踪的文件，因为子模块中的修改内容或未跟踪的文件无法通过超级项目中的 &lt;code&gt;git add&lt;/code&gt; 添加以准备提交。</target>
        </trans-unit>
        <trans-unit id="2a03a02ecd76c4aa6d233be9ed15c5b8f09cfe2e" translate="yes" xml:space="preserve">
          <source>Subsection names are case sensitive and can contain any characters except newline and the null byte. Doublequote &lt;code&gt;&quot;&lt;/code&gt; and backslash can be included by escaping them as &lt;code&gt;\&quot;&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt;, respectively. Backslashes preceding other characters are dropped when reading; for example, &lt;code&gt;\t&lt;/code&gt; is read as &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;\0&lt;/code&gt; is read as &lt;code&gt;0&lt;/code&gt; Section headers cannot span multiple lines. Variables may belong directly to a section or to a given subsection. You can have &lt;code&gt;[section]&lt;/code&gt; if you have &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt;, but you don&amp;rsquo;t need to.</source>
          <target state="translated">小节名称区分大小写，并且可以包含除换行符和空字节以外的任何字符。可以通过分别将转义为 &lt;code&gt;\&quot;&lt;/code&gt; 和 &lt;code&gt;\\&lt;/code&gt; 来包含双引号 &lt;code&gt;&quot;&lt;/code&gt; 和反斜杠。阅读时，其他字符前面的反斜杠将被删除；例如， &lt;code&gt;\t&lt;/code&gt; 读为 &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;\0&lt;/code&gt; 读为 &lt;code&gt;0&lt;/code&gt; 。节标题不能跨越多行。变量可以直接属于某个节或给定的子节。你可以有 &lt;code&gt;[section]&lt;/code&gt; 如果你有 &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt; ，但你并不需要。</target>
        </trans-unit>
        <trans-unit id="99e9a313960d39fea11c6c21bc5f471c5ed54f4e" translate="yes" xml:space="preserve">
          <source>Subsequent requests are then made directly to the service &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt;. (This works the same for git-receive-pack).</source>
          <target state="translated">随后，直接向服务 &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt; 发出请求。（这与git-receive-pack相同）。</target>
        </trans-unit>
        <trans-unit id="ecd7815bae661c84db8b72f60f38c2e3bca8ef1f" translate="yes" xml:space="preserve">
          <source>Subsequent updates to branches always create new files under &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory hierarchy.</source>
          <target state="translated">对分支的后续更新总是在 &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; 目录层次结构下创建新文件。</target>
        </trans-unit>
        <trans-unit id="b2bf2538aec79c0d5fa040a786e252ac3772aa80" translate="yes" xml:space="preserve">
          <source>Substitute the character &quot;/&quot; in branch names with &amp;lt;subst&amp;gt;</source>
          <target state="translated">用&amp;lt;subst&amp;gt;替换分支名称中的字符&amp;ldquo; /&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d44c96fa5a053386ed38d9e6a7cca3107588bf57" translate="yes" xml:space="preserve">
          <source>Successful execution (a zero exit status) of this hook does not ensure the ref will actually be updated, it is only a prerequisite. As such it is not a good idea to send notices (e.g. email) from this hook. Consider using the post-receive hook instead.</source>
          <target state="translated">成功执行这个钩子(零退出状态)并不能确保ref会真正被更新,它只是一个先决条件。因此,从这个钩子发送通知(例如电子邮件)不是一个好主意。可以考虑使用post-receive钩子来代替。</target>
        </trans-unit>
        <trans-unit id="0454547376d4a4928bbfee6331b7c2a9fb4a2161" translate="yes" xml:space="preserve">
          <source>Such duplicates are generally frowned upon because they clutter up history, making it harder to follow. To clean things up, you need to transplant the commits on &lt;code&gt;topic&lt;/code&gt; to the new &lt;code&gt;subsystem&lt;/code&gt; tip, i.e., rebase &lt;code&gt;topic&lt;/code&gt;. This becomes a ripple effect: anyone downstream from &lt;code&gt;topic&lt;/code&gt; is forced to rebase too, and so on!</source>
          <target state="translated">此类副本通常令人讨厌，因为它们会使历史混乱，难以追踪。为了清理问题，您需要将关于 &lt;code&gt;topic&lt;/code&gt; 的提交移植到新的 &lt;code&gt;subsystem&lt;/code&gt; 技巧，即rebase &lt;code&gt;topic&lt;/code&gt; 。这会产生连锁反应： &lt;code&gt;topic&lt;/code&gt; 下游的任何人也必须重新设置基础，依此类推！</target>
        </trans-unit>
        <trans-unit id="8866d8895f273e182aecc88b4155660c1e2db399" translate="yes" xml:space="preserve">
          <source>Summarize &lt;code&gt;git log&lt;/code&gt; output</source>
          <target state="translated">汇总 &lt;code&gt;git log&lt;/code&gt; 输出</target>
        </trans-unit>
        <trans-unit id="ec1e3fb20faac142815eb47774b44cb84610e827" translate="yes" xml:space="preserve">
          <source>Summarizes &lt;code&gt;git log&lt;/code&gt; output in a format suitable for inclusion in release announcements. Each commit will be grouped by author and title.</source>
          <target state="translated">以适合发布公告的格式汇总 &lt;code&gt;git log&lt;/code&gt; 输出。每次提交将按作者和标题分组。</target>
        </trans-unit>
        <trans-unit id="5c7562d8e87120565b992b08061dcfabc4f3c861" translate="yes" xml:space="preserve">
          <source>Supplies raw data (for use as blob/file content, commit messages, or annotated tag messages) to fast-import. Data can be supplied using an exact byte count or delimited with a terminating line. Real frontends intended for production-quality conversions should always use the exact byte count format, as it is more robust and performs better. The delimited format is intended primarily for testing fast-import.</source>
          <target state="translated">为快速导入提供原始数据(用于blob/文件内容、提交消息或注释标签消息)。数据可以使用精确的字节数来提供,也可以用终止行来分隔。真正的前端用于生产质量的转换时,应该始终使用精确的字节数格式,因为它更强大,性能更好。分界线格式主要用于测试快速导入。</target>
        </trans-unit>
        <trans-unit id="e8dbb2eeb155ce2917c101c99bacbd864a5c427e" translate="yes" xml:space="preserve">
          <source>Support for these types of regular expressions is an optional compile-time dependency. If Git wasn&amp;rsquo;t compiled with support for them providing this option will cause it to die.</source>
          <target state="translated">对这些类型的正则表达式的支持是可选的编译时依赖性。如果没有为Git提供支持，则提供此选项将导致它死亡。</target>
        </trans-unit>
        <trans-unit id="8e97694d704a0343a9b684d493f12b44246fec5f" translate="yes" xml:space="preserve">
          <source>Support for this command is mandatory.</source>
          <target state="translated">该命令的支持是强制性的。</target>
        </trans-unit>
        <trans-unit id="e1b49c8e0d2e923baa9b1bdde89fd2d2c159197a" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0b920ef57768d484ba1cc526d81f954a574c57f" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;list for-push&lt;/code&gt; ， &lt;code&gt;export&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72ec6998fb5b35dff686188df85ab0e3ad151b49" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;list for-push&lt;/code&gt; ， &lt;code&gt;push&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5829938d9cd5455d30d44c2ed56081b81ad0e8b1" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;fetch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4005d18cc0bff6da83fb1c69518c92481df2684" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;import&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff15abbc5988387a102f85b87106fa0f9a061a4c" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;stateless-connect&lt;/code&gt;.</source>
          <target state="translated">支持的命令： &lt;code&gt;stateless-connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d7833eb7ee78a4c26a83fcc81c3d2e9095611eb" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;connect&quot; capability.</source>
          <target state="translated">如果帮手具有 &quot;连接 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="3a93883be31e9529a29debf1107a5749f91adad7" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;export&quot; capability.</source>
          <target state="translated">如果帮手具有 &quot;导出 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="18465219e925f5ab7417753a2928593ca3f010cd" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; capability.</source>
          <target state="translated">如果帮手具有 &quot;fetch &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="6b3f007fcd47faeaf9e41420b8dd45804e011830" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; or &quot;import&quot; capability.</source>
          <target state="translated">如果帮助程序具有 &quot;获取 &quot;或 &quot;导入 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="4aca0b5526d05a696e7b36938ee6f6c5a0ea9ae4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;import&quot; capability.</source>
          <target state="translated">如果帮手具有 &quot;导入 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="e7ddf6d69b0131cf639e3107da22aa777a2105a4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;option&quot; capability.</source>
          <target state="translated">如果帮手有 &quot;选项 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="c098533fa12e5c25ff58bd90a0ea089d5ecbd91f" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; capability.</source>
          <target state="translated">如果帮手有 &quot;推 &quot;的功能,则支持。</target>
        </trans-unit>
        <trans-unit id="fb7b526ef7e22c9e1afe23a10d0bc8d29b1f28b6" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; or &quot;export&quot; capability.</source>
          <target state="translated">如果帮手具有 &quot;推送 &quot;或 &quot;导出 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="b4c51ee5ffb300c10c9d8c4078d940f537159814" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;stateless-connect&quot; capability.</source>
          <target state="translated">如果帮助程序具有 &quot;无状态连接 &quot;功能,则支持。</target>
        </trans-unit>
        <trans-unit id="05ab661bd504730c5b7114057d0bdfc9f5d779d8" translate="yes" xml:space="preserve">
          <source>Supports file additions, removals, and commits that affect binary files.</source>
          <target state="translated">支持影响二进制文件的文件添加、删除和提交。</target>
        </trans-unit>
        <trans-unit id="837f71448f49e2e0d9f370a0f4924a3332c3ce70" translate="yes" xml:space="preserve">
          <source>Suppose a shared repository is set up in /pub/repo.git on the host foo.com. Then as an individual committer you can clone the shared repository over ssh with:</source>
          <target state="translated">假设在主机foo.com的/pub/repo.git中建立了一个共享仓库。那么作为一个个人提交者,你可以通过ssh克隆共享仓库。</target>
        </trans-unit>
        <trans-unit id="776b1e3e664257166a794955fe1e330d0ed23c81" translate="yes" xml:space="preserve">
          <source>Suppose further that the two development lines merge cleanly at C, so no conflict resolution is required.</source>
          <target state="translated">进一步假设两条发展线在C处完全合并,所以不需要解决冲突。</target>
        </trans-unit>
        <trans-unit id="e8f9a38765e97d2341920d57addc2939bc25d7eb" translate="yes" xml:space="preserve">
          <source>Suppose that Alice has started a new project with a Git repository in /home/alice/project, and that Bob, who has a home directory on the same machine, wants to contribute.</source>
          <target state="translated">假设Alice启动了一个新的项目,Git仓库在/home/alice/project中,而Bob在同一台机器上有一个主目录,他想做出贡献。</target>
        </trans-unit>
        <trans-unit id="f0185bb1f9b382ec2ad8024131a049405c5d0a74" translate="yes" xml:space="preserve">
          <source>Suppose that in the meantime on the lower line of development somebody adds a new calling site for that function at commit Y. The commits from Z leading to B all assume the old semantics of that function and the callers and the callee are consistent with each other. There is no bug at B, either.</source>
          <target state="translated">假设在下线开发的同时,有人在提交Y处为该函数添加了一个新的调用点,从Z到B的提交都假定了该函数的旧语义,调用者和被调用者是一致的。B处也没有bug。</target>
        </trans-unit>
        <trans-unit id="391a0e24d7cf4e807cbdc6c67d247a126500a7a1" translate="yes" xml:space="preserve">
          <source>Suppose that on the upper line of development, the meaning of one of the functions that exists at Z is changed at commit X. The commits from Z leading to A change both the function&amp;rsquo;s implementation and all calling sites that exist at Z, as well as new calling sites they add, to be consistent. There is no bug at A.</source>
          <target state="translated">假设在开发的最上面，在提交X处更改了Z处存在的功能之一的含义。从Z到A的提交更改了函数的实现以及Z处存在的所有调用站点，以及为了保持一致，他们添加了新的呼叫站点。A没有错误。</target>
        </trans-unit>
        <trans-unit id="4264938eda486beabd24f72d431c53e3aa7556fd" translate="yes" xml:space="preserve">
          <source>Suppose that you create a branch &lt;code&gt;mywork&lt;/code&gt; on a remote-tracking branch &lt;code&gt;origin&lt;/code&gt;, and create some commits on top of it:</source>
          <target state="translated">假设您在远程跟踪分支 &lt;code&gt;origin&lt;/code&gt; 上创建一个分支 &lt;code&gt;mywork&lt;/code&gt; ，并在其之上创建一些提交：</target>
        </trans-unit>
        <trans-unit id="3c9c906e2a1276113a369eaaabf56387154b9496" translate="yes" xml:space="preserve">
          <source>Suppose that you have created lots of logically separate changes and committed them together. Then, later you decide that it might be better to have each logical chunk associated with its own commit. You can use git reset to rewind history without changing the contents of your local files, and then successively use &lt;code&gt;git add -p&lt;/code&gt; to interactively select which hunks to include into each commit, using &lt;code&gt;git commit -c&lt;/code&gt; to pre-populate the commit message.</source>
          <target state="translated">假设您创建了许多逻辑上分开的更改并将它们一起提交。然后，稍后您决定让每个逻辑块与其自己的提交相关联可能会更好。您可以使用git reset来回滚历史记录，而无需更改本地文件的内容，然后依次使用 &lt;code&gt;git add -p&lt;/code&gt; 交互式地选择要包含在每个提交中的块，使用 &lt;code&gt;git commit -c&lt;/code&gt; 来预先填充提交消息。</target>
        </trans-unit>
        <trans-unit id="02fbd8fc87f2a350a49d8620ee0b30d4bf4e4abd" translate="yes" xml:space="preserve">
          <source>Suppose version 2.6.18 of your project worked, but the version at &quot;master&quot; crashes. Sometimes the best way to find the cause of such a regression is to perform a brute-force search through the project&amp;rsquo;s history to find the particular commit that caused the problem. The &lt;a href=&quot;git-bisect&quot;&gt;git-bisect[1]&lt;/a&gt; command can help you do this:</source>
          <target state="translated">假设项目的2.6.18版可以正常工作，但是&amp;ldquo; master&amp;rdquo;上的版本崩溃了。有时，找到导致这种回归的原因的最好方法是对项目的历史记录进行蛮力搜索，以找出引起问题的特定提交。该&lt;a href=&quot;git-bisect&quot;&gt;混帐平分[1]&lt;/a&gt;命令可以帮助你做到这一点：</target>
        </trans-unit>
        <trans-unit id="fe43e13972d777424e11db2803667e644671ba7d" translate="yes" xml:space="preserve">
          <source>Suppose you are a contributor to a large project, and you want to add a complicated feature, and to present it to the other developers in a way that makes it easy for them to read your changes, verify that they are correct, and understand why you made each change.</source>
          <target state="translated">假设你是一个大型项目的贡献者,你想添加一个复杂的功能,并将其展示给其他开发者,使他们能够轻松地阅读你的修改,验证它们是否正确,并理解为什么你做了每一个修改。</target>
        </trans-unit>
        <trans-unit id="3acc0c164272600e31526ab46c74892c1aa07162" translate="yes" xml:space="preserve">
          <source>Suppose you are interrupted by an urgent fix request while you are in the middle of a large change. The files in your working tree are not in any shape to be committed yet, but you need to get to the other branch for a quick bugfix.</source>
          <target state="translated">假设你正在进行一个大的改动时,被一个紧急的修复请求打断了,你的工作树中的文件还没有提交,但你需要到另一个分支进行快速的错误修复。你的工作树中的文件还没有任何形式的提交,但你需要去另一个分支进行快速的错误修复。</target>
        </trans-unit>
        <trans-unit id="206336da1c56023f89c7e12354f95287caca26a2" translate="yes" xml:space="preserve">
          <source>Suppose you are working on something and you commit it, and then you continue working a bit more, but now you think that what you have in your working tree should be in another branch that has nothing to do with what you committed previously. You can start a new branch and reset it while keeping the changes in your working tree.</source>
          <target state="translated">假设你正在做某件事情,并提交了它,然后你又继续做了一些工作,但现在你认为你的工作树中的内容应该在另一个分支中,而这个分支与你之前提交的内容没有关系。你可以开始一个新的分支,然后重新设置,同时保留工作树中的变化。</target>
        </trans-unit>
        <trans-unit id="25caa4df3e00bbf0c1bcbf48ca3bbcb805b36ab6" translate="yes" xml:space="preserve">
          <source>Suppose you have added a file to your index, but later decide you do not want to add it to your commit. You can remove the file from the index while keeping your changes with git reset.</source>
          <target state="translated">假设您在索引中添加了一个文件,但后来决定不将其添加到提交中。你可以用 git reset 从索引中删除文件,同时保留你的修改。</target>
        </trans-unit>
        <trans-unit id="9419c8de1f4e3152ef10e8d631b17a6a8c4bb66f" translate="yes" xml:space="preserve">
          <source>Suppose you know that the commit e05db0fd fixed a certain problem. You&amp;rsquo;d like to find the earliest tagged release that contains that fix.</source>
          <target state="translated">假设您知道提交e05db0fd解决了某个问题。您想找到包含该修复程序的最早的带标记的发行版。</target>
        </trans-unit>
        <trans-unit id="c40ef08f6cb59edadae067c6870364980c310ebf" translate="yes" xml:space="preserve">
          <source>Suppose you specified &lt;code&gt;foo&lt;/code&gt; as the &amp;lt;paths&amp;gt;. We shall call commits that modify &lt;code&gt;foo&lt;/code&gt; !TREESAME, and the rest TREESAME. (In a diff filtered for &lt;code&gt;foo&lt;/code&gt;, they look different and equal, respectively.)</source>
          <target state="translated">假设您将 &lt;code&gt;foo&lt;/code&gt; 指定为&amp;lt;paths&amp;gt;。我们将调用修改 &lt;code&gt;foo&lt;/code&gt; ！TREESAME的提交，其余的调用TREESAME。（在针对 &lt;code&gt;foo&lt;/code&gt; 过滤的差异中，它们分别看起来不同且相等。）</target>
        </trans-unit>
        <trans-unit id="cb2a200ea83c58efe22ad112266f5c75d08a4a2e" translate="yes" xml:space="preserve">
          <source>Suppose you want to check whether two branches point at the same point in history.</source>
          <target state="translated">假设你想检查两个分支是否指向历史上的同一个点。</target>
        </trans-unit>
        <trans-unit id="a4ad635bf26628e292f1bfd04aa9f0a4ae18d146" translate="yes" xml:space="preserve">
          <source>Suppose you want to know how many commits you&amp;rsquo;ve made on &lt;code&gt;mybranch&lt;/code&gt; since it diverged from &lt;code&gt;origin&lt;/code&gt;:</source>
          <target state="translated">假设您想知道自 &lt;code&gt;mybranch&lt;/code&gt; 脱离 &lt;code&gt;origin&lt;/code&gt; 以来您已经进行了多少次提交：</target>
        </trans-unit>
        <trans-unit id="f9ddeae1484388d5dab75e34df1cfd67e52a3e70" translate="yes" xml:space="preserve">
          <source>Suppose you want to rebase the side branch starting at &quot;A&quot; to &quot;Q&quot;. Make sure that the current HEAD is &quot;B&quot;, and call</source>
          <target state="translated">假设你想把从 &quot;A &quot;开始的侧枝重垒为 &quot;Q&quot;。确保当前的 HEAD 是 &quot;B&quot;,然后调用</target>
        </trans-unit>
        <trans-unit id="b5613771383533c24d3d428fdc1ae60e9fd438c4" translate="yes" xml:space="preserve">
          <source>Suppose you want to remove a file (containing confidential information or copyright violation) from all commits:</source>
          <target state="translated">假设你想从所有的提交中删除一个文件(包含机密信息或侵犯版权)。</target>
        </trans-unit>
        <trans-unit id="ff7d0768a57dca637d6eab253f0d487ae1222161" translate="yes" xml:space="preserve">
          <source>Suppose you would like to see all the commits reachable from the branch head named &lt;code&gt;master&lt;/code&gt; but not from any other head in your repository.</source>
          <target state="translated">假设您希望看到所有提交都可以从名为 &lt;code&gt;master&lt;/code&gt; 的分支头访问，而不能从存储库中的其他任何头访问。</target>
        </trans-unit>
        <trans-unit id="9946995b81548e47df6c8b8392c1840733fdb964" translate="yes" xml:space="preserve">
          <source>Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream.</source>
          <target state="translated">除非发生错误,否则抑制所有输出,包括更新的参考文献列表。进度不会报告给标准错误流。</target>
        </trans-unit>
        <trans-unit id="c4b3a6cd7a8560fe90c65c121ee87d36135f6602" translate="yes" xml:space="preserve">
          <source>Suppress all progress reports.</source>
          <target state="translated">压制所有进度报告。</target>
        </trans-unit>
        <trans-unit id="a819bd2ff05cd55161823638237268e190be312a" translate="yes" xml:space="preserve">
          <source>Suppress commit description and provide a commit count summary only.</source>
          <target state="translated">隐藏提交描述,只提供提交次数摘要。</target>
        </trans-unit>
        <trans-unit id="e799a643bdb9c82fda51c43573cb85b70de9e54e" translate="yes" xml:space="preserve">
          <source>Suppress commit summary message.</source>
          <target state="translated">抑制提交摘要信息。</target>
        </trans-unit>
        <trans-unit id="1a696049e271af3ebf56a00bfbec639053a19da0" translate="yes" xml:space="preserve">
          <source>Suppress diff output. Useful for commands like &lt;code&gt;git show&lt;/code&gt; that show the patch by default, or to cancel the effect of &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">抑制差异输出。对于像 &lt;code&gt;git show&lt;/code&gt; 这样的命令很有用，这些命令默认情况下显示补丁，或取消 &lt;code&gt;--patch&lt;/code&gt; 的效果。</target>
        </trans-unit>
        <trans-unit id="93e56a37493c6ba4434b0b6ea5eb008e9221a320" translate="yes" xml:space="preserve">
          <source>Suppress the author name and timestamp from the output.</source>
          <target state="translated">从输出中删除作者姓名和时间戳。</target>
        </trans-unit>
        <trans-unit id="f43798729bfff9f209d330c349626cb5165ac751" translate="yes" xml:space="preserve">
          <source>Swap two inputs; that is, show differences from index or on-disk file to tree contents.</source>
          <target state="translated">交换两个输入;即显示从索引或磁盘文件到树内容的差异。</target>
        </trans-unit>
        <trans-unit id="e5e55f7f46ad773b6efc6aca47e818298efdba7d" translate="yes" xml:space="preserve">
          <source>Switch branches</source>
          <target state="translated">切换分支</target>
        </trans-unit>
        <trans-unit id="c1c3479fb48988243819a9ed632d7db49472e85a" translate="yes" xml:space="preserve">
          <source>Switch branches or restore working tree files</source>
          <target state="translated">切换分支或恢复工作树文件</target>
        </trans-unit>
        <trans-unit id="dfdb03e90173f2e2bacd7c02f01c4407ebc5e4a7" translate="yes" xml:space="preserve">
          <source>Switch to &lt;code&gt;topic/wip&lt;/code&gt; branch and keep working.</source>
          <target state="translated">切换到 &lt;code&gt;topic/wip&lt;/code&gt; 分支并继续工作。</target>
        </trans-unit>
        <trans-unit id="376cbb6cbd05a4fda1d6b5e220f115dcce8e44f1" translate="yes" xml:space="preserve">
          <source>Switch to a commit for inspection and discardable experiments. See the &quot;DETACHED HEAD&quot; section in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; for details.</source>
          <target state="translated">切换到提交进行检查和可丢弃实验。有关详细信息，请参见&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]中&lt;/a&gt;的&amp;ldquo; DETACHED HEAD&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="0362a7c9eb4dad56855ff5dd55a91d5b93e6f9c7" translate="yes" xml:space="preserve">
          <source>Switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch.</source>
          <target state="translated">切换到指定的分支。工作树和索引会被更新以匹配该分支。所有新提交的内容都会被添加到该分支的顶端。</target>
        </trans-unit>
        <trans-unit id="c4a37023c84f04e66def4788394f47d95de02383" translate="yes" xml:space="preserve">
          <source>Switching branches does not require a clean index and working tree (i.e. no differences compared to &lt;code&gt;HEAD&lt;/code&gt;). The operation is aborted however if the operation leads to loss of local changes, unless told otherwise with &lt;code&gt;--discard-changes&lt;/code&gt; or &lt;code&gt;--merge&lt;/code&gt;.</source>
          <target state="translated">切换分支不需要干净的索引和工作树（即，与 &lt;code&gt;HEAD&lt;/code&gt; 相比没有区别）。但是，如果该操作导致丢失本地更改，则该操作将中止，除非使用 &lt;code&gt;--discard-changes&lt;/code&gt; 或 &lt;code&gt;--merge&lt;/code&gt; 另行通知。</target>
        </trans-unit>
        <trans-unit id="2a44d54fe8d0fbe571632defb5e0f0bfcb635688" translate="yes" xml:space="preserve">
          <source>Symbolic identifiers</source>
          <target state="translated">符号标识符</target>
        </trans-unit>
        <trans-unit id="edf50a81800d6af816fa28268463b4a137a670b4" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format 'ref: refs/some/thing' and when referenced, it recursively dereferences to this reference. '&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;' is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">符号引用：它不包含&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id本身，而是采用'ref：refs / some / thing'格式，并且在被引用时，以递归方式取消引用此引用。' &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; '是symref的主要示例。使用&lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt;命令可操纵符号引用。</target>
        </trans-unit>
        <trans-unit id="6dc4afea6b4b62629fc3af96ff8aeb71d81ce355" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format &lt;code&gt;ref: refs/some/thing&lt;/code&gt; and when referenced, it recursively dereferences to this reference. &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">符号引用：它不包含&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; ID本身，而是采用 &lt;code&gt;ref: refs/some/thing&lt;/code&gt; 的格式，并且在被引用时，以递归方式取消引用此引用。 &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; 是symref的主要示例。使用&lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt;命令可操纵符号引用。</target>
        </trans-unit>
        <trans-unit id="7d980e6b3e0dc3c2265b8f39aea640f21a2c26c7" translate="yes" xml:space="preserve">
          <source>Symlinks in &lt;code&gt;$GIT_DIR&lt;/code&gt; are not resolved before matching.</source>
          <target state="translated">匹配之前， &lt;code&gt;$GIT_DIR&lt;/code&gt; 不会解析。</target>
        </trans-unit>
        <trans-unit id="905f63092ff26517a7aa8083857b3c8af9707002" translate="yes" xml:space="preserve">
          <source>Sync</source>
          <target state="translated">Sync</target>
        </trans-unit>
        <trans-unit id="1cafa24e02c13e63ccc749c8cc50c089372b01c9" translate="yes" xml:space="preserve">
          <source>Sync options</source>
          <target state="translated">同步选项</target>
        </trans-unit>
        <trans-unit id="a05ba5351cf72e05a13ed22352248517859a3ce9" translate="yes" xml:space="preserve">
          <source>Synchronizes submodules' remote URL configuration setting to the value specified in &lt;code&gt;.gitmodules&lt;/code&gt;. It will only affect those submodules which already have a URL entry in .git/config (that is the case when they are initialized or freshly added). This is useful when submodule URLs change upstream and you need to update your local repositories accordingly.</source>
          <target state="translated">将子模块的远程URL配置设置同步到 &lt;code&gt;.gitmodules&lt;/code&gt; 中指定的值。它只会影响那些已经在.git / config中具有URL条目的子模块（在初始化或新添加子模块时就是这种情况）。当子模块URL向上游更改并且您需要相应地更新本地存储库时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="3ac8d1a1aa5500a3e968826312a150affc9dc46d" translate="yes" xml:space="preserve">
          <source>Syncing repositories</source>
          <target state="translated">同步存储库</target>
        </trans-unit>
        <trans-unit id="566e604d58292e23d183e78e39f3823e9b42de23" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=cumulative</source>
          <target state="translated">同义词 --dirstat=累积的</target>
        </trans-unit>
        <trans-unit id="f1c4d35b0c03f286600f7fb27eae33fe27989165" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=files,param1,param2&amp;hellip;​</source>
          <target state="translated">--dirstat = files，param1，param2 ...的同义词</target>
        </trans-unit>
        <trans-unit id="030318e98e2891ff258d5f1c486159aabe2ec3cd" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; (the noun).</source>
          <target state="translated">&lt;a href=&quot;#def_commit&quot;&gt;提交的&lt;/a&gt;同义词（名词）。</target>
        </trans-unit>
        <trans-unit id="98387ba9809590c01ed4197e28a198c994b76d39" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#def_object_name&quot;&gt;对象名称的&lt;/a&gt;同义词。</target>
        </trans-unit>
        <trans-unit id="05205baafaafa5f371ceb6761f66c9a9092bfca8" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt; (for arch people).</source>
          <target state="translated">&lt;a href=&quot;#def_repository&quot;&gt;存储库的&lt;/a&gt;同义词（对于拱门人）。</target>
        </trans-unit>
        <trans-unit id="bd983733ce10be3d6383ba3ae94c790c5998f587" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;--date=relative&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--date=relative&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="7204033ad0a3ce5a123aa68893dbb1ec2d44eb7f" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --raw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p --raw&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="e2c85a45d4841ec1bc0daa5da30d63888f50f751" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --stat&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-p --stat&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="4826ecc5c9ae249b105cc0f800bf317e1bf3ce71" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;--more=-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--more=-1&lt;/code&gt; 的同义词</target>
        </trans-unit>
        <trans-unit id="375d34b627071e9b56cd3502d59bf963af19d37c" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;merge.log&lt;/code&gt;; this is deprecated and will be removed in the future.</source>
          <target state="translated">同义词 &lt;code&gt;merge.log&lt;/code&gt; ; 不推荐使用，以后将删除它。</target>
        </trans-unit>
        <trans-unit id="d87db41828b59d9f281eb9d60b0fac7e88c656b9" translate="yes" xml:space="preserve">
          <source>Synonyms to --log and --no-log; these are deprecated and will be removed in the future.</source>
          <target state="translated">与--log和--no-log的同义词;这两个词已经过时,将来会被删除。</target>
        </trans-unit>
        <trans-unit id="c9c7aa6b4fd156059c823cdabeac32daf66bec16" translate="yes" xml:space="preserve">
          <source>Synonyms to --stat and --no-stat; these are deprecated and will be removed in the future.</source>
          <target state="translated">与--stat和--no-stat的同义词;这两个词已经过时,将来会被删除。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="121e826ad7717bacfd25c6cf738291790df9e550" translate="yes" xml:space="preserve">
          <source>Syntax is compatible with the file used by &lt;code&gt;git cvsimport&lt;/code&gt; but an empty email address can be supplied with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">语法与 &lt;code&gt;git cvsimport&lt;/code&gt; 所使用的文件兼容，但是 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 可以提供一个空的电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="bd2d182068c3eb81ead850c75865e8ae2f054c99" translate="yes" xml:space="preserve">
          <source>System-wide configuration file.</source>
          <target state="translated">全系统的配置文件。</target>
        </trans-unit>
        <trans-unit id="bb78aa3d24f5df42764064db56cde78ca1a563d8" translate="yes" xml:space="preserve">
          <source>T: change in the type of the file</source>
          <target state="translated">T:改变文件的类型</target>
        </trans-unit>
        <trans-unit id="a5e95b00d8bbc7641f64bca05aef94e0873eb866" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE FUTURE.</source>
          <target state="translated">本命令是试验性的。它的行为,以及其他命令在出现稀疏检查时的行为,很可能会在未来发生变化。</target>
        </trans-unit>
        <trans-unit id="9667ca46bdeede85b6c2fc52e7779cc06938e375" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE.</source>
          <target state="translated">这个命令是试验性的,行为可能会改变。</target>
        </trans-unit>
        <trans-unit id="667949023cc3f454cb0d70e83c52143e1650458d" translate="yes" xml:space="preserve">
          <source>TRAILER:</source>
          <target state="translated">TRAILER:</target>
        </trans-unit>
        <trans-unit id="a2ba9a257606db8185ab32e1350e244ce43cc422" translate="yes" xml:space="preserve">
          <source>Tag Object</source>
          <target state="translated">标签对象</target>
        </trans-unit>
        <trans-unit id="cb8b1e1903f812d19eec6ff05583389fd13d1603" translate="yes" xml:space="preserve">
          <source>Tag format</source>
          <target state="translated">标签格式</target>
        </trans-unit>
        <trans-unit id="7e41343aeba4393f005c76977eda409bbd77862f" translate="yes" xml:space="preserve">
          <source>Tag names are automatically prefixed with &lt;code&gt;refs/tags/&lt;/code&gt; when stored in Git, so importing the CVS branch symbol &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; would use just &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, and fast-import will write the corresponding ref as &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt;.</source>
          <target state="translated">当标签名称存储在Git中时，标签名称会自动加上 &lt;code&gt;refs/tags/&lt;/code&gt; 前缀，因此导入CVS分支符号 &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; 只会对 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 使用 &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; ，而fast-import会将相应的ref写为 &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e6fe4e0ae7885e683d9ee3f683c218e6902b977" translate="yes" xml:space="preserve">
          <source>Tag objects (created with &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u&lt;/code&gt;) are called &quot;annotated&quot; tags; they contain a creation date, the tagger name and e-mail, a tagging message, and an optional GnuPG signature. Whereas a &quot;lightweight&quot; tag is simply a name for an object (usually a commit object).</source>
          <target state="translated">标记对象（使用 &lt;code&gt;-a&lt;/code&gt; ， &lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;-u&lt;/code&gt; 创建）称为&amp;ldquo;带注释&amp;rdquo;标记；它们包含创建日期，标记者名称和电子邮件，标记消息以及可选的GnuPG签名。而&amp;ldquo;轻量级&amp;rdquo;标签只是对象（通常是提交对象）的名称。</target>
        </trans-unit>
        <trans-unit id="71ea1d47718752d76e2ffd9d2603ad43ca73b3c9" translate="yes" xml:space="preserve">
          <source>Tagging a version</source>
          <target state="translated">标记一个版本</target>
        </trans-unit>
        <trans-unit id="637cc41ee731974198f97641d9bdfb130460784b" translate="yes" xml:space="preserve">
          <source>Tags are expected to always point at the same version of a project, while heads are expected to advance as development progresses.</source>
          <target state="translated">标签要始终指向项目的同一个版本,而头部则要随着开发进度推进。</target>
        </trans-unit>
        <trans-unit id="888bc919d88641f62426fddc6b7cfc9f6452b8d3" translate="yes" xml:space="preserve">
          <source>Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit.</source>
          <target state="translated">使用现有的提交对象,并在创建提交时重用日志信息和作者信息(包括时间戳)。</target>
        </trans-unit>
        <trans-unit id="69d5f1e03c82cbcd587369170c6624b0cf043d55" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. This option disables the &lt;code&gt;--edit&lt;/code&gt; option.</source>
          <target state="translated">从给定文件中获取提交消息。此选项禁用 &lt;code&gt;--edit&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="55362ac1695784c6e28770360066065f70c4271a" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input.</source>
          <target state="translated">从给定文件中获取提交消息。使用 &lt;code&gt;-&lt;/code&gt; 从标准输入中读取消息。</target>
        </trans-unit>
        <trans-unit id="e36d4d8811a867676a670c71431af6f45b8cdbfc" translate="yes" xml:space="preserve">
          <source>Take the configuration from the given file instead of .git/config. Using the &quot;--global&quot; option forces this to ~/.gitconfig. Using the &quot;--system&quot; option forces this to $(prefix)/etc/gitconfig.</source>
          <target state="translated">从给定文件中获取配置,而不是.git/config。使用&quot;--global &quot;选项强制将其转为~/.gitconfig。使用&quot;--system &quot;选项,则会将其强制到$(prefix)/etc/gitconfig。</target>
        </trans-unit>
        <trans-unit id="29a57524801de08e4acaf7aa5d5fef7d3a95fdaf" translate="yes" xml:space="preserve">
          <source>Take the given blob object (for example, another note) as the note message. (Use &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; instead to copy notes between objects.)</source>
          <target state="translated">将给定的Blob对象（例如，另一个便笺）作为便笺消息。（使用 &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; 来在对象之间复制注释。）</target>
        </trans-unit>
        <trans-unit id="d362e00efeb54e4840d9ea63f1d18d0cce50b4f2" translate="yes" xml:space="preserve">
          <source>Take the list of merged objects from &amp;lt;file&amp;gt; instead of stdin.</source>
          <target state="translated">从&amp;lt;file&amp;gt;而不是stdin获取合并对象的列表。</target>
        </trans-unit>
        <trans-unit id="85714dc37d705ec3059aca2b86357cf12078cff0" translate="yes" xml:space="preserve">
          <source>Take the list of refs from stdin, one per line. If there are refs specified on the command line in addition to this option, then the refs from stdin are processed after those on the command line.</source>
          <target state="translated">从 stdin 中获取 refs 列表,每行一个。如果除了这个选项之外,命令行上还有指定的参考文献,那么来自stdin的参考文献将在命令行上的参考文献之后处理。</target>
        </trans-unit>
        <trans-unit id="e793a474854bfcd7a2387829ec157d014acaec34" translate="yes" xml:space="preserve">
          <source>Take the note message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the note message from the standard input. Lines starting with &lt;code&gt;#&lt;/code&gt; and empty lines other than a single line between paragraphs will be stripped out.</source>
          <target state="translated">从给定的文件中获取注释消息。使用 &lt;code&gt;-&lt;/code&gt; 从标准输入中读取注释消息。以 &lt;code&gt;#&lt;/code&gt; 开头的行和段落之间的空行（段落之间的单行除外）将被删除。</target>
        </trans-unit>
        <trans-unit id="b415454b3e57aca4cd9775be68c013d0b1cba35f" translate="yes" xml:space="preserve">
          <source>Take the tag message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input. Implies &lt;code&gt;-a&lt;/code&gt; if none of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is given.</source>
          <target state="translated">从给定的文件中获取标签消息。使用 &lt;code&gt;-&lt;/code&gt; 从标准输入中读取消息。意味着 &lt;code&gt;-a&lt;/code&gt; 如果没有的 &lt;code&gt;-a&lt;/code&gt; ， &lt;code&gt;-s&lt;/code&gt; ，或 &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; 给出。</target>
        </trans-unit>
        <trans-unit id="437fabd9a3b90a4e3feee997e0efd394e0e18037" translate="yes" xml:space="preserve">
          <source>Take the version from the current branch as the tentative merge result, and declare that the merge has conflicts. This is suitable for binary files that do not have a well-defined merge semantics.</source>
          <target state="translated">以当前分支的版本作为暂定的合并结果,并声明合并有冲突。这适用于没有明确定义合并语义的二进制文件。</target>
        </trans-unit>
        <trans-unit id="8adfe6e8bfbfb71c863cfc8d3c7f83de8a17ccfc" translate="yes" xml:space="preserve">
          <source>Takes the list of merged objects on stdin and produces a suitable commit message to be used for the merge commit, usually to be passed as the &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; argument of &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">在stdin上获取合并对象的列表，并生成用于合并提交的合适的提交消息，通常作为 &lt;code&gt;git merge&lt;/code&gt; 的 &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; 参数传递。</target>
        </trans-unit>
        <trans-unit id="a792b2d24cbb9bea552de7c52e443e6ec570f86e" translate="yes" xml:space="preserve">
          <source>Takes the patches given on the command line and emails them out. Patches can be specified as files, directories (which will send all files in the directory), or directly as a revision list. In the last case, any format accepted by &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; can be passed to git send-email.</source>
          <target state="translated">取得命令行上给出的补丁，并通过电子邮件发送出去。修补程序可以指定为文件，目录（将发送目录中的所有文件），也可以直接指定为修订列表。在最后一种情况下，&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;接受的任何格式都可以传递给git send-email。</target>
        </trans-unit>
        <trans-unit id="6a0ff7754ecf08c3c8186e018764aeb2fd2691af" translate="yes" xml:space="preserve">
          <source>Talk to the IMAP server using git&amp;rsquo;s own IMAP routines instead of using libcurl. Ignored if Git was built with the NO_OPENSSL option set.</source>
          <target state="translated">使用git自己的IMAP例程而不是libcurl与IMAP服务器通信。忽略是否​​使用NO_OPENSSL选项集构建了Git。</target>
        </trans-unit>
        <trans-unit id="8452733fe9983e27bdd86ccd2806b4879b9eed76" translate="yes" xml:space="preserve">
          <source>Target of the home link on the top of all pages (the first part of view &quot;breadcrumbs&quot;). By default it is set to the absolute URI of a current page (to the value of &lt;code&gt;$my_uri&lt;/code&gt; variable, or to &quot;/&quot; if &lt;code&gt;$my_uri&lt;/code&gt; is undefined or is an empty string).</source>
          <target state="translated">所有页面顶部的主页链接的目标（视图&amp;ldquo;面包屑&amp;rdquo;的第一部分）。默认情况下，它设置为当前页面的绝对URI（设置为 &lt;code&gt;$my_uri&lt;/code&gt; 变量的值，如果 &lt;code&gt;$my_uri&lt;/code&gt; 未定义或为空字符串，则设置为&amp;ldquo; /&amp;rdquo; ）。</target>
        </trans-unit>
        <trans-unit id="b83c8f8bfe5de4730b897d69d4046995d166efe4" translate="yes" xml:space="preserve">
          <source>Targets are defined using a VTable allowing easy extension to other formats in the future. This might be used to define a binary format, for example.</source>
          <target state="translated">目标是用VTable定义的,允许将来很容易扩展到其他格式。例如,这可以用来定义一个二进制格式。</target>
        </trans-unit>
        <trans-unit id="b51ba0493561f3b3deddd8211a5a385cd8601db7" translate="yes" xml:space="preserve">
          <source>Technical discussion</source>
          <target state="translated">技术讨论</target>
        </trans-unit>
        <trans-unit id="7d2e519ddfe0c57b9b7de69eeaa388f193a9848e" translate="yes" xml:space="preserve">
          <source>Tell Git that canonical representation of files in the repository has changed over time (e.g. earlier commits record text files with CRLF line endings, but recent ones use LF line endings). In such a repository, Git can convert the data recorded in commits to a canonical form before performing a merge to reduce unnecessary conflicts. For more information, see section &quot;Merging branches with differing checkin/checkout attributes&quot; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">告诉Git，存储库中文件的规范表示已随着时间而改变（例如，较早的提交具有CRLF行尾的记录文本文件，但是最近的提交使用LF行尾）。在这样的存储库中，Git可以在执行合并之前将提交中记录的数据转换为规范形式，以减少不必要的冲突。有关更多信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]中的&lt;/a&gt; &amp;ldquo;合并具有不同签入/签出属性的分支&amp;rdquo;一节。</target>
        </trans-unit>
        <trans-unit id="b5b3a0f2444b1d5713e25e3bc88878530e280cdf" translate="yes" xml:space="preserve">
          <source>Tell Git to use it.</source>
          <target state="translated">告诉Git使用它。</target>
        </trans-unit>
        <trans-unit id="bebd78f164bb96ec184a42572b9740f676dbf149" translate="yes" xml:space="preserve">
          <source>Tell cvsexportcommit that the current working directory is not only a Git checkout, but also the CVS checkout. Therefore, Git will reset the working directory to the parent commit before proceeding.</source>
          <target state="translated">告诉 cvsexportcommit 当前的工作目录不仅是 Git 的签出,也是 CVS 的签出。因此,Git 会在继续之前将工作目录重置为父提交。</target>
        </trans-unit>
        <trans-unit id="ccc8867e7c10f12bec70f18c0ebdd4b98ffcfd5b" translate="yes" xml:space="preserve">
          <source>Tell git-credential-cache&amp;mdash;​daemon to ignore SIGHUP, instead of quitting.</source>
          <target state="translated">告诉git-credential-cache-守护程序忽略SIGHUP，而不是退出。</target>
        </trans-unit>
        <trans-unit id="500ee09ba16068aaf0936f5ee6b5ef58c4f8bd06" translate="yes" xml:space="preserve">
          <source>Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected.</source>
          <target state="translated">告诉命令自动缓存已经被修改和删除的文件,但没有告诉 Git 的新文件不受影响。</target>
        </trans-unit>
        <trans-unit id="a69e5b7ab968a315154a9d1fd7cf0d147021841a" translate="yes" xml:space="preserve">
          <source>Telling Git about your changes.</source>
          <target state="translated">把你的变化告诉Git。</target>
        </trans-unit>
        <trans-unit id="52aedbe077c84f7c253f79171da85dc15b08fdf7" translate="yes" xml:space="preserve">
          <source>Telling Git your name</source>
          <target state="translated">告诉Git你的名字</target>
        </trans-unit>
        <trans-unit id="47964a2a2b9ba19cb7edfe94ae99ae894e487ad7" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git add&lt;/code&gt; to continue adding files when some files cannot be added due to indexing errors. Equivalent to the &lt;code&gt;--ignore-errors&lt;/code&gt; option of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;. &lt;code&gt;add.ignore-errors&lt;/code&gt; is deprecated, as it does not follow the usual naming convention for configuration variables.</source>
          <target state="translated">当由于索引错误而无法添加某些文件时，告诉 &lt;code&gt;git add&lt;/code&gt; 继续添加文件。等效于&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;的 &lt;code&gt;--ignore-errors&lt;/code&gt; 选项。不建议使用 &lt;code&gt;add.ignore-errors&lt;/code&gt; ，因为它不遵循配置变量的常规命名约定。</target>
        </trans-unit>
        <trans-unit id="e23c71acb4f3fb6cc5e3124fdbba41789615dcfa" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git apply&lt;/code&gt; how to handle whitespaces, in the same way as the &lt;code&gt;--whitespace&lt;/code&gt; option. See &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;.</source>
          <target state="translated">告诉 &lt;code&gt;git apply&lt;/code&gt; 和 &lt;code&gt;--whitespace&lt;/code&gt; 选项一样，如何处理空格。参见&lt;a href=&quot;git-apply&quot;&gt;git-apply [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b4fd4c56fbd55fd6a4b61da1b1b25feb1363cb0" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git branch&lt;/code&gt;, &lt;code&gt;git switch&lt;/code&gt; and &lt;code&gt;git checkout&lt;/code&gt; to set up new branches so that &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; will appropriately merge from the starting point branch. Note that even if this option is not set, this behavior can be chosen per-branch using the &lt;code&gt;--track&lt;/code&gt; and &lt;code&gt;--no-track&lt;/code&gt; options. The valid settings are: &lt;code&gt;false&lt;/code&gt; &amp;mdash; no automatic setup is done; &lt;code&gt;true&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is a remote-tracking branch; &lt;code&gt;always&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is either a local branch or remote-tracking branch. This option defaults to true.</source>
          <target state="translated">告诉 &lt;code&gt;git branch&lt;/code&gt; ， &lt;code&gt;git switch&lt;/code&gt; 和 &lt;code&gt;git checkout&lt;/code&gt; 设置新分支，以便&lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt;从起点分支适当合并。请注意，即使未设置此选项，也可以使用 &lt;code&gt;--track&lt;/code&gt; 和 &lt;code&gt;--no-track&lt;/code&gt; 选项在每个分支中选择此行为。有效设置为： &lt;code&gt;false&lt;/code&gt; -不执行自动设置；否则为false。 &lt;code&gt;true&lt;/code&gt; &amp;mdash;当起点是远程跟踪分支时，将完成自动设置； &lt;code&gt;always&lt;/code&gt; -当起点是本地分支或远程跟踪分支时，将完成自动设置。此选项默认为true。</target>
        </trans-unit>
        <trans-unit id="33792c2c707e004799933a452c481ccd3dd6df72" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;merge-recursive&lt;/code&gt; to use a different diff algorithm, which can help avoid mismerges that occur due to unimportant matching lines (such as braces from distinct functions). See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--diff-algorithm&lt;/code&gt;.</source>
          <target state="translated">告诉 &lt;code&gt;merge-recursive&lt;/code&gt; 使用不同的diff算法，这可以帮助避免由于不重要的匹配行（例如，来自不同函数的括号）而导致的合并错误。另请参见&lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--diff-algorithm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="322e9bf79fc78c188017b38cca0390d8ca24df83" translate="yes" xml:space="preserve">
          <source>Tells Git if the executable bit of files in the working tree is to be honored.</source>
          <target state="translated">告诉 Git 是否要尊重工作树中文件的可执行位。</target>
        </trans-unit>
        <trans-unit id="e732c8317ebf66ceb1e3db1424bc67bd01187e09" translate="yes" xml:space="preserve">
          <source>Template directory</source>
          <target state="translated">模板目录</target>
        </trans-unit>
        <trans-unit id="ab43df8613b6388c0548cc8be9da228db8e98898" translate="yes" xml:space="preserve">
          <source>Temporarily setting aside work in progress</source>
          <target state="translated">暂时搁置正在进行的工作</target>
        </trans-unit>
        <trans-unit id="8e2754fc91f29834706af71cfa26258d56805769" translate="yes" xml:space="preserve">
          <source>Temporary files</source>
          <target state="translated">临时文件</target>
        </trans-unit>
        <trans-unit id="9c01e9143498ee202aefdfaa27172587b4069975" translate="yes" xml:space="preserve">
          <source>Terminate entries with NUL, instead of LF. This implies the &lt;code&gt;--porcelain=v1&lt;/code&gt; output format if no other format is given.</source>
          <target state="translated">用NUL（而不是LF）终止条目。如果未指定其他格式，则表示 &lt;code&gt;--porcelain=v1&lt;/code&gt; 输出格式。</target>
        </trans-unit>
        <trans-unit id="07c6a191135373ac9d2aee0a3bde3b658792a63e" translate="yes" xml:space="preserve">
          <source>Terminate with error if there is no &lt;code&gt;done&lt;/code&gt; command at the end of the stream. This option might be useful for detecting errors that cause the frontend to terminate before it has started to write a stream.</source>
          <target state="translated">如果流的末尾没有 &lt;code&gt;done&lt;/code&gt; 命令，则以错误终止。此选项对于检测导致前端在开始写入流之前终止的错误很有用。</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="cf10c8624337ce67bcf480537830a31a54a327a5" translate="yes" xml:space="preserve">
          <source>Test suites are very nice. But when they are used alone, they are supposed to be used so that all the tests are checked after each commit. This means that they are not very efficient, because many tests are run for no interesting result, and they suffer from combinatorial explosion.</source>
          <target state="translated">测试套件是非常好的。但是当它们单独使用时,它们应该被使用,以便在每次提交后检查所有的测试。这意味着它们的效率并不高,因为很多测试都是为了没有有趣的结果而运行的,而且它们受到组合爆炸的影响。</target>
        </trans-unit>
        <trans-unit id="c7039b793911c3e74e0619b364427be7bb23668d" translate="yes" xml:space="preserve">
          <source>Testing has been done using both the CLI CVS client, and the Eclipse CVS plugin. Most functionality works fine with both of these clients.</source>
          <target state="translated">我们使用CLI CVS客户端和Eclipse CVS插件进行了测试。大部分功能在这两种客户端下都能正常工作。</target>
        </trans-unit>
        <trans-unit id="499b8eda34fd3ef3837b1d2448aadbb6279371d8" translate="yes" xml:space="preserve">
          <source>Testing partial commits</source>
          <target state="translated">测试部分提交</target>
        </trans-unit>
        <trans-unit id="c5dcd73cdfef43c79255820898dee98a4377a12f" translate="yes" xml:space="preserve">
          <source>Text editor for use by Git commands. The value is meant to be interpreted by the shell when it is used. Examples: &lt;code&gt;~/bin/vi&lt;/code&gt;, &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt;, &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot;
--nofork&lt;/code&gt;. The order of preference is the &lt;code&gt;$GIT_EDITOR&lt;/code&gt; environment variable, then &lt;code&gt;core.editor&lt;/code&gt; configuration, then &lt;code&gt;$VISUAL&lt;/code&gt;, then &lt;code&gt;$EDITOR&lt;/code&gt;, and then the default chosen at compile time, which is usually &lt;code&gt;vi&lt;/code&gt;.</source>
          <target state="translated">Git命令使用的文本编辑器。该值应在使用时由Shell解释。示例： &lt;code&gt;~/bin/vi&lt;/code&gt; ， &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt; ， &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot; --nofork&lt;/code&gt; 。优先顺序是 &lt;code&gt;$GIT_EDITOR&lt;/code&gt; 环境变量，然后是 &lt;code&gt;core.editor&lt;/code&gt; 配置，然后是 &lt;code&gt;$VISUAL&lt;/code&gt; ，然后是 &lt;code&gt;$EDITOR&lt;/code&gt; ，然后是编译时选择的默认值，通常是 &lt;code&gt;vi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="016aa532b4e9fa7fee1cc89b5c6aa348edd44f21" translate="yes" xml:space="preserve">
          <source>Text editor used by &lt;code&gt;git rebase -i&lt;/code&gt; for editing the rebase instruction file. The value is meant to be interpreted by the shell when it is used. It can be overridden by the &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; environment variable. When not configured the default commit message editor is used instead.</source>
          <target state="translated">&lt;code&gt;git rebase -i&lt;/code&gt; 使用的文本编辑器，用于编辑rebase指令文件。该值应在使用时由Shell解释。可以被 &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; 环境变量覆盖。如果未配置，则使用默认的提交消息编辑器。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
