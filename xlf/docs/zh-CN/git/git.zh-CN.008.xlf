<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="899e81641132daf9598824927775cf00c10d02f7" translate="yes" xml:space="preserve">
          <source>PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)</source>
          <target state="translated">PATH_INFO (如果GIT_PROJECT_ROOT被设置,否则为PATH_TRANSLATED)</target>
        </trans-unit>
        <trans-unit id="6decffd0412eaf2f154545c6af90e7d695d8d0f2" translate="yes" xml:space="preserve">
          <source>PATH_INFO usage</source>
          <target state="translated">PATH_INFO用法</target>
        </trans-unit>
        <trans-unit id="4a9500dfda14165da62b0d759d4f7a0a1828ddac" translate="yes" xml:space="preserve">
          <source>PERF Format</source>
          <target state="translated">PERF格式</target>
        </trans-unit>
        <trans-unit id="ac3820bb690c0e4f8afb899d021a87e2215d9f6c" translate="yes" xml:space="preserve">
          <source>Pack Idx file:</source>
          <target state="translated">包装Idx文件。</target>
        </trans-unit>
        <trans-unit id="8e5bd2c516c0b64c7a093133ad05311d5aa715dd" translate="yes" xml:space="preserve">
          <source>Pack heads and tags for efficient repository access</source>
          <target state="translated">包装头和标签以实现高效的存储库访问。</target>
        </trans-unit>
        <trans-unit id="916c15851c2e9c9482b6f7ae827a2ef3628cc3b5" translate="yes" xml:space="preserve">
          <source>Pack unpacked objects in a repository</source>
          <target state="translated">将未打包的对象打包到存储库中。</target>
        </trans-unit>
        <trans-unit id="fd708a7f9f7d413af09614d69248d6ad385118ff" translate="yes" xml:space="preserve">
          <source>Pack unreachable loose objects (and their loose counterparts removed). This implies &lt;code&gt;--revs&lt;/code&gt;.</source>
          <target state="translated">装上无法触及的松散物品（并清除松散的对应物品）。这意味着 &lt;code&gt;--revs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eee993c07c74282866f868d204d9cb338384817b" translate="yes" xml:space="preserve">
          <source>Pack-*.pack files have the following format:</source>
          <target state="translated">Pack-*.pack文件的格式如下:</target>
        </trans-unit>
        <trans-unit id="f066589e1e591fe2ae534900eb4066417a728dbe" translate="yes" xml:space="preserve">
          <source>Packet-line framing</source>
          <target state="translated">包线框架</target>
        </trans-unit>
        <trans-unit id="df55d31d287518a9be7d4b1795862cdf2fc41470" translate="yes" xml:space="preserve">
          <source>Packfile optimization</source>
          <target state="translated">包装文件优化</target>
        </trans-unit>
        <trans-unit id="64fd302d4a38d46210fcac733698d9d782d1ce2e" translate="yes" xml:space="preserve">
          <source>Packfiles can be marked as &quot;special&quot; using empty files that share the initial name but replace &quot;.pack&quot; with &quot;.keep&quot; or &quot;.promisor&quot;. We can add an optional chunk of data to the multi-pack-index that records flags of information about the packfiles. This allows new states, such as &lt;code&gt;repacked&lt;/code&gt; or &lt;code&gt;redeltified&lt;/code&gt;, that can help with pack maintenance in a multi-pack environment. It may also be helpful to organize packfiles by object type (commit, tree, blob, etc.) and use this metadata to help that maintenance.</source>
          <target state="translated">可以使用共享初始名称但将&amp;ldquo; .pack&amp;rdquo;替换为&amp;ldquo; .keep&amp;rdquo;或&amp;ldquo; .promisor&amp;rdquo;的空文件将Packfiles标记为&amp;ldquo;特殊&amp;rdquo;。我们可以向multi-pack-index添加可选的数据块，该数据记录有关packfile的信息标志。这使得新的状态，如 &lt;code&gt;repacked&lt;/code&gt; 或 &lt;code&gt;redeltified&lt;/code&gt; ，在多组环境包维护，可以帮助。按对象类型（提交，树，blob等）组织打包文件并使用此元数据来帮助进行维护也可能会有所帮助。</target>
        </trans-unit>
        <trans-unit id="31a1b2f09e14954b347560b78870b7472ffa3669" translate="yes" xml:space="preserve">
          <source>Packing objects</source>
          <target state="translated">包装对象</target>
        </trans-unit>
        <trans-unit id="128ae9baa6dfe921179664d6c2722a23816ef24b" translate="yes" xml:space="preserve">
          <source>Packing your repository</source>
          <target state="translated">包装您的存储库</target>
        </trans-unit>
        <trans-unit id="1b3cc3c53ffc64e43edbae102e2fbe605f6c35c2" translate="yes" xml:space="preserve">
          <source>Packs (files that store many objects in compressed form, along with index files to allow them to be randomly accessed) are found in this directory.</source>
          <target state="translated">Packs(以压缩形式存储许多对象的文件,以及允许随机访问的索引文件)在这个目录中找到。</target>
        </trans-unit>
        <trans-unit id="5e77e9eb9a9ac23524177c29c90fcfbb2bbc9d8d" translate="yes" xml:space="preserve">
          <source>Packs are used to reduce the load on mirror systems, backup engines, disk storage, etc.</source>
          <target state="translated">包用于减少镜像系统、备份引擎、磁盘存储等的负载。</target>
        </trans-unit>
        <trans-unit id="62f32a40a6ada609c72de752933f4d26ac1e6bb8" translate="yes" xml:space="preserve">
          <source>Parallel operation</source>
          <target state="translated">并行操作</target>
        </trans-unit>
        <trans-unit id="669184806db1339e6c6beee1ab38494c4529dab6" translate="yes" xml:space="preserve">
          <source>Parent/child relations are only visible with &lt;code&gt;--parents&lt;/code&gt;, but that does not affect the commits selected in default mode, so we have shown the parent lines.</source>
          <target state="translated">父/子关系仅通过 &lt;code&gt;--parents&lt;/code&gt; 可见，但这不会影响默认模式下选择的提交，因此我们显示了父行。</target>
        </trans-unit>
        <trans-unit id="2efa637ebfd57586deb686233e5bd089abfab182" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --max-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">解析日期字符串，并为 &lt;code&gt;git rev-list&lt;/code&gt; 输出相应的--max-age =参数。</target>
        </trans-unit>
        <trans-unit id="26f771d12548577279103a59da15ea4fd6835ad3" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --min-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">解析日期字符串，并为 &lt;code&gt;git rev-list&lt;/code&gt; 输出相应的--min-age =参数。</target>
        </trans-unit>
        <trans-unit id="868df803566ac09bf6f4d16dac1cc6f9e22a2eb9" translate="yes" xml:space="preserve">
          <source>Parseopt</source>
          <target state="translated">Parseopt</target>
        </trans-unit>
        <trans-unit id="2f58caf00da93e9d39ff1263d9c88686c41f1f30" translate="yes" xml:space="preserve">
          <source>Part two of this tutorial explains the object database, the index file, and a few other odds and ends that you&amp;rsquo;ll need to make the most of Git. You can find it at &lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2[7]&lt;/a&gt;.</source>
          <target state="translated">本教程的第二部分介绍了对象数据库，索引文件以及充分利用Git所需的其他一些零碎东西。您可以在&lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2 [7]上&lt;/a&gt;找到它。</target>
        </trans-unit>
        <trans-unit id="8fc0213ea3567cb4b4477ecb78349de8a29f1b86" translate="yes" xml:space="preserve">
          <source>Partly for this reason, many experienced Git users, even when working on an otherwise merge-heavy project, keep the history linear by rebasing against the latest upstream version before publishing.</source>
          <target state="translated">部分原因是,许多有经验的 Git 用户,即使在处理一个合并量很大的项目时,也会在发布前根据最新的上游版本重新计算,以保持历史的线性。</target>
        </trans-unit>
        <trans-unit id="18fd2ef3833f23df7a3b9f0464ed57cacda16deb" translate="yes" xml:space="preserve">
          <source>Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream.</source>
          <target state="translated">将 --quiet 传给 git-fetch-pack,让其他内部使用的 git 命令静音。进度不会报告到标准错误流中。</target>
        </trans-unit>
        <trans-unit id="c1e733f5e8ef91bfe63a917a4d6fc9ec48d03354" translate="yes" xml:space="preserve">
          <source>Pass --verbose to git-fetch and git-merge.</source>
          <target state="translated">将--verbose传递给git-fetch和git-merge。</target>
        </trans-unit>
        <trans-unit id="5a8b2c7c1f37cd374533e299d8006c239b39cc94" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-b&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">将 &lt;code&gt;-b&lt;/code&gt; 标志传递给 &lt;code&gt;git mailinfo&lt;/code&gt; （请参阅&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6ad058b096d5d940b830a4807c658be882c3c4ae" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-k&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">将 &lt;code&gt;-k&lt;/code&gt; 标志传递给 &lt;code&gt;git mailinfo&lt;/code&gt; （请参阅&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="08d9a4e291a48ec7e7744c9392f211c7729e475b" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-n&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">将 &lt;code&gt;-n&lt;/code&gt; 标志传递给 &lt;code&gt;git mailinfo&lt;/code&gt; （请参阅&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c6c9ef8d9eb1e67c7d3dd624c5619505c72d0bcb" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-q&lt;/code&gt; flag to &lt;code&gt;git unpack-objects&lt;/code&gt;; this makes the cloning process less verbose.</source>
          <target state="translated">将 &lt;code&gt;-q&lt;/code&gt; 标志传递给 &lt;code&gt;git unpack-objects&lt;/code&gt; ; 这使得克隆过程不再那么冗长。</target>
        </trans-unit>
        <trans-unit id="844d7ccb03cd6ed89f98fadab62d2737a8e85be6" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-u&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). The proposed commit log message taken from the e-mail is re-coded into UTF-8 encoding (configuration variable &lt;code&gt;i18n.commitencoding&lt;/code&gt; can be used to specify project&amp;rsquo;s preferred encoding if it is not UTF-8).</source>
          <target state="translated">将 &lt;code&gt;-u&lt;/code&gt; 标志传递给 &lt;code&gt;git mailinfo&lt;/code&gt; （请参阅&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt;）。从电子邮件中提取的建议提交日志消息将重新编码为UTF-8编码（如果配置变量 &lt;code&gt;i18n.commitencoding&lt;/code&gt; 不是UTF-8，则可用于指定项目的首选编码）。</target>
        </trans-unit>
        <trans-unit id="2bc55f5c25108364f3a39ef8fcf3a15e05538a97" translate="yes" xml:space="preserve">
          <source>Pass a configuration parameter to the command. The value given will override values from configuration files. The &amp;lt;name&amp;gt; is expected in the same format as listed by &lt;code&gt;git config&lt;/code&gt; (subkeys separated by dots).</source>
          <target state="translated">将配置参数传递给命令。给定的值将覆盖配置文件中的值。&amp;lt;name&amp;gt;的格式应与 &lt;code&gt;git config&lt;/code&gt; （子项用点分隔）列出的格式相同。</target>
        </trans-unit>
        <trans-unit id="53c6f0ea05fb13c74273eb0b4d13e04b5e8a0db8" translate="yes" xml:space="preserve">
          <source>Pass an additional HTTP header when communicating with a server. If more than one such entry exists, all of them are added as extra headers. To allow overriding the settings inherited from the system config, an empty value will reset the extra headers to the empty list.</source>
          <target state="translated">与服务器通信时,传递一个额外的HTTP头。如果存在多个这样的条目,所有的条目都会被添加为额外的头信息。为了允许覆盖从系统配置中继承的设置,一个空值会将额外的头信息重置为空列表。</target>
        </trans-unit>
        <trans-unit id="88461608ee691de1cd814b8c5a12a7fe39a53808" translate="yes" xml:space="preserve">
          <source>Pass merge strategy specific option through to the merge strategy.</source>
          <target state="translated">将合并策略的特定选项传递给合并策略。</target>
        </trans-unit>
        <trans-unit id="6972c66b8402bd099c21ba9d94ae803550d21e77" translate="yes" xml:space="preserve">
          <source>Pass the &amp;lt;strategy-option&amp;gt; through to the merge strategy. This implies &lt;code&gt;--merge&lt;/code&gt; and, if no strategy has been specified, &lt;code&gt;-s recursive&lt;/code&gt;. Note the reversal of &lt;code&gt;ours&lt;/code&gt; and &lt;code&gt;theirs&lt;/code&gt; as noted above for the &lt;code&gt;-m&lt;/code&gt; option.</source>
          <target state="translated">将&amp;lt;strategy-option&amp;gt;传递到合并策略。这意味着 &lt;code&gt;--merge&lt;/code&gt; ，如果未指定策略，则意味着 &lt;code&gt;-s recursive&lt;/code&gt; 。请注意，如上针对 &lt;code&gt;-m&lt;/code&gt; 选项所述， &lt;code&gt;ours&lt;/code&gt; 和 &lt;code&gt;theirs&lt;/code&gt; 的反向。</target>
        </trans-unit>
        <trans-unit id="471cf94bd65fc727b56b2f8e18afb269faa46e42" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--delta-islands&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;--delta-islands&lt;/code&gt; 选项传递给 &lt;code&gt;git-pack-objects&lt;/code&gt; ，请参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a1683fce9ff86fab10219f3cc0bfdfabc8f2cdd" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--local&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;--local&lt;/code&gt; 选项传递给 &lt;code&gt;git pack-objects&lt;/code&gt; 。参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a642deef0312e0c6bd0a5561d0fd768ee8a59b73" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-delta&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;--no-reuse-delta&lt;/code&gt; 选项传递给 &lt;code&gt;git-pack-objects&lt;/code&gt; ，请参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d901d31c7644af40691b80c7d63e45696f17b53b" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-object&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;--no-reuse-object&lt;/code&gt; 选项传递给 &lt;code&gt;git-pack-objects&lt;/code&gt; ，请参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ee5cba414a5270880e2aa4a80f865762fee87e9" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-m&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;), so that the Message-ID header is added to the commit message. The &lt;code&gt;am.messageid&lt;/code&gt; configuration variable can be used to specify the default behaviour.</source>
          <target state="translated">将 &lt;code&gt;-m&lt;/code&gt; 标志传递给 &lt;code&gt;git mailinfo&lt;/code&gt; （请参阅&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt;），以便将Message-ID标头添加到提交消息中。该 &lt;code&gt;am.messageid&lt;/code&gt; 配置变量可以用来指定默认的行为。</target>
        </trans-unit>
        <trans-unit id="e26add554b4352375b32406b09e1002baf88696f" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-q&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;-q&lt;/code&gt; 选项传递给 &lt;code&gt;git pack-objects&lt;/code&gt; 。参见&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d89c69fc0d489e2189a0abb8c756572cba9d279c" translate="yes" xml:space="preserve">
          <source>Pass the merge strategy-specific option through to the merge strategy. See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">将特定于合并策略的选项传递到合并策略。有关详细信息，请参见&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aae9caba3efe1e125b04992ec6689cc466bc71b8" translate="yes" xml:space="preserve">
          <source>Pass the specified string as a push option for consumption by hooks on the server side. If the server doesn&amp;rsquo;t support push options, error out. See &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; and &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for details.</source>
          <target state="translated">将指定的字符串作为推送选项传递，以供服务器端的挂钩使用。如果服务器不支持推送选项，请出错。有关详细信息，请参见&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;和&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3802841770affa53645333dabda9772d509a4944" translate="yes" xml:space="preserve">
          <source>Pass the timestamp fuzz factor to cvsps, in seconds. If unset, cvsps defaults to 300s.</source>
          <target state="translated">将时间戳模糊因子传递给 cvsps,以秒为单位,如果未设置,cvsps 默认为 300s。如果未设置,cvsps默认为300s。</target>
        </trans-unit>
        <trans-unit id="b62f7fb7ee127d211118f2c56411ed681d4dc9a8" translate="yes" xml:space="preserve">
          <source>Passed directly to &lt;code&gt;git rebase&lt;/code&gt; when using &lt;code&gt;dcommit&lt;/code&gt; if a &lt;code&gt;git reset&lt;/code&gt; cannot be used (see &lt;code&gt;dcommit&lt;/code&gt;).</source>
          <target state="translated">如果无法使用 &lt;code&gt;git reset&lt;/code&gt; ,则在使用 &lt;code&gt;dcommit&lt;/code&gt; 时直接传递给 &lt;code&gt;git rebase&lt;/code&gt; （请参阅 &lt;code&gt;dcommit&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e0a119c584f6be9edb9c41e31b2e495e1678cbc8" translate="yes" xml:space="preserve">
          <source>Passes the objects in the bundle to &lt;code&gt;git index-pack&lt;/code&gt; for storage in the repository, then prints the names of all defined references. If a list of references is given, only references matching those in the list are printed. This command is really plumbing, intended to be called only by &lt;code&gt;git fetch&lt;/code&gt;.</source>
          <target state="translated">将包中的对象传递到 &lt;code&gt;git index-pack&lt;/code&gt; 以便存储在存储库中，然后打印所有已定义引用的名称。如果给出了参考文献列表，则仅打印与列表中的那些文献匹配的参考文献。这个命令确实非常有用，只能由 &lt;code&gt;git fetch&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="76a10ff11a1c062361e6cf9a600e31448471fa51" translate="yes" xml:space="preserve">
          <source>Passing sh -c &quot;some commands&quot; to &quot;git bisect run&quot;</source>
          <target state="translated">将sh -c &quot;一些命令 &quot;传给 &quot;git bisect run&quot;</target>
        </trans-unit>
        <trans-unit id="5323220d01673f917e0cf25de9b3b16456b54e2a" translate="yes" xml:space="preserve">
          <source>Passing the pattern via &amp;lt;file&amp;gt; allows for providing a search pattern containing a \0.</source>
          <target state="translated">通过&amp;lt;file&amp;gt;传递模式允许提供包含\ 0的搜索模式。</target>
        </trans-unit>
        <trans-unit id="dc25b509070cc72f2f466576d5f86386a7b13eca" translate="yes" xml:space="preserve">
          <source>Password for SMTP-AUTH. The argument is optional: If no argument is specified, then the empty string is used as the password. Default is the value of &lt;code&gt;sendemail.smtpPass&lt;/code&gt;, however &lt;code&gt;--smtp-pass&lt;/code&gt; always overrides this value.</source>
          <target state="translated">SMTP-AUTH的密码。该参数是可选的：如果未指定任何参数，则将空字符串用作密码。默认值为 &lt;code&gt;sendemail.smtpPass&lt;/code&gt; 的值，但是 &lt;code&gt;--smtp-pass&lt;/code&gt; 始终会覆盖此值。</target>
        </trans-unit>
        <trans-unit id="bdca924d25420c3b18edd188df0ec914b14515eb" translate="yes" xml:space="preserve">
          <source>Password specified as an option to all p4 commands, with &lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PASS&lt;/code&gt; can be used instead.</source>
          <target state="translated">使用 &lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt; 将所有p4命令的密码指定为选项。可以改为使用环境变量 &lt;code&gt;P4PASS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3420ceeebad33fa39495a8a02933956bb0a3a55" translate="yes" xml:space="preserve">
          <source>Patch merge data from Arch is used to mark merges in Git as well. Git does not care much about tracking patches, and only considers a merge when a branch incorporates all the commits since the point they forked. The end result is that Git will have a good idea of how far branches have diverged. So the import process does lose some patch-trading metadata.</source>
          <target state="translated">Arch中的补丁合并数据在Git中也是用来标记合并的。Git 并不太在意对补丁的跟踪,只有当一个分支包含了分叉后的所有提交时,才会考虑合并。最终的结果是,Git会对分支的分叉程度了如指掌。所以导入过程确实会丢失一些补丁交易的元数据。</target>
        </trans-unit>
        <trans-unit id="31c42bf1738e25a658115f73ad50091aa9060241" translate="yes" xml:space="preserve">
          <source>Patch workflow</source>
          <target state="translated">补丁工作流程</target>
        </trans-unit>
        <trans-unit id="b1f5662dd2e222629919ebbe45b58d0f89867f94" translate="yes" xml:space="preserve">
          <source>Patch workflows</source>
          <target state="translated">补丁工作流程</target>
        </trans-unit>
        <trans-unit id="27352b2b463b7c072417a02bbdfc4fc80c3a786d" translate="yes" xml:space="preserve">
          <source>Patching</source>
          <target state="translated">Patching</target>
        </trans-unit>
        <trans-unit id="b560ead99e5ad114e3f8a677bf699dbd3c20bb23" translate="yes" xml:space="preserve">
          <source>Path (e.g., &lt;code&gt;repo.git&lt;/code&gt; in &lt;code&gt;https://example.com/repo.git&lt;/code&gt;). The path field of the config key must match the path field of the URL either exactly or as a prefix of slash-delimited path elements. This means a config key with path &lt;code&gt;foo/&lt;/code&gt; matches URL path &lt;code&gt;foo/bar&lt;/code&gt;. A prefix can only match on a slash (&lt;code&gt;/&lt;/code&gt;) boundary. Longer matches take precedence (so a config key with path &lt;code&gt;foo/bar&lt;/code&gt; is a better match to URL path &lt;code&gt;foo/bar&lt;/code&gt; than a config key with just path &lt;code&gt;foo/&lt;/code&gt;).</source>
          <target state="translated">路径（例如， &lt;code&gt;https://example.com/repo.git&lt;/code&gt; : &lt;code&gt;repo.git&lt;/code&gt; 中的repo.git）。config键的path字段必须与URL的路径字段完全匹配或作为斜杠分隔的路径元素的前缀匹配。这意味着路径为 &lt;code&gt;foo/&lt;/code&gt; 的配置键与URL路径 &lt;code&gt;foo/bar&lt;/code&gt; 匹配。前缀只能在斜杠（ &lt;code&gt;/&lt;/code&gt; ）边界上匹配。不再符合优先（因此与路径的配置关键 &lt;code&gt;foo/bar&lt;/code&gt; 是一个更好的匹配URL路径 &lt;code&gt;foo/bar&lt;/code&gt; 比只是路径的配置关键 &lt;code&gt;foo/&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="21d3e318bf1a1b4158750af5acdb00744a4b43b1" translate="yes" xml:space="preserve">
          <source>Path containing files with the CA certificates to verify the peer with when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">包含带有CA证书的文件的路径，用于在获取或推送HTTPS时验证对等方。可以被 &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; 环境变量覆盖。</target>
        </trans-unit>
        <trans-unit id="fa0b12f866af9cc606a1a97e00f59d3f70f76032" translate="yes" xml:space="preserve">
          <source>Path names are encoded in UTF-8 normalization form C. This applies to tree objects, the index file, ref names, as well as path names in command line arguments, environment variables and config files (&lt;code&gt;.git/config&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;, &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; and &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;).</source>
          <target state="translated">路径名以UTF-8规范化形式C编码。这适用于树对象，索引文件，引用名称以及命令行参数，环境变量和配置文件（ &lt;code&gt;.git/config&lt;/code&gt; （请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;），&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;，&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;和&lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9dbaaebd4a9c17d56a6b23f6ab97e6dcfee1c1d1" translate="yes" xml:space="preserve">
          <source>Path names in extended headers do not include the &lt;code&gt;a/&lt;/code&gt; and &lt;code&gt;b/&lt;/code&gt; prefixes.</source>
          <target state="translated">扩展头中的路径名不包含 &lt;code&gt;a/&lt;/code&gt; 和 &lt;code&gt;b/&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="398482aa4d5dc2ffcdb7a8eb1faf09763e2f1990" translate="yes" xml:space="preserve">
          <source>Path resolution via &lt;code&gt;git rev-parse --git-path&lt;/code&gt; uses either $GIT_DIR or $GIT_COMMON_DIR depending on the path. For example, in the linked working tree &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; returns &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (not &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; or &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt;) while &lt;code&gt;git
rev-parse --git-path refs/heads/master&lt;/code&gt; uses $GIT_COMMON_DIR and returns &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt;, since refs are shared across all working trees, except refs/bisect and refs/worktree.</source>
          <target state="translated">通过 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 进行路径解析根据路径使用$ GIT_DIR或$ GIT_COMMON_DIR。例如，在链接的工作树中， &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; 返回 &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; （不是 &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; 或 &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt; ）而 &lt;code&gt;git rev-parse --git-path refs/heads/master&lt;/code&gt; 使用$ GIT_COMMON_DIR并返回 &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt; ，因为refs在所有共享工作树，但ref / bisect和ref / worktree除外。</target>
        </trans-unit>
        <trans-unit id="03df17523a63eaf9444aa4e19f8871b2082b9fd5" translate="yes" xml:space="preserve">
          <source>Path resolution via &lt;code&gt;git rev-parse --git-path&lt;/code&gt; uses either &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; depending on the path. For example, in the linked working tree &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; returns &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (not &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; or &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt;) while &lt;code&gt;git
rev-parse --git-path refs/heads/master&lt;/code&gt; uses &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; and returns &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt;, since refs are shared across all working trees, except &lt;code&gt;refs/bisect&lt;/code&gt; and &lt;code&gt;refs/worktree&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 进行的路径解析根据路径使用 &lt;code&gt;$GIT_DIR&lt;/code&gt; 或 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 。例如，在链接的工作树中， &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; 返回 &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; （不是 &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; 或 &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt; ），而 &lt;code&gt;git rev-parse --git-path refs/heads/master&lt;/code&gt; 使用 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 并返回 &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt; ，因为refs在所有共享工作树， &lt;code&gt;refs/bisect&lt;/code&gt; 和 &lt;code&gt;refs/worktree&lt;/code&gt; 除外。</target>
        </trans-unit>
        <trans-unit id="27ac1ba438abc8442b44c3b65ed4fee5e1af6eae" translate="yes" xml:space="preserve">
          <source>Path to a log file where the CVS server interface well&amp;hellip;​ logs various stuff. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">CVS服务器接口良好的日志文件路径...记录各种内容。参见&lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad9a8cd142a486ee9476680d4a1bf638f8db23fe" translate="yes" xml:space="preserve">
          <source>Path to a store of trusted CA certificates for SMTP SSL/TLS certificate validation (either a directory that has been processed by &lt;code&gt;c_rehash&lt;/code&gt;, or a single file containing one or more PEM format certificates concatenated together: see verify(1) -CAfile and -CApath for more information on these). Set it to an empty string to disable certificate verification. Defaults to the value of the &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; configuration variable, if set, or the backing SSL library&amp;rsquo;s compiled-in default otherwise (which should be the best choice on most platforms).</source>
          <target state="translated">用于SMTP SSL / TLS证书验证的受信任CA证书的存储路径（由 &lt;code&gt;c_rehash&lt;/code&gt; 处理的目录，或包含一个或多个PEM格式证书并置在一起的单个文件：请参见verify（1）-CAfile和-CApath有关这些的更多信息）。将其设置为空字符串以禁用证书验证。默认值是 &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; 配置变量的值（如果已设置），否则为后备SSL库的默认编译值（在大多数平台上应为最佳选择）。</target>
        </trans-unit>
        <trans-unit id="b2ea00581c7262d0f351e52900685cd26b5cdc9c" translate="yes" xml:space="preserve">
          <source>Path to ca-certificates (either a directory or a single file). Set it to an empty string to disable certificate verification.</source>
          <target state="translated">ca-certificates的路径(可以是一个目录或一个文件)。将其设为空字符串,以禁用证书验证。</target>
        </trans-unit>
        <trans-unit id="59a42b0b47a7f9a3da70b7db0b79cb16c677b919" translate="yes" xml:space="preserve">
          <source>Path to the &lt;code&gt;git-receive-pack&lt;/code&gt; program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.</source>
          <target state="translated">远端 &lt;code&gt;git-receive-pack&lt;/code&gt; 程序的路径。通过ssh推送到远程存储库时，有时会很有用，并且您的程序没有位于默认$ PATH的目录中。</target>
        </trans-unit>
        <trans-unit id="3b50759eb40ac2cfa3120816f612ac8999c3b60c" translate="yes" xml:space="preserve">
          <source>Path to the highlight executable to use (it must be the one from &lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http://www.andre-simon.de&lt;/a&gt; due to assumptions about parameters and output). By default set to &lt;code&gt;highlight&lt;/code&gt;; set it to full path to highlight executable if it is not installed on your web server&amp;rsquo;s PATH. Note that &lt;code&gt;highlight&lt;/code&gt; feature must be set for gitweb to actually use syntax highlighting.</source>
          <target state="translated">要使用的突出显示可执行文件的路径（由于对参数和输出的假设，它必须是&lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http://www.andre-simon.de中的文件&lt;/a&gt;）。默认设置为 &lt;code&gt;highlight&lt;/code&gt; ; 如果未将其安装在Web服务器的PATH中，请将其设置为完整路径以突出显示可执行文件。请注意，必须为gitweb设置 &lt;code&gt;highlight&lt;/code&gt; 功能才能实际使用语法突出显示。</target>
        </trans-unit>
        <trans-unit id="11df29eff55bbaa504f93c347ee5438c05683eb4" translate="yes" xml:space="preserve">
          <source>Path to wherever your core Git programs are installed. This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, &lt;code&gt;git&lt;/code&gt; will print the current setting and then exit.</source>
          <target state="translated">安装核心Git程序的路径。也可以通过设置GIT_EXEC_PATH环境变量来控制。如果没有给出路径， &lt;code&gt;git&lt;/code&gt; 将打印当前设置，然后退出。</target>
        </trans-unit>
        <trans-unit id="8bee226624e5e35cc1c649560301ce6a88341f60" translate="yes" xml:space="preserve">
          <source>Pathname Format Notes and -z</source>
          <target state="translated">路径名格式注释和-z</target>
        </trans-unit>
        <trans-unit id="9b913a330f922046389c0cfbb6fac51af3762ee9" translate="yes" xml:space="preserve">
          <source>Pathname to the file containing the certificate bundle that should be used to verify the proxy with when using an HTTPS proxy. Can be overriden by the &lt;code&gt;GIT_PROXY_SSL_CAINFO&lt;/code&gt; environment variable.</source>
          <target state="translated">使用HTTPS代理时，包含证书捆绑包的文件的路径名，该证书捆绑包应用于验证代理。可以被 &lt;code&gt;GIT_PROXY_SSL_CAINFO&lt;/code&gt; 环境变量覆盖。</target>
        </trans-unit>
        <trans-unit id="baad7e07c2b2e1eb7a0f4231584855cba490b25b" translate="yes" xml:space="preserve">
          <source>Pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">如配置变量 &lt;code&gt;core.quotePath&lt;/code&gt; 所述，引用带有&amp;ldquo;不寻常&amp;rdquo;字符的路径名（请参阅&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="faafd85683bf6f5bc5b49f23461483144ba14fdc" translate="yes" xml:space="preserve">
          <source>Paths in which the change applied cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">在索引文件和工作树中,应用了干净的更改的路径都会更新。</target>
        </trans-unit>
        <trans-unit id="02f71c6b4a6bff00e221f1c59f788c05e9bf57ff" translate="yes" xml:space="preserve">
          <source>Paths may need to be prefixed with &lt;code&gt;--&lt;/code&gt; to separate them from options or the revision range, when confusion arises.</source>
          <target state="translated">出现混淆时，可能需要在路径前面加上 &lt;code&gt;--&lt;/code&gt; 来将它们与选项或修订范围分开。</target>
        </trans-unit>
        <trans-unit id="72d92e139b6d6167634cfbe91ec0c2ba1cace91a" translate="yes" xml:space="preserve">
          <source>Paths that merged cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">合并干净的路径在索引文件和工作树中都会更新。</target>
        </trans-unit>
        <trans-unit id="4d8223b3c254f584e9779f7d614adb9369021888" translate="yes" xml:space="preserve">
          <source>Paths to submodule(s). When specified this will restrict the command to only operate on the submodules found at the specified paths. (This argument is required with add).</source>
          <target state="translated">子模块的路径。当指定时,这将限制命令只在指定路径的子模块上运行。(这个参数是add时需要的)。</target>
        </trans-unit>
        <trans-unit id="d837befa2a08a2d2c5de9a52f9ba8092713b988b" translate="yes" xml:space="preserve">
          <source>Pathspec is passed in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; instead of commandline args. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is exactly &lt;code&gt;-&lt;/code&gt; then standard input is used. Pathspec elements are separated by LF or CR/LF. Pathspec elements can be quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). See also &lt;code&gt;--pathspec-file-nul&lt;/code&gt; and global &lt;code&gt;--literal-pathspecs&lt;/code&gt;.</source>
          <target state="translated">Pathspec在 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 中而不是命令行args中传递。如果 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 恰好 &lt;code&gt;-&lt;/code&gt; 使用标准输入。Pathspec元素由LF或CR / LF分隔。可以按照配置变量 &lt;code&gt;core.quotePath&lt;/code&gt; 的说明引用路径规范元素（请参阅&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。另请参见 &lt;code&gt;--pathspec-file-nul&lt;/code&gt; 和全局 &lt;code&gt;--literal-pathspecs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c3fe95fefb92e7001401ae2dddbe0254cb07692" translate="yes" xml:space="preserve">
          <source>Pathspecs are used on the command line of &quot;git ls-files&quot;, &quot;git ls-tree&quot;, &quot;git add&quot;, &quot;git grep&quot;, &quot;git diff&quot;, &quot;git checkout&quot;, and many other commands to limit the scope of operations to some subset of the tree or worktree. See the documentation of each command for whether paths are relative to the current directory or toplevel. The pathspec syntax is as follows:</source>
          <target state="translated">路径规格在 &quot;git ls-files&quot;、&quot;git ls-tree&quot;、&quot;git add&quot;、&quot;git grep&quot;、&quot;git diff&quot;、&quot;git checkout &quot;和许多其他命令的命令行中使用,以将操作范围限制在树或工作树的某些子集上。关于路径是相对于当前目录还是toplevel,请参见每个命令的文档。pathspec的语法如下。</target>
        </trans-unit>
        <trans-unit id="3edd060b9dbe00aa0b104e48e6298fa38d5e841a" translate="yes" xml:space="preserve">
          <source>Pattern format</source>
          <target state="translated">模式格式</target>
        </trans-unit>
        <trans-unit id="fcba9b37f153a6df141f56c87f41e26ebdda34ce" translate="yes" xml:space="preserve">
          <source>Pattern used to limit paths in Git commands.</source>
          <target state="translated">用于限制 Git 命令中的路径的模式。</target>
        </trans-unit>
        <trans-unit id="eb7b848d74da9a813e33fe644876b71e9e6bcaa4" translate="yes" xml:space="preserve">
          <source>Patterns have the same syntax and semantics as patterns used for fnmatch(3) without the FNM_PATHNAME flag, except a pathname also matches a pattern if removing any number of the final pathname components matches the pattern. For example, the pattern &quot;&lt;code&gt;foo*bar&lt;/code&gt;&quot; matches &quot;&lt;code&gt;fooasdfbar&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar/baz/asdf&lt;/code&gt;&quot; but not &quot;&lt;code&gt;foobarx&lt;/code&gt;&quot;.</source>
          <target state="translated">模式的语法和语义与不带FNM_PATHNAME标志的fnmatch（3）所使用的模式具有相同的语法和语义，不同之处在于，如果删除任意数量的最终路径名组件，该路径名也会与该模式匹配。例如，模式&amp;ldquo; &lt;code&gt;foo*bar&lt;/code&gt; &amp;rdquo;匹配&amp;ldquo; &lt;code&gt;fooasdfbar&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;foo/bar/baz/asdf&lt;/code&gt; &amp;rdquo;，但不 &lt;code&gt;foobarx&lt;/code&gt; &amp;ldquo; foob​​arx &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fb013761be8ab363fba21719f323aaadcbd3ba0f" translate="yes" xml:space="preserve">
          <source>Patterns read from &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; 读取的模式。</target>
        </trans-unit>
        <trans-unit id="6698f9ee7644a05337be6a499b35a3dc93d5c62b" translate="yes" xml:space="preserve">
          <source>Patterns read from a &lt;code&gt;.gitignore&lt;/code&gt; file in the same directory as the path, or in any parent directory, with patterns in the higher level files (up to the toplevel of the work tree) being overridden by those in lower level files down to the directory containing the file. These patterns match relative to the location of the &lt;code&gt;.gitignore&lt;/code&gt; file. A project normally includes such &lt;code&gt;.gitignore&lt;/code&gt; files in its repository, containing patterns for files generated as part of the project build.</source>
          <target state="translated">从与路径相同的目录中或任何父目录中的 &lt;code&gt;.gitignore&lt;/code&gt; 文件读取的模式，较高级别文件（直到工作树的顶层）中的模式被较低级别文件中的模式覆盖，直至该目录包含文件。这些模式相对于 &lt;code&gt;.gitignore&lt;/code&gt; 文件的位置匹配。项目通常在其存储库中包含此类 &lt;code&gt;.gitignore&lt;/code&gt; 文件，其中包含作为项目构建一部分而生成的文件的模式。</target>
        </trans-unit>
        <trans-unit id="36ee091d7bc3859a1b36e4f946f23e3881e4ee18" translate="yes" xml:space="preserve">
          <source>Patterns read from the command line for those commands that support them.</source>
          <target state="translated">从命令行中读取支持这些命令的模式。</target>
        </trans-unit>
        <trans-unit id="eafc03d17e54d88cb802971c79de6de883bd2e33" translate="yes" xml:space="preserve">
          <source>Patterns read from the file specified by the configuration variable &lt;code&gt;core.excludesFile&lt;/code&gt;.</source>
          <target state="translated">从配置变量 &lt;code&gt;core.excludesFile&lt;/code&gt; 指定的文件中读取模式。</target>
        </trans-unit>
        <trans-unit id="3d5b457ce32a5c844bdd2578141f772cb2dfe28f" translate="yes" xml:space="preserve">
          <source>Patterns which a user wants Git to ignore in all situations (e.g., backup or temporary files generated by the user&amp;rsquo;s editor of choice) generally go into a file specified by &lt;code&gt;core.excludesFile&lt;/code&gt; in the user&amp;rsquo;s &lt;code&gt;~/.gitconfig&lt;/code&gt;. Its default value is $XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/ignore is used instead.</source>
          <target state="translated">用户希望Git在所有情况下都忽略的模式（例如，由用户选择的编辑器生成的备份或临时文件）通常进入用户 &lt;code&gt;~/.gitconfig&lt;/code&gt; 由 &lt;code&gt;core.excludesFile&lt;/code&gt; 指定的文件中。其默认值为$ XDG_CONFIG_HOME / git / ignore。如果$ XDG_CONFIG_HOME未设置或为空，则改用$ HOME / .config / git / ignore。</target>
        </trans-unit>
        <trans-unit id="5587255035843df5d5295452dbedab67822586cc" translate="yes" xml:space="preserve">
          <source>Patterns which are specific to a particular repository but which do not need to be shared with other related repositories (e.g., auxiliary files that live inside the repository but are specific to one user&amp;rsquo;s workflow) should go into the &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; file.</source>
          <target state="translated">特定于特定存储库但无需与其他相关存储库共享的模式（例如，位于存储库中但特定于一个用户工作流程的辅助文件）应放入 &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="97235836632b1fb86b67505c96cba9f6f391329a" translate="yes" xml:space="preserve">
          <source>Patterns which should be version-controlled and distributed to other repositories via clone (i.e., files that all developers will want to ignore) should go into a &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">应该由版本控制并通过克隆（即，所有开发人员都将要忽略的文件）分发给其他存储库的模式应放入 &lt;code&gt;.gitignore&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="74e957861d59dc180f4938a7e5cbcccc25f5a3ea" translate="yes" xml:space="preserve">
          <source>Patterns will normally need quoting.</source>
          <target state="translated">模式通常需要引用。</target>
        </trans-unit>
        <trans-unit id="df5e4a7c782200671a0c551a8ae8bde4cbfd4554" translate="yes" xml:space="preserve">
          <source>Peek at a remote&amp;rsquo;s branch, without configuring the remote in your local repository:</source>
          <target state="translated">查看远程分支，无需在本地存储库中配置远程：</target>
        </trans-unit>
        <trans-unit id="2eee9784312fca59a15483a1887af3e9d7aeb47b" translate="yes" xml:space="preserve">
          <source>People needing to do actual development will also want to read &lt;a href=&quot;#Developing-With-git&quot;&gt;Developing with Git&lt;/a&gt; and &lt;a href=&quot;#sharing-development&quot;&gt;Sharing development with others&lt;/a&gt;.</source>
          <target state="translated">需要做实际开发的人也将要阅读&lt;a href=&quot;#Developing-With-git&quot;&gt;Git的开发&lt;/a&gt;和&lt;a href=&quot;#sharing-development&quot;&gt;共享发展与他人&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d16acfd9d0006fc21d168918fe3efc81d8650072" translate="yes" xml:space="preserve">
          <source>People who play the &lt;a href=&quot;#INTEGRATOR&quot;&gt;Integrator&lt;/a&gt; role need to learn some more commands in addition to the above.</source>
          <target state="translated">除了上述内容，扮演&lt;a href=&quot;#INTEGRATOR&quot;&gt;Integrator&lt;/a&gt;角色的人员还需要学习更多命令。</target>
        </trans-unit>
        <trans-unit id="48b4677fc2e9a16153ae455818d81437374385ab" translate="yes" xml:space="preserve">
          <source>Per-repository gitweb configuration</source>
          <target state="translated">每个仓库的gitweb配置</target>
        </trans-unit>
        <trans-unit id="a457d6f200ccaae5acadefc147a0317025017a2f" translate="yes" xml:space="preserve">
          <source>Perforce keeps the encoding of a path as given by the originating OS. Git expects paths encoded as UTF-8. Use this config to tell git-p4 what encoding Perforce had used for the paths. This encoding is used to transcode the paths to UTF-8. As an example, Perforce on Windows often uses &quot;cp1252&quot; to encode path names.</source>
          <target state="translated">Perforce保留了原始操作系统给出的路径编码。Git 希望路径的编码为 UTF-8。使用这个配置来告诉 git-p4 Perforce 对路径使用的编码。这个编码用于将路径转码为UTF-8。举个例子,Windows 上的 Perforce 经常使用 &quot;cp1252&quot; 来编码路径名。</target>
        </trans-unit>
        <trans-unit id="03b8553af827c912cedc4f1a54e56b3f62407825" translate="yes" xml:space="preserve">
          <source>Perform a bare clone. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;.</source>
          <target state="translated">执行裸克隆。参见&lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d72b7a492b7bd341e81ed1aa91cf43a8cb1b23e" translate="yes" xml:space="preserve">
          <source>Perform a merge, not just a read. The command will refuse to run if your index file has unmerged entries, indicating that you have not finished previous merge you started.</source>
          <target state="translated">执行合并,而不仅仅是读取。如果你的索引文件中有未合并的条目,该命令将拒绝运行,这表明你还没有完成之前开始的合并。</target>
        </trans-unit>
        <trans-unit id="eccacfa088a41a325854fbfce829a88ff14b78ec" translate="yes" xml:space="preserve">
          <source>Perform a tab expansion (replace each tab with enough spaces to fill to the next display column that is multiple of &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;) in the log message before showing it in the output. &lt;code&gt;--expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=8&lt;/code&gt;, and &lt;code&gt;--no-expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=0&lt;/code&gt;, which disables tab expansion.</source>
          <target state="translated">在日志消息中执行选项卡扩展（在每个选项卡中留出足够的空间以填充到下一个显示列，该显示列是 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 的倍数），然后在输出中显示它。 &lt;code&gt;--expand-tabs&lt;/code&gt; 是 &lt;code&gt;--expand-tabs=8&lt;/code&gt; 的简写，而 &lt;code&gt;--no-expand-tabs&lt;/code&gt; 是 &lt;code&gt;--expand-tabs=0&lt;/code&gt; 的简写，它禁用标签扩展。</target>
        </trans-unit>
        <trans-unit id="6fe3dd23120fae0b6c8f1955f52c35dc123f3355" translate="yes" xml:space="preserve">
          <source>Perform move and/or copy detection, as described in the &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; manual page, and use it to generate rename and copy commands in the output dump.</source>
          <target state="translated">执行&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;手册页中所述的移动和/或复制检测，并使用它在输出转储中生成重命名和复制命令。</target>
        </trans-unit>
        <trans-unit id="567ab62415c3403908dcc89e62181367d58a1292" translate="yes" xml:space="preserve">
          <source>Perform only a single read-write cycle with stdin and stdout. This fits with the HTTP POST request processing model where a program may read the request, write a response, and must exit.</source>
          <target state="translated">对stdin和stdout只执行一次读写循环。这与HTTP POST请求处理模型相适应,程序可以读取请求,写入响应,并且必须退出。</target>
        </trans-unit>
        <trans-unit id="41e22f08445cd4ffeacb1dbe66209f768caca3d4" translate="yes" xml:space="preserve">
          <source>Perform sanity checks on patches. Currently, validation means the following:</source>
          <target state="translated">对补丁进行理智性检查。目前,验证指的是:</target>
        </trans-unit>
        <trans-unit id="5dd19cbcd38d018175e7d4b32fed6afd6bedcbe4" translate="yes" xml:space="preserve">
          <source>Perform the merge and commit the result. This option can be used to override --no-commit.</source>
          <target state="translated">执行合并并提交结果。这个选项可以用来覆盖--no-commit。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="7b942adfd148d1f49e5f455e2928985f17ee890d" translate="yes" xml:space="preserve">
          <source>Performance and Compression Tuning</source>
          <target state="translated">性能和压缩调整</target>
        </trans-unit>
        <trans-unit id="9848b9866799244495cf3924e3205cf2b3c1519c" translate="yes" xml:space="preserve">
          <source>Performing a three-way merge</source>
          <target state="translated">执行三方合并</target>
        </trans-unit>
        <trans-unit id="c7a1bc80737fe18d499952e507805c3eb4a06cbb" translate="yes" xml:space="preserve">
          <source>Performing text diffs of binary files</source>
          <target state="translated">执行二进制文件的文本差异</target>
        </trans-unit>
        <trans-unit id="eefd6fa4d473259c02ba61e1f0886b5b36cd638b" translate="yes" xml:space="preserve">
          <source>Pick &lt;code&gt;HEAD&lt;/code&gt; when it asks what branch/tag to check out. Untick the &quot;launch commit wizard&quot; to avoid committing the .project file.</source>
          <target state="translated">在询问要签出哪个分支/标签时选择 &lt;code&gt;HEAD&lt;/code&gt; 。取消选中&amp;ldquo;启动提交向导&amp;rdquo;以避免提交.project文件。</target>
        </trans-unit>
        <trans-unit id="84307347f945f7519a1053bc099c7c72668957a6" translate="yes" xml:space="preserve">
          <source>Pick out and massage parameters</source>
          <target state="translated">挑选和按摩参数</target>
        </trans-unit>
        <trans-unit id="6fcb3939990224a308d3440baf7b583ff2b6b3d4" translate="yes" xml:space="preserve">
          <source>Pipe all output into &lt;code&gt;less&lt;/code&gt; (or if set, $PAGER) if standard output is a terminal. This overrides the &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; configuration options (see the &quot;Configuration Mechanism&quot; section below).</source>
          <target state="translated">如果标准输出是终端，则将所有输出传递到 &lt;code&gt;less&lt;/code&gt; （或设置为$ PAGER）中。这将覆盖 &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; 配置选项（请参阅下面的&amp;ldquo;配置机制&amp;rdquo;部分）。</target>
        </trans-unit>
        <trans-unit id="cbb76042b365f8d09d0e51150e4e490e9d51908c" translate="yes" xml:space="preserve">
          <source>Pitfalls with submodules</source>
          <target state="translated">子模块的陷阱</target>
        </trans-unit>
        <trans-unit id="bf7deb7a333b527df81c06ff54d552140bbe3e03" translate="yes" xml:space="preserve">
          <source>Place the resulting bug report file in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the root of the Git repository.</source>
          <target state="translated">将生成的错误报告文件放置在 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 而不是Git存储库的根目录中。</target>
        </trans-unit>
        <trans-unit id="9bdaaf18e8d137e15a223b206babd14884c750c4" translate="yes" xml:space="preserve">
          <source>Placeholders that affect formatting of later placeholders:</source>
          <target state="translated">占位符,影响以后占位符的格式。</target>
        </trans-unit>
        <trans-unit id="ac211ac96ed9534ab58287056fd17e14f5f3e99f" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to a single literal character:</source>
          <target state="translated">占位符,可扩展为单个文字字符。</target>
        </trans-unit>
        <trans-unit id="d70cc19bb51191879a6f88620cd832b063255806" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to information extracted from the commit:</source>
          <target state="translated">占位符,可扩展到从提交中提取的信息。</target>
        </trans-unit>
        <trans-unit id="a17341864ca5844ed689cbcc0e99aa3136fe86e9" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;progress&lt;/code&gt; command immediately after a &lt;code&gt;checkpoint&lt;/code&gt; will inform the reader when the &lt;code&gt;checkpoint&lt;/code&gt; has been completed and it can safely access the refs that fast-import updated.</source>
          <target state="translated">放置一个 &lt;code&gt;progress&lt;/code&gt; 一后，立即命令 &lt;code&gt;checkpoint&lt;/code&gt; 将告诉读者时， &lt;code&gt;checkpoint&lt;/code&gt; 工作已经完成，它可以安全地访问快速导入更新的裁判。</target>
        </trans-unit>
        <trans-unit id="29d132c8dca94eedc4761b19f4e56a63b7eb3b41" translate="yes" xml:space="preserve">
          <source>Please note that these range notation can be used with both gitk and &quot;git log&quot;.</source>
          <target state="translated">请注意,这些范围符号可以与gitk和 &quot;git log &quot;同时使用。</target>
        </trans-unit>
        <trans-unit id="a872f84e7510205bc273ea7f3487281d6e0b57f1" translate="yes" xml:space="preserve">
          <source>Please note that using the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute may have a number of pitfalls:</source>
          <target state="translated">请注意，使用 &lt;code&gt;working-tree-encoding&lt;/code&gt; 属性可能会有很多陷阱：</target>
        </trans-unit>
        <trans-unit id="cddad527343fcd5e5d11ccf1bbf7e571af789394" translate="yes" xml:space="preserve">
          <source>Please note that you cannot use an existing &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; or &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; command with &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; because the former two use a different inter process communication protocol than the latter one.</source>
          <target state="translated">请注意，不能将现有的 &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; 或filter。&amp;lt;driver&amp;gt; .smudge命令与 &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; .process一起使用，因为前两者使用的进程间通信协议与后者不同。</target>
        </trans-unit>
        <trans-unit id="c888d4a15197bdd365e37f0125b6b805c57d4e97" translate="yes" xml:space="preserve">
          <source>Please report any bugs or feature requests to &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;, putting &quot;gitweb&quot; in the subject of email.</source>
          <target state="translated">请向&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;报告任何错误或功能请求，并在电子邮件主题中添加&amp;ldquo; gitweb&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f21025df43e0479e4864841eab47e70f94cac837" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for alternative ways to add content to a commit.</source>
          <target state="translated">请参阅&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;了解向提交添加内容的替代方法。</target>
        </trans-unit>
        <trans-unit id="0aae3fa8eecc17be69c8d9ed6207c5a978bd3a01" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f7f1dd4c4366b63a145049cec2f6258fda24d83" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; document.</source>
          <target state="translated">请参阅&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="9a1b79b9af4861f2750548663461bdd94c841127" translate="yes" xml:space="preserve">
          <source>Plumbing Commands</source>
          <target state="translated">水管命令</target>
        </trans-unit>
        <trans-unit id="dec39f942885f611a23f70c734d12d63a6e011e1" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-favicon.png&lt;/code&gt; on your web server, or to be more the generic URI of favicon, which will be served as &quot;image/png&quot; type. Web browsers that support favicons (website icons) may display them in the browser&amp;rsquo;s URL bar and next to the site name in bookmarks. Relative to the base URI of gitweb. Can be adjusted at build time using &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; variable. By default set to &lt;code&gt;static/git-favicon.png&lt;/code&gt;.</source>
          <target state="translated">指向将 &lt;code&gt;git-favicon.png&lt;/code&gt; 放置在Web服务器上的位置，或更确切地说是favicon的通用URI，它将用作&amp;ldquo; image / png&amp;rdquo;类型。支持收藏夹图标（网站图标）的Web浏览器可以在浏览器的URL栏中以及书签中站点名称旁边显示它们。相对于gitweb的基本URI。可以在构建时使用 &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; 变量进行调整。默认情况下设置为 &lt;code&gt;static/git-favicon.png&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a40c85c88d228670d36d1d2ec3cd1298a4f0842" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-logo.png&lt;/code&gt; on your web server, or to be more the generic URI of logo, 72x27 size). This image is displayed in the top right corner of each gitweb page and used as a logo for the Atom feed. Relative to the base URI of gitweb (as a path). Can be adjusted when building gitweb using &lt;code&gt;GITWEB_LOGO&lt;/code&gt; variable By default set to &lt;code&gt;static/git-logo.png&lt;/code&gt;.</source>
          <target state="translated">指向将 &lt;code&gt;git-logo.png&lt;/code&gt; 放置在Web服务器上的位置，或者指向徽标的通用URI（大小为72x27）。该图像显示在每个gitweb页面的右上角，并用作Atom feed的徽标。相对于gitweb的基本URI（作为路径）。在使用 &lt;code&gt;GITWEB_LOGO&lt;/code&gt; 变量构建gitweb时可以调整，默认情况下设置为 &lt;code&gt;static/git-logo.png&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9efd93f849deab28e0c41b0eba10b16f24a27c09" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;gitweb.js&lt;/code&gt; on your web server, or to be more generic the URI of JavaScript code used by gitweb. Relative to the base URI of gitweb. Can be set at build time using the &lt;code&gt;GITWEB_JS&lt;/code&gt; build-time configuration variable.</source>
          <target state="translated">指向您将 &lt;code&gt;gitweb.js&lt;/code&gt; 放置在Web服务器上的位置，或更一般地说，是gitweb使用的JavaScript代码的URI。相对于gitweb的基本URI。可以使用 &lt;code&gt;GITWEB_JS&lt;/code&gt; 构建时配置变量在构建时进行设置。</target>
        </trans-unit>
        <trans-unit id="dd1dad0df44ac8f0bb40744bffd4b05eb8a096a6" translate="yes" xml:space="preserve">
          <source>Populating a git repository</source>
          <target state="translated">填充一个git仓库</target>
        </trans-unit>
        <trans-unit id="4cbb689daa97a321dd935e9f85d305871f823e3a" translate="yes" xml:space="preserve">
          <source>Porcelain Format</source>
          <target state="translated">瓷器格式</target>
        </trans-unit>
        <trans-unit id="7ed7cead662f9f179a2456c29bfdc5633f939f7a" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 1</source>
          <target state="translated">瓷器格式1</target>
        </trans-unit>
        <trans-unit id="10c9d2c56f0a79c71fe3af29b00f0a78804206c5" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 2</source>
          <target state="translated">瓷器格式第2版</target>
        </trans-unit>
        <trans-unit id="f0ec9d0a213551004afb541fee3084e09f53878a" translate="yes" xml:space="preserve">
          <source>Port number (e.g., &lt;code&gt;8080&lt;/code&gt; in &lt;code&gt;http://example.com:8080/&lt;/code&gt;). This field must match exactly between the config key and the URL. Omitted port numbers are automatically converted to the correct default for the scheme before matching.</source>
          <target state="translated">端口号（例如， &lt;code&gt;http://example.com:8080/&lt;/code&gt; : &lt;code&gt;8080&lt;/code&gt; /中的8080）。此字段必须与config键和URL之间完全匹配。匹配之前，忽略的端口号会自动转换为方案的正确默认值。</target>
        </trans-unit>
        <trans-unit id="75288f00d3cca5affbead93289ac710b7d804777" translate="yes" xml:space="preserve">
          <source>Port specified as an option to all p4 commands, with &lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PORT&lt;/code&gt; can be used instead.</source>
          <target state="translated">使用 &lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt; 将端口指定为所有p4命令的选项。可以改用环境变量 &lt;code&gt;P4PORT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d03006f15a6deece98761a569d6fb9a550c11064" translate="yes" xml:space="preserve">
          <source>Possible status letters are:</source>
          <target state="translated">可能的状态信是:</target>
        </trans-unit>
        <trans-unit id="2e4db4c63c7f46787206b1d1234a6ef557d7a11f" translate="yes" xml:space="preserve">
          <source>Post-receive hook</source>
          <target state="translated">接收后挂钩</target>
        </trans-unit>
        <trans-unit id="bfc66b933494b39d9139ca2f875fbedec7e5e101" translate="yes" xml:space="preserve">
          <source>Post-update hook</source>
          <target state="translated">更新后的钩子</target>
        </trans-unit>
        <trans-unit id="f94b267b37a51057882021d23cd86eedc7aa6025" translate="yes" xml:space="preserve">
          <source>Pre-merge checks</source>
          <target state="translated">合并前检查</target>
        </trans-unit>
        <trans-unit id="b3efe66caa7433d78cc0ca460492b30524a4fffe" translate="yes" xml:space="preserve">
          <source>Pre-receive hook</source>
          <target state="translated">预收钩</target>
        </trans-unit>
        <trans-unit id="78240cc944ed7959bc15c94695f728eafb8fe296" translate="yes" xml:space="preserve">
          <source>Prefer to use &lt;code&gt;git svn rebase&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;, rather than &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git merge&lt;/code&gt; to synchronize unintegrated commits with a &lt;code&gt;git svn&lt;/code&gt; branch. Doing so will keep the history of unintegrated commits linear with respect to the upstream SVN repository and allow the use of the preferred &lt;code&gt;git svn dcommit&lt;/code&gt; subcommand to push unintegrated commits back into SVN.</source>
          <target state="translated">最好使用 &lt;code&gt;git svn rebase&lt;/code&gt; 或 &lt;code&gt;git rebase&lt;/code&gt; ，而不是 &lt;code&gt;git pull&lt;/code&gt; 或 &lt;code&gt;git merge&lt;/code&gt; 来将未集成的提交与 &lt;code&gt;git svn&lt;/code&gt; 分支同步。这样做将使未集成提交的历史记录相对于上游SVN存储库保持线性，并允许使用首选的 &lt;code&gt;git svn dcommit&lt;/code&gt; 子命令将未集成的提交推回SVN。</target>
        </trans-unit>
        <trans-unit id="7858ef8a3e54ce180319d79ebe56992e0e058c1d" translate="yes" xml:space="preserve">
          <source>Prefix the 1-indexed byte-offset of the first match from the start of the matching line.</source>
          <target state="translated">从匹配行的开始,将第一个匹配的1个索引的字节集放在前面。</target>
        </trans-unit>
        <trans-unit id="f98eece57f5c0c3847ca98d0dc9e3916d907af8e" translate="yes" xml:space="preserve">
          <source>Prefix the line number to matching lines.</source>
          <target state="translated">将行号前缀在匹配行上。</target>
        </trans-unit>
        <trans-unit id="cba9c5d09c8d367bd67d9492c7466ff20503c458" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others, just like the &quot;project lead&quot; person does.</source>
          <target state="translated">像 &quot;项目负责人 &quot;一样,准备一个可供他人访问的公共资源库。</target>
        </trans-unit>
        <trans-unit id="2a7490f3f599e93e81fac551095363496940e575" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others.</source>
          <target state="translated">筹备一个可供他人访问的公共储存库;</target>
        </trans-unit>
        <trans-unit id="f3c2eb8e7f45787546457741123fe87f7a0f8282" translate="yes" xml:space="preserve">
          <source>Prepare each commit with its patch in one file per commit, formatted to resemble UNIX mailbox format. The output of this command is convenient for e-mail submission or for use with &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">在每个提交的一个文件中准备每个提交及其补丁，其格式类似于UNIX邮箱格式。该命令的输出便于提交电子邮件或与 &lt;code&gt;git am&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="5bf024f30d7d353a4bfdcd90569f916ebb19100a" translate="yes" xml:space="preserve">
          <source>Prepare patches for e-mail submission</source>
          <target state="translated">为电子邮件提交准备补丁</target>
        </trans-unit>
        <trans-unit id="a8276d8a28067c8245d05a67d9e202424a88780d" translate="yes" xml:space="preserve">
          <source>Prepare patches from the topmost &amp;lt;n&amp;gt; commits.</source>
          <target state="translated">从最前面的&amp;lt;n&amp;gt;个提交准备补丁。</target>
        </trans-unit>
        <trans-unit id="99740b269904a01f8762ffe4e520b6b559ecd506" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file using your method of choice.</source>
          <target state="translated">使用你选择的方法将补丁准备成文本文件。</target>
        </trans-unit>
        <trans-unit id="f5c02726894a93a50b6991465d16de430338896a" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file.</source>
          <target state="translated">将补丁准备成文本文件。</target>
        </trans-unit>
        <trans-unit id="0655ed9aa66f0d4261162f27b4e3c1f4398f7453" translate="yes" xml:space="preserve">
          <source>Prepare to commit the transaction. This will create lock files for all queued reference updates. If one reference could not be locked, the transaction will be aborted.</source>
          <target state="translated">准备提交事务。这将为所有排队的引用更新创建锁文件。如果有一个引用不能被锁定,事务将被中止。</target>
        </trans-unit>
        <trans-unit id="5fdffb29f622a40bb487926aa05bf2c00b010193" translate="yes" xml:space="preserve">
          <source>Prepare to work on top of &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, by detaching &lt;code&gt;HEAD&lt;/code&gt; at it (see &quot;DETACHED HEAD&quot; section), and updating the index and the files in the working tree. Local modifications to the files in the working tree are kept, so that the resulting working tree will be the state recorded in the commit plus the local modifications.</source>
          <target state="translated">准备在 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 上工作，方法是分离 &lt;code&gt;HEAD&lt;/code&gt; （请参阅&amp;ldquo; DETACHED HEAD&amp;rdquo;部分），并更新工作树中的索引和文件。保留了对工作树中文件的本地修改，因此生成的工作树将是提交中记录的状态加上本地修改。</target>
        </trans-unit>
        <trans-unit id="f2f7b858e8531ffd309df8bd0107db9d4a088dc3" translate="yes" xml:space="preserve">
          <source>Prepare your primary repository on your local machine. Your work is done there.</source>
          <target state="translated">在你的本地机器上准备好你的主仓库。你的工作就在那里完成。</target>
        </trans-unit>
        <trans-unit id="6351b7119828a745613d6b91f6668ddb5c9afa30" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by &lt;code&gt;git clone&lt;/code&gt; the public repository of the &quot;project lead&quot; (or a &quot;subsystem maintainer&quot;, if you work on a subsystem). The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">通过 &lt;code&gt;git clone&lt;/code&gt; &amp;ldquo;项目负责人&amp;rdquo;（或&amp;ldquo;子系统维护者&amp;rdquo;，如果您在子系统上工作）的公共资源库来准备工作资源库。用于初始克隆的URL存储在remote.origin.url配置变量中。</target>
        </trans-unit>
        <trans-unit id="ab02c2194a1b4abbc5e110578e0e0c5797b11598" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by running &lt;code&gt;git clone&lt;/code&gt; on the public repository of the &quot;project lead&quot;. The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">通过在&amp;ldquo;项目负责人&amp;rdquo;的公共存储库上运行 &lt;code&gt;git clone&lt;/code&gt; 来准备工作存储库。用于初始克隆的URL存储在remote.origin.url配置变量中。</target>
        </trans-unit>
        <trans-unit id="8d8f6ddbe39b836164638d60534dc0f8ce8c98b4" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;path&amp;gt; to paths printed in informative messages such as &quot;Fetching submodule foo&quot;. This option is used internally when recursing over submodules.</source>
          <target state="translated">将&amp;lt;path&amp;gt;附加到在信息性消息中打印的路径，例如&amp;ldquo; Fetching submodule foo&amp;rdquo;。在子模块上递归时在内部使用此选项。</target>
        </trans-unit>
        <trans-unit id="0d9e5ac62ee99d055177c6a4f95d4b7fe25a63a3" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;prefix&amp;gt;/ to each filename in the archive.</source>
          <target state="translated">在存档中的每个文件名前添加&amp;lt;prefix&amp;gt; /。</target>
        </trans-unit>
        <trans-unit id="a1528f0aff1e31c1f36c8998ca335269e9595dd6" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;root&amp;gt; to all filenames. If a &quot;-p&quot; argument was also passed, it is applied before prepending the new root.</source>
          <target state="translated">在&amp;lt;root&amp;gt;之前添加所有文件名。如果还传递了&amp;ldquo; -p&amp;rdquo;参数，则在添加新的根目录之前应用该参数。</target>
        </trans-unit>
        <trans-unit id="04fbe49467d421955780154f308daccbf9dcf57a" translate="yes" xml:space="preserve">
          <source>Prepend &lt;code&gt;path&lt;/code&gt; to requested CVSROOT</source>
          <target state="translated">前面加上 &lt;code&gt;path&lt;/code&gt; 来要求CVSROOT</target>
        </trans-unit>
        <trans-unit id="0347b26685846c1b1d2b4efcd87239056762e453" translate="yes" xml:space="preserve">
          <source>Prepend an additional prefix to every line of output.</source>
          <target state="translated">在每一行输出前加上一个额外的前缀。</target>
        </trans-unit>
        <trans-unit id="965630002ec8181b6c5811ecd432fedf5278178d" translate="yes" xml:space="preserve">
          <source>Prepend comment character and blank to each line. Lines will automatically be terminated with a newline. On empty lines, only the comment character will be prepended.</source>
          <target state="translated">在每行前加上注释字符和空白。行将自动以换行结束。在空行中,只有注释字符会被预置。</target>
        </trans-unit>
        <trans-unit id="f16c17f5481a4b7eaab0eba6f32fe3b9bdb77e0a" translate="yes" xml:space="preserve">
          <source>Prepend the commit message with the provided prefix. Useful for patch series and the like.</source>
          <target state="translated">在提交信息前加上前缀。对补丁系列等有用。</target>
        </trans-unit>
        <trans-unit id="1cb847e80ec2973659a3bc43c24ba721cccfc0b9" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned as ref tips of alternate repositories were listed on the command line. An alternate repository is any repository whose object directory is specified in &lt;code&gt;objects/info/alternates&lt;/code&gt;. The set of included objects may be modified by &lt;code&gt;core.alternateRefsCommand&lt;/code&gt;, etc. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">假装好像在命令行上列出了所有作为备用存储库的引用提示的对象。备用存储库是对象目录在 &lt;code&gt;objects/info/alternates&lt;/code&gt; 中指定的任何存储库。可以通过 &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; 等修改包含的对象集。请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8790db7464ad43dc2580493a3a2b7fe9009b3b8" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned by reflogs are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">假装reflog提及的所有对象在命令行上均以 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 列出。</target>
        </trans-unit>
        <trans-unit id="1bc40db9cd0077507e159c30d2cc8ff273e4cf52" translate="yes" xml:space="preserve">
          <source>Pretend as if all the branches (tags, remote branches, resp.) are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit refs to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">假设所有分支（标记，远程分支或相应）在命令行上均以 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 列出。如果给出了 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ，则将引用限制为与给定的shell glob匹配的引用。如果缺乏模式 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，或 &lt;code&gt;[&lt;/code&gt; ， &lt;code&gt;/*&lt;/code&gt; 在最后是隐含的。</target>
        </trans-unit>
        <trans-unit id="a40d3b9ce3a70471c04394220cc5bbfab2baa7f5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/&lt;/code&gt;, along with &lt;code&gt;HEAD&lt;/code&gt;, are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">假设 &lt;code&gt;refs/&lt;/code&gt; 所有ref 以及 &lt;code&gt;HEAD&lt;/code&gt; 都在命令行中列为 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1435ebeededb24db5ecef4374cafc152c655d0c5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/heads&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">假设好像 &lt;code&gt;refs/heads&lt;/code&gt; 中的所有refs在命令行上都列为 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 。如果给出了 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ，则将分支限制为与给定的shell glob匹配的分支。如果缺乏模式 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，或 &lt;code&gt;[&lt;/code&gt; ， &lt;code&gt;/*&lt;/code&gt; 在最后是隐含的。</target>
        </trans-unit>
        <trans-unit id="873bc395593997376453ce378c315180f9e8037d" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/remotes&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit remote-tracking branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">假设好像 &lt;code&gt;refs/remotes&lt;/code&gt; 中的所有ref在命令行上都以 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 的形式列出。如果给出了 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ，则将远程跟踪分支限制为与给定的shell glob匹配的分支。如果缺乏模式 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，或 &lt;code&gt;[&lt;/code&gt; ， &lt;code&gt;/*&lt;/code&gt; 在最后是隐含的。</target>
        </trans-unit>
        <trans-unit id="779811bec709e50bc3c2986dda8163a1984c59e0" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/tags&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit tags to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">假设好像 &lt;code&gt;refs/tags&lt;/code&gt; 中的所有refs在命令行上都列为 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 。如果给出了 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ，则将标签限制为与给定的shell glob匹配的标签。如果缺乏模式 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，或 &lt;code&gt;[&lt;/code&gt; ， &lt;code&gt;/*&lt;/code&gt; 在最后是隐含的。</target>
        </trans-unit>
        <trans-unit id="fd8bdbdeb72b98a3e7d8a71774e4228e25fd4361" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs matching shell glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. Leading &lt;code&gt;refs/&lt;/code&gt;, is automatically prepended if missing. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">假设所有与shell glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; 匹配的参考都在命令行上列为 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 。如果缺少前导 &lt;code&gt;refs/&lt;/code&gt; ，则会自动添加。如果缺乏模式 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，或 &lt;code&gt;[&lt;/code&gt; ， &lt;code&gt;/*&lt;/code&gt; 在最后是隐含的。</target>
        </trans-unit>
        <trans-unit id="46b1cc7966c168f121c45715956556d8413ae7ad" translate="yes" xml:space="preserve">
          <source>Pretend as if all trees and blobs used by the index are listed on the command line. Note that you probably want to use &lt;code&gt;--objects&lt;/code&gt;, too.</source>
          <target state="translated">假设该索引使用的所有树和斑点都在命令行中列出。请注意，您可能也想使用 &lt;code&gt;--objects&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="909e45224d87696c85b1407d2ca55f9401b9de95" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line.</source>
          <target state="translated">假装好像列出了错误的二等分引用 &lt;code&gt;refs/bisect/bad&lt;/code&gt; ，并且好像在命令行后跟了 &lt;code&gt;--not&lt;/code&gt; 和良好的二等分引用 &lt;code&gt;refs/bisect/good-*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc70d02297620c66f8bef755f564908a1a4698d8" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line. Cannot be combined with --first-parent.</source>
          <target state="translated">假装好像列出了错误的二等分引用 &lt;code&gt;refs/bisect/bad&lt;/code&gt; ，并且好像在命令行后是 &lt;code&gt;--not&lt;/code&gt; 以及好的两等分引用 &lt;code&gt;refs/bisect/good-*&lt;/code&gt; 。不能与--first-parent组合使用。</target>
        </trans-unit>
        <trans-unit id="0a3604cb0b2f73cd8456355c098a4f83f14d6060" translate="yes" xml:space="preserve">
          <source>Pretty formats</source>
          <target state="translated">漂亮的格式</target>
        </trans-unit>
        <trans-unit id="1b76ed128a23a5286f4a7e2538cc00e5737e0416" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of &amp;lt;object&amp;gt; based on its type.</source>
          <target state="translated">根据其类型漂亮打印&amp;lt;object&amp;gt;的内容。</target>
        </trans-unit>
        <trans-unit id="a741501b13f29bc4f4975a183857a345cfe33bda" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of the commit logs in a given format, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;oneline&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;fuller&lt;/code&gt;, &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; and &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt;. When &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is none of the above, and has &lt;code&gt;%placeholder&lt;/code&gt; in it, it acts as if &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; were given.</source>
          <target state="translated">以给定格式漂亮地打印提交日志的内容，其中 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;oneline&lt;/code&gt; ， &lt;code&gt;short&lt;/code&gt; ， &lt;code&gt;medium&lt;/code&gt; ， &lt;code&gt;full&lt;/code&gt; ， &lt;code&gt;fuller&lt;/code&gt; ， &lt;code&gt;reference&lt;/code&gt; ， &lt;code&gt;email&lt;/code&gt; ， &lt;code&gt;raw&lt;/code&gt; ， &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; 和 &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt; 之一。如果 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 都不是上述内容，并且其中包含 &lt;code&gt;%placeholder&lt;/code&gt; ，则它的作用就像 &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="7bd89feebefa381d47a4005ee3e7a70495146fc2" translate="yes" xml:space="preserve">
          <source>Print a list of diff tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">打印可以与 &lt;code&gt;--tool&lt;/code&gt; 一起使用的差异工具列表。</target>
        </trans-unit>
        <trans-unit id="4427ae28c9b6c7b34bdd7b24aed9e7c7d30f57b8" translate="yes" xml:space="preserve">
          <source>Print a list of merge tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">打印可以与 &lt;code&gt;--tool&lt;/code&gt; 一起使用的合并工具的列表。</target>
        </trans-unit>
        <trans-unit id="66756bdfb6c604999780ed06815c6e483a2bcdd8" translate="yes" xml:space="preserve">
          <source>Print a log message describing a merge of the &quot;master&quot; branch from the &quot;origin&quot; remote.</source>
          <target state="translated">打印描述从远程 &quot;origin &quot;分支合并到 &quot;master &quot;分支的日志信息。</target>
        </trans-unit>
        <trans-unit id="e170a2249107ead5e4f805939d3f7ece45fff682" translate="yes" xml:space="preserve">
          <source>Print a message to the terminal whenever Git is waiting for editor input from the user.</source>
          <target state="translated">每当 Git 等待用户输入时,都会向终端打印一条信息。</target>
        </trans-unit>
        <trans-unit id="8080962c8d32b2cabab8eb19868e6e497af4f4fb" translate="yes" xml:space="preserve">
          <source>Print a number stating how many commits would have been listed, and suppress all other output. When used together with &lt;code&gt;--left-right&lt;/code&gt;, instead print the counts for left and right commits, separated by a tab. When used together with &lt;code&gt;--cherry-mark&lt;/code&gt;, omit patch equivalent commits from these counts and print the count for equivalent commits separated by a tab.</source>
          <target state="translated">打印一个数字，说明将列出多少个提交，并取消所有其他输出。与 &lt;code&gt;--left-right&lt;/code&gt; 一起使用时，请打印左右提交的计数，并用制表符分隔。与 &lt;code&gt;--cherry-mark&lt;/code&gt; 一起使用时，从这些计数中忽略补丁等效提交，并打印由制表符分隔的等效提交计数。</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">打印简短的使用信息并退出。</target>
        </trans-unit>
        <trans-unit id="1605c83b597410df01a57b6af3b5c08c7935c987" translate="yes" xml:space="preserve">
          <source>Print all commits to the standard output in mbox format, instead of creating a file for each one.</source>
          <target state="translated">将所有提交打印成mbox格式的标准输出,而不是为每个提交创建一个文件。</target>
        </trans-unit>
        <trans-unit id="bb80930a87afbf3e0cd1b6dbc46ac66a79700ef9" translate="yes" xml:space="preserve">
          <source>Print also the children of the commit (in the form &quot;commit child&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">还打印提交的子项（格式为&amp;ldquo;提交子项&amp;hellip;&amp;hellip;&amp;rdquo;）。还可以启用父级重写，请参见上面的&amp;ldquo; &lt;code&gt;History Simplification&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd486c8f7fa4f0862a9438df255d9ef58e4cce2f" translate="yes" xml:space="preserve">
          <source>Print also the parents of the commit (in the form &quot;commit parent&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">还要打印提交的父母（以&amp;ldquo;提交父母&amp;hellip;&amp;hellip;&amp;rdquo;的形式）。还可以启用父级重写，请参见上面的&amp;ldquo; &lt;code&gt;History Simplification&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f770a9ba11cec50c667f92df6a9581699d1c849f" translate="yes" xml:space="preserve">
          <source>Print an empty line between matches from different files.</source>
          <target state="translated">在不同文件的匹配之间打印空行。</target>
        </trans-unit>
        <trans-unit id="dc6bbcf836701f45b1b031bc09ccba6ceff978b1" translate="yes" xml:space="preserve">
          <source>Print extra information on screen.</source>
          <target state="translated">在屏幕上打印额外信息。</target>
        </trans-unit>
        <trans-unit id="f77fc6854808124fa4634165848ea2138881c54f" translate="yes" xml:space="preserve">
          <source>Print lines matching a pattern</source>
          <target state="translated">打印符合图案的线条</target>
        </trans-unit>
        <trans-unit id="6fe4856d75dfab579fe9349a68cc2bed1d0dadcc" translate="yes" xml:space="preserve">
          <source>Print object information and contents for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">打印stdin提供的每个对象的对象信息和内容。不得与 &lt;code&gt;--textconv&lt;/code&gt; 或 &lt;code&gt;--filters&lt;/code&gt; 以外的其他任何选项或参数组合使用，在这种情况下，输入行还需要指定路径，并用空格分隔。有关详细信息，请参见下面的 &lt;code&gt;BATCH OUTPUT&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="ca4d7c5adc217a6aa2342c6778492ad7113796ff" translate="yes" xml:space="preserve">
          <source>Print object information for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">打印标准输入上提供的每个对象的对象信息。不得与 &lt;code&gt;--textconv&lt;/code&gt; 或 &lt;code&gt;--filters&lt;/code&gt; 以外的其他任何选项或参数组合使用，在这种情况下，输入行还需要指定路径，并用空格分隔。有关详细信息，请参见下面的 &lt;code&gt;BATCH OUTPUT&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="355c9197a67577b10c87d266b1fadda4f338ce43" translate="yes" xml:space="preserve">
          <source>Print objects that exist but that are never &lt;code&gt;directly&lt;/code&gt; used (default). &lt;code&gt;--no-dangling&lt;/code&gt; can be used to omit this information from the output.</source>
          <target state="translated">打印存在但从未 &lt;code&gt;directly&lt;/code&gt; 使用的对象（默认）。 &lt;code&gt;--no-dangling&lt;/code&gt; 可用于从输出中忽略此信息。</target>
        </trans-unit>
        <trans-unit id="2b45348ee53d58a25f5424ead463a255068c26a3" translate="yes" xml:space="preserve">
          <source>Print only merge commits. This is exactly the same as &lt;code&gt;--min-parents=2&lt;/code&gt;.</source>
          <target state="translated">仅打印合并提交。这与 &lt;code&gt;--min-parents=2&lt;/code&gt; 完全相同。</target>
        </trans-unit>
        <trans-unit id="fba7bfcdde0d986db48ca498619d9372ecc7d2c2" translate="yes" xml:space="preserve">
          <source>Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.</source>
          <target state="translated">只打印匹配行的匹配(非空)部分,每一个这样的部分都在一个单独的输出行上。</target>
        </trans-unit>
        <trans-unit id="a0fc3f1d0d97da65e736eae410fad9ae12d5c7be" translate="yes" xml:space="preserve">
          <source>Print out objects that exist but that aren&amp;rsquo;t reachable from any of the reference nodes.</source>
          <target state="translated">打印出存在但无法从任何参考节点访问的对象。</target>
        </trans-unit>
        <trans-unit id="e099bc42258fcb131e0b9e1b48df8c89349bb7b8" translate="yes" xml:space="preserve">
          <source>Print out the ref name given on the command line by which each commit was reached.</source>
          <target state="translated">打印出命令行中给出的每次提交的参考名称。</target>
        </trans-unit>
        <trans-unit id="dcb3dcb3ba78d15754773caa5f744c3c4effdf42" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown by the log command. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. This is the same as the &lt;code&gt;--decorate&lt;/code&gt; option of the &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">打印出log命令显示的所有提交的引用名称。如果指定了 &lt;code&gt;short&lt;/code&gt; ，则不会打印ref名称前缀 &lt;code&gt;refs/heads/&lt;/code&gt; ， &lt;code&gt;refs/tags/&lt;/code&gt; 和 &lt;code&gt;refs/remotes/&lt;/code&gt; 。如果 &lt;code&gt;full&lt;/code&gt; 被指定时，完整的裁判名（包括前缀）将被打印。如果指定了 &lt;code&gt;auto&lt;/code&gt; ，则如果输出将输出到终端，则引用名称显示为好像给出了 &lt;code&gt;short&lt;/code&gt; ，否则不显示引用名称。这与 &lt;code&gt;git log&lt;/code&gt; 的 &lt;code&gt;--decorate&lt;/code&gt; 选项相同。</target>
        </trans-unit>
        <trans-unit id="53ce43f1821ebff917f188f20f204c3e06f211d4" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. The default option is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">打印显示的所有提交的引用名称。如果指定了 &lt;code&gt;short&lt;/code&gt; ，则不会打印ref名称前缀 &lt;code&gt;refs/heads/&lt;/code&gt; ， &lt;code&gt;refs/tags/&lt;/code&gt; 和 &lt;code&gt;refs/remotes/&lt;/code&gt; 。如果 &lt;code&gt;full&lt;/code&gt; 被指定时，完整的裁判名（包括前缀）将被打印。如果指定了 &lt;code&gt;auto&lt;/code&gt; ，则如果输出将输出到终端，则引用名称显示为好像给出了 &lt;code&gt;short&lt;/code&gt; ，否则不显示引用名称。默认选项是 &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2011b0d7f946e8a76de0461151323ce8a5c0f935" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts that have not been autoresolved by rerere. This includes paths whose resolutions cannot be tracked by rerere, such as conflicting submodules.</source>
          <target state="translated">打印未被 rerere 自动解决冲突的路径。这包括那些无法通过 rerere 跟踪解决的路径,例如冲突的子模块。</target>
        </trans-unit>
        <trans-unit id="2cba919653a32310570084639bfa9ccc09fb9fa2" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts whose merge resolution rerere will record.</source>
          <target state="translated">打印有冲突的路径,合并后的解决方法rerere会记录下来。</target>
        </trans-unit>
        <trans-unit id="71b60883716e5c9ed5e8d89999bad00a8a7a60a2" translate="yes" xml:space="preserve">
          <source>Print sizes in human readable format</source>
          <target state="translated">以人类可读格式打印的尺寸</target>
        </trans-unit>
        <trans-unit id="7acdcc1d8a4a904a279ce2f15ace2f46f09a0e30" translate="yes" xml:space="preserve">
          <source>Print the commit object name from the revision in the $REV shell variable:</source>
          <target state="translated">打印$REV shell变量中修订版的提交对象名称。</target>
        </trans-unit>
        <trans-unit id="395b30ff424b495b247b1df9486e5529542c8ab4" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit in raw-format; each record is separated with a NUL character.</source>
          <target state="translated">以原始格式打印提交的内容,每条记录用NUL字符分隔。</target>
        </trans-unit>
        <trans-unit id="a77cbdea967e7bc1835e082ef3a9add5606ab710" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit object before validating it.</source>
          <target state="translated">在验证之前,打印提交对象的内容。</target>
        </trans-unit>
        <trans-unit id="31d513cdd4715b4e34b1efb48c41837ed2726bf9" translate="yes" xml:space="preserve">
          <source>Print the contents of the tag object before validating it.</source>
          <target state="translated">打印标签对象的内容,然后再验证它。</target>
        </trans-unit>
        <trans-unit id="87753483ea6cbbd041325490c8537b3b3cada35c" translate="yes" xml:space="preserve">
          <source>Print the current notes ref. This provides an easy way to retrieve the current notes ref (e.g. from scripts).</source>
          <target state="translated">打印当前笔记参考。这提供了一个简单的方法来检索当前的笔记参考(例如,从脚本中)。</target>
        </trans-unit>
        <trans-unit id="e336397774a866fc04e04e67418c962536311ce3" translate="yes" xml:space="preserve">
          <source>Print the manpath (see &lt;code&gt;man(1)&lt;/code&gt;) for the man pages for this version of Git and exit.</source>
          <target state="translated">为该版本的Git的手册页打印manpath（请参阅 &lt;code&gt;man(1)&lt;/code&gt; ），然后退出。</target>
        </trans-unit>
        <trans-unit id="390fcf6665394474a4208236397a723ae5bbd841" translate="yes" xml:space="preserve">
          <source>Print the name of the current branch. In detached HEAD state, nothing is printed.</source>
          <target state="translated">打印当前分支的名称。在分离的HEAD状态下,不打印任何内容。</target>
        </trans-unit>
        <trans-unit id="727d2c972108087f617ca9a52e1404312cb08db7" translate="yes" xml:space="preserve">
          <source>Print the name of the previous thing checked out:</source>
          <target state="translated">打印前一个东西的名字签出。</target>
        </trans-unit>
        <trans-unit id="3642aa2b7cf9b2dae48578e1bdc6f3fea172cd09" translate="yes" xml:space="preserve">
          <source>Print the object IDs of any object referenced by the listed commits. &lt;code&gt;--objects foo ^bar&lt;/code&gt; thus means &amp;ldquo;send me all object IDs which I need to download if I have the commit object &lt;code&gt;bar&lt;/code&gt; but not &lt;code&gt;foo&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">打印列出的提交引用的任何对象的对象ID。 &lt;code&gt;--objects foo ^bar&lt;/code&gt; 意思是&amp;ldquo;如果有提交对象 &lt;code&gt;bar&lt;/code&gt; 但没有 &lt;code&gt;foo&lt;/code&gt; ,请发送所有我需要下载的对象ID &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="38fa474c9535276a4f6e33490b7ff8dcbbdc81f4" translate="yes" xml:space="preserve">
          <source>Print the object name of the current commit:</source>
          <target state="translated">打印当前提交的对象名称。</target>
        </trans-unit>
        <trans-unit id="ee021a7e92899d06aae374f43dcf779c8609f3ff" translate="yes" xml:space="preserve">
          <source>Print the path where the Info files documenting this version of Git are installed and exit.</source>
          <target state="translated">打印记录此版本 Git 的信息文件的安装路径,然后退出。</target>
        </trans-unit>
        <trans-unit id="f91d6d93e8468421a09b4a14a734bbd616d1eaec" translate="yes" xml:space="preserve">
          <source>Print the path, without trailing slash, where Git&amp;rsquo;s HTML documentation is installed and exit.</source>
          <target state="translated">打印安装Git的HTML文档并退出的路径，不带斜线。</target>
        </trans-unit>
        <trans-unit id="c416409aca85a3200dcaeb96638cdf0bb7fd9f1e" translate="yes" xml:space="preserve">
          <source>Print the raw commit timestamp.</source>
          <target state="translated">打印原始提交时间戳。</target>
        </trans-unit>
        <trans-unit id="a639de23ccd7b17d5228ed28b0950d8dd10397fd" translate="yes" xml:space="preserve">
          <source>Print the raw gpg status output to standard error instead of the normal human-readable output.</source>
          <target state="translated">将原始 gpg 状态输出打印为标准错误,而不是正常的人类可读输出。</target>
        </trans-unit>
        <trans-unit id="99ac22b00f0c79de0ff529dde835b6047cf02100" translate="yes" xml:space="preserve">
          <source>Print tree and blob ids in order of the commits. The tree and blob ids are printed after they are first referenced by a commit.</source>
          <target state="translated">按照提交的顺序打印树和blob的id。树和blob的id在提交后才被打印。</target>
        </trans-unit>
        <trans-unit id="3b22396fd69e4727d40157cf2f987d6e09d1fcff" translate="yes" xml:space="preserve">
          <source>Print usage information and exit</source>
          <target state="translated">打印使用信息并退出</target>
        </trans-unit>
        <trans-unit id="8b0271d848c59df8398c3108bdeba41e38e8636a" translate="yes" xml:space="preserve">
          <source>Print version information and exit</source>
          <target state="translated">打印版本信息并退出</target>
        </trans-unit>
        <trans-unit id="85ec1b3fb97897b6ced8a489e132839db30e011a" translate="yes" xml:space="preserve">
          <source>Prints a Git logical variable.</source>
          <target state="translated">打印 Git 的逻辑变量。</target>
        </trans-unit>
        <trans-unit id="913b5e2d55fda904bfce1ecac182bc7aaa60acd0" translate="yes" xml:space="preserve">
          <source>Prints a list of the Git concept guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">在标准输出中打印Git概念指南的列表。这个选项会覆盖任何指定的命令或指南名称。</target>
        </trans-unit>
        <trans-unit id="401d02aaba20f08ba2e39483d254996af7aae137" translate="yes" xml:space="preserve">
          <source>Prints a list of useful guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">在标准输出上打印有用的指南列表。此选项可覆盖任何给定的命令或指南名称。</target>
        </trans-unit>
        <trans-unit id="fb51737d6bf1a9b6afa9ffc69b82cbde8918bef7" translate="yes" xml:space="preserve">
          <source>Prints all the available commands on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">在标准输出上打印所有可用的命令。此选项可覆盖任何给定的命令或指南名称。</target>
        </trans-unit>
        <trans-unit id="f5aac771b999435096d722ba3e59e6103d7d4c50" translate="yes" xml:space="preserve">
          <source>Prints information about the object at a path to a file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. This allows printing a blob from the active commit (with &lt;code&gt;cat-blob&lt;/code&gt;) or copying a blob or tree from a previous commit for use in the current one (with &lt;code&gt;filemodify&lt;/code&gt;).</source>
          <target state="translated">在先前使用 &lt;code&gt;--cat-blob-fd&lt;/code&gt; 参数排列的文件描述符的路径上打印有关对象的信息。这允许从活动提交中打印blob（使用 &lt;code&gt;cat-blob&lt;/code&gt; ），或者从先前提交中复制blob或树以用于当前提交（使用 &lt;code&gt;filemodify&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="67f72d83deebf87ad84204db25d15bef66391fa1" translate="yes" xml:space="preserve">
          <source>Prints the Git suite version that the &lt;code&gt;git&lt;/code&gt; program came from.</source>
          <target state="translated">打印 &lt;code&gt;git&lt;/code&gt; 程序来自的Git套件版本。</target>
        </trans-unit>
        <trans-unit id="31cffb4ffe2a30a3dd8ff5b977f393cbba618dfd" translate="yes" xml:space="preserve">
          <source>Prints the synopsis and a list of the most commonly used commands. If the option &lt;code&gt;--all&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt; is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.</source>
          <target state="translated">打印概要和最常用命令的列表。如果给出 &lt;code&gt;--all&lt;/code&gt; 或 &lt;code&gt;-a&lt;/code&gt; 选项，则将打印所有可用命令。如果命名为Git命令，则此选项将调出该命令的手册页。</target>
        </trans-unit>
        <trans-unit id="866254572e1e21a744b0d521a136d91326c823cd" translate="yes" xml:space="preserve">
          <source>Problems related to branches:</source>
          <target state="translated">与分支机构有关的问题。</target>
        </trans-unit>
        <trans-unit id="ca677c6e0873752e051f5b6dc5cfbc5f3713a96f" translate="yes" xml:space="preserve">
          <source>Problems related to tags:</source>
          <target state="translated">与标签有关的问题。</target>
        </trans-unit>
        <trans-unit id="704eb4f9500e5abbbd40e21ecae0dbc6632f17d7" translate="yes" xml:space="preserve">
          <source>Problems related to timestamps:</source>
          <target state="translated">与时间戳有关的问题。</target>
        </trans-unit>
        <trans-unit id="face2a8f1265d0d2162b3bb8d6cc8c2e4f00bd1a" translate="yes" xml:space="preserve">
          <source>Problems with rewriting history</source>
          <target state="translated">重写历史的问题</target>
        </trans-unit>
        <trans-unit id="cb8ad1a0606d68ac22c37138a82e9dcd94bd7b47" translate="yes" xml:space="preserve">
          <source>Proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. Both the index and working tree are restored to match the switching target. If &lt;code&gt;--recurse-submodules&lt;/code&gt; is specified, submodule content is also restored to match the switching target. This is used to throw away local changes.</source>
          <target state="translated">即使索引或工作树不同于 &lt;code&gt;HEAD&lt;/code&gt; ,也继续进行。索引和工作树都将还原以匹配切换目标。如果指定了 &lt;code&gt;--recurse-submodules&lt;/code&gt; ，则还将还原子模块内容以匹配切换目标。这用于丢弃本地更改。</target>
        </trans-unit>
        <trans-unit id="81635a56ae860db0a8d1fccf460faed330395977" translate="yes" xml:space="preserve">
          <source>Process binary files as if they were text.</source>
          <target state="translated">把二进制文件当作文本处理。</target>
        </trans-unit>
        <trans-unit id="c13073a8e5c76f53a6790b53a64799c267eda4e9" translate="yes" xml:space="preserve">
          <source>Process files in the order specified in the &amp;lt;orderfile&amp;gt;, which has one shell glob pattern per line. This overrides the &lt;code&gt;diff.orderFile&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). To cancel &lt;code&gt;diff.orderFile&lt;/code&gt;, use &lt;code&gt;-O/dev/null&lt;/code&gt;.</source>
          <target state="translated">按照&amp;lt;orderfile&amp;gt;中指定的顺序处理文件，该命令每行具有一个Shell Glob模式。这将覆盖 &lt;code&gt;diff.orderFile&lt;/code&gt; 配置变量（请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。要取消 &lt;code&gt;diff.orderFile&lt;/code&gt; ，请使用 &lt;code&gt;-O/dev/null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efe0d70966f95f77c3e86b43812298f2ec9b000a" translate="yes" xml:space="preserve">
          <source>Process the reflogs of all references.</source>
          <target state="translated">处理所有参考资料的重新登录。</target>
        </trans-unit>
        <trans-unit id="0782c5b7801790281dc0fb4b01651b8bfdcbc4f5" translate="yes" xml:space="preserve">
          <source>Processes all packs. Any filenames on the command line are ignored.</source>
          <target state="translated">处理所有的包。命令行中的任何文件名都将被忽略。</target>
        </trans-unit>
        <trans-unit id="3c46a3f16a2a32b7eba71a8379b8360472d65d8d" translate="yes" xml:space="preserve">
          <source>Processes the specified option so that git fast-import behaves in a way that suits the frontend&amp;rsquo;s needs. Note that options specified by the frontend are overridden by any options the user may specify to git fast-import itself.</source>
          <target state="translated">处理指定的选项，以便git fast-import表现为适合前端需求的方式。请注意，前端指定的选项会被用户为git fast-import本身指定的任何选项所覆盖。</target>
        </trans-unit>
        <trans-unit id="2de3013c8cd324e1d7d27384810d30bdbff48678" translate="yes" xml:space="preserve">
          <source>Produce a merge commit message</source>
          <target state="translated">生成合并提交信息</target>
        </trans-unit>
        <trans-unit id="221bd606329bfae672e0ecc9594988658e144e37" translate="yes" xml:space="preserve">
          <source>Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic names of the refs will be given.</source>
          <target state="translated">生成机器可读的输出。每个 refs 的输出状态行将以 tab 分隔,并发送至 stdout 而不是 stderr。参考文献的完整符号名称将被给出。</target>
        </trans-unit>
        <trans-unit id="fa20429458d99d060783732e4d2e8bf497560d29" translate="yes" xml:space="preserve">
          <source>Produce output in the same format as &lt;code&gt;git blame&lt;/code&gt;, but with SVN revision numbers instead of Git commit hashes. In this mode, changes that haven&amp;rsquo;t been committed to SVN (including local working-copy edits) are shown as revision 0.</source>
          <target state="translated">产生与 &lt;code&gt;git blame&lt;/code&gt; 相同的格式的输出，但使用SVN版本号而不是Git提交哈希。在此模式下，尚未提交给SVN的更改（包括本地工作副本编辑）将显示为修订版0。</target>
        </trans-unit>
        <trans-unit id="cb195c53f13c5c90951762ba09047296d46995e9" translate="yes" xml:space="preserve">
          <source>Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the &lt;code&gt;HEAD&lt;/code&gt;, or record &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (to cause the next &lt;code&gt;git commit&lt;/code&gt; command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus).</source>
          <target state="translated">产生工作树和索引状态，就像发生真正的合并一样（合并信息除外），但实际上不进行提交，移动 &lt;code&gt;HEAD&lt;/code&gt; 或记录 &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; （以使下一个 &lt;code&gt;git commit&lt;/code&gt; 命令创建一个合并提交）。这使您可以在当前分支的顶部创建一个提交，其作用与合并另一个分支的作用相同（对于章鱼，则更多）。</target>
        </trans-unit>
        <trans-unit id="465a8ba2d1fbe9de5dbb0d6da6e9b4fc2bd5f63f" translate="yes" xml:space="preserve">
          <source>Produces a fast-import stream which imports the current value of the named ref. It may additionally import other refs as needed to construct the history efficiently. The script writes to a helper-specific private namespace. The value of the named ref should be written to a location in this namespace derived by applying the refspecs from the &quot;refspec&quot; capability to the name of the ref.</source>
          <target state="translated">产生一个快速导入流,导入命名的 ref 的当前值。它可以根据需要额外导入其他 refs,以有效地构建历史。脚本将写入一个特定于助记符的私有命名空间。命名的 ref 的值应该被写入这个命名空间中的一个位置,这个位置是通过将 &quot;refspec &quot;能力中的 refspecs 应用到 ref 的名字上而得到的。</target>
        </trans-unit>
        <trans-unit id="c940155095e7923b03e52693b949145b33288361" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless --no-progress or --verbose is specified. --progress forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">除非指定了 --no-progress 或 --verbose,否则当标准错误流连接到终端时,默认情况下,进度状态会在标准错误流上报告。即使标准错误流没有指向终端,--progress也会强制报告进度状态。</target>
        </trans-unit>
        <trans-unit id="2dcc9cf9e59b81f490159a20a52344236fd5a3dc" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">除非指定了 -q,否则当标准错误流连接到终端时,默认情况下会在标准错误流上报告进度状态。即使标准错误流没有指向终端,该标志也会强制报告进度状态。</target>
        </trans-unit>
        <trans-unit id="e5cc82042c92eacaa55f040bd35ecdec7afbf1c3" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag enables progress reporting even if not attached to a terminal, regardless of &lt;code&gt;--quiet&lt;/code&gt;.</source>
          <target state="translated">除非指定了 &lt;code&gt;--quiet&lt;/code&gt; ，否则默认情况下，将状态错误报告到标准错误流时，将在标准错误流上报告该状态。即使 &lt;code&gt;--quiet&lt;/code&gt; ，即使未连接到终端，此标志也可以启用进度报告。</target>
        </trans-unit>
        <trans-unit id="84082a3e9b3738ac2cad5de1d40208e556f0b5a9" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">除非指定了 &lt;code&gt;--quiet&lt;/code&gt; ，否则默认情况下，将状态错误报告到标准错误流时，将在标准错误流上报告该状态。即使标准错误流未定向到终端，此标志也会强制显示进度状态。</target>
        </trans-unit>
        <trans-unit id="8942c3e281f4b4272bf2fa19690b7dbfeb0da954" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal. This flag enables progress reporting even if not attached to a terminal. Can&amp;rsquo;t use &lt;code&gt;--progress&lt;/code&gt; together with &lt;code&gt;--porcelain&lt;/code&gt; or &lt;code&gt;--incremental&lt;/code&gt;.</source>
          <target state="translated">默认情况下，进度状态在连接到终端时会在标准错误流上报告。即使未连接到终端，此标志也可以启用进度报告。不能将 &lt;code&gt;--progress&lt;/code&gt; 与 &lt;code&gt;--porcelain&lt;/code&gt; 或 &lt;code&gt;--incremental&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="3394ad842c4e27aba66aa2ba1a5a4056f7fb9719" translate="yes" xml:space="preserve">
          <source>Progress, informational, and error messages: The two backends provide slightly different progress and informational messages. Also, the apply backend writes error messages (such as &quot;Your files would be overwritten&amp;hellip;​&quot;) to stdout, while the merge backend writes them to stderr.</source>
          <target state="translated">进度，信息和错误消息：这两个后端提供的进度和信息消息略有不同。同样，apply后端将错误消息（例如``您的文件将被覆盖...''）写入stdout，而合并后端将它们写入stderr。</target>
        </trans-unit>
        <trans-unit id="a4a80ecee0b21f76717158fcc872d2fe8c9f70c9" translate="yes" xml:space="preserve">
          <source>Project list files should list one project per line, with each line having the following format</source>
          <target state="translated">项目列表文件每行应列出一个项目,每行的格式如下:1.</target>
        </trans-unit>
        <trans-unit id="64ddeaf66879746d77d52edba9fc6b51c3b5494f" translate="yes" xml:space="preserve">
          <source>Project specific override is not supported.</source>
          <target state="translated">不支持特定项目的覆盖。</target>
        </trans-unit>
        <trans-unit id="38cb6b6f38fc49666443f39245952417f433b632" translate="yes" xml:space="preserve">
          <source>Projects list file format</source>
          <target state="translated">项目清单文件格式</target>
        </trans-unit>
        <trans-unit id="99a6cf116ac91087c7f440f3f894b1353453be3c" translate="yes" xml:space="preserve">
          <source>Promisor packfiles are repacked separately: if there are packfiles that have an associated &quot;.promisor&quot; file, these packfiles will be repacked into another separate pack, and an empty &quot;.promisor&quot; file corresponding to the new separate pack will be written.</source>
          <target state="translated">承诺者包是单独重新打包的:如果有一些包有一个相关的&quot;.promonor &quot;文件,这些包将被重新打包到另一个单独的包中,并写入一个与新的单独包相对应的空&quot;.promonor &quot;文件。</target>
        </trans-unit>
        <trans-unit id="1e3e6d8a5678027c372d639c7caa1ae762739111" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool.</source>
          <target state="translated">每次调用diff工具前都会有提示。</target>
        </trans-unit>
        <trans-unit id="011847e8f4535310d3585f3561b850f5eaa68bd2" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool. This is the default behaviour; the option is provided to override any configuration settings.</source>
          <target state="translated">每次调用diff工具前都会有提示。这是默认行为;提供的选项可以覆盖任何配置设置。</target>
        </trans-unit>
        <trans-unit id="60f48217749656a50ce363c78d14fe3fba58b27e" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program to give the user a chance to skip the path.</source>
          <target state="translated">在每次调用合并解析程序前提示,给用户一个跳过路径的机会。</target>
        </trans-unit>
        <trans-unit id="1bd1cfd1155b4114e14d09a7c37c4a191ca7ac30" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program.</source>
          <target state="translated">每次调用合并解析程序前都会有提示。</target>
        </trans-unit>
        <trans-unit id="353a353b6eb50b67e795967c32fb24f9eeb5d549" translate="yes" xml:space="preserve">
          <source>Protocol notes: If you are using anonymous access via pserver, just select that. Those using SSH access should choose the &lt;code&gt;ext&lt;/code&gt; protocol, and configure &lt;code&gt;ext&lt;/code&gt; access on the Preferences&amp;rarr;Team&amp;rarr;CVS&amp;rarr;ExtConnection pane. Set CVS_SERVER to &quot;&lt;code&gt;git cvsserver&lt;/code&gt;&quot;. Note that password support is not good when using &lt;code&gt;ext&lt;/code&gt;, you will definitely want to have SSH keys setup.</source>
          <target state="translated">协议说明：如果您正在通过pserver使用匿名访问，则只需选择该选项即可。使用SSH访问的用户应选择 &lt;code&gt;ext&lt;/code&gt; 协议，然后在&amp;ldquo;首选项&amp;rdquo;&amp;rarr;&amp;ldquo;团队&amp;rdquo;&amp;rarr;&amp;ldquo; CVS&amp;rdquo;&amp;rarr;&amp;ldquo; ExtConnection&amp;rdquo;窗格上配置 &lt;code&gt;ext&lt;/code&gt; 访问。将CVS_SERVER设置为&amp;ldquo; &lt;code&gt;git cvsserver&lt;/code&gt; &amp;rdquo;。请注意，使用 &lt;code&gt;ext&lt;/code&gt; 时，密码支持不好，您肯定需要设置SSH密钥。</target>
        </trans-unit>
        <trans-unit id="4e8bf93a6f67bf7687593a7faf3fef64759fa4d3" translate="yes" xml:space="preserve">
          <source>Protocol version 2 is stateless by default. This means that all commands must only last a single round and be stateless from the perspective of the server side, unless the client has requested a capability indicating that state should be maintained by the server. Clients MUST NOT require state management on the server side in order to function correctly. This permits simple round-robin load-balancing on the server side, without needing to worry about state management.</source>
          <target state="translated">协议版本2默认是无状态的。这意味着所有的命令必须只持续一个回合,并且从服务器端的角度来看是无状态的,除非客户端请求了一个表明状态应该由服务器维护的能力。客户端必须不需要服务器端的状态管理才能正常运行。这就允许在服务器端进行简单的循环负载均衡,而不需要担心状态管理。</target>
        </trans-unit>
        <trans-unit id="a457f44dce93162338e37dcadcb5a7e148a161e8" translate="yes" xml:space="preserve">
          <source>Provide content or type and size information for repository objects</source>
          <target state="translated">为存储库对象提供内容或类型和大小信息。</target>
        </trans-unit>
        <trans-unit id="ce1130d2639274732ace3560e1b161a1f25e1593" translate="yes" xml:space="preserve">
          <source>Provide more progress information.</source>
          <target state="translated">提供更多的进展信息。</target>
        </trans-unit>
        <trans-unit id="e90e088e3482417a8a9d0a613e03789c858721a1" translate="yes" xml:space="preserve">
          <source>Provides a default value for unspecified object filters (see: the below configuration variable). Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">提供未指定对象过滤器的默认值（请参阅：以下配置变量）。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddd6c4f93ce8e6500d931f94e6b50cb8556ece89" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--from&lt;/code&gt; option to format-patch. Accepts a boolean value, or a name and email address. If false, format-patch defaults to &lt;code&gt;--no-from&lt;/code&gt;, using commit authors directly in the &quot;From:&quot; field of patch mails. If true, format-patch defaults to &lt;code&gt;--from&lt;/code&gt;, using your committer identity in the &quot;From:&quot; field of patch mails and including a &quot;From:&quot; field in the body of the patch mail if different. If set to a non-boolean value, format-patch uses that value instead of your committer identity. Defaults to false.</source>
          <target state="translated">提供 &lt;code&gt;--from&lt;/code&gt; 选项到format-patch 的默认值。接受布尔值或名称和电子邮件地址。如果为false，则format-patch默认为 &lt;code&gt;--no-from&lt;/code&gt; ，直接在补丁邮件的&amp;ldquo;发件人：&amp;rdquo;字段中使用提交作者。如果为true，则format-patch默认为 &lt;code&gt;--from&lt;/code&gt; ，使用补丁程序邮件的&amp;ldquo;发件人：&amp;rdquo;字段中的提交者身份，并在补丁程序邮件的正文中包括&amp;ldquo;发件人：&amp;rdquo;字段（如果不同）。如果设置为非布尔值，format-patch将使用该值而不是您的提交者身份。默认为false。</target>
        </trans-unit>
        <trans-unit id="6c89fcd0681556b5a0a64abc8173aa6e8488cc9d" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--guess&lt;/code&gt; or &lt;code&gt;--no-guess&lt;/code&gt; option in &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt;. See &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; and &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;.</source>
          <target state="translated">为 &lt;code&gt;git checkout&lt;/code&gt; 和 &lt;code&gt;git switch&lt;/code&gt; 中的 &lt;code&gt;--guess&lt;/code&gt; 或 &lt;code&gt;--no-guess&lt;/code&gt; 选项提供默认值。参见&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;和&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07e705dc3eb04b1cd0e9d868ce2fbabc5a7b23e9" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--notes&lt;/code&gt; option to format-patch. Accepts a boolean value, or a ref which specifies where to get notes. If false, format-patch defaults to &lt;code&gt;--no-notes&lt;/code&gt;. If true, format-patch defaults to &lt;code&gt;--notes&lt;/code&gt;. If set to a non-boolean value, format-patch defaults to &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt;, where &lt;code&gt;ref&lt;/code&gt; is the non-boolean value. Defaults to false.</source>
          <target state="translated">为format-patch 的 &lt;code&gt;--notes&lt;/code&gt; 选项提供默认值。接受一个布尔值或一个ref，它指定在哪里获取注释。如果为false，则format-patch默认为 &lt;code&gt;--no-notes&lt;/code&gt; 。如果为true，则format-patch默认为 &lt;code&gt;--notes&lt;/code&gt; 。如果设置为非布尔值，则format-patch默认为 &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; ，其中 &lt;code&gt;ref&lt;/code&gt; 是非布尔值。默认为false。</target>
        </trans-unit>
        <trans-unit id="dae8413448109f25f13d1230fdfd21a6427a0a34" translate="yes" xml:space="preserve">
          <source>Provides the name of the object in the original source control system. fast-import will simply ignore this directive, but filter processes which operate on and modify the stream before feeding to fast-import may have uses for this information</source>
          <target state="translated">提供原始源控制系统中的对象名称。fast-import会简单地忽略这条指令,但在送入fast-import之前对流进行操作和修改的过滤过程可能会用到这些信息。</target>
        </trans-unit>
        <trans-unit id="354f719eac7091e1c38104be699d2a68f56df045" translate="yes" xml:space="preserve">
          <source>Providing cvs access to a git repository</source>
          <target state="translated">提供cvs对git仓库的访问。</target>
        </trans-unit>
        <trans-unit id="9a84f98b698c9d5bcdfa443dee138e79368665d7" translate="yes" xml:space="preserve">
          <source>Providing usernames and passwords to Git</source>
          <target state="translated">为Git提供用户名和密码</target>
        </trans-unit>
        <trans-unit id="05a28ca41ca8e50984ed01529e7df3e3335567dc" translate="yes" xml:space="preserve">
          <source>Prune all unreachable objects from the object database</source>
          <target state="translated">删除对象数据库中所有无法到达的对象。</target>
        </trans-unit>
        <trans-unit id="347c95991436ac84fd290ccf1ebe7a72eadc41e7" translate="yes" xml:space="preserve">
          <source>Prune any reflog entries that point to &quot;broken commits&quot;. A broken commit is a commit that is not reachable from any of the reference tips and that refers, directly or indirectly, to a missing commit, tree, or blob object.</source>
          <target state="translated">修剪所有指向 &quot;断裂提交 &quot;的 reflog 条目。破损的提交是指无法从任何参考提示中获取的提交,并且直接或间接地指向一个缺失的提交、树或blob对象。</target>
        </trans-unit>
        <trans-unit id="a7eae2a7a6ec9df449cef235306188bcb1fafe15" translate="yes" xml:space="preserve">
          <source>Prune entries older than &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; that are not reachable from the current tip of the branch. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt;, which in turn defaults to 30 days. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; prunes unreachable entries regardless of their age; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; turns off early pruning of unreachable entries (but see &lt;code&gt;--expire&lt;/code&gt;).</source>
          <target state="translated">从分支的当前尖端无法删除早于 &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; 的条目。如果未指定此选项，则到期时间将从配置设置 &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt; 中获取，而该设置默认为30天。 &lt;code&gt;--expire-unreachable=all&lt;/code&gt; 修剪不可达条目，无论其年龄如何； &lt;code&gt;--expire-unreachable=never&lt;/code&gt; 关闭对不可达条目的早期修剪（但请参见 &lt;code&gt;--expire&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f510204b241f9f833d70b40e365b78ba855d5d73" translate="yes" xml:space="preserve">
          <source>Prune entries older than the specified time. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpire&lt;/code&gt;, which in turn defaults to 90 days. &lt;code&gt;--expire=all&lt;/code&gt; prunes entries regardless of their age; &lt;code&gt;--expire=never&lt;/code&gt; turns off pruning of reachable entries (but see &lt;code&gt;--expire-unreachable&lt;/code&gt;).</source>
          <target state="translated">修剪早于指定时间的条目。如果未指定此选项，则到期时间将从配置设置 &lt;code&gt;gc.reflogExpire&lt;/code&gt; 中获取，而该设置默认为90天。 &lt;code&gt;--expire=all&lt;/code&gt; 修剪条目，无论其年龄如何； &lt;code&gt;--expire=never&lt;/code&gt; 关闭对可达条目的修剪（但请参见 &lt;code&gt;--expire-unreachable&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9ca76117e69104a0e4e81d319f878c7014bb3c8a" translate="yes" xml:space="preserve">
          <source>Prune loose objects older than date (default is 2 weeks ago, overridable by the config variable &lt;code&gt;gc.pruneExpire&lt;/code&gt;). --prune=now prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently; see &quot;NOTES&quot; below. --prune is on by default.</source>
          <target state="translated">修剪早于日期的松散对象（默认为2周前，可被配置变量 &lt;code&gt;gc.pruneExpire&lt;/code&gt; 覆盖）。--prune = now修剪松散的对象而不管它们的年龄如何，如果另一个进程同时写入存储库，则会增加损坏的风险；请参阅下面的&amp;ldquo;注意&amp;rdquo;。--prune默认为打开状态。</target>
        </trans-unit>
        <trans-unit id="ad1903147c3980cb00334e6e57ade6c895b0d197" translate="yes" xml:space="preserve">
          <source>Prune records of conflicted merges that occurred a long time ago. By default, unresolved conflicts older than 15 days and resolved conflicts older than 60 days are pruned. These defaults are controlled via the &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; and &lt;code&gt;gc.rerereResolved&lt;/code&gt; configuration variables respectively.</source>
          <target state="translated">修剪很久以前发生的合并冲突的记录。默认情况下，将修剪15天以上未解决的冲突和60天以上已解决的冲突。这些默认值分别通过 &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; 和 &lt;code&gt;gc.rerereResolved&lt;/code&gt; 配置变量控制。</target>
        </trans-unit>
        <trans-unit id="9ae5dc95253bd1047251fe2f0130ef53d935cb16" translate="yes" xml:space="preserve">
          <source>Prune working tree information in $GIT_DIR/worktrees.</source>
          <target state="translated">修剪$GIT_DIR/worktrees中的工作树信息。</target>
        </trans-unit>
        <trans-unit id="b6aa433344bec7e7c38aefc927d7aa60d687c035" translate="yes" xml:space="preserve">
          <source>Prune working tree information in &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; 修剪工作树信息。</target>
        </trans-unit>
        <trans-unit id="1daa62e08ce5be741f0f9512af6fe6aea569309c" translate="yes" xml:space="preserve">
          <source>Pruning</source>
          <target state="translated">Pruning</target>
        </trans-unit>
        <trans-unit id="9780740ad9404eab5bef283300816b2d37b6c371" translate="yes" xml:space="preserve">
          <source>Pruning tags with &lt;code&gt;--prune-tags&lt;/code&gt; also works when fetching a URL instead of a named remote. These will all prune tags not found on origin:</source>
          <target state="translated">使用 &lt;code&gt;--prune-tags&lt;/code&gt; 修剪标签也可以在获取URL而不是命名的远程文件时使用。这些将删除在原始位置找不到的所有修剪标签：</target>
        </trans-unit>
        <trans-unit id="5d67c6362cb385f7b2fd7440df4474229e4ced1c" translate="yes" xml:space="preserve">
          <source>Pseudorefs are a class of files under &lt;code&gt;$GIT_DIR&lt;/code&gt; which behave like refs for the purposes of rev-parse, but which are treated specially by git. Pseudorefs both have names that are all-caps, and always start with a line consisting of a &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; followed by whitespace. So, HEAD is not a pseudoref, because it is sometimes a symbolic ref. They might optionally contain some additional data. &lt;code&gt;MERGE_HEAD&lt;/code&gt; and &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; are examples. Unlike &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;per-worktree refs&lt;/a&gt;, these files cannot be symbolic refs, and never have reflogs. They also cannot be updated through the normal ref update machinery. Instead, they are updated by directly writing to the files. However, they can be read as if they were refs, so &lt;code&gt;git rev-parse
MERGE_HEAD&lt;/code&gt; will work.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR&lt;/code&gt; 是$ GIT_DIR下的一类文件，出于rev-parse的目的，它们的行为类似于引用，但git对其进行了特殊处理。伪引用的名称均为全大写，并且始终以由&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt;和空格组成的行开头。因此，HEAD不是伪引用，因为它有时是符号引用。它们可以有选择地包含一些其他数据。 &lt;code&gt;MERGE_HEAD&lt;/code&gt; 和 &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; 是示例。与&lt;a href=&quot;#def_per_worktree_ref&quot;&gt;每工作树引用&lt;/a&gt;不同，这些文件不能是符号引用，也永远不会有引用日志。它们也不能通过常规的ref更新机制进行更新。而是通过直接写入文件来更新它们。但是，它们可以像引用一样被读取，因此 &lt;code&gt;git rev-parse MERGE_HEAD&lt;/code&gt; 将起作用。</target>
        </trans-unit>
        <trans-unit id="b7a4dc2e6290047f1f86721c32ae669785e9b742" translate="yes" xml:space="preserve">
          <source>Public Git repositories</source>
          <target state="translated">公共Git仓库</target>
        </trans-unit>
        <trans-unit id="8f3f20e99361b4469a543cafe71c660d905701e0" translate="yes" xml:space="preserve">
          <source>Public api</source>
          <target state="translated">公共api</target>
        </trans-unit>
        <trans-unit id="661a1caa924e6377c910ab84f021b879aa1f3688" translate="yes" xml:space="preserve">
          <source>Public key of the https service. It may either be the filename of a PEM or DER encoded public key file or a string starting with &lt;code&gt;sha256//&lt;/code&gt; followed by the base64 encoded sha256 hash of the public key. See also libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt;. git will exit with an error if this option is set but not supported by cURL.</source>
          <target state="translated">https服务的公钥。它可以是PEM或DER编码的公共密钥文件的文件名，也可以是以 &lt;code&gt;sha256//&lt;/code&gt; 开头的字符串，后跟公共密钥的base64编码的sha256哈希。另请参见libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt; 。如果设置了此选项，但cURL不支持git，则会退出并出现错误。</target>
        </trans-unit>
        <trans-unit id="fcd79d77a075207d5bb03627d6390daac4adccdf" translate="yes" xml:space="preserve">
          <source>Publishing the changes from your local (private) repository to your remote (public) repository requires a write privilege on the remote machine. You need to have an SSH account there to run a single command, &lt;code&gt;git-receive-pack&lt;/code&gt;.</source>
          <target state="translated">将更改从本地（专用）存储库发布到远程（公共）存储库需要在远程计算机上具有写权限。您需要有一个SSH帐户才能运行单个命令 &lt;code&gt;git-receive-pack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d5654eba7f3fb26678d0b33453ea83f3704835b" translate="yes" xml:space="preserve">
          <source>Publishing your work</source>
          <target state="translated">发布您的作品</target>
        </trans-unit>
        <trans-unit id="5225d106493e2d5cee97f92acd212fcbe8379cc8" translate="yes" xml:space="preserve">
          <source>Pulling a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to &lt;a href=&quot;#def_fetch&quot;&gt;fetch&lt;/a&gt; it and &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; it. See also &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt;.</source>
          <target state="translated">拉&lt;a href=&quot;#def_branch&quot;&gt;分支&lt;/a&gt;意味着&lt;a href=&quot;#def_fetch&quot;&gt;获取&lt;/a&gt;并&lt;a href=&quot;#def_merge&quot;&gt;合并&lt;/a&gt;它。另请参见&lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ba996099ee22cf557dfd858fcdfe9998a7d87a8" translate="yes" xml:space="preserve">
          <source>Pulling down the submodules is a two-step process. First run &lt;code&gt;git submodule
init&lt;/code&gt; to add the submodule repository URLs to &lt;code&gt;.git/config&lt;/code&gt;:</source>
          <target state="translated">下拉子模块是一个分为两个步骤的过程。首先运行 &lt;code&gt;git submodule init&lt;/code&gt; 将子模块存储库URL添加到 &lt;code&gt;.git/config&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="67689e297cd4fdd92ebe641f7b6ed9bc63361f6b" translate="yes" xml:space="preserve">
          <source>Pulling into a dirty tree</source>
          <target state="translated">驶入一棵肮脏的树</target>
        </trans-unit>
        <trans-unit id="678a9bfb35ce5da855b86526d846cbdc7583b760" translate="yes" xml:space="preserve">
          <source>Push &quot;matching&quot; branches to &lt;code&gt;origin&lt;/code&gt;. See &amp;lt;refspec&amp;gt; in the &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; section above for a description of &quot;matching&quot; branches.</source>
          <target state="translated">将&amp;ldquo;匹配&amp;rdquo;分支推至 &lt;code&gt;origin&lt;/code&gt; 。有关&amp;ldquo;匹配&amp;rdquo;分支的说明，请参见上面&amp;ldquo; &lt;a href=&quot;#OPTIONS&quot;&gt;选项&amp;rdquo;&lt;/a&gt;部分中的&amp;lt;refspec&amp;gt; 。</target>
        </trans-unit>
        <trans-unit id="e3d386bb2b306b430b8f1443632bcddb41f7fbbb" translate="yes" xml:space="preserve">
          <source>Push all branches (i.e. refs under &lt;code&gt;refs/heads/&lt;/code&gt;); cannot be used with other &amp;lt;refspec&amp;gt;.</source>
          <target state="translated">推送所有分支（即 &lt;code&gt;refs/heads/&lt;/code&gt; 下的refs）；不能与其他&amp;lt;refspec&amp;gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="7ed05cac5fbf2fe13d768ad8d52cf3e6b3326c39" translate="yes" xml:space="preserve">
          <source>Push all the refs that would be pushed without this option, and also push annotated tags in &lt;code&gt;refs/tags&lt;/code&gt; that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable &lt;code&gt;push.followTags&lt;/code&gt;. For more information, see &lt;code&gt;push.followTags&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">推送所有不带此选项将被推送的ref，并推送带注释的标签到远程丢失的 &lt;code&gt;refs/tags&lt;/code&gt; ，但指向被推送的ref可以到达的commit-ish。也可以使用配置变量 &lt;code&gt;push.followTags&lt;/code&gt; 进行指定。有关详细信息，请参阅 &lt;code&gt;push.followTags&lt;/code&gt; 在&lt;a href=&quot;git-config&quot;&gt;GIT-配置[1] &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="640e91962e4a94024fb44763555198cb451cbb5d" translate="yes" xml:space="preserve">
          <source>Push into another repository.</source>
          <target state="translated">推入另一个仓库。</target>
        </trans-unit>
        <trans-unit id="fc1129a549e46f5ee09d052c0e625db078207268" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository.</source>
          <target state="translated">从你的主仓库推入公共仓库。</target>
        </trans-unit>
        <trans-unit id="a011ac29541d686365501a5376539fc2a54082f8" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository. Run &lt;code&gt;git repack&lt;/code&gt;, and possibly &lt;code&gt;git prune&lt;/code&gt; if the transport used for pulling from your repository supports packed repositories.</source>
          <target state="translated">从主存储库推送到公共存储库。如果用于从存储库中提取的传输支持打包存储库，请运行 &lt;code&gt;git repack&lt;/code&gt; ，并可能运行git &lt;code&gt;git prune&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8251f9563aa908db5da52a9527e9f939a118d16" translate="yes" xml:space="preserve">
          <source>Push master, using file descriptor #7 to read data from git-receive-pack and file descriptor #8 to write data to same service.</source>
          <target state="translated">推送主站,使用文件描述符 #7 从 git-receive-pack 读取数据,使用文件描述符 #8 向同一服务写入数据。</target>
        </trans-unit>
        <trans-unit id="db6a77b6524cf46e0155fc78cb84e6ef6e8d26d4" translate="yes" xml:space="preserve">
          <source>Push objects over Git protocol to another repository</source>
          <target state="translated">通过Git协议将对象推送到另一个仓库。</target>
        </trans-unit>
        <trans-unit id="e328f2dc0a129ee52c24984713b8e3e05193f873" translate="yes" xml:space="preserve">
          <source>Push objects over HTTP/DAV to another repository</source>
          <target state="translated">通过HTTP/DAV将对象推送到另一个存储库。</target>
        </trans-unit>
        <trans-unit id="93e6fc3901865e79bc1dfa6c467266c7822bf760" translate="yes" xml:space="preserve">
          <source>Push the current branch to the remote ref matching &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository. This form is convenient to push the current branch without thinking about its local name.</source>
          <target state="translated">推当前分支到远程REF匹配 &lt;code&gt;master&lt;/code&gt; 在 &lt;code&gt;origin&lt;/code&gt; 存储库中。这种形式可以方便地推送当前分支，而无需考虑其本地名称。</target>
        </trans-unit>
        <trans-unit id="7221b3bad2db1abe78fb6e7112e947ec9066c484" translate="yes" xml:space="preserve">
          <source>Push your changes to the public repository, and announce it to the public.</source>
          <target state="translated">将你的修改推送到公共存储库,并向公众公布。</target>
        </trans-unit>
        <trans-unit id="44e2374abe889d292378278a32f8732ae3d0723a" translate="yes" xml:space="preserve">
          <source>Push your changes to your public repository, and ask your &quot;project lead&quot; and possibly your &quot;sub-subsystem maintainers&quot; to pull from it.</source>
          <target state="translated">将你的修改推送到你的公共仓库,并要求你的 &quot;项目负责人 &quot;和可能的 &quot;子子系统维护者 &quot;从中拉取。</target>
        </trans-unit>
        <trans-unit id="64c3ecd283374b8e31c77b37f0b37ed07f7e3e67" translate="yes" xml:space="preserve">
          <source>Pushes the given local &amp;lt;src&amp;gt; commit or branch to the remote branch described by &amp;lt;dst&amp;gt;. A batch sequence of one or more &lt;code&gt;push&lt;/code&gt; commands is terminated with a blank line (if there is only one reference to push, a single &lt;code&gt;push&lt;/code&gt; command is followed by a blank line). For example, the following would be two batches of &lt;code&gt;push&lt;/code&gt;, the first asking the remote-helper to push the local ref &lt;code&gt;master&lt;/code&gt; to the remote ref &lt;code&gt;master&lt;/code&gt; and the local &lt;code&gt;HEAD&lt;/code&gt; to the remote &lt;code&gt;branch&lt;/code&gt;, and the second asking to push ref &lt;code&gt;foo&lt;/code&gt; to ref &lt;code&gt;bar&lt;/code&gt; (forced update requested by the &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">将给定的本地&amp;lt;src&amp;gt;提交或分支推送到&amp;lt;dst&amp;gt;描述的远程分支。一个或多个 &lt;code&gt;push&lt;/code&gt; 命令的批处理序列以空行终止（如果只有一个引用要推送，则单个 &lt;code&gt;push&lt;/code&gt; 命令后跟一个空行）。例如，以下是两批次的 &lt;code&gt;push&lt;/code&gt; ，第一批次要求远程助手将本地ref &lt;code&gt;master&lt;/code&gt; 推送到远程ref &lt;code&gt;master&lt;/code&gt; ，将本地 &lt;code&gt;HEAD&lt;/code&gt; 推送到远程 &lt;code&gt;branch&lt;/code&gt; ，第二批次要求将ref &lt;code&gt;foo&lt;/code&gt; 推送到ref &lt;code&gt;bar&lt;/code&gt; （ &lt;code&gt;+&lt;/code&gt; 要求强制更新）。</target>
        </trans-unit>
        <trans-unit id="ca5456a5df7b11e9ef0d22090b33d4f3bd62ba82" translate="yes" xml:space="preserve">
          <source>Pushes which fail due to problems with the incoming pack, missing objects, or due to the &lt;code&gt;pre-receive&lt;/code&gt; hook will not leave any on-disk data. This is usually helpful to prevent repeated failed pushes from filling up your disk, but can make debugging more challenging.</source>
          <target state="translated">由于传入数据包出现问题，缺少对象或由于 &lt;code&gt;pre-receive&lt;/code&gt; 挂钩而导致失败的推送不会留下任何磁盘上的数据。这通常有助于防止重复失败的推送操作填满磁盘，但会使调试更具挑战性。</target>
        </trans-unit>
        <trans-unit id="bd3f47195169191b06e6fb59aa660030c03d8082" translate="yes" xml:space="preserve">
          <source>Pushing a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to get the branch&amp;rsquo;s &lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt; from a remote &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt;, find out if it is an ancestor to the branch&amp;rsquo;s local head ref, and in that case, putting all objects, which are &lt;a href=&quot;#def_reachable&quot;&gt;reachable&lt;/a&gt; from the local head ref, and which are missing from the remote repository, into the remote &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt;, and updating the remote head ref. If the remote &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; is not an ancestor to the local head, the push fails.</source>
          <target state="translated">推送&lt;a href=&quot;#def_branch&quot;&gt;分支&lt;/a&gt;意味着从远程&lt;a href=&quot;#def_repository&quot;&gt;存储库中&lt;/a&gt;获取分支的&lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt;，确定它是否是分支的本地head ref的祖先，在这种情况下，放置所有从本地head ref &lt;a href=&quot;#def_reachable&quot;&gt;可以访问的&lt;/a&gt;对象，以及从远程存储库中丢失，进入远程&lt;a href=&quot;#def_object_database&quot;&gt;对象数据库&lt;/a&gt;，并更新远程头参考。如果远程&lt;a href=&quot;#def_head&quot;&gt;头&lt;/a&gt;不是本地头的祖先，则推送失败。</target>
        </trans-unit>
        <trans-unit id="a1b201ad98b52436e58805968e041862b0e44b88" translate="yes" xml:space="preserve">
          <source>Pushing an empty &amp;lt;src&amp;gt; allows you to delete the &amp;lt;dst&amp;gt; ref from the remote repository. Deletions are always accepted without a leading &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), except when forbidden by configuration or hooks. See &lt;code&gt;receive.denyDeletes&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; and &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; in &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">推送空的&amp;lt;src&amp;gt;允许您从远程存储库中删除&amp;lt;dst&amp;gt;引用。除非 &lt;code&gt;--force&lt;/code&gt; 或挂钩禁止，否则在refspec（或--force）中始终接受不带前导 &lt;code&gt;+&lt;/code&gt; 的删除。见 &lt;code&gt;receive.denyDeletes&lt;/code&gt; 在&lt;a href=&quot;git-config&quot;&gt;GIT-配置[1]&lt;/a&gt;和 &lt;code&gt;pre-receive&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 在&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b554604b5dbdc966cb242c709d8d9564fd3f48c" translate="yes" xml:space="preserve">
          <source>Pushing changes to a public repository</source>
          <target state="translated">将变更推送至公共存储库</target>
        </trans-unit>
        <trans-unit id="eedfa4fe862b4ad2f2d3d15f8505bb4e78d4fc1a" translate="yes" xml:space="preserve">
          <source>Put all the committers in the same group, and make the repository writable by that group:</source>
          <target state="translated">将所有的提交者放在同一个组中,并使版本库可以被该组写入。</target>
        </trans-unit>
        <trans-unit id="c26397c67704ec958580d89b3087bf7a34700351" translate="yes" xml:space="preserve">
          <source>Put everything in the current head&amp;rsquo;s Documentation/ directory into &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt;, with the prefix &lt;code&gt;git-docs/&lt;/code&gt;.</source>
          <target state="translated">将当前文件头的Documentation /目录中的所有内容放入 &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt; 中，并将其前缀为 &lt;code&gt;git-docs/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea705b3a47d1cdf9261daf67230a93968f6edd0b" translate="yes" xml:space="preserve">
          <source>QUERY_STRING</source>
          <target state="translated">QUERY_STRING</target>
        </trans-unit>
        <trans-unit id="c3149be9220a8ce116523f671437212f69f45ea5" translate="yes" xml:space="preserve">
          <source>Quarantine environment</source>
          <target state="translated">检疫环境</target>
        </trans-unit>
        <trans-unit id="ec85d37cf9d9f3d10289231d732a03bb25cc011c" translate="yes" xml:space="preserve">
          <source>Query p4 for labels associated with the depot paths, and add them as tags in Git. Limited usefulness as only imports labels associated with new changelists. Deprecated.</source>
          <target state="translated">查询 p4 中与仓库路径相关联的标签,并将其作为标签添加到 Git 中。由于只导入与新的变更列表相关联的标签,实用性有限。已废弃。</target>
        </trans-unit>
        <trans-unit id="cb46658e95579ef7659db1b1de8bbb537b0fac1e" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/&quot;&gt;GitHub Cheat Sheet&lt;/a&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">快速参考指南：&lt;a href=&quot;https://github.github.com/training-kit/&quot;&gt;GitHub备忘单&lt;/a&gt;| &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;视觉Git作弊表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce8d2336bc85bc6e5b624295904c32b955dda594" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHub Cheat Sheet&lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</source>
          <target state="translated">快速参考指南：&lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHub备忘单&lt;/a&gt;&lt;small&gt;（PDF）&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;视觉Git备忘单&lt;/a&gt;&lt;small&gt;（SVG | PNG）&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3a11ac4a816649c90b2a876b8ed365a4f747816e" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages.</source>
          <target state="translated">安静,压制反馈信息。</target>
        </trans-unit>
        <trans-unit id="2ac9102b0a2f3eb9abc09cf4e1c41ec0575ff1e1" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages. Implies &lt;code&gt;--no-progress&lt;/code&gt;.</source>
          <target state="translated">安静，禁止显示反馈消息。表示 &lt;code&gt;--no-progress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de1dab6bd571badbfbb3ddaa6f495be909332129" translate="yes" xml:space="preserve">
          <source>Quiet. If --refresh finds that the index needs an update, the default behavior is to error out. This option makes &lt;code&gt;git update-index&lt;/code&gt; continue anyway.</source>
          <target state="translated">安静。如果--refresh发现索引需要更新，则默认行为是出错。这个选项使 &lt;code&gt;git update-index&lt;/code&gt; 仍然继续。</target>
        </trans-unit>
        <trans-unit id="e1baedfd2936afaf34298be8c53a6f3520c17d3e" translate="yes" xml:space="preserve">
          <source>Quiet; do not warn about conflicts.</source>
          <target state="translated">安静;不警告冲突。</target>
        </trans-unit>
        <trans-unit id="e9770de83f70890562d92f9477d5315581d69261" translate="yes" xml:space="preserve">
          <source>Quite similarly, if &lt;code&gt;core.symlinks&lt;/code&gt; configuration variable is set to &lt;code&gt;false&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), symbolic links are checked out as plain files, and this command does not modify a recorded file mode from symbolic link to regular file.</source>
          <target state="translated">同样，如果将 &lt;code&gt;core.symlinks&lt;/code&gt; 配置变量设置为 &lt;code&gt;false&lt;/code&gt; （请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;），则将符号链接检出为纯文件，并且此命令不会将记录文件模式从符号链接修改为常规文件。</target>
        </trans-unit>
        <trans-unit id="f0f61d9660842b035df0296041289cbf85b3ae28" translate="yes" xml:space="preserve">
          <source>Quote fields containing whitespace as if they were strings in C source code; i.e., surrounded by double-quotes and with backslash escapes. Use 40 &quot;0&quot; characters or the empty string to specify a zero value. To specify a missing value, omit the value and its preceding SP entirely.</source>
          <target state="translated">引用包含空格的字段,就像C源代码中的字符串一样,即用双引号包围,并使用反斜杠转义。使用40个 &quot;0 &quot;字符或空字符串来指定一个零值。要指定一个缺失的值,完全省略该值及其前面的SP。</target>
        </trans-unit>
        <trans-unit id="0550aeb8801a3ad8332244f3d277c748ecb56080" translate="yes" xml:space="preserve">
          <source>Quoted aliases and quoted addresses are not supported: lines that contain a &lt;code&gt;&quot;&lt;/code&gt; symbol are ignored.</source>
          <target state="translated">不支持带引号的别名和带引号的地址：包含 &lt;code&gt;&quot;&lt;/code&gt; 符号的行将被忽略。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="38354f3564dc690008158ec27147b7718eef20da" translate="yes" xml:space="preserve">
          <source>R: renaming of a file</source>
          <target state="translated">R:重命名文件</target>
        </trans-unit>
        <trans-unit id="73ff05a9f629bff633fa7a0499495556f0f1a07f" translate="yes" xml:space="preserve">
          <source>README.html</source>
          <target state="translated">README.html</target>
        </trans-unit>
        <trans-unit id="986c96108f4514e08f8de60c616ff1d0727fd986" translate="yes" xml:space="preserve">
          <source>REMOTE_ADDR</source>
          <target state="translated">REMOTE_ADDR</target>
        </trans-unit>
        <trans-unit id="613cec3f00ac4a24def4b10bec39e10198b8d82e" translate="yes" xml:space="preserve">
          <source>REMOTE_USER</source>
          <target state="translated">REMOTE_USER</target>
        </trans-unit>
        <trans-unit id="a16e10b928e7c21c5b4ae3d47f9db3c0b6c782c3" translate="yes" xml:space="preserve">
          <source>REQUEST_METHOD</source>
          <target state="translated">REQUEST_METHOD</target>
        </trans-unit>
        <trans-unit id="697070f17a70b2490138caae401415ac7b401fbd" translate="yes" xml:space="preserve">
          <source>RFC 2822</source>
          <target state="translated">RFC 2822</target>
        </trans-unit>
        <trans-unit id="b34db1f303fd91c6e7039f452d5097c789b26cf1" translate="yes" xml:space="preserve">
          <source>Rather than checking out a branch to work on it, check out a commit for inspection and discardable experiments. This is the default behavior of &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; when &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; is not a branch name. See the &quot;DETACHED HEAD&quot; section below for details.</source>
          <target state="translated">与其签出分支来进行工作，不如签出检查和可丢弃实验的提交。当 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 不是分支名称时，这是 &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; 的默认行为。有关详细信息，请参见下面的&amp;ldquo;分离头&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="4e4bfd7d1a0190903bc19000a40525c987ff7008" translate="yes" xml:space="preserve">
          <source>Raw output format</source>
          <target state="translated">原始输出格式</target>
        </trans-unit>
        <trans-unit id="7b0a88cf0ceef9e929b45fca40ecfa70b119395a" translate="yes" xml:space="preserve">
          <source>Re-author p4 changes before submitting to p4. This option requires p4 admin privileges.</source>
          <target state="translated">在提交给p4之前重新授权p4的更改。这个选项需要p4管理员权限。</target>
        </trans-unit>
        <trans-unit id="a3d5287f4feb36f53be9e482bea0b4f69488906a" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more details about each hook.</source>
          <target state="translated">阅读&lt;a href=&quot;githooks&quot;&gt;githooks [5]，&lt;/a&gt;以获得有关每个钩子的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="3c99ae2389e194940d6e9dae44358b0f59db22c3" translate="yes" xml:space="preserve">
          <source>Read a list of commits from stdin and commit them in reverse order. Only the leading sha1 is read from each line, so &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; output can be used.</source>
          <target state="translated">从stdin中读取提交列表，并以相反的顺序提交它们。每行仅读取前导sha1，因此可以使用 &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="9a81bd113ea455376c0709dc2b5dec2fbcc3eae4" translate="yes" xml:space="preserve">
          <source>Read a packed archive (.pack) from the standard input, expanding the objects contained within and writing them into the repository in &quot;loose&quot; (one object per file) format.</source>
          <target state="translated">从标准输入中读取打包的档案(.pack),扩展其中包含的对象,并以 &quot;松散&quot;(每个文件一个对象)的格式将其写入存储库。</target>
        </trans-unit>
        <trans-unit id="cf4f210605880935e907e739e930d70c6c05f393" translate="yes" xml:space="preserve">
          <source>Read a patch from the standard input and compute the patch ID for it.</source>
          <target state="translated">从标准输入中读取一个补丁,并计算出它的补丁ID。</target>
        </trans-unit>
        <trans-unit id="118b284f547f2475f4692a5a06eacb1fa689da5d" translate="yes" xml:space="preserve">
          <source>Read a tar archive created by &lt;code&gt;git archive&lt;/code&gt; from the standard input and extract the commit ID stored in it. It reads only the first 1024 bytes of input, thus its runtime is not influenced by the size of the tar archive very much.</source>
          <target state="translated">从标准输入中读取由 &lt;code&gt;git archive&lt;/code&gt; archive创建的tar归档文件，并提取存储在其中的提交ID。它仅读取输入的前1024个字节，因此其运行时间不受tar归档文件大小的很大影响。</target>
        </trans-unit>
        <trans-unit id="8323be41a83f5e8edd45cebf33794d8211b9a65a" translate="yes" xml:space="preserve">
          <source>Read additional exclude patterns that apply only to the directory and its subdirectories in &amp;lt;file&amp;gt;.</source>
          <target state="translated">阅读仅适用于&amp;lt;file&amp;gt;中的目录及其子目录的其他排除模式。</target>
        </trans-unit>
        <trans-unit id="ec538abd0ecb84f4afa31116a9fde4a7bfbfc841" translate="yes" xml:space="preserve">
          <source>Read contacts, one per line, from the standard input after exhausting contacts provided on the command-line.</source>
          <target state="translated">在用完命令行提供的触点后,从标准输入端读取触点,每行一个。</target>
        </trans-unit>
        <trans-unit id="cc8be265c5565879cb19acef5a95bb650b329807" translate="yes" xml:space="preserve">
          <source>Read description of &lt;code&gt;%feature&lt;/code&gt; hash for detailed list, and descriptions. See also &quot;Configuring gitweb features&quot; section in &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;</source>
          <target state="translated">阅读 &lt;code&gt;%feature&lt;/code&gt; 哈希的描述以获取详细列表和描述。另请参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]中的&lt;/a&gt; &amp;ldquo;配置gitweb功能&amp;rdquo;部分</target>
        </trans-unit>
        <trans-unit id="15ad57eb2da16d3087f86e421c960f711d5a7f97" translate="yes" xml:space="preserve">
          <source>Read exclude patterns from &amp;lt;file&amp;gt;; 1 per line.</source>
          <target state="translated">从&amp;lt;file&amp;gt;中读取排除模式；每行1个。</target>
        </trans-unit>
        <trans-unit id="f6c76b424f91b25c9b13ee14e1604c5d3fa96f28" translate="yes" xml:space="preserve">
          <source>Read file names from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">从标准输入中读取文件名,每行一个,而不是从命令行读取。</target>
        </trans-unit>
        <trans-unit id="d0b5b313182b086a1f9af39ecd4467e46faca9cf" translate="yes" xml:space="preserve">
          <source>Read index information from stdin.</source>
          <target state="translated">从stdin读取索引信息。</target>
        </trans-unit>
        <trans-unit id="80670c79001d8f8c9a5be5d38404bf833dac649e" translate="yes" xml:space="preserve">
          <source>Read its description.</source>
          <target state="translated">阅读其描述。</target>
        </trans-unit>
        <trans-unit id="46ab10e675175e0e453c98d42b078fb4b46c2856" translate="yes" xml:space="preserve">
          <source>Read pathnames from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">从标准输入中读取路径名,每行一个,而不是从命令行读取。</target>
        </trans-unit>
        <trans-unit id="e51b79a68429169e8d905bac10a875d5d0bc0bbc" translate="yes" xml:space="preserve">
          <source>Read patterns from &amp;lt;file&amp;gt;, one per line.</source>
          <target state="translated">从&amp;lt;file&amp;gt;中读取模式，每行读取一个。</target>
        </trans-unit>
        <trans-unit id="742eb52188cd86d4cd26b3ac213de9e008afe01b" translate="yes" xml:space="preserve">
          <source>Read refspecs, one per line, from stdin in addition to those provided as arguments. The &quot;tag &amp;lt;name&amp;gt;&quot; format is not supported.</source>
          <target state="translated">除了作为参数提供的引用外，还从stdin读取refspec，每行一个。不支持&amp;ldquo;标签&amp;lt;名称&amp;gt;&amp;rdquo;格式。</target>
        </trans-unit>
        <trans-unit id="fed49b353bd2e8ef2071f098ea90e8175a16e2cc" translate="yes" xml:space="preserve">
          <source>Read text, such as commit messages, notes, tags and branch descriptions, from the standard input and clean it in the manner used by Git.</source>
          <target state="translated">从标准输入中读取提交信息、注释、标签和分支描述等文本,并以 Git 的方式进行清理。</target>
        </trans-unit>
        <trans-unit id="eceb0ad0aa215d85bc1cfa0886bd096a3daed30d" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;.idx&lt;/code&gt; file for a Git packfile (created with &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; or &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt;) from the standard input, and dump its contents. The output consists of one object per line, with each line containing two or three space-separated columns:</source>
          <target state="translated">从标准输入中读取Gid打包文件（使用&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;或&lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]&lt;/a&gt;创建）的 &lt;code&gt;.idx&lt;/code&gt; 文件，并转储其内容。输出每行包含一个对象，每行包含两个或三个以空格分隔的列：</target>
        </trans-unit>
        <trans-unit id="ddd6a34883963a795d5ebc22563eef2cf30acd2b" translate="yes" xml:space="preserve">
          <source>Read the NUL-terminated &lt;code&gt;ls-tree -z&lt;/code&gt; output instead.</source>
          <target state="translated">改为读取以NUL结尾的 &lt;code&gt;ls-tree -z&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="3ea8fc0021add956f340de030bf6e8165a69896f" translate="yes" xml:space="preserve">
          <source>Read the commit log message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read from the standard input. This can be given more than once and the content of each file becomes its own paragraph.</source>
          <target state="translated">从给定文件中读取提交日志消息。使用 &lt;code&gt;-&lt;/code&gt; 读取标准输入。可以多次给出此信息，并且每个文件的内容都变成其自己的段落。</target>
        </trans-unit>
        <trans-unit id="507fdedba9f69c5efbd0e8cf829abe30d4a7a120" translate="yes" xml:space="preserve">
          <source>Read the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">读取合并提交时要用到的提交信息(如果创建了合并提交)。</target>
        </trans-unit>
        <trans-unit id="9362ea89cc38e10989edc212ebc0bf489cc001f5" translate="yes" xml:space="preserve">
          <source>Read the commit-graph file and verify its contents against the object database. Used to check for corrupted data.</source>
          <target state="translated">读取提交图文件并根据对象数据库验证其内容。用于检查是否有损坏的数据。</target>
        </trans-unit>
        <trans-unit id="9e4092c6ffe69dbb6a8bf7641feea7e173111c93" translate="yes" xml:space="preserve">
          <source>Read the object from standard input instead of from a file.</source>
          <target state="translated">从标准输入中读取对象,而不是从文件中读取。</target>
        </trans-unit>
        <trans-unit id="16a5e93c91809d39b015e5b24abf65dd6438e038" translate="yes" xml:space="preserve">
          <source>Read the revision arguments from the standard input, instead of individual object names. The revision arguments are processed the same way as &lt;code&gt;git rev-list&lt;/code&gt; with the &lt;code&gt;--objects&lt;/code&gt; flag uses its &lt;code&gt;commit&lt;/code&gt; arguments to build the list of objects it outputs. The objects on the resulting list are packed. Besides revisions, &lt;code&gt;--not&lt;/code&gt; or &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; lines are also accepted.</source>
          <target state="translated">从标准输入而不是单个对象名称中读取修订参数。修订版本参数的处理方式与 &lt;code&gt;git rev-list&lt;/code&gt; 相同，使用 &lt;code&gt;--objects&lt;/code&gt; 标志使用其 &lt;code&gt;commit&lt;/code&gt; 参数来构建其输出的对象列表。结果列表上的对象已打包。此外修改， &lt;code&gt;--not&lt;/code&gt; 或 &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; 线也被接受。</target>
        </trans-unit>
        <trans-unit id="7f840070f6a18eee1c3de888e1eec475edd1cfa4" translate="yes" xml:space="preserve">
          <source>Read, modify and delete symbolic refs</source>
          <target state="translated">读取、修改和删除符号引用</target>
        </trans-unit>
        <trans-unit id="356b6782c6512845fae8c2da14d692d4da174e8d" translate="yes" xml:space="preserve">
          <source>Reading from a named tree</source>
          <target state="translated">从命名的树中读取</target>
        </trans-unit>
        <trans-unit id="7405316147ea4906cae4c658957705537066053b" translate="yes" xml:space="preserve">
          <source>Reading from the active commit</source>
          <target state="translated">从活动提交中读取</target>
        </trans-unit>
        <trans-unit id="d5df5dafb2331c4e6af80c2f8a0c26176a288dab" translate="yes" xml:space="preserve">
          <source>Reads a packed archive (.pack) from the specified file, and builds a pack index file (.idx) for it. The packed archive together with the pack index can then be placed in the objects/pack/ directory of a Git repository.</source>
          <target state="translated">从指定的文件中读取打包后的存档(.pack),并为其建立一个打包索引文件(.idx)。然后,打包后的存档和打包索引可以放在 Git 仓库的 objects/pack/目录下。</target>
        </trans-unit>
        <trans-unit id="db9526754c129c75f60022c8e34e8db9d6855fac" translate="yes" xml:space="preserve">
          <source>Reads a single e-mail message from the standard input, and writes the commit log message in &amp;lt;msg&amp;gt; file, and the patches in &amp;lt;patch&amp;gt; file. The author name, e-mail and e-mail subject are written out to the standard output to be used by &lt;code&gt;git am&lt;/code&gt; to create a commit. It is usually not necessary to use this command directly. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; instead.</source>
          <target state="translated">从标准输入中读取单个电子邮件，并将提交日志消息写入&amp;lt;msg&amp;gt;文件，并将修补程序写入&amp;lt;patch&amp;gt;文件。作者名称，电子邮件和电子邮件主题被写到标准输出中，以供 &lt;code&gt;git am&lt;/code&gt; 创建提交。通常没有必要直接使用此命令。请参见&lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91a54b1043f609f02e31617fc1ed3b549e2a4394" translate="yes" xml:space="preserve">
          <source>Reads a tag contents on standard input and creates a tag object that can also be used to sign other objects.</source>
          <target state="translated">读取标准输入的标签内容,并创建一个标签对象,该对象也可用于签署其他对象。</target>
        </trans-unit>
        <trans-unit id="1988117fbbba1a52186c7874f472ad690b235ffc" translate="yes" xml:space="preserve">
          <source>Reads given idx file for packed Git archive created with the &lt;code&gt;git pack-objects&lt;/code&gt; command and verifies idx file and the corresponding pack file.</source>
          <target state="translated">读取给定的idx文件，以使用 &lt;code&gt;git pack-objects&lt;/code&gt; 命令创建的打包Git存档，并验证idx文件和相应的打包文件。</target>
        </trans-unit>
        <trans-unit id="befcf9896fcbea450fd9bee257995fb96286ee5a" translate="yes" xml:space="preserve">
          <source>Reads list of objects from the standard input, and writes either one or more packed archives with the specified base-name to disk, or a packed archive to the standard output.</source>
          <target state="translated">从标准输入中读取对象列表,并将一个或多个带有指定基名的打包存档写入磁盘,或将打包存档写入标准输出。</target>
        </trans-unit>
        <trans-unit id="d7a9d36099b1ff6ac5bd15dd14e16c269b0389b8" translate="yes" xml:space="preserve">
          <source>Reads standard input in non-recursive &lt;code&gt;ls-tree&lt;/code&gt; output format, and creates a tree object. The order of the tree entries is normalized by mktree so pre-sorting the input is not required. The object name of the tree object built is written to the standard output.</source>
          <target state="translated">读取非递归 &lt;code&gt;ls-tree&lt;/code&gt; 输出格式的标准输入，并创建一个树对象。树条目的顺序由mktree规范化，因此不需要对输入进行预排序。构建的树对象的对象名称将写入标准输出。</target>
        </trans-unit>
        <trans-unit id="768de97d393241af581368bdb5b60add6bc4daa9" translate="yes" xml:space="preserve">
          <source>Reads the supplied diff output (i.e. &quot;a patch&quot;) and applies it to files. When running from a subdirectory in a repository, patched paths outside the directory are ignored. With the &lt;code&gt;--index&lt;/code&gt; option the patch is also applied to the index, and with the &lt;code&gt;--cached&lt;/code&gt; option the patch is only applied to the index. Without these options, the command applies the patch only to files, and does not require them to be in a Git repository.</source>
          <target state="translated">读取提供的差异输出（即&amp;ldquo;补丁&amp;rdquo;）并将其应用于文件。从存储库中的子目录运行时，目录外部的修补路径将被忽略。使用 &lt;code&gt;--index&lt;/code&gt; 选项，补丁也将应用于索引，使用 &lt;code&gt;--cached&lt;/code&gt; 选项，补丁仅应用于索引。如果没有这些选项，该命令仅将补丁应用于文件，而不要求它们位于Git存储库中。</target>
        </trans-unit>
        <trans-unit id="e5173f184d3064943fb31ef4b9c751d1119e1685" translate="yes" xml:space="preserve">
          <source>Reads the tree information given by &amp;lt;tree-ish&amp;gt; into the index, but does not actually &lt;strong&gt;update&lt;/strong&gt; any of the files it &quot;caches&quot;. (see: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index[1]&lt;/a&gt;)</source>
          <target state="translated">将&amp;lt;tree-ish&amp;gt;给定的树信息读入索引，但实际上并不&lt;strong&gt;更新&lt;/strong&gt;它&amp;ldquo;缓存&amp;rdquo;的任何文件。（请参阅：&lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index [1]&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e432986c9c0bf1c0563c54e4546289b72e2b8f05" translate="yes" xml:space="preserve">
          <source>Reads three tree-ish, and output trivial merge results and conflicting stages to the standard output. This is similar to what three-way &lt;code&gt;git read-tree -m&lt;/code&gt; does, but instead of storing the results in the index, the command outputs the entries to the standard output.</source>
          <target state="translated">读取三个树状结构，并将琐碎的合并结果和冲突阶段输出到标准输出。这与三向 &lt;code&gt;git read-tree -m&lt;/code&gt; 的操作类似，但是命令不是将结果存储在索引中，而是将条目输出到标准输出。</target>
        </trans-unit>
        <trans-unit id="47a594db00e7ab66962cb542d6f07d66a982ad3f" translate="yes" xml:space="preserve">
          <source>Reads tree information into the index</source>
          <target state="translated">将树的信息读取到索引中</target>
        </trans-unit>
        <trans-unit id="cd01faf1694de2fbbfa60db859fa0d8c2fb7a091" translate="yes" xml:space="preserve">
          <source>Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them. (If these commits then become empty after rebasing, because they contain a subset of already upstream changes, the behavior towards them is controlled by the &lt;code&gt;--empty&lt;/code&gt; flag.)</source>
          <target state="translated">重新应用所有上游提交的所有干净的樱桃点，而不是抢先丢弃它们。（如果这些提交在重定基础后变为空，因为它们包含已经上游更改的子集，则对它们的行为由 &lt;code&gt;--empty&lt;/code&gt; 标志控制。）</target>
        </trans-unit>
        <trans-unit id="209b43abaea4b5ac5dbb8b759ed99ebfaf6f9172" translate="yes" xml:space="preserve">
          <source>Reapply commits on top of another base tip</source>
          <target state="translated">在另一个基础提示上重新应用提交。</target>
        </trans-unit>
        <trans-unit id="b5f89f19a4f1bfbd626812410183459baf015069" translate="yes" xml:space="preserve">
          <source>Reapply the sparsity pattern rules to paths in the working tree. Commands like merge or rebase can materialize paths to do their work (e.g. in order to show you a conflict), and other sparse-checkout commands might fail to sparsify an individual file (e.g. because it has unstaged changes or conflicts). In such cases, it can make sense to run &lt;code&gt;git sparse-checkout reapply&lt;/code&gt; later after cleaning up affected paths (e.g. resolving conflicts, undoing or committing changes, etc.).</source>
          <target state="translated">将稀疏模式规则重新应用于工作树中的路径。诸如merge或rebase之类的命令可以具体化路径来完成其工作（例如，为了向您显示冲突），而其他稀疏签出命令可能无法稀疏单个文件（例如，因为它具有未分级的更改或冲突）。在这种情况下，在清理受影响的路径（例如，解决冲突，撤消或提交更改等）之后，稍后 &lt;code&gt;git sparse-checkout reapply&lt;/code&gt; 运行git sparse-checkout是有意义的。</target>
        </trans-unit>
        <trans-unit id="95695a29b19740f8f73c24fedd25acfa8a46012d" translate="yes" xml:space="preserve">
          <source>Rebase</source>
          <target state="translated">Rebase</target>
        </trans-unit>
        <trans-unit id="f805426f874c522ca8e3397a261d025324269dce" translate="yes" xml:space="preserve">
          <source>Rebase all commits reachable from &amp;lt;branch&amp;gt;, instead of limiting them with an &amp;lt;upstream&amp;gt;. This allows you to rebase the root commit(s) on a branch. When used with --onto, it will skip changes already contained in &amp;lt;newbase&amp;gt; (instead of &amp;lt;upstream&amp;gt;) whereas without --onto it will operate on every change. When used together with both --onto and --preserve-merges, &lt;code&gt;all&lt;/code&gt; root commits will be rewritten to have &amp;lt;newbase&amp;gt; as parent instead.</source>
          <target state="translated">重新设置所有可从&amp;lt;branch&amp;gt;到达的提交，而不是使用&amp;lt;upstream&amp;gt;限制它们。这使您可以在分支上重新建立根提交。与--onto一起使用时，它将跳过&amp;lt;newbase&amp;gt;中已包含的更改（而不是&amp;lt;upstream&amp;gt;），而没有--onto时，它将对所有更改进行操作。与--onto和--preserve-merges一起使用时， &lt;code&gt;all&lt;/code&gt; 根提交都将被重写为以&amp;lt;newbase&amp;gt;作为父级。</target>
        </trans-unit>
        <trans-unit id="e5565e2c078bf46f769d916c78f2140677ea9bef" translate="yes" xml:space="preserve">
          <source>Rebase options</source>
          <target state="translated">重定基数选项</target>
        </trans-unit>
        <trans-unit id="716069514beaa612afd8a844f284c8d0a6aabce4" translate="yes" xml:space="preserve">
          <source>Rebase vs. pull/merge</source>
          <target state="translated">重构与拉拢/合并</target>
        </trans-unit>
        <trans-unit id="5e20f7eeaec14e3dc573b7394eb6cd8341f1bca1" translate="yes" xml:space="preserve">
          <source>Rebase your current HEAD on the last commit you want to retain as-is. For example, if you want to reorder the last 5 commits, use:</source>
          <target state="translated">将你当前的 HEAD 重新排序到你想保留的最后一个提交。例如,如果你想重新排列最后 5 个提交的顺序,可以使用</target>
        </trans-unit>
        <trans-unit id="7170c51391b558eaee43fbe3f7e40861483475fb" translate="yes" xml:space="preserve">
          <source>Rebasing (or any other form of rewriting) a branch that others have based work on is a bad idea: anyone downstream of it is forced to manually fix their history. This section explains how to do the fix from the downstream&amp;rsquo;s point of view. The real fix, however, would be to avoid rebasing the upstream in the first place.</source>
          <target state="translated">对其他人基于其工作的分支重新建立基础（或进行任何其他形式的重写）是一个坏主意：下游的任何人都必须手动修复其历史记录。本节从下游的角度说明如何进行修复。但是，真正的解决方法是首先避免对上游进行重新调整。</target>
        </trans-unit>
        <trans-unit id="8f0767f1f4e33ddf301ed23c7f2cab0332acde8d" translate="yes" xml:space="preserve">
          <source>Rebasing interactively means that you have a chance to edit the commits which are rebased. You can reorder the commits, and you can remove them (weeding out bad or otherwise unwanted patches).</source>
          <target state="translated">交互式重定名意味着你有机会编辑被重定名的提交内容,你可以对提交内容重新排序,也可以删除它们(剔除不好的或不需要的补丁)。你可以对提交的内容进行重新排序,也可以删除它们(剔除坏的或不需要的补丁)。</target>
        </trans-unit>
        <trans-unit id="451ba45ef5ba504d79efe1ccb8ef4e6b541d4b90" translate="yes" xml:space="preserve">
          <source>Rebasing merges</source>
          <target state="translated">重命名合并</target>
        </trans-unit>
        <trans-unit id="f41810dd94a2ab482398f10cf85665624d62733a" translate="yes" xml:space="preserve">
          <source>Recall that merge commits may have more than one parent; by default, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; follow the first parent listed in the commit, but you can also choose:</source>
          <target state="translated">回想一下，合并提交可能有多个父级。默认情况下， &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;~&lt;/code&gt; 遵循提交中列出的第一个父级，但是您也可以选择：</target>
        </trans-unit>
        <trans-unit id="b37c74948935714b7fd73afa3de16cd064ee51d6" translate="yes" xml:space="preserve">
          <source>Recall that the commit which will be committed after we resolve this conflict will have two parents instead of the usual one: one parent will be HEAD, the tip of the current branch; the other will be the tip of the other branch, which is stored temporarily in MERGE_HEAD.</source>
          <target state="translated">回想一下,在我们解决了这个冲突之后,将要提交的提交将有两个父体,而不是通常的一个:一个父体是 HEAD,即当前分支的顶端;另一个是另一个分支的顶端,它暂时存储在 MERGE_HEAD 中。</target>
        </trans-unit>
        <trans-unit id="9f6cd666ff59558e35fc1e4987f55228a4aa839c" translate="yes" xml:space="preserve">
          <source>Receive missing objects from another repository</source>
          <target state="translated">从另一个存储库接收丢失的对象</target>
        </trans-unit>
        <trans-unit id="3a1414f04e5ec5736bdcd32788841a475c616871" translate="yes" xml:space="preserve">
          <source>Receive what is pushed into the repository</source>
          <target state="translated">接收推送到版本库的内容。</target>
        </trans-unit>
        <trans-unit id="ca8f48326e259b3e6bb0b952b7bb30d324f93b41" translate="yes" xml:space="preserve">
          <source>Recipe: Copy maint</source>
          <target state="translated">配方。复制主要内容</target>
        </trans-unit>
        <trans-unit id="53d4283d5e8f18dd173ab180112f372c62ec5838" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Merging remote topics</source>
          <target state="translated">配方:推/拉:合并远程主题</target>
        </trans-unit>
        <trans-unit id="1f8640f7861cc46b56a1e4b42e9ca596b559f6db" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Publishing branches/topics</source>
          <target state="translated">配方:推/拉。出版部门/主题</target>
        </trans-unit>
        <trans-unit id="3a17d2c389fe13fb57af10dbacfb6b3db024c7c4" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Staying up to date</source>
          <target state="translated">配方:推/拉。掌握最新情况</target>
        </trans-unit>
        <trans-unit id="02b6d43b8510b59229854c014a4620861f29d737" translate="yes" xml:space="preserve">
          <source>Recipe: Release tagging</source>
          <target state="translated">配方。释放标签</target>
        </trans-unit>
        <trans-unit id="9d28e02794d321eb00b6d5b97832a596837552b2" translate="yes" xml:space="preserve">
          <source>Recipe: Rewind and rebuild next</source>
          <target state="translated">配方。下一次倒带和重建</target>
        </trans-unit>
        <trans-unit id="f8152ab6d8ec6437faa103dde674cb065aa68613" translate="yes" xml:space="preserve">
          <source>Recipe: Update maint to new release</source>
          <target state="translated">配方。更新主要内容为新版本</target>
        </trans-unit>
        <trans-unit id="29ee8bda8dd5e0f017624c7f75aa875a53804d32" translate="yes" xml:space="preserve">
          <source>Recipe: Verify &lt;em&gt;master&lt;/em&gt; is a superset of &lt;em&gt;maint&lt;/em&gt;</source>
          <target state="translated">配方：验证&lt;em&gt;主&lt;/em&gt;是的超集&lt;em&gt;MAINT&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd09f97e74a882a55504c37b0826f564e6b1346" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Importing patches</source>
          <target state="translated">配方:format-patch/am。导入补丁</target>
        </trans-unit>
        <trans-unit id="363c9c30e4fafba7e8fc9192a52c83213c41b8ac" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Keeping topics up to date</source>
          <target state="translated">配方:format-patch/am。保持主题的更新</target>
        </trans-unit>
        <trans-unit id="677a69c96c088fbfbe55531cae388f0a94e79290" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Publishing branches/topics</source>
          <target state="translated">配方:格式-补丁/am。出版部门/主题</target>
        </trans-unit>
        <trans-unit id="7c405acad54185184a3b50d9aee58d7a13bab6ed" translate="yes" xml:space="preserve">
          <source>Recompress, remove unused cruft:</source>
          <target state="translated">再压缩,去掉不用的杂物。</target>
        </trans-unit>
        <trans-unit id="257831ab2bd13a64966a7f962a9574ea39ef3108" translate="yes" xml:space="preserve">
          <source>Record changes to the repository</source>
          <target state="translated">记录对存储库的更改</target>
        </trans-unit>
        <trans-unit id="13168b3a0cbb28fba7cf06c3c640480d4de874bc" translate="yes" xml:space="preserve">
          <source>Record only the fact that the path will be added later. An entry for the path is placed in the index with no content. This is useful for, among other things, showing the unstaged content of such files with &lt;code&gt;git diff&lt;/code&gt; and committing them with &lt;code&gt;git commit
-a&lt;/code&gt;.</source>
          <target state="translated">仅记录以下事实：以后将添加路径。路径的条目放置在索引中，没有内容。除其他功能外，这对于使用 &lt;code&gt;git diff&lt;/code&gt; 显示此类文件的未暂存内容，并使用 &lt;code&gt;git commit -a&lt;/code&gt; 提交它们很有用。</target>
        </trans-unit>
        <trans-unit id="908f8c6524a9d1fb52d4fa427c4917cc570c6355" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object.</source>
          <target state="translated">记录一个标记指向一个给定的对象,而不首先创建任何新的对象。</target>
        </trans-unit>
        <trans-unit id="59ee078874bbbc459021c0c530f38bc7aaf471b2" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object. Using --import-marks and referring to missing marks will cause fast-import to fail, so aliases can provide a way to set otherwise pruned commits to a valid value (e.g. the nearest non-pruned ancestor).</source>
          <target state="translated">记录一个标记对给定对象的引用,而不需要先创建任何新对象。使用--import-marks并引用缺失的标记会导致快速导入失败,因此别名可以提供一种方法,将其他修剪过的提交设置为有效值(例如最近的非修剪过的祖先)。</target>
        </trans-unit>
        <trans-unit id="d6adcb873ab9c7cd434052b29bbda78059575713" translate="yes" xml:space="preserve">
          <source>Record the base tree information to identify the state the patch series applies to. See the BASE TREE INFORMATION section below for details. If &amp;lt;commit&amp;gt; is &quot;auto&quot;, a base commit is automatically chosen. The &lt;code&gt;--no-base&lt;/code&gt; option overrides a &lt;code&gt;format.useAutoBase&lt;/code&gt; configuration.</source>
          <target state="translated">记录基础树信息以标识补丁程序系列适用的状态。有关详细信息，请参见下面的&amp;ldquo;基础树信息&amp;rdquo;部分。如果&amp;lt;commit&amp;gt;为&amp;ldquo; auto&amp;rdquo;，则自动选择基本提交。所述 &lt;code&gt;--no-base&lt;/code&gt; 选项覆盖一个 &lt;code&gt;format.useAutoBase&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="1df60f45066883b70333fa04c8ca0ea0ac9a963e" translate="yes" xml:space="preserve">
          <source>Record the pristine state as the first commit in the history.</source>
          <target state="translated">记录原始状态作为历史上第一个承诺。</target>
        </trans-unit>
        <trans-unit id="2779532bfc36fb35edea59aae8e6a7c58766f0fd" translate="yes" xml:space="preserve">
          <source>Records all changes made to the branch tip named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">记录对名为 &lt;code&gt;name&lt;/code&gt; 的分支提示所做的所有更改。</target>
        </trans-unit>
        <trans-unit id="e26cb9a4392a1984a3c8c89ac8ba4d1939bfa972" translate="yes" xml:space="preserve">
          <source>Records all changes made to the tag named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">记录对名为 &lt;code&gt;name&lt;/code&gt; 的标记所做的所有更改。</target>
        </trans-unit>
        <trans-unit id="b4426300ccfff51ab94cf09d14eb70cb666bb2d4" translate="yes" xml:space="preserve">
          <source>Records of changes made to refs are stored in this directory. See &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; for more information. This directory is ignored (except logs/HEAD) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/logs&quot; will be used instead.</source>
          <target state="translated">对引用所做的更改记录存储在此目录中。有关更多信息，请参见&lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref [1]&lt;/a&gt;。如果设置了$ GIT_COMMON_DIR，则将忽略该目录（日志/ HEAD除外），而将使用&amp;ldquo; $ GIT_COMMON_DIR / logs&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4dfb1dccefe8c5960e96ace8700ff3694a2adfa8" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you have not resolved are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 15 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">当 &lt;code&gt;git rerere gc&lt;/code&gt; 运行时，您尚未解决的合并冲突的记录会保留许多天。您还可以使用更具可读性的&amp;ldquo; 1.month.ago&amp;rdquo;等。默认值为15天。参见&lt;a href=&quot;git-rerere&quot;&gt;git-rerere [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0041a23358783dc658fb86af817bd1e3c4818754" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you resolved earlier are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 60 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">当您运行 &lt;code&gt;git rerere gc&lt;/code&gt; 时，您先前解决的合并冲突的记录会保留许多天。您还可以使用更易于理解的&amp;ldquo; 1.month.ago&amp;rdquo;等。默认值为60天。参见&lt;a href=&quot;git-rerere&quot;&gt;git-rerere [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f27ef1289a3377cd529d96e1d59f394c9d2e51b" translate="yes" xml:space="preserve">
          <source>Recovering from repository corruption</source>
          <target state="translated">从存储库损坏中恢复</target>
        </trans-unit>
        <trans-unit id="45b084fa0ec2bcf4d8887dcc1ed74808ce39dd65" translate="yes" xml:space="preserve">
          <source>Recovering from upstream rebase</source>
          <target state="translated">从上游重基中恢复</target>
        </trans-unit>
        <trans-unit id="a2b2e17c2700a078248ea4a8793fdeb963f1e774" translate="yes" xml:space="preserve">
          <source>Recovering lost changes</source>
          <target state="translated">恢复丢失的变更</target>
        </trans-unit>
        <trans-unit id="c9f9ed2d4080ff53397fc95e602ba0c0a8018150" translate="yes" xml:space="preserve">
          <source>Recovering stash entries that were cleared/dropped erroneously</source>
          <target state="translated">恢复被错误清除/丢弃的存储条目。</target>
        </trans-unit>
        <trans-unit id="07417b29bf5742eeb9def793a7c341803a4ae6cf" translate="yes" xml:space="preserve">
          <source>Recurse into sub-trees.</source>
          <target state="translated">递进成子树。</target>
        </trans-unit>
        <trans-unit id="a6bbb82b51ea9a73ca0b0838d88a88a52f49ad15" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each active submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">循环调用版本库中每个活动子模块的ls-files。目前只支持-缓存模式。</target>
        </trans-unit>
        <trans-unit id="b71ca4a78b12182052bd243bd7fb2b5a8710c342" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">循环调用版本库中每个子模块的ls-files。目前只支持-缓存模式。</target>
        </trans-unit>
        <trans-unit id="9594ad54e61dba1e097011c1262a0e12523ac73c" translate="yes" xml:space="preserve">
          <source>Recursively copies an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be completely replaced by the content copied from the source.</source>
          <target state="translated">递归地将现有的文件或子目录复制到分支的不同位置。现有的文件或目录必须存在。如果目的地存在,它将被从源文件复制的内容完全取代。</target>
        </trans-unit>
        <trans-unit id="784c487e0b0ebf6146a806df2269e12c1733d014" translate="yes" xml:space="preserve">
          <source>Recursively finds and lists the svn:ignore property on directories. The output is suitable for appending to the $GIT_DIR/info/exclude file.</source>
          <target state="translated">递归查找并列出目录上的svn:ignore属性。其输出适合于追加到$GIT_DIR/info/exclude文件中。</target>
        </trans-unit>
        <trans-unit id="8a1182cccab09515529f5c8d920459a7ff2c3ff2" translate="yes" xml:space="preserve">
          <source>Recursively finds the svn:ignore property on directories and creates matching .gitignore files. The resulting files are staged to be committed, but are not committed. Use -r/--revision to refer to a specific revision.</source>
          <target state="translated">递归查找目录的svn:ignore属性,并创建匹配的.gitignore文件。所产生的文件会被暂存以待提交,但不会被提交。使用 -r/--revision 来引用一个特定的修订版。</target>
        </trans-unit>
        <trans-unit id="8cf2dd32a75d92cd5c31b8e357091014ef76d06b" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that has been initialized and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object.</source>
          <target state="translated">在资源库中已初始化并检出的每个子模块中递归搜索。当与&amp;lt;tree&amp;gt;选项结合使用时，所有子模块输出的前缀将是父项目的&amp;lt;tree&amp;gt;对象的名称。</target>
        </trans-unit>
        <trans-unit id="c91703d456763a97cd487b639be20f9ff2ca1d31" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that is active and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object. This option has no effect if &lt;code&gt;--no-index&lt;/code&gt; is given.</source>
          <target state="translated">在存储库中处于活动状态并已检出的每个子模块中递归搜索。与&amp;lt;tree&amp;gt;选项结合使用时，所有子模块输出的前缀将是父项目的&amp;lt;tree&amp;gt;对象的名称。如果给定 &lt;code&gt;--no-index&lt;/code&gt; ,则此选项无效。</target>
        </trans-unit>
        <trans-unit id="c70c81b356beafd0eeca89b16d9fdcb5f7371848" translate="yes" xml:space="preserve">
          <source>Redirection to a file (&lt;code&gt;/path/name&lt;/code&gt;) or pipe (&lt;code&gt;|command&lt;/code&gt;) is not supported.</source>
          <target state="translated">不支持重定向到文件（ &lt;code&gt;/path/name&lt;/code&gt; ）或管道（ &lt;code&gt;|command&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="89381280eddd66ed8601a4438d83804ded19d6ef" translate="yes" xml:space="preserve">
          <source>Reencoding content requires resources that might slow down certain Git operations (e.g &lt;code&gt;git checkout&lt;/code&gt; or &lt;code&gt;git add&lt;/code&gt;).</source>
          <target state="translated">重新编码内容需要的资源可能会减慢某些Git操作的速度（例如 &lt;code&gt;git checkout&lt;/code&gt; 或 &lt;code&gt;git add&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4d5f4726578da60b5802012abfa0452d24f12476" translate="yes" xml:space="preserve">
          <source>Reencoding content to non-UTF encodings can cause errors as the conversion might not be UTF-8 round trip safe. If you suspect your encoding to not be round trip safe, then add it to &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; to make Git check the round trip encoding (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). SHIFT-JIS (Japanese character set) is known to have round trip issues with UTF-8 and is checked by default.</source>
          <target state="translated">将内容重新编码为非UTF编码会导致错误，因为此转换可能不是UTF-8往返安全的。如果您怀疑编码不是往返安全，则将其添加到 &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; ,以使Git检查往返编码（请参阅&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。已知SHIFT-JIS（日语字符集）在UTF-8中有往返问题，并且默认情况下已选中。</target>
        </trans-unit>
        <trans-unit id="f60624f9fc2a82abf8497341d9d81b9d0824e3d8" translate="yes" xml:space="preserve">
          <source>Ref list attributes</source>
          <target state="translated">参考列表属性</target>
        </trans-unit>
        <trans-unit id="b5e499a4b81055b1593e4e8b58d802dd0804b18d" translate="yes" xml:space="preserve">
          <source>Ref list keywords</source>
          <target state="translated">参考清单关键词</target>
        </trans-unit>
        <trans-unit id="042501eba486c2a8fe3dfeebed7e6a526acc65b2" translate="yes" xml:space="preserve">
          <source>Refer to trace2.h for details about all trace2 functions.</source>
          <target state="translated">关于所有trace2函数的细节,请参考trace2.h。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="8189e74b00341c8128de1c9b04b6630dfed40f88" translate="yes" xml:space="preserve">
          <source>Reference advertisement will be omitted unless explicitly requested</source>
          <target state="translated">除非明确要求,否则将省略参考广告。</target>
        </trans-unit>
        <trans-unit id="219616f872f3c1f3f7c63db96c4bad5707f937ab" translate="yes" xml:space="preserve">
          <source>Reference logs, or &quot;reflogs&quot;, record when the tips of branches and other references were updated in the local repository. Reflogs are useful in various Git commands, to specify the old value of a reference. For example, &lt;code&gt;HEAD@{2}&lt;/code&gt; means &quot;where HEAD used to be two moves ago&quot;, &lt;code&gt;master@{one.week.ago}&lt;/code&gt; means &quot;where master used to point to one week ago in this local repository&quot;, and so on. See &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for more details.</source>
          <target state="translated">参考日志或&amp;ldquo;参考日志&amp;rdquo;记录何时在本地存储库中更新了分支的提示和其他参考。 Reflog在各种Git命令中很有用，用于指定引用的旧值。例如， &lt;code&gt;HEAD@{2}&lt;/code&gt; 表示&amp;ldquo; HEAD以前是两个动作之前的位置&amp;rdquo;， &lt;code&gt;master@{one.week.ago}&lt;/code&gt; @ { one.week.ago}表示&amp;ldquo; master在此本地存储库中以前指向一周的位置&amp;rdquo;，依此类推。有关更多详细信息，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="fdc0add895cb5f66656ac926ee760b1a52ebfc92" translate="yes" xml:space="preserve">
          <source>References are stored in subdirectories of this directory. The &lt;code&gt;git prune&lt;/code&gt; command knows to preserve objects reachable from refs found in this directory and its subdirectories. This directory is ignored (except refs/bisect, refs/rewritten and refs/worktree) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/refs&quot; will be used instead.</source>
          <target state="translated">引用存储在此目录的子目录中。该 &lt;code&gt;git prune&lt;/code&gt; 命令知道要保留对象从裁判到达此目录及其子目录中找到。如果设置了$ GIT_COMMON_DIR，则将忽略此目录（refs / bisect，refs / rewrite和refs / worktree除外），而将使用&amp;ldquo; $ GIT_COMMON_DIR / refs&amp;rdquo;代替。</target>
        </trans-unit>
        <trans-unit id="a774e5bc9f4a8942d74474f466fea367c3f9fc07" translate="yes" xml:space="preserve">
          <source>References to commit objects at the head of each branch are stored in files under .git/refs/heads/.</source>
          <target state="translated">每个分支头部的提交对象的引用都存储在.git/refs/heads/下的文件中。</target>
        </trans-unit>
        <trans-unit id="e8597d82d33701c292294d665408182c1ffb7098" translate="yes" xml:space="preserve">
          <source>Reflog: The two backends will use different wording when describing the changes made in the reflog, though both will make use of the word &quot;rebase&quot;.</source>
          <target state="translated">重新记录。两个后端在描述重新记录中所作的改动时将使用不同的措辞,但都将使用 &quot;rebase &quot;一词。</target>
        </trans-unit>
        <trans-unit id="586454a22a42afbc6e2564872cf76fa552b4a1a3" translate="yes" xml:space="preserve">
          <source>Reflogs</source>
          <target state="translated">Reflogs</target>
        </trans-unit>
        <trans-unit id="701486a68f3896a8a5368aead277807a6847151f" translate="yes" xml:space="preserve">
          <source>Refs</source>
          <target state="translated">Refs</target>
        </trans-unit>
        <trans-unit id="80074f188ddb96f7955691b6a7210a31a672772d" translate="yes" xml:space="preserve">
          <source>Refs are grouped into islands based on their &quot;names&quot;, and two regexes that produce the same name are considered to be in the same island. The names are computed from the regexes by concatenating any capture groups from the regex, with a &lt;code&gt;-&lt;/code&gt; dash in between. (And if there are no capture groups, then the name is the empty string, as in the above example.) This allows you to create arbitrary numbers of islands. Only up to 14 such capture groups are supported though.</source>
          <target state="translated">引用根据其&amp;ldquo;名称&amp;rdquo;分组到各个岛中，并且两个产生相同名称的正则表达式被视为在同一岛中。这些名称是通过将正则表达式中的任何捕获组连接在一起而在正则表达式中计算出来的，中间有 &lt;code&gt;-&lt;/code&gt; 破折号。（并且，如果没有捕获组，则名称为空字符串，如上例所示。）这使您可以创建任意数量的孤岛。但是，最多仅支持14个此类捕获组。</target>
        </trans-unit>
        <trans-unit id="f06a362739f816b768319f27e61eb1dd6b36faf2" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, &lt;code&gt;main-worktree&lt;/code&gt; and &lt;code&gt;worktrees&lt;/code&gt;. The former gives access to per-working tree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">仍然可以通过两个特殊路径 &lt;code&gt;main-worktree&lt;/code&gt; 和 &lt;code&gt;worktrees&lt;/code&gt; 从另一个工作树访问每个工作树的引用。前者可以访问主工作树的每个工作树引用，而后者可以访问所有链接的工作树。</target>
        </trans-unit>
        <trans-unit id="2bb2083cc2f447acfd0f5d16022129235ca5b2cc" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, main-worktree and worktrees. The former gives access to per-worktree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">每棵工作树的参考文献仍然可以通过两种特殊路径,即主工作树和工作树,从另一棵工作树访问。前者可以访问主工作树的每个工作树的参考文献,而后者可以访问所有链接的工作树。</target>
        </trans-unit>
        <trans-unit id="05e5994fa9181b6fad85ee509538c0ad6a6bc5c4" translate="yes" xml:space="preserve">
          <source>Refs that are per-&lt;a href=&quot;#def_working_tree&quot;&gt;worktree&lt;/a&gt;, rather than global. This is presently only &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; and any refs that start with &lt;code&gt;refs/bisect/&lt;/code&gt;, but might later include other unusual refs.</source>
          <target state="translated">&lt;a href=&quot;#def_working_tree&quot;&gt;引用&lt;/a&gt;是perworktree，而不是全局。目前这只是&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;以及以 &lt;code&gt;refs/bisect/&lt;/code&gt; 开头的所有ref ，但以后可能还会包含其他异常的ref。</target>
        </trans-unit>
        <trans-unit id="338d2a0e12d851337309cef01e7fe887153b0f55" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt; 'file' does not match the object name for 'file'.</source>
          <target state="translated">无论对象类型如何，所有对象都具有以下特征：它们都使用zlib压缩，并且具有一个标头，该标头不仅指定其类型，还提供有关对象中数据的大小信息。值得注意的是，用于命名对象的SHA-1哈希是原始数据加上此标头的哈希，因此 &lt;code&gt;sha1sum&lt;/code&gt; 'file '与'file'的对象名不匹配。</target>
        </trans-unit>
        <trans-unit id="8f29e38b3ae41c972d05bd6fbd77326fc2768fcf" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt;&lt;code&gt;file&lt;/code&gt; does not match the object name for &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">无论对象类型如何，所有对象都具有以下特征：它们都使用zlib压缩，并且具有一个标头，该标头不仅指定其类型，而且还提供有关对象中数据的大小信息。值得一提的是，用来命名对象的SHA-1散列的原始数据加上这头的哈希值，所以 &lt;code&gt;sha1sum&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; 不匹配对象名称 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="710a95e624a3349545888a56ed2557d883a0ebee" translate="yes" xml:space="preserve">
          <source>Region and Data Messages</source>
          <target state="translated">区域和数据信息</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="f60734f6521040c876486255fe253adea3ef4364" translate="yes" xml:space="preserve">
          <source>Regions can be use to time an interesting section of code.</source>
          <target state="translated">区域可以用来为一段有趣的代码计时。</target>
        </trans-unit>
        <trans-unit id="e6931aebd376c6a517eae391382acbc891d72f65" translate="yes" xml:space="preserve">
          <source>Regions may be nested. This causes messages to be indented in the PERF target, for example. Elapsed times are relative to the start of the corresponding nesting level as expected. For example, if we add region message to:</source>
          <target state="translated">区域可以被嵌套。例如,这会导致消息在PERF目标中缩进。经过的时间是相对于相应的嵌套级别的开始而言的,这是预期的。例如,如果我们将区域消息添加到。</target>
        </trans-unit>
        <trans-unit id="1595f1bb6d790a7a3e5eb6fb03765aabf279806d" translate="yes" xml:space="preserve">
          <source>Register file contents in the working tree to the index</source>
          <target state="translated">将工作树中的文件内容注册到索引中。</target>
        </trans-unit>
        <trans-unit id="8a6eb409adc691aa11f00dc05c7a129c2f833328" translate="yes" xml:space="preserve">
          <source>Regressions are a big problem in the software industry. But it&amp;rsquo;s difficult to put some real numbers behind that claim.</source>
          <target state="translated">回归是软件行业中的一个大问题。但是很难在这个说法后面加上一些实际数字。</target>
        </trans-unit>
        <trans-unit id="4ab9d6c175961a8739069a73845c7f8b21150d86" translate="yes" xml:space="preserve">
          <source>Regressions: a big problem</source>
          <target state="translated">回归:一个大问题</target>
        </trans-unit>
        <trans-unit id="2256cc6ee2a5d077491a8a63ef76ac743c25d2d2" translate="yes" xml:space="preserve">
          <source>Related links</source>
          <target state="translated">相关链接</target>
        </trans-unit>
        <trans-unit id="b61e20d1d031c57060b03654349b1ab448029094" translate="yes" xml:space="preserve">
          <source>Relationship to the Existing Trace Api (api-trace.txt)</source>
          <target state="translated">与现有跟踪 API 的关系 (api-trace.txt)</target>
        </trans-unit>
        <trans-unit id="a5807b40eca9f80054603fbc4a7d22e009d2c415" translate="yes" xml:space="preserve">
          <source>Relative and non-relative marks may be combined by interweaving --(no-)-relative-marks with the --(import|export)-marks= options.</source>
          <target state="translated">通过将--(no-)-关系标记与--(import|export)-标记=选项交织在一起,可以将相对标记和非关系标记结合起来。</target>
        </trans-unit>
        <trans-unit id="31bc43768c6a353840de5e162fcf9b5cce4d9437" translate="yes" xml:space="preserve">
          <source>Relative to the tip of &lt;code&gt;topic&lt;/code&gt;: knowing that your &lt;code&gt;topic&lt;/code&gt; has three commits, the old tip of &lt;code&gt;subsystem&lt;/code&gt; must be &lt;code&gt;topic~3&lt;/code&gt;.</source>
          <target state="translated">相对于 &lt;code&gt;topic&lt;/code&gt; 提示：知道您的 &lt;code&gt;topic&lt;/code&gt; 有3个提交， &lt;code&gt;subsystem&lt;/code&gt; 的旧提示必须是 &lt;code&gt;topic~3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98786341673b229d09cd6bac6df5f38262cac094" translate="yes" xml:space="preserve">
          <source>Remain silent even on nonexistent files</source>
          <target state="translated">即使在不存在的文件上也保持沉默。</target>
        </trans-unit>
        <trans-unit id="cad2c2939c304ff819eff58f792783f6747c93cf" translate="yes" xml:space="preserve">
          <source>Remap all the path requests as relative to the given path. This is sort of &quot;Git root&quot; - if you run &lt;code&gt;git daemon&lt;/code&gt; with &lt;code&gt;--base-path=/srv/git&lt;/code&gt; on example.com, then if you later try to pull &lt;code&gt;git://example.com/hello.git&lt;/code&gt;, &lt;code&gt;git daemon&lt;/code&gt; will interpret the path as &lt;code&gt;/srv/git/hello.git&lt;/code&gt;.</source>
          <target state="translated">将所有路径请求重新映射为相对于给定路径。这有点像&amp;ldquo; Git根目录&amp;rdquo;-如果在example.com上使用 &lt;code&gt;--base-path=/srv/git&lt;/code&gt; 运行 &lt;code&gt;git daemon&lt;/code&gt; ，那么以后再尝试拉 &lt;code&gt;git://example.com/hello.git&lt;/code&gt; 时， &lt;code&gt;git daemon&lt;/code&gt; 会将路径解释为 &lt;code&gt;/srv/git/hello.git&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a5c393fce9fb8dc0d691f13288d22c0e7f1b235" translate="yes" xml:space="preserve">
          <source>Remap to ancestor</source>
          <target state="translated">重映射到祖先</target>
        </trans-unit>
        <trans-unit id="8d0121936c456fcf3d222b828ee9077e2cc34843" translate="yes" xml:space="preserve">
          <source>Remember how we did the &lt;code&gt;git update-index&lt;/code&gt; on file &lt;code&gt;hello&lt;/code&gt; and then we changed &lt;code&gt;hello&lt;/code&gt; afterward, and could compare the new state of &lt;code&gt;hello&lt;/code&gt; with the state we saved in the index file?</source>
          <target state="translated">还记得我们如何在文件 &lt;code&gt;hello&lt;/code&gt; 上执行 &lt;code&gt;git update-index&lt;/code&gt; ，然后又更改了 &lt;code&gt;hello&lt;/code&gt; ，并且可以将 &lt;code&gt;hello&lt;/code&gt; 的新状态与保存在索引文件中的状态进行比较吗？</target>
        </trans-unit>
        <trans-unit id="2cc52de1f31f7df8236151d526db4f676cdfb905" translate="yes" xml:space="preserve">
          <source>Remember, before running &lt;code&gt;git merge&lt;/code&gt;, our &lt;code&gt;master&lt;/code&gt; head was at &quot;Some fun.&quot; commit, while our &lt;code&gt;mybranch&lt;/code&gt; head was at &quot;Some work.&quot; commit.</source>
          <target state="translated">记住，在运行 &lt;code&gt;git merge&lt;/code&gt; 之前，我们的 &lt;code&gt;master&lt;/code&gt; 负责人是&amp;ldquo; Some fun&amp;rdquo;。承诺，而我们的 &lt;code&gt;mybranch&lt;/code&gt; 正忙于 &amp;ldquo;一些工作&amp;rdquo;。承诺。</target>
        </trans-unit>
        <trans-unit id="3e534e3639a4dd02297fd7fd07ede8a71c71535e" translate="yes" xml:space="preserve">
          <source>Remote HEAD must resolve to an object that exists locally</source>
          <target state="translated">远程HEAD必须解析到本地存在的对象。</target>
        </trans-unit>
        <trans-unit id="2033891925fe29daa47f6c451af0f18a87529563" translate="yes" xml:space="preserve">
          <source>Remote helper programs are invoked with one or (optionally) two arguments. The first argument specifies a remote repository as in Git; it is either the name of a configured remote or a URL. The second argument specifies a URL; it is usually of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, but any arbitrary string is possible. The &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable is set up for the remote helper and can be used to determine where to store additional data or from which directory to invoke auxiliary Git commands.</source>
          <target state="translated">使用一个或（可选）两个参数调用远程帮助程序。第一个参数指定一个远程存储库，如Git中所示；它是配置的遥​​控器的名称或URL。第二个参数指定一个URL；它通常采用 &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; 的形式，但是任何任意字符串都是可能的。所述 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量设置为所述远程辅助，并且可以被用于确定在哪里存储附加数据或从该目录调用辅助GIT中的命令。</target>
        </trans-unit>
        <trans-unit id="8ee4f73d380c3c99d59209a069206bbd667c2977" translate="yes" xml:space="preserve">
          <source>Remote helper programs are normally not used directly by end users, but they are invoked by Git when it needs to interact with remote repositories Git does not support natively. A given helper will implement a subset of the capabilities documented here. When Git needs to interact with a repository using a remote helper, it spawns the helper as an independent process, sends commands to the helper&amp;rsquo;s standard input, and expects results from the helper&amp;rsquo;s standard output. Because a remote helper runs as an independent process from Git, there is no need to re-link Git to add a new helper, nor any need to link the helper with the implementation of Git.</source>
          <target state="translated">最终用户通常不直接使用远程帮助程序，但是当Git需要与远程存储库进行交互时，Git会调用它们，而Git本身不支持。给定的帮助者将实现此处记录的功能的子集。当Git需要使用远程帮助程序与存储库进行交互时，它会将帮助程序作为独立的进程生成，将命令发送到该帮助程序的标准输入，并期望该帮助程序的标准输出产生结果。因为远程帮助程序是作为独立于Git的独立进程运行的，所以无需重新链接Git以添加新的帮助程序，也无需将帮助程序与Git的实现进行链接。</target>
        </trans-unit>
        <trans-unit id="7f9d958435b39dd5e8519bc9a5ca0b414455c52e" translate="yes" xml:space="preserve">
          <source>Remotes</source>
          <target state="translated">Remotes</target>
        </trans-unit>
        <trans-unit id="1d36d5e98f5289fdb40f6238091d921b16cd3d1b" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;n&amp;gt; leading path components (separated by slashes) from traditional diff paths. E.g., with &lt;code&gt;-p2&lt;/code&gt;, a patch against &lt;code&gt;a/dir/file&lt;/code&gt; will be applied directly to &lt;code&gt;file&lt;/code&gt;. The default is 1.</source>
          <target state="translated">从传统差异路径中删除&amp;lt;n&amp;gt;前导路径部分（以斜杠分隔）。例如，使用 &lt;code&gt;-p2&lt;/code&gt; ，针对 &lt;code&gt;a/dir/file&lt;/code&gt; 的补丁将直接应用于 &lt;code&gt;file&lt;/code&gt; 。预设值为1。</target>
        </trans-unit>
        <trans-unit id="536f22b2b28f4e056331357f5ffb90610418f296" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;ref&amp;gt; from remote repository. The specified branch cannot be the remote HEAD. If -d is specified the following other conditions must also be met:</source>
          <target state="translated">从远程存储库中删除&amp;lt;ref&amp;gt;。指定的分支不能是远程HEAD。如果指定了-d，则还必须满足以下其他条件：</target>
        </trans-unit>
        <trans-unit id="1d92b551b14c7ff24c92341cea4922fcb2c6e7df" translate="yes" xml:space="preserve">
          <source>Remove a matching credential, if any, from the helper&amp;rsquo;s storage.</source>
          <target state="translated">从助手的存储中删除匹配的凭据（如果有）。</target>
        </trans-unit>
        <trans-unit id="f5cc16ae24cf52b436071d42d9516387a59ce74f" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries.</source>
          <target state="translated">从暂存条目列表中删除单个暂存条目。</target>
        </trans-unit>
        <trans-unit id="9a577cbb08edd5d9773523cfc5cfe43dc9b03f45" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it removes the latest one. i.e. &lt;code&gt;stash@{0}&lt;/code&gt;, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a valid stash log reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">从存储条目列表中删除一个存储条目。如果没有给出 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; ，它将删除最新的。即 &lt;code&gt;stash@{0}&lt;/code&gt; ，否则 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; 必须是有效的 &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; 形式的隐藏日志引用。</target>
        </trans-unit>
        <trans-unit id="729e5fd8775c30c358fedf9e611fd4f6f670b5e7" translate="yes" xml:space="preserve">
          <source>Remove a single stashed state from the stash list and apply it on top of the current working tree state, i.e., do the inverse operation of &lt;code&gt;git stash push&lt;/code&gt;. The working directory must match the index.</source>
          <target state="translated">从存储列表中删除单个存储状态，并将其应用到当前工作树状态的顶部，即执行 &lt;code&gt;git stash push&lt;/code&gt; 的逆操作。工作目录必须与索引匹配。</target>
        </trans-unit>
        <trans-unit id="d34ae9e19d54c7604c479f4c5964ccef00bd4a98" translate="yes" xml:space="preserve">
          <source>Remove a working tree. Only clean working trees (no untracked files and no modification in tracked files) can be removed. Unclean working trees or ones with submodules can be removed with &lt;code&gt;--force&lt;/code&gt;. The main working tree cannot be removed.</source>
          <target state="translated">删除工作树。只能删除干净的工作树（没有未跟踪的文件，也没有对跟踪文件的修改）。不干净的工作树或带有子模块的树可以使用 &lt;code&gt;--force&lt;/code&gt; 删除。主工作树无法删除。</target>
        </trans-unit>
        <trans-unit id="df5a8d70d2380181bdc059d7c2ddc0a78e9d1412" translate="yes" xml:space="preserve">
          <source>Remove all lines matching the key from config file.</source>
          <target state="translated">删除配置文件中所有与密钥匹配的行。</target>
        </trans-unit>
        <trans-unit id="9fc0230ddf082dc45699878be1634350de11665f" translate="yes" xml:space="preserve">
          <source>Remove all notes for non-existing/unreachable objects.</source>
          <target state="translated">删除所有不存在的/无法到达的对象的注释。</target>
        </trans-unit>
        <trans-unit id="fc1b4600e49f3115828b9f3463a6567fd85094fb" translate="yes" xml:space="preserve">
          <source>Remove all the stash entries. Note that those entries will then be subject to pruning, and may be impossible to recover (see &lt;code&gt;Examples&lt;/code&gt; below for a possible strategy).</source>
          <target state="translated">删除所有隐藏条目。请注意，这些条目将随后被修剪，并且可能无法恢复（有关可能的策略，请参见下面的 &lt;code&gt;Examples&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="353e52e76ff6a9350e8485da73b547859aa497ce" translate="yes" xml:space="preserve">
          <source>Remove any whitespace-continuation in trailers, so that each trailer appears on a line by itself with its full content.</source>
          <target state="translated">删除预告片中的任何空白处,使每个预告片与其完整的内容单独成一行。</target>
        </trans-unit>
        <trans-unit id="de112945ec414c57cddaca5199f29ee2fc05a979" translate="yes" xml:space="preserve">
          <source>Remove directories from the SVN tree if there are no files left behind. SVN can version empty directories, and they are not removed by default if there are no files left in them. Git cannot version empty directories. Enabling this flag will make the commit to SVN act like Git.</source>
          <target state="translated">如果没有文件留下,就从SVN树中删除目录。SVN 可以对空目录进行版本更新,如果没有文件留下,默认情况下不会删除。Git 不能对空目录进行版本更新。启用这个标志会使提交到 SVN 的行为和 Git 一样。</target>
        </trans-unit>
        <trans-unit id="cc02753459be831dfea1cd243efcfb50db2a59d3" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (e.g. &quot;-- &amp;gt;8 --&quot;). The line represents scissors and perforation marks, and is used to request the reader to cut the message at that line. If that line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">剪掉剪刀线前的身体所有东西（例如&amp;ldquo;-&amp;gt; 8-&amp;rdquo;）。该行代表剪刀和穿孔标记，用于请求读者在该行剪切消息。如果该行出现在修补程序之前的消息正文中，则使用此选项时，将忽略该行之前的所有内容（包括剪刀行本身）。</target>
        </trans-unit>
        <trans-unit id="7e6c07487aafd5a1b8bbc132d0eb9f70eb39a580" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). Can be activated by default using the &lt;code&gt;mailinfo.scissors&lt;/code&gt; configuration variable.</source>
          <target state="translated">&lt;a href=&quot;git-mailinfo&quot;&gt;剪掉&lt;/a&gt;剪刀线之前，清除身上的所有东西（请参阅git-mailinfo [1]）。可以使用 &lt;code&gt;mailinfo.scissors&lt;/code&gt; 配置变量默认激活。</target>
        </trans-unit>
        <trans-unit id="399fc61abd5e53e0ff9fe12417324d78f931368d" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line. A line that mainly consists of scissors (either &quot;&amp;gt;8&quot; or &quot;8&amp;lt;&quot;) and perforation (dash &quot;-&quot;) marks is called a scissors line, and is used to request the reader to cut the message at that line. If such a line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">剪掉剪刀线之前，先清除体内的所有东西。主要由剪刀（&amp;ldquo;&amp;gt; 8&amp;rdquo;或&amp;ldquo; 8 &amp;lt;&amp;rdquo;）和穿孔（破折号&amp;ldquo;-&amp;rdquo;）标记组成的行称为剪刀行，用于请求读者在该行处剪切消息。如果在修补程序之前的消息正文中出现这样的行，则使用此选项时，将忽略该行之前的所有内容（包括剪刀行本身）。</target>
        </trans-unit>
        <trans-unit id="3b6a842b7003d3eacad12733ce8974d4d54219eb" translate="yes" xml:space="preserve">
          <source>Remove extra objects that are already in pack files</source>
          <target state="translated">删除包文件中已有的额外对象</target>
        </trans-unit>
        <trans-unit id="17839ee8fd6b46f8390b41c3ab4800fda5ea86c3" translate="yes" xml:space="preserve">
          <source>Remove files from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">从索引或工作树和索引中删除文件。 &lt;code&gt;git rm&lt;/code&gt; 不会仅从您的工作目录中删除文件。 （没有选择仅从工作树中删除文件，而是将其保留在索引中的选项；如果要这样做，请使用 &lt;code&gt;/bin/rm&lt;/code&gt; 。）要删除的文件必须与分支的尖端相同，尽管可以使用 &lt;code&gt;-f&lt;/code&gt; 选项覆盖默认行为，但无法在索引中暂存对其内容的更新。当 &lt;code&gt;--cached&lt;/code&gt; 给出，分级内容具有相匹配的分支的任一末端或磁盘上的文件，从而允许从刚刚索引中删除该文件。</target>
        </trans-unit>
        <trans-unit id="3cb238ca5adf89378484ddf4d733eeac1d7298bc" translate="yes" xml:space="preserve">
          <source>Remove files from the working tree and from the index</source>
          <target state="translated">从工作树和索引中删除文件。</target>
        </trans-unit>
        <trans-unit id="43b38708b726858c7f29029b5ed632fd4a969782" translate="yes" xml:space="preserve">
          <source>Remove files matching pathspec from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">从索引，工作树和索引中删除与pathspec匹配的文件。 &lt;code&gt;git rm&lt;/code&gt; 不会仅从您的工作目录中删除文件。 （没有选择仅从工作树中删除文件，而是将其保留在索引中的选项；如果要这样做，请使用 &lt;code&gt;/bin/rm&lt;/code&gt; 。）要删除的文件必须与分支的尖端相同，尽管可以使用 &lt;code&gt;-f&lt;/code&gt; 选项覆盖默认行为，但无法在索引中暂存对其内容的更新。当 &lt;code&gt;--cached&lt;/code&gt; 给出，分级内容具有相匹配的分支的任一末端或磁盘上的文件，从而允许从刚刚索引中删除该文件。</target>
        </trans-unit>
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">只删除被 Git 忽略的文件。这对于从头开始重建所有文件可能很有用,但要保留手动创建的文件。</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">删除没有本地副本的远程分支。例如，如果不再存在具有相同名称的本地分支，则将删除远程分支 &lt;code&gt;tmp&lt;/code&gt; 。这也 &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; ，例如git push --prune remote refs / heads / *：refs / tmp / *将确保如果 &lt;code&gt;refs/heads/foo&lt;/code&gt; 不存在，则将删除远程 &lt;code&gt;refs/tmp/foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f37ac7cebbcb8ec8c49f87fdd3f7cf3698f1f26a" translate="yes" xml:space="preserve">
          <source>Remove the current repository from background maintenance. This only removes the repository from the configured list. It does not stop the background maintenance processes from running.</source>
          <target state="translated">从后台维护中删除当前版本库。这只是将仓库从配置的列表中移除,并不会停止后台维护进程的运行。它不会停止后台维护进程的运行。</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">从索引中删除文件,即使工作目录中还有这样一个文件。(意味着--remove。)</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">从配置文件中删除给定的部分。</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">从配置文件中删除与密钥匹配的行。</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">删除给定对象的注释（默认为HEAD）。从命令行提供零个或一个对象时，这等效于为 &lt;code&gt;edit&lt;/code&gt; 子命令指定空注释消息。</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">删除由git-filter-branch备份的原始ref：说 &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">删除名为&amp;lt;name&amp;gt;的远程服务器。远程的所有远程跟踪分支和配置设置都将被删除。</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">删除&amp;lt;分支名称&amp;gt;的上游信息。如果未指定任何分支，则默认为当前分支。</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">删除不必要的空白</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">从工作树中删除未被跟踪的文件。</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">移除的内容用&quot;-&quot;开头的行表示。您可以通过将&quot;-&quot;转换为&quot;&quot;(空格)来防止分期删除。</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">从 &lt;code&gt;Documentation&lt;/code&gt; 目录及其任何子目录下的索引中删除所有 &lt;code&gt;*.txt&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">删除从文件系统中消失的文件。</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">重命名git-diff和git-diff-tree的检测选项。默认值为（'-M'）; 将其设置为（'-C'）或（'-C'，'-C'）也可以检测副本，或者将其设置为（），即如果您不想进行重命名检测，则为空列表。</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">将给定的部分重新命名为一个新的名称。</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">将名为&amp;lt;old&amp;gt;的远程重命名为&amp;lt;new&amp;gt;。远程的所有远程跟踪分支和配置设置均已更新。</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">Git不会检测到重命名和复制的目录，因此在提交SVN时不会对其进行跟踪。我不打算为此增加支持，因为要在所有可能的极端情况下工作都是非常困难且耗时的（Git也不这样做）。如果它们足够相似，Git可以检测到它们，则完全支持提交重命名和复制的文件。</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">重命名或复制的条目具有以下格式:</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">将现有的文件或子目录重命名到分支的不同位置。现有文件或目录必须存在。如果目标目录存在,它将被源目录替换。</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">重新排序和编辑提交通常会产生未经测试的中间步骤。您可能想通过运行测试来检查您的历史编辑是否没有破坏任何东西,或者至少通过使用 &quot;exec &quot;命令(快捷键 &quot;x&quot;)在历史的中间点重新编译。您可以通过创建一个像这样的待办事项列表来实现。</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">重新排列组成补丁的文件差异不影响ID。特别是，通过将相同的两棵树与&amp;ldquo; -O &amp;lt;orderfile&amp;gt;&amp;rdquo;的两个不同设置进行比较而生成的两个补丁将产生相同的补丁ID签名，从而允许将计算结果用作索引有关以下内容的某些元信息的关键字两棵树之间的变化；</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">从补丁系列中重新排序或选择</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">重新打包历史数据</target>
        </trans-unit>
        <trans-unit id="456c003d09a0693bc8c7cb3458bf2ad8bbfc033f" translate="yes" xml:space="preserve">
          <source>Repair working tree administrative files, if possible, if they have become corrupted or outdated due to external factors.</source>
          <target state="translated">如果工作树管理文件因外部因素而损坏或过时,则尽可能修复它们。</target>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">重复最后两个步骤,直到你的工作树干净为止。</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">用给定的名称替换现有的标签(而不是失败)。</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">替换每个父 &lt;code&gt;P&lt;/code&gt; 的 &lt;code&gt;C'&lt;/code&gt; 以其简化 &lt;code&gt;P'&lt;/code&gt; 。在此过程中，丢弃作为其他父项的祖先或根的父项会将TREESAME提交到一棵空树，并删除重复的树，但请注意不要丢弃我们作为TREESAME的所有父项。</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">通过创建新的提交来替换当前分支的尖端。记录的树照常准备（包括 &lt;code&gt;-i&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt; 选项的作用以及显式pathspec），并且当未指定其他消息时，将原始提交的消息用作起点，而不是空消息从命令行通过 &lt;code&gt;-m&lt;/code&gt; ， &lt;code&gt;-F&lt;/code&gt; ， &lt;code&gt;-c&lt;/code&gt; 等选项。新提交的父代和作者与当前提交的父代和作者相同（ &lt;code&gt;--reset-author&lt;/code&gt; 选项可以对此提出要求）。</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">用 Git 要调用的服务的长名(git-receive-pack、git-upload-pack 或 git-upload-archive)代替。</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">用 Git 要调用的服务名称(receive-pack、upload-pack 或 upload-archive)代替。</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">除了那些进行可达性遍历的命令(prune、pack transfer和fsck)之外,所有Git命令都会默认使用替换引用。</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">报告所有删除的对象。</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">向主要进行开发和维护的Git邮件列表&amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt; 报告错误。您不必订阅列表即可在此处发送消息。有关以前的错误报告和其他讨论，请参阅&lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt;上的列表存档。</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">更详细地报告。</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">报告密码的成功或失败。如果凭证允许操作成功完成，则可以使用&amp;ldquo;批准&amp;rdquo;操作对其进行标记，以告知 &lt;code&gt;git credential&lt;/code&gt; 在其下一次调用中重用它。如果该凭证在操作期间被拒绝，请使用&amp;ldquo;拒绝&amp;rdquo;操作，以便 &lt;code&gt;git credential&lt;/code&gt; 在下一次调用时将要求输入新密码。无论哪种情况，都应将 &lt;code&gt;git credential&lt;/code&gt; 与从步骤（2）获得的凭据描述一起提供（还包含步骤（1）中提供的凭据描述）。</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">向stderr报告进度。</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">向 stderr 报告进度。默认情况下,只打印关于当前正在应用的补丁的消息。此选项将导致报告其他信息。</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">报告根节点。</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">报告标签:</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">报告正在本地行走的对象列表和成功发送到远程存储库的对象列表。</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">移动时报告文件的名称。</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">报告索引中增加和删除的内容。</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">报告下载的内容。</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">报告错误</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">储存库和分支机构</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">存储库管理</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">存储库的维护</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">仓库特定的配置文件。</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">版本库的配置文件。如果设置了 $GIT_COMMON_DIR,这个文件将被忽略,而使用 &quot;$GIT_COMMON_DIR/config&quot;。</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">代表使用 &quot;git-ssl foo.example /bar &quot;帮助程序访问的仓库。请求的类型可以由帮助程序使用环境变量来决定(见上文)。</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">代表一个仓库,其路径为/repo,使用 &quot;git-server-alias foo &quot;助手程序访问。协议流中传递的远程服务器主机名是 &quot;foo&quot;(这允许多个虚拟 Git 服务器共享一个链接级地址)。</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">代表一个仓库,其路径为/repo,可以通过 &quot;git-server-alias foo &quot;帮助程序访问。仓库的路径和请求类型不是在命令行中传递的,而是作为协议流的一部分,就像git://协议一样。</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">用帮助程序&amp;ldquo; git-server-alias foo&amp;rdquo; 表示具有路径 &lt;code&gt;/repo with spaces&lt;/code&gt; 的存储库，并带有空格。在协议流中传递的远程服务器的主机名将为&amp;ldquo; foo&amp;rdquo;（这允许多个虚拟Git服务器共享链接级地址）。</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">代表版本库,其路径为/somerepo,可通过git协议在抽象命名空间地址/git-server处访问。</target>
        </trans-unit>
        <trans-unit id="c8f4d396d0343dc3cd250d626642ac1b291769ac" translate="yes" xml:space="preserve">
          <source>Reproducing some bugs may require referencing particular commits or paths, which becomes challenging after refnames and paths have been anonymized. You can ask for a particular token to be left as-is or mapped to a new value. For example, if you have a bug which reproduces with &lt;code&gt;git rev-list sensitive -- secret.c&lt;/code&gt;, you can run:</source>
          <target state="translated">要重现某些错误，可能需要引用特定的提交或路径，这在匿名化名称和路径之后变得非常困难。您可以要求特定令牌保持原样或映射到新值。例如，如果您的错误可以通过 &lt;code&gt;git rev-list sensitive -- secret.c&lt;/code&gt; ，则可以运行：</target>
        </trans-unit>
        <trans-unit id="b0b1f0b6a8581523745f21b4e1b374268151683b" translate="yes" xml:space="preserve">
          <source>Reproduction steps</source>
          <target state="translated">复制步骤</target>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">向用户请求一个有效的修订版，然后设置 &lt;code&gt;REVISION&lt;/code&gt; 环境变量。在其他方面，此选项类似于 &lt;code&gt;argPrompt&lt;/code&gt; ，并且可以与其一起使用。</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">向用户请求一个字符串参数，然后通过 &lt;code&gt;ARGS&lt;/code&gt; 环境变量将其传递给工具。由于请求参数意味着确认，因此，如果启用了 &lt;code&gt;confirm&lt;/code&gt; 选项，则该选项无效。如果该选项设置为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; ，则对话框使用内置的通用提示；否则，将使用默认提示。否则，将使用变量的确切值。</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">要求帮助者检查克隆的连接性。</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">请求助手执行强制更新。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">索取全权证书</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">请求将一个文件修订版本写入packfile。该修订版未与任何提交关联；必须通过分配的标记引用Blob，才能在后续的 &lt;code&gt;commit&lt;/code&gt; 命令中形成此连接。</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">要求fast-import支持指定的功能,如果不支持则放弃。</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">要求后端分别支持 &lt;code&gt;get-mark&lt;/code&gt; ， &lt;code&gt;cat-blob&lt;/code&gt; 或 &lt;code&gt;ls&lt;/code&gt; 命令。不支持指定命令的快速导入版本将退出，并显示一条消息指示。这样可以通过清晰的消息尽早消除导入错误，而不是在检测到不受支持的命令之前浪费时间在导入的早期。</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">要求后端支持 &lt;code&gt;commit&lt;/code&gt; 命令的 &lt;code&gt;notemodify&lt;/code&gt; （N）子命令。不支持注释的快速导入版本将退出，并显示一条消息指示。</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">需要 &lt;code&gt;--stdout&lt;/code&gt; 。从生成的packfile中省略某些对象（通常是blob）。有关有效的 &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; 格式，请参见&lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">保留的字符有 &quot;%&quot;(用于编码)、&quot;+&quot;(可用于编码SPACE)、Perl中定义的所有空白字符,包括SP、TAB和LF(用于分隔记录中的字段)。</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">保留指令</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">将&amp;lt;分支名称&amp;gt;重置为&amp;lt;起点&amp;gt;，即使&amp;lt;分支名称&amp;gt;已经存在。如果没有 &lt;code&gt;-f&lt;/code&gt; ，则 &lt;code&gt;git branch&lt;/code&gt; 拒绝更改现有分支。与 &lt;code&gt;-d&lt;/code&gt; （或 &lt;code&gt;--delete&lt;/code&gt; ）结合使用，无论其合并状态如何，都允许删除该分支。与 &lt;code&gt;-m&lt;/code&gt; （或 &lt;code&gt;--move&lt;/code&gt; ）结合使用，即使新的分支名称已经存在，也允许重命名分支， &lt;code&gt;-c&lt;/code&gt; （或 &lt;code&gt;--copy&lt;/code&gt; ）也是如此。</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">重置索引中的单个文件</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">将现有分支(或新分支)重置为特定的版本。这条命令必须用于改变分支到一个特定的版本,而不需要提交。</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">将当前HEAD复位到指定状态</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">重置为&amp;lt;pathspec&amp;gt;中的当前冲突重新记录的冲突解决方案。</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">如果要中止合并解析，请重置rerere使用的元数据。调用 &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; 或 &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; 将自动调用此命令。</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">重置、还原和恢复</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">重置索引条目并更新工作树中 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件。如果 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件具有本地更改，则重置将中止。</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">重置索引并更新工作树中 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 之间不同的文件，但保留那些索引和工作树中不同的文件（即，尚未添加的更改）。如果 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 和索引之间的另一个文件具有未暂存的更改，则重置将中止。</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">重置索引和工作树。自 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 以来，工作树中跟踪文件的任何更改都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">重置索引,但不重置工作树(即保留修改后的文件,但不标记为提交),并报告未更新的内容。这是默认操作。</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">解析&amp;ldquo; $ GIT_DIR / &amp;lt;路径&amp;gt;&amp;rdquo;，并考虑其他路径重定位变量，例如$ GIT_OBJECT_DIRECTORY，$ GIT_INDEX_FILE&amp;hellip;。例如，如果$ GIT_OBJECT_DIRECTORY设置为/ foo / bar，则&amp;ldquo; git rev-parse --git-path objects / abc&amp;rdquo;将返回/ foo / bar / abc。</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">解决冲突。Git将在工作树中标记冲突。将文件编辑为shape并 &lt;code&gt;git add&lt;/code&gt; 它们添加到索引中。使用 &lt;code&gt;git commit&lt;/code&gt; 或 &lt;code&gt;git merge --continue&lt;/code&gt; 完成交易。后者命令在调用 &lt;code&gt;git commit&lt;/code&gt; 之前检查是否正在进行（中断的）合并。</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">解决合并问题</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">查找值时，请遵守配置文件中的 &lt;code&gt;include.*&lt;/code&gt; 指令。给定特定文件（例如，使用 &lt;code&gt;--file&lt;/code&gt; ，-- &lt;code&gt;--global&lt;/code&gt; 等）时，默认为 &lt;code&gt;off&lt;/code&gt; &lt;code&gt;on&lt;/code&gt; 当搜索所有配置文件时，默认为打开。</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">遵守 &lt;code&gt;--format&lt;/code&gt; 选项中指定的任何颜色。所述 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 字段必须之一 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; ，或 &lt;code&gt;auto&lt;/code&gt; （如果 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 不存在时，表现得好像 &lt;code&gt;always&lt;/code&gt; 给予）。</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">对命令的反应</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">重新启动 httpd 实例并退出。根据需要重新生成配置文件以生成新的实例。</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">在解决了合并冲突后,重新启动重定基过程。</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">跳过当前的补丁,重新启动重基过程。</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">还原工作树中指定的路径与还原源中的一些内容。如果一个路径被跟踪,但在还原源中不存在,它将被删除以匹配源。</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">恢复原来的分支,中止补丁操作。</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">用给定树的内容恢复工作树文件。通常通过命名与之相关的提交、分支或标签来指定源树。</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">恢复工作树文件</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">如果意外清除了文件，则在合并期间恢复文件的未 &lt;code&gt;unmerged&lt;/code&gt; 或 &lt;code&gt;needs updating&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">根据 &quot;岛屿 &quot;限制三角区的匹配。见下文三角洲岛屿。</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">仅在不需要文件级合并的情况下，才通过 &lt;code&gt;git read-tree&lt;/code&gt; 限制三路合并，而不是在琐碎的情况下解决合并问题并在索引中未解决有冲突的文件。</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">仅限Git的SSH访问的限制登录shell</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">结果与git 1.9和更早版本产生的值不同，或者与配置了&amp;ldquo;不稳定&amp;rdquo;哈希（请参阅下面的--unstable）时产生的值不同-即使在不使用任何&amp;ldquo; -O &amp;lt;orderfile&amp;gt;&amp;rdquo;的差异输出上使用时，从而使存储此类&amp;ldquo;不稳定&amp;rdquo;或历史补丁ID的现有数据库不可用。</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">检索和存储用户证书</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">检索遥控器的URL。在此扩展了 &lt;code&gt;insteadOf&lt;/code&gt; 和 &lt;code&gt;pushInsteadOf&lt;/code&gt; 的配置。默认情况下，仅列出第一个URL。</target>
        </trans-unit>
        <trans-unit id="9396c18e702afc19006375ff866bd100e0e10678" translate="yes" xml:space="preserve">
          <source>Return a matching credential, if any exists.</source>
          <target state="translated">如果有的话,返回一个匹配的凭证。</target>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">以纯文本邮件格式返回提交，适用于&lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">以给定的路径和修订版返回给定存储库中文件的原始数据。指向此操作的链接标记为 &lt;code&gt;raw&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">重新使用记录的解决冲突的合并</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">在应用补丁之前,在工作中的CVS结账中反转CVS关键字的扩展(例如:$Revision:1.2.3.4$变成$Revision$)。</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">反转所有后续修订说明符（直到下一个 &lt;code&gt;--not&lt;/code&gt; ）的 &lt;code&gt;^&lt;/code&gt; 前缀的含义（或不存在）。</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">恢复一些现有的提交</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">将主目录下第五次提交(包括)到第三次提交(包括)所做的修改还原,但不创建任何包含还原后修改的提交。还原只修改工作树和索引。</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">将 HEAD 中最后一个提交的第四个提交所指定的更改还原,并将还原后的更改创建一个新的提交。</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">对合并提交进行反转,就意味着你永远不会想要合并带来的树形变化。因此,以后的合并将只引入不是先前已恢复的合并的祖先的提交所带来的树形变化。这可能是你想要的,也可能不是。</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">查看并编辑您要发送的每个补丁。默认值为 &lt;code&gt;sendemail.annotate&lt;/code&gt; 的值。有关 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; 的信息,请参见&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">修订范围摘要</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">显示的修订版。默认为HEAD。</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">首先是修订，然后是路径。例如在 &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; 中， &lt;code&gt;v1.0&lt;/code&gt; 和 &lt;code&gt;v2.0&lt;/code&gt; 是修订版，而 &lt;code&gt;arch/x86&lt;/code&gt; 和 &lt;code&gt;include/asm-x86&lt;/code&gt; 是路径。</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">重启主分支,去掉这三个提交。</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">重写分支</target>
        </trans-unit>
        <trans-unit id="1f772054df9f197c59794505debe5263bced78f0" translate="yes" xml:space="preserve">
          <source>Rewrite the object IDs for the submodule specified by &amp;lt;name&amp;gt; from the values used in the from &amp;lt;file&amp;gt; to those used in the to &amp;lt;file&amp;gt;. The from marks should have been created by &lt;code&gt;git fast-export&lt;/code&gt;, and the to marks should have been created by &lt;code&gt;git fast-import&lt;/code&gt; when importing that same submodule.</source>
          <target state="translated">将&amp;lt;name&amp;gt;指定的子模块的对象ID从&amp;lt;file&amp;gt;中使用的值重写为to &amp;lt;file&amp;gt;中使用的值。导入同一子模块时， &lt;code&gt;git fast-import&lt;/code&gt; 标记应由 &lt;code&gt;git fast-export&lt;/code&gt; 创建，至标记应由git fast-import创建。</target>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">重写一次提交</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">重写历史和维护补丁系列</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">要分割的Maildir的根目录。这个目录应该包含cur、tmp和new等子目录。</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">粗略地说，有两个重要的工作流程：合并和修补。重要的区别在于，合并工作流可以传播包括合并在内的完整历史记录，而补丁则不能。这两个工作流程可以并行使用：在 &lt;code&gt;git.git&lt;/code&gt; 中，只有子系统维护人员使用合并工作流程，而其他所有人都发送补丁。</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">帮助解析远程存储库访问参数的例程。</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">规则:只在明确界定的地点向下游合并。</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">规则。向上合并</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">规则。扔掉的整合分支</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">规则:主题分支</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">对文本文件进行3路文件级合并,但从两个版本中取行,而不是留下冲突标记。这样做往往会使增加的行在结果文件中以随机顺序排列,用户应该验证结果。如果你不明白其中的含义,请不要使用这个方法。</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">偶尔从上游的公共存储库中运行 &lt;code&gt;git fetch origin&lt;/code&gt; 。这仅执行 &lt;code&gt;git pull&lt;/code&gt; 的前半部分，但不会合并。公共存储库的头存储在 &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">如果需要，最后运行 &lt;code&gt;git gc --auto&lt;/code&gt; 以执行垃圾收集。默认情况下启用。</target>
        </trans-unit>
        <trans-unit id="6039403ffea6ab0903949880e74c464732db7a11" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git maintenance run --auto&lt;/code&gt; at the end to perform automatic repository maintenance if needed. (&lt;code&gt;--[no-]auto-gc&lt;/code&gt; is a synonym.) This is enabled by default.</source>
          <target state="translated">最后运行 &lt;code&gt;git maintenance run --auto&lt;/code&gt; 以在需要时执行自动存储库维护。（ &lt;code&gt;--[no-]auto-gc&lt;/code&gt; 是同义词。）默认情况下启用此功能。</target>
        </trans-unit>
        <trans-unit id="eb6f5eee3c049cb1a6dcee0979306b460610b633" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-p4 submit --help&lt;/code&gt; for details.</source>
          <target state="translated">运行 &lt;code&gt;git-p4 submit --help&lt;/code&gt; 以获得详细信息。</target>
        </trans-unit>
        <trans-unit id="cc49e996e8e34709ea561bacff37a9bf116159b3" translate="yes" xml:space="preserve">
          <source>Run a Git command on a list of repositories</source>
          <target state="translated">在仓库列表上运行Git命令。</target>
        </trans-unit>
        <trans-unit id="d0a954ed6f4ae500efc5471d437b334c3b04a034" translate="yes" xml:space="preserve">
          <source>Run a Git command on a list of repositories. The arguments after the known options or &lt;code&gt;--&lt;/code&gt; indicator are used as the arguments for the Git subprocess.</source>
          <target state="translated">在存储库列表上运行Git命令。已知选项或 &lt;code&gt;--&lt;/code&gt; 指示符后面的参数用作Git子流程的参数。</target>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">对需要合并的文件进行合并。</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">运行三方文件合并</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">就像在 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 中而不是当前工作目录中启动git一样运行。当给出多个 &lt;code&gt;-C&lt;/code&gt; 选项时，每个后续非绝对 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 相对于前面的 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 。如果 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 存在但为空，例如 &lt;code&gt;-C &quot;&quot;&lt;/code&gt; ，则当前工作目录保持不变。</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">运行 git-daemon 从 inetd 服务 /pub/scm。</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">运行git-daemon从xinetd服务/pub/scm。</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">互动运行。</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">对索引中所有需要合并的文件进行合并。</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">运行合并冲突解决工具,解决合并冲突。</target>
        </trans-unit>
        <trans-unit id="38771a9d07a5f491f090711c0224ce001d0749d6" translate="yes" xml:space="preserve">
          <source>Run one or more maintenance tasks. If one or more &lt;code&gt;--task&lt;/code&gt; options are specified, then those tasks are run in that order. Otherwise, the tasks are determined by which &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.enabled&lt;/code&gt; config options are true. By default, only &lt;code&gt;maintenance.gc.enabled&lt;/code&gt; is true.</source>
          <target state="translated">运行一项或多项维护任务。如果指定了一个或多个 &lt;code&gt;--task&lt;/code&gt; 选项，则这些任务将按该顺序运行。否则，这些任务由哪个 &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.enabled&lt;/code&gt; 确定。&amp;lt;task&amp;gt; .enabled配置选项为true。默认情况下，只有 &lt;code&gt;maintenance.gc.enabled&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="297b88341d487657ac7bfaea2e82d26521a04a34" translate="yes" xml:space="preserve">
          <source>Run tasks to optimize Git repository data</source>
          <target state="translated">运行任务以优化Git仓库数据</target>
        </trans-unit>
        <trans-unit id="71e897b70d3ba0903b5f674288a89ed16c610cd3" translate="yes" xml:space="preserve">
          <source>Run tasks to optimize Git repository data, speeding up other Git commands and reducing storage requirements for the repository.</source>
          <target state="translated">运行任务来优化Git仓库数据,加快其他Git命令的速度,降低仓库的存储需求。</target>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">默默地运行该命令,不需要创建一个窗口来显示其输出。</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">仅在GUI中选择差异时才运行该工具。它保证 &lt;code&gt;FILENAME&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">运行此脚本并将其输出保存到文件中。然后，该文件可用作项目列表文件，这意味着您可以将 &lt;code&gt;$projects_list&lt;/code&gt; 设置为其文件名。</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">奔跑在口头上。</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">静态运行。不影响向标准误差流报告进度状态。</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">在没有参数的情况下运行 &quot;git tag &quot;也会列出所有标签。模式是 shell 通配符(即使用 fnmatch(3)匹配)。可以给出多个模式;如果其中任何一个匹配,就会显示该标签。</target>
        </trans-unit>
        <trans-unit id="a2ee2445637d31b2b0a87c4075e11372cbe6d8cc" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;).</source>
          <target state="translated">运行&lt;a href=&quot;git-diff&quot;&gt;的git-DIFF [1] &lt;/a&gt;，&lt;a href=&quot;git-log&quot;&gt;git的日志[1] &lt;/a&gt;，&lt;a href=&quot;git-show&quot;&gt;混帐显示[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-index&quot;&gt;混帐的Diff-指数[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-tree&quot;&gt;混帐的Diff-树[1] ，&lt;/a&gt;或&lt;a href=&quot;git-diff-files&quot;&gt;混帐的Diff-文件[1]&lt;/a&gt;用在 &lt;code&gt;-p&lt;/code&gt; 选项生成补丁文本。您可以通过 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; 和 &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 环境变量来自定义补丁文本的创建（请参见&lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">运行&lt;a href=&quot;git-diff&quot;&gt;的git-DIFF [1] &lt;/a&gt;，&lt;a href=&quot;git-log&quot;&gt;git的日志[1] &lt;/a&gt;，&lt;a href=&quot;git-show&quot;&gt;混帐显示[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-index&quot;&gt;混帐的Diff-指数[1] &lt;/a&gt;，&lt;a href=&quot;git-diff-tree&quot;&gt;混帐的Diff-树[1] ，&lt;/a&gt;或&lt;a href=&quot;git-diff-files&quot;&gt;混帐的Diff-文件[1]&lt;/a&gt;用在 &lt;code&gt;-p&lt;/code&gt; 选项生成补丁文本。您可以通过 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; 和 &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 环境变量来自定义补丁文本的创建。</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">仅在将对象添加到存储库中而不定期运行此类瓷器命令，一次性执行存储库优化或清理次优批量导入时，才需要手动运行 &lt;code&gt;git gc&lt;/code&gt; 。有关导入案例的更多详细信息，请参见&lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]中&lt;/a&gt;的&amp;ldquo; PACKFILE OPTIMIZATION&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">在现有存储库中运行 &lt;code&gt;git init&lt;/code&gt; 是安全的。它不会覆盖已经存在的内容。重新运行 &lt;code&gt;git init&lt;/code&gt; 的主要原因是选择新添加的模板（如果给定了--separate-git-dir，则将存储库移至另一个位置）。</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">不建议在打算从中 &lt;code&gt;dcommit&lt;/code&gt; 的分支上运行 &lt;code&gt;git merge&lt;/code&gt; 或 &lt;code&gt;git pull&lt;/code&gt; ，因为Subversion用户看不到您进行的任何合并。此外，如果从作为SVN分支镜像的Git分支合并或提取，则 &lt;code&gt;dcommit&lt;/code&gt; 可能会提交到错误的分支。</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在存储库中运行 &lt;code&gt;git pack-refs&lt;/code&gt; 使其在1.5.1.2之前的Git版本无法通过诸如HTTP之类的愚蠢传输方式使其无法克隆。这个变量确定 &lt;code&gt;git gc&lt;/code&gt; 是否运行 &lt;code&gt;git pack-refs&lt;/code&gt; 。可以将其设置为 &lt;code&gt;notbare&lt;/code&gt; 以在所有非裸仓库中启用它，也可以将其设置为布尔值。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">在&amp;lt;rev-list options&amp;gt;中使用--tags或--all运行git-filter-branch。为了将带注释的标签保留为带注释，必须使用--tag-name-filter（并且必须在以前的错误重写中未从refs / original /中还原）。</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">发生冲突的自动合并后，立即运行 &lt;code&gt;git rerere&lt;/code&gt; 命令记录冲突的工作树文件，并在其中包含通常的冲突标记 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;=======&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 。稍后，在解决冲突之后，再次运行 &lt;code&gt;git rerere&lt;/code&gt; 将记录这些文件的已解决状态。假设您是在将master的测试合并创建到topic分支时执行此操作的。</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">在索引条目不同于 &lt;code&gt;HEAD&lt;/code&gt; 提交的路径上运行 &lt;code&gt;git update-index&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">运行 &lt;code&gt;init&lt;/code&gt; 并 &lt;code&gt;fetch&lt;/code&gt; 。它将根据传递给它的URL的基本名称自动创建一个目录；或者是否传递了第二个参数；它将创建一个目录并在其中工作。它接受 &lt;code&gt;init&lt;/code&gt; 和 &lt;code&gt;fetch&lt;/code&gt; 命令接受的所有参数。 &lt;code&gt;--fetch-all&lt;/code&gt; 和 &lt;code&gt;--parent&lt;/code&gt; 除外。克隆存储库后， &lt;code&gt;fetch&lt;/code&gt; 命令将能够在不影响工作树的情况下更新修订版。和 &lt;code&gt;rebase&lt;/code&gt; 命令就能用最新的修改工作树。</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">在当前存储库中运行许多内务处理任务，例如压缩文件修订版（以减少磁盘空间并提高性能），删除可能由先前的 &lt;code&gt;git add&lt;/code&gt; 调用，打包引用，修剪reflog，rerere元数据或旧的工作树。可能还会更新辅助索引，例如提交图。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">Git提交对象的SHA-1标识符。</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">Git标签对象的SHA-1标识符。</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH和文件传输</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">SVN本身只存储UTC的时间,没有其他时间。常规的svn客户端会将UTC时间转换为当地时间(或基于TZ=环境)。这个命令也有同样的行为。</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">可悲的是，许多合并并非微不足道。如果已添加，移动或删除了文件，或者两个分支都修改了同一文件，则将剩下一个索引树，其中包含&amp;ldquo;合并条目&amp;rdquo;。这样的索引树不能&amp;ldquo;不&amp;rdquo;写到树对象，并且您必须使用其他工具解决任何此类合并冲突，然后才能写出结果。</target>
        </trans-unit>
        <trans-unit id="a29b0686374a954376cc620b8979b45dec7b936c" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can &lt;code&gt;NOT&lt;/code&gt; be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">可悲的是，许多合并并非微不足道。如果存在已添加，移动或删除的文件，或者两个分支都修改了同一文件，则将剩下一个索引树，其中包含&amp;ldquo;合并条目&amp;rdquo;。这样的索引树 &lt;code&gt;NOT&lt;/code&gt; 写到树对象，并且您必须使用其他工具解决任何这样的合并冲突，然后才能写出结果。</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">将你的数据从另一个人们爱恨交加的SCM中抢救出来。</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">与 --mode 相同,但取模式编码为数字。这主要用于已经解析布局模式的其他命令。</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">与--receive-pack = &amp;lt;git-receive-pack&amp;gt;相同。</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">与--upload-pack = &amp;lt;git-upload-pack&amp;gt;相同。</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">与-m相同，只是未合并的条目将被丢弃而不是失败。与 &lt;code&gt;-u&lt;/code&gt; 一起使用时，导致丢失工作树更改的更新不会中止该操作。</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">与 &lt;code&gt;--max-depth=-1&lt;/code&gt; 相同 ; 这是默认值。</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--max-depth=0&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">与 &lt;code&gt;--untracked-cache&lt;/code&gt; 相同。提供与旧版本Git的向后兼容性，其中 &lt;code&gt;--untracked-cache&lt;/code&gt; 曾经暗示 &lt;code&gt;--test-untracked-cache&lt;/code&gt; untracked-cache，但是此选项将无条件启用扩展。</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">与 &lt;code&gt;--verify&lt;/code&gt; 相同，但将对象名称缩短为具有至少 &lt;code&gt;length&lt;/code&gt; 字符的唯一前缀。最小长度为4，默认值为 &lt;code&gt;core.abbrev&lt;/code&gt; 配置变量的有效值（请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">与 &lt;code&gt;-a&lt;/code&gt; 相同，除非使用 &lt;code&gt;-d&lt;/code&gt; 。然后，先前包中的所有无法到达的对象将变成松散的，未打包的对象，而不是留在旧包中。无法到达的对象永远不会有意添加到包装中，即使重新包装也是如此。此选项可防止无法访问的对象通过留在旧包中然后被删除而立即删除。取而代之的是，在下次 &lt;code&gt;git gc&lt;/code&gt; 调用时，将根据正常的到期规则修剪松散的无法访问的对象。参见&lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">与 &lt;code&gt;git gui citool&lt;/code&gt; 相同（如上所述）。</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">与 &lt;code&gt;group&lt;/code&gt; 相同，但使存储库对所有用户可读。</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">除未删除#commentary之外，其他与 &lt;code&gt;strip&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">如果要编辑消息，则与 &lt;code&gt;strip&lt;/code&gt; 相同。否则为 &lt;code&gt;whitespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">与 &lt;code&gt;whitespace&lt;/code&gt; 相同，不同之处在于，如果要编辑消息，则以下一行中的所有内容（包括以下内容）都将被截断。可以使用core.commentChar自定义&amp;ldquo; &lt;code&gt;#&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">同上,但格式是根据输出文件推断的。</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">同上,但使用内置的 tar.gz 处理。</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">同上。</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">与默认模式相同,但不会修剪一些历史记录。</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">把这个补丁保存到UNIX邮箱格式的文件中。比如说,把它叫做a.patch。</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">将进程ID保存在 &lt;code&gt;file&lt;/code&gt; 中。当守护程序在 &lt;code&gt;--inetd&lt;/code&gt; 下运行时被忽略。</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">将本地修改保存到新的 &lt;code&gt;stash entry&lt;/code&gt; 然后将其回滚到HEAD（在工作树和索引中）。&amp;lt;message&amp;gt;部分是可选的，并提供说明以及隐藏状态。</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">保存日志并重播</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">假设您使用&lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; &lt;/a&gt;修改了一个分支，然后意识到该分支是您历史上唯一需要参考的地方。</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">扫描 &lt;code&gt;Documentation/&lt;/code&gt; 以查找其他遗漏的内容；特别是：</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">扫描邮件档案,寻找其他遗漏的东西</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">扫描人页,看看是否有任何假设比本手册提供的背景更多。</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">方案（例如 &lt;code&gt;https&lt;/code&gt; ://example.com/中的 &lt;code&gt;https://example.com/&lt;/code&gt; ）。此字段必须与config键和URL之间完全匹配。</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">搜索当前目录下不属于 Git 管理的文件。</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">搜索回归。</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">搜索策略</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">第二个用户特定的配置文件。如果$ XDG_CONFIG_HOME未设置或为空，则将使用 &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; 。此文件中设置的任何单值变量都将被 &lt;code&gt;~/.gitconfig&lt;/code&gt; 。如果您有时使用较旧版本的Git，最好不要创建此文件，因为该文件的支持是最近才添加的。</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">第二个特定于用户的凭证文件。如果 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 未设置或为空，则将使用 &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; 。如果 &lt;code&gt;~/.git-credentials&lt;/code&gt; 也具有匹配的凭据，则不会使用此文件中存储的任何凭据。如果您有时使用不支持该文件的旧版本，则最好不要创建此文件。</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">其次，可以通过 &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; 和 &lt;code&gt;http://git.example.org/var/&lt;/code&gt; 访问在 &lt;code&gt;/pub/scm/&lt;/code&gt; 和 &lt;code&gt;/var/git/&lt;/code&gt; 找到的存储库。您可以通过添加重写规则（例如第三和第四条）来添加任意数量的项目根目录。</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">几秒钟后重新连接到smtp服务器。另请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;的 &lt;code&gt;--relogin-delay&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">节可以进一步划分为子节。要开始一个子节,请将其名称用双引号括起来,并与节名用空格隔开,就像下面的例子。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">有关这三个命令之间的差异，请参见&lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt;中的&amp;ldquo;重置，还原和还原&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">有关如何安全读取此输出的详细信息，请参见下面的&amp;ldquo;对命令的响应&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">有关完整的详细信息，请参见&lt;a href=&quot;api-trace2&quot;&gt;Trace2文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">有关核心变量，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;；有关差异生成的设置，请参见git- &lt;a href=&quot;git-diff&quot;&gt;diff [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">有关上述配置选项的更多详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;；有关refspec语法的更多详细信息，请参见git- &lt;a href=&quot;git-fetch&quot;&gt;fetch [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">有关支持的选项的完整列表，请参见&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">有关详细信息，包括如何显示和处理冲突，请参见&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">有关解决此类冲突的一些提示，请参见&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt;以获得生成新包和替换现有包的选项。</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">有关说明，请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">有关说明，请参见&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;。请注意，此设置不受 &lt;code&gt;identity&lt;/code&gt; 机制的约束。</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">有关钩子执行的更多常规信息，请参见&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">有关语法的详细说明，请参见&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;。您还可以将.gitignore文件放在工作树中的其他目录中，它们将应用于这些目录及其子目录。该 &lt;code&gt;.gitignore&lt;/code&gt; 文件可以被添加到您的资料库像任何其他文件（只需要运行 &lt;code&gt;git add .gitignore&lt;/code&gt; 和 &lt;code&gt;git commit&lt;/code&gt; ，像往常一样），这是方便当排除模式（如匹配生成输出文件模式），也会使意义克隆您的存储库的其他用户。</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;。经验法则是，当您需要直接访问$ GIT_DIR内部的内容时，不要对路径属于$ GIT_DIR还是$ GIT_COMMON_DIR做出任何假设。使用 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 获取最终路径。</target>
        </trans-unit>
        <trans-unit id="68978af0c4229a0c7ad3871d3bd5d420a7abb9f0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; when you need to directly access something inside &lt;code&gt;$GIT_DIR&lt;/code&gt;. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;。经验法则是，当您需要直接访问 &lt;code&gt;$GIT_DIR&lt;/code&gt; 内部的 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 时，不要对路径属于 &lt;code&gt;$GIT_DIR&lt;/code&gt; 还是$ GIT_COMMON_DIR做出任何假设。使用 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 获取最终路径。</target>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">请参阅&lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt;以开始使用，然后参阅&lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt;以获取有用的最小命令集。《&lt;a href=&quot;user-manual&quot;&gt;Git用户手册》&lt;/a&gt;有更深入的介绍。</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;以获得描述。</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;以获得描述。</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">有关推荐的工作流程的概述，请参见&lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">有关gitweb源代码的信息，请参见&lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt;，使用gitweb本身浏览。</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">有关多包索引功能的更多信息，请参见&lt;a href=&quot;multi-pack-index&quot;&gt;多包索引设计文档&lt;/a&gt;和&lt;a href=&quot;pack-format&quot;&gt;多包索引格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">有关 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 的详细说明，请参见上面的 &lt;code&gt;filemodify&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">有关 &lt;code&gt;p4 help revisions&lt;/code&gt; 版本说明符的完整语法，请参见p4帮助版本。</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">如果要使 &lt;code&gt;git pull&lt;/code&gt; ，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中的&lt;/a&gt; &lt;code&gt;pull.rebase&lt;/code&gt; ， &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; 和 &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; ，始终使用 &lt;code&gt;--rebase&lt;/code&gt; 而不是合并。</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">当前定义的选项列表请参见OPTIONS。</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">当前定义的属性列表请参见REF LIST ATTRIBUTES。</target>
        </trans-unit>
        <trans-unit id="3f21653c235501bb7bff551e983de8d0a4c4aca2" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes. See REF LIST KEYWORDS for a list of currently defined keywords.</source>
          <target state="translated">关于当前定义的属性列表,请参见REF LIST ATTRIBUTES。关于当前定义的关键字列表,请参见REF LIST KEYWORDS。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">另请参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;联机帮助页中的&amp;ldquo;存储库&amp;rdquo;和后续小节。</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#FILES&quot;&gt;文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#git-quick-start&quot;&gt;Git快速参考&lt;/a&gt;，以简要概述Git命令，没有任何说明。</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">另请参阅&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;以获取一种更友好的方式来对索引执行一些最常见的操作。</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">另见&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt;和&lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns .org /&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">另请参见 &lt;code&gt;%avatar_size&lt;/code&gt; 以及图标和头像的像素大小（&amp;ldquo;默认&amp;rdquo;用于单行，例如&amp;ldquo; log&amp;rdquo;和&amp;ldquo; shortlog&amp;rdquo;，&amp;ldquo; double&amp;rdquo;用于两行，例如&amp;ldquo; commit&amp;rdquo;，&amp;ldquo; commitdiff&amp;rdquo;或&amp;ldquo; tag&amp;rdquo; &amp;rdquo;）。如果更改了默认字体大小或行高（例如，通过在 &lt;code&gt;@stylesheets&lt;/code&gt; 中添加额外的CSS样式表），则更改这些值可能是适当的。</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; 和&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]的&lt;/a&gt;PRUNING部分。</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">另请参见下面的 &quot;不合适的选项&quot;。</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">另请参见下面的 &quot;支持合并 &quot;和 &quot;不合适的选择&quot;。</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">另请参见&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;联机帮助页的&amp;ldquo;控制对Git存储库的访问&amp;rdquo;小节中涉及更多的示例。</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">另请参见&lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt;文档以获取一些有用的示例。</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;的 &lt;code&gt;--amend&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;的 &lt;code&gt;--negotiation-tip&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中&lt;/a&gt;记录的 &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; 配置变量。</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">有关 &lt;code&gt;data&lt;/code&gt; 命令的详细说明，请参见下文。</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">有关配置文件的详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;的&amp;ldquo; CONFIGURATION FILE&amp;rdquo;部分。该文件为纯文本，因此您也可以使用自己喜欢的编辑器对其进行编辑。</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">有关每种格式的一些其他详细信息，请参见&amp;ldquo; PRETTY FORMATS&amp;rdquo;部分。如果省略 &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; 部分，则默认为 &lt;code&gt;medium&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">请参阅&amp;ldquo; notes.rewrite。&amp;lt;命令&amp;gt;&amp;rdquo;配置，以了解如何在重写提交的命令之间携带注释。</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">有关更多使用说明，请参见&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;和&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;联机帮助页。</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">请参阅&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;命令以了解如何创建和验证标签对象。（请注意，&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;也可以用于创建&amp;ldquo;轻量级标签&amp;rdquo;，这些标签根本不是标签对象，而只是名称以 &lt;code&gt;refs/tags/&lt;/code&gt; 开头的简单引用）。</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;还原故障合并方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">有关更多显示选项，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;手册页中的 &lt;code&gt;--pretty&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">有关更多详细信息，请参见上面的 &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">有关更多详细信息，请参见上面的 &lt;code&gt;--trust-exit-code&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">有关此启发式工作方式的信息，请参见下面&amp;ldquo;配置&amp;rdquo;部分中的 &lt;code&gt;gc.auto&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">请参阅下面的 &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; 配置变量。使用时，它将影响自动打包限制的工作方式。</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]中&lt;/a&gt;的 &lt;code&gt;pathspec&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">见 &lt;code&gt;pickaxe&lt;/code&gt; 在入门&lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">有关 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; 的信息,请参见&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">详见下面的修剪部分。</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;的PRUNING部分，以了解它会根据各种配置进行修剪。</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">默认远程的定义见添加子命令。</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]中&lt;/a&gt; &lt;code&gt;--depth&lt;/code&gt; 选项的文档。</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]中&lt;/a&gt; &lt;code&gt;--window&lt;/code&gt; 选项的文档。</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]中&lt;/a&gt; &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; ， &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; 和 &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; 选项的说明。</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">请参阅Git源代码树中的文件gitweb / INSTALL和&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]，&lt;/a&gt;以获取有关使用CGI或支持Perl的服务器设置永久安装的详细信息的说明。</target>
        </trans-unit>
        <trans-unit id="ce13732a4e4daae5026a5a26714caf41bcc13201" translate="yes" xml:space="preserve">
          <source>See the following entry for information about normalizing line endings as well, and see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information about attribute files.</source>
          <target state="translated">有关规范化行尾的信息，请参见以下条目；有关属性文件的更多信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">详见下文关于检疫环境的说明。</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">请参阅 &quot;描述 &quot;部分的参考资料,开始使用Git。下面的内容对于初次使用的人来说可能会比较详细。</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">有关匹配语义的讨论，请参见上面描述 &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; 的部分。</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">请注意，在&lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]中的&lt;/a&gt; &amp;ldquo;隔离环境&amp;rdquo; 部分。</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">查看 &lt;code&gt;git submodule&lt;/code&gt; 创建了哪些文件：</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">选择&amp;ldquo;创建新项目&amp;rarr;从CVS签出&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">选择要包含在下次提交中的文件内容,然后进行提交。</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">选择非匹配的线路。</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">仅选择已添加（ &lt;code&gt;A&lt;/code&gt; ），已复制（ &lt;code&gt;C&lt;/code&gt; ），已删除（ &lt;code&gt;D&lt;/code&gt; ），已修改（ &lt;code&gt;M&lt;/code&gt; ），已重命名（ &lt;code&gt;R&lt;/code&gt; ），其类型（即常规文件，符号链接，子模块等）更改（ &lt;code&gt;T&lt;/code&gt; ）的文件，是未合并（ &lt;code&gt;U&lt;/code&gt; ），是未知（ &lt;code&gt;X&lt;/code&gt; ）或已配对（ &lt;code&gt;B&lt;/code&gt; ）。可以使用过滤器字符的任何组合（包括无）。将 &lt;code&gt;*&lt;/code&gt; （全或无）添加到组合中时，如果在比较中有任何文件与其他条件匹配，则选择所有路径；如果没有符合其他条件的文件，则不会选择任何内容。</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">加载图形后，选择指定的提交。默认行为等同于指定 &lt;code&gt;--select-commit=HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">发送一个 &quot;瘦身 &quot;包,根据包中未包含的对象,以deltified的形式记录对象,以减少网络流量。</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">以电子邮件的形式发送补丁集合</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">从 stdin 发送补丁集合到 IMAP 文件夹。</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">将档案发回git-archive</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">即使安全检查会阻止发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">将日志消息发送到指定的目的地。请注意，此选项并不意味着--verbose，因此默认情况下将仅记录错误情况。&amp;lt;目标&amp;gt;必须是以下之一：</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">将打包好的对象送回git-fetch-pack。</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将结果发送到标准输出，而不是覆盖 &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">给自己发送补丁,完全按照自己的方式发送,只是收件人:和抄送:行不包含列表和维护者地址。</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">将&lt;strong&gt;SIGUSR1&lt;/strong&gt;发送到 &lt;code&gt;git fast-import&lt;/code&gt; 进程将模拟 &lt;code&gt;checkpoint&lt;/code&gt; 命令，尽早结束当前packfile 。不耐烦的操作员可以使用此工具来窥视进行中的导入中的对象和参考，这会花费一些额外的运行时间和更差的压缩率。</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">将丢失的对象发送到远程仓库,并更新远程分支。</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">单独的变化</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">分离出隐藏在NUL字节后面的其他信息（例如，代理字符串作为一种功能，可以使用 &lt;code&gt;ls-refs&lt;/code&gt; 请求symrefs ）</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">用 NULs 分开提交,而不是用新行。</target>
        </trans-unit>
        <trans-unit id="fbdab030c0f541b63a6720cb36f79b58a8a8ddb3" translate="yes" xml:space="preserve">
          <source>Separates pathspec from options for disambiguation purposes.</source>
          <target state="translated">为了消除歧义,将pathspec和选项分开。</target>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">将参数与选项分开</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">过滤器命令行中的序列&quot;%f &quot;被替换为过滤器正在处理的文件名。过滤器可能会在关键字替换中使用这个。例如</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">定序器子命令</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">服务器管理</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">服务器端通过HTTP实现Git</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">服务器端语法在&amp;ldquo; blob&amp;rdquo;视图中突出显示支持。它要求 &lt;code&gt;$highlight_bin&lt;/code&gt; 程序可用（请参见上面&amp;ldquo;配置变量&amp;rdquo;部分中的此变量说明），因此默认情况下处于禁用状态。</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="a8d786ade49394688747f3008fcce5a3fadd1e66" translate="yes" xml:space="preserve">
          <source>Session IDs should be unique to a given process. They must fit within a packet-line, and must not contain non-printable or whitespace characters. The current implementation uses trace2 session IDs (see &lt;a href=&quot;api-trace2&quot;&gt;api-trace2&lt;/a&gt; for details), but this may change and users of the session ID should not rely on this fact.</source>
          <target state="translated">会话ID对于给定的进程应该是唯一的。它们必须适合小包行，并且不能包含不可打印或空格字符。当前的实现使用trace2会话ID（有关详细信息，请参见&lt;a href=&quot;api-trace2&quot;&gt;api-trace2&lt;/a&gt;），但这可能会发生变化，会话ID的用户不应依赖此事实。</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">验证&amp;lt;oldvalue&amp;gt;后，将&amp;lt;ref&amp;gt;设置为&amp;lt;newvalue&amp;gt;（如果有）。指定零&amp;lt;newvalue&amp;gt;以确保引用在更新后不存在，和/或零&amp;lt;oldvalue&amp;gt;以确保引用在更新前不存在。</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">将 &lt;code&gt;$maxload&lt;/code&gt; 设置为未定义的值（ &lt;code&gt;undef&lt;/code&gt; ）以关闭此功能。默认值为300。</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">设置 &lt;code&gt;C'&lt;/code&gt; 到 &lt;code&gt;C&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">除非已经设置，否则将 &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; 环境设置为给定的字符串（通常是程序的名称）。每当脚本运行用于更新引用的 &lt;code&gt;git&lt;/code&gt; 命令时，都会使用该字符串的值创建引用日志条目，以保留更新该引用的命令的记录。</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">在新创建的存储库中设置配置变量；这将在初始化存储库之后，但在获取远程历史记录或签出任何文件之前立即生效。密钥的格式与&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;期望的格式相同（例如， &lt;code&gt;core.eol=true&lt;/code&gt; ）。如果为同一个键指定了多个值，则每个值都将写入配置文件。例如，这可以确保向原始远程服务器添加其他提取refspec。</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">设置一个自定义目录来存储生成的文件,而不是当前的工作目录。所有目录组件都将被创建。</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">使用克隆/获取/推送命令设置协议 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 使用的策略。有关可用策略，请参见上面的 &lt;code&gt;protocol.allow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">设置一个要使用的替代 CVSROOT。这与 CVS -d 参数相对应。通常用户不希望设置这个参数,除非以非对称方式使用 CVS。</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">设置 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量。参见&lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;noMetadata&lt;/code&gt; 选项。不建议使用此选项，请在使用此选项之前阅读此联机帮助页的 &lt;code&gt;svn.noMetadata&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;rewriteRoot&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;rewriteUUID&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;useSvmProps&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">在[svn-remote]配置中设置 &lt;code&gt;useSvnsyncProps&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">设置Git命名空间。有关更多详细信息，请参见&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;。等效于设置 &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">设置Git命名空间；有关详细信息，请参见&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;。该 &lt;code&gt;--namespace&lt;/code&gt; 命令行选项还设置这个值。</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">设置合并提交时使用的提交信息(如果创建了合并提交)。</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">将创建/删除成本软糖系数设置为 &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; 。默认值为60。如果 &lt;code&gt;git range-diff&lt;/code&gt; 错误地将较大的更改视为总重写（删除一个提交并添加另一个提交），则尝试较大的值，反之则尝试较小的值。请参阅下面的``算法''部分以获取为什么需要这样做的解释。</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">设置 &lt;code&gt;log&lt;/code&gt; 命令的默认日期时间模式。为log.date设置值类似于使用 &lt;code&gt;git log&lt;/code&gt; 的 &lt;code&gt;--date&lt;/code&gt; 选项。有关详细信息，请参见&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">设置默认的匹配行为。使用的价值 &lt;code&gt;basic&lt;/code&gt; ， &lt;code&gt;extended&lt;/code&gt; ， &lt;code&gt;fixed&lt;/code&gt; ，或 &lt;code&gt;perl&lt;/code&gt; 将使 &lt;code&gt;--basic-regexp&lt;/code&gt; ， &lt;code&gt;--extended-regexp&lt;/code&gt; ， &lt;code&gt;--fixed-strings&lt;/code&gt; ，或 &lt;code&gt;--perl-regexp&lt;/code&gt; 选项因此，当值 &lt;code&gt;default&lt;/code&gt; 将返回默认匹配行为。</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">设置更新文件的执行权限。</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">设置对象名称的缩写长度。如果未指定或设置为 &quot;auto&quot;,则会根据版本库中打包对象的大致数量计算出一个适当的值,希望这个值足以让缩写的对象名称在一段时间内保持唯一性。最小长度为4。</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">设置用于对HTTP代理进行身份验证的方法。仅当配置的代理字符串包含用户名部分（即形式为 &lt;code&gt;user@host&lt;/code&gt; 或 &lt;code&gt;user@host:port&lt;/code&gt; ）时，此选项才生效。可以逐个远程覆盖它；请参见 &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; 。两者都可以被 &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; 环境变量覆盖。可能的值为：</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">设置由 --preserve-empty-dirs 创建的占位符文件的名称。默认:&quot;.gitignore&quot;</target>
        </trans-unit>
        <trans-unit id="9f6240dcaa583bb3021b3aca773ea9ba6bc9afa0" translate="yes" xml:space="preserve">
          <source>Set the path to the repository (&quot;.git&quot; directory). This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">设置存储库的路径（&amp;ldquo; .git&amp;rdquo;目录）。也可以通过设置 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量来控制。它可以是当前工作目录的绝对路径或相对路径。</target>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">设置存储库的路径。也可以通过设置 &lt;code&gt;GIT_DIR&lt;/code&gt; 环境变量来控制。它可以是当前工作目录的绝对路径或相对路径。</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">将路径设置为工作树的根。如果设置了 &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; 环境变量，则core.worktree将被忽略并且不用于确定工作树的根。可以通过 &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; 环境变量和 &lt;code&gt;--work-tree&lt;/code&gt; 命令行选项来覆盖它。该值可以是绝对路径，也可以是相对于.git目录路径的绝对路径，该路径可以由--git-dir或GIT_DIR指定，也可以自动发现。如果指定了--git-dir或GIT_DIR，但未指定--work-tree，GIT_WORK_TREE和core.worktree，则当前工作目录将被视为工作树的顶层。</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">将路径设置为工作树的根。这也可以通过 &lt;code&gt;--work-tree&lt;/code&gt; 命令行选项和core.worktree配置变量来控制。</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">设置工作树的路径。它可以是绝对路径，也可以是相对于当前工作目录的路径。这也可以通过设置GIT_WORK_TREE环境变量和core.worktree配置变量来控制（有关更详细的讨论，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;中的core.worktree ）。</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">将创建新提交的起点设置为&amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;的合并基础。运行 &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; 与运行 &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; 等效。</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">将此选项设置为 &lt;code&gt;false&lt;/code&gt; 可禁用默认的试探法，该试探法可改变diff块边界以使补丁更易于阅读。</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">将此选项设置为true可使差异驱动程序缓存文本转换输出。有关详细信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">将此选项设置为true可使diff驱动程序将文件视为二进制文件。有关详细信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79fb9e58577e75fc1803ff54dd16424d60dc2c8b" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, &lt;code&gt;pushNeedsForce&lt;/code&gt;, and &lt;code&gt;pushRefNeedsUpdate&lt;/code&gt; simultaneously.</source>
          <target state="translated">如果要同时禁用 &lt;code&gt;pushNonFFCurrent&lt;/code&gt; ， &lt;code&gt;pushNonFFMatching&lt;/code&gt; ， &lt;code&gt;pushAlreadyExists&lt;/code&gt; ， &lt;code&gt;pushFetchFirst&lt;/code&gt; ， &lt;code&gt;pushNeedsForce&lt;/code&gt; 和 &lt;code&gt;pushRefNeedsUpdate&lt;/code&gt; ，请将此变量设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">如果要同时禁用 &lt;code&gt;pushNonFFCurrent&lt;/code&gt; ， &lt;code&gt;pushNonFFMatching&lt;/code&gt; ， &lt;code&gt;pushAlreadyExists&lt;/code&gt; ， &lt;code&gt;pushFetchFirst&lt;/code&gt; 和 &lt;code&gt;pushNeedsForce&lt;/code&gt; ，请将此变量设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">设置为0可以防止获取/推送/克隆所使用的配置为 &lt;code&gt;user&lt;/code&gt; 状态的协议。这对于限制不受信任的存储库中的递归子模块初始化或对于将可能不受信任的URL馈送到git命令的程序很有用。有关更多详细信息，请参见&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">如果希望默认情况下忽略空白 &lt;code&gt;change&lt;/code&gt; ，请设置为change。设置为以下之一：如果您希望空格的变化很大，则为false。</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 可以使用&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;的旧shell脚本实现。默认情况下为 &lt;code&gt;true&lt;/code&gt; ，这意味着使用C中的内置重写。</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">设置为一个值</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">设置为false可在&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;和&lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt;命令中启用 &lt;code&gt;--no-show-forced-updates&lt;/code&gt; 。默认为true。</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">设置为需要调用的服务助手的长名称（git-upload-pack等）</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">设置为需要调用的服务助手的长名称（upload-pack等）。</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">设置为字符串值 &quot;自动&quot;。</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">设置为字符串值 &quot;crlf&quot;</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">设置为字符串值 &quot;lf&quot;</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">设置为true以默认在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;启用--branch 。选项--no-branch优先于此变量。</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">设置为true以默认在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;启用--short 。选项--no-short优先于此变量。</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">对于非瓷器状态格式，在&lt;a href=&quot;git-status&quot;&gt;git-status [1]中&lt;/a&gt;设置为true以启用 &lt;code&gt;--ahead-behind&lt;/code&gt; ，默认为false启用 &lt;code&gt;--no-ahead-behind&lt;/code&gt; 。默认为true。</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">设置为true可以在每个从远程下载包文件的 &lt;code&gt;git fetch&lt;/code&gt; 命令之后写入提交图。使用 &lt;code&gt;--split&lt;/code&gt; 选项，大多数执行将在现有提交图文件之上创建一个非常小的提交图文件。有时，这些文件将合并，并且写入可能需要更长的时间。拥有更新的提交图文件有助于许多Git命令的性能，包括 &lt;code&gt;git merge-base&lt;/code&gt; ， &lt;code&gt;git push -f&lt;/code&gt; 和 &lt;code&gt;git log --graph&lt;/code&gt; 。除非 &lt;code&gt;feature.experimental&lt;/code&gt; 为true ，否则默认为false 。</target>
        </trans-unit>
        <trans-unit id="8209e9f5d9f75f909ebb340ce07c0375e1a57b1b" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false.</source>
          <target state="translated">设置为true可以在每个从远程下载包文件的 &lt;code&gt;git fetch&lt;/code&gt; 命令之后写入提交图。使用 &lt;code&gt;--split&lt;/code&gt; 选项，大多数执行将在现有提交图文件之上创建一个很小的提交图文件。有时，这些文件将合并，并且写入可能需要更长的时间。拥有更新的提交图文件有助于许多Git命令的性能，包括 &lt;code&gt;git merge-base&lt;/code&gt; ， &lt;code&gt;git push -f&lt;/code&gt; 和 &lt;code&gt;git log --graph&lt;/code&gt; 。默认为false。</target>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">设置&amp;lt;分支名称&amp;gt;的跟踪信息，以便将&amp;lt;上游&amp;gt;视为&amp;lt;分支名称&amp;gt;的上游分支。如果未指定&amp;lt;branchname&amp;gt;，则默认为当前分支。</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">设置源存储库的镜像。这意味着 &lt;code&gt;--bare&lt;/code&gt; 。与 &lt;code&gt;--bare&lt;/code&gt; 相比，-- &lt;code&gt;--mirror&lt;/code&gt; 不仅将源的本地分支映射到目标的本地分支，还映射所有引用（包括远程跟踪分支，注释等），并设置一个refspec配置，以便所有这些引用被目标存储库中的 &lt;code&gt;git remote update&lt;/code&gt; 覆盖。</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">设置用于合并到分支&amp;lt;名称&amp;gt;的默认选项。语法和受支持的选项与&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]相同&lt;/a&gt;，但是当前不支持包含空格字符的选项值。</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">设置用于合并到分支&amp;lt;名称&amp;gt;的默认选项。语法和支持的选项与 &lt;code&gt;git merge&lt;/code&gt; 相同，但是当前不支持包含空格字符的选项值。</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">设置全系统通用配置文件的位置。</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">设置后备系统范围配置文件的位置。如果每个实例的配置文件不存在,则该文件只被读取。</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">设置每个实例配置文件的位置。</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">设置或删除命名远程对象的默认分支（即symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; 的目标）。不需要远程的默认分支，但可以指定远程的名称来代替特定的分支。例如，如果默认分支 &lt;code&gt;origin&lt;/code&gt; 设置为 &lt;code&gt;master&lt;/code&gt; ，则 &lt;code&gt;origin&lt;/code&gt; 可以指定任何你通常会指定 &lt;code&gt;origin/master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">为下一次连接设置服务路径(--upload-pack、--receive-pack等)。远程助手可以支持这个选项,但不能依赖在连接请求发生前设置这个选项。</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">将作为第一个参数的Subversion属性,设置为作为第三个参数的文件的第二个参数的值。</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">将指定子模块的URL设置为&amp;lt;newurl&amp;gt;。然后，它将自动同步子模块的新远程URL配置。</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">设置是否在发送前进行确认的默认值。必须是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; ， &lt;code&gt;cc&lt;/code&gt; ， &lt;code&gt;compose&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。有关这些值的含义，请参见上一节中的 &lt;code&gt;--confirm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">设置子模块的默认远程跟踪分支。该 &lt;code&gt;--branch&lt;/code&gt; 选项允许指定的远程分支。所述 &lt;code&gt;--default&lt;/code&gt; 选项删除子模块。&amp;lt;名称&amp;gt; .branch配置密钥，这将导致跟踪分支到默认到 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd403722db4f3bcc819e0b7e2bed5d2da744942" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to the remote &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">设置子模块的默认远程跟踪分支。该 &lt;code&gt;--branch&lt;/code&gt; 选项允许指定的远程分支。所述 &lt;code&gt;--default&lt;/code&gt; 选项删除子模块。&amp;lt;名称&amp;gt; .branch配置密钥，这将导致跟踪分支到默认到远程 &lt;code&gt;HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">设置--ignore-submodules的默认值。请注意，这仅影响 &lt;code&gt;git diff&lt;/code&gt; Porcelain，而不影响较低级别的 &lt;code&gt;diff&lt;/code&gt; 命令，例如 &lt;code&gt;git diff-files&lt;/code&gt; 。报告未提交的更改时， &lt;code&gt;git checkout&lt;/code&gt; 和 &lt;code&gt;git switch&lt;/code&gt; 也将接受此设置。将其设置为 &lt;code&gt;all&lt;/code&gt; 会禁用通常在设置 &lt;code&gt;status.submoduleSummary&lt;/code&gt; 时由 &lt;code&gt;git commit&lt;/code&gt; 和 &lt;code&gt;git status&lt;/code&gt; 显示的子模块摘要，除非使用--ignore-submodules命令行选项将其覆盖。在 &lt;code&gt;git submodule&lt;/code&gt; 的命令不受此设置。</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">设置 git refspec,用来比较搁置的 P4 变更列表。默认为 p4/master。</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">设置行尾类型以在工作目录中用于标记为文本的文件（通过设置 &lt;code&gt;text&lt;/code&gt; 属性，或者通过设置 &lt;code&gt;text=auto&lt;/code&gt; 和Git自动将内容检测为文本）。可以选择 &lt;code&gt;lf&lt;/code&gt; ， &lt;code&gt;crlf&lt;/code&gt; 和 &lt;code&gt;native&lt;/code&gt; ，它们使用平台的本机行结尾。默认值为 &lt;code&gt;native&lt;/code&gt; 。有关行尾转换的更多信息，请参见&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;。请注意，如果 &lt;code&gt;core.autocrlf&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;input&lt;/code&gt; ,则将忽略此值。</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">将传输帮助器选项&amp;lt;名称&amp;gt;设置为&amp;lt;值&amp;gt;。输出一行，其中包含 &lt;code&gt;ok&lt;/code&gt; （成功设置选项）， &lt;code&gt;unsupported&lt;/code&gt; （无法识别选项）或 &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; （支持选项&amp;lt;name&amp;gt;，但&amp;lt;value&amp;gt;无效）之一。应该在其他命令之前设置选项，并且可能会影响这些命令的行为。</target>
        </trans-unit>
        <trans-unit id="4361fe164802c15484e2158a7e066e93e95aef1a" translate="yes" xml:space="preserve">
          <source>Sets the version of hook that is to be used when calling fsmonitor. There are currently versions 1 and 2. When this is not set, version 2 will be tried first and if it fails then version 1 will be tried. Version 1 uses a timestamp as input to determine which files have changes since that time but some monitors like watchman have race conditions when used with a timestamp. Version 2 uses an opaque string so that the monitor can return something that can be used to determine what files have changed without race conditions.</source>
          <target state="translated">设置调用fsmonitor时要使用的hook的版本。目前有1和2两个版本。如果没有设置,则会先尝试版本2,如果失败则会尝试版本1。版本1使用一个时间戳作为输入,以确定哪些文件从那时起发生了变化,但一些监视器,如watchman,在使用时间戳时有竞赛条件。版本2使用一个不透明的字符串,这样监控器就可以返回一些可以用来确定哪些文件发生了变化的东西,而不会出现竞赛条件。</target>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">设置 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 将由&lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt;接收，但改为接受此类数据集的 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; ，或者克隆或获取设置为 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">设置未知的 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 值将导致fsck死亡，但是对 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 和 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 进行相同操作只会导致git警告。</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">设置 &quot;二进制 &quot;属性也会像上面一样取消设置 &quot;text &quot;和 &quot;diff &quot;属性。请注意,宏属性只能是 &quot;设置&quot;,尽管设置一个属性可能会产生设置或取消设置其他属性的效果,甚至将其他属性返回到 &quot;未指定 &quot;状态。</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">将 &lt;code&gt;mergetool.keepBackup&lt;/code&gt; 配置变量设置为 &lt;code&gt;false&lt;/code&gt; 会导致 &lt;code&gt;git mergetool&lt;/code&gt; 在成功合并文件时自动删除备份。</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">在路径上设置 &lt;code&gt;text&lt;/code&gt; 属性可启用行尾规范化并将路径标记为文本文件。行尾转换不会猜测内容类型。</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">设置环境变量 &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; 将告诉gitweb使用命名文件（即在本示例中为 &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ）作为gitweb的配置。在上面的示例中，您实际上并不需要它；仅当您的配置文件与内置文件（在编译gitweb时） &lt;code&gt;gitweb_config.perl&lt;/code&gt; 或 &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; 不在同一位置时，才需要使用该文件。有关详细信息，请参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;，尤其是有关优先级规则的信息。</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">设置为0不仅会禁用基于松散对象数量的自动打包，还会禁用其他启发式 &lt;code&gt;git gc --auto&lt;/code&gt; 来确定是否有工作要做，例如 &lt;code&gt;gc.autoPackLimit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">将此值设置为&amp;lt;vcs&amp;gt;将使Git使用git-remote- &amp;lt;vcs&amp;gt;帮助程序与远程交互。</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">将此值设置为--no-tags时，从远程&amp;lt;name&amp;gt;进行获取时将禁用自动标记跟随。将其设置为--tags将从远程&amp;lt;name&amp;gt;获取每个标签，即使无法从远程分支头访问它们也是如此。将这些标志直接传递到&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;可以覆盖此设置。请参阅&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]的&lt;/a&gt; --tags和--no-tags选项。</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">将此变量设置为&amp;ldquo; true&amp;rdquo;与在所有文件上将 &lt;code&gt;text&lt;/code&gt; 属性设置为&amp;ldquo; auto&amp;rdquo;以及将core.eol设置为&amp;ldquo; crlf&amp;rdquo;相同。如果要在工作目录中包含 &lt;code&gt;CRLF&lt;/code&gt; 行尾，并且存储库中包含LF行尾，请设置为true 。可以将此变量设置为 &lt;code&gt;input&lt;/code&gt; ，在这种情况下，不执行输出转换。</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将导致Git将所有路径规范视为不区分大小写。</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将使Git将所有路径规范视为glob模式（也称为&amp;ldquo; glob&amp;rdquo;魔术）。</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将使Git将所有路径规范视为文字（也称为&amp;ldquo;文字&amp;rdquo;魔术）。</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 将导致Git从字面上对待所有路径规范，而不是将其视为全局模式。例如，运行 &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; 将搜索触及路径 &lt;code&gt;*.c&lt;/code&gt; 的提交，而不搜索与glob &lt;code&gt;*.c&lt;/code&gt; 匹配的任何路径。如果您要向Git提供文字路径（例如，以前由 &lt;code&gt;git ls-tree&lt;/code&gt; ，-- &lt;code&gt;--raw&lt;/code&gt; diff输出等提供给您的路径），则可能需要这样做。</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">建立一个公共存储库</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">设置共享存储库</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">设置和配置</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">共享和更新项目</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">与他人分享发展</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">分享您的变化</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">项目（存储库）项目的单行简短描述（在项目列表页面中缩短为 &lt;code&gt;$projects_list_description_width&lt;/code&gt; ，默认为25个字符；请参见&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;）。纯文本文件；HTML将被转义。默认设置为</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">短格式</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">简称 &lt;code&gt;--log-destination=syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--copy --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--delete --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--move --force&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">经常使用的远程存储库的快捷方式版本。</target>
        </trans-unit>
        <trans-unit id="e715fc3eabd70149ca3b2a0c4ae7d6c328c54848" translate="yes" xml:space="preserve">
          <source>Shortlog will attempt to parse each trailer value as a &lt;code&gt;name &amp;lt;email&amp;gt;&lt;/code&gt; identity. If successful, the mailmap is applied and the email is omitted unless the &lt;code&gt;--email&lt;/code&gt; option is specified. If the value cannot be parsed as an identity, it will be taken literally and completely.</source>
          <target state="translated">Shortlog将尝试将每个预告片值解析为 &lt;code&gt;name &amp;lt;email&amp;gt;&lt;/code&gt; 身份。如果成功，除非指定了 &lt;code&gt;--email&lt;/code&gt; 选项，否则将应用邮件映射并忽略电子邮件。如果不能将值解析为身份，则将在字面上完全地使用它。</target>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">显示文件的&amp;lt;eolinfo&amp;gt;和&amp;lt;eolattr&amp;gt;。&amp;lt;eolinfo&amp;gt;是当&amp;ldquo;文本&amp;rdquo;属性为&amp;ldquo;自动&amp;rdquo;（或未设置且core.autocrlf不为false）时Git使用的文件内容标识。&amp;lt;eolinfo&amp;gt;是&amp;ldquo; -text&amp;rdquo;，&amp;ldquo; none&amp;rdquo;，&amp;ldquo; lf&amp;rdquo;，&amp;ldquo; crlf&amp;rdquo;，&amp;ldquo; mixed&amp;rdquo;或&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;首行和尾随行，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;首行，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">显示&amp;lt;num&amp;gt;行尾，并在连续的匹配组之间放置包含 &lt;code&gt;--&lt;/code&gt; 的行。</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">显示 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 如果已定义），否则显示 &lt;code&gt;$GIT_DIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">如果定义，则显示 &lt;code&gt;$GIT_DIR&lt;/code&gt; 。否则，显示.git目录的路径。相对时，显示的路径是相对于当前工作目录的。</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">显示一个Git逻辑变量</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">显示浏览器，了解 &lt;code&gt;maint&lt;/code&gt; 分支的树。在浏览器中选择的文件可以使用内置的责备查看器进行查看。</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">在实际运行该工具之前,显示一个确认对话框。</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">在合并结束时显示一个diffstat。diffstat也由配置选项merge.stat控制。</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">显示自上次 rebase 以来上游变化的 diffstat。diffstat 也由配置选项 rebase.stat 控制。</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">显示单词diff，使用&amp;lt;mode&amp;gt;分隔更改的单词。默认情况下，单词用空格分隔；请参阅下面的 &lt;code&gt;--word-diff-regex&lt;/code&gt; 。&amp;lt;mode&amp;gt;默认为 &lt;code&gt;plain&lt;/code&gt; ，并且必须是以下之一：</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">显示所有可用的格式。</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">分别显示所有分支，标签或远程跟踪分支（即分别在 &lt;code&gt;refs/heads&lt;/code&gt; ， &lt;code&gt;refs/tags&lt;/code&gt; 或 &lt;code&gt;refs/remotes&lt;/code&gt; 中找到的refs）。</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">显示自 &lt;code&gt;v2.6.12&lt;/code&gt; 版本以来的所有提交，该提交更改了 &lt;code&gt;include/scsi&lt;/code&gt; 或 &lt;code&gt;drivers/scsi&lt;/code&gt; 子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">显示所有参考文献(分支、标签等)。</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">显示在 &lt;code&gt;refs/&lt;/code&gt; 找到的所有裁判。</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">显示所有与shell glob pattern &lt;code&gt;pattern&lt;/code&gt; 匹配的裁判。如果该模式不是以 &lt;code&gt;refs/&lt;/code&gt; 开头，则会自动添加该前缀。如果模式不包含通配符（ &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;[&lt;/code&gt; ），则通过添加 &lt;code&gt;/*&lt;/code&gt; 将其转换为前缀匹配。</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">将补丁版本从 &lt;code&gt;v2.6.12&lt;/code&gt; 开始显示为补丁，其中更改了include / scsi或drivers / scsi子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">显示最多100个对文件 &lt;code&gt;Makefile&lt;/code&gt; 的更改。不仅要在当前分支中查找更改，还要在所有分支中查找。</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">对边界提交显示空白的SHA-1。也可以通过 &lt;code&gt;blame.blankboundary&lt;/code&gt; 配置选项进行控制。</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">在&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]中&lt;/a&gt;显示边界提交的空白提交对象名称。此选项默认为false。</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">同时显示远程跟踪分支和本地分支。</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">显示分支和它们的提交</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">展示交互式git-clean的简要用法。</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">在输出中显示缓存文件(默认)</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">显示联系人的规范名称和电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">显示提交、提交和工作树之间的变化等。</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">显示工作树与索引或树之间的变化,索引与树之间的变化,两棵树之间的变化,两个blob对象之间的变化,或磁盘上两个文件之间的变化。</target>
        </trans-unit>
        <trans-unit id="6189a1046129b02814c474d03dabcd8ea53d41e7" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes resulting from a merge, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">显示工作树与索引或树之间的变化、索引与树之间的变化、两棵树之间的变化、合并引起的变化、两个blob对象之间的变化或磁盘上两个文件之间的变化。</target>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">使用常见的差异工具显示变化</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">显示彩色差异。 &lt;code&gt;--color&lt;/code&gt; （即不带有 &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ）与 &lt;code&gt;--color=always&lt;/code&gt; 相同。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">显示彩色差异。 &lt;code&gt;--color&lt;/code&gt; （即不带有 &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ）与 &lt;code&gt;--color=always&lt;/code&gt; 相同。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 可以是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;never&lt;/code&gt; 或 &lt;code&gt;auto&lt;/code&gt; 之一。可以通过 &lt;code&gt;color.ui&lt;/code&gt; 和 &lt;code&gt;color.diff&lt;/code&gt; 配置设置进行更改。</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">显示彩色匹配。该值必须是始终(默认)、从不或自动。</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">显示提交日志</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">显示给定提交（默认为HEAD）和工作树/索引之间的提交摘要。对于有问题的子模块，显示了子模块中给定超级项目提交与索引或工作树（由 &lt;code&gt;--cached&lt;/code&gt; 切换）之间的一系列提交。如果给出了 &lt;code&gt;--files&lt;/code&gt; 选项，则显示子模块在超级项目的索引和子模块的工作树之间的提交系列（此选项不允许使用 &lt;code&gt;--cached&lt;/code&gt; 选项或提供显式的承诺）。</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">显示比特定日期更近的提交。</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">显示超过特定日期的提交。</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">以 &quot;diff3 &quot;风格显示冲突。</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">在输出中显示已删除的文件</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">在&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt;的输出中，在&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]中&lt;/a&gt;写入提交消息时显示的模板中以及在&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;所示的帮助消息中显示有关如何从当前状态继续的指示或&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;切换分支时。</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">显示名称以给定前缀开头的每个对象。&amp;lt;prefix&amp;gt;的长度必须至少为4个十六进制数字，以避免错误地列出存储库中的每个对象。</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">显示文件系统中由于文件/目录冲突而需要删除的文件,以便Checkout-index成功。</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">显示与任何模式都不匹配的给定路径。仅在启用 &lt;code&gt;--verbose&lt;/code&gt; 时才有意义，否则将无法区分与模式匹配的路径与不匹配模式的路径。</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">显示帮助信息。</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">也显示被忽略的文件。</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">以机器消费设计的格式显示。</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">显示索引和工作树中的文件信息。</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">只显示提交到p4的内容,不要改变Git或p4的状态。</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">显示每次提交的差异日志</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">显示长转速(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">在输出中显示修改过的文件</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">在显示其所有子代之前,不显示父代,避免在多行历史交错的情况下显示提交。</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">在显示所有子代之前不显示父代,否则按作者时间戳顺序显示提交。</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">在显示所有子代之前不显示父代,否则按提交时间戳顺序显示提交。</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">显示对象大小的blob(文件)条目。</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">仅显示指定修订范围内的提交。如果未指定&amp;lt;版本范围&amp;gt;，则默认为 &lt;code&gt;HEAD&lt;/code&gt; （即导致当前提交的整个历史记录）。 &lt;code&gt;origin..HEAD&lt;/code&gt; 指定从当前提交（即 &lt;code&gt;HEAD&lt;/code&gt; ）可以到达的所有提交，但不能从 &lt;code&gt;origin&lt;/code&gt; 到达。有关拼写&amp;lt;revision range&amp;gt;的方法的完整列表，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]的&lt;/a&gt; &amp;ldquo; Specification Ranges&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">仅显示指定修订范围内的提交。如果未指定&amp;lt;版本范围&amp;gt;，则默认为 &lt;code&gt;HEAD&lt;/code&gt; （即导致当前提交的整个历史记录）。 &lt;code&gt;origin..HEAD&lt;/code&gt; 指定当前提交（即 &lt;code&gt;HEAD&lt;/code&gt; ）可到达的所有提交，但不是 &lt;code&gt;origin&lt;/code&gt; 可以访问的所有提交。有关拼写&amp;lt;版本范围&amp;gt;的方法的完整列表，请参见&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt;的&amp;ldquo; &lt;code&gt;Specifying Ranges&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">仅显示足以说明与指定路径匹配的文件的提交。有关详细信息和其他简化模式，请参见下面的 &lt;code&gt;History Simplification&lt;/code&gt; 简化。</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">仅显示至少（或最多）许多父提交的提交。特别地， &lt;code&gt;--max-parents=1&lt;/code&gt; 是一样的 &lt;code&gt;--no-merges&lt;/code&gt; ， &lt;code&gt;--min-parents=2&lt;/code&gt; 是一样的 &lt;code&gt;--merges&lt;/code&gt; 。 &lt;code&gt;--max-parents=0&lt;/code&gt; 给出所有的根提交，-- &lt;code&gt;--min-parents=3&lt;/code&gt; 所有的章鱼合并。</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">在输出中仅显示忽略的文件。在索引中显示文件时，仅打印与排除模式匹配的文件。显示&amp;ldquo;其他&amp;rdquo;文件时，仅显示与排除模式匹配的文件。标准忽略规则不会自动激活，因此至少需要 &lt;code&gt;--exclude*&lt;/code&gt; 选项之一。</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">只显示修改、重命名、复制,不显示增加或删除。</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">仅显示更改文件的名称和状态。有关状态字母的含义，请参见 &lt;code&gt;--diff-filter&lt;/code&gt; 选项的描述。</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">只显示名称和变化的性质,但不显示实际的差异输出。</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">只显示更改后的文件名。</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">只显示命名的树条目本身,不显示其子条目。</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">在 &lt;code&gt;revPrompt&lt;/code&gt; 子对话框中仅显示未合并的分支。这对于类似于合并或变基的工具很有用，但对于诸如检出或重置之类的工具则无济于事。</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">在输出中显示其他(即未跟踪的)文件。</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">显示打包的档案索引</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">考虑对象时，在stderr上显示进度报告。所述 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 文本将被打印与每个进度更新。</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">在生成补丁时在stderr上显示进度报告。</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">显示进度。</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">显示原始时间戳(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">显示递归差异。</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">显示与一种或多种模式匹配的参考。模式从全名的末尾开始进行匹配，并且仅匹配完整的部分，例如， &lt;code&gt;master&lt;/code&gt; 匹配项 &lt;code&gt;refs/heads/master&lt;/code&gt; ， &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; ， &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; 而不是 &lt;code&gt;refs/heads/mymaster&lt;/code&gt; 或 &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">仅在此文件存在（在存储库中）时显示存储库。仅当此变量的值为true时才有效。可以在构建gitweb时通过设置 &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; 进行设置。此路径相对于 &lt;code&gt;GIT_DIR&lt;/code&gt; 。git-daemon [1]使用 &lt;code&gt;git-daemon-export-ok&lt;/code&gt; ，除非以 &lt;code&gt;--export-all&lt;/code&gt; 开头。默认情况下，未设置此变量，这意味着此功能已关闭。</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">在输出中显示阶段性内容的模式位、对象名称和阶段编号。</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">显示HEAD参考,即使通常会被过滤掉。</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">显示将当前存储库用作其子模块的超级项目工作树（如果存在）的根的绝对路径。如果当前存储库未被任何项目用作子模块，则不输出任何内容。</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">显示工作树的顶层目录的绝对路径。如果没有工作树,报告错误。</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">显示作者电子邮件而不是作者姓名（默认：关闭）。也可以通过 &lt;code&gt;blame.showEmail&lt;/code&gt; 配置选项进行控制。</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">在&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]中&lt;/a&gt;显示作者电子邮件而不是作者姓名。此选项默认为false。</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">即使是短格式,也能显示分支和跟踪信息。</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">显示最近两周对文件 &lt;code&gt;gitk&lt;/code&gt; 的更改。为了避免与名为 &lt;code&gt;gitk&lt;/code&gt; 的&lt;strong&gt;分支&lt;/strong&gt;混淆，必须使用&amp;ldquo;-&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">显示最近两周对文件 &lt;code&gt;gitk&lt;/code&gt; 的更改。的 &lt;code&gt;--&lt;/code&gt; 是必要的，以避免混乱&lt;strong&gt;分支&lt;/strong&gt;命名 &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9eebb0dfcba472cb083099fa0a98ec8bef90962a" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">显示存储项中记录的更改，以作为存储项与首次创建存储项时的提交之间的差异。默认情况下，该命令显示diffstat，但是它将接受 &lt;code&gt;git diff&lt;/code&gt; 已知的任何格式（例如， &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; 以补丁程序形式查看第二最新的条目）。您可以使用stash.showStat和/或stash.showPatch配置变量来更改默认行为。</target>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">显示存储项中记录的更改，以作为存储项与首次创建存储项时的提交之间的差异。如果没有给出 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; ，它将显示最新的。默认情况下，该命令显示diffstat，但是它将接受 &lt;code&gt;git diff&lt;/code&gt; 已知的任何格式（例如， &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; 以补丁程序形式查看第二最新的条目）。您可以使用stash.showStat和/或stash.showPatch配置变量来更改默认行为。</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">显示自 &lt;code&gt;v2.6.12&lt;/code&gt; 版本以来的更改，该更改更改了include / scsi或drivers / scsi子目录中的任何文件</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">即使 diff 本身是空的,也要显示提交本身和提交日志信息。</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">在SHA1s旁边显示提交对象。</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">显示在 &quot;测试 &quot;分支中但尚未进入 &quot;发布 &quot;分支的提交,以及每个提交修改的路径列表。</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">显示由当前工作树中为给定的&amp;lt;path&amp;gt;配置的过滤器转换的内容（即污迹过滤器，行尾转换等）。在这种情况下，&amp;lt;object&amp;gt;的格式必须为&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;或：&amp;lt;path&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">显示由textconv过滤器转换的内容。在这种情况下，&amp;lt;object&amp;gt;必须采用&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;或：&amp;lt;path&amp;gt;的形式，以便将过滤器应用于&amp;lt;path&amp;gt;索引中记录的内容。</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">在版本 &lt;code&gt;v0.99.8&lt;/code&gt; 中显示 &lt;code&gt;Makefile&lt;/code&gt; 的内容，并为每行提供注释。与以上示例不同，该文件是从对象数据库而不是工作目录中读取的。</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">在当前工作目录中显示文件 &lt;code&gt;Makefile&lt;/code&gt; 的内容，并为每行的原始作者以及将行移动到当前位置的人提供注释。未提交的文件带有注释，未提交的更改（如果有）明确地归因于 &lt;code&gt;Not Yet Committed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">显示diff块之间的上下文，直到指定的行数，从而融合彼此靠近的块。默认为 &lt;code&gt;diff.interHunkContext&lt;/code&gt; 或0（如果未设置config选项）。</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">显示diff块之间的上下文，直到指定的行数为止，从而融合彼此靠近的块。此值用作 &lt;code&gt;--inter-hunk-context&lt;/code&gt; 命令行选项的默认值。</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">在交互式变基中或由于冲突而停止变基时显示当前补丁。这等效于 &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">显示每个作者的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">显示 &quot;git am &quot;因为冲突而停止的全部邮件信息。</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">将文件名显示在该文件的匹配之上,而不是显示在每一行的开头。</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">显示原始提交中的文件名,默认情况下,如果有任何一行来自不同名称的文件,会显示文件名。默认情况下,如果有任何一行来自不同名称的文件,则会显示文件名。</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">显示完整的40字节十六进制提交对象名称。这会否定 &lt;code&gt;--abbrev-commit&lt;/code&gt; 和暗示它的那些选项，例如&amp;ldquo; --oneline&amp;rdquo;。它还将覆盖 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="61ee0a84eb604c1f8a4a6a6caa87ed9b0aa485c5" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt;, either explicit or implied by other options such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">显示完整的40字节十六进制提交对象名称。这会否定 &lt;code&gt;--abbrev-commit&lt;/code&gt; ，无论是显式的还是由其他选项（例如&amp;ldquo; --oneline&amp;rdquo;）所隐含。它还将覆盖 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">显示给定的目的地前缀,而不是 &quot;b/&quot;。</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">显示给定的源前缀,而不是 &quot;a/&quot;。</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">显示原始提交中的行号(默认:关闭)。</target>
        </trans-unit>
        <trans-unit id="edc37494876d892fcb3f9e5ed21ef2bd5105c12c" translate="yes" xml:space="preserve">
          <source>Show the message at which &lt;code&gt;git am&lt;/code&gt; has stopped due to conflicts. If &lt;code&gt;raw&lt;/code&gt; is specified, show the raw contents of the e-mail message; if &lt;code&gt;diff&lt;/code&gt;, show the diff portion only. Defaults to &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">显示由于冲突而停止 &lt;code&gt;git am&lt;/code&gt; 的消息。如果 &lt;code&gt;raw&lt;/code&gt; 指定，显示电子邮件消息的原始内容; 如果 &lt;code&gt;diff&lt;/code&gt; ，则仅显示diff部分。默认为 &lt;code&gt;raw&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">在显示提交日志消息时，显示注释提交的注释（请参阅&lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt;）。这是默认的 &lt;code&gt;git log&lt;/code&gt; ， &lt;code&gt;git show&lt;/code&gt; 和 &lt;code&gt;git whatchanged&lt;/code&gt; 命令时没有 &lt;code&gt;--pretty&lt;/code&gt; ， &lt;code&gt;--format&lt;/code&gt; 或 &lt;code&gt;--oneline&lt;/code&gt; 在命令行上给出的选项。</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">显示给定对象的注释(默认为HEAD)。</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">显示当前藏匿的作品数量。</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">显示用于存储库的对象格式（哈希算法），以将其存储在 &lt;code&gt;.git&lt;/code&gt; 目录，输入或输出中。对于输入，可以打印多个算法，以空格分隔。如果未指定，则默认值为&amp;ldquo;存储&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">在分割索引模式下显示共享索引文件的路径,如果不是分割索引模式,则显示为空。</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">显示 porcelain 格式,但输出每行的提交信息,而不仅仅是第一次引用提交时的信息。意味着--porcelain。</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">显示前一行包含匹​​配的函数名称，除非匹配的行本身是函数名称。名称的确定方法与 &lt;code&gt;git diff&lt;/code&gt; 计算补丁 &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 方式相同（请参阅在&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]中&lt;/a&gt;定义自定义块头）。</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">显示检查文件的进度。</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">显示远程跟踪分支。</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">以专为机器消耗而设计的格式递增显示结果。</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">显示子模块的状态。这将为每个子模块打印当前已检出提交的SHA-1，以及子模块路径和SHA-1 的 &lt;code&gt;git describe&lt;/code&gt; 输出。如果未初始化子模块，则每个SHA-1都可能带有 &lt;code&gt;-&lt;/code&gt; 前缀；如果当前签出的子模块提交与包含的存储库的索引中找到的SHA-1不匹配，则 &lt;code&gt;+&lt;/code&gt; ;如果子模块具有合并冲突，则前缀 &lt;code&gt;U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">显示从包含函数名的前一行到下一个函数名之前的周围文本,有效地显示找到匹配的整个函数。</target>
        </trans-unit>
        <trans-unit id="d9ba5793263afde18e073f27493f8db14c55a4c3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found. The function names are determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">从上一行包含一个功能名称的文本显示到下一个功能名称之前的文本，以有效地显示在其中找到匹配项的整个功能。函数名称的确定方法与 &lt;code&gt;git diff&lt;/code&gt; 计算补丁 &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 方式相同（请参见在&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]中&lt;/a&gt;定义自定义块头）。</target>
        </trans-unit>
        <trans-unit id="9511319e5f4aea9984dc4693f8341e94527b78d9" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output.</source>
          <target state="translated">在diff输出中显示树对象。</target>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">在diff输出中显示树对象。这意味着 &lt;code&gt;-r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">显示整个提交历史,但跳过任何合并。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
