<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="12f69b768fbdb877106cba3b6d6afbd305a42b1c" translate="yes" xml:space="preserve">
          <source>will result in:</source>
          <target state="translated">将导致:</target>
        </trans-unit>
        <trans-unit id="2f2b51229d2d2167e0cc3202015392cc28ab8187" translate="yes" xml:space="preserve">
          <source>will return no commits when the two branches are equal.</source>
          <target state="translated">当两个分支相等时,将返回无提交。</target>
        </trans-unit>
        <trans-unit id="d7fb4c7e19f587f366fe3ea0e98028a92d8fea8e" translate="yes" xml:space="preserve">
          <source>will show a nice graphical representation of the resulting history.</source>
          <target state="translated">将会显示一个漂亮的图形来表示所产生的历史。</target>
        </trans-unit>
        <trans-unit id="a5a8e7b047472640f5d146677e9c728928275e66" translate="yes" xml:space="preserve">
          <source>will show the list of commits made on the stable branch but not the master branch.</source>
          <target state="translated">将显示稳定分支上的提交列表,但不显示主分支。</target>
        </trans-unit>
        <trans-unit id="68545f3a6f4d69e42947665de20411f9ec15d387" translate="yes" xml:space="preserve">
          <source>will show this. Once you&amp;rsquo;ve edited the files to resolve the conflicts,</source>
          <target state="translated">将显示此。编辑文件以解决冲突后，</target>
        </trans-unit>
        <trans-unit id="97b06ba16f479d1bb2f14d02f495998e3aa43a36" translate="yes" xml:space="preserve">
          <source>will show what HEAD pointed to one week ago, not what the current branch pointed to one week ago. This allows you to see the history of what you&amp;rsquo;ve checked out.</source>
          <target state="translated">将显示HEAD一周前指向的内容，而不是当前分支一周前指向的内容。这使您可以查看已签出内容的历史记录。</target>
        </trans-unit>
        <trans-unit id="6c7766e6bd2c3044e5f437a985d8e97c1aaa2741" translate="yes" xml:space="preserve">
          <source>will show you graphically both of your branches (that&amp;rsquo;s what the &lt;code&gt;--all&lt;/code&gt; means: normally it will just show you your current &lt;code&gt;HEAD&lt;/code&gt;) and their histories. You can also see exactly how they came to be from a common source.</source>
          <target state="translated">将以图形方式显示两个分支（这就是 &lt;code&gt;--all&lt;/code&gt; 的意思：通常只会显示您当前的 &lt;code&gt;HEAD&lt;/code&gt; ）及其历史记录。您还可以确切地看到它们来自共同来源的方式。</target>
        </trans-unit>
        <trans-unit id="88356df00c3516762073ccbdc78aa678f20cae5f" translate="yes" xml:space="preserve">
          <source>will tell you where it&amp;rsquo;s pointing. To get the list of branches you have, you can say</source>
          <target state="translated">会告诉您它的指向。要获取您拥有的分支机构列表，您可以说</target>
        </trans-unit>
        <trans-unit id="6cdd86cb78566c41c85784dc0a0c2629a62ca7ce" translate="yes" xml:space="preserve">
          <source>will tell you whether the contents of the project are the same at the two branches; in theory, however, it&amp;rsquo;s possible that the same project contents could have been arrived at by two different historical routes. You could compare the object names:</source>
          <target state="translated">会告诉您两个分支的项目内容是否相同；从理论上讲，相同的项目内容可能是通过两条不同的历史路线得出的。您可以比较对象名称：</target>
        </trans-unit>
        <trans-unit id="b9ee4c8cf1d80f9a0a5a4a11e832c20bacca676c" translate="yes" xml:space="preserve">
          <source>will try to use konqueror first. But this may fail (for example, if DISPLAY is not set) and in that case emacs' woman mode will be tried.</source>
          <target state="translated">将首先尝试使用konqueror,但可能会失败(例如,如果没有设置DISPLAY,那么emacs的女人模式将被尝试。但这可能会失败(例如,如果没有设置DISPLAY),在这种情况下,将尝试使用emacs的女性模式。</target>
        </trans-unit>
        <trans-unit id="f6031424c5b15149805cc3d0c8b0eac718e1d424" translate="yes" xml:space="preserve">
          <source>will update the index with any files that you&amp;rsquo;ve modified or removed and create a commit, all in one step.</source>
          <target state="translated">只需一步，即可使用您已修改或删除的所有文件更新索引并创建提交。</target>
        </trans-unit>
        <trans-unit id="9b84bddfaa68e5df6de8681c72c0df1fa4a7fa1b" translate="yes" xml:space="preserve">
          <source>will use HEAD to produce a gzipped tar archive in which each filename is preceded by &lt;code&gt;project/&lt;/code&gt;. The output file format is inferred from the output file extension if possible, see &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">将使用HEAD生成压缩后的tar归档文件，其中每个文件名前面都带有 &lt;code&gt;project/&lt;/code&gt; 。如果可能，可从输出文件扩展名推断出输出文件格式，有关详细信息，请参见&lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d00bc787a2d4b77c2ff5ea6fc53c8c29f15dc358" translate="yes" xml:space="preserve">
          <source>winmerge</source>
          <target state="translated">winmerge</target>
        </trans-unit>
        <trans-unit id="20800520495b2303a3ac17dd27fe3c4163987c1e" translate="yes" xml:space="preserve">
          <source>working directory &amp;rarr; index</source>
          <target state="translated">工作目录&amp;rarr;索引</target>
        </trans-unit>
        <trans-unit id="4eafbf4c3acd9084fd21be8ac9ae916a897b122b" translate="yes" xml:space="preserve">
          <source>working tree</source>
          <target state="translated">工作树</target>
        </trans-unit>
        <trans-unit id="94449c5bf46256cd2c8d8717f9940ed8cf221db3" translate="yes" xml:space="preserve">
          <source>worktree</source>
          <target state="translated">worktree</target>
        </trans-unit>
        <trans-unit id="efd3ab67ae8bdaac67f76d19bad0017021556659" translate="yes" xml:space="preserve">
          <source>worktree.guessRemote</source>
          <target state="translated">worktree.guessRemote</target>
        </trans-unit>
        <trans-unit id="5c46c9b5886a79e1bb6967377b51e67078ac410e" translate="yes" xml:space="preserve">
          <source>worktreepath</source>
          <target state="translated">worktreepath</target>
        </trans-unit>
        <trans-unit id="32d1d8cd691bd73eb0e8445a53eb45a6219cd631" translate="yes" xml:space="preserve">
          <source>worktrees</source>
          <target state="translated">worktrees</target>
        </trans-unit>
        <trans-unit id="917d24c19e6172d01ee58d4d910cf520abde5e00" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/config.worktree</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/config.worktree</target>
        </trans-unit>
        <trans-unit id="7a2a4f1b20c8a2e59a305206002b8b028eaf5833" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/gitdir</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/gitdir</target>
        </trans-unit>
        <trans-unit id="7dc15d067a8c70411dcc35bf1efd2caa26ebdc18" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/locked</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/locked</target>
        </trans-unit>
        <trans-unit id="6e52918f32fd9eea83251e9bf09da6ae390c3eae" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2176dfd0874fe19ae8bdc1313d3e537d33c3c4c7" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one. Cannot be combined with --first-parent.</source>
          <target state="translated">长度大致相同。因此，查找导致回归的更改将减少为二进制搜索：重复生成并测试新的&amp;ldquo;中点&amp;rdquo;，直到提交链的长度为一。不能与--first-parent组合使用。</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">将是。</target>
        </trans-unit>
        <trans-unit id="ec462e1209bb81dd4d4da74d7cc622ecbd59d27e" translate="yes" xml:space="preserve">
          <source>would create the lightweight tag &lt;code&gt;refs/tags/938&lt;/code&gt; referring to whatever commit mark &lt;code&gt;:938&lt;/code&gt; references.</source>
          <target state="translated">将创建轻量级标签 &lt;code&gt;refs/tags/938&lt;/code&gt; ,引用任何提交标记 &lt;code&gt;:938&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="0e64309207a65a066015e183c95df0e98fa9beef" translate="yes" xml:space="preserve">
          <source>would output something like:</source>
          <target state="translated">会输出类似的东西。</target>
        </trans-unit>
        <trans-unit id="17d8e6d8f0677b6f8b2c882d7facbbbc37143301" translate="yes" xml:space="preserve">
          <source>would remove them for you.</source>
          <target state="translated">会帮你去掉。</target>
        </trans-unit>
        <trans-unit id="a4d42effbae7f1dd903be5bc58250775e8fdb07f" translate="yes" xml:space="preserve">
          <source>would result in the removal of commits F and G:</source>
          <target state="translated">将导致删除承诺F和G。</target>
        </trans-unit>
        <trans-unit id="e178c9aaffe5991230dd9ff28b8f996011875161" translate="yes" xml:space="preserve">
          <source>would result in:</source>
          <target state="translated">将导致:</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="a6956dab1239c6c1fbc46a263df37854151bdad3" translate="yes" xml:space="preserve">
          <source>write, in the test suite, a test script that exposes the regression</source>
          <target state="translated">在测试套件中编写一个测试脚本,暴露出回归的问题。</target>
        </trans-unit>
        <trans-unit id="b51c03916d43845d38d787ba1177d97c35d6d8b0" translate="yes" xml:space="preserve">
          <source>write-tree</source>
          <target state="translated">write-tree</target>
        </trans-unit>
        <trans-unit id="b16c937fc5f3c005b0c3db817c6328aabab56313" translate="yes" xml:space="preserve">
          <source>xxdiff</source>
          <target state="translated">xxdiff</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="bb7860b062b4c7f6477197562066897cfac86203" translate="yes" xml:space="preserve">
          <source>you can feed the following input to &lt;code&gt;--index-info&lt;/code&gt;:</source>
          <target state="translated">您可以将以下输入提供给 &lt;code&gt;--index-info&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f512f3664f28acf3b646ac106562aabf5b3fd0fa" translate="yes" xml:space="preserve">
          <source>you can refer to 1b2e1d63ff by the name &quot;v2.5&quot;. If you intend to share this name with other people (for example, to identify a release version), you should create a &quot;tag&quot; object, and perhaps sign it; see &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; for details.</source>
          <target state="translated">您可以使用名称&amp;ldquo; v2.5&amp;rdquo;来引用1b2e1d63ff。如果您打算与其他人共享此名称（例如，标识发行版本），则应创建一个&amp;ldquo;标记&amp;rdquo;对象，然后对其进行签名；有关详细信息，请参见&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f21aea3b773b85ed15a02e0520c4596660ede62d" translate="yes" xml:space="preserve">
          <source>you can set the filemode to true with</source>
          <target state="translated">你可以通过使用</target>
        </trans-unit>
        <trans-unit id="7dc43142eea4044676647e6bd97cb9f7eb183068" translate="yes" xml:space="preserve">
          <source>you can tell about the change after the fact.</source>
          <target state="translated">你可以在事后得知变化。</target>
        </trans-unit>
        <trans-unit id="55ae0d2f317b0ae71a87fb90b36301e7c9181a34" translate="yes" xml:space="preserve">
          <source>you could run &lt;code&gt;git rebase master topic&lt;/code&gt;, to bring yourself up to date before your topic is ready to be sent upstream. This would result in falling back to a three-way merge, and it would conflict the same way as the test merge you resolved earlier. &lt;code&gt;git rerere&lt;/code&gt; will be run by &lt;code&gt;git rebase&lt;/code&gt; to help you resolve this conflict.</source>
          <target state="translated">您可以运行 &lt;code&gt;git rebase master topic&lt;/code&gt; ，以使自己在准备好向上游发送主题之前保持最新状态。这将导致退回到三路合并，并且将与您先前解决的测试合并相同的方式发生冲突。 &lt;code&gt;git rerere&lt;/code&gt; 将由 &lt;code&gt;git rebase&lt;/code&gt; 运行，以帮助您解决此冲突。</target>
        </trans-unit>
        <trans-unit id="ce05848d37149bd7a63386fce7bea6475bab3138" translate="yes" xml:space="preserve">
          <source>you have now created two files in your working tree (aka &lt;code&gt;working directory&lt;/code&gt;), but to actually check in your hard work, you will have to go through two steps:</source>
          <target state="translated">现在，您已经在工作树（即 &lt;code&gt;working directory&lt;/code&gt; ）中创建了两个文件，但是要实际签入您的辛苦工作，您将必须完成两个步骤：</target>
        </trans-unit>
        <trans-unit id="0b8f2b63647cf0b4cf2e4ae1c829a8efa59acde9" translate="yes" xml:space="preserve">
          <source>you need to tell Git if you added a new file; removal and modification will be caught if you do &lt;code&gt;git commit -a&lt;/code&gt; later.</source>
          <target state="translated">您需要告诉Git是否添加了新文件；如果稍后再执行 &lt;code&gt;git commit -a&lt;/code&gt; ,则将捕获删除和修改。</target>
        </trans-unit>
        <trans-unit id="e6782f0c216c9a85ff68244a10ed13eb161478ca" translate="yes" xml:space="preserve">
          <source>you run into problems with deletions whenever the user is simply trying to rename files (because attempting to delete files that don&amp;rsquo;t exist looks like a no-op; it takes some chicanery to remap deletes across file renames when the renames happen via arbitrary user-provided shell)</source>
          <target state="translated">每当用户只是尝试重命名文件时，您都会遇到删除问题（因为尝试删除不存在的文件看起来像是无操作；当通过任意用户进行重命名时，需要花些时间才能重新映射整个文件重命名删除操作提供的外壳）</target>
        </trans-unit>
        <trans-unit id="e804abbe97d54cb4bc4f8871e020be4bbbadaebf" translate="yes" xml:space="preserve">
          <source>you try to unset an option which does not exist (ret=5),</source>
          <target state="translated">你试图取消设置一个不存在的选项(ret=5)。</target>
        </trans-unit>
        <trans-unit id="fe0543b68420ac22d2548c7e91b972d8572fa97d" translate="yes" xml:space="preserve">
          <source>you try to unset/set an option for which multiple lines match (ret=5), or</source>
          <target state="translated">你试图取消设置/设置一个多行匹配的选项(ret=5),或</target>
        </trans-unit>
        <trans-unit id="efa92f0afbb0477eac8bafddb9f3892f7f60093d" translate="yes" xml:space="preserve">
          <source>you try to use an invalid regexp (ret=6).</source>
          <target state="translated">你试图使用一个无效的regexp (ret=6)。</target>
        </trans-unit>
        <trans-unit id="deeffff664f882f6292365d3f4355f0fd1f2950a" translate="yes" xml:space="preserve">
          <source>you walk the index in order, and ignore all entries of stage 0, since they&amp;rsquo;ve already been done.</source>
          <target state="translated">您可以按顺序遍历索引，而忽略阶段0的所有条目，因为它们已经完成。</target>
        </trans-unit>
        <trans-unit id="e40858f3b1ea33484ad870e370d3ce3403d6e862" translate="yes" xml:space="preserve">
          <source>you will end up with the fixed history</source>
          <target state="translated">你将最终与固定的历史</target>
        </trans-unit>
        <trans-unit id="3feccc2142131c34ccba809c47212fd9f28c1cb4" translate="yes" xml:space="preserve">
          <source>you would get an output like this:</source>
          <target state="translated">你会得到这样的输出。</target>
        </trans-unit>
        <trans-unit id="0bae78553462e7a34534afd02b3496453c11a90d" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;ll get a list of all existing branches:</source>
          <target state="translated">您将获得所有现有分支机构的列表：</target>
        </trans-unit>
        <trans-unit id="38aa53de31c04bcfae9163cc23b7963ed9cf90f7" translate="yes" xml:space="preserve">
          <source>zebra</source>
          <target state="translated">zebra</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="1abe74473dcd47570993fe227357e8340418b7f4" translate="yes" xml:space="preserve">
          <source>~/.git-credentials</source>
          <target state="translated">~/.git-credentials</target>
        </trans-unit>
        <trans-unit id="9e794d254d2ea7f1b185c970ca6ed90747ac8823" translate="yes" xml:space="preserve">
          <source>~/.gitconfig</source>
          <target state="translated">~/.gitconfig</target>
        </trans-unit>
        <trans-unit id="afde40b275af0ad36ff7b6e7f32ecc59bab0a691" translate="yes" xml:space="preserve">
          <source>~/.gitconfig push.pushoption = c</source>
          <target state="translated">〜/ .gitconfig push.pushoption = c</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
