<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="5bc979dd68e3673e162210abbf5cc22960b82278" translate="yes" xml:space="preserve">
          <source>superproject</source>
          <target state="translated">superproject</target>
        </trans-unit>
        <trans-unit id="2a5e9b1b170e9456317949e40c8ae3572c9ca223" translate="yes" xml:space="preserve">
          <source>supported</source>
          <target state="translated">supported</target>
        </trans-unit>
        <trans-unit id="5bada6ad649e470d86f4ebdbd1d31d5a80390452" translate="yes" xml:space="preserve">
          <source>svn</source>
          <target state="translated">svn</target>
        </trans-unit>
        <trans-unit id="656a9eec8c0a3dc237f62c7c25015e404eeba99b" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.automkdirs</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.automkdirs</target>
        </trans-unit>
        <trans-unit id="eebc7ad264ef90a890a1c36bc599cb753ce7631a" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.noMetadata</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.noMetadata</target>
        </trans-unit>
        <trans-unit id="fb24592826d60116ca8c971ed8636cceaececf9d" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.pushurl</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.pushurl</target>
        </trans-unit>
        <trans-unit id="1d6c3e0c9438fb0df78cc106010945d6cbfce22b" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.rewriteRoot</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.rewriteRoot</target>
        </trans-unit>
        <trans-unit id="086432c95555cdf2daf908f273988fd1b8f9e138" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.rewriteUUID</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.rewriteUUID</target>
        </trans-unit>
        <trans-unit id="02e542cc595d773226c506eabc2d9906aa4d2593" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.useSvmProps</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.useSvmProps</target>
        </trans-unit>
        <trans-unit id="b58cdd7a65ed4931e77a5afd5c7253afdd4c30d5" translate="yes" xml:space="preserve">
          <source>svn-remote.&amp;lt;name&amp;gt;.useSvnsyncprops</source>
          <target state="translated">svn-remote.&amp;lt;name&amp;gt;.useSvnsyncprops</target>
        </trans-unit>
        <trans-unit id="d860a556f4961b0dd1bcbf597e6c895c1ed870bc" translate="yes" xml:space="preserve">
          <source>svn.brokenSymlinkWorkaround</source>
          <target state="translated">svn.brokenSymlinkWorkaround</target>
        </trans-unit>
        <trans-unit id="f5b5305e02eef8251079b850cfbba50aaeafe650" translate="yes" xml:space="preserve">
          <source>svn.noMetadata</source>
          <target state="translated">svn.noMetadata</target>
        </trans-unit>
        <trans-unit id="08cbde0e1252d8f7ec9350dffcea3afcc61f7d45" translate="yes" xml:space="preserve">
          <source>svn.pathnameencoding</source>
          <target state="translated">svn.pathnameencoding</target>
        </trans-unit>
        <trans-unit id="1631694451cfbf737d7b7712d628bcb3b991f4d7" translate="yes" xml:space="preserve">
          <source>svn.useSvmProps</source>
          <target state="translated">svn.useSvmProps</target>
        </trans-unit>
        <trans-unit id="49996487bd4c7a1b3a51ce1504313eaaae3eea82" translate="yes" xml:space="preserve">
          <source>svn.useSvnsyncProps</source>
          <target state="translated">svn.useSvnsyncProps</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="26d3e4874ea6730febdf1f002a0aed59d7bf301f" translate="yes" xml:space="preserve">
          <source>switch branch</source>
          <target state="translated">岔子</target>
        </trans-unit>
        <trans-unit id="2a3b599f02db7aa1a1f1524295b975789801a54b" translate="yes" xml:space="preserve">
          <source>switch color to blue</source>
          <target state="translated">变色</target>
        </trans-unit>
        <trans-unit id="b4c4186f15dfebbc174a9edf89066910ebd636cb" translate="yes" xml:space="preserve">
          <source>switch color to green</source>
          <target state="translated">变绿</target>
        </trans-unit>
        <trans-unit id="b3daa802c574a1c07f0615c4145a61605edbb62d" translate="yes" xml:space="preserve">
          <source>switch color to red</source>
          <target state="translated">变红</target>
        </trans-unit>
        <trans-unit id="2f906365a4bb54c8b0a9a3734157c70b00f2c409" translate="yes" xml:space="preserve">
          <source>switch line wrapping, like the -w option of &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">切换换行，例如&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt;的-w选项。</target>
        </trans-unit>
        <trans-unit id="e5b24b14c94c90aa1e5f3ee6e4924664e027ae67" translate="yes" xml:space="preserve">
          <source>switch to the master branch.</source>
          <target state="translated">切换到主分支。</target>
        </trans-unit>
        <trans-unit id="ccb72552ecdb588205146ca27d8a06d6265b5b56" translate="yes" xml:space="preserve">
          <source>symbolic-ref</source>
          <target state="translated">symbolic-ref</target>
        </trans-unit>
        <trans-unit id="33a6ad3bf47edc8227baba54a3fea71e1612dd82" translate="yes" xml:space="preserve">
          <source>symref</source>
          <target state="translated">symref</target>
        </trans-unit>
        <trans-unit id="51448cf7f9b5d4a52cd56ef2c75273757036647d" translate="yes" xml:space="preserve">
          <source>sync [--recursive] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">同步[-递归] [-] [&amp;lt;路径&amp;gt; ...]</target>
        </trans-unit>
        <trans-unit id="e0543ba22ccc80a5d2365241ee2adb754f80be19" translate="yes" xml:space="preserve">
          <source>syslog</source>
          <target state="translated">syslog</target>
        </trans-unit>
        <trans-unit id="ef7ab1c1393c9fdca6cc25b8ba9ee839e8e1136a" translate="yes" xml:space="preserve">
          <source>tab-separated pathname(s) of the file</source>
          <target state="translated">以制表符分隔的文件路径名。</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="62844ef05bdb1063797d5d07f5e4d4b8dc318c19" translate="yes" xml:space="preserve">
          <source>tag name: refers to the commit pointed to by the given tag (we&amp;rsquo;ve seen branches and tags are special cases of &lt;a href=&quot;#how-git-stores-references&quot;&gt;references&lt;/a&gt;).</source>
          <target state="translated">标签名：指的是给定标签所指向的提交（我们已经看到了分支和标签是&lt;a href=&quot;#how-git-stores-references&quot;&gt;引用的&lt;/a&gt;特例）。</target>
        </trans-unit>
        <trans-unit id="415f0fe19774ea3cce6e9878cbca8d83f4ad8172" translate="yes" xml:space="preserve">
          <source>tag object</source>
          <target state="translated">标签对象</target>
        </trans-unit>
        <trans-unit id="7efc1b76928fdc12c2afd45b0766f9c7a63bcb56" translate="yes" xml:space="preserve">
          <source>tag.forceSignAnnotated</source>
          <target state="translated">tag.forceSignAnnotated</target>
        </trans-unit>
        <trans-unit id="c366846879576dc6a03f64798a70787c3ffd4545" translate="yes" xml:space="preserve">
          <source>tag.gpgSign</source>
          <target state="translated">tag.gpgSign</target>
        </trans-unit>
        <trans-unit id="b17e81fa52c1a7d5ab6988ac0c65b31b3565a08a" translate="yes" xml:space="preserve">
          <source>tag.sort</source>
          <target state="translated">tag.sort</target>
        </trans-unit>
        <trans-unit id="9b6ef5a1a499923ea7c52002ec03583cd27287ea" translate="yes" xml:space="preserve">
          <source>tags</source>
          <target state="translated">tags</target>
        </trans-unit>
        <trans-unit id="eb3c51de14ab564c3018ece30811cc258a57c2bb" translate="yes" xml:space="preserve">
          <source>take a file out of another commit</source>
          <target state="translated">从另一个提交中取出文件</target>
        </trans-unit>
        <trans-unit id="4eaa4873dcf1d4d73db36cfe8c4994df2b47ca1b" translate="yes" xml:space="preserve">
          <source>tar.&amp;lt;format&amp;gt;.command</source>
          <target state="translated">tar.&amp;lt;format&amp;gt;.command</target>
        </trans-unit>
        <trans-unit id="1e178c83c6cb136557eee0b6f4c3de9b081198d1" translate="yes" xml:space="preserve">
          <source>tar.&amp;lt;format&amp;gt;.remote</source>
          <target state="translated">tar.&amp;lt;format&amp;gt;.remote</target>
        </trans-unit>
        <trans-unit id="b4806e88a5d0fc9f639a83fcdfe33f27a560610e" translate="yes" xml:space="preserve">
          <source>tar.umask</source>
          <target state="translated">tar.umask</target>
        </trans-unit>
        <trans-unit id="76e5d28cb2c4eec47bbea8f2ddb339131eb4f0e3" translate="yes" xml:space="preserve">
          <source>tempname TAB path RS</source>
          <target state="translated">tempname TAB path RS</target>
        </trans-unit>
        <trans-unit id="372ea08cab33e71c02c651dbc83a474d32c676ea" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="translated">text</target>
        </trans-unit>
        <trans-unit id="de0c20467dc012f1af336cb6c9ea6de9b34f5c23" translate="yes" xml:space="preserve">
          <source>that doesn&amp;rsquo;t come with any options&amp;mdash;​it will just write out the current index into the set of tree objects that describe that state, and it will return the name of the resulting top-level tree. You can use that tree to re-generate the index at any time by going in the other direction:</source>
          <target state="translated">它没有任何选项-它只会将当前索引写出到描述该状态的树对象集合中，并会返回结果顶级树的名称。您可以随时通过向另一个方向使用该树来重新生成索引：</target>
        </trans-unit>
        <trans-unit id="41c1dd8833782c6260221149732c9f951fc0b315" translate="yes" xml:space="preserve">
          <source>that is to say, the branch is not reset/created unless &quot;git checkout&quot; is successful.</source>
          <target state="translated">也就是说,除非 &quot;git checkout &quot;成功,否则该分支不会被重置/创建。</target>
        </trans-unit>
        <trans-unit id="ba368eeb59bcacc9d2f7fa3a539ee9ec188bfa78" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;init.templateDir&lt;/code&gt; configuration variable; or</source>
          <target state="translated">所述 &lt;code&gt;init.templateDir&lt;/code&gt; 配置变量; 要么</target>
        </trans-unit>
        <trans-unit id="99d9f01273019cab7c278eace577b2585b962e89" translate="yes" xml:space="preserve">
          <source>the above are equivalent to:</source>
          <target state="translated">以上相当于:</target>
        </trans-unit>
        <trans-unit id="265c930b12c6cf30b5b56f15f681e77f750fda61" translate="yes" xml:space="preserve">
          <source>the argument given with the &lt;code&gt;--template&lt;/code&gt; option;</source>
          <target state="translated">&lt;code&gt;--template&lt;/code&gt; 选项给出的参数；</target>
        </trans-unit>
        <trans-unit id="c4b6150b6f7e5eb72250f4fb66992fdc44747240" translate="yes" xml:space="preserve">
          <source>the attributes given to path &lt;code&gt;t/abc&lt;/code&gt; are computed as follows:</source>
          <target state="translated">赋予路径 &lt;code&gt;t/abc&lt;/code&gt; 的属性的计算如下：</target>
        </trans-unit>
        <trans-unit id="3d6ad04613d9ccc9b2b3a8104cec5071fc646e0e" translate="yes" xml:space="preserve">
          <source>the author name (&quot;author&quot;), email (&quot;author-mail&quot;), time (&quot;author-time&quot;), and time zone (&quot;author-tz&quot;); similarly for committer.</source>
          <target state="translated">作者姓名(&quot;author&quot;)、电子邮件(&quot;author-mail&quot;)、时间(&quot;author-time&quot;)和时区(&quot;author-tz&quot;);同样,提交人也是如此。</target>
        </trans-unit>
        <trans-unit id="b16e53ef70d88ebbfdf364cf1d44e01a23d03ac7" translate="yes" xml:space="preserve">
          <source>the behaviour is similar to that of &quot;/bin/ls&quot; in that the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is taken as relative to the current working directory. E.g. when you are in a directory &lt;code&gt;sub&lt;/code&gt; that has a directory &lt;code&gt;dir&lt;/code&gt;, you can run &lt;code&gt;git ls-tree -r HEAD dir&lt;/code&gt; to list the contents of the tree (that is &lt;code&gt;sub/dir&lt;/code&gt; in &lt;code&gt;HEAD&lt;/code&gt;). You don&amp;rsquo;t want to give a tree that is not at the root level (e.g. &lt;code&gt;git ls-tree -r HEAD:sub dir&lt;/code&gt;) in this case, as that would result in asking for &lt;code&gt;sub/sub/dir&lt;/code&gt; in the &lt;code&gt;HEAD&lt;/code&gt; commit. However, the current working directory can be ignored by passing --full-tree option.</source>
          <target state="translated">该行为与&amp;ldquo; / bin / ls&amp;rdquo;的行为相似，因为 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 是相对于当前工作目录的。例如，当你在一个目录 &lt;code&gt;sub&lt;/code&gt; ，有一个目录的 &lt;code&gt;dir&lt;/code&gt; ，你可以运行 &lt;code&gt;git ls-tree -r HEAD dir&lt;/code&gt; 列出树（即内容 &lt;code&gt;sub/dir&lt;/code&gt; 中 &lt;code&gt;HEAD&lt;/code&gt; ）。你不想给一棵树，是不是在根级别（如 &lt;code&gt;git ls-tree -r HEAD:sub dir&lt;/code&gt; ）在这种情况下，因为这将导致要求 &lt;code&gt;sub/sub/dir&lt;/code&gt; 在 &lt;code&gt;HEAD&lt;/code&gt; 提交。但是，可以通过--full-tree选项忽略当前工作目录。</target>
        </trans-unit>
        <trans-unit id="7e606cadacc17f76ba9f95e5a1d7751a50eb9c56" translate="yes" xml:space="preserve">
          <source>the behaviour is slightly different from that of &quot;/bin/ls&quot; in that the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; denotes just a list of patterns to match, e.g. so specifying directory name (without &lt;code&gt;-r&lt;/code&gt;) will behave differently, and order of the arguments does not matter.</source>
          <target state="translated">该行为与&amp;ldquo; / bin / ls&amp;rdquo;的行为略有不同，因为 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 仅表示要匹配的模式列表，例如，因此指定目录名（不带 &lt;code&gt;-r&lt;/code&gt; ）将表现不同，并且参数的顺序没有变化物。</target>
        </trans-unit>
        <trans-unit id="5e9dcd437f5fd235bda791862abb358a08583acd" translate="yes" xml:space="preserve">
          <source>the commit recorded in the superproject will be checked out in the submodule on a detached HEAD.</source>
          <target state="translated">在超级项目中记录的提交将在子模块中被检查出一个分离的头。</target>
        </trans-unit>
        <trans-unit id="dc43d8b97395f6d59518463c79e8eb6241db59f9" translate="yes" xml:space="preserve">
          <source>the commit recorded in the superproject will be merged into the current branch in the submodule.</source>
          <target state="translated">在超级项目中记录的提交将被合并到子模块的当前分支中。</target>
        </trans-unit>
        <trans-unit id="2a79cc6cd81744b14639329fc18ecc672c5d6cb5" translate="yes" xml:space="preserve">
          <source>the config file cannot be written (ret=4),</source>
          <target state="translated">配置文件不能被写入(ret=4)。</target>
        </trans-unit>
        <trans-unit id="1093790dc16ca4b5e32e9d483b49ee981aafdf86" translate="yes" xml:space="preserve">
          <source>the config file is invalid (ret=3),</source>
          <target state="translated">配置文件无效(ret=3)。</target>
        </trans-unit>
        <trans-unit id="9c77cccbf44a238a16d95f1ef65ca90249d59feb" translate="yes" xml:space="preserve">
          <source>the contents of the &lt;code&gt;$GIT_TEMPLATE_DIR&lt;/code&gt; environment variable;</source>
          <target state="translated">&lt;code&gt;$GIT_TEMPLATE_DIR&lt;/code&gt; 环境变量的内容；</target>
        </trans-unit>
        <trans-unit id="cb920b0b6ce59e316800671b0d42f207cf807d74" translate="yes" xml:space="preserve">
          <source>the current branch of the submodule will be rebased onto the commit recorded in the superproject.</source>
          <target state="translated">子模块的当前分支将重新基于超级项目中的提交。</target>
        </trans-unit>
        <trans-unit id="3b7466effe4f7dcce38b929167563c2c2c4f205e" translate="yes" xml:space="preserve">
          <source>the default template directory: &lt;code&gt;/usr/share/git-core/templates&lt;/code&gt;.</source>
          <target state="translated">默认模板目录： &lt;code&gt;/usr/share/git-core/templates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb197d79d42a8ce213f3f7c657c7ac39774a9fba" translate="yes" xml:space="preserve">
          <source>the default to only doing a partial history rewrite (&lt;code&gt;--all&lt;/code&gt; is not the default and few examples show it)</source>
          <target state="translated">默认为仅执行部分历史记录重写（ &lt;code&gt;--all&lt;/code&gt; 不是默认值，很少有示例显示它）</target>
        </trans-unit>
        <trans-unit id="7f4b0c9c609ee7e6ebdfd673b2d8a0d64e4ae1fe" translate="yes" xml:space="preserve">
          <source>the different stages of that file will be &quot;collapsed&quot;, after which &lt;code&gt;git diff&lt;/code&gt; will (by default) no longer show diffs for that file.</source>
          <target state="translated">该文件的不同阶段将被&amp;ldquo;折叠&amp;rdquo;，此后 &lt;code&gt;git diff&lt;/code&gt; 将（默认）不再显示该文件的diff。</target>
        </trans-unit>
        <trans-unit id="0d275f79108c7ea6019d17c4929c9295d1c9d40d" translate="yes" xml:space="preserve">
          <source>the fact that --tag-name-filter (when used to rename tags) doesn&amp;rsquo;t remove the old tags but just adds new ones with the new name</source>
          <target state="translated">--tag-name-filter（用于重命名标签时）不会删除旧标签，而只会添加新名称的事实</target>
        </trans-unit>
        <trans-unit id="250c20c7d57975a6a2521327c8a2fe5042d3a4e9" translate="yes" xml:space="preserve">
          <source>the fact that little educational information is provided to inform users of the ramifications of a rewrite and how to avoid mixing old and new history. For example, this man page discusses how users need to understand that they need to rebase their changes for all their branches on top of new history (or delete and reclone), but that&amp;rsquo;s only one of multiple concerns to consider. See the &quot;DISCUSSION&quot; section of the git filter-repo manual page for more details.</source>
          <target state="translated">提供很少的教育信息来告知用户重写的后果以及如何避免将新旧历史混为一谈的事实。例如，此手册页讨论了用户如何理解他们需要在新历史（或删除和重新克隆）之上为所有分支重新建立其更改基础，但这只是要考虑的多个问题之一。有关更多详细信息，请参见git filter-repo手册页的&amp;ldquo;讨论&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="ad5c437b7c3f1b484c2add63462dec5ae4986887" translate="yes" xml:space="preserve">
          <source>the fact that there&amp;rsquo;s no automatic post-run cleanup</source>
          <target state="translated">没有自动运行后清理的事实</target>
        </trans-unit>
        <trans-unit id="bba6a5438a7c242e77dcd15328ad132f34e4d852" translate="yes" xml:space="preserve">
          <source>the fetched commits will still be available from FETCH_HEAD.</source>
          <target state="translated">获取的提交仍然可以从FETCH_HEAD中获得。</target>
        </trans-unit>
        <trans-unit id="32970a3e5c92db23807820ffb401b69db949624b" translate="yes" xml:space="preserve">
          <source>the filename in the commit that the line is attributed to.</source>
          <target state="translated">该行归属的提交文件名。</target>
        </trans-unit>
        <trans-unit id="f47879ca57f0e3dd3d76d3d9ac8ed55cb9ddb22d" translate="yes" xml:space="preserve">
          <source>the first column is the offset in bytes of the object within the corresponding packfile</source>
          <target state="translated">第一列是对象在相应的打包文件中的偏移量(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="b3c039bc90bf411d7274fb9dabb31627c16fc9e7" translate="yes" xml:space="preserve">
          <source>the first line of the commit log message (&quot;summary&quot;).</source>
          <target state="translated">提交日志消息的第一行(&quot;摘要&quot;)。</target>
        </trans-unit>
        <trans-unit id="9c8cbde16941a78c05dbbdcadd43cec702180343" translate="yes" xml:space="preserve">
          <source>the index file saves and restores with all this information, so you can merge things incrementally, but as long as it has entries in stages 1/2/3 (i.e., &quot;unmerged entries&quot;) you can&amp;rsquo;t write the result. So now the merge algorithm ends up being really simple:</source>
          <target state="translated">索引文件将使用所有这些信息进行保存和恢复，因此您可以逐步合并内容，但是只要它具有第1/2/3阶段的条目（即&amp;ldquo;未合并的条目&amp;rdquo;），就不能写入结果。因此，现在合并算法最终变得非常简单：</target>
        </trans-unit>
        <trans-unit id="724e63303b69a862a9497c3d02fcea278de8315b" translate="yes" xml:space="preserve">
          <source>the line number of the line in the final file;</source>
          <target state="translated">最后文件中行的行号。</target>
        </trans-unit>
        <trans-unit id="3ec8f266387fdd5aca2fb962e8e4b11d5b439857" translate="yes" xml:space="preserve">
          <source>the line number of the line in the original file;</source>
          <target state="translated">原始文件中的行号。</target>
        </trans-unit>
        <trans-unit id="b0c2a4eeb862ed722adf1d0e8b3f147f036f9ddc" translate="yes" xml:space="preserve">
          <source>the merge base between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 之间的合并基数为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9173a141fbf6e22f3bee92085d254c56e80ee411" translate="yes" xml:space="preserve">
          <source>the name of the ref being updated,</source>
          <target state="translated">被更新的裁判的名字。</target>
        </trans-unit>
        <trans-unit id="3014c8a9cd2a108237e832d80be1b9813ded5367" translate="yes" xml:space="preserve">
          <source>the number of added lines;</source>
          <target state="translated">增加的行数。</target>
        </trans-unit>
        <trans-unit id="77bc4e1c290d6d0e7d5275f3d1658970d12ef416" translate="yes" xml:space="preserve">
          <source>the number of deleted lines;</source>
          <target state="translated">删除的行数;</target>
        </trans-unit>
        <trans-unit id="53884a91a3f8038461cb12756f556960cbfc258f" translate="yes" xml:space="preserve">
          <source>the old object name stored in the ref,</source>
          <target state="translated">存储在ref.中的旧对象名称。</target>
        </trans-unit>
        <trans-unit id="f3e2ec89c99ae8aa7d45095d50e139c625a9eaec" translate="yes" xml:space="preserve">
          <source>the original contents of fileY and the resulting contents of file0 are compared, and if they are similar enough, they are changed to:</source>
          <target state="translated">将fileY的原始内容和产生的file0的内容进行比较,如果两者足够相似,则改为。</target>
        </trans-unit>
        <trans-unit id="626b13a708f2dc035c90e904f1c76c410d7dc1a1" translate="yes" xml:space="preserve">
          <source>the pathspec up to the last slash represents a directory prefix. The scope of that pathspec is limited to that subtree.</source>
          <target state="translated">pathspec到最后一个斜杠代表一个目录前缀。该pathspec的范围仅限于该子树。</target>
        </trans-unit>
        <trans-unit id="e07c0143c019f1d2ef0a1c85d60da5fef5f83106" translate="yes" xml:space="preserve">
          <source>the rest of the pathspec is a pattern for the remainder of the pathname. Paths relative to the directory prefix will be matched against that pattern using fnmatch(3); in particular, '*' and '?' &lt;code&gt;can&lt;/code&gt; match directory separators.</source>
          <target state="translated">pathspec的其余部分是路径名其余部分的模式。相对于目录前缀的路径将使用fnmatch（3）匹配该模式。特别是'*'和'？' &lt;code&gt;can&lt;/code&gt; 匹配目录分隔符。</target>
        </trans-unit>
        <trans-unit id="6e90e21b38406ccab884bc98d434ab66157bf47b" translate="yes" xml:space="preserve">
          <source>the rest of the pathspec is a pattern for the remainder of the pathname. Paths relative to the directory prefix will be matched against that pattern using fnmatch(3); in particular, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt;&lt;code&gt;can&lt;/code&gt; match directory separators.</source>
          <target state="translated">pathspec的其余部分是路径名其余部分的模式。相对于目录前缀的路径将使用fnmatch（3）匹配该模式。特别是 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;?&lt;/code&gt; &lt;code&gt;can&lt;/code&gt; 匹配目录分隔符。</target>
        </trans-unit>
        <trans-unit id="3a343b61373e9c5c8da009f85440398e1fb87edf" translate="yes" xml:space="preserve">
          <source>the result of &lt;code&gt;git merge-base A B C&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;. This is because the equivalent topology with a merge commit &lt;code&gt;M&lt;/code&gt; between &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;git merge-base A B C&lt;/code&gt; 的结果是 &lt;code&gt;1&lt;/code&gt; 。这是因为在 &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 之间具有合并提交 &lt;code&gt;M&lt;/code&gt; 的等效拓扑是：</target>
        </trans-unit>
        <trans-unit id="536d2083a48bc27b81cbb1968f7432966cdcf93d" translate="yes" xml:space="preserve">
          <source>the second column is the object id of the object</source>
          <target state="translated">第二列是对象的对象ID。</target>
        </trans-unit>
        <trans-unit id="76796bccdae9791462d4062e6dd98b4154222fa5" translate="yes" xml:space="preserve">
          <source>the submodule is not updated.</source>
          <target state="translated">子模块不更新。</target>
        </trans-unit>
        <trans-unit id="7190c4fb51dcc85d53868d53b20b3cc2e763e211" translate="yes" xml:space="preserve">
          <source>the time zone is omitted when the local time zone is used</source>
          <target state="translated">当使用当地时区时,时区会被省略。</target>
        </trans-unit>
        <trans-unit id="d8be7211a76bdc70aa49471cc4d6a76e9bc4d158" translate="yes" xml:space="preserve">
          <source>the variable &lt;code&gt;sha1&lt;/code&gt; in the function signature of &lt;code&gt;get_sha1()&lt;/code&gt; is &lt;code&gt;unsigned
char *&lt;/code&gt;, but is actually expected to be a pointer to &lt;code&gt;unsigned
char[20]&lt;/code&gt;. This variable will contain the 160-bit SHA-1 of the given commit. Note that whenever a SHA-1 is passed as &lt;code&gt;unsigned char *&lt;/code&gt;, it is the binary representation, as opposed to the ASCII representation in hex characters, which is passed as &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_sha1()&lt;/code&gt; 的函数签名中的变量 &lt;code&gt;sha1&lt;/code&gt; 是 &lt;code&gt;unsigned char *&lt;/code&gt; ，但实际上应该是指向 &lt;code&gt;unsigned char[20]&lt;/code&gt; 的指针。此变量将包含给定提交的160位SHA-1。请注意，每当SHA-1作为 &lt;code&gt;unsigned char *&lt;/code&gt; 传递时，它都是二进制表示形式，而与十六进制字符的ASCII表示形式相反，它以 &lt;code&gt;char *&lt;/code&gt; 形式传递。</target>
        </trans-unit>
        <trans-unit id="d16d74303205ee1884bba2395511c1f66af12d14" translate="yes" xml:space="preserve">
          <source>theirs</source>
          <target state="translated">theirs</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="734a4ee4f79e318001491629a0c1fe63b58d1fb7" translate="yes" xml:space="preserve">
          <source>then a line like</source>
          <target state="translated">然后是这样一句话</target>
        </trans-unit>
        <trans-unit id="7a15262c8c405ca4a2cf0815d105cbb03e982027" translate="yes" xml:space="preserve">
          <source>then test, run &lt;code&gt;bisect good&lt;/code&gt; or &lt;code&gt;bisect bad&lt;/code&gt; as appropriate, and continue.</source>
          <target state="translated">然后测试，根据需要运行 &lt;code&gt;bisect good&lt;/code&gt; 或 &lt;code&gt;bisect bad&lt;/code&gt; ，然后继续。</target>
        </trans-unit>
        <trans-unit id="19d77647dd7a79a9f0f2213737749b47dce1ce9a" translate="yes" xml:space="preserve">
          <source>then the command</source>
          <target state="translated">然后,该命令</target>
        </trans-unit>
        <trans-unit id="609a326b5fa7159965db8a63d787acf0c96be745" translate="yes" xml:space="preserve">
          <source>then we will match: both protocols are the same, both hosts are the same, and the &quot;pattern&quot; URL does not care about the path component at all. However, this context would not match:</source>
          <target state="translated">那么我们就会匹配:两个协议都是一样的,两个主机都是一样的,而且 &quot;模式 &quot;URL根本不关心路径成分。但是,这种上下文就不匹配了。</target>
        </trans-unit>
        <trans-unit id="41ea1b725a0053e024ec32bad2b8e37679710985" translate="yes" xml:space="preserve">
          <source>then you can ask that to be pulled with</source>
          <target state="translated">那么你就可以要求将其与</target>
        </trans-unit>
        <trans-unit id="cf6fe440662f9d76d8c16519b5ae328feaf69aa0" translate="yes" xml:space="preserve">
          <source>there are more &quot;src&quot; modes and &quot;src&quot; sha1</source>
          <target state="translated">有更多的 &quot;src &quot;模式和 &quot;src &quot;sha1。</target>
        </trans-unit>
        <trans-unit id="c8c4e068f2a8d378781c42af9bb115ec041d2801" translate="yes" xml:space="preserve">
          <source>there is a colon for each parent</source>
          <target state="translated">每个父母都有一个冒号</target>
        </trans-unit>
        <trans-unit id="ecdf2bf737dee73f8ec5a14f4e0f34d3fb6f57d0" translate="yes" xml:space="preserve">
          <source>there is no comma after the day-of-week</source>
          <target state="translated">周日后没有逗号。</target>
        </trans-unit>
        <trans-unit id="c3e63115352a13704c1f39e13a6185e9021397ab" translate="yes" xml:space="preserve">
          <source>this does lstat(2) and finds index does &lt;strong&gt;not&lt;/strong&gt; match the path.</source>
          <target state="translated">这会执行lstat（2）并发现索引与路径&lt;strong&gt;不&lt;/strong&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="85e112b4f47e94f3e4ce4971cc640d98f38603c7" translate="yes" xml:space="preserve">
          <source>this does lstat(2) and finds index matches the path.</source>
          <target state="translated">这将执行lstat(2)并找到与路径匹配的索引。</target>
        </trans-unit>
        <trans-unit id="0b1f7a9c404ebaed8ccaa23a98b6fc8cacefc055" translate="yes" xml:space="preserve">
          <source>this second commit would record the changes to &lt;code&gt;hello.c&lt;/code&gt; and &lt;code&gt;hello.h&lt;/code&gt; as expected.</source>
          <target state="translated">第二次提交将按预期记录对 &lt;code&gt;hello.c&lt;/code&gt; 和 &lt;code&gt;hello.h&lt;/code&gt; 的更改。</target>
        </trans-unit>
        <trans-unit id="00af3fa2d887030d7ab22a8491799bab116ecfc5" translate="yes" xml:space="preserve">
          <source>this will give:</source>
          <target state="translated">这将给。</target>
        </trans-unit>
        <trans-unit id="e80f44d7ec76db207d80130779f298ba9698161b" translate="yes" xml:space="preserve">
          <source>though the above might be done by using &lt;code&gt;$export_ok&lt;/code&gt; instead</source>
          <target state="translated">尽管以上操作可以通过使用 &lt;code&gt;$export_ok&lt;/code&gt; 来完成</target>
        </trans-unit>
        <trans-unit id="6a3ae3aa99f1509f3d5e931a3f2d414e2ab7a554" translate="yes" xml:space="preserve">
          <source>three-dashes and end-of-line, or</source>
          <target state="translated">三横线和线尾,或</target>
        </trans-unit>
        <trans-unit id="95aa06a5114ab186c9377e699cd99c22f48b67ba" translate="yes" xml:space="preserve">
          <source>timed</source>
          <target state="translated">timed</target>
        </trans-unit>
        <trans-unit id="b8ff61c0605108ed3e384a2fc4062eb3c5594238" translate="yes" xml:space="preserve">
          <source>tkdiff</source>
          <target state="translated">tkdiff</target>
        </trans-unit>
        <trans-unit id="d7cdcda18909ba408e3812e443f3d90bcb139496" translate="yes" xml:space="preserve">
          <source>tlsv1</source>
          <target state="translated">tlsv1</target>
        </trans-unit>
        <trans-unit id="03e36f421be7fa8730438d884b9daca792c9680d" translate="yes" xml:space="preserve">
          <source>tlsv1.0</source>
          <target state="translated">tlsv1.0</target>
        </trans-unit>
        <trans-unit id="ba63b9d8b25e41d498a69dbabb69a7736c21eb02" translate="yes" xml:space="preserve">
          <source>tlsv1.1</source>
          <target state="translated">tlsv1.1</target>
        </trans-unit>
        <trans-unit id="fbb19e142c116223f653d14b48fb28f8465ad321" translate="yes" xml:space="preserve">
          <source>tlsv1.2</source>
          <target state="translated">tlsv1.2</target>
        </trans-unit>
        <trans-unit id="62926f1208c3272ad5a3c0ec13eeec840620a666" translate="yes" xml:space="preserve">
          <source>tlsv1.3</source>
          <target state="translated">tlsv1.3</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="fc36b2c7bdd5cc38527b964582d3ab8b4e84ba45" translate="yes" xml:space="preserve">
          <source>to &quot;push&quot; those commits to the shared repository. If someone else has updated the repository more recently, &lt;code&gt;git push&lt;/code&gt;, like &lt;code&gt;cvs commit&lt;/code&gt;, will complain, in which case you must pull any changes before attempting the push again.</source>
          <target state="translated">将这些提交&amp;ldquo;推送&amp;rdquo;到共享存储库。如果其他人最近更新了存储库，则 &lt;code&gt;git push&lt;/code&gt; 会像 &lt;code&gt;cvs commit&lt;/code&gt; 一样抱怨，在这种情况下，您必须先拉出所有更改，然后才能再次尝试推送。</target>
        </trans-unit>
        <trans-unit id="1096f1fb1c84b3b5a2b8624f78ee1b5d78119cb7" translate="yes" xml:space="preserve">
          <source>to be killed</source>
          <target state="translated">遇难</target>
        </trans-unit>
        <trans-unit id="c913fc9e78ba991dcb43b4a3c301e10badeb4b53" translate="yes" xml:space="preserve">
          <source>to check whether a particular branch exists or not (notice how we don&amp;rsquo;t actually want to show any results, and we want to use the full refname for it in order to not trigger the problem with ambiguous partial matches).</source>
          <target state="translated">来检查特定分支是否存在（注意我们实际上并不希望显示任何结果，并且我们想为其使用完整的refname，以免因模棱两可的部分匹配而引发问题）。</target>
        </trans-unit>
        <trans-unit id="5c597c2cc13ad829d34ba8ed2dfb98022a5b4ac2" translate="yes" xml:space="preserve">
          <source>to diff your current state against that tag which at this point will obviously be an empty diff, but if you continue to develop and commit stuff, you can use your tag as an &quot;anchor-point&quot; to see what has changed since you tagged it.</source>
          <target state="translated">将你的当前状态与该标签进行比较,此时显然是一个空的比较,但如果你继续开发和提交东西,你可以将你的标签作为一个 &quot;锚点&quot;,以查看自你给它打上标签后发生了什么变化。</target>
        </trans-unit>
        <trans-unit id="baae04ab138a91016c84734819fa1ebe4f701ba4" translate="yes" xml:space="preserve">
          <source>to get a listing of all tags together with what they dereference.</source>
          <target state="translated">以获得所有标签的列表,以及它们的减义词。</target>
        </trans-unit>
        <trans-unit id="1998b20466317f25b18046ad044345e7dddaad46" translate="yes" xml:space="preserve">
          <source>to indicate that a commit was before the sought change, or</source>
          <target state="translated">表明某次提交是在所寻求的变更之前,或</target>
        </trans-unit>
        <trans-unit id="4ecc02d347c76c71af0fb11accb42e049b7e7869" translate="yes" xml:space="preserve">
          <source>to indicate that it was after.</source>
          <target state="translated">以表示是后。</target>
        </trans-unit>
        <trans-unit id="bdc2fa66437bfeff7576b23af7ece48fa27e6754" translate="yes" xml:space="preserve">
          <source>to populate the index. However, now you have populated the index, and you have all the Git internal files, but you will notice that you don&amp;rsquo;t actually have any of the working tree files to work on. To get those, you&amp;rsquo;d check them out with</source>
          <target state="translated">填充索引。但是，现在您已经填充了索引，并且拥有了所有的Git内部文件，但是您会发现实际上并没有任何可工作的树文件。要获得这些，您可以使用</target>
        </trans-unit>
        <trans-unit id="87f7d8e6f3c121d9335165e5a0c457085bd7405f" translate="yes" xml:space="preserve">
          <source>to remove any of the &quot;loose&quot; objects that are now contained in the pack. This will also remove any unreferenced objects (which may be created when, for example, you use &lt;code&gt;git reset&lt;/code&gt; to remove a commit). You can verify that the loose objects are gone by looking at the &lt;code&gt;.git/objects&lt;/code&gt; directory or by running</source>
          <target state="translated">删除包中现在包含的任何&amp;ldquo;松散&amp;rdquo;对象。这也将删除所有未引用的对象（例如，使用 &lt;code&gt;git reset&lt;/code&gt; 删除提交时可能会创建）。您可以通过查看 &lt;code&gt;.git/objects&lt;/code&gt; 目录或通过运行来验证松散对象是否消失</target>
        </trans-unit>
        <trans-unit id="5a0964ab993b47b2f3c91f922a50aaacf7d74114" translate="yes" xml:space="preserve">
          <source>to reset the &lt;code&gt;HEAD&lt;/code&gt; to another commit (&lt;code&gt;target&lt;/code&gt;) with the different reset options depending on the state of the files.</source>
          <target state="translated">根据文件的状态使用不同的重置选项将 &lt;code&gt;HEAD&lt;/code&gt; 重置为另一个提交（ &lt;code&gt;target&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c3c07eeee65ae79bf45d3373983c303be6ce5ef2" translate="yes" xml:space="preserve">
          <source>to return you to the branch you were on before.</source>
          <target state="translated">让你回到你之前所在的分支。</target>
        </trans-unit>
        <trans-unit id="d5d795d0339909082461e4b019d4d1e60397bb9c" translate="yes" xml:space="preserve">
          <source>to see what changes you are committing.</source>
          <target state="translated">以查看您正在进行的更改。</target>
        </trans-unit>
        <trans-unit id="e16b1541c7ea14a2315638e9ef83ab39659fdd48" translate="yes" xml:space="preserve">
          <source>to see what the top commit was.</source>
          <target state="translated">来看看最高承诺是什么。</target>
        </trans-unit>
        <trans-unit id="754cb0508274db285b6137ad87c8a8afe57e78f4" translate="yes" xml:space="preserve">
          <source>to show its contents. NOTE! Trees have binary content, and as a result there is a special helper for showing that content, called &lt;code&gt;git ls-tree&lt;/code&gt;, which turns the binary content into a more easily readable form.</source>
          <target state="translated">显示其内容。注意！树具有二进制内容，因此有一个特殊的帮助程序来显示该内容，称为 &lt;code&gt;git ls-tree&lt;/code&gt; ，它将二进制内容转换为更易于阅读的形式。</target>
        </trans-unit>
        <trans-unit id="f460116ca08908db50804d4cc6c9b82c66e4dfa0" translate="yes" xml:space="preserve">
          <source>to show what the contents of the blob were (or, for a tree, basically what the &lt;code&gt;ls&lt;/code&gt; for that directory was), and that may give you some idea of what the operation was that left that dangling object.</source>
          <target state="translated">以显示blob的内容是什么（或者对于一棵树，基本上是该目录的 &lt;code&gt;ls&lt;/code&gt; 是什么），这可能使您对剩下的那个悬挂对象的操作有了一些了解。</target>
        </trans-unit>
        <trans-unit id="71775ebf05a620d5ce1967e9dc8f2d77fe67f152" translate="yes" xml:space="preserve">
          <source>to switch to the experimental branch. Now edit a file, commit the change, and switch back to the master branch:</source>
          <target state="translated">来切换到实验分支。现在编辑一个文件,提交更改,然后切换回主分支。</target>
        </trans-unit>
        <trans-unit id="0efdf0949a0d7cf206617a8fc9bfae931a3e8dbf" translate="yes" xml:space="preserve">
          <source>to which Git will reply</source>
          <target state="translated">Git会回答</target>
        </trans-unit>
        <trans-unit id="af2c7b4ca07ae6c74d261bc745e174df8ab3ffef" translate="yes" xml:space="preserve">
          <source>top</source>
          <target state="translated">top</target>
        </trans-unit>
        <trans-unit id="ff0b8ed194196f73aa2cba3c7fcde93556d873ca" translate="yes" xml:space="preserve">
          <source>topic branch</source>
          <target state="translated">主题分支</target>
        </trans-unit>
        <trans-unit id="e7f47fade511c112eb9ce742c56ed861b734b620" translate="yes" xml:space="preserve">
          <source>tortoisemerge</source>
          <target state="translated">tortoisemerge</target>
        </trans-unit>
        <trans-unit id="e326dfc19cd0774746d95277a8cf4e9fa4f7c287" translate="yes" xml:space="preserve">
          <source>trace2.configParams</source>
          <target state="translated">trace2.configParams</target>
        </trans-unit>
        <trans-unit id="84b6ba9798438e4540679b8cf7612d87b1ba949c" translate="yes" xml:space="preserve">
          <source>trace2.destinationDebug</source>
          <target state="translated">trace2.destinationDebug</target>
        </trans-unit>
        <trans-unit id="72def9d30c1872d5f2f2f6977ae7729c93ac5997" translate="yes" xml:space="preserve">
          <source>trace2.envVars</source>
          <target state="translated">trace2.envVars</target>
        </trans-unit>
        <trans-unit id="6d514127ff2e573ddc54e9bf2166854bc06ab455" translate="yes" xml:space="preserve">
          <source>trace2.eventBrief</source>
          <target state="translated">trace2.eventBrief</target>
        </trans-unit>
        <trans-unit id="69f87593667431504eb5fd6824de7d37117de65b" translate="yes" xml:space="preserve">
          <source>trace2.eventNesting</source>
          <target state="translated">trace2.eventNesting</target>
        </trans-unit>
        <trans-unit id="7e5915da7655503c4622875c67fb0c7ac2fa84a5" translate="yes" xml:space="preserve">
          <source>trace2.eventTarget</source>
          <target state="translated">trace2.eventTarget</target>
        </trans-unit>
        <trans-unit id="4fc5266dc4218591cd2e542e1c0102e3eba14e4a" translate="yes" xml:space="preserve">
          <source>trace2.maxFiles</source>
          <target state="translated">trace2.maxFiles</target>
        </trans-unit>
        <trans-unit id="2af0329f61af176ab095d526188b00b006ce542b" translate="yes" xml:space="preserve">
          <source>trace2.normalBrief</source>
          <target state="translated">trace2.normalBrief</target>
        </trans-unit>
        <trans-unit id="59526cf70842a11cfce4927b101fa66eb900054c" translate="yes" xml:space="preserve">
          <source>trace2.normalTarget</source>
          <target state="translated">trace2.normalTarget</target>
        </trans-unit>
        <trans-unit id="7d14b55c2ecd88649b27ae12ba844c283f258f93" translate="yes" xml:space="preserve">
          <source>trace2.perfBrief</source>
          <target state="translated">trace2.perfBrief</target>
        </trans-unit>
        <trans-unit id="3a24627f4df5bdec676dc23ee3e93b997ffb2da5" translate="yes" xml:space="preserve">
          <source>trace2.perfTarget</source>
          <target state="translated">trace2.perfTarget</target>
        </trans-unit>
        <trans-unit id="153812002d92c176ab29d9c71b43ddfa73d085e1" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.command</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.command</target>
        </trans-unit>
        <trans-unit id="3696c05806744460af18519c82c1a21a52864e21" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.ifexists</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.ifexists</target>
        </trans-unit>
        <trans-unit id="0bf2cead7f9e1bdddd1b83ac95ae5dc2c3078a25" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.ifmissing</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.ifmissing</target>
        </trans-unit>
        <trans-unit id="fdd0e772f248ae1ecfd13d2d6b6e2377bcc05bc9" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.key</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.key</target>
        </trans-unit>
        <trans-unit id="0dc6029ecbb82dae9f313eb724c69e3d9b6ccb2a" translate="yes" xml:space="preserve">
          <source>trailer.&amp;lt;token&amp;gt;.where</source>
          <target state="translated">trailer.&amp;lt;token&amp;gt;.where</target>
        </trans-unit>
        <trans-unit id="560d035290956ae79cd1def3be7aebcad0575655" translate="yes" xml:space="preserve">
          <source>trailer.ifexists</source>
          <target state="translated">trailer.ifexists</target>
        </trans-unit>
        <trans-unit id="8bf9e31902ab95d738f445c0deb2d29d9df1d4b0" translate="yes" xml:space="preserve">
          <source>trailer.ifmissing</source>
          <target state="translated">trailer.ifmissing</target>
        </trans-unit>
        <trans-unit id="42c95617cb4a7b809df0d90693439c4a70b41f21" translate="yes" xml:space="preserve">
          <source>trailer.separators</source>
          <target state="translated">trailer.separators</target>
        </trans-unit>
        <trans-unit id="d7fe097012b1d9de2262e0f43245a9993263c616" translate="yes" xml:space="preserve">
          <source>trailer.where</source>
          <target state="translated">trailer.where</target>
        </trans-unit>
        <trans-unit id="59b7338cf6f2181ad4eef2fe004652a529db451f" translate="yes" xml:space="preserve">
          <source>transfer.advertiseSID</source>
          <target state="translated">transfer.advertiseSID</target>
        </trans-unit>
        <trans-unit id="12b9b7b269b613f9bd084bb3bfa8a7a5eda1920d" translate="yes" xml:space="preserve">
          <source>transfer.fsckObjects</source>
          <target state="translated">transfer.fsckObjects</target>
        </trans-unit>
        <trans-unit id="e88f7f6237acfdce6d6905de1ada59d116c112ea" translate="yes" xml:space="preserve">
          <source>transfer.hideRefs</source>
          <target state="translated">transfer.hideRefs</target>
        </trans-unit>
        <trans-unit id="950a72c962edf6b43c6bbcd2478b8ba9e7137bf6" translate="yes" xml:space="preserve">
          <source>transfer.unpackLimit</source>
          <target state="translated">transfer.unpackLimit</target>
        </trans-unit>
        <trans-unit id="80655da8d80aaaf92ce5357e7828dc09adb00993" translate="yes" xml:space="preserve">
          <source>tree</source>
          <target state="translated">tree</target>
        </trans-unit>
        <trans-unit id="0838e728517489b7053c785510a972cda98ae010" translate="yes" xml:space="preserve">
          <source>tree hash</source>
          <target state="translated">树状散列</target>
        </trans-unit>
        <trans-unit id="04ba9ed331f1eaa7618aefb1db4da5988463404d" translate="yes" xml:space="preserve">
          <source>tree object</source>
          <target state="translated">树状物</target>
        </trans-unit>
        <trans-unit id="6503ff33aabb329cc76379b0e30e290446364392" translate="yes" xml:space="preserve">
          <source>tree-ish (also treeish)</source>
          <target state="translated">参天大树</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="4d479bfed6725bed52941b5bf8c8c4931ae539f0" translate="yes" xml:space="preserve">
          <source>try to apply the change introduced by &lt;code&gt;topic^&lt;/code&gt; again, spending extra time to avoid mistakes based on incorrectly matching context lines.</source>
          <target state="translated">尝试再次应用 &lt;code&gt;topic^&lt;/code&gt; 引入的更改，花费额外的时间来避免基于错误匹配的上下文行而导致的错误。</target>
        </trans-unit>
        <trans-unit id="9812907464fcb78e1983d9ca4de2c7400a34a252" translate="yes" xml:space="preserve">
          <source>uname sysname, release, version, and machine strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6d88e21fd8a88a672363e28e6206cab9c5b989" translate="yes" xml:space="preserve">
          <source>unbundle &amp;lt;file&amp;gt;</source>
          <target state="translated">解除捆绑&amp;lt;文件&amp;gt;</target>
        </trans-unit>
        <trans-unit id="67ad5a07a2b999e38f2228365318c33459ab727a" translate="yes" xml:space="preserve">
          <source>union</source>
          <target state="translated">union</target>
        </trans-unit>
        <trans-unit id="137378ee6cb25729ca5fe8ee9720b2f98e94bd3e" translate="yes" xml:space="preserve">
          <source>unless &lt;code&gt;-z&lt;/code&gt; is in effect, in which case NUL is used as delimiter: &amp;lt;path&amp;gt; NUL &amp;lt;attribute&amp;gt; NUL &amp;lt;info&amp;gt; NUL</source>
          <target state="translated">除非 &lt;code&gt;-z&lt;/code&gt; 有效，否则将NUL用作分隔符：&amp;lt;path&amp;gt; NUL &amp;lt;attribute&amp;gt; NUL &amp;lt;info&amp;gt; NUL</target>
        </trans-unit>
        <trans-unit id="8ec4981102569463be3512984154c66c098b92c5" translate="yes" xml:space="preserve">
          <source>unlock</source>
          <target state="translated">unlock</target>
        </trans-unit>
        <trans-unit id="e9e70a06e6515a7fcc3845d5535a3661f719203f" translate="yes" xml:space="preserve">
          <source>unmerged</source>
          <target state="translated">unmerged</target>
        </trans-unit>
        <trans-unit id="87f1596878b66cf5e5ead3a6d979fdfc839c617e" translate="yes" xml:space="preserve">
          <source>unmerged index</source>
          <target state="translated">无形指数</target>
        </trans-unit>
        <trans-unit id="5cb51aacbf9b02b324952d80b22a4098fc042126" translate="yes" xml:space="preserve">
          <source>unreachable &amp;lt;type&amp;gt; &amp;lt;object&amp;gt;</source>
          <target state="translated">无法访问的&amp;lt;类型&amp;gt; &amp;lt;对象&amp;gt;</target>
        </trans-unit>
        <trans-unit id="103062cf5683650b86cf685307f0a04f2b33bef3" translate="yes" xml:space="preserve">
          <source>unreachable object</source>
          <target state="translated">遥不可及物</target>
        </trans-unit>
        <trans-unit id="6e736da0538cc13b3027e1b2df7d4e15fe99d3c2" translate="yes" xml:space="preserve">
          <source>unregister</source>
          <target state="translated">unregister</target>
        </trans-unit>
        <trans-unit id="d7390aa3e7289506746a90490cae21f0dfa03b28" translate="yes" xml:space="preserve">
          <source>untracked</source>
          <target state="translated">untracked</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="24160258b921a335b9505945039d8e708ad666e8" translate="yes" xml:space="preserve">
          <source>update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference &amp;lt;repository&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [--recursive] [--jobs &amp;lt;n&amp;gt;] [--[no-]single-branch] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbe6775d22eb31a8bd3b29faabdf538b6b9eea4" translate="yes" xml:space="preserve">
          <source>update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference &amp;lt;repository&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [--recursive] [--jobs &amp;lt;n&amp;gt;] [--] [&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">更新[--init] [--remote] [-N | --no-fetch] [-[no-]推荐浅] [-f | --force] [--checkout | --rebase |- -merge] [--reference &amp;lt;存储库&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [-递归] [--jobs &amp;lt;n&amp;gt;] [-] [&amp;lt;path&amp;gt; ...</target>
        </trans-unit>
        <trans-unit id="de7ed0b25b2588b00f2aeadec850d6f2f427931a" translate="yes" xml:space="preserve">
          <source>update stat information for the checked out entries in the index file.</source>
          <target state="translated">更新索引文件中签出条目的统计信息。</target>
        </trans-unit>
        <trans-unit id="8800c9f265f305184119c8930414ff46e45222ae" translate="yes" xml:space="preserve">
          <source>update-index</source>
          <target state="translated">update-index</target>
        </trans-unit>
        <trans-unit id="7c33ba1b93097a7db8596ac034da1984cf697bef" translate="yes" xml:space="preserve">
          <source>update-ref</source>
          <target state="translated">update-ref</target>
        </trans-unit>
        <trans-unit id="d8f0e457e823eb34a4066d2e4f4181d404778acb" translate="yes" xml:space="preserve">
          <source>update-server-info</source>
          <target state="translated">update-server-info</target>
        </trans-unit>
        <trans-unit id="512447b5e9909d5d949b94f89d29bf96dab2f966" translate="yes" xml:space="preserve">
          <source>upload-archive</source>
          <target state="translated">upload-archive</target>
        </trans-unit>
        <trans-unit id="e9a66229ec29fdea46480657259f6e6de3e97318" translate="yes" xml:space="preserve">
          <source>upload-pack</source>
          <target state="translated">upload-pack</target>
        </trans-unit>
        <trans-unit id="b01dc9643f6074fed79f1b86c0da57aafb4405ea" translate="yes" xml:space="preserve">
          <source>uploadarchive.allowUnreachable</source>
          <target state="translated">uploadarchive.allowUnreachable</target>
        </trans-unit>
        <trans-unit id="e9f54a6008ee27e95f09272ec604da3b227a11df" translate="yes" xml:space="preserve">
          <source>uploadpack.allowAnySHA1InWant</source>
          <target state="translated">uploadpack.allowAnySHA1InWant</target>
        </trans-unit>
        <trans-unit id="0ad20ae1b6701a727742b3f64b9a3da8c51f0115" translate="yes" xml:space="preserve">
          <source>uploadpack.allowFilter</source>
          <target state="translated">uploadpack.allowFilter</target>
        </trans-unit>
        <trans-unit id="9980c1a293f4a2bf4aa61230af04946507fff558" translate="yes" xml:space="preserve">
          <source>uploadpack.allowReachableSHA1InWant</source>
          <target state="translated">uploadpack.allowReachableSHA1InWant</target>
        </trans-unit>
        <trans-unit id="76e7c8b5028e67edd5a2d0bf74fffe692316c0c9" translate="yes" xml:space="preserve">
          <source>uploadpack.allowRefInWant</source>
          <target state="translated">uploadpack.allowRefInWant</target>
        </trans-unit>
        <trans-unit id="1c700cd4d8bc2ab2c6bb78529ca0b2b9ddfe0402" translate="yes" xml:space="preserve">
          <source>uploadpack.allowTipSHA1InWant</source>
          <target state="translated">uploadpack.allowTipSHA1InWant</target>
        </trans-unit>
        <trans-unit id="de2160f36b4587455cda8c5053c1b5faf06316a1" translate="yes" xml:space="preserve">
          <source>uploadpack.hideRefs</source>
          <target state="translated">uploadpack.hideRefs</target>
        </trans-unit>
        <trans-unit id="92a5fcbdf4c8b0e617a06a2928f4540d85e9485e" translate="yes" xml:space="preserve">
          <source>uploadpack.keepAlive</source>
          <target state="translated">uploadpack.keepAlive</target>
        </trans-unit>
        <trans-unit id="0506b4256a296513f644c108c682e13ec69264dd" translate="yes" xml:space="preserve">
          <source>uploadpack.packObjectsHook</source>
          <target state="translated">uploadpack.packObjectsHook</target>
        </trans-unit>
        <trans-unit id="3152dc1545424b435df52ef989b882b5b4289a18" translate="yes" xml:space="preserve">
          <source>uploadpackfilter.&amp;lt;filter&amp;gt;.allow</source>
          <target state="translated">uploadpackfilter.&amp;lt;filter&amp;gt;.allow</target>
        </trans-unit>
        <trans-unit id="cc240b0c3f402b05f22370005dea93a94a85a4c6" translate="yes" xml:space="preserve">
          <source>uploadpackfilter.allow</source>
          <target state="translated">uploadpackfilter.allow</target>
        </trans-unit>
        <trans-unit id="b4c7ba7ec1c7eaa153d3476931a6406c5e1def8f" translate="yes" xml:space="preserve">
          <source>uploadpackfilter.tree.maxDepth</source>
          <target state="translated">uploadpackfilter.tree.maxDepth</target>
        </trans-unit>
        <trans-unit id="fd54d5aa0112760b77af49308da7e6c75ab1adf2" translate="yes" xml:space="preserve">
          <source>upstream</source>
          <target state="translated">upstream</target>
        </trans-unit>
        <trans-unit id="1455829fd1ff6506e053f2710d666ff5c379e6a6" translate="yes" xml:space="preserve">
          <source>upstream branch</source>
          <target state="translated">上游分支</target>
        </trans-unit>
        <trans-unit id="81559f421583e2f790f0a952c90abcb5e6d0dc46" translate="yes" xml:space="preserve">
          <source>url.&amp;lt;base&amp;gt;.insteadOf</source>
          <target state="translated">url.&amp;lt;base&amp;gt;.insteadOf</target>
        </trans-unit>
        <trans-unit id="e80eb9d4b905bae0c793e9070e3f7e649138cdc6" translate="yes" xml:space="preserve">
          <source>url.&amp;lt;base&amp;gt;.pushInsteadOf</source>
          <target state="translated">url.&amp;lt;base&amp;gt;.pushInsteadOf</target>
        </trans-unit>
        <trans-unit id="c629ba0ed3388c36c69d161bf77f96f320185dc3" translate="yes" xml:space="preserve">
          <source>usage</source>
          <target state="translated">usage</target>
        </trans-unit>
        <trans-unit id="2b60216a5b26ac74c1234626d409316d9bfab434" translate="yes" xml:space="preserve">
          <source>use &quot;git bisect run&quot; to find the commit that introduced it</source>
          <target state="translated">使用 &quot;git bisect run &quot;找到引入它的提交。</target>
        </trans-unit>
        <trans-unit id="6aa98016ecb7393fd7747a7aed804b9c0dc3e662" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git commit --amend&lt;/code&gt; to replace already-published commits (as in &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Fixing a mistake by rewriting history&lt;/a&gt;), or</source>
          <target state="translated">使用 &lt;code&gt;git commit --amend&lt;/code&gt; 替换已经发布的提交（如&lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;通过重写历史记录&lt;/a&gt;纠正错误），或者</target>
        </trans-unit>
        <trans-unit id="cca22b12c3be86ba57e15a5c2b62ec89d58b2d85" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git rebase&lt;/code&gt; to rebase any already-published commits (as in &lt;a href=&quot;#using-git-rebase&quot;&gt;Keeping a patch series up to date using git rebase&lt;/a&gt;).</source>
          <target state="translated">使用 &lt;code&gt;git rebase&lt;/code&gt; 对所有已经发布的提交进行基准化（如&lt;a href=&quot;#using-git-rebase&quot;&gt;使用git rebase使补丁系列保持最新&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e13bf6e7db4e47b3278c089e3de1ac662487bee3" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;git reset --hard&lt;/code&gt; to remove already-published commits, or</source>
          <target state="translated">使用 &lt;code&gt;git reset --hard&lt;/code&gt; 删除已经发布的提交，或者</target>
        </trans-unit>
        <trans-unit id="5af4d6aab9c8a9022be8e271e6678ad14e5a6872" translate="yes" xml:space="preserve">
          <source>use update-hook example by Carl from Documentation/howto/ for branch policy control.</source>
          <target state="translated">使用Documentation/howto/中Carl的update-hook例子进行分支策略控制。</target>
        </trans-unit>
        <trans-unit id="8436f859f1937cf17e90898a5c03c76ed5a2d07e" translate="yes" xml:space="preserve">
          <source>useHttpPath</source>
          <target state="translated">useHttpPath</target>
        </trans-unit>
        <trans-unit id="14220bce4fd35011b7e5b728db4a1f14654eaa0a" translate="yes" xml:space="preserve">
          <source>used to specify additional object database roots (usually unset)</source>
          <target state="translated">用于指定额外的对象数据库根(通常未设置)。</target>
        </trans-unit>
        <trans-unit id="06cfdf70e840c73403ae919811f63150b4226152" translate="yes" xml:space="preserve">
          <source>used to specify the index file of the index</source>
          <target state="translated">用于指定索引文件的索引</target>
        </trans-unit>
        <trans-unit id="19cbce775f460b884658342deb067fb202761064" translate="yes" xml:space="preserve">
          <source>used to specify the object database root (usually $GIT_DIR/objects)</source>
          <target state="translated">用于指定对象数据库根目录(通常是$GIT_DIR/objects)</target>
        </trans-unit>
        <trans-unit id="8a0a9d26f3c9c3a0e73ff6efa5a8a582a5526fb9" translate="yes" xml:space="preserve">
          <source>user-manual</source>
          <target state="translated">user-manual</target>
        </trans-unit>
        <trans-unit id="20afd5b376ab9ffb3cfe083496345d7e9d11d9f5" translate="yes" xml:space="preserve">
          <source>user.email</source>
          <target state="translated">user.email</target>
        </trans-unit>
        <trans-unit id="8377b2516ed4c658297caaad0fc246ab7085395a" translate="yes" xml:space="preserve">
          <source>user.name</source>
          <target state="translated">user.name</target>
        </trans-unit>
        <trans-unit id="6f24e0995d40d8ab3b1fce4941e6137ba246d0d7" translate="yes" xml:space="preserve">
          <source>user.signingKey</source>
          <target state="translated">user.signingKey</target>
        </trans-unit>
        <trans-unit id="367ade158fa2424e8aeda8bf7ebf0c29c1189658" translate="yes" xml:space="preserve">
          <source>user.useConfigOnly</source>
          <target state="translated">user.useConfigOnly</target>
        </trans-unit>
        <trans-unit id="249ba36000029bbe97499c03db5a9001f6b734ec" translate="yes" xml:space="preserve">
          <source>username</source>
          <target state="translated">username</target>
        </trans-unit>
        <trans-unit id="9535b89508d27a34b138c29184ababa5cb240fd8" translate="yes" xml:space="preserve">
          <source>various &lt;code&gt;gitweb.*&lt;/code&gt; config variables (in config)</source>
          <target state="translated">各种 &lt;code&gt;gitweb.*&lt;/code&gt; 配置变量（在config中）</target>
        </trans-unit>
        <trans-unit id="d99a2118f45121587f2aa88f0bbe3e6a0222afec" translate="yes" xml:space="preserve">
          <source>verbatim</source>
          <target state="translated">verbatim</target>
        </trans-unit>
        <trans-unit id="86a4261d849a6e99b3c3a38f7585e3c7d4a91823" translate="yes" xml:space="preserve">
          <source>verify</source>
          <target state="translated">verify</target>
        </trans-unit>
        <trans-unit id="57726e9f75b24544e1dd437342d5819f250ed863" translate="yes" xml:space="preserve">
          <source>verify &amp;lt;file&amp;gt;</source>
          <target state="translated">验证&amp;lt;文件&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0107d8cf69279d0390724340b1d8ca795eef7fc1" translate="yes" xml:space="preserve">
          <source>verify-pack</source>
          <target state="translated">verify-pack</target>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>
        </trans-unit>
        <trans-unit id="f9d7293026c6c5738a459824b327b08276645dd4" translate="yes" xml:space="preserve">
          <source>versionsort.prereleaseSuffix (deprecated)</source>
          <target state="translated">versionsort.prereleaseSuffix(已废弃)</target>
        </trans-unit>
        <trans-unit id="3b8b588688e2bc65e248cc78737d585193e9bc94" translate="yes" xml:space="preserve">
          <source>versionsort.suffix</source>
          <target state="translated">versionsort.suffix</target>
        </trans-unit>
        <trans-unit id="76c03587844f33d96ff349b00127e2bafec645b8" translate="yes" xml:space="preserve">
          <source>view only the changes that touch what&amp;rsquo;s in &lt;code&gt;curses/&lt;/code&gt; directory, since &lt;code&gt;v2.43&lt;/code&gt; tag.</source>
          <target state="translated">自 &lt;code&gt;v2.43&lt;/code&gt; 标记以来，仅查看与 &lt;code&gt;curses/&lt;/code&gt; 目录中的内容相关的更改。</target>
        </trans-unit>
        <trans-unit id="2966e23fe80a84357873ff7f6bbaedb6e0a87390" translate="yes" xml:space="preserve">
          <source>vimdiff</source>
          <target state="translated">vimdiff</target>
        </trans-unit>
        <trans-unit id="60e25616bd16037146fe54ebc9cf83452171f8f9" translate="yes" xml:space="preserve">
          <source>vimdiff2</source>
          <target state="translated">vimdiff2</target>
        </trans-unit>
        <trans-unit id="5c0f766121e387dca2f4cfc4670976daa43bfd9e" translate="yes" xml:space="preserve">
          <source>vimdiff3</source>
          <target state="translated">vimdiff3</target>
        </trans-unit>
        <trans-unit id="95fc513468d6fa2b3cc459234cdc5f2a5c42095a" translate="yes" xml:space="preserve">
          <source>w3m (this is the default outside graphical environments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7e2fdf191c778d5ba44fbad0cf470a206e7b75" translate="yes" xml:space="preserve">
          <source>waitingForEditor</source>
          <target state="translated">waitingForEditor</target>
        </trans-unit>
        <trans-unit id="66616ddc89e541629232ca748badd2e1a332dfad" translate="yes" xml:space="preserve">
          <source>was around even in the initial commit (it literally went only through some 20 revisions as &lt;code&gt;cat-file.c&lt;/code&gt;, was renamed to &lt;code&gt;builtin/cat-file.c&lt;/code&gt; when made a builtin, and then saw less than 10 versions).</source>
          <target state="translated">即使在最初的提交中也是如此（它实际上只经过了约20个修订，如 &lt;code&gt;cat-file.c&lt;/code&gt; ，在构建为 &lt;code&gt;builtin/cat-file.c&lt;/code&gt; 时被重命名为buildin / cat-file.c，然后看到了不到10个版本）。</target>
        </trans-unit>
        <trans-unit id="ac9526cb46eaa5a9288d3e315daa3dc641c086bc" translate="yes" xml:space="preserve">
          <source>we get:</source>
          <target state="translated">我们得到。</target>
        </trans-unit>
        <trans-unit id="09fae17d882282030fbb878ca19b18d2fad6f0d3" translate="yes" xml:space="preserve">
          <source>web.browser</source>
          <target state="translated">web.browser</target>
        </trans-unit>
        <trans-unit id="13648f0850cced745ce6c2e47e0247e9addd6599" translate="yes" xml:space="preserve">
          <source>what you would commit is a pure merge between $JC and $LT without your work-in-progress changes, and your work tree would be updated to the result of the merge.</source>
          <target state="translated">你要提交的是在$JC和$LT之间的纯粹合并,而不包括你的工作进程中的变化,你的工作树将被更新为合并的结果。</target>
        </trans-unit>
        <trans-unit id="137f4cd31b8ac9c70eec522616911797956466d6" translate="yes" xml:space="preserve">
          <source>when a command-line option takes an argument, use the &lt;code&gt;stuck&lt;/code&gt; form. In other words, write &lt;code&gt;git foo -oArg&lt;/code&gt; instead of &lt;code&gt;git foo -o Arg&lt;/code&gt; for short options, and &lt;code&gt;git foo --long-opt=Arg&lt;/code&gt; instead of &lt;code&gt;git foo --long-opt Arg&lt;/code&gt; for long options. An option that takes optional option-argument must be written in the &lt;code&gt;stuck&lt;/code&gt; form.</source>
          <target state="translated">当命令行选项接受参数时，请使用 &lt;code&gt;stuck&lt;/code&gt; 格式。换句话说，对于短选项，请写 &lt;code&gt;git foo -oArg&lt;/code&gt; 而不是 &lt;code&gt;git foo -o Arg&lt;/code&gt; ;对于长选项，请写 &lt;code&gt;git foo --long-opt=Arg&lt;/code&gt; 而不是 &lt;code&gt;git foo --long-opt Arg&lt;/code&gt; 。带有可选选项参数的选项必须以 &lt;code&gt;stuck&lt;/code&gt; 形式编写。</target>
        </trans-unit>
        <trans-unit id="08b790ee030967e5fea6436523ed6a46fee2a8ca" translate="yes" xml:space="preserve">
          <source>when a value has been assigned to the attribute.</source>
          <target state="translated">当一个值被分配给属性时。</target>
        </trans-unit>
        <trans-unit id="bd8c81a2992e0b1998e552805e680f4888b2a043" translate="yes" xml:space="preserve">
          <source>when both sides add a path identically. The resolution is to add that path.</source>
          <target state="translated">当两边相同添加一条路径时。解决的办法是添加该路径。</target>
        </trans-unit>
        <trans-unit id="2d207b6cc1bf36fa789982a41623696fe9f755d0" translate="yes" xml:space="preserve">
          <source>when both sides remove a path. The resolution is to remove that path.</source>
          <target state="translated">当双方删除一条路径时。的决议是删除该路径。</target>
        </trans-unit>
        <trans-unit id="3d03042c83c6e553530f093187f85bf4aa45e20b" translate="yes" xml:space="preserve">
          <source>when one side removes a path and the other side leaves the path unmodified. The resolution is to remove that path.</source>
          <target state="translated">当一方删除一条路径,另一方不修改该路径时。解决方法是删除该路径。</target>
        </trans-unit>
        <trans-unit id="7bbeb708459bbcd9a6f801c204710e9fd9a8d5bb" translate="yes" xml:space="preserve">
          <source>when present, is a number indicating the repository in use. A &lt;code&gt;def_repo&lt;/code&gt; event is emitted when a repository is opened. This defines the repo-id and associated worktree. Subsequent repo-specific events will reference this repo-id.</source>
          <target state="translated">（如果存在）是一个数字，指示正在使用的存储库。一个 &lt;code&gt;def_repo&lt;/code&gt; 一个仓库被打开时所照射的事件。这定义了回购ID和关联的工作树。随后的特定于回购的事件将引用此回购ID。</target>
        </trans-unit>
        <trans-unit id="83496d864a76156de7b373c1dc26c24cf9f74457" translate="yes" xml:space="preserve">
          <source>when present, is the absolute time in seconds since the program started.</source>
          <target state="translated">当存在时,是程序启动后的绝对时间(秒)。</target>
        </trans-unit>
        <trans-unit id="0f286b51998ec004e7a92508de17e60f69036edf" translate="yes" xml:space="preserve">
          <source>when present, is the integer repo-id as described previously.</source>
          <target state="translated">当存在时,是前面描述的整数repo-id。</target>
        </trans-unit>
        <trans-unit id="1b336fa06d8b7b5fe9a5c6e111c3fdda14d52cf1" translate="yes" xml:space="preserve">
          <source>when present, is time in seconds relative to the start of the current region. For a thread-exit event, it is the elapsed time of the thread.</source>
          <target state="translated">当存在时,是相对于当前区域开始的时间(秒)。对于线程退出事件,它是线程的经过时间。</target>
        </trans-unit>
        <trans-unit id="b709f35d3230034176fc1c1e01219c2845c0eb5a" translate="yes" xml:space="preserve">
          <source>when the attribute is defined as false.</source>
          <target state="translated">当属性被定义为false时。</target>
        </trans-unit>
        <trans-unit id="e28c0b89e2b87778e723d62b0659e8f5ba4f9c34" translate="yes" xml:space="preserve">
          <source>when the attribute is defined as true.</source>
          <target state="translated">当属性被定义为 &quot;true &quot;时。</target>
        </trans-unit>
        <trans-unit id="6e1005615786e751b99ef410482e0253e7f9d22c" translate="yes" xml:space="preserve">
          <source>when the attribute is not defined for the path.</source>
          <target state="translated">当路径的属性没有定义时。</target>
        </trans-unit>
        <trans-unit id="f2781c2523395778abf3162f254d2fde0e3118bd" translate="yes" xml:space="preserve">
          <source>when you give a revision parameter to a command, make sure the parameter is not ambiguous with a name of a file in the work tree. E.g. do not write &lt;code&gt;git log -1 HEAD&lt;/code&gt; but write &lt;code&gt;git log -1 HEAD --&lt;/code&gt;; the former will not work if you happen to have a file called &lt;code&gt;HEAD&lt;/code&gt; in the work tree.</source>
          <target state="translated">当您给命令提供修订参数时，请确保该参数与工作树中的文件名没有歧义。例如，不要写 &lt;code&gt;git log -1 HEAD&lt;/code&gt; 而是写 &lt;code&gt;git log -1 HEAD --&lt;/code&gt; ; 如果您恰巧在工作树中有一个名为 &lt;code&gt;HEAD&lt;/code&gt; 的文件，则前者将不起作用。</target>
        </trans-unit>
        <trans-unit id="47ca071da5c62ba77534b087609b8b85e0d8c8eb" translate="yes" xml:space="preserve">
          <source>where &amp;lt;address&amp;gt; may be a path, a server and path, or an arbitrary URL-like string recognized by the specific remote helper being invoked. See &lt;a href=&quot;gitremote-helpers&quot;&gt;gitremote-helpers[7]&lt;/a&gt; for details.</source>
          <target state="translated">其中，&amp;lt;地址&amp;gt;可以是路径，服务器和路径，也可以是被调用的特定远程帮助程序识别的类似于URL的任意字符串。有关详细信息，请参见&lt;a href=&quot;gitremote-helpers&quot;&gt;gitremote-helpers [7]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24c59a78c92d0ad55dbe8e10d65d8b798665d46c" translate="yes" xml:space="preserve">
          <source>where &amp;lt;name&amp;gt; is the name of the SVN repository as specified by the -R option to &lt;code&gt;init&lt;/code&gt; (or &quot;svn&quot; by default).</source>
          <target state="translated">其中，&amp;lt;name&amp;gt;是SVN储存库的名称，由 &lt;code&gt;init&lt;/code&gt; 的-R选项指定（默认为&amp;ldquo; svn&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="74848e7cc115cf20b7519259e0e3648c5c84ed72" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; is the exact number of bytes appearing within &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;. The value of &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; is expressed as an ASCII decimal integer. The &lt;code&gt;LF&lt;/code&gt; on either side of &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; is not included in &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; and will not be included in the imported data.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 中出现的确切字节数。的值 &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 被表示为ASCII十进制整数。 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 两侧的 &lt;code&gt;LF&lt;/code&gt; 不包含在 &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 中，也不会包含在导入的数据中。</target>
        </trans-unit>
        <trans-unit id="83ee8dfa0bb9c2d22d2dddae831ac4bc22f7f85e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; is the chosen delimiter string. The string &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; must not appear on a line by itself within &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;, as otherwise fast-import will think the data ends earlier than it really does. The &lt;code&gt;LF&lt;/code&gt; immediately trailing &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; is part of &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt;. This is one of the limitations of the delimited format, it is impossible to supply a data chunk which does not have an LF as its last byte.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; 是所选的分隔符字符串。字符串 &lt;code&gt;&amp;lt;delim&amp;gt;&lt;/code&gt; 不能单独出现在 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 内的行中，否则快速导入将认为数据结束早于实际结束。所述 &lt;code&gt;LF&lt;/code&gt; 立即尾随 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 是一部分 &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; 。这是定界格式的局限性之一，不可能提供没有LF作为最后一个字节的数据块。</target>
        </trans-unit>
        <trans-unit id="8d31af99cf78f98699895f41c7d011db35405682" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; is the number assigned by the frontend to this mark. The value of &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; is expressed as an ASCII decimal integer. The value 0 is reserved and cannot be used as a mark. Only values greater than or equal to 1 may be used as marks.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; 是前端为此标记分配的编号。的值 &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; 被表示为ASCII十进制整数。值0是保留的，不能用作标记。只能将大于或等于1的值用作标记​​。</target>
        </trans-unit>
        <trans-unit id="b3bc1f1f90179c0d94155b6d38ac269582a5bc31" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the name of the tag to create.</source>
          <target state="translated">其中， &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 是要创建的标签的名称。</target>
        </trans-unit>
        <trans-unit id="0781bcf41941d50f274f9c3e811a463ff92910ed" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;object-identifer&amp;gt;&lt;/code&gt; is any string not containing LF.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;object-identifer&amp;gt;&lt;/code&gt; 是不包含LF的任何字符串。</target>
        </trans-unit>
        <trans-unit id="69adeb753afc5943281713a3ba07cbdc911acefe" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;object-identifier&amp;gt;&lt;/code&gt; is any string not containing LF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf39c97c33b3493acc59ef62643eddab5197b13" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; is the old object name stored in the ref, &lt;code&gt;&amp;lt;new-value&amp;gt;&lt;/code&gt; is the new object name to be stored in the ref and &lt;code&gt;&amp;lt;ref-name&amp;gt;&lt;/code&gt; is the full name of the ref. When creating a new ref, &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; is 40 &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">其中， &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; 是存储在引用中的旧对象名称， &lt;code&gt;&amp;lt;new-value&amp;gt;&lt;/code&gt; 是要存储在引用中的新对象名称，而 &lt;code&gt;&amp;lt;ref-name&amp;gt;&lt;/code&gt; 是引用的全名。创建新参考时， &lt;code&gt;&amp;lt;old-value&amp;gt;&lt;/code&gt; 为40 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cf5cc960d6eed5860429276c195773bac6ba954" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; is the name of the branch to make the commit on. Typically branch names are prefixed with &lt;code&gt;refs/heads/&lt;/code&gt; in Git, so importing the CVS branch symbol &lt;code&gt;RELENG-1_0&lt;/code&gt; would use &lt;code&gt;refs/heads/RELENG-1_0&lt;/code&gt; for the value of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt;. The value of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; must be a valid refname in Git. As &lt;code&gt;LF&lt;/code&gt; is not valid in a Git refname, no quoting or escaping syntax is supported here.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 是进行提交的分支的名称。通常，分支名称在Git 中以 &lt;code&gt;refs/heads/&lt;/code&gt; 为前缀，因此导入CVS分支符号 &lt;code&gt;RELENG-1_0&lt;/code&gt; 会将 &lt;code&gt;refs/heads/RELENG-1_0&lt;/code&gt; 用作 &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 的值。 &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; 的值必须是Git中的有效refname。由于 &lt;code&gt;LF&lt;/code&gt; 在Git引用名称中无效，因此此处不支持引用或转义语法。</target>
        </trans-unit>
        <trans-unit id="8556426714f5b4d9bd9ac7c7e3e7e6a9fc4398a1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;H&lt;/code&gt; is the &lt;code&gt;HEAD&lt;/code&gt; commit, &lt;code&gt;I&lt;/code&gt; is a commit that records the state of the index, and &lt;code&gt;W&lt;/code&gt; is a commit that records the state of the working tree.</source>
          <target state="translated">其中 &lt;code&gt;H&lt;/code&gt; 是 &lt;code&gt;HEAD&lt;/code&gt; 提交， &lt;code&gt;I&lt;/code&gt; 是记录索引状态的提交， &lt;code&gt;W&lt;/code&gt; 是记录工作树状态的提交。</target>
        </trans-unit>
        <trans-unit id="5002deeb5209a7d41623e44bc277fffa4cce0769" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;ORIG_PATH&lt;/code&gt; is where the renamed/copied contents came from. &lt;code&gt;ORIG_PATH&lt;/code&gt; is only shown when the entry is renamed or copied. The &lt;code&gt;XY&lt;/code&gt; is a two-letter status code.</source>
          <target state="translated">其中 &lt;code&gt;ORIG_PATH&lt;/code&gt; 就是重命名/复制的内容是从哪里来的。仅当重命名或复制条目时，才会显示 &lt;code&gt;ORIG_PATH&lt;/code&gt; 。该 &lt;code&gt;XY&lt;/code&gt; 是两个字母的状态码。</target>
        </trans-unit>
        <trans-unit id="9b17af1ca5f68d6e05ad95e07abe5c29f698899d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;git-auth.conf&lt;/code&gt; looks something like:</source>
          <target state="translated">这里 &lt;code&gt;git-auth.conf&lt;/code&gt; 看起来是这样的：</target>
        </trans-unit>
        <trans-unit id="1f855501226f092fcaa4fc8b3dbd6daa2b630659" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;origin/master&lt;/code&gt; used to point at commits B0, B1, B2 and now it points at B, and your &lt;code&gt;topic&lt;/code&gt; branch was started on top of it back when &lt;code&gt;origin/master&lt;/code&gt; was at B0, and you built three commits, D0, D1, and D, on top of it. Imagine that you now want to rebase the work you did on the topic on top of the updated origin/master.</source>
          <target state="translated">其中 &lt;code&gt;origin/master&lt;/code&gt; 在提交B0，B1，B2用于地步，现在它指向B，和你的 &lt;code&gt;topic&lt;/code&gt; 分公司开始在它的上面回来时， &lt;code&gt;origin/master&lt;/code&gt; 在B0，和你建立三个提交，D0，D1，和D，最重要的是 想象一下，现在您想在更新的原始/母版基础上重新整理在该主题上所做的工作。</target>
        </trans-unit>
        <trans-unit id="2cec26422e2f2b3ffb03e00ad1ae976c13a54488" translate="yes" xml:space="preserve">
          <source>where B is the &quot;bad&quot; commit, &quot;G&quot; are &quot;good&quot; commits and W, X, and Y are other commits, we will get the following graph after this first step:</source>
          <target state="translated">其中B是 &quot;坏 &quot;的提交,&quot;G &quot;是 &quot;好 &quot;的提交,W、X、Y是其他的提交,经过这第一步,我们将得到如下图。</target>
        </trans-unit>
        <trans-unit id="5e65e56f9d1dd9179b39019741358b76f7e09945" translate="yes" xml:space="preserve">
          <source>where BAD, GOOD and COMMIT are all names that can be resolved to a commit.</source>
          <target state="translated">其中BAD、GOOD和COMMIT都是可以解析为提交的名称。</target>
        </trans-unit>
        <trans-unit id="8efbd8314fba7622b7fbe76ab5ff8f026e70083a" translate="yes" xml:space="preserve">
          <source>where BBBBBB is the sha1 hash of the bad commit, MMMMMM is the sha1 hash of the merge base that is skipped and [GGGGGG,&amp;hellip;​] is a comma separated list of the sha1 of the good commits.</source>
          <target state="translated">其中BBBBBB是错误提交的sha1哈希，MMMMMM是跳过的合并基础的sha1哈希，[GGGGGG，...]是用逗号分隔的良好提交的sha1列表。</target>
        </trans-unit>
        <trans-unit id="680b4b58106e2de2a5502e2fe6c6becfefd1c13a" translate="yes" xml:space="preserve">
          <source>where BBBBBB is the sha1 hash of the bad merge base and [GGGGGG,&amp;hellip;​] is a comma separated list of the sha1 of the good commits.</source>
          <target state="translated">其中BBBBBB是错误合并基础的sha1哈希，[GGGGGG，...]是用逗号分隔的良好提交的sha1列表。</target>
        </trans-unit>
        <trans-unit id="01b94d5edaa4a5bb3305b834d36b4d6854e48beb" translate="yes" xml:space="preserve">
          <source>where N is the number of commits in the (cleaned up) graph.</source>
          <target state="translated">其中N为(清理后)图中的提交次数。</target>
        </trans-unit>
        <trans-unit id="6407d1e422646694bdae11953cb93a1df8de56bc" translate="yes" xml:space="preserve">
          <source>where N, M and T are all growing with the size your software.</source>
          <target state="translated">其中N、M、T都是随着你的软件大小而增长的。</target>
        </trans-unit>
        <trans-unit id="ec2fad52c7d0197ad36ff08789751c56c334e008" translate="yes" xml:space="preserve">
          <source>where X is the value associated to the commit in step 2) and N is the total number of commits in the graph.</source>
          <target state="translated">其中,X是步骤2)中与提交相关联的值,N是图中提交的总次数。</target>
        </trans-unit>
        <trans-unit id="9b9ed61893eb7c2bafd0be803aa96fb6d205a9d7" translate="yes" xml:space="preserve">
          <source>where c is the number of rounds of test (so a small constant) and b is the ratio of bug per commit (hopefully a small constant too).</source>
          <target state="translated">其中c是测试的轮数(所以是个小常数),b是每次提交的bug比例(希望也是个小常数)。</target>
        </trans-unit>
        <trans-unit id="1a624082bf253d770b458beb704b9dc35f6f9180" translate="yes" xml:space="preserve">
          <source>where commits quoted with ' have been rebased.</source>
          <target state="translated">其中以''为引号的提交已被重新计算。</target>
        </trans-unit>
        <trans-unit id="45df5ab8c4dc240685506a83e97655edcd922e22" translate="yes" xml:space="preserve">
          <source>where information_if_good(X) is the information we get if X is good and information_if_bad(X) is the information we get if X is bad.</source>
          <target state="translated">其中,information_if_good(X)是我们得到的X是好的信息,information_if_bad(X)是我们得到的X是坏的信息。</target>
        </trans-unit>
        <trans-unit id="880d43fc4098dfdf3a8e70aaa2d705a66e40104b" translate="yes" xml:space="preserve">
          <source>where point 2. consists of several instances of</source>
          <target state="translated">其中第2点由以下几个实例组成:</target>
        </trans-unit>
        <trans-unit id="e14c6e6aad7cb13ba2c4fb8ebe4ac714abb06147" translate="yes" xml:space="preserve">
          <source>where release-script is a shell script that looks like:</source>
          <target state="translated">其中release-script是一个shell脚本,看起来像。</target>
        </trans-unit>
        <trans-unit id="82acdf63453ec79b5f29b88ecefbee398d7818fd" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;-t&lt;/code&gt; tells &lt;code&gt;git cat-file&lt;/code&gt; to tell you what the &quot;type&quot; of the object is. Git will tell you that you have a &quot;blob&quot; object (i.e., just a regular file), and you can see the contents with</source>
          <target state="translated">其中， &lt;code&gt;-t&lt;/code&gt; 告诉 &lt;code&gt;git cat-file&lt;/code&gt; 告诉你对象的&amp;ldquo;类型&amp;rdquo;是什么。Git会告诉您您有一个&amp;ldquo; blob&amp;rdquo;对象（即，只是一个常规文件），并且您可以通过</target>
        </trans-unit>
        <trans-unit id="0700e92656fcf8c0d768cfb86568b7ab9cd62bcd" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;-u&lt;/code&gt; flag means that you want the checkout to keep the index up to date (so that you don&amp;rsquo;t have to refresh it afterward), and the &lt;code&gt;-a&lt;/code&gt; flag means &quot;check out all files&quot; (if you have a stale copy or an older version of a checked out tree you may also need to add the &lt;code&gt;-f&lt;/code&gt; flag first, to tell &lt;code&gt;git checkout-index&lt;/code&gt; to &lt;strong&gt;force&lt;/strong&gt; overwriting of any old files).</source>
          <target state="translated">其中 &lt;code&gt;-u&lt;/code&gt; 标志意味着您希望签出使索引保持最新（这样您以后就不必刷新索引），而 &lt;code&gt;-a&lt;/code&gt; 标志意味着&amp;ldquo;签出所有文件&amp;rdquo;（如果陈旧）复制或一个旧版本的签出的树，你可能还需要添加 &lt;code&gt;-f&lt;/code&gt; 第一个标志，告诉 &lt;code&gt;git checkout-index&lt;/code&gt; 以&lt;strong&gt;强制&lt;/strong&gt;的任何旧文件覆盖）。</target>
        </trans-unit>
        <trans-unit id="6ed6d34937022cdbab0f77d4fca84fb1b5326273" translate="yes" xml:space="preserve">
          <source>where the first argument is going to be used as the commit message if the merge can be resolved automatically.</source>
          <target state="translated">其中第一个参数将被用作提交信息,如果合并可以自动解决。</target>
        </trans-unit>
        <trans-unit id="adb961e27f2db980ed82910178a61170ef2a3a98" translate="yes" xml:space="preserve">
          <source>where the latter example shows how &lt;code&gt;git merge-index&lt;/code&gt; will stop trying to merge once anything has returned an error (i.e., &lt;code&gt;cat&lt;/code&gt; returned an error for the AA file, because it didn&amp;rsquo;t exist in the original, and thus &lt;code&gt;git merge-index&lt;/code&gt; didn&amp;rsquo;t even try to merge the MM thing).</source>
          <target state="translated">后一个示例显示了 &lt;code&gt;git merge-index&lt;/code&gt; 如何在任何东西返回错误后停止尝试合并（即 &lt;code&gt;cat&lt;/code&gt; 返回了AA文件的错误，因为它在原始文件中不存在，因此 &lt;code&gt;git merge-index&lt;/code&gt; 没有了）甚至不尝试合并MM东西）。</target>
        </trans-unit>
        <trans-unit id="b4b176d94b4e5b57a9988c8111bce77d3f5516e2" translate="yes" xml:space="preserve">
          <source>where the numbers denote the order of commit timestamps, &lt;code&gt;git
rev-list&lt;/code&gt; and friends with &lt;code&gt;--date-order&lt;/code&gt; show the commits in the timestamp order: 8 7 6 5 4 3 2 1.</source>
          <target state="translated">其中的数字表示提交时间戳的顺序， &lt;code&gt;git rev-list&lt;/code&gt; 和 &lt;code&gt;--date-order&lt;/code&gt; 的朋友按时间戳顺序显示提交：8 7 6 5 4 3 2 1。</target>
        </trans-unit>
        <trans-unit id="eccaf84320060282d9fd2459e3ad6a5793be389b" translate="yes" xml:space="preserve">
          <source>where we know that Y is good and BFC is bad, and where BBC and X1 to X6 are untestable.</source>
          <target state="translated">在这里,我们知道Y是好的,BFC是坏的,而BBC和X1到X6是无法测试的。</target>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
        <trans-unit id="12224e0d47803386c1c5ab270b562b4103fa9a58" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace both the name and the email of a commit matching both the specified commit name and email address.</source>
          <target state="translated">允许 mailmap 替换与指定的提交名称和电子邮件地址匹配的提交名称和电子邮件。</target>
        </trans-unit>
        <trans-unit id="aa78afe44bd7e01286b8053a5a5cedb1778e4328" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace both the name and the email of a commit matching the specified commit email address, and:</source>
          <target state="translated">允许mailmap替换与指定的提交电子邮件地址相匹配的提交名称和电子邮件,以及。</target>
        </trans-unit>
        <trans-unit id="17e097887991cc5233ec6eed23fa6f1162150720" translate="yes" xml:space="preserve">
          <source>which allows mailmap to replace only the email part of a commit, and:</source>
          <target state="translated">允许mailmap只替换提交的电子邮件部分,以及。</target>
        </trans-unit>
        <trans-unit id="5feb742b42becccbcd1f87ff8b509acf04e150fc" translate="yes" xml:space="preserve">
          <source>which correspond with the objects with names of &lt;code&gt;557db...&lt;/code&gt; and &lt;code&gt;f24c7...&lt;/code&gt; respectively.</source>
          <target state="translated">分别与名称分别为 &lt;code&gt;557db...&lt;/code&gt; 和 &lt;code&gt;f24c7...&lt;/code&gt; 的对象相对应。</target>
        </trans-unit>
        <trans-unit id="6090290437d52106e7f5a734b7db63591febe95e" translate="yes" xml:space="preserve">
          <source>which does what it sounds like: it says that you want to see the commit history that is described by the dangling commit(s), but not the history that is described by all your existing branches and tags. Thus you get exactly the history reachable from that commit that is lost. (And notice that it might not be just one commit: we only report the &quot;tip of the line&quot; as being dangling, but there might be a whole deep and complex commit history that was dropped.)</source>
          <target state="translated">它的作用就像它的声音一样:它说您想查看悬空的提交所描述的提交历史,但不包括所有现有分支和标签所描述的历史。因此,您得到的正是丢失的那个提交的历史记录。(请注意,这可能不仅仅是一个提交:我们只报告 &quot;线的一角 &quot;是悬空的,但可能有一整段复杂的提交历史被删除了。)</target>
        </trans-unit>
        <trans-unit id="d519c51583f14631ce68777f45f836d15bdcce1b" translate="yes" xml:space="preserve">
          <source>which ends up doing the above for you.</source>
          <target state="translated">这最终为你做了以上的事情。</target>
        </trans-unit>
        <trans-unit id="4231e9bbece22592d70d1b6cfb1e26df6ceeca59" translate="yes" xml:space="preserve">
          <source>which is another incomprehensible object name. Again, if you want to, you can use &lt;code&gt;git cat-file -t 8988d...&lt;/code&gt; to see that this time the object is not a &quot;blob&quot; object, but a &quot;tree&quot; object (you can also use &lt;code&gt;git cat-file&lt;/code&gt; to actually output the raw object contents, but you&amp;rsquo;ll see mainly a binary mess, so that&amp;rsquo;s less interesting).</source>
          <target state="translated">这是另一个难以理解的对象名称。同样，如果愿意，可以使用 &lt;code&gt;git cat-file -t 8988d...&lt;/code&gt; 来查看，这次对象不是&amp;ldquo; blob&amp;rdquo;对象，而是&amp;ldquo; tree&amp;rdquo;对象（您也可以使用 &lt;code&gt;git cat-file&lt;/code&gt; 实际输出原始对象的内容，但您会看到主要是二进制混乱，因此不太有趣）。</target>
        </trans-unit>
        <trans-unit id="f206b6b9e29cca014d8da82cd5b1fe938d8fdf99" translate="yes" xml:space="preserve">
          <source>which is just Git&amp;rsquo;s way of saying that you haven&amp;rsquo;t been doing anything strange, and that it will have created a local &lt;code&gt;.git&lt;/code&gt; directory setup for your new project. You will now have a &lt;code&gt;.git&lt;/code&gt; directory, and you can inspect that with &lt;code&gt;ls&lt;/code&gt;. For your new empty project, it should show you three entries, among other things:</source>
          <target state="translated">这只是Git所说的，您没有做任何奇怪的事情，它会为您的新项目创建一个本地 &lt;code&gt;.git&lt;/code&gt; 目录设置。现在，您将拥有一个 &lt;code&gt;.git&lt;/code&gt; 目录，您可以使用 &lt;code&gt;ls&lt;/code&gt; 检查该目录。对于新的空项目，它应该显示三个条目，其中包括：</target>
        </trans-unit>
        <trans-unit id="c944843ef8a8dec6b9ebc73d293f9db5f583dda1" translate="yes" xml:space="preserve">
          <source>which is obviously a very useful question too, since that tells you what you &lt;strong&gt;could&lt;/strong&gt; commit. Again, the output matches the &lt;code&gt;git diff-tree -r&lt;/code&gt; output to a tee, but with a twist.</source>
          <target state="translated">这显然也是一个非常有用的问题，因为它告诉您&lt;strong&gt;可以&lt;/strong&gt;提交的内容。同样，输出将 &lt;code&gt;git diff-tree -r&lt;/code&gt; 输出与tee 匹配，但要有所不同。</target>
        </trans-unit>
        <trans-unit id="e1da9eacd7b85fc733537fdb7475ce8fcd32085e" translate="yes" xml:space="preserve">
          <source>which just writes the current &lt;code&gt;HEAD&lt;/code&gt; into the &lt;code&gt;.git/refs/tags/my-first-tag&lt;/code&gt; file, after which point you can then use this symbolic name for that particular state. You can, for example, do</source>
          <target state="translated">刚刚将当前 &lt;code&gt;HEAD&lt;/code&gt; 到 &lt;code&gt;.git/refs/tags/my-first-tag&lt;/code&gt; 的文件，在该点之后，那么你可以为特定的状态下使用这个符号名。您可以例如</target>
        </trans-unit>
        <trans-unit id="7f17646e4f0fbf24f9fd94523b574bd23187e3b7" translate="yes" xml:space="preserve">
          <source>which lets you do the same push with just</source>
          <target state="translated">这让你只需用</target>
        </trans-unit>
        <trans-unit id="6f3b475137324089c6993b0c953ba86405e375b7" translate="yes" xml:space="preserve">
          <source>which limits the annotation to the body of the &lt;code&gt;hello&lt;/code&gt; subroutine.</source>
          <target state="translated">这会将注释限制为 &lt;code&gt;hello&lt;/code&gt; 子例程的主体。</target>
        </trans-unit>
        <trans-unit id="5a91b79ff3a07af8d47650f43544ae4373d642e5" translate="yes" xml:space="preserve">
          <source>which merges in any work that others might have done since the clone operation. If there are uncommitted changes in your working tree, commit them first before running git pull.</source>
          <target state="translated">合并了克隆操作后其他人可能做的工作。如果你的工作树上有未提交的改动,请在运行 git pull 之前先提交它们。</target>
        </trans-unit>
        <trans-unit id="926d2e81ba43986fed45a22a4b9fcd2ca6fe685d" translate="yes" xml:space="preserve">
          <source>which shows all of the unique lines (with numbers converted to &quot;X&quot;, to collapse &quot;User 0&quot;, &quot;User 1&quot;, etc into &quot;User X&quot;). This produces a much smaller output, and it is usually easy to quickly confirm that there is no private data in the stream.</source>
          <target state="translated">它显示了所有独特的行(数字转换为 &quot;X&quot;,将 &quot;用户0&quot;、&quot;用户1 &quot;等折叠成 &quot;用户X&quot;)。这产生了一个小得多的输出,通常很容易快速确认流中没有私人数据。</target>
        </trans-unit>
        <trans-unit id="6ea4495c56dcdc4697f0abd3bd0e08ec76b2cbc8" translate="yes" xml:space="preserve">
          <source>which starts an editor for you to write the commit message and tells you a bit about what you have done.</source>
          <target state="translated">它启动了一个编辑器,让你写提交信息,并告诉你一些关于你所做的事情。</target>
        </trans-unit>
        <trans-unit id="596e3ee4d6bb8305794479d1c0edd894e543dee3" translate="yes" xml:space="preserve">
          <source>which used to be nothing more than a simple script around &lt;code&gt;ls .git/refs/heads&lt;/code&gt;. There will be an asterisk in front of the branch you are currently on.</source>
          <target state="translated">过去只是 &lt;code&gt;ls .git/refs/heads&lt;/code&gt; 周围的一个简单脚本。您当前所在的分支前面将有一个星号。</target>
        </trans-unit>
        <trans-unit id="4405475f0380952bb11ad8e933d63fa446bc3375" translate="yes" xml:space="preserve">
          <source>which will automatically notice any modified (but not new) files, add them to the index, and commit, all in one step.</source>
          <target state="translated">它将自动注意到任何被修改的(但不是新的)文件,将它们添加到索引中,然后提交,所有这些都是一步到位的。</target>
        </trans-unit>
        <trans-unit id="622b001aea9cf3f236116550cd18e5ecb43f4714" translate="yes" xml:space="preserve">
          <source>which will create and store a blob object with the contents of somedirectory/myfile, and output the SHA-1 of that object. if you&amp;rsquo;re extremely lucky it might be 4b9458b3786228369c63936db65827de3cc06200, in which case you&amp;rsquo;ve guessed right, and the corruption is fixed!</source>
          <target state="translated">它将创建并存储带有somedirectory / myfile内容的blob对象，并输出该对象的SHA-1。如果您非常幸运，可能是4b9458b3786228369c63936db65827de3cc06200，在这种情况下，您已经猜对了，而且错误已修复！</target>
        </trans-unit>
        <trans-unit id="d60ee7ec397ba315649044eb825f48329ddf5c7b" translate="yes" xml:space="preserve">
          <source>which will display the given version of the file.</source>
          <target state="translated">这将显示给定版本的文件。</target>
        </trans-unit>
        <trans-unit id="1b64d0d90683fa3f2edf067e5d34433a5aceab02" translate="yes" xml:space="preserve">
          <source>which will do all trivial merge operations for you directly in the index file, and you can just write the result out with &lt;code&gt;git write-tree&lt;/code&gt;.</source>
          <target state="translated">这将直接在索引文件中为您完成所有琐碎的合并操作，您可以使用 &lt;code&gt;git write-tree&lt;/code&gt; 将结果写出。</target>
        </trans-unit>
        <trans-unit id="1f896f06a84f38ba8dbe5f445e7d950c122beec1" translate="yes" xml:space="preserve">
          <source>which will end up doing all of the above for you.</source>
          <target state="translated">这将最终为你完成上述所有工作。</target>
        </trans-unit>
        <trans-unit id="646e668f6eda257a2cfd3c7b531c3eadbff40e71" translate="yes" xml:space="preserve">
          <source>which will force a total index re-build from the tree pointed to by &lt;code&gt;HEAD&lt;/code&gt;. It resets the index contents to &lt;code&gt;HEAD&lt;/code&gt;, and then the &lt;code&gt;git update-index&lt;/code&gt; makes sure to match up all index entries with the checked-out files. If the original repository had uncommitted changes in its working tree, &lt;code&gt;git update-index --refresh&lt;/code&gt; notices them and tells you they need to be updated.</source>
          <target state="translated">这将强制从 &lt;code&gt;HEAD&lt;/code&gt; 指向的树重新构建总索引。它将索引内容重置为 &lt;code&gt;HEAD&lt;/code&gt; ，然后 &lt;code&gt;git update-index&lt;/code&gt; 确保将所有索引条目与检出的文件进行匹配。如果原始存储库在其工作树中有未提交的更改，则 &lt;code&gt;git update-index --refresh&lt;/code&gt; 会注意到它们，并告诉您需要对其进行更新。</target>
        </trans-unit>
        <trans-unit id="7b198e48c186b5015fa318fca85bda78f143bf02" translate="yes" xml:space="preserve">
          <source>which will force all existing &lt;code&gt;*.h&lt;/code&gt; files to be replaced with their cached copies. If an empty command line implied &quot;all&quot;, then this would force-refresh everything in the index, which was not the point. But since &lt;code&gt;git checkout-index&lt;/code&gt; accepts --stdin it would be faster to use:</source>
          <target state="translated">这将强制将所有现有 &lt;code&gt;*.h&lt;/code&gt; 文件替换为其缓存的副本。如果空命令行表示&amp;ldquo; all&amp;rdquo;，则这将强制刷新索引中的所有内容，这不是重点。但是由于 &lt;code&gt;git checkout-index&lt;/code&gt; 接受--stdin，因此使用起来会更快：</target>
        </trans-unit>
        <trans-unit id="ee89d3c5137ef588870b5a6fca3094d614229dc0" translate="yes" xml:space="preserve">
          <source>which will print out &quot;Hello World&quot;. The object &lt;code&gt;557db03&lt;/code&gt; is nothing more than the contents of your file &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">它将打印出&amp;ldquo; Hello World&amp;rdquo;。对象 &lt;code&gt;557db03&lt;/code&gt; 只不过是文件 &lt;code&gt;hello&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="f2039a406941243a8c8a6f96c7c49927e20cad63" translate="yes" xml:space="preserve">
          <source>which will produce a request to the upstream, summarizing the changes between the &lt;code&gt;v1.0&lt;/code&gt; release and your &lt;code&gt;master&lt;/code&gt;, to pull it from your public repository.</source>
          <target state="translated">它将向上游产生一个请求，总结了 &lt;code&gt;v1.0&lt;/code&gt; 版本和您的 &lt;code&gt;master&lt;/code&gt; 之间的更改，以将其从您的公共存储库中提取。</target>
        </trans-unit>
        <trans-unit id="c0551d07d913312d2ddd8ef08fb5fb0807a11f60" translate="yes" xml:space="preserve">
          <source>which will replace the old commit by a new commit incorporating your changes, giving you a chance to edit the old commit message first.</source>
          <target state="translated">这将会用一个包含了您的修改的新提交取代旧提交,让您有机会先编辑旧提交信息。</target>
        </trans-unit>
        <trans-unit id="a6300dcd18ec514685944256988103a2b65f9224" translate="yes" xml:space="preserve">
          <source>which will replace the old commit by a new commit incorporating your changes, giving you a chance to edit the old commit message first. This is useful for fixing typos in your last commit, or for adjusting the patch contents of a poorly staged commit.</source>
          <target state="translated">这将会用一个包含了您的修改的新提交取代旧提交,让您有机会先编辑旧提交的信息。这对于修正上一次提交中的错别字,或者调整进度不佳的提交的补丁内容非常有用。</target>
        </trans-unit>
        <trans-unit id="a19b4a25a77579924bcaedf0b8a09209e602238c" translate="yes" xml:space="preserve">
          <source>which will run gitk and label the commit it chose with a marker that says &quot;bisect&quot;. Choose a safe-looking commit nearby, note its commit id, and check it out with:</source>
          <target state="translated">它会运行 gitk,并在它选择的提交上标注 &quot;bisect&quot;。在附近选择一个看起来比较安全的提交,记下它的提交 ID,然后用它来检查。</target>
        </trans-unit>
        <trans-unit id="6b4d53dde5eb6ba322049d8d1307557417eea303" translate="yes" xml:space="preserve">
          <source>which will sign the current &lt;code&gt;HEAD&lt;/code&gt; (but you can also give it another argument that specifies the thing to tag, e.g., you could have tagged the current &lt;code&gt;mybranch&lt;/code&gt; point by using &lt;code&gt;git tag &amp;lt;tagname&amp;gt; mybranch&lt;/code&gt;).</source>
          <target state="translated">这将对当前的 &lt;code&gt;HEAD&lt;/code&gt; 进行签名（但是您也可以给它另一个参数指定要标记的事物，例如，您可以使用 &lt;code&gt;git tag &amp;lt;tagname&amp;gt; mybranch&lt;/code&gt; 标记当前的 &lt;code&gt;mybranch&lt;/code&gt; 点）。</target>
        </trans-unit>
        <trans-unit id="9aa8e4c0548086d885b10aec14a39a9d8e8f6bfb" translate="yes" xml:space="preserve">
          <source>which will simply &lt;code&gt;create&lt;/code&gt; the branch, but will not do anything further. You can then later &amp;mdash; once you decide that you want to actually develop on that branch &amp;mdash; switch to that branch with a regular &lt;code&gt;git switch&lt;/code&gt; with the branchname as the argument.</source>
          <target state="translated">这只会 &lt;code&gt;create&lt;/code&gt; 分支，但不会做任何其他事情。之后，您可以在决定要在该分支上进行实际开发之后，使用常规 &lt;code&gt;git switch&lt;/code&gt; （以branchname作为参数）切换到该分支。</target>
        </trans-unit>
        <trans-unit id="aa88a7b47ab645b66b6b1a2b1b84070517d007bb" translate="yes" xml:space="preserve">
          <source>which will very loudly warn you that you&amp;rsquo;re now committing a merge (which is correct, so never mind), and you can write a small merge message about your adventures in &lt;code&gt;git merge&lt;/code&gt;-land.</source>
          <target state="translated">这会非常响亮地警告您您正在提交合并（这是正确的，所以没关系），并且您可以在 &lt;code&gt;git merge&lt;/code&gt; -land中编写有关您的冒险的小合并消息。</target>
        </trans-unit>
        <trans-unit id="b2e72557ade65af451c7d7f6f0f18d03a88d82c2" translate="yes" xml:space="preserve">
          <source>whitespace</source>
          <target state="translated">whitespace</target>
        </trans-unit>
        <trans-unit id="54f2df0bf1a987e3dd8259893c66a199ea7ed026" translate="yes" xml:space="preserve">
          <source>will commit the result of the merge. Finally,</source>
          <target state="translated">将提交合并的结果。最后:</target>
        </trans-unit>
        <trans-unit id="1ccd0ed5c930df1c956a0f1a7ecbad8af56bdb40" translate="yes" xml:space="preserve">
          <source>will create a new branch based at the current &lt;code&gt;HEAD&lt;/code&gt; position, and switch to it.</source>
          <target state="translated">将基于当前 &lt;code&gt;HEAD&lt;/code&gt; 位置创建一个新分支，并切换到该分支。</target>
        </trans-unit>
        <trans-unit id="08eb2f72b83911d96ccdff3558e8c62e75a1543c" translate="yes" xml:space="preserve">
          <source>will create a new branch named &lt;code&gt;example-master&lt;/code&gt; and store in it the branch named &lt;code&gt;master&lt;/code&gt; from the repository at the given URL. If you already have a branch named example-master, it will attempt to &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt; to the commit given by example.com&amp;rsquo;s master branch. In more detail:</source>
          <target state="translated">将创建一个新的名为 &lt;code&gt;example-master&lt;/code&gt; 的分支，并将来自存储库中名为 &lt;code&gt;master&lt;/code&gt; 的分支存储在给定的URL中。如果您已经有一个名为example-master的分支，它将尝试&lt;a href=&quot;#fast-forwards&quot;&gt;快进&lt;/a&gt;至example.com的master分支给出的提交。更详细地：</target>
        </trans-unit>
        <trans-unit id="829ae0156bbe57588dfbbcb9da188444e73ef93d" translate="yes" xml:space="preserve">
          <source>will do it for you. If you followed the tutorial examples, you would have accumulated about 17 objects in &lt;code&gt;.git/objects/??/&lt;/code&gt; directories by now. &lt;code&gt;git repack&lt;/code&gt; tells you how many objects it packed, and stores the packed file in the &lt;code&gt;.git/objects/pack&lt;/code&gt; directory.</source>
          <target state="translated">会为你做。如果按照本教程中的示例进行操作，那么到目前为止，您已经在 &lt;code&gt;.git/objects/??/&lt;/code&gt; 目录中累积了约17个对象。 &lt;code&gt;git repack&lt;/code&gt; 告诉您打包了多少个对象，并将打包的文件存储在 &lt;code&gt;.git/objects/pack&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="8b01fbb2a46a214bfdbfd7742f97c589307b256a" translate="yes" xml:space="preserve">
          <source>will fail with a 404 error.</source>
          <target state="translated">将以404错误失败。</target>
        </trans-unit>
        <trans-unit id="91d301505491265c6e2399ac989937f0647c97bd" translate="yes" xml:space="preserve">
          <source>will find B0, and</source>
          <target state="translated">会发现B0,而</target>
        </trans-unit>
        <trans-unit id="d606d53bb777310b3caa2f5c1252a7abc0c05998" translate="yes" xml:space="preserve">
          <source>will generate a file with a patch for each commit reachable from test but not from master.</source>
          <target state="translated">将为每一个从测试中可以到达但从主站无法到达的提交生成一个带有补丁的文件。</target>
        </trans-unit>
        <trans-unit id="1afbeba178767b29faba2c040cdc826445f01c5b" translate="yes" xml:space="preserve">
          <source>will give raw access to the project&amp;rsquo;s Git dir (so that the project can be cloned), while</source>
          <target state="translated">将提供对项目的Git目录的原始访问权限（以便可以克隆项目），而</target>
        </trans-unit>
        <trans-unit id="7dcf28ad8eeddb53b67a9572692ae12b04b9efd2" translate="yes" xml:space="preserve">
          <source>will list commits made in the master branch but not in the stable branch, while</source>
          <target state="translated">将列出主分支中的提交,但不包括稳定分支中的提交,而</target>
        </trans-unit>
        <trans-unit id="659f06aa82993cd89bd2896d86d3ef6fd99957da" translate="yes" xml:space="preserve">
          <source>will map to the path &lt;code&gt;/srv/git/foo/bar.git&lt;/code&gt; on the filesystem.</source>
          <target state="translated">将映射到文件系统上的路径 &lt;code&gt;/srv/git/foo/bar.git&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39391e1d9ce3c9f0c6c56148e283e40b79a2a95c" translate="yes" xml:space="preserve">
          <source>will match branches &lt;code&gt;release&lt;/code&gt;, &lt;code&gt;rese&lt;/code&gt;, &lt;code&gt;re123se&lt;/code&gt;, however</source>
          <target state="translated">将匹配分支 &lt;code&gt;release&lt;/code&gt; ， &lt;code&gt;rese&lt;/code&gt; ， &lt;code&gt;re123se&lt;/code&gt; ，但是</target>
        </trans-unit>
        <trans-unit id="524b13b8971c2aa8dd80a3600da9a5117eb25702" translate="yes" xml:space="preserve">
          <source>will only match the exact branch called &quot;master&quot;.</source>
          <target state="translated">将只匹配名为 &quot;master &quot;的准确分支。</target>
        </trans-unit>
        <trans-unit id="0719320bc99900a7e9ecb22adb0d109429bf2e2d" translate="yes" xml:space="preserve">
          <source>will only show notes from &lt;code&gt;refs/notes/bar&lt;/code&gt;.</source>
          <target state="translated">只会显示 &lt;code&gt;refs/notes/bar&lt;/code&gt; 中的注释。</target>
        </trans-unit>
        <trans-unit id="d8594cb138dbb7c2577e3367c58d350bbfa52319" translate="yes" xml:space="preserve">
          <source>will produce a numbered series of files in the current directory, one for each patch in the current branch but not in &lt;code&gt;origin/HEAD&lt;/code&gt;.</source>
          <target state="translated">将在当前目录中生成一系列编号的文件，对于当前分支中的每个补丁，而不是 &lt;code&gt;origin/HEAD&lt;/code&gt; 中的每个补丁。</target>
        </trans-unit>
        <trans-unit id="7fb2e31af4d35745a1adfccc47ff678471fa1118" translate="yes" xml:space="preserve">
          <source>will produce an error.</source>
          <target state="translated">会产生一个错误。</target>
        </trans-unit>
        <trans-unit id="6c9d5d908eea29dd35ba1bd73c924bd0cff3976b" translate="yes" xml:space="preserve">
          <source>will produce empty output if and only if v1.5.0-rc1 includes e05db0fd, because it outputs only commits that are not reachable from v1.5.0-rc1.</source>
          <target state="translated">只有在v1.5.0-rc1包含e05db0fd的情况下才会产生空的输出,因为它只输出从v1.5.0-rc1无法到达的提交。</target>
        </trans-unit>
        <trans-unit id="d86bc3a6e58262f41ac027b92a1112f43f83df31" translate="yes" xml:space="preserve">
          <source>will provide human-friendly gitweb access.</source>
          <target state="translated">将提供人性化的gitweb访问。</target>
        </trans-unit>
        <trans-unit id="0a6da4e136d7ea05b1c5117818e48ea83e2a623f" translate="yes" xml:space="preserve">
          <source>will replay D0, D1 and D on top of B to create a new history of this shape:</source>
          <target state="translated">将在B的基础上重放D0、D1和D,以创建这个形状的新历史。</target>
        </trans-unit>
        <trans-unit id="12f69b768fbdb877106cba3b6d6afbd305a42b1c" translate="yes" xml:space="preserve">
          <source>will result in:</source>
          <target state="translated">将导致:</target>
        </trans-unit>
        <trans-unit id="2f2b51229d2d2167e0cc3202015392cc28ab8187" translate="yes" xml:space="preserve">
          <source>will return no commits when the two branches are equal.</source>
          <target state="translated">当两个分支相等时,将返回无提交。</target>
        </trans-unit>
        <trans-unit id="d7fb4c7e19f587f366fe3ea0e98028a92d8fea8e" translate="yes" xml:space="preserve">
          <source>will show a nice graphical representation of the resulting history.</source>
          <target state="translated">将会显示一个漂亮的图形来表示所产生的历史。</target>
        </trans-unit>
        <trans-unit id="a5a8e7b047472640f5d146677e9c728928275e66" translate="yes" xml:space="preserve">
          <source>will show the list of commits made on the stable branch but not the master branch.</source>
          <target state="translated">将显示稳定分支上的提交列表,但不显示主分支。</target>
        </trans-unit>
        <trans-unit id="68545f3a6f4d69e42947665de20411f9ec15d387" translate="yes" xml:space="preserve">
          <source>will show this. Once you&amp;rsquo;ve edited the files to resolve the conflicts,</source>
          <target state="translated">将显示此。编辑文件以解决冲突后，</target>
        </trans-unit>
        <trans-unit id="97b06ba16f479d1bb2f14d02f495998e3aa43a36" translate="yes" xml:space="preserve">
          <source>will show what HEAD pointed to one week ago, not what the current branch pointed to one week ago. This allows you to see the history of what you&amp;rsquo;ve checked out.</source>
          <target state="translated">将显示HEAD一周前指向的内容，而不是当前分支一周前指向的内容。这使您可以查看已签出内容的历史记录。</target>
        </trans-unit>
        <trans-unit id="6c7766e6bd2c3044e5f437a985d8e97c1aaa2741" translate="yes" xml:space="preserve">
          <source>will show you graphically both of your branches (that&amp;rsquo;s what the &lt;code&gt;--all&lt;/code&gt; means: normally it will just show you your current &lt;code&gt;HEAD&lt;/code&gt;) and their histories. You can also see exactly how they came to be from a common source.</source>
          <target state="translated">将以图形方式显示两个分支（这就是 &lt;code&gt;--all&lt;/code&gt; 的意思：通常只会显示您当前的 &lt;code&gt;HEAD&lt;/code&gt; ）及其历史记录。您还可以确切地看到它们来自共同来源的方式。</target>
        </trans-unit>
        <trans-unit id="88356df00c3516762073ccbdc78aa678f20cae5f" translate="yes" xml:space="preserve">
          <source>will tell you where it&amp;rsquo;s pointing. To get the list of branches you have, you can say</source>
          <target state="translated">会告诉您它的指向。要获取您拥有的分支机构列表，您可以说</target>
        </trans-unit>
        <trans-unit id="6cdd86cb78566c41c85784dc0a0c2629a62ca7ce" translate="yes" xml:space="preserve">
          <source>will tell you whether the contents of the project are the same at the two branches; in theory, however, it&amp;rsquo;s possible that the same project contents could have been arrived at by two different historical routes. You could compare the object names:</source>
          <target state="translated">会告诉您两个分支的项目内容是否相同；从理论上讲，相同的项目内容可能是通过两条不同的历史路线得出的。您可以比较对象名称：</target>
        </trans-unit>
        <trans-unit id="b9ee4c8cf1d80f9a0a5a4a11e832c20bacca676c" translate="yes" xml:space="preserve">
          <source>will try to use konqueror first. But this may fail (for example, if DISPLAY is not set) and in that case emacs' woman mode will be tried.</source>
          <target state="translated">将首先尝试使用konqueror,但可能会失败(例如,如果没有设置DISPLAY,那么emacs的女人模式将被尝试。但这可能会失败(例如,如果没有设置DISPLAY),在这种情况下,将尝试使用emacs的女性模式。</target>
        </trans-unit>
        <trans-unit id="f6031424c5b15149805cc3d0c8b0eac718e1d424" translate="yes" xml:space="preserve">
          <source>will update the index with any files that you&amp;rsquo;ve modified or removed and create a commit, all in one step.</source>
          <target state="translated">只需一步，即可使用您已修改或删除的所有文件更新索引并创建提交。</target>
        </trans-unit>
        <trans-unit id="9b84bddfaa68e5df6de8681c72c0df1fa4a7fa1b" translate="yes" xml:space="preserve">
          <source>will use HEAD to produce a gzipped tar archive in which each filename is preceded by &lt;code&gt;project/&lt;/code&gt;. The output file format is inferred from the output file extension if possible, see &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">将使用HEAD生成压缩后的tar归档文件，其中每个文件名前面都带有 &lt;code&gt;project/&lt;/code&gt; 。如果可能，可从输出文件扩展名推断出输出文件格式，有关详细信息，请参见&lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d00bc787a2d4b77c2ff5ea6fc53c8c29f15dc358" translate="yes" xml:space="preserve">
          <source>winmerge</source>
          <target state="translated">winmerge</target>
        </trans-unit>
        <trans-unit id="20800520495b2303a3ac17dd27fe3c4163987c1e" translate="yes" xml:space="preserve">
          <source>working directory &amp;rarr; index</source>
          <target state="translated">工作目录&amp;rarr;索引</target>
        </trans-unit>
        <trans-unit id="4eafbf4c3acd9084fd21be8ac9ae916a897b122b" translate="yes" xml:space="preserve">
          <source>working tree</source>
          <target state="translated">工作树</target>
        </trans-unit>
        <trans-unit id="94449c5bf46256cd2c8d8717f9940ed8cf221db3" translate="yes" xml:space="preserve">
          <source>worktree</source>
          <target state="translated">worktree</target>
        </trans-unit>
        <trans-unit id="efd3ab67ae8bdaac67f76d19bad0017021556659" translate="yes" xml:space="preserve">
          <source>worktree.guessRemote</source>
          <target state="translated">worktree.guessRemote</target>
        </trans-unit>
        <trans-unit id="5c46c9b5886a79e1bb6967377b51e67078ac410e" translate="yes" xml:space="preserve">
          <source>worktreepath</source>
          <target state="translated">worktreepath</target>
        </trans-unit>
        <trans-unit id="32d1d8cd691bd73eb0e8445a53eb45a6219cd631" translate="yes" xml:space="preserve">
          <source>worktrees</source>
          <target state="translated">worktrees</target>
        </trans-unit>
        <trans-unit id="917d24c19e6172d01ee58d4d910cf520abde5e00" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/config.worktree</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/config.worktree</target>
        </trans-unit>
        <trans-unit id="7a2a4f1b20c8a2e59a305206002b8b028eaf5833" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/gitdir</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/gitdir</target>
        </trans-unit>
        <trans-unit id="7dc15d067a8c70411dcc35bf1efd2caa26ebdc18" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/locked</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/locked</target>
        </trans-unit>
        <trans-unit id="6e52918f32fd9eea83251e9bf09da6ae390c3eae" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2176dfd0874fe19ae8bdc1313d3e537d33c3c4c7" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one. Cannot be combined with --first-parent.</source>
          <target state="translated">长度大致相同。因此，查找导致回归的更改将减少为二进制搜索：重复生成并测试新的&amp;ldquo;中点&amp;rdquo;，直到提交链的长度为一。不能与--first-parent组合使用。</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">将是。</target>
        </trans-unit>
        <trans-unit id="ec462e1209bb81dd4d4da74d7cc622ecbd59d27e" translate="yes" xml:space="preserve">
          <source>would create the lightweight tag &lt;code&gt;refs/tags/938&lt;/code&gt; referring to whatever commit mark &lt;code&gt;:938&lt;/code&gt; references.</source>
          <target state="translated">将创建轻量级标签 &lt;code&gt;refs/tags/938&lt;/code&gt; ,引用任何提交标记 &lt;code&gt;:938&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="0e64309207a65a066015e183c95df0e98fa9beef" translate="yes" xml:space="preserve">
          <source>would output something like:</source>
          <target state="translated">会输出类似的东西。</target>
        </trans-unit>
        <trans-unit id="17d8e6d8f0677b6f8b2c882d7facbbbc37143301" translate="yes" xml:space="preserve">
          <source>would remove them for you.</source>
          <target state="translated">会帮你去掉。</target>
        </trans-unit>
        <trans-unit id="a4d42effbae7f1dd903be5bc58250775e8fdb07f" translate="yes" xml:space="preserve">
          <source>would result in the removal of commits F and G:</source>
          <target state="translated">将导致删除承诺F和G。</target>
        </trans-unit>
        <trans-unit id="e178c9aaffe5991230dd9ff28b8f996011875161" translate="yes" xml:space="preserve">
          <source>would result in:</source>
          <target state="translated">将导致:</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="a6956dab1239c6c1fbc46a263df37854151bdad3" translate="yes" xml:space="preserve">
          <source>write, in the test suite, a test script that exposes the regression</source>
          <target state="translated">在测试套件中编写一个测试脚本,暴露出回归的问题。</target>
        </trans-unit>
        <trans-unit id="b51c03916d43845d38d787ba1177d97c35d6d8b0" translate="yes" xml:space="preserve">
          <source>write-tree</source>
          <target state="translated">write-tree</target>
        </trans-unit>
        <trans-unit id="f1fac1082d9eb1a24f0c29f823e0cca8fc56abdd" translate="yes" xml:space="preserve">
          <source>xdg-open</source>
          <target state="translated">xdg-open</target>
        </trans-unit>
        <trans-unit id="b16c937fc5f3c005b0c3db817c6328aabab56313" translate="yes" xml:space="preserve">
          <source>xxdiff</source>
          <target state="translated">xxdiff</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="bb7860b062b4c7f6477197562066897cfac86203" translate="yes" xml:space="preserve">
          <source>you can feed the following input to &lt;code&gt;--index-info&lt;/code&gt;:</source>
          <target state="translated">您可以将以下输入提供给 &lt;code&gt;--index-info&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f512f3664f28acf3b646ac106562aabf5b3fd0fa" translate="yes" xml:space="preserve">
          <source>you can refer to 1b2e1d63ff by the name &quot;v2.5&quot;. If you intend to share this name with other people (for example, to identify a release version), you should create a &quot;tag&quot; object, and perhaps sign it; see &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; for details.</source>
          <target state="translated">您可以使用名称&amp;ldquo; v2.5&amp;rdquo;来引用1b2e1d63ff。如果您打算与其他人共享此名称（例如，标识发行版本），则应创建一个&amp;ldquo;标记&amp;rdquo;对象，然后对其进行签名；有关详细信息，请参见&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f21aea3b773b85ed15a02e0520c4596660ede62d" translate="yes" xml:space="preserve">
          <source>you can set the filemode to true with</source>
          <target state="translated">你可以通过使用</target>
        </trans-unit>
        <trans-unit id="7dc43142eea4044676647e6bd97cb9f7eb183068" translate="yes" xml:space="preserve">
          <source>you can tell about the change after the fact.</source>
          <target state="translated">你可以在事后得知变化。</target>
        </trans-unit>
        <trans-unit id="55ae0d2f317b0ae71a87fb90b36301e7c9181a34" translate="yes" xml:space="preserve">
          <source>you could run &lt;code&gt;git rebase master topic&lt;/code&gt;, to bring yourself up to date before your topic is ready to be sent upstream. This would result in falling back to a three-way merge, and it would conflict the same way as the test merge you resolved earlier. &lt;code&gt;git rerere&lt;/code&gt; will be run by &lt;code&gt;git rebase&lt;/code&gt; to help you resolve this conflict.</source>
          <target state="translated">您可以运行 &lt;code&gt;git rebase master topic&lt;/code&gt; ，以使自己在准备好向上游发送主题之前保持最新状态。这将导致退回到三路合并，并且将与您先前解决的测试合并相同的方式发生冲突。 &lt;code&gt;git rerere&lt;/code&gt; 将由 &lt;code&gt;git rebase&lt;/code&gt; 运行，以帮助您解决此冲突。</target>
        </trans-unit>
        <trans-unit id="ce05848d37149bd7a63386fce7bea6475bab3138" translate="yes" xml:space="preserve">
          <source>you have now created two files in your working tree (aka &lt;code&gt;working directory&lt;/code&gt;), but to actually check in your hard work, you will have to go through two steps:</source>
          <target state="translated">现在，您已经在工作树（即 &lt;code&gt;working directory&lt;/code&gt; ）中创建了两个文件，但是要实际签入您的辛苦工作，您将必须完成两个步骤：</target>
        </trans-unit>
        <trans-unit id="0b8f2b63647cf0b4cf2e4ae1c829a8efa59acde9" translate="yes" xml:space="preserve">
          <source>you need to tell Git if you added a new file; removal and modification will be caught if you do &lt;code&gt;git commit -a&lt;/code&gt; later.</source>
          <target state="translated">您需要告诉Git是否添加了新文件；如果稍后再执行 &lt;code&gt;git commit -a&lt;/code&gt; ,则将捕获删除和修改。</target>
        </trans-unit>
        <trans-unit id="e6782f0c216c9a85ff68244a10ed13eb161478ca" translate="yes" xml:space="preserve">
          <source>you run into problems with deletions whenever the user is simply trying to rename files (because attempting to delete files that don&amp;rsquo;t exist looks like a no-op; it takes some chicanery to remap deletes across file renames when the renames happen via arbitrary user-provided shell)</source>
          <target state="translated">每当用户只是尝试重命名文件时，您都会遇到删除问题（因为尝试删除不存在的文件看起来像是无操作；当通过任意用户进行重命名时，需要花些时间才能重新映射整个文件重命名删除操作提供的外壳）</target>
        </trans-unit>
        <trans-unit id="e804abbe97d54cb4bc4f8871e020be4bbbadaebf" translate="yes" xml:space="preserve">
          <source>you try to unset an option which does not exist (ret=5),</source>
          <target state="translated">你试图取消设置一个不存在的选项(ret=5)。</target>
        </trans-unit>
        <trans-unit id="fe0543b68420ac22d2548c7e91b972d8572fa97d" translate="yes" xml:space="preserve">
          <source>you try to unset/set an option for which multiple lines match (ret=5), or</source>
          <target state="translated">你试图取消设置/设置一个多行匹配的选项(ret=5),或</target>
        </trans-unit>
        <trans-unit id="efa92f0afbb0477eac8bafddb9f3892f7f60093d" translate="yes" xml:space="preserve">
          <source>you try to use an invalid regexp (ret=6).</source>
          <target state="translated">你试图使用一个无效的regexp (ret=6)。</target>
        </trans-unit>
        <trans-unit id="deeffff664f882f6292365d3f4355f0fd1f2950a" translate="yes" xml:space="preserve">
          <source>you walk the index in order, and ignore all entries of stage 0, since they&amp;rsquo;ve already been done.</source>
          <target state="translated">您可以按顺序遍历索引，而忽略阶段0的所有条目，因为它们已经完成。</target>
        </trans-unit>
        <trans-unit id="e40858f3b1ea33484ad870e370d3ce3403d6e862" translate="yes" xml:space="preserve">
          <source>you will end up with the fixed history</source>
          <target state="translated">你将最终与固定的历史</target>
        </trans-unit>
        <trans-unit id="3feccc2142131c34ccba809c47212fd9f28c1cb4" translate="yes" xml:space="preserve">
          <source>you would get an output like this:</source>
          <target state="translated">你会得到这样的输出。</target>
        </trans-unit>
        <trans-unit id="0bae78553462e7a34534afd02b3496453c11a90d" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;ll get a list of all existing branches:</source>
          <target state="translated">您将获得所有现有分支机构的列表：</target>
        </trans-unit>
        <trans-unit id="38aa53de31c04bcfae9163cc23b7963ed9cf90f7" translate="yes" xml:space="preserve">
          <source>zebra</source>
          <target state="translated">zebra</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="1abe74473dcd47570993fe227357e8340418b7f4" translate="yes" xml:space="preserve">
          <source>~/.git-credentials</source>
          <target state="translated">~/.git-credentials</target>
        </trans-unit>
        <trans-unit id="9e794d254d2ea7f1b185c970ca6ed90747ac8823" translate="yes" xml:space="preserve">
          <source>~/.gitconfig</source>
          <target state="translated">~/.gitconfig</target>
        </trans-unit>
        <trans-unit id="afde40b275af0ad36ff7b6e7f32ecc59bab0a691" translate="yes" xml:space="preserve">
          <source>~/.gitconfig push.pushoption = c</source>
          <target state="translated">〜/ .gitconfig push.pushoption = c</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
