<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="vulkan">
    <body>
      <group id="vulkan">
        <trans-unit id="2afdc9f5f9839a580986a1592d2ebc7c1dc70447" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid handle to a compute &lt;code&gt;VkPipeline&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 标志，并且 &lt;code&gt;basePipelineIndex&lt;/code&gt; 为-1，则 &lt;code&gt;basePipelineHandle&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是计算 &lt;code&gt;VkPipeline&lt;/code&gt; 的有效句柄。</target>
        </trans-unit>
        <trans-unit id="0bdd32fc21b0bc9b8c72f5a2b27c3cc7ba2f9f53" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid handle to a graphics &lt;code&gt;VkPipeline&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 标志，并且 &lt;code&gt;basePipelineIndex&lt;/code&gt; 为-1，则 &lt;code&gt;basePipelineHandle&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是图形 &lt;code&gt;VkPipeline&lt;/code&gt; 的有效句柄。</target>
        </trans-unit>
        <trans-unit id="eb441c682a989edd6b4a9fd7d3157ec839be563c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is not -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 标志，并且 &lt;code&gt;basePipelineIndex&lt;/code&gt; 不为-1，则 &lt;code&gt;basePipelineHandle&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1fe5e52cff6a537adc020be1195120d8cf619b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; does not contain &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt;, the binding range &lt;strong&gt;must&lt;/strong&gt; be within the range [0,&lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;::&lt;code&gt;size&lt;/code&gt;).</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 不包含 &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; ，则绑定范围&lt;strong&gt;必须&lt;/strong&gt;在[0，&lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt; :: &lt;code&gt;size&lt;/code&gt; ）范围内。</target>
        </trans-unit>
        <trans-unit id="94268edcaf668999c8167f59b7ca4f77eb80f457" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; includes &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt;, then the attachment is treated as if it shares physical memory with another attachment in the same render pass. This information limits the ability of the implementation to reorder certain operations (like layout transitions and the &lt;code&gt;loadOp&lt;/code&gt;) such that it is not improperly reordered against other uses of the same physical memory via a different attachment. This is described in more detail below.</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 包括 &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; ，则将附件视为与同一渲染通道中的另一个附件共享物理内存。此信息限制了实现对某些操作（如布局转换和 &lt;code&gt;loadOp&lt;/code&gt; ）进行重新排序的能力，从而不会通过不同的附件针对同一物理内存的其他用途对它进行不正确的重新排序。这将在下面更详细地描述。</target>
        </trans-unit>
        <trans-unit id="d6b10dd68a3df228657883a5b0e34a7a202190bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is a block-compression format, then buffers &lt;strong&gt;must&lt;/strong&gt; not support any features for the format.</source>
          <target state="translated">如果 &lt;code&gt;format&lt;/code&gt; 是块压缩格式，则缓冲区&lt;strong&gt;必须&lt;/strong&gt;不支持该格式的任何功能。</target>
        </trans-unit>
        <trans-unit id="6526e4fca135f9aa0c3be198a5e40bb1e4e29a87" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is not a supported image format, or if the combination of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; is not supported for images, then &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; returns &lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;format&lt;/code&gt; 不是受支持的图像格式，或者图像不支持 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 的组合，则 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 返回 &lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87d47979360797f9db0a28ad75085364eb22255a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;framebuffer&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;framebuffer&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索到它</target>
        </trans-unit>
        <trans-unit id="36ec1f3989f7b905b99cb3ce6e3bea90bec5bd34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;framebuffer&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;framebuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkFramebuffer&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;framebuffer&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;framebuffer&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkFramebuffer&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="4d662441c88392b2f9b891edcc8482065a17ba6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; has a depth/stencil format with both depth and stencil components, then &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;subresourceRange&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; include both &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; and &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 具有两个深度和模板组件的深度/模板格式，然后 &lt;code&gt;aspectMask&lt;/code&gt; 的构件 &lt;code&gt;subresourceRange&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包括 &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; 和 &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22a602a4ba75b76cd3e93f68666c62c4d78df7e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索了它</target>
        </trans-unit>
        <trans-unit id="c2c5b908c4bc4f73a0d295ec52c14c9ac235a87f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 是非稀疏的，则&lt;strong&gt;必须&lt;/strong&gt;将其完整且连续地绑定到单个 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="709ff55637659c48eee8c92c6059c88f437a777c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkImage&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkImage&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="cd3a0342165216859b73c0fa40fd15976b6b367f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for color attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持彩色的附件，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05dd84b825445a79b30621d2370418a9afabe44f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for depth/stencil attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持的深度/模板的附件，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68510d590e49ff75c23b0cf18defe6b675503f63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for sampled images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持的采样图像，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5fb67a6acaa120becf2167fa69866784b43566ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for storage images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果使用 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 创建 &lt;code&gt;image&lt;/code&gt; 并且 &lt;code&gt;usage&lt;/code&gt; 包含 &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; ，则&lt;strong&gt;必须&lt;/strong&gt;支持存储图像的 &lt;code&gt;format&lt;/code&gt; ，如 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 返回的 &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; 标志由 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 返回的 &lt;code&gt;format&lt;/code&gt; 相同。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa699a29d8b5d1c56667ef84a54b7f3dd8e64d56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 是使用 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 创建的，则 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是至少具有一个受支持的功能位的格式，该位由 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 返回的 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 值具有相同的 &lt;code&gt;format&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="9d016a518998bf6ade4849b823ed7ccc1c5951d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for color attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持彩色的附件，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20d21570d48f1ad2ba072355d48b11b18b4b1d34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for depth/stencil attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持的深度/模板的附件，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76d498a5585df689eb0ecdfdde088d54f278396a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for sampled images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持的采样图像，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="916911a48b114ff8f5c464c73c21bb2013725bcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for storage images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 与创建 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;usage&lt;/code&gt; 含有 &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持存储图像，由指定的 &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; 标志 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 由归国 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caf8f7a7a3cd1072beb9095a5b430fddaea1c7b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果使用 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 创建 &lt;code&gt;image&lt;/code&gt; ，则 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为至少具有一个受支持的功能位的格式，该功能位存在于由 &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 返回的 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: optimizeTilingFeatures中， &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的 &lt;code&gt;format&lt;/code&gt; 值&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29bf89052a966dcb125474079b8bdc7559320ccd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; both be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 用的共享模式创建 &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; ， &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 和 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;同时为 &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0ffb5134fc86a2f0f83d99f935c208ac159fc8f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;, &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; either both be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;, or both be a valid queue family (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-queueprops&quot;&gt;html/vkspec.html#devsandqueues-queueprops&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 用的共享模式创建 &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; ， &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 和 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;要么同时为 &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt; ，或两者是有效的队列家庭（见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-queueprops&quot;&gt;HTML / vkspec.html＃devsandqueues-queueprops&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7d7bde11f000421f0a865adbe2f9228e223970c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; are not &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;, at least one of them &lt;strong&gt;must&lt;/strong&gt; be the same as the family of the queue that will execute this barrier</source>
          <target state="translated">如果使用共享模式 &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; 创建 &lt;code&gt;image&lt;/code&gt; ，并且 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 和 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; 不是 &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt; ，则它们中的至少一个&lt;strong&gt;必须&lt;/strong&gt;与将执行此屏障的队列家族相同&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91203b3732e28c2d54555e7a5da367fca1362c5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be different from the image&amp;rsquo;s format, but if they are not equal they &lt;strong&gt;must&lt;/strong&gt; be &lt;em&gt;compatible&lt;/em&gt;. Image format compatibility is defined in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;Format Compatibility Classes&lt;/a&gt; section. Views of compatible formats will have the same mapping between texel coordinates and memory locations irrespective of the &lt;code&gt;format&lt;/code&gt;, with only the interpretation of the bit pattern changing.</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 是用创建 &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; 标志， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;可以&lt;/strong&gt;从图像的格式不同，但如果他们不相等，它们&lt;strong&gt;必须&lt;/strong&gt;是&lt;em&gt;兼容的&lt;/em&gt;。图像格式兼容性在&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;格式兼容性类&amp;rdquo;&lt;/a&gt;部分中定义。兼容格式的视图将在纹素坐标和内存位置之间具有相同的映射，而与 &lt;code&gt;format&lt;/code&gt; 无关，仅改变位模式的解释。</target>
        </trans-unit>
        <trans-unit id="9fbae1e6663e7915acc1fe3b708275cbc842d6a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible with the &lt;code&gt;format&lt;/code&gt; used to create &lt;code&gt;image&lt;/code&gt;, as defined in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;Format Compatibility Classes&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 被与所创建的 &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; 标志， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;与兼容 &lt;code&gt;format&lt;/code&gt; 用于创建 &lt;code&gt;image&lt;/code&gt; ，如在限定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;格式兼容性的类&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be78940e7bce60efd4e6172142c7297bbe0acfef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was not created with &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; then &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 不是用创建 &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; 然后 &lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c73590a7ae472ad71eb585217ca27b348860c349" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was not created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be identical to the &lt;code&gt;format&lt;/code&gt; used to create &lt;code&gt;image&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;image&lt;/code&gt; 没有被与所创建的 &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; 标志， &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;给相同 &lt;code&gt;format&lt;/code&gt; 用于创建 &lt;code&gt;image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="655b64ab0c5dd20a68eab0e67a7aa49698f0d5f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageBindCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageBinds&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageBindCount&lt;/code&gt; valid &lt;code&gt;VkSparseImageMemoryBindInfo&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;imageBindCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pImageBinds&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效的 &lt;code&gt;VkSparseImageMemoryBindInfo&lt;/code&gt; 结构的 &lt;code&gt;imageBindCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="469f85624b56db0eb1a8bb56d19eb2c71106c1e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; valid &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效的 &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; 结构的 &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; 数组的指针。</target>
        </trans-unit>
        <trans-unit id="8787fcc42b81dae679fcee3a6b5b723a4287faba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageOpaqueBinds&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; valid &lt;code&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pImageOpaqueBinds&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/code&gt; 结构的 &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="7c9081aa69255d2ceffa59607e396e0dd38c3450" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension1D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;extent.width&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension1D&lt;/code&gt; 或 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; （由 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 返回，其 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 与该结构中的那些相等） -以较高者为准</target>
        </trans-unit>
        <trans-unit id="1a32bcfa391a5b4002e29c4247fdfcb7ddc7e260" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5da21c6988da23a254eba6335fa2a23db38cd7b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, both &lt;code&gt;extent.height&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;extent.height&lt;/code&gt; 和 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69f7491e2261a16dc0a0ab7520b8f1a34c69be14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal and &lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to 6</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 且 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; ，则 &lt;code&gt;extent.width&lt;/code&gt; 和 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;相等，并且 &lt;code&gt;arrayLayers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;大于或等于6</target>
        </trans-unit>
        <trans-unit id="fd7f9a4ad14a26f1deae3d88454df37b9f2d601f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimensionCube&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; ， &lt;code&gt;extent.width&lt;/code&gt; 和 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimensionCube&lt;/code&gt; ，或 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; /身高（由作为返回 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 与 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; ，并且 &lt;code&gt;flags&lt;/code&gt; 等于该结构中的标志）-取其高</target>
        </trans-unit>
        <trans-unit id="47204cac8e2808373a2cf7fe6260136512f55675" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; does not contain &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension2D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 不包含 &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; ， &lt;code&gt;extent.width&lt;/code&gt; 和 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension2D&lt;/code&gt; ，或 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; /身高（由作为返回 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 与 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 等于此结构中的标志）-取其高</target>
        </trans-unit>
        <trans-unit id="8ba6aecfbf8778e575c860374c8821c79d7be814" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04c28de959e81236f0fb6a32b0c98e24bfc06cdb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; ，则 &lt;code&gt;arrayLayers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6acc9b47f2b791178140688c6de5728437351550" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension3D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height/depth (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">如果 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; ， &lt;code&gt;extent.width&lt;/code&gt; ， &lt;code&gt;extent.height&lt;/code&gt; 和 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension3D&lt;/code&gt; ，或 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; /高度/深度（由作为返回 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 与 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 等于此结构中的标志）-取其高</target>
        </trans-unit>
        <trans-unit id="6792c28f33e8538b9ea0ad9954bdc1bd1ddb0bf7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageView&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;imageView&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已从 &lt;code&gt;device&lt;/code&gt; 创建，分配或检索了它</target>
        </trans-unit>
        <trans-unit id="6563992c5f16d9cc4e1fd36efb5e2373753f52a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageView&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;imageView&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkImageView&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;imageView&lt;/code&gt; 不&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;， &lt;code&gt;imageView&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是一个有效的 &lt;code&gt;VkImageView&lt;/code&gt; 手柄</target>
        </trans-unit>
        <trans-unit id="3ac56b22df2f1eba07211dd4be9c473b4f109d3d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInitialData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;initialDataSize&lt;/code&gt; bytes</source>
          <target state="translated">如果 &lt;code&gt;initialDataSize&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pInitialData&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;initialDataSize&lt;/code&gt; 字节数组的指针</target>
        </trans-unit>
        <trans-unit id="76895055b0cfd759dbf2bd3dc669a8b0acf0c96f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInitialData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been retrieved from a previous call to &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;initialDataSize&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;pInitialData&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;从先前对 &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; 的调用中检索到pInitialData</target>
        </trans-unit>
        <trans-unit id="327661d4b2c47c7c938b652f22378ee6dc616088" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be equal to the size of &lt;code&gt;pInitialData&lt;/code&gt;, as returned by &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; when &lt;code&gt;pInitialData&lt;/code&gt; was originally retrieved</source>
          <target state="translated">如果 &lt;code&gt;initialDataSize&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则它&lt;strong&gt;必须&lt;/strong&gt;等于 &lt;code&gt;pInitialData&lt;/code&gt; 的大小，该大小由最初检索 &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; 时 &lt;code&gt;pInitialData&lt;/code&gt; 返回</target>
        </trans-unit>
        <trans-unit id="de83bb42cdb8dbd77ce76aecb288a70c72f6baef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inputAttachmentCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInputAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;inputAttachmentCount&lt;/code&gt; valid &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;inputAttachmentCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pInputAttachments&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 结构的 &lt;code&gt;inputAttachmentCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="0d7d8e4147c03eecd6f3ab685835c220ca8a84fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;instance&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;instance&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkInstance&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;instance&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;instance&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkInstance&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="8a876847e232217e54c091837ac81d04ad7f3bd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;logicOpEnable&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;logicOp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt; value</source>
          <target state="translated">如果 &lt;code&gt;logicOpEnable&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;logicOp&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为有效的&lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="5453c8142ab07b3f802da000bef608b22d8686f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mapEntryCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pMapEntries&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;mapEntryCount&lt;/code&gt; valid &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;mapEntryCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pMapEntries&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效的 &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; 结构的 &lt;code&gt;mapEntryCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="9b192879eb3ec84d9edfc23d30ca45289e07717a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;memory&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索了它</target>
        </trans-unit>
        <trans-unit id="c0354e975881e43105f8ace23791a829b1f21b19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt; and &lt;code&gt;memoryOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match the memory requirements of the resource, as described in section &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-association&quot;&gt;html/vkspec.html#resources-association&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;memory&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;memory&lt;/code&gt; 和 &lt;code&gt;memoryOffset&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;匹配资源的内存要求，如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-association&quot;&gt;html / vkspec.html＃resources-association部分中所述&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="705bea1531db743d3f1cbebf7c05c018db563064" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkDeviceMemory&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;memory&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;memory&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="c8e8b088a15d14fa78cce225bd5e1a8bdae849d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have been created with a memory type that reports &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; bit set</source>
          <target state="translated">如果 &lt;code&gt;memory&lt;/code&gt; 是不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;， &lt;code&gt;memory&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能已经与存储类型的报表创建 &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; 位设置</target>
        </trans-unit>
        <trans-unit id="b3155b99fc0510638fd99c6055d9430708064b42" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memoryBarrierCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;memoryBarrierCount&lt;/code&gt; valid &lt;code&gt;VkMemoryBarrier&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;memoryBarrierCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效的 &lt;code&gt;VkMemoryBarrier&lt;/code&gt; 结构的 &lt;code&gt;memoryBarrierCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="4f55e412f7d96a3061a898b58a1576a462190761" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;oldLayout&lt;/code&gt; is not equal to &lt;code&gt;newLayout&lt;/code&gt;, then the memory barrier defines an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-image-layout-transitions&quot;&gt;image layout transition&lt;/a&gt; for the specified image subresource range.</source>
          <target state="translated">如果 &lt;code&gt;oldLayout&lt;/code&gt; 不等于 &lt;code&gt;newLayout&lt;/code&gt; ，则内存屏障将为指定的图像子资源范围定义&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-image-layout-transitions&quot;&gt;图像布局转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd34f1225339f746b578dbb1393620eb2c46edea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pAllocator&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pAllocator&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="afb27ff8f07a2cfa4c573f71385b0415ea5a6606" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pApplicationInfo&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pApplicationInfo&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkApplicationInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pApplicationInfo&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pApplicationInfo&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkApplicationInfo&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="1bf99137c04d2828ed3a8ea5217673d4bdb8088b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pApplicationName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pApplicationName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">如果 &lt;code&gt;pApplicationName&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pApplicationName&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为以空值终止的UTF-8字符串</target>
        </trans-unit>
        <trans-unit id="4adeea073037e39cb389c3da9713e2d15d03b1e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pCode&lt;/code&gt; declares any of the capabilities that are listed as not required by the implementation, the relevant feature &lt;strong&gt;must&lt;/strong&gt; be enabled, as listed in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#spirvenv-capabilities-table&quot;&gt;SPIR-V Environment&lt;/a&gt; appendix</source>
          <target state="translated">如果 &lt;code&gt;pCode&lt;/code&gt; 声明实现中未列出的任何功能，则&lt;strong&gt;必须&lt;/strong&gt;启用相关功能，如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#spirvenv-capabilities-table&quot;&gt;SPIR-V环境&lt;/a&gt;附录中所列</target>
        </trans-unit>
        <trans-unit id="5d5e4b60aa1137524792b595e49b147934b3de8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pData&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the maximum size of the data that &lt;strong&gt;can&lt;/strong&gt; be retrieved from the pipeline cache, in bytes, is returned in &lt;code&gt;pDataSize&lt;/code&gt;. Otherwise, &lt;code&gt;pDataSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the size of the buffer, in bytes, pointed to by &lt;code&gt;pData&lt;/code&gt;, and on return the variable is overwritten with the amount of data actually written to &lt;code&gt;pData&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pData&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pDataSize&lt;/code&gt; 中返回&lt;strong&gt;可以&lt;/strong&gt;从管道缓存中检索的最大数据大小（以字节为单位）。否则， &lt;code&gt;pDataSize&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置为缓冲区大小的变量，该大小以字节为单位，由 &lt;code&gt;pData&lt;/code&gt; 指向，返回时，该变量将被实际写入 &lt;code&gt;pData&lt;/code&gt; 的数据量覆盖。</target>
        </trans-unit>
        <trans-unit id="c268ed5bfba26ffc34f3e0ca2b4e127a2cb3cd29" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDataSize&lt;/code&gt; is less than the maximum size that &lt;strong&gt;can&lt;/strong&gt; be retrieved by the pipeline cache, at most &lt;code&gt;pDataSize&lt;/code&gt; bytes will be written to &lt;code&gt;pData&lt;/code&gt;, and &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; will return &lt;code&gt;VK_INCOMPLETE&lt;/code&gt;. Any data written to &lt;code&gt;pData&lt;/code&gt; is valid and &lt;strong&gt;can&lt;/strong&gt; be provided as the &lt;code&gt;pInitialData&lt;/code&gt; member of the &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; structure passed to &lt;code&gt;vkCreatePipelineCache&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pDataSize&lt;/code&gt; 小于管道缓存可以检索的最大大小，&lt;strong&gt;则&lt;/strong&gt;最多 &lt;code&gt;pDataSize&lt;/code&gt; 字节写入 &lt;code&gt;pData&lt;/code&gt; ，并且 &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; 将返回 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; 。写入 &lt;code&gt;pData&lt;/code&gt; 的任何数据都是有效的，并且&lt;strong&gt;可以&lt;/strong&gt;作为传递给 &lt;code&gt;vkCreatePipelineCache&lt;/code&gt; 的 &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; 结构的 &lt;code&gt;pInitialData&lt;/code&gt; 成员提供。</target>
        </trans-unit>
        <trans-unit id="cf6165b835c209239173e548b0c17f093d3fb3b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDataSize&lt;/code&gt; is less than what is necessary to store this header, nothing will be written to &lt;code&gt;pData&lt;/code&gt; and zero will be written to &lt;code&gt;pDataSize&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pDataSize&lt;/code&gt; 小于存储此标头所需的大小，则不会将任何内容写入 &lt;code&gt;pData&lt;/code&gt; 并将零写入 &lt;code&gt;pDataSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede48e8f4820ef654ca8605142ed27b2b9bb9441" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkAttachmentReference&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 结构的指针。</target>
        </trans-unit>
        <trans-unit id="a2828c50afaed410c863128886e1bd4af2b405e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; is not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; and any attachments in &lt;code&gt;pColorAttachments&lt;/code&gt; are not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, they &lt;strong&gt;must&lt;/strong&gt; have the same sample count</source>
          <target state="translated">如果 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 不是 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; ,并且 &lt;code&gt;pColorAttachments&lt;/code&gt; 中的任何附件不是 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; ，则它们&lt;strong&gt;必须&lt;/strong&gt;具有相同的样本数</target>
        </trans-unit>
        <trans-unit id="c162a54f5c0e1c374e6cb530c152ab7bc06a6588" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDynamicState&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pDynamicState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pDynamicState&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pDynamicState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="6e53e84a8774324df1d559830cb534dac29e86ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEnabledFeatures&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pEnabledFeatures&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pEnabledFeatures&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pEnabledFeatures&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="d5245a93fd77b45f2fdb11922575975a42e04639" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEngineName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pEngineName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">如果 &lt;code&gt;pEngineName&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pEngineName&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为以空值终止的UTF-8字符串</target>
        </trans-unit>
        <trans-unit id="34e116f58ebc0a12379cb8e17373cedc9c02233e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEvents&lt;/code&gt; includes one or more events that will be signaled by &lt;code&gt;vkSetEvent&lt;/code&gt; after &lt;code&gt;commandBuffer&lt;/code&gt; has been submitted to a queue, then &lt;code&gt;vkCmdWaitEvents&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be called inside a render pass instance</source>
          <target state="translated">如果 &lt;code&gt;pEvents&lt;/code&gt; 包括将由信号的一个或多个事件 &lt;code&gt;vkSetEvent&lt;/code&gt; 后 &lt;code&gt;commandBuffer&lt;/code&gt; 已经提交到队列，然后 &lt;code&gt;vkCmdWaitEvents&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能称为内部渲染过程实例</target>
        </trans-unit>
        <trans-unit id="a78254cb10e3d03e778330f65e7d9801f82022ec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pLayerName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pLayerName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">如果 &lt;code&gt;pLayerName&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pLayerName&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为以空值终止的UTF-8字符串</target>
        </trans-unit>
        <trans-unit id="28dafc84b0582e51bed9045362efbdbde3f0f2eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pOriginal&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then &lt;code&gt;pfnReallocation&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; behave equivalently to a call to &lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt; with the same parameter values (without &lt;code&gt;pOriginal&lt;/code&gt;).</source>
          <target state="translated">如果 &lt;code&gt;pOriginal&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pfnReallocation&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等效表现来给呼叫&lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt;具有相同的参数值（不 &lt;code&gt;pOriginal&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d3fdeeb5c10628e29c9e996a8c4d5f06dd502054" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pOriginal&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt;, the implementation &lt;strong&gt;must&lt;/strong&gt; ensure that &lt;code&gt;alignment&lt;/code&gt; is equal to the &lt;code&gt;alignment&lt;/code&gt; used to originally allocate &lt;code&gt;pOriginal&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pOriginal&lt;/code&gt; 为非 &lt;code&gt;NULL&lt;/code&gt; ，则实现&lt;strong&gt;必须&lt;/strong&gt;确保 &lt;code&gt;alignment&lt;/code&gt; 方式等于最初分配 &lt;code&gt;pOriginal&lt;/code&gt; 时使用的 &lt;code&gt;alignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4ddb06297fba3d6c9032052243c3ad8690ce415" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pPhysicalDevices&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of physical devices available is returned in &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pPhysicalDevices&lt;/code&gt; array, and on return the variable is overwritten with the number of handles actually written to &lt;code&gt;pPhysicalDevices&lt;/code&gt;. If &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is less than the number of physical devices available, at most &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is smaller than the number of physical devices available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available physical devices were returned.</source>
          <target state="translated">如果 &lt;code&gt;pPhysicalDevices&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; 中返回可用的物理设备数。否则， &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置的变量，该变量设置为 &lt;code&gt;pPhysicalDevices&lt;/code&gt; 数组中的元素数，返回时，该变量将被实际写入 &lt;code&gt;pPhysicalDevices&lt;/code&gt; 的句柄数覆盖。如果 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; 小于可用物理设备的数量，则最多将写入 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; 结构。如果 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; 小于可用物理设备的数量，则 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; 将返回而不是 &lt;code&gt;VK_SUCCESS&lt;/code&gt; ，以指示并非所有可用的物理设备都已返回。</target>
        </trans-unit>
        <trans-unit id="d29f23404131ef20d869ce35dfd78a048c3093cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of extensions properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of extension properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPropertyCount&lt;/code&gt; is smaller than the number of extensions available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available properties were returned.</source>
          <target state="translated">如果 &lt;code&gt;pProperties&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pPropertyCount&lt;/code&gt; 中返回可用扩展属性的数量。否则， &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置为 &lt;code&gt;pProperties&lt;/code&gt; 数组中元素数量的变量，返回时，该变量将被实际写入 &lt;code&gt;pProperties&lt;/code&gt; 的结构数量覆盖。如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 小于可用扩展属性的数量，则最多将写入 &lt;code&gt;pPropertyCount&lt;/code&gt; 结构。如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 小于可用扩展的数量，将返回 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; 而不是 &lt;code&gt;VK_SUCCESS&lt;/code&gt; ，以指示未返回所有可用的属性。</target>
        </trans-unit>
        <trans-unit id="69ffbf0a68d3e52f9397641c4fbfaaa9e81e61ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of layer properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of layer properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPropertyCount&lt;/code&gt; is smaller than the number of layers available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available layer properties were returned.</source>
          <target state="translated">如果 &lt;code&gt;pProperties&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pPropertyCount&lt;/code&gt; 中返回可用的图层属性数。否则， &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置为 &lt;code&gt;pProperties&lt;/code&gt; 数组中元素数量的变量，返回时，该变量将被实际写入 &lt;code&gt;pProperties&lt;/code&gt; 的结构数量覆盖。如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 小于可用的图层属性数，则最多将写入 &lt;code&gt;pPropertyCount&lt;/code&gt; 结构。如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 小于可用的层数，则将返回 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; 而不是 &lt;code&gt;VK_SUCCESS&lt;/code&gt; ，以指示未返回所有可用的图层属性。</target>
        </trans-unit>
        <trans-unit id="3803b16ef528e0e7585ebb523bba238237223a02" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of sparse format properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of sparse format properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">如果 &lt;code&gt;pProperties&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pPropertyCount&lt;/code&gt; 中返回可用的稀疏格式属性的数量。否则， &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置为 &lt;code&gt;pProperties&lt;/code&gt; 数组中元素数量的变量，返回时，该变量将被实际写入 &lt;code&gt;pProperties&lt;/code&gt; 的结构数量覆盖。如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 小于可用的稀疏格式属性的数量，则最多将写入 &lt;code&gt;pPropertyCount&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="8a1e8547822f420f7b662e78f9360ed6d49e75e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of queue families available is returned in &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pQueueFamilyProperties&lt;/code&gt;. If &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; is less than the number of queue families available, at most &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">如果 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; 中返回可用的队列系列数。否则， &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置的变量，该变量设置为 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; 数组中的元素数，返回时，该变量将被实际写入 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; 的结构数覆盖。如果 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; 小于可用的队列系列数目，则最多将写入 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="d6a61c8f411b9499a186e3a39db51b17f2f6d678" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pResolveAttachments&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, for each resolve attachment that does not have the value &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, the corresponding color attachment &lt;strong&gt;must&lt;/strong&gt; not have the value &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pResolveAttachments&lt;/code&gt; 不是 &lt;code&gt;NULL&lt;/code&gt; ，对于每一个附件的决心不具有价值 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; ，相应的附色&lt;strong&gt;一定&lt;/strong&gt;没有价值 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fed082c6ee28bf8a79ef0a715771ac0211ff864f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pResolveAttachments&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, the sample count of each element of &lt;code&gt;pColorAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be anything other than &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pResolveAttachments&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pColorAttachments&lt;/code&gt; 的每个元素的样本计数&lt;strong&gt;必须&lt;/strong&gt;为VK_SAMPLE_COUNT_1_BIT以外的其他 &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8a1f6ba6f7b8fc846befe2e6693efc1f7f8416e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSampleMask&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSampleMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of \(\lceil{\mathit{rasterizationSamples} \over 32}\rceil\) &lt;code&gt;VkSampleMask&lt;/code&gt; values</source>
          <target state="translated">如果 &lt;code&gt;pSampleMask&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pSampleMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向\（\ lceil {\ mathit {rasterizationSamples} \ over 32} \ rceil \） &lt;code&gt;VkSampleMask&lt;/code&gt; 值的数组的指针</target>
        </trans-unit>
        <trans-unit id="adcbd2f93cae55f38abc9cd723b9339a40ce5220" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of sparse memory requirements available is returned in &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;. Otherwise, &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt;. If &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; is less than the number of sparse memory requirements available, at most &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">如果 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则在 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; 中返回可用的稀疏内存需求数。否则， &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指向用户设置为 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 数组中元素数量的变量，并且返回时，该变量将被实际写入 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 的结构数量覆盖。如果 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; 小于可用的稀疏内存需求数，则最多将写入 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="eb3f577bfc3106b4f325f3622aa3a0fd0975900a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSpecializationInfo&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSpecializationInfo&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkSpecializationInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pSpecializationInfo&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pSpecializationInfo&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkSpecializationInfo&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="1a7d26ead84a57c1b198f2d9cd849b58fdd65412" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a fragment shader stage and a geometry shader stage, and the fragment shader code reads from an input variable that is decorated with &lt;code&gt;PrimitiveID&lt;/code&gt;, then the geometry shader code &lt;strong&gt;must&lt;/strong&gt; write to a matching output variable, decorated with &lt;code&gt;PrimitiveID&lt;/code&gt;, in all execution paths</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包括一个片段着色器阶段和一个几何着色器阶段，并且片段着色器代码从装饰有 &lt;code&gt;PrimitiveID&lt;/code&gt; 的输入变量中读取，则几何着色器代码&lt;strong&gt;必须&lt;/strong&gt;在所有执行路径中写入一个匹配的输出变量，该变量以 &lt;code&gt;PrimitiveID&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="cb19585720d0f53bc6a9f47b1a01caedfa4e7faa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a fragment shader stage, its shader code &lt;strong&gt;must&lt;/strong&gt; not read from any input attachment that is defined as &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; in &lt;code&gt;subpass&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包括片段着色器级，其着色器代码&lt;strong&gt;必须&lt;/strong&gt;不从被定义为任何输入连接读 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 在 &lt;code&gt;subpass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="213003591c9726b8d96fe3269ef35d40298ac3b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a geometry shader stage, and also includes tessellation shader stages, its shader code &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an input primitive type that is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;compatible&lt;/a&gt; with the primitive topology that is output by the tessellation stages</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包括几何体着色器阶段，并且还包括镶嵌细分着色器阶段，则其着色器代码&lt;strong&gt;必须&lt;/strong&gt;包含 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定与镶嵌细分阶段输出的基本拓扑&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;兼容&lt;/a&gt;的输入基本类型。</target>
        </trans-unit>
        <trans-unit id="eb8a7b796bbee8c06d1c62be97220e1414bb0297" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a geometry shader stage, and does not include any tessellation shader stages, its shader code &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an input primitive type that is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;compatible&lt;/a&gt; with the primitive topology specified in &lt;code&gt;pInputAssembly&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包括几何形状着色器阶段，并且不包括任何曲面细分着色器阶段，它的着色器代码&lt;strong&gt;必须&lt;/strong&gt;包含一个 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令指定的输入原始类型是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;兼容&lt;/a&gt;与指定的原始拓扑 &lt;code&gt;pInputAssembly&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffa5c1b756e6b407c6873938c09e46f11847b30b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation control shader stage and a tessellation evaluation shader stage, &lt;code&gt;pTessellationState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌控制着色器阶段和镶嵌评估着色器阶段，则 &lt;code&gt;pTessellationState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; 结构的指针</target>
        </trans-unit>
        <trans-unit id="11667038bd54bf1a284d2b65cc83153e3ace7d8e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation control shader stage, it &lt;strong&gt;must&lt;/strong&gt; include a tessellation evaluation shader stage</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌控制着色器阶段，则&lt;strong&gt;必须&lt;/strong&gt;包含镶嵌评估着色器阶段</target>
        </trans-unit>
        <trans-unit id="5bb0f8793e17212ab38eb23e9f17a21076afd3b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation evaluation shader stage, it &lt;strong&gt;must&lt;/strong&gt; include a tessellation control shader stage</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含细分评估着色器阶段，则它&lt;strong&gt;必须&lt;/strong&gt;包括细分控制着色器阶段</target>
        </trans-unit>
        <trans-unit id="78e5025e82088855d10a1ef954ee73c284187d76" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, and the shader code of both contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the out patch size in the pipeline, they &lt;strong&gt;must&lt;/strong&gt; both specify the same patch size</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌细分着色器阶段，并且两者的着色器代码都包含 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定管道中出补丁的大小，则它们都&lt;strong&gt;必须&lt;/strong&gt;指定相同的补丁大小</target>
        </trans-unit>
        <trans-unit id="0005c332bde3a464753ffa0190fac02f633464b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, and the shader code of both stages contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the type of subdivision in the pipeline, they &lt;strong&gt;must&lt;/strong&gt; both specify the same subdivision mode</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌细分着色器阶段，并且两个阶段的着色器代码都包含 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定管道中的细分类型，则它们都&lt;strong&gt;必须&lt;/strong&gt;指定相同的细分模式</target>
        </trans-unit>
        <trans-unit id="53ac0926d13c197b37aaee0fccff625ee4aa432c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the &lt;code&gt;topology&lt;/code&gt; member of &lt;code&gt;pInputAssembly&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌细分着色器阶段，则 &lt;code&gt;pInputAssembly&lt;/code&gt; 的 &lt;code&gt;topology&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52833750bd46512d2b92fafa95eed4601178f6b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the shader code of at least one stage &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the output patch size in the pipeline</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌细分着色器阶段，则至少一个阶段的着色器代码&lt;strong&gt;必须&lt;/strong&gt;包含 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定管道中输出补丁的大小</target>
        </trans-unit>
        <trans-unit id="7ceca0a7d060c9252f8d0038b3deeae591af9fa5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the shader code of at least one stage &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the type of subdivision in the pipeline</source>
          <target state="translated">如果 &lt;code&gt;pStages&lt;/code&gt; 包含镶嵌细分着色器阶段，则至少一个阶段的着色器代码&lt;strong&gt;必须&lt;/strong&gt;包含 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定管道中细分的类型</target>
        </trans-unit>
        <trans-unit id="300a07bf2e2f2f3d2c3bfdc070739b0d770e166b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pfnAllocation&lt;/code&gt; is unable to allocate the requested memory, it &lt;strong&gt;must&lt;/strong&gt; return &lt;code&gt;NULL&lt;/code&gt;. If the allocation was successful, it &lt;strong&gt;must&lt;/strong&gt; return a valid pointer to memory allocation containing at least &lt;code&gt;size&lt;/code&gt; bytes, and with the pointer value being a multiple of &lt;code&gt;alignment&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pfnAllocation&lt;/code&gt; 无法分配请求的内存，则它&lt;strong&gt;必须&lt;/strong&gt;返回 &lt;code&gt;NULL&lt;/code&gt; 。如果分配成功，则&lt;strong&gt;必须&lt;/strong&gt;返回一个有效的指向内存分配的指针，该内存分配至少包含 &lt;code&gt;size&lt;/code&gt; 字节，并且指针值是 &lt;code&gt;alignment&lt;/code&gt; 的倍数。</target>
        </trans-unit>
        <trans-unit id="83a506a319b17911a2776da4addfa9a1b9cff263" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pfnAllocation&lt;/code&gt; returns &lt;code&gt;NULL&lt;/code&gt;, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it &lt;strong&gt;must&lt;/strong&gt; treat this as a run-time error, and generate &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; at the appropriate time for the command in which the condition was detected, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-errorcodes&quot;&gt;Return Codes&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pfnAllocation&lt;/code&gt; 返回 &lt;code&gt;NULL&lt;/code&gt; ，并且如果实现无法在没有请求的分配的情况下继续执行当前命令，则它&lt;strong&gt;必须&lt;/strong&gt;将其视为运行时错误，并在适当的时间为发生条件的命令生成 &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; 如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-errorcodes&quot;&gt;返回码中&lt;/a&gt;所述检测到。</target>
        </trans-unit>
        <trans-unit id="ffe7fcd07be5d918a42aeda8864417b7ec77f249" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipeline&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pipeline&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已从 &lt;code&gt;device&lt;/code&gt; 创建，分配或检索它</target>
        </trans-unit>
        <trans-unit id="dd1e093825aae98411e5c75bc5bce2a22367e3c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipeline&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipeline&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;pipeline&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkPipeline&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="153c798bd7e80fb9a1cc81610dd910ee4eca6c9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a compute pipeline</source>
          <target state="translated">如果 &lt;code&gt;pipelineBindPoint&lt;/code&gt; 为 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; ，则 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是计算管道</target>
        </trans-unit>
        <trans-unit id="e65fb2b6ffea4264715efda66841377dd8c6d045" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">如果 &lt;code&gt;pipelineBindPoint&lt;/code&gt; 为 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; ， &lt;code&gt;VkCommandPool&lt;/code&gt; 其分配 &lt;code&gt;commandBuffer&lt;/code&gt; 的VkCommandPool &lt;strong&gt;必须&lt;/strong&gt;支持计算操作</target>
        </trans-unit>
        <trans-unit id="d94dfd102a7fe218368fba9a33854bf43d38f7c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a graphics pipeline</source>
          <target state="translated">如果 &lt;code&gt;pipelineBindPoint&lt;/code&gt; 为 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; ，则 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是图形管道</target>
        </trans-unit>
        <trans-unit id="79745d136782dffd9e87c80e9ea1d76d57a37904" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">如果 &lt;code&gt;pipelineBindPoint&lt;/code&gt; 为 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; ， &lt;code&gt;VkCommandPool&lt;/code&gt; 其分配 &lt;code&gt;commandBuffer&lt;/code&gt; 的VkCommandPool &lt;strong&gt;必须&lt;/strong&gt;支持图形操作</target>
        </trans-unit>
        <trans-unit id="91e6247dcaccbe1690e5c7ce77c176eb3cfcd4b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineCache&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pipelineCache&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已从 &lt;code&gt;device&lt;/code&gt; 创建，分配或检索它</target>
        </trans-unit>
        <trans-unit id="55aa495075c0d9098dea18ae49c7747449e50822" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineCache&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipelineCache&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipelineCache&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;pipelineCache&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;pipelineCache&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkPipelineCache&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="7330ebc0d76fccefa3d8e5f30ef5bf6c1ab56477" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineLayout&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pipelineLayout&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索到它</target>
        </trans-unit>
        <trans-unit id="b32aad41399cfbd52b5a3d8b48e3948f0aed9be0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineLayout&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipelineLayout&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipelineLayout&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;pipelineLayout&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;pipelineLayout&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkPipelineLayout&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="e6c32346272df58ab1d1e9b0b89d995b751b681c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preserveAttachmentCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pPreserveAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;preserveAttachmentCount&lt;/code&gt;&lt;code&gt;uint32_t&lt;/code&gt; values</source>
          <target state="translated">如果 &lt;code&gt;preserveAttachmentCount&lt;/code&gt; 不是 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;pPreserveAttachments&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向的数组 &lt;code&gt;preserveAttachmentCount&lt;/code&gt; &lt;code&gt;uint32_t&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="b2b4de6164b1178a7cc5c35bcd7f277b6299f29d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pushConstantRangeCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pPushConstantRanges&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pushConstantRangeCount&lt;/code&gt; valid &lt;code&gt;VkPushConstantRange&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pushConstantRangeCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pPushConstantRanges&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPushConstantRange&lt;/code&gt; 结构的 &lt;code&gt;pushConstantRangeCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="f4ad28afe112ed8d3e1165be5d8e5b2a56e3f211" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryPool&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;queryPool&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索到它</target>
        </trans-unit>
        <trans-unit id="df624fc3c9a3ca3bd7c06e66de993662fa456314" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryPool&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;queryPool&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkQueryPool&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;queryPool&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;queryPool&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkQueryPool&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="fc4e80608676bfa3839089a81b68a5edd01bfdfa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryType&lt;/code&gt; is &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;, &lt;code&gt;pipelineStatistics&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid combination of &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt; values</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 为 &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; ，则 &lt;code&gt;pipelineStatistics&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是&lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt;值的有效组合</target>
        </trans-unit>
        <trans-unit id="062c47aadf45ed8ae37a3e498e3ebaa4d83d54de" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; divided by the element size of &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxTexelBufferElements&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;range&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;range&lt;/code&gt; 除以 &lt;code&gt;format&lt;/code&gt; 的元素大小&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxTexelBufferElements&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18209f5bbd843ce50954c0c6fd2d76a4a4cee89f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the element size of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;range&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;format&lt;/code&gt; 元素大小的倍数</target>
        </trans-unit>
        <trans-unit id="6464284a8211bbac6c292ea5a546f35dff72c004" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;range&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;大于 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85c4a0c27ceb639c505406805e6b3f3ded8e776a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;range&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;buffer&lt;/code&gt; 的大小减去 &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb601e80277926542492492065c28f52577758e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;range&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;offset&lt;/code&gt; 和 &lt;code&gt;range&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;buffer&lt;/code&gt; 的大小</target>
        </trans-unit>
        <trans-unit id="a65de0ab2f8072caf3955bc8c4ef35a66b1ecddb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;renderPass&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;renderPass&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索了它</target>
        </trans-unit>
        <trans-unit id="275fe845105cc67a32e7dba319813f55a65a2f0d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;renderPass&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;renderPass&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkRenderPass&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;renderPass&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;renderPass&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkRenderPass&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="c36d1568d390e977c6aace1b44e74c2e249ac9cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;robustBufferAccess&lt;/code&gt; is not enabled, out of bounds accesses &lt;strong&gt;may&lt;/strong&gt; corrupt any memory within the process and cause undefined behavior up to and including application termination.</source>
          <target state="translated">如果未启用 &lt;code&gt;robustBufferAccess&lt;/code&gt; ，则超出范围的访问&lt;strong&gt;可能会&lt;/strong&gt;破坏进程中的任何内存，并导致直到（包括）应用程序终止的不确定行为。</target>
        </trans-unit>
        <trans-unit id="3737725490e838b34ad6849d25eff798626d077a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sampler&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;sampler&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已从 &lt;code&gt;device&lt;/code&gt; 创建，分配或检索了它</target>
        </trans-unit>
        <trans-unit id="e357190d526fbbb656f4a22f0fcef2f17d283b8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sampler&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;sampler&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkSampler&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;sampler&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;sampler&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkSampler&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="c6c917d9762a763255446685be227d581f031636" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;samples&lt;/code&gt; is not &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;mipLevels&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;samples&lt;/code&gt; 不是 &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能包含 &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; ，和 &lt;code&gt;mipLevels&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="622fbf4139dbe05ef04be95046b07c95761146c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;semaphore&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;semaphore&lt;/code&gt; 是有效的句柄，则它&lt;strong&gt;必须&lt;/strong&gt;已从 &lt;code&gt;device&lt;/code&gt; 创建，分配或检索到</target>
        </trans-unit>
        <trans-unit id="1ea5f5dd7ebae6132e1524a9a04f13436d8db52e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;semaphore&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;semaphore&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkSemaphore&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;semaphore&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;semaphore&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkSemaphore&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="b4727b777295167d0a0ca0a100dcf9b245785ef2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setLayoutCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;setLayoutCount&lt;/code&gt; valid &lt;code&gt;VkDescriptorSetLayout&lt;/code&gt; handles</source>
          <target state="translated">如果 &lt;code&gt;setLayoutCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;setLayoutCount&lt;/code&gt; 有效 &lt;code&gt;VkDescriptorSetLayout&lt;/code&gt; 句柄数组的指针</target>
        </trans-unit>
        <trans-unit id="e5586cedc1b99dbef66f7d21dbc3aa8050a6c247" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shaderModule&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;shaderModule&lt;/code&gt; 是有效的句柄，则&lt;strong&gt;必须&lt;/strong&gt;已创建，分配或从 &lt;code&gt;device&lt;/code&gt; 检索到它</target>
        </trans-unit>
        <trans-unit id="a4138315de047300d0e6e1f3040a99831549f44b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shaderModule&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;shaderModule&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkShaderModule&lt;/code&gt; handle</source>
          <target state="translated">如果 &lt;code&gt;shaderModule&lt;/code&gt; 不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则 &lt;code&gt;shaderModule&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是有效的 &lt;code&gt;VkShaderModule&lt;/code&gt; 句柄</target>
        </trans-unit>
        <trans-unit id="8fb2a2d4b7cd5350c6daeb68edda0270f5e2d7b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;pQueueFamilyIndices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;queueFamilyIndexCount&lt;/code&gt;&lt;code&gt;uint32_t&lt;/code&gt; values</source>
          <target state="translated">如果 &lt;code&gt;sharingMode&lt;/code&gt; 为 &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; ，则 &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; &lt;code&gt;uint32_t&lt;/code&gt; 值数组的指针</target>
        </trans-unit>
        <trans-unit id="4afca4c5c4a5e2d04c1de1e86322c58ac4c98d9e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;queueFamilyIndexCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;sharingMode&lt;/code&gt; 为 &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; ，则 &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;大于 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6fff539995d9897ce9a43f9b68e9b7d5a874db9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, each element of &lt;code&gt;pQueueFamilyIndices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique and &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; returned by &lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt; for the &lt;code&gt;physicalDevice&lt;/code&gt; that was used to create &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;sharingMode&lt;/code&gt; 为 &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; ，则pQueueFamilyIndi​​ces的每个元素 &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是唯一的，并且&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; 返回的用于创建 &lt;code&gt;device&lt;/code&gt; 的 &lt;code&gt;physicalDevice&lt;/code&gt; 的&lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;pQueueFamilyPropertyCount&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ade03a815b28bc25229d1f193bb2de9b3ff3295" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;signalSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSignalSemaphores&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;signalSemaphoreCount&lt;/code&gt; valid &lt;code&gt;VkSemaphore&lt;/code&gt; handles</source>
          <target state="translated">如果 &lt;code&gt;signalSemaphoreCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pSignalSemaphores&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkSemaphore&lt;/code&gt; 句柄的 &lt;code&gt;signalSemaphoreCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="ba4de3ca6f3e990e5bb5d52f0f8084869618250a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be within the currently mapped range of &lt;code&gt;memory&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;offset&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;在当前映射的 &lt;code&gt;memory&lt;/code&gt; 范围内</target>
        </trans-unit>
        <trans-unit id="83baa27d95429da4f64c25163d16d23d5a48297f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, the end of the current mapping of &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;nonCoherentAtomSize&lt;/code&gt; bytes from the beginning of the memory object.</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则当前 &lt;code&gt;memory&lt;/code&gt; 映射的结尾&lt;strong&gt;必须&lt;/strong&gt;是从内存对象开始处的 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;nonCoherentAtomSize&lt;/code&gt; 字节的倍数。</target>
        </trans-unit>
        <trans-unit id="cb388f6eb586cb54178b72666a25831a965945bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify a range contained within the currently mapped range of &lt;code&gt;memory&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;offset&lt;/code&gt; 和 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指定包含在当前映射的 &lt;code&gt;memory&lt;/code&gt; 范围内的范围</target>
        </trans-unit>
        <trans-unit id="68b79a1e21b8ebddebf20d0a97ada18f9b031ed8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;4&lt;/code&gt; 的倍数</target>
        </trans-unit>
        <trans-unit id="9cd031978c758143979d340abf2a92e403a97d69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;大于 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5068a323fdf2f68f9c3c42efa9ad5c5e0e2f3243" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to than the size of &lt;code&gt;buffer&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;buffer&lt;/code&gt; 的大小减去 &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8192f3bc9447ff760e8000e9d3e05a3786778eec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;dstBuffer&lt;/code&gt; minus &lt;code&gt;dstOffset&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;dstBuffer&lt;/code&gt; 减去 &lt;code&gt;dstOffset&lt;/code&gt; 的大小。</target>
        </trans-unit>
        <trans-unit id="75330f62bbef69e255a5ea813f689b3e8a838835" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of the &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;memory&lt;/code&gt; 大小减去 &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5350cb8e2ad2c14fd2839c8059f2181a3ace86a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; either be a multiple of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;nonCoherentAtomSize&lt;/code&gt;, or &lt;code&gt;offset&lt;/code&gt; plus &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; equal the size of &lt;code&gt;memory&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 不等于 &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; ，则 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;nonCoherentAtomSize&lt;/code&gt; 的倍数，或者 &lt;code&gt;offset&lt;/code&gt; 加 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于 &lt;code&gt;memory&lt;/code&gt; 的大小。</target>
        </trans-unit>
        <trans-unit id="4dbdc8e1811726d2151c3403e5c798079659f06b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is zero, then &lt;code&gt;pfnReallocation&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; behave equivalently to a call to &lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt; with the same &lt;code&gt;pUserData&lt;/code&gt; parameter value, and &lt;code&gt;pMemory&lt;/code&gt; equal to &lt;code&gt;pOriginal&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 为零，则 &lt;code&gt;pfnReallocation&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等效表现来给呼叫&lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt;具有相同 &lt;code&gt;pUserData&lt;/code&gt; 参数值，并 &lt;code&gt;pMemory&lt;/code&gt; 等于 &lt;code&gt;pOriginal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf291902a931747df9a3f6c891b499706f41aaed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcBuffer&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">如果 &lt;code&gt;srcBuffer&lt;/code&gt; 是非稀疏的，则&lt;strong&gt;必须&lt;/strong&gt;将其完整且连续地绑定到单个 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="fb91b7d3ce7d9cb1f3d3b39810ef42c6cc93eb92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcImage&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">如果 &lt;code&gt;srcImage&lt;/code&gt; 是非稀疏的，则&lt;strong&gt;必须&lt;/strong&gt;将其完整且连续地绑定到单个 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="a0e06b8fba3356608eb9f9039d3707df94d7b228" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcImage&lt;/code&gt; was created with a depth/stencil format, &lt;code&gt;filter&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;srcImage&lt;/code&gt; 是使用深度/模板格式创建的，则 &lt;code&gt;filter&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6bc5b1d084e318ee3b1585c3047a0e6056a66fd4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is not equal to &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is equal to the current queue family, then the memory barrier defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;queue family release operation&lt;/a&gt; for the specified buffer range, and the second access scope includes no access, as if &lt;code&gt;dstAccessMask&lt;/code&gt; was &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 不等于 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; ，并且 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 等于当前队列族，那么内存屏障将为指定的缓冲区范围定义&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;队列族释放操作&lt;/a&gt;，并且第二个访问范围不包括访问，就像 &lt;code&gt;dstAccessMask&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="8bcfc93911c3dd8c779a6a290100ddd630eff2c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is not equal to &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is equal to the current queue family, then the memory barrier defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;queue family release operation&lt;/a&gt; for the specified image subresource range, and the second access scope includes no access, as if &lt;code&gt;dstAccessMask&lt;/code&gt; was &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 不等于 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; ，并且 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 等于当前队列族，则内存屏障为指定的图像子资源范围定义&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;队列族释放操作&lt;/a&gt;，并且第二个访问范围不包括访问，就好像 &lt;code&gt;dstAccessMask&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="c1c2e43230d9c591238c84f5389159dbc0a813af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSet&lt;/code&gt; is equal to &lt;code&gt;dstSet&lt;/code&gt;, then the source and destination ranges of descriptors &lt;strong&gt;must&lt;/strong&gt; not overlap, where the ranges &lt;strong&gt;may&lt;/strong&gt; include array elements from consecutive bindings as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;srcSet&lt;/code&gt; 等于 &lt;code&gt;dstSet&lt;/code&gt; ，则描述符的源和目的地范围&lt;strong&gt;必须&lt;/strong&gt;不重叠，其中，所述范围&lt;strong&gt;可以&lt;/strong&gt;包括如由从连续绑定数组元素&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;的HTML / vkspec.html＃descriptorsets-更新连续&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9f07c4a81ca9f9a0bea0bb52245c5c2a103aba2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt;, the first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes commands submitted to the queue before the render pass instance began. Otherwise, the first set of commands includes all commands submitted as part of the subpass instance identified by &lt;code&gt;srcSubpass&lt;/code&gt; and any load, store or multisample resolve operations on attachments used in &lt;code&gt;srcSubpass&lt;/code&gt;. In either case, the first synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;srcSubpass&lt;/code&gt; 等于 &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt; ，则第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步作用域&lt;/a&gt;包括在呈现传递实例开始之前提交给队列的命令。否则，第一组命令包括作为srcSubpass标识的 &lt;code&gt;srcSubpass&lt;/code&gt; 通道实例一部分提交的所有命令，以及对srcSubpass中使用的附件的任何加载，存储或多 &lt;code&gt;srcSubpass&lt;/code&gt; 解析操作。无论哪种情况，第一同步作用域都限于对管道级上的操作，这些操作由 &lt;code&gt;srcStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;源级掩码&lt;/a&gt;确定。</target>
        </trans-unit>
        <trans-unit id="d19d8edab63e16ac7f6f9e2fda1a61a776c79a66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt; and not all of the stages in &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt; are &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;framebuffer-space stages&lt;/a&gt;, the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earlier&lt;/a&gt; than or equal to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earliest&lt;/a&gt; pipeline stage in &lt;code&gt;dstStageMask&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;srcSubpass&lt;/code&gt; 等于 &lt;code&gt;dstSubpass&lt;/code&gt; ，而不是所有的阶段 &lt;code&gt;srcStageMask&lt;/code&gt; 和 &lt;code&gt;dstStageMask&lt;/code&gt; 的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;帧缓冲空间的阶段&lt;/a&gt;，在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑上最新&lt;/a&gt;的流水线阶段 &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑上早&lt;/a&gt;于或等于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑最早&lt;/a&gt;在流水线阶段 &lt;code&gt;dstStageMask&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eeaab6a9e6b95fcd6597a5a895785078ad946840" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt; then the &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt; describes a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-barriers-subpass-self-dependencies&quot;&gt;subpass self-dependency&lt;/a&gt;, and only constrains the pipeline barriers allowed within a subpass instance. Otherwise, when a render pass instance which includes a subpass dependency is submitted to a queue, it defines a memory dependency between the subpasses identified by &lt;code&gt;srcSubpass&lt;/code&gt; and &lt;code&gt;dstSubpass&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;srcSubpass&lt;/code&gt; 等于 &lt;code&gt;dstSubpass&lt;/code&gt; ,则&lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt;将描述子&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-barriers-subpass-self-dependencies&quot;&gt;通道自相关性&lt;/a&gt;，并且仅限制子通道实例中允许的管线障碍。否则，将包含子通道依赖项的渲染通道实例提交到队列时，它将在 &lt;code&gt;srcSubpass&lt;/code&gt; 和 &lt;code&gt;dstSubpass&lt;/code&gt; 标识的子通道之间定义内存依赖关系。</target>
        </trans-unit>
        <trans-unit id="978a929a9112561f6136620a5377b29577d82714" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt;, &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only contain one of &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt;, or &lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;srcSubpass&lt;/code&gt; 等于 &lt;code&gt;dstSubpass&lt;/code&gt; ， &lt;code&gt;srcStageMask&lt;/code&gt; 和 &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;只包含一个 &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; ， &lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; 或 &lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f501e61ce1770c956aa3132270d802ffe6de6ee3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is not &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt;, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not include &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;srcSubpass&lt;/code&gt; 不是 &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt; ， &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不包括 &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5025b47f7e7b9b794b1f35b6c63948847ac7e0c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;FragDepth&lt;/code&gt; in any execution path, it &lt;strong&gt;must&lt;/strong&gt; write to &lt;code&gt;FragDepth&lt;/code&gt; in all execution paths</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 是 &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; ，并识别出的条目点写到 &lt;code&gt;FragDepth&lt;/code&gt; 任何执行路径，它&lt;strong&gt;必须&lt;/strong&gt;写入 &lt;code&gt;FragDepth&lt;/code&gt; 在所有执行路径</target>
        </trans-unit>
        <trans-unit id="d4d1a85cda4e9a8a005025571770f85ff5f1bd3b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; not include any output variables in its interface decorated with &lt;code&gt;CullDistance&lt;/code&gt;</source>
          <target state="translated">If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; , the identified entry point &lt;strong&gt;must&lt;/strong&gt; not include any output variables in its interface decorated with &lt;code&gt;CullDistance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19af5ab2cdea1da8ccecbc47b5668432b1d53523" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;Layer&lt;/code&gt; for any primitive, it &lt;strong&gt;must&lt;/strong&gt; write the same value to &lt;code&gt;Layer&lt;/code&gt; for all vertices of a given primitive</source>
          <target state="translated">If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; , and the identified entry point writes to &lt;code&gt;Layer&lt;/code&gt; for any primitive, it &lt;strong&gt;must&lt;/strong&gt; write the same value to &lt;code&gt;Layer&lt;/code&gt; for all vertices of a given primitive</target>
        </trans-unit>
        <trans-unit id="96b678b2769b81fb70880249cf761e75525a3991" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;ViewportIndex&lt;/code&gt; for any primitive, it &lt;strong&gt;must&lt;/strong&gt; write the same value to &lt;code&gt;ViewportIndex&lt;/code&gt; for all vertices of a given primitive</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 是 &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; ，并且标识的入口点写入任何图元的 &lt;code&gt;ViewportIndex&lt;/code&gt; ，则它&lt;strong&gt;必须&lt;/strong&gt;为给定图元的所有顶点将相同的值写入 &lt;code&gt;ViewportIndex&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cc35bec0c0c8211a5be73f9baefe47b0800c9b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; have an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies a maximum output vertex count that is greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxGeometryOutputVertices&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 是 &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; ，则标识的入口点&lt;strong&gt;必须&lt;/strong&gt;具有 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定最大输出顶点计数，该最大输出顶点计数大于 &lt;code&gt;0&lt;/code&gt; 且小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxGeometryOutputVertices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3123aa202dae40e344cf98021c261fd3c1688b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; have an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an invocation count that is greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxGeometryShaderInvocations&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 为 &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; ，则标识的入口点&lt;strong&gt;必须&lt;/strong&gt;具有 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定的调用计数大于 &lt;code&gt;0&lt;/code&gt; 且小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxGeometryShaderInvocations&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14336233f83a1a875d7ef4782f9c637f4a415fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; or &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;, and the identified entry point has an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies a patch size with &lt;code&gt;OutputVertices&lt;/code&gt;, the patch size &lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxTessellationPatchSize&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 是 &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; 或 &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt; ，并且标识的入口点具有 &lt;code&gt;OpExecutionMode&lt;/code&gt; 指令，该指令指定带有 &lt;code&gt;OutputVertices&lt;/code&gt; 的补丁程序大小，则补丁程序大小&lt;strong&gt;必须&lt;/strong&gt;大于 &lt;code&gt;0&lt;/code&gt; 且小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxTessellationPatchSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6aab237a51f7f3f6be89c221ac939f001cb6f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; not include any input variable in its interface that is decorated with &lt;code&gt;CullDistance&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;stage&lt;/code&gt; 是 &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt; ，所确定的入口点&lt;strong&gt;必须&lt;/strong&gt;不包括装饰有其接口的任何输入变量 &lt;code&gt;CullDistance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddfe64a877c66cbff31b0ef967ab689fd04daa94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;submitCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSubmits&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;submitCount&lt;/code&gt; valid &lt;code&gt;VkSubmitInfo&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;submitCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pSubmits&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是一个指向有效 &lt;code&gt;VkSubmitInfo&lt;/code&gt; 结构的 &lt;code&gt;submitCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="8b22f8ce469128faaf2105600af1b9bab5f34e7a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subpass&lt;/code&gt; does not use any color and/or depth/stencil attachments, then the &lt;code&gt;rasterizationSamples&lt;/code&gt; member of &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; follow the rules for a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-noattachments&quot;&gt;zero-attachment subpass&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;subpass&lt;/code&gt; 不使用任何颜色和/或深度/模板附件，则 &lt;code&gt;rasterizationSamples&lt;/code&gt; 的构件 &lt;code&gt;pMultisampleState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;遵循一个规则&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-noattachments&quot;&gt;零附着subpass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80062285e79829a64633dcf028bade488b30164d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subpass&lt;/code&gt; uses color and/or depth/stencil attachments, then the &lt;code&gt;rasterizationSamples&lt;/code&gt; member of &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be the same as the sample count for those subpass attachments</source>
          <target state="translated">如果子 &lt;code&gt;subpass&lt;/code&gt; 使用颜色和/或深度/模板附件，则 &lt;code&gt;pMultisampleState&lt;/code&gt; 的 &lt;code&gt;rasterizationSamples&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;与这些子通道附件的样本计数相同&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d45245f5d72b2a93dc45eb463d64bbfb427b9f9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt; is not &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt;, &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">如果 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; 不是 &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; ， &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为非零和 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;arrayLayers&lt;/code&gt; 中指定&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;当 &lt;code&gt;image&lt;/code&gt; 被创建</target>
        </trans-unit>
        <trans-unit id="43e4d55f3b317a61219dffabf0c886f8f743508f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt; is not &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt;, &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">如果 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; 不 &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; ， &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为非零和 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;mipLevels&lt;/code&gt; 中指定&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;当 &lt;code&gt;image&lt;/code&gt; 被创建</target>
        </trans-unit>
        <trans-unit id="7c08fecc0a33ce2cdc8681c05d96b4ef8778a607" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; ，则 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是至少由 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 返回的 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 值中存在一个受支持的功能位的格式，并且具有相同的 &lt;code&gt;format&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="4b50aa038d71c9a45af8aa2db0d76bf884dec7ab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0408c48825b4f934b6d3194548586c61bda074f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8479c7b8afd50ca3481781981a5f9b841d0fd14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad8ec6ae153d14c693bb0295d05ea3e12c923416" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c01c4f2f6043a75ee3727652f8b9ddddf2319e37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; ，则 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是至少由 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 返回的 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 值具有与 &lt;code&gt;format&lt;/code&gt; 相同值的一种受支持的功能位的格式</target>
        </trans-unit>
        <trans-unit id="2249b8c6490e0ede46732558ea7e24acfedc9b51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80d814f06f90bdc8262c0e4a58793a2f0ba72e48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01ea73ea010f32c9a2c10914801d55d5474d2a4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4486968e83939391a7139547743ff61c4923a03b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;tiling&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 和 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 具有相同的值 &lt;code&gt;format&lt;/code&gt; ）不包括 &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61138376fa0dd3280f0894ce7bb28042836b562f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is zero, then &lt;code&gt;vkWaitForFences&lt;/code&gt; does not wait, but simply returns the current state of the fences. &lt;code&gt;VK_TIMEOUT&lt;/code&gt; will be returned in this case if the condition is not satisfied, even though no actual wait was performed.</source>
          <target state="translated">如果 &lt;code&gt;timeout&lt;/code&gt; 为零，则 &lt;code&gt;vkWaitForFences&lt;/code&gt; 将不等待，而仅返回围栅的当前状态。即使不执行实际的等待，如果不满足条件，在这种情况下也会返回 &lt;code&gt;VK_TIMEOUT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3db896b36e9a6285762adc1bc77a9e4b9a98ce6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;topology&lt;/code&gt; is &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_POINT_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; or &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;, &lt;code&gt;primitiveRestartEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;topology&lt;/code&gt; 是 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_POINT_LIST&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; 或 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt; ， &lt;code&gt;primitiveRestartEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2513b26f83f775149353507c10c5b4c7d9eeb526" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;addressModeU&lt;/code&gt; and &lt;code&gt;addressModeV&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; each be either &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; or &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;addressModeU&lt;/code&gt; 和 &lt;code&gt;addressModeV&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;分别为 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; 或 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f6ed384594ec3af9530c2a5ca0e0212a819ca93" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;anisotropyEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;anisotropyEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="108b578ae950a46d15d7e7ca762da489b503505d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;compareEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;compareEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="711b08667e8fbbb426c788633d42154f9a952707" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;minFilter&lt;/code&gt; and &lt;code&gt;magFilter&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;minFilter&lt;/code&gt; 和 &lt;code&gt;magFilter&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;相等</target>
        </trans-unit>
        <trans-unit id="f56cb764b4003309184b0eac5046487f1a152a1a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;minLod&lt;/code&gt; and &lt;code&gt;maxLod&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be zero</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;minLod&lt;/code&gt; 和 &lt;code&gt;maxLod&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为零</target>
        </trans-unit>
        <trans-unit id="8fe3ddf5707902c32840189beed374864037170c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;mipmapMode&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则 &lt;code&gt;mipmapMode&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f99bff9d113353f8f3202309087c84060f88aca4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxFramebufferHeight&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;usage&lt;/code&gt; 包括 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; ，或 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxFramebufferHeight&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8afa752821d12a83edcd945d128877706a235bb5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxFramebufferWidth&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;usage&lt;/code&gt; 包括 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; ，或 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;extent.width&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxFramebufferWidth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eccc97274f3941607f668346c19f8e36741764af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; also contain at least one of &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;usage&lt;/code&gt; 包括 &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; ，则 &lt;code&gt;usage&lt;/code&gt; 还&lt;strong&gt;必须&lt;/strong&gt;至少包含 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="76393a083820885cf9ce4be3c6742d3a66f99a9a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, then bits other than &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, and &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be set</source>
          <target state="translated">如果 &lt;code&gt;usage&lt;/code&gt; 包括 &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; ，那么位比其他 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 和 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能设置</target>
        </trans-unit>
        <trans-unit id="d4ed83503aa522c07cf2654c843e82263f3f3fa5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pVertexAttributeDescriptions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; valid &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pVertexAttributeDescriptions&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; 结构的 &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; 数组的指针。</target>
        </trans-unit>
        <trans-unit id="f6d2eef7dc4d5a6dffbdabdbf4523a5aedb58b50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pVertexBindingDescriptions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; valid &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pVertexBindingDescriptions&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; 结构的 &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; 数组的指针。</target>
        </trans-unit>
        <trans-unit id="085cb7c0494557371c697180db36c0d656e2a28c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, and any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was recorded with &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt;::&lt;code&gt;framebuffer&lt;/code&gt; not equal to &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, that &lt;code&gt;VkFramebuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match the &lt;code&gt;VkFramebuffer&lt;/code&gt; used in the current render pass instance</source>
          <target state="translated">如果 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; 被称为渲染过程实例中，和任何给定的元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; 记录了与 &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; :: &lt;code&gt;framebuffer&lt;/code&gt; 不等于&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，即 &lt;code&gt;VkFramebuffer&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;符合 &lt;code&gt;VkFramebuffer&lt;/code&gt; 当前使用的渲染过程实例</target>
        </trans-unit>
        <trans-unit id="c3d9ff9407f5087bff0177127505f82279c8de9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been recorded with &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt;::&lt;code&gt;subpass&lt;/code&gt; set to the index of the subpass which the given command buffer will be executed in</source>
          <target state="translated">如果 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; 被称为内的渲染过程实例，任何给定的元件 &lt;code&gt;pCommandBuffers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经记录有 &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; :: &lt;code&gt;subpass&lt;/code&gt; 集到所述给定命令缓冲区将被执行的subpass的索引</target>
        </trans-unit>
        <trans-unit id="fcb7ec537ca482ef38a23f3ba4a1ace8650d1ca3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; 被渲染通实例中调用的任何元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已被记录与 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57cda5e75741ca2d535ab2110353f810b5b060ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, that render pass instance &lt;strong&gt;must&lt;/strong&gt; have been begun with the &lt;code&gt;contents&lt;/code&gt; parameter of &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; set to &lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt;</source>
          <target state="translated">如果在渲染过程实例中调用 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; ，则该渲染过程实例&lt;strong&gt;必须&lt;/strong&gt;已将 &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; 的 &lt;code&gt;contents&lt;/code&gt; 参数设置为 &lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt; 开始</target>
        </trans-unit>
        <trans-unit id="3204c63d8fb1d44b1b8e72e64dc84a3e442bb5c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, the render passes specified in the pname::pBeginInfo::&lt;code&gt;pInheritanceInfo&lt;/code&gt;::&lt;code&gt;renderPass&lt;/code&gt; members of the &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt; commands used to begin recording each element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;compatible&lt;/a&gt; with the current render pass.</source>
          <target state="translated">如果 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; 被一个渲染过程实例中调用，渲染在PNAME指定传球:: pBeginInfo :: &lt;code&gt;pInheritanceInfo&lt;/code&gt; :: &lt;code&gt;renderPass&lt;/code&gt; 的成员&lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt;命令用于开始记录的每个元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;兼容&lt;/a&gt;渲染过程与电流。</target>
        </trans-unit>
        <trans-unit id="b8d113f2af6d5779e85b36754769afcc60f77e2c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is not being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have been recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; 没有被渲染通实例中调用的任何元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;没有记录与 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d18f309a67a1f502982000697b4d2be78757756c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是一个渲染过程实例内调用， &lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6512310347911f642cfb78cd99ba1d56f27e4d72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;dependencyFlags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;dependencyFlags&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">如果在渲染过程实例中调用 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; ，则 &lt;code&gt;dependencyFlags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于 &lt;code&gt;VkSubpassDependency&lt;/code&gt; 实例的 &lt;code&gt;dependencyFlags&lt;/code&gt; 成员</target>
        </trans-unit>
        <trans-unit id="c930c1c7a76400675434eb1cef20d73cf78c891b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values in the &lt;code&gt;dstStageMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是一个渲染过程实例内调用， &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包含在中位值的子集 &lt;code&gt;dstStageMask&lt;/code&gt; 的该实例的成员 &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199c7cd0622fec5b7294f194c934d0f79513aa78" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values in the &lt;code&gt;srcStageMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是一个渲染过程实例内调用， &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包含在中位值的子集 &lt;code&gt;srcStageMask&lt;/code&gt; 的该实例的成员 &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83b5fdd568a0864780640f1adb86b1951b7f80d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;dstAccessMask&lt;/code&gt; of any element of &lt;code&gt;pMemoryBarriers&lt;/code&gt; or &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values the &lt;code&gt;dstAccessMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例中调用， &lt;code&gt;dstAccessMask&lt;/code&gt; 的任何元素的 &lt;code&gt;pMemoryBarriers&lt;/code&gt; 或 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包含的位值的子集的 &lt;code&gt;dstAccessMask&lt;/code&gt; 的该实例的构件 &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f65cae104b834670d471e2fc0456c256a18668b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;image&lt;/code&gt; member of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to one of the elements of &lt;code&gt;pAttachments&lt;/code&gt; that the current &lt;code&gt;framebuffer&lt;/code&gt; was created with, that is also referred to by one of the elements of the &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; members of the &lt;code&gt;VkSubpassDescription&lt;/code&gt; instance that the current subpass was created with</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例内调用时， &lt;code&gt;image&lt;/code&gt; 中的任何元件的构件 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于的元素之一 &lt;code&gt;pAttachments&lt;/code&gt; 当前 &lt;code&gt;framebuffer&lt;/code&gt; 用创建的，其也由的元件中的一个称为 &lt;code&gt;pColorAttachments&lt;/code&gt; ，创建当前子通道的 &lt;code&gt;VkSubpassDescription&lt;/code&gt; 实例的 &lt;code&gt;pResolveAttachments&lt;/code&gt; 或 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 成员</target>
        </trans-unit>
        <trans-unit id="54cee90fa7c58a8e7869dd93e95d6d9957e1cc05" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;oldLayout&lt;/code&gt; and &lt;code&gt;newLayout&lt;/code&gt; members of an element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例中调用， &lt;code&gt;oldLayout&lt;/code&gt; 和 &lt;code&gt;newLayout&lt;/code&gt; 的元素的成员 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于</target>
        </trans-unit>
        <trans-unit id="3b8486a88cb06fd5bd87e3b155894aad3ecead69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;oldLayout&lt;/code&gt; and &lt;code&gt;newLayout&lt;/code&gt; members of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;layout&lt;/code&gt; member of an element of the &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; members of the &lt;code&gt;VkSubpassDescription&lt;/code&gt; instance that the current subpass was created with, that refers to the same &lt;code&gt;image&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例中调用， &lt;code&gt;oldLayout&lt;/code&gt; 和 &lt;code&gt;newLayout&lt;/code&gt; 的任何元素的成员 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于 &lt;code&gt;layout&lt;/code&gt; 所述的元件的构件 &lt;code&gt;pColorAttachments&lt;/code&gt; ， &lt;code&gt;pResolveAttachments&lt;/code&gt; 或 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 的成员 &lt;code&gt;VkSubpassDescription&lt;/code&gt; 当前subpass用创建的实例，指的是同一张 &lt;code&gt;image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccb5f6010747a8bba76ea9fa7c8f2550938312a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;srcAccessMask&lt;/code&gt; of any element of &lt;code&gt;pMemoryBarriers&lt;/code&gt; or &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values the &lt;code&gt;srcAccessMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例中调用， &lt;code&gt;srcAccessMask&lt;/code&gt; 的任何元素的 &lt;code&gt;pMemoryBarriers&lt;/code&gt; 或 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包含的位值的子集的 &lt;code&gt;srcAccessMask&lt;/code&gt; 的该实例的构件 &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81907ad2b178f8232733b6594f0961729a99d44d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; members of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是渲染过程实例中调用， &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; 和 &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; 的任何元素的成员 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98c9cdacb5b17edf3d64241b62c5fe3e289f06bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the render pass &lt;strong&gt;must&lt;/strong&gt; have been created with a &lt;code&gt;VkSubpassDependency&lt;/code&gt; instance in &lt;code&gt;pDependencies&lt;/code&gt; that expresses a dependency from the current subpass to itself.</source>
          <target state="translated">如果 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; 是一个渲染过程实例中调用，通过渲染&lt;strong&gt;必须&lt;/strong&gt;已经与创建 &lt;code&gt;VkSubpassDependency&lt;/code&gt; 的情况下 &lt;code&gt;pDependencies&lt;/code&gt; 表达从目前subpass依赖于自身。</target>
        </trans-unit>
        <trans-unit id="cc2ff27b19967673439541c2ee14ceab0dc43c97" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkQueueSubmit&lt;/code&gt; fails, it &lt;strong&gt;may&lt;/strong&gt; return &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; or &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt;. If it does, the implementation &lt;strong&gt;must&lt;/strong&gt; ensure that the state and contents of any resources or synchronization primitives referenced by the submitted command buffers and any semaphores referenced by &lt;code&gt;pSubmits&lt;/code&gt; is unaffected by the call or its failure. If &lt;code&gt;vkQueueSubmit&lt;/code&gt; fails in such a way that the implementation &lt;strong&gt;can&lt;/strong&gt; not make that guarantee, the implementation &lt;strong&gt;must&lt;/strong&gt; return &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;vkQueueSubmit&lt;/code&gt; 失败，则&lt;strong&gt;可能&lt;/strong&gt;返回 &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; 或 &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; 。如果是这样，实现&lt;strong&gt;必须&lt;/strong&gt;确保提交的命令缓冲区引用的任何资源或同步原语以及 &lt;code&gt;pSubmits&lt;/code&gt; 引用的任何信号的状态和内容不受调用或其失败的影响。如果 &lt;code&gt;vkQueueSubmit&lt;/code&gt; 以这样的方式执行失败&lt;strong&gt;可能&lt;/strong&gt;无法保证做到这一点，执行&lt;strong&gt;必须&lt;/strong&gt;返回 &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; 。请参阅&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;丢失的设备&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33e70716fa1d63522a4508b003d9161ddc9613b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;waitSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;waitSemaphoreCount&lt;/code&gt; valid combinations of &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt; values</source>
          <target state="translated">如果 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; 不是 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;pWaitDstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向的数组 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; 的有效组合&lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="19465c7c52f90de4332d6cc36b1c1eee4b3de2f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;waitSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pWaitSemaphores&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;waitSemaphoreCount&lt;/code&gt; valid &lt;code&gt;VkSemaphore&lt;/code&gt; handles</source>
          <target state="translated">如果 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; 不为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;pWaitSemaphores&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkSemaphore&lt;/code&gt; 句柄的 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; 数组的指针</target>
        </trans-unit>
        <trans-unit id="9cbfd38bfb5b87e0d2ee3823e1818a736e2deee7" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-submission&quot;&gt;queue submission&lt;/a&gt; command is pending execution, then the value returned by this command &lt;strong&gt;may&lt;/strong&gt; immediately be out of date.</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-submission&quot;&gt;队列提交&lt;/a&gt;命令正在等待执行，则此命令返回的值&lt;strong&gt;可能&lt;/strong&gt;立即过时。</target>
        </trans-unit>
        <trans-unit id="6f9cf351f5c3755123b896350b8d03e03e2c272b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;constantID&lt;/code&gt; value is not a specialization constant ID used in the shader, that map entry does not affect the behavior of the pipeline.</source>
          <target state="translated">如果 &lt;code&gt;constantID&lt;/code&gt; 值不是在着色器中使用的专业化常量ID，则该映射条目不会影响管道的行为。</target>
        </trans-unit>
        <trans-unit id="b29059c1c42f54180fd3c67843e4b1002651000b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;vkCmdSetEvent&lt;/code&gt; or &lt;code&gt;vkCmdResetEvent&lt;/code&gt; command is in a command buffer that is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;, then the value returned by this command &lt;strong&gt;may&lt;/strong&gt; immediately be out of date.</source>
          <target state="translated">如果 &lt;code&gt;vkCmdSetEvent&lt;/code&gt; 或 &lt;code&gt;vkCmdResetEvent&lt;/code&gt; 命令位于处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;的命令缓冲区中，则此命令返回的值&lt;strong&gt;可能&lt;/strong&gt;立即过时。</target>
        </trans-unit>
        <trans-unit id="4087d9917a55012385634e32766b34ba5823281a" translate="yes" xml:space="preserve">
          <source>If a SPIR-V &lt;code&gt;OpLoad&lt;/code&gt; instruction loads a structure and the tail end of the structure is out of bounds, then all members of the structure are considered out of bounds even if the members at the end are not statically used.</source>
          <target state="translated">如果SPIR-V &lt;code&gt;OpLoad&lt;/code&gt; 指令加载了一个结构并且该结构的尾端超出范围，则即使该结构的所有成员都没有被静态使用，也将其视为超出范围。</target>
        </trans-unit>
        <trans-unit id="3f44fab511959c076685fa827fd2cbe63fe906e0" translate="yes" xml:space="preserve">
          <source>If a command returns a run time error, it will leave any result pointers unmodified, unless other behavior is explicitly defined in the specification.</source>
          <target state="translated">如果命令返回运行时错误,它将不修改任何结果指针,除非规范中明确定义了其他行为。</target>
        </trans-unit>
        <trans-unit id="a07e5bc4f64e9b2b6220af23bcc5f6f1312d5843" translate="yes" xml:space="preserve">
          <source>If a descriptor pool has not had any descriptor sets freed since it was created or most recently reset then fragmentation &lt;strong&gt;must&lt;/strong&gt; not cause an allocation failure (note that this is always the case for a pool created without the &lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; bit set). Additionally, if all sets allocated from the pool since it was created or most recently reset use the same number of descriptors (of each type) and the requested allocation also uses that same number of descriptors (of each type), then fragmentation &lt;strong&gt;must&lt;/strong&gt; not cause an allocation failure.</source>
          <target state="translated">如果描述符池自创建以来就没有释放任何描述符集，或者最近一次重置，则碎片&lt;strong&gt;一定&lt;/strong&gt;不会引起分配失败（请注意，对于未设置 &lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; 位的创建池，情况总是如此）。此外，如果自创建以来或最近一次重置以来从池中分配的所有集都使用相同数量的描述符（每种类型），并且所请求的分配也使用相同数量的描述符（每种类型），则碎片&lt;strong&gt;一定&lt;/strong&gt;不会导致分配失败。</target>
        </trans-unit>
        <trans-unit id="6c77db8c3ac81fea4d8729b6d99717d30b6a3fc5" translate="yes" xml:space="preserve">
          <source>If a memory object does not have the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; property, then &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be called in order to guarantee that writes to the memory object from the host are made visible to the &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt;, where it &lt;strong&gt;can&lt;/strong&gt; be further made available to the device by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;synchronization commands&lt;/a&gt;. Similarly, &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be called to guarantee that writes which are visible to the &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt; are made visible to host operations.</source>
          <target state="translated">如果一个内存中的对象不具有 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; 属性，然后&lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges &lt;/a&gt;&lt;strong&gt;必须&lt;/strong&gt;被调用，以保证写入来自主机的内存对象由可见的 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;访问类型&lt;/a&gt;，它&lt;strong&gt;可以&lt;/strong&gt;进一步被提供给设备&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;同步命令&lt;/a&gt;。同样，&lt;strong&gt;必须&lt;/strong&gt;调用&lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;来确保对 &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;访问类型&lt;/a&gt;可见的写入对主机操作可见。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfc0a6089dc982b1c583cc52d81036601b699cd5" translate="yes" xml:space="preserve">
          <source>If a memory object is mapped at the time it is freed, it is implicitly unmapped.</source>
          <target state="translated">如果一个内存对象在被释放时被映射,那么它就隐含着未被映射。</target>
        </trans-unit>
        <trans-unit id="4d1a8fa76db38e3020cf24dab9f78abeab7f903a" translate="yes" xml:space="preserve">
          <source>If a pipeline has &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; enabled, implementations &lt;strong&gt;may&lt;/strong&gt; discard primitives after the final vertex processing stage. As a result, if &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; is enabled, the clipping input and output primitives counters &lt;strong&gt;may&lt;/strong&gt; not be incremented.</source>
          <target state="translated">如果管道启用了 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; ，则实现&lt;strong&gt;可能会&lt;/strong&gt;在最终顶点处理阶段之后丢弃图元。结果，如果启用 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; ，则裁剪输入和输出原语计数器&lt;strong&gt;可能&lt;/strong&gt;不会增加。</target>
        </trans-unit>
        <trans-unit id="3321ca6a4f8aa85b8194bbfaf8e8dfb9c15cc8dd" translate="yes" xml:space="preserve">
          <source>If a shader stage is not included in &lt;code&gt;stageFlags&lt;/code&gt;, then a resource &lt;strong&gt;must&lt;/strong&gt; not be accessed from that stage via this binding within any pipeline using the set layout. Other than input attachments which are limited to the fragment shader, there are no limitations on what combinations of stages &lt;strong&gt;can&lt;/strong&gt; be used by a descriptor binding, and in particular a binding &lt;strong&gt;can&lt;/strong&gt; be used by both graphics stages and the compute stage.</source>
          <target state="translated">如果着色器级不包括 &lt;code&gt;stageFlags&lt;/code&gt; ，那么资源&lt;strong&gt;必须&lt;/strong&gt;不能从那个阶段通过这种使用组布局的任何管道内结合访问。除了输入的附件，其被限制在片段着色器，有什么阶段的组合没有限制&lt;strong&gt;可以&lt;/strong&gt;通过一个描述符结合使用，并且特别是结合&lt;strong&gt;可以&lt;/strong&gt;通过两者的图形级和计算级中使用。</target>
        </trans-unit>
        <trans-unit id="95e1cbaccd9f779662e9504a9bb29ab9a3ac2284" translate="yes" xml:space="preserve">
          <source>If a vertex input attribute is out of bounds, it will be assigned one of the following values:</source>
          <target state="translated">如果一个顶点输入属性超出边界,它将被分配给以下值之一。</target>
        </trans-unit>
        <trans-unit id="b275caa8a795761dcdc3c5aa5c04d30ac7b5ab3b" translate="yes" xml:space="preserve">
          <source>If an allocation fails due to fragmentation, an indeterminate error is returned with an unspecified error code. Any returned error other than &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; does not imply its usual meaning: applications &lt;strong&gt;should&lt;/strong&gt; assume that the allocation failed due to fragmentation, and create a new descriptor pool.</source>
          <target state="translated">如果分配由于碎片而失败，则返回不确定的错误，并带有未指定的错误代码。除 &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; 之外的任何返回错误均不表示其通常的含义：应用程序&lt;strong&gt;应&lt;/strong&gt;假定分配由于碎片而失败，并创建一个新的描述符池。</target>
        </trans-unit>
        <trans-unit id="a147fd213b2c3079da16e655a5eceeb556b3051c" translate="yes" xml:space="preserve">
          <source>If an allocation failure occurs due to fragmentation, an application &lt;strong&gt;can&lt;/strong&gt; create an additional descriptor pool to perform further descriptor set allocations.</source>
          <target state="translated">如果由于碎片而导致分配失败，则应用程序&lt;strong&gt;可以&lt;/strong&gt;创建一个附加的描述符池来执行进一步的描述符集分配。</target>
        </trans-unit>
        <trans-unit id="c15fe9f0f6e672d2ff49f5239919d745315d83e1" translate="yes" xml:space="preserve">
          <source>If an allocation is associated with an object of type &lt;code&gt;VkPipelineCache&lt;/code&gt;, the allocator will use the &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; allocation scope. The most specific allocator available is used (pipeline cache, else device, else instance). Else,</source>
          <target state="translated">如果分配与 &lt;code&gt;VkPipelineCache&lt;/code&gt; 类型的对象相关联，则分配器将使用 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; 分配范围。使用最具体的可用分配器（管道缓存，否则为设备，否则为实例）。其他，</target>
        </trans-unit>
        <trans-unit id="bfe2cd5536dc7e68a1d8f459249c46805a85a64a" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the duration of a command, the allocator will use the &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; allocation scope. The most specific allocator available is used: if the object being created or manipulated has an allocator, that object&amp;rsquo;s allocator will be used, else if the parent &lt;code&gt;VkDevice&lt;/code&gt; has an allocator it will be used, else if the parent &lt;code&gt;VkInstance&lt;/code&gt; has an allocator it will be used. Else,</source>
          <target state="translated">如果分配的范围是命令的持续时间，则分配器将使用 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; 分配范围。使用最具体的可用分配器：如果正在创建或操作的对象具有分配器，则将使用该对象的分配器；否则，如果父 &lt;code&gt;VkDevice&lt;/code&gt; 具有分配器，则将使用该分配器；否则，如果父 &lt;code&gt;VkInstance&lt;/code&gt; 具有分配器，则将使用分配器。用过的。其他，</target>
        </trans-unit>
        <trans-unit id="947edaf735b5b5a43855ae9b09c23bf124bcc335" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the lifetime of a device, the allocator will use an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt;. The most specific allocator available is used (device, else instance). Else,</source>
          <target state="translated">如果分配的范围是设备的生存期，则分配器将使用 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt; 的分配范围。使用最具体的可用分配器（设备，否则为实例）。其他，</target>
        </trans-unit>
        <trans-unit id="e3dc8f936c204065d6ae4da9cf943af308f752b9" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the lifetime of an object, that object is being created or manipulated by the command, and that object&amp;rsquo;s type is not &lt;code&gt;VkDevice&lt;/code&gt; or &lt;code&gt;VkInstance&lt;/code&gt;, the allocator will use an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt;. The most specific allocator available is used (object, else device, else instance). Else,</source>
          <target state="translated">如果分配的范围是对象的生存期，则该对象正在由命令创建或操纵，并且该对象的类型不是 &lt;code&gt;VkDevice&lt;/code&gt; 或 &lt;code&gt;VkInstance&lt;/code&gt; ，则分配器将使用 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; 的分配范围。使用了最具体的可用分配器（对象，设备，实例）。其他，</target>
        </trans-unit>
        <trans-unit id="7fa6f6674cb2d42993d01519fdad36cdea0d9fc6" translate="yes" xml:space="preserve">
          <source>If an attachment is not used by any subpass, then &lt;code&gt;loadOp&lt;/code&gt;, &lt;code&gt;storeOp&lt;/code&gt;, &lt;code&gt;stencilStoreOp&lt;/code&gt;, and &lt;code&gt;stencilLoadOp&lt;/code&gt; are ignored, and the attachment&amp;rsquo;s memory contents will not be modified by execution of a render pass instance.</source>
          <target state="translated">如果任何子通道未使用附件，则将 &lt;code&gt;loadOp&lt;/code&gt; ， &lt;code&gt;storeOp&lt;/code&gt; ， &lt;code&gt;stencilStoreOp&lt;/code&gt; 和 &lt;code&gt;stencilLoadOp&lt;/code&gt; ，并且不会通过执行渲染过程实例来修改附件的内存内容。</target>
        </trans-unit>
        <trans-unit id="548259c80fb7f01c58e015505b7d6442aead3c5e" translate="yes" xml:space="preserve">
          <source>If an implementation exposes any queue family that supports graphics operations, at least one queue family of at least one physical device exposed by the implementation &lt;strong&gt;must&lt;/strong&gt; support both graphics and compute operations.</source>
          <target state="translated">如果某个实现公开了任何支持图形操作的队列系列，则该实现公开的至少一个物理设备的至少一个队列系列&lt;strong&gt;必须同时&lt;/strong&gt;支持图形和计算操作。</target>
        </trans-unit>
        <trans-unit id="ab69aefba277b76152225269d668444f1ddcf956" translate="yes" xml:space="preserve">
          <source>If an implementation is unable to detect completion and latch the timer at any specific stage of the pipeline, it &lt;strong&gt;may&lt;/strong&gt; instead do so at any logically later stage.</source>
          <target state="translated">如果实现无法检测到完成并在流水线的任何特定阶段锁定计时器，则&lt;strong&gt;可以&lt;/strong&gt;在逻辑上的任何后续阶段进行检测。</target>
        </trans-unit>
        <trans-unit id="74dd40e71b6cf47179f8c066ba845e9b3559cbf9" translate="yes" xml:space="preserve">
          <source>If any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-secondary&quot;&gt;secondary command buffers recorded&lt;/a&gt; into any given element of the &lt;code&gt;pCommandBuffers&lt;/code&gt; member of any element of &lt;code&gt;pSubmits&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">如果有任何&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-secondary&quot;&gt;记录次级命令缓冲区&lt;/a&gt;进入的任何给定元件 &lt;code&gt;pCommandBuffers&lt;/code&gt; 的任何元件的构件 &lt;code&gt;pSubmits&lt;/code&gt; 未与记录 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; ，它&lt;strong&gt;必须&lt;/strong&gt;不能在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f757c47e5bbb66f789f1db4e9387d28e16ab68d5" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used to sample from any &lt;code&gt;VkImage&lt;/code&gt; with a &lt;code&gt;VkImageView&lt;/code&gt; of the type &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;, in any shader stage</source>
          <target state="translated">如果任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由所述着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 使用非标准化坐标，它&lt;strong&gt;必须&lt;/strong&gt;不被用于样品从任何 &lt;code&gt;VkImage&lt;/code&gt; 与 &lt;code&gt;VkImageView&lt;/code&gt; 的类型的 &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; ，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="58ef70d9cfa0658ba32ab2371b5c9f087a6fda50" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions that includes a LOD bias or any offset values, in any shader stage</source>
          <target state="translated">如果任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由所述着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 使用非标准化坐标，它&lt;strong&gt;必须&lt;/strong&gt;不与任何的SPIR-V的使用 &lt;code&gt;OpImageSample*&lt;/code&gt; 或 &lt;code&gt;OpImageSparseSample*&lt;/code&gt; 指令，其包括LOD偏置或任何偏移值，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="3b869c9aa0e2194b0870b697da74ffbe6071e0ac" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions with &lt;code&gt;ImplicitLod&lt;/code&gt;, &lt;code&gt;Dref&lt;/code&gt; or &lt;code&gt;Proj&lt;/code&gt; in their name, in any shader stage</source>
          <target state="translated">如果有任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 使用非标准化的坐标，它&lt;strong&gt;必须&lt;/strong&gt;不能与任何SPIR-V的使用 &lt;code&gt;OpImageSample*&lt;/code&gt; 或 &lt;code&gt;OpImageSparseSample*&lt;/code&gt; 有说明书 &lt;code&gt;ImplicitLod&lt;/code&gt; ， &lt;code&gt;Dref&lt;/code&gt; 或 &lt;code&gt;Proj&lt;/code&gt; 在他们的名字，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="67f7684d31e48a087c5589168bc747d1e1f7b102" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used to sample from any &lt;code&gt;VkImage&lt;/code&gt; with a &lt;code&gt;VkImageView&lt;/code&gt; of the type &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;, in any shader stage</source>
          <target state="translated">如果任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由所述着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 使用非标准化坐标，它&lt;strong&gt;必须&lt;/strong&gt;不被用于样品从任何 &lt;code&gt;VkImage&lt;/code&gt; 与 &lt;code&gt;VkImageView&lt;/code&gt; 的类型的 &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; ，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="397a16dd37d9f3ba5ba8ef7759c8f454db35847b" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions that includes a LOD bias or any offset values, in any shader stage</source>
          <target state="translated">如果任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由所述着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 使用非标准化坐标，它&lt;strong&gt;必须&lt;/strong&gt;不与任何的SPIR-V的使用 &lt;code&gt;OpImageSample*&lt;/code&gt; 或 &lt;code&gt;OpImageSparseSample*&lt;/code&gt; 指令，其包括LOD偏置或任何偏移值，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="1f63dde241ca9cfcc0fc17ee175d682ab6c6c7a0" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions with &lt;code&gt;ImplicitLod&lt;/code&gt;, &lt;code&gt;Dref&lt;/code&gt; or &lt;code&gt;Proj&lt;/code&gt; in their name, in any shader stage</source>
          <target state="translated">如果有任何 &lt;code&gt;VkSampler&lt;/code&gt; 是从由着色器访问的对象 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 使用非标准化的坐标，它&lt;strong&gt;必须&lt;/strong&gt;不能与任何SPIR-V的使用 &lt;code&gt;OpImageSample*&lt;/code&gt; 或 &lt;code&gt;OpImageSparseSample*&lt;/code&gt; 有说明书 &lt;code&gt;ImplicitLod&lt;/code&gt; ， &lt;code&gt;Dref&lt;/code&gt; 或 &lt;code&gt;Proj&lt;/code&gt; 在他们的名字，在任何着色器阶段</target>
        </trans-unit>
        <trans-unit id="9885a0da1f092334a7366cd50419bebf80892b7e" translate="yes" xml:space="preserve">
          <source>If any attachment is used as both an input attachment and a color or depth/stencil attachment, then each use &lt;strong&gt;must&lt;/strong&gt; use the same &lt;code&gt;layout&lt;/code&gt;</source>
          <target state="translated">如果将任何附件同时用作输入附件和颜色或深度/模板附件，则每次使用都&lt;strong&gt;必须&lt;/strong&gt;使用相同的 &lt;code&gt;layout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa4f0b7da72314b226b4678f866459839dc96d13" translate="yes" xml:space="preserve">
          <source>If any buffer access in a given SPIR-V block is determined to be out of bounds, then any other access of the same type (load, store, or atomic) in the same SPIR-V block that accesses an address less than 16 bytes away from the out of bounds address &lt;strong&gt;may&lt;/strong&gt; also be considered out of bounds.</source>
          <target state="translated">如果确定给定SPIR-V块中的任何缓冲区访问超出范围，则在同一SPIR-V块中访问地址小于16字节的任何其他相同类型（加载，存储或原子）的访问超出范围地址&lt;strong&gt;也可能&lt;/strong&gt;被视为超出范围。</target>
        </trans-unit>
        <trans-unit id="e3af454561e4d47a8e1af7668e19523068aae402" translate="yes" xml:space="preserve">
          <source>If any command buffer submitted to this queue is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;, it is moved to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;. Once execution of all submissions of a command buffer complete, it moves from the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;, back to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;. If a command buffer was recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; flag, it instead moves back to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid state&lt;/a&gt;.</source>
          <target state="translated">如果提交到此队列的任何命令缓冲区处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;可执行状态&lt;/a&gt;，则将其移至&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;暂挂状态&lt;/a&gt;。一旦完成对命令缓冲区的所有提交的执行，它将从&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;转变为&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;可执行状态&lt;/a&gt;。如果使用 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; 标志记录了命令缓冲区，那么它将移回&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;无效状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a959d05e9b9cad4bf668c393ec34df070d2c7043" translate="yes" xml:space="preserve">
          <source>If any element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, and it was recorded into any other primary command buffer which is currently in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable or recording state&lt;/a&gt;, that primary command buffer becomes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid&lt;/a&gt;.</source>
          <target state="translated">如果没有使用 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 标志记录 &lt;code&gt;pCommandBuffers&lt;/code&gt; 的任何元素，并且将其记录到当前处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;可执行或记录状态的&lt;/a&gt;任何其他主命令缓冲区中，则该主命令缓冲区将变为&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;无效&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="654a82f1ff93b1461fc0aca56d8f77ce403a517a" translate="yes" xml:space="preserve">
          <source>If any element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, and it was recorded into any other primary command buffer, that primary command buffer &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;</source>
          <target state="translated">如果未使用 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 标志记录 &lt;code&gt;pCommandBuffers&lt;/code&gt; 的任何元素，并且已将其记录到任何其他主要命令缓冲区中，则该主要命令缓冲区&lt;strong&gt;一定&lt;/strong&gt;不能处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c06c57883b1e81598da5eae4e5ed1425f5f17c2" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not appear more than once in &lt;code&gt;pCommandBuffers&lt;/code&gt;.</source>
          <target state="translated">如果任何给定的元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; 没有与记录 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 标志，它&lt;strong&gt;应该&lt;/strong&gt;不会出现不止一次 &lt;code&gt;pCommandBuffers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45a40c78303bf823ef077174f6bce61cbc32510e" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">如果任何给定的元素 &lt;code&gt;pCommandBuffers&lt;/code&gt; 没有与记录 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 标志，它&lt;strong&gt;一定&lt;/strong&gt;不会在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bee1558a561460f1b7d739e968a7e6eeed4725a" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not have already been recorded to &lt;code&gt;commandBuffer&lt;/code&gt;.</source>
          <target state="translated">如果未使用 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 标志记录 &lt;code&gt;pCommandBuffers&lt;/code&gt; 的任何给定元素，则&lt;strong&gt;必须&lt;/strong&gt;尚未将其记录到 &lt;code&gt;commandBuffer&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6c65c8f7813079f5ca6b3f4a4a1f6299ad0cead" translate="yes" xml:space="preserve">
          <source>If any given element of the &lt;code&gt;pCommandBuffers&lt;/code&gt; member of any element of &lt;code&gt;pSubmits&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">如果任何给定的元件 &lt;code&gt;pCommandBuffers&lt;/code&gt; 的任何元件的构件 &lt;code&gt;pSubmits&lt;/code&gt; 未与记录 &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; ，它&lt;strong&gt;必须&lt;/strong&gt;不能在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12549e256554e905116aa01eb111aa8e504bcb07" translate="yes" xml:space="preserve">
          <source>If any input attachments are &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, then any pipelines bound during the subpass &lt;strong&gt;must&lt;/strong&gt; not access those input attachments from the fragment shader</source>
          <target state="translated">如果任何输入附件是 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; ，则subpass期间结合的任何管道&lt;strong&gt;必须&lt;/strong&gt;不从片段着色器访问这些输入附件</target>
        </trans-unit>
        <trans-unit id="aecd21d787561cdac3cd83cb0b7c395a6c5b19a9" translate="yes" xml:space="preserve">
          <source>If any member of &lt;code&gt;pFences&lt;/code&gt; is already in the unsignaled state when &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; is executed, then &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; has no effect on that fence.</source>
          <target state="translated">如果任何成员 &lt;code&gt;pFences&lt;/code&gt; 已经在当unsignaled状态&lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt;被执行，然后&lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt;对那个栅栏没有影响。</target>
        </trans-unit>
        <trans-unit id="3b0f0d5d1e413896923a2e538540f999a66625ec" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;addressModeU&lt;/code&gt;, &lt;code&gt;addressModeV&lt;/code&gt; or &lt;code&gt;addressModeW&lt;/code&gt; are &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;, &lt;code&gt;borderColor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt; value</source>
          <target state="translated">如果 &lt;code&gt;addressModeU&lt;/code&gt; ， &lt;code&gt;addressModeV&lt;/code&gt; 或 &lt;code&gt;addressModeW&lt;/code&gt; 中的任何一个为 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt; ， &lt;code&gt;borderColor&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为有效的&lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt;值</target>
        </trans-unit>
        <trans-unit id="231252ad1d02e8be77bbcac42ced849e74176b72" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;extent.width&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt;, or &lt;code&gt;extent.depth&lt;/code&gt; are greater than the equivalently named members of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension3D&lt;/code&gt;, &lt;code&gt;mipLevels&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxMipLevels&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure)</source>
          <target state="translated">如果有任何的 &lt;code&gt;extent.width&lt;/code&gt; ， &lt;code&gt;extent.height&lt;/code&gt; ，或 &lt;code&gt;extent.depth&lt;/code&gt; 比的等效名称的成员更大 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension3D&lt;/code&gt; ， &lt;code&gt;mipLevels&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxMipLevels&lt;/code&gt; （由返回的 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 与 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 等于此结构中的那些标志）</target>
        </trans-unit>
        <trans-unit id="5c2b1cf49a82beacdc3babdbcb621672777242b3" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; members of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is not &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt;, then each such &lt;code&gt;initialLayout&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the current layout of the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;</source>
          <target state="translated">如果创建在 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 的 &lt;code&gt;initialLayout&lt;/code&gt; 成员中指定的渲染通道时指定的VkAttachmentDescription结构的 &lt;code&gt;renderPass&lt;/code&gt; 成员中的 &lt;code&gt;pRenderPassBegin&lt;/code&gt; 一个不是 &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; ，则每个此类 &lt;code&gt;initialLayout&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于缓冲区中指定的帧缓冲区的相应附件图像子资源的当前布局。 &lt;code&gt;pRenderPassBegin&lt;/code&gt; 的 &lt;code&gt;framebuffer&lt;/code&gt; 成员</target>
        </trans-unit>
        <trans-unit id="1abdb81f27d8e164a2d6e34742ce3368442d9b80" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果创建在 &lt;code&gt;renderPass&lt;/code&gt; 成员中指定的渲染通道时指定的 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构的 &lt;code&gt;initialLayout&lt;/code&gt; 或 &lt;code&gt;finalLayout&lt;/code&gt; 成员或VkAttachmentReference结构的 &lt;code&gt;layout&lt;/code&gt; 成员中的 &lt;code&gt;VkAttachmentReference&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; ,则在 &lt;code&gt;framebuffer&lt;/code&gt; 成员中指定的帧缓冲区的对应附件图像子资源 &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已与创建 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 集&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c77672399b27fc9ac5d44e1bb040d056c3bb29ef" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任何的 &lt;code&gt;initialLayout&lt;/code&gt; 或 &lt;code&gt;finalLayout&lt;/code&gt; 所述的构件 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构或 &lt;code&gt;layout&lt;/code&gt; 的的构件 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 创建渲染过程在指定的时结构指定的 &lt;code&gt;renderPass&lt;/code&gt; 的构件 &lt;code&gt;pRenderPassBegin&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; 然后在指定的帧缓冲器的相应的连接图像子资源 &lt;code&gt;framebuffer&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; 的成员&lt;strong&gt;必须&lt;/strong&gt;已使用 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 设置了VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</target>
        </trans-unit>
        <trans-unit id="3d533c57f5f6565fc79d39467e183d2a2c7be8c7" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果创建在 &lt;code&gt;renderPass&lt;/code&gt; 成员中指定的渲染过程时指定的 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构的 &lt;code&gt;initialLayout&lt;/code&gt; 或 &lt;code&gt;finalLayout&lt;/code&gt; 成员或VkAttachmentReference结构的 &lt;code&gt;layout&lt;/code&gt; 成员中的 &lt;code&gt;VkAttachmentReference&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; 为 &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; ,则在 &lt;code&gt;framebuffer&lt;/code&gt; 成员中指定的帧缓冲区的对应附件图像子资源 &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已与创建 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 集&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ab70f466c36ce5127a3f106d06a73496bfb97e6" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; set</source>
          <target state="translated">如果创建在 &lt;code&gt;renderPass&lt;/code&gt; 成员中指定的渲染过程时指定的 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构的 &lt;code&gt;initialLayout&lt;/code&gt; 或 &lt;code&gt;finalLayout&lt;/code&gt; 成员或VkAttachmentReference结构的 &lt;code&gt;layout&lt;/code&gt; 成员中的 &lt;code&gt;VkAttachmentReference&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; ,则在的 &lt;code&gt;framebuffer&lt;/code&gt; 成员中指定的帧缓冲区的对应附件图像子资源 &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已与创建 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 集&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5305deb202180d717ad266514bd4aad80565ff6e" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; set</source>
          <target state="translated">如果创建在 &lt;code&gt;renderPass&lt;/code&gt; 成员中指定的渲染过程时指定的 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构的 &lt;code&gt;initialLayout&lt;/code&gt; 或 &lt;code&gt;finalLayout&lt;/code&gt; 成员或VkAttachmentReference结构的 &lt;code&gt;layout&lt;/code&gt; 成员中的 &lt;code&gt;VkAttachmentReference&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; ,则在的 &lt;code&gt;framebuffer&lt;/code&gt; 成员中指定的帧缓冲区的对应附件图像子资源 &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已与创建 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 集&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0148f704015f23d4df0dc715e04efbeb2c70079a" translate="yes" xml:space="preserve">
          <source>If any of the bits &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; are set, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not also be set.</source>
          <target state="translated">如果任何位 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; ， &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; ，或 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; 设置， &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能被设置。</target>
        </trans-unit>
        <trans-unit id="4ae63bd5cde694200ed125fd89960b61f43f2a24" translate="yes" xml:space="preserve">
          <source>If any of the sets being bound include dynamic uniform or storage buffers, then &lt;code&gt;pDynamicOffsets&lt;/code&gt; includes one element for each array element in each dynamic descriptor type binding in each set. Values are taken from &lt;code&gt;pDynamicOffsets&lt;/code&gt; in an order such that all entries for set N come before set N+1; within a set, entries are ordered by the binding numbers in the descriptor set layouts; and within a binding array, elements are in order. &lt;code&gt;dynamicOffsetCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; equal the total number of dynamic descriptors in the sets being bound.</source>
          <target state="translated">如果要绑定的任何集合都包含动态统一或存储缓冲区，则 &lt;code&gt;pDynamicOffsets&lt;/code&gt; 会为每个集合中每个动态描述符类型绑定中的每个数组元素包含一个元素。从 &lt;code&gt;pDynamicOffsets&lt;/code&gt; 中获取值的顺序是，集合N的所有条目都在集合N + 1之前；在一个集合中，条目按描述符集合布局中的绑定号排序；在绑定数组中，元素是有序的。 &lt;code&gt;dynamicOffsetCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;等于要绑定的集合中动态描述符的总数。</target>
        </trans-unit>
        <trans-unit id="5fd348f32058ed2eb19cad51f7414a5dff93ab02" translate="yes" xml:space="preserve">
          <source>If any two subpasses operate on attachments with overlapping ranges of the same &lt;code&gt;VkDeviceMemory&lt;/code&gt; object, and at least one subpass writes to that area of &lt;code&gt;VkDeviceMemory&lt;/code&gt;, a subpass dependency &lt;strong&gt;must&lt;/strong&gt; be included (either directly or via some intermediate subpasses) between them</source>
          <target state="translated">如果任何两个子通道对具有相同 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 对象的重叠范围的附件进行操作，并且至少一个子通道写入VkDeviceMemory的该区域， &lt;code&gt;VkDeviceMemory&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;在它们之间包括子通道依赖项（直接或通过某些中间子通道）</target>
        </trans-unit>
        <trans-unit id="6283bff285e02c629dd47b46ed5b85cbdfcd0c4d" translate="yes" xml:space="preserve">
          <source>If at least one vertex of the input primitive lies inside the clipping volume, the counter is incremented by one or more.</source>
          <target state="translated">如果输入基元的至少一个顶点位于剪切卷内,则计数器递增一个或多个。</target>
        </trans-unit>
        <trans-unit id="e3e243733eb75c471d9ffa24e4003d91c42f1e23" translate="yes" xml:space="preserve">
          <source>If device loss occurs (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;) before the timeout has expired, &lt;code&gt;vkWaitForFences&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return in finite time with either &lt;code&gt;VK_SUCCESS&lt;/code&gt; or &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">如果在超时到期之前发生设备丢失（请参阅&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;丢失的设备&lt;/a&gt;），则 &lt;code&gt;vkWaitForFences&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;在有限时间内使用 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 或 &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="0a7b93c5125a9f239b221b47fb098724d7b8b8a4" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="3e062bf5cf02a8bbfe17c445a678e1ccf656716e" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="dc16023738da3c60f71e0c4c4af58a711960659e" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="9a84522f99a3f957d5c7c0b6d3d575ec2c277b89" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="34f9ecb75bd34ded21dcd62bfb565cd57b629355" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="1344282c088503e695174d47f4c647525e985b4c" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; set</source>
          <target state="translated">如果任一 &lt;code&gt;oldLayout&lt;/code&gt; 或 &lt;code&gt;newLayout&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; 那么 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;已经创建 &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 集</target>
        </trans-unit>
        <trans-unit id="b86307d3aa001c5d575c1b42e8db4b7419b3cc4e" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;pfnInternalAllocation&lt;/code&gt; or &lt;code&gt;pfnInternalFree&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, both &lt;strong&gt;must&lt;/strong&gt; be valid callbacks</source>
          <target state="translated">如果 &lt;code&gt;pfnInternalAllocation&lt;/code&gt; 或 &lt;code&gt;pfnInternalFree&lt;/code&gt; 中的任何一个都不为 &lt;code&gt;NULL&lt;/code&gt; ，那么两者都&lt;strong&gt;必须&lt;/strong&gt;是有效的回调</target>
        </trans-unit>
        <trans-unit id="1aee68bcd44fde9f982f69dc1933fce71fd8a4fd" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with a depth/stencil format, the other &lt;strong&gt;must&lt;/strong&gt; have exactly the same format</source>
          <target state="translated">如果 &lt;code&gt;srcImage&lt;/code&gt; 或 &lt;code&gt;dstImage&lt;/code&gt; 中的任何一个是使用深度/模板格式创建的，则另一个&lt;strong&gt;必须&lt;/strong&gt;具有完全相同的格式</target>
        </trans-unit>
        <trans-unit id="6a7dbd465c4e840b81df6a4b6b2b55bd00e86206" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with a signed integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, the other &lt;strong&gt;must&lt;/strong&gt; also have been created with a signed integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</source>
          <target state="translated">如果其中 &lt;code&gt;srcImage&lt;/code&gt; 或 &lt;code&gt;dstImage&lt;/code&gt; 与整数签署的创建&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;，其他&lt;strong&gt;必须&lt;/strong&gt;也经过整数签署创建&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f9b29cd6edaa3bea1c98d54a698cb1dc570eb00" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with an unsigned integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, the other &lt;strong&gt;must&lt;/strong&gt; also have been created with an unsigned integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</source>
          <target state="translated">如果其中 &lt;code&gt;srcImage&lt;/code&gt; 或 &lt;code&gt;dstImage&lt;/code&gt; 与无符号整数创建&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;，其他&lt;strong&gt;必须&lt;/strong&gt;也已经无符号整数创建&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e45ff6670dcb9d8847472be2d590a7a5da96aac0" translate="yes" xml:space="preserve">
          <source>If either of the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; parameters are of &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, the &lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; members of both &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, respectively</source>
          <target state="translated">如果任一呼叫命令的的 &lt;code&gt;srcImage&lt;/code&gt; 或 &lt;code&gt;dstImage&lt;/code&gt; 参数是&lt;a href=&quot;#VkImageType&quot;&gt;VkImageType &lt;/a&gt; &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; ，所述 &lt;code&gt;baseArrayLayer&lt;/code&gt; 和 &lt;code&gt;layerCount&lt;/code&gt; 两者的成员 &lt;code&gt;srcSubresource&lt;/code&gt; 和 &lt;code&gt;dstSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;1&lt;/code&gt; 分别</target>
        </trans-unit>
        <trans-unit id="ead68b86880e27eaeba799db5f15fa268485c9e8" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; structures appear in the &lt;code&gt;pPoolSizes&lt;/code&gt; array then the pool will be created with enough storage for the total number of descriptors of each type.</source>
          <target state="translated">如果 &lt;code&gt;pPoolSizes&lt;/code&gt; 数组中出现多个 &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; 结构，则将创建具有足够存储空间的池，以存储每种类型的描述符的总数。</target>
        </trans-unit>
        <trans-unit id="611a36b9a86ca5bd0b9575d048f206ea33a6991c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;buffer&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;buffer&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d860cbed380b9b1c0b6371b27a4843c1fb79cd20" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;bufferView&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;bufferView&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6af912fcb2d37426aa57a0e10a8f789fdb0aed86" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;commandPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;commandPool&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f96ca67412eca85fe9efb228077c1664df849baa" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;descriptorPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;descriptorPool&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f11cfcca3eb498f8b9143fe4ac1deefd6b503ea2" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;descriptorSetLayout&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;descriptorSetLayout&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfa3560cf0b7946080cedfe2bf19c7814295afbb" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;device&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;device&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="447c081043a5019bf4ab882afd54507a018c35ef" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;event&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;event&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a58417319f29675e303d72863ca1c172317ff71" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;fence&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;fence&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acb7684df3b05554e7a3fd66177c6708fef02cf3" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;framebuffer&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;framebuffer&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c322ed965cd889df307b5caaf8c3929096f10191" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;image&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果创建 &lt;code&gt;image&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60d2e24c828f353144df8d55555e02e6c392c3f6" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;imageView&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;imageView&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb002dc5fc93f68fa26b7054bdf5c0362d32cea" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;instance&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;instance&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dac316c2314ba87dc4a0c54372487d77090189e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipeline&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;pipeline&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5d0323f1547f1e160709af9c60e7be0647ce1b" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipelineCache&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;pipelineCache&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc5c86238fab88bdc569b87b3ae8d452305f46be" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipelineLayout&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;pipelineLayout&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb3017d255a45986bf0188eab49704d936356e9e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;queryPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;queryPool&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ee0fc24eb866dd9d739b9da0e10b14faeb32d85" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;renderPass&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;renderPass&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6ec5109e5eb44b8023977a1bb224047a254ddf3" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;sampler&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;sampler&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d13f89c72359065eeb422aa7befe83a0ad735fda" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;semaphore&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果在创建 &lt;code&gt;semaphore&lt;/code&gt; 时未提供 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; ，则 &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;NULL&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="199b4f37001ed5b016d5dee45e393aff8f499147" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;shaderModule&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">如果没有 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; 时被提供 &lt;code&gt;shaderModule&lt;/code&gt; 创建， &lt;code&gt;pAllocator&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0a0d481884ac52ec9c10a45c803d438c3bdad1d" translate="yes" xml:space="preserve">
          <source>If no bits are set in &lt;code&gt;flags&lt;/code&gt;, and all requested queries are in the available state, results are written as an array of 32-bit unsigned integer values. The behavior when not all queries are available, is described &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-wait-bit-not-set&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 中未设置任何位，并且所有请求的查询均处于可用状态，则结果将写入32位无符号整数值的数组中。并非所有查询均可用时的行为&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-wait-bit-not-set&quot;&gt;如下所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08c0b3f0795dd32d65ed3356cbe299d40888c697" translate="yes" xml:space="preserve">
          <source>If no bits are set in &lt;code&gt;flags&lt;/code&gt;, results for all requested queries in the available state are written as 32-bit unsigned integer values, and nothing is written for queries in the unavailable state.</source>
          <target state="translated">如果 &lt;code&gt;flags&lt;/code&gt; 中未设置任何位，则所有在可用状态下请求的查询的结果都将写入32位无符号整数值，而对于不可用状态的查询则不会写入任何内容。</target>
        </trans-unit>
        <trans-unit id="2cf0621523d8b65efaee0e910f7c70ec2a47cb52" translate="yes" xml:space="preserve">
          <source>If no depth buffer is present, r is undefined.</source>
          <target state="translated">如果没有深度缓冲区,则r未定义。</target>
        </trans-unit>
        <trans-unit id="c2f712b93dc942ce61a9cc633185bc883c43daa3" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt;, and the &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, the &lt;code&gt;minDepthBounds&lt;/code&gt; and &lt;code&gt;maxDepthBounds&lt;/code&gt; members of &lt;code&gt;pDepthStencil&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, inclusive</source>
          <target state="translated">如果没有所述的元件 &lt;code&gt;pDynamicStates&lt;/code&gt; 的构件 &lt;code&gt;pDynamicState&lt;/code&gt; 是 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; ，并且 &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; 的构件 &lt;code&gt;pDepthStencil&lt;/code&gt; 是 &lt;code&gt;VK_TRUE&lt;/code&gt; ，所述 &lt;code&gt;minDepthBounds&lt;/code&gt; 和 &lt;code&gt;maxDepthBounds&lt;/code&gt; 成员 &lt;code&gt;pDepthStencil&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;介于 &lt;code&gt;0.0&lt;/code&gt; 和 &lt;code&gt;1.0&lt;/code&gt; ，包括</target>
        </trans-unit>
        <trans-unit id="7992cb9a7f3ba36755f5fb5804cb7ceb8d86801e" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt;, the &lt;code&gt;pScissors&lt;/code&gt; member of &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pViewportState&lt;/code&gt;::&lt;code&gt;scissorCount&lt;/code&gt;&lt;code&gt;VkRect2D&lt;/code&gt; structures</source>
          <target state="translated">如果没有所述的元件 &lt;code&gt;pDynamicStates&lt;/code&gt; 的构件 &lt;code&gt;pDynamicState&lt;/code&gt; 是 &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; ，所述 &lt;code&gt;pScissors&lt;/code&gt; 的构件 &lt;code&gt;pViewportState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向的数组 &lt;code&gt;pViewportState&lt;/code&gt; :: &lt;code&gt;scissorCount&lt;/code&gt; &lt;code&gt;VkRect2D&lt;/code&gt; 结构</target>
        </trans-unit>
        <trans-unit id="25bc3bf52dcbe37ecd9f865915172756584a3477" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt;, the &lt;code&gt;pViewports&lt;/code&gt; member of &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pViewportState&lt;/code&gt;::&lt;code&gt;viewportCount&lt;/code&gt;&lt;code&gt;VkViewport&lt;/code&gt; structures</source>
          <target state="translated">如果没有所述的元件 &lt;code&gt;pDynamicStates&lt;/code&gt; 的构件 &lt;code&gt;pDynamicState&lt;/code&gt; 是 &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; ，所述 &lt;code&gt;pViewports&lt;/code&gt; 的构件 &lt;code&gt;pViewportState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向的数组 &lt;code&gt;pViewportState&lt;/code&gt; :: &lt;code&gt;viewportCount&lt;/code&gt; &lt;code&gt;VkViewport&lt;/code&gt; 结构</target>
        </trans-unit>
        <trans-unit id="8eea36eb9ec6fe0a5913c655be7596290db5c201" translate="yes" xml:space="preserve">
          <source>If no format feature flags are supported, then the only possible use would be image transfers - which alone are not useful. As such, if no format feature flags are supported, the format itself is not supported, and images of that format cannot be created.</source>
          <target state="translated">如果不支持格式特征标志,那么唯一可能的用途就是图像传输--单单是图像传输是没有用的。因此,如果不支持格式特征标志,则不支持格式本身,无法创建该格式的图像。</target>
        </trans-unit>
        <trans-unit id="ead417d6c56baefbc026877b1d703810fedd61b9" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment in &lt;code&gt;renderpass&lt;/code&gt; that has a layout of &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; in the &lt;code&gt;VkAttachmentReference&lt;/code&gt; defined by &lt;code&gt;subpass&lt;/code&gt;, the &lt;code&gt;depthWriteEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果光栅化未禁用和 &lt;code&gt;subpass&lt;/code&gt; 使用在深度/模板附着 &lt;code&gt;renderpass&lt;/code&gt; 具有的布局 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; 在 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 通过定义 &lt;code&gt;subpass&lt;/code&gt; ，所述 &lt;code&gt;depthWriteEnable&lt;/code&gt; 的构件 &lt;code&gt;pDepthStencilState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c1f715373edf5ac883a7904779508216bce55f6" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment in &lt;code&gt;renderpass&lt;/code&gt; that has a layout of &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; in the &lt;code&gt;VkAttachmentReference&lt;/code&gt; defined by &lt;code&gt;subpass&lt;/code&gt;, the &lt;code&gt;failOp&lt;/code&gt;, &lt;code&gt;passOp&lt;/code&gt; and &lt;code&gt;depthFailOp&lt;/code&gt; members of each of the &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; members of &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt;</source>
          <target state="translated">如果光栅化未禁用和 &lt;code&gt;subpass&lt;/code&gt; 使用在深度/模板附着 &lt;code&gt;renderpass&lt;/code&gt; 具有的布局 &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; 在 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 通过定义 &lt;code&gt;subpass&lt;/code&gt; ，所述 &lt;code&gt;failOp&lt;/code&gt; ， &lt;code&gt;passOp&lt;/code&gt; 和 &lt;code&gt;depthFailOp&lt;/code&gt; 每个的成员 &lt;code&gt;front&lt;/code&gt; 和 &lt;code&gt;back&lt;/code&gt; 的成员 &lt;code&gt;pDepthStencilState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="906d6c3e271b3a87401342b38e86942431f543f9" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and the subpass uses color attachments, the &lt;code&gt;attachmentCount&lt;/code&gt; member of &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;colorAttachmentCount&lt;/code&gt; used to create &lt;code&gt;subpass&lt;/code&gt;</source>
          <target state="translated">如果光栅化未禁用和subpass使用颜色附件，所述 &lt;code&gt;attachmentCount&lt;/code&gt; 的构件 &lt;code&gt;pColorBlendState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;到等于 &lt;code&gt;colorAttachmentCount&lt;/code&gt; 用于创建 &lt;code&gt;subpass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62b08239cf239fe8158ecbbb47036c4eebcc1c02" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and the subpass uses color attachments, then for each color attachment in the subpass the &lt;code&gt;blendEnable&lt;/code&gt; member of the corresponding element of the &lt;code&gt;pAttachment&lt;/code&gt; member of &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt; if the &lt;code&gt;format&lt;/code&gt; of the attachment does not support color blend operations, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; or &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt;</source>
          <target state="translated">如果光栅化未禁用和subpass在subpass使用颜色附件，然后为每个颜色附件 &lt;code&gt;blendEnable&lt;/code&gt; 所述的相应元件的构件 &lt;code&gt;pAttachment&lt;/code&gt; 的构件 &lt;code&gt;pColorBlendState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_FALSE&lt;/code&gt; 如果 &lt;code&gt;format&lt;/code&gt; 的附接的不支持颜色的混合操作，如由 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; 或 &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 返回的 &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; 的 &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; 标志指定的</target>
        </trans-unit>
        <trans-unit id="5b9b3f8fcb8e9e334dfe0e57955140abc897f270" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;layerCount&lt;/code&gt; member of any element of the &lt;code&gt;pRanges&lt;/code&gt; array is not &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;layerCount&lt;/code&gt; for that element of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">如果 &lt;code&gt;pRanges&lt;/code&gt; 数组的任何元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;layerCount&lt;/code&gt; 成员不是 &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; ，则它&lt;strong&gt;必须&lt;/strong&gt;为非零，并且 &lt;code&gt;pRanges&lt;/code&gt; 数组的该元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;layerCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;arrayLayers&lt;/code&gt; 创建 &lt;code&gt;image&lt;/code&gt; 时在&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo中&lt;/a&gt;指定&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cde5730f20a274fb72adbbc8221f7e48cd139a7c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;levelCount&lt;/code&gt; member of any element of the &lt;code&gt;pRanges&lt;/code&gt; array is not &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;levelCount&lt;/code&gt; for that element of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">如果 &lt;code&gt;pRanges&lt;/code&gt; 数组的任何元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;levelCount&lt;/code&gt; 成员不是 &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; ，则它&lt;strong&gt;必须&lt;/strong&gt;为非零值，并且 &lt;code&gt;pRanges&lt;/code&gt; 数组的该元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;levelCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;mipLevels&lt;/code&gt; 创建 &lt;code&gt;image&lt;/code&gt; 时在&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo中&lt;/a&gt;指定&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c322bee62d2ddab575cb8eedb3f410b49779209d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-alphaToOne&quot;&gt;alpha to one&lt;/a&gt; feature is not enabled, &lt;code&gt;alphaToOneEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-alphaToOne&quot;&gt;对一项&lt;/a&gt;功能的Alpha，则 &lt;code&gt;alphaToOneEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e74c3a5e60f215935ffc3c377bcfbd0b388639c4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBiasClamp&quot;&gt;depth bias clamping&lt;/a&gt; feature is not enabled, &lt;code&gt;depthBiasClamp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;.0</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBiasClamp&quot;&gt;深度偏置夹紧&lt;/a&gt;功能，则 &lt;code&gt;depthBiasClamp&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; .0</target>
        </trans-unit>
        <trans-unit id="111fa9c31716ee62155af018d21c603e686048fa" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBounds&quot;&gt;depth bounds testing&lt;/a&gt; feature is not enabled, &lt;code&gt;depthBoundsTestEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBounds&quot;&gt;深度范围测试&lt;/a&gt;功能，则 &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69f88fe8ec2f5761a31f7ef324e627f43f05c11" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthClamp&quot;&gt;depth clamping&lt;/a&gt; feature is not enabled, &lt;code&gt;depthClampEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthClamp&quot;&gt;深度夹紧&lt;/a&gt;功能，则 &lt;code&gt;depthClampEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3c3b720441771f315c83d3478425685d9c9c102" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, &lt;code&gt;firstInstance&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt;功能，则 &lt;code&gt;firstInstance&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f83507eed2d3301eb58e45221fa6e3f0ef7f149b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, all the &lt;code&gt;firstInstance&lt;/code&gt; members of the &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; structures accessed by this command &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt;功能，则此命令访问的 &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; 结构的所有 &lt;code&gt;firstInstance&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1354c50e94216304305ded432a53e97614d06bc7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, all the &lt;code&gt;firstInstance&lt;/code&gt; members of the &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; structures accessed by this command &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt;功能，则此命令访问的 &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; 结构的所有 &lt;code&gt;firstInstance&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f0264df51a2711dcf38106020a288c82ca69cfb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;dstAlphaBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;双源混合&lt;/a&gt;特征没有激活， &lt;code&gt;dstAlphaBlendFactor&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; ，或 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9399ef63b292131208e0c466d2e2cd29b4caa38" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;dstColorBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;双源混合&lt;/a&gt;特征没有激活， &lt;code&gt;dstColorBlendFactor&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; ，或 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66f09929cd587a67783121ca5a46955bb490bff9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;srcAlphaBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;双源混合&lt;/a&gt;特征没有激活， &lt;code&gt;srcAlphaBlendFactor&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; ，或 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="743dc0434ed8b15c73fb865dd987f6cf1afa8bd0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;srcColorBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;双源混合&lt;/a&gt;特征没有激活， &lt;code&gt;srcColorBlendFactor&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; ， &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; ，或 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eecd3ac20fad078ce9999b199347a3e3e7ca857" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-fillModeNonSolid&quot;&gt;non-solid fill modes&lt;/a&gt; feature is not enabled, &lt;code&gt;polygonMode&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-fillModeNonSolid&quot;&gt;非实体填充模式&lt;/a&gt;功能，则 &lt;code&gt;polygonMode&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c39634f095fb8b79889c60c2856a8925675e267" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用功能， &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3f64537a90f5b9cd09adc8159ae24f62cc2fbb4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用功能， &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11f94679d6572582496dcfcaaef787d34e434a3f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用功能， &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2222eb78bb78f60bfacc69f4a5d07811f88c6ada" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用功能， &lt;code&gt;stageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8829eaee3fa05e48052f4bcac998e1cff2909463" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;topology&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be any of &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; or &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用功能， &lt;code&gt;topology&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;没有任何的 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY&lt;/code&gt; ， &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; 或 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2424fae2965d8ea9aec66da276ef89395741f37d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, any given element of &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;几何着色器&lt;/a&gt;未启用特征，任何给定的元素 &lt;code&gt;pWaitDstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不包含 &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acc0990b0b710a9702f1027bde60787124f25cf6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-imageCubeArray&quot;&gt;image cubemap arrays&lt;/a&gt; feature is not enabled, &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-imageCubeArray&quot;&gt;图像立方体贴图阵列&lt;/a&gt;未启用功能， &lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="642f76aea901257d2f8c127bcc400900583677f3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-independentBlend&quot;&gt;independent blending&lt;/a&gt; feature is not enabled, all elements of &lt;code&gt;pAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be identical</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-independentBlend&quot;&gt;独立混合&lt;/a&gt;功能，则 &lt;code&gt;pAttachments&lt;/code&gt; 的所有元素&lt;strong&gt;必须&lt;/strong&gt;相同</target>
        </trans-unit>
        <trans-unit id="76a2a550f29516665dd2f547e5140c600dbacdcf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is enabled, &lt;code&gt;queryFlags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid combination of &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt; values</source>
          <target state="translated">如果启用了&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;继承的查询&lt;/a&gt;功能，则 &lt;code&gt;queryFlags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是&lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt;值的有效组合</target>
        </trans-unit>
        <trans-unit id="40cc5527e27bed4ccb3e6f99182e68a84c7fd397" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is not enabled, &lt;code&gt;commandBuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have any queries &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;继承查询&lt;/a&gt;未启用功能， &lt;code&gt;commandBuffer&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能有任何疑问&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;活跃&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4fda0ad23fe8e80b4168f8bd91aaa802554c9f7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is not enabled, &lt;code&gt;occlusionQueryEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;继承的查询&lt;/a&gt;功能，则 &lt;code&gt;occlusionQueryEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8135bd89da71d581208c0179d5a77f5ee478c849" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-logicOp&quot;&gt;logic operations&lt;/a&gt; feature is not enabled, &lt;code&gt;logicOpEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-logicOp&quot;&gt;逻辑操作&lt;/a&gt;功能，则 &lt;code&gt;logicOpEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d92ff8a68ccbf68f3a6edbc5116d4e6898e6907" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiDrawIndirect&quot;&gt;multi-draw indirect&lt;/a&gt; feature is not enabled, &lt;code&gt;drawCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiDrawIndirect&quot;&gt;多绘图间接&lt;/a&gt;功能，则 &lt;code&gt;drawCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55d6971adae1dbde505f966300f98e01810d2ea0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;firstScissor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;多视口&lt;/a&gt;功能，则 &lt;code&gt;firstScissor&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca06b6bc4dc7e431cf51fb6837b610da2d557d7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;firstViewport&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;多个视口&lt;/a&gt;功能，则 &lt;code&gt;firstViewport&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c95f8419faa39e7564e1fc7713850ebf6cb8a01e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;scissorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;多视口&lt;/a&gt;功能，则 &lt;code&gt;scissorCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbc7ca33404faeaf98946afcde84b0f5ed36de75" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;viewportCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;多个视口&lt;/a&gt;功能，则 &lt;code&gt;viewportCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49baf291469b002195a5b1676488d74ce73aff0b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-occlusionQueryPrecise&quot;&gt;precise occlusion queries&lt;/a&gt; feature is not enabled, or the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was not &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-occlusionQueryPrecise&quot;&gt;精确的遮挡查询&lt;/a&gt;功能未启用，或 &lt;code&gt;queryType&lt;/code&gt; 用于创建 &lt;code&gt;queryPool&lt;/code&gt; 不是 &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac0fb9e57efd62ce19829e3d042ceabf17eace05" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;pipeline statistics queries&lt;/a&gt; feature is not enabled, &lt;code&gt;pipelineStatistics&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;管道统计信息查询&lt;/a&gt;功能，则 &lt;code&gt;pipelineStatistics&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27ac77ecf0a40b8c619b6c439706756befd672d7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;pipeline statistics queries&lt;/a&gt; feature is not enabled, &lt;code&gt;queryType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;管道统计查询&lt;/a&gt;的功能未启用， &lt;code&gt;queryType&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9976ffac3cde217487b7c0840f0991867d992a3a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; accesses a storage buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;强大的缓冲存取&lt;/a&gt;功能未启用，并且在任何着色器级 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到对象 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 访问存储缓冲器，它&lt;strong&gt;必须&lt;/strong&gt;外部无法访问的值在当前绑定的描述符组指定缓冲器的范围的</target>
        </trans-unit>
        <trans-unit id="c5b1897e901ec1ad8154314904868053b2bfb7df" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; accesses a uniform buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;强大的缓冲存取&lt;/a&gt;功能未启用，并且在任何着色器级 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到对象 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 访问均匀缓冲器，它&lt;strong&gt;必须&lt;/strong&gt;外部无法访问的值在当前绑定的描述符组指定缓冲器的范围的</target>
        </trans-unit>
        <trans-unit id="254463d35a32fa2db64de805248156bf3f0aade4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; accesses a storage buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;强大的缓冲存取&lt;/a&gt;功能未启用，并且在任何着色器级 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到对象 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 访问存储缓冲器，它&lt;strong&gt;必须&lt;/strong&gt;外部无法访问的值在当前绑定的描述符组指定缓冲器的范围的</target>
        </trans-unit>
        <trans-unit id="93a1c0f79f8814aa2b27367e321dc7a54cf0ac35" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; accesses a uniform buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;强大的缓冲存取&lt;/a&gt;功能未启用，并且在任何着色器级 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到对象 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 访问均匀缓冲器，它&lt;strong&gt;必须&lt;/strong&gt;外部无法访问的值在当前绑定的描述符组指定缓冲器的范围的</target>
        </trans-unit>
        <trans-unit id="b6d313b54b0c268a28329b648ea0051fd9291336" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sampleRateShading&quot;&gt;sample rate shading&lt;/a&gt; feature is not enabled, &lt;code&gt;sampleShadingEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sampleRateShading&quot;&gt;采样率着色&lt;/a&gt;功能，则 &lt;code&gt;sampleShadingEnable&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd88a091d5f18c889fe4617022650e067e37466e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-samplerAnisotropy&quot;&gt;anisotropic sampling&lt;/a&gt; feature is not enabled, &lt;code&gt;anisotropyEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-samplerAnisotropy&quot;&gt;各向异性采样&lt;/a&gt;功能，则 &lt;code&gt;anisotropyEnable&lt;/code&gt; 启用&lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e116085a28a475b6b7b8a01b18447a02493c9ca4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-shaderStorageImageMultisample&quot;&gt;multisampled storage images&lt;/a&gt; feature is not enabled, and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;samples&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">如果未启用多&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-shaderStorageImageMultisample&quot;&gt;采样存储映像&lt;/a&gt;功能，并且 &lt;code&gt;usage&lt;/code&gt; 包含 &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; ，则 &lt;code&gt;samples&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4710bdff50f1bfa4ea823ddfbc81d807f86a38" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;sparse bindings&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;稀疏绑定&lt;/a&gt;未启用功能， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff39ea7a9f52b0403e3ff2895549297b5f56feef" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;sparse bindings&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;稀疏绑定&lt;/a&gt;未启用功能， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b68c26b3cce7b6902b2787419155b4b275e4605c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency16Samples&quot;&gt;sparse residency for images with 16 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency16Samples&quot;&gt;用16个样本图像稀疏的居住&lt;/a&gt;特征没有激活， &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，和 &lt;code&gt;samples&lt;/code&gt; 是 &lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee87026f9f203addcce6784d2657f3c53fbd9e01" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency2Samples&quot;&gt;sparse residency for images with 2 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency2Samples&quot;&gt;用2个样品图像稀疏的居住&lt;/a&gt;特征没有激活， &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，和 &lt;code&gt;samples&lt;/code&gt; 是 &lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a058c348e7d93ffee7f4b05429d9bfa6622ee3b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency4Samples&quot;&gt;sparse residency for images with 4 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency4Samples&quot;&gt;用4个样品的图像稀疏的居住&lt;/a&gt;特征没有激活， &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，和 &lt;code&gt;samples&lt;/code&gt; 是 &lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="928829923b0924897ae34d6620eb28f38834533e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency8Samples&quot;&gt;sparse residency for images with 8 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency8Samples&quot;&gt;与8个样品图像稀疏的居住&lt;/a&gt;特征没有激活， &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，和 &lt;code&gt;samples&lt;/code&gt; 是 &lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c8caca774f68c5bc255e8d90916b18401a2edc2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;sparse aliased residency&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;稀疏锯齿居留&lt;/a&gt;未启用功能， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abe86865e94e013dcb0b1d387383e4a801830dbe" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;sparse aliased residency&lt;/a&gt; feature is not enabled, and if any other resources are bound to ranges of &lt;code&gt;memory&lt;/code&gt;, the range of &lt;code&gt;memory&lt;/code&gt; being bound &lt;strong&gt;must&lt;/strong&gt; not overlap with those bound ranges</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;稀疏别名居留&lt;/a&gt;未启用的特征，并且如果任何其他资源绑定到的范围 &lt;code&gt;memory&lt;/code&gt; ，的范围 &lt;code&gt;memory&lt;/code&gt; 的约束&lt;strong&gt;必须&lt;/strong&gt;不能与那些结合范围重叠</target>
        </trans-unit>
        <trans-unit id="777c2bc5485606611dbbf897703e99ac36f599f6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyBuffer&quot;&gt;sparse buffer residency&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyBuffer&quot;&gt;稀疏缓冲器停留&lt;/a&gt;未启用功能， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f113fe7cfbcdea104a60b571e967536758182d1c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage2D&quot;&gt;sparse residency for 2D images&lt;/a&gt; feature is not enabled, and &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage2D&quot;&gt;对2D图像稀疏的居住&lt;/a&gt;功能未启用，并 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b52ef39bb86caf8cfc0a9946ef66fc267d004f28" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage3D&quot;&gt;sparse residency for 3D images&lt;/a&gt; feature is not enabled, and &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage3D&quot;&gt;对3D图像稀疏的居住&lt;/a&gt;功能未启用，并 &lt;code&gt;imageType&lt;/code&gt; 是 &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12c2011bb0f0a27036433c03249d65b59a4697f5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用功能， &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 或 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9de6ba9c7d0df84ae8b633875121c7b1d550263c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用功能， &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 或 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1e6a29d44f85aeb2041108e7f79a226f043ea98" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; or &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用功能， &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; 或 &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="003014ad3484009e363b86365c75c24feb7bfa48" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用功能， &lt;code&gt;stageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 或 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79198eb82f89d22b8c5a9b967eb9889f00f07905" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;topology&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用功能， &lt;code&gt;topology&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="651b627e9edbd9fba4d7fcaa061ed73e93a1e4c3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, any given element of &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;镶嵌着色器&lt;/a&gt;未启用特征，任何给定的元素 &lt;code&gt;pWaitDstStageMask&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不包含 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 或 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="543d33885af8c35c64bce4b6c18500952460bca6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-variableMultisampleRate&quot;&gt;variable multisample rate&lt;/a&gt; feature is not supported, &lt;code&gt;pipeline&lt;/code&gt; is a graphics pipeline, the current subpass has no attachments, and this is not the first call to this function with a graphics pipeline after transitioning to the current subpass, then the sample count specified by this pipeline &lt;strong&gt;must&lt;/strong&gt; match that set in the previous pipeline</source>
          <target state="translated">如果不支持&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-variableMultisampleRate&quot;&gt;可变的多采样率&lt;/a&gt;功能，则 &lt;code&gt;pipeline&lt;/code&gt; 是图形流水线，当前子通道没有附件，这不是过渡到当前子流水线后使用图形流水线对此函数的第一个调用，则由该管道&lt;strong&gt;必须&lt;/strong&gt;与先前管道中设置的管道匹配</target>
        </trans-unit>
        <trans-unit id="7c1c7925ef357111382dbac5c793739145039c7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-wideLines&quot;&gt;wide lines&lt;/a&gt; feature is not enabled, &lt;code&gt;lineWidth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">如果未启用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-wideLines&quot;&gt;宽线&lt;/a&gt;功能，则 &lt;code&gt;lineWidth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="058f43071b879c61f844c58982641dec0e041deb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; requires any dynamic state, that state &lt;strong&gt;must&lt;/strong&gt; have been set on the current command buffer</source>
          <target state="translated">如果当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 的 &lt;code&gt;VkPipeline&lt;/code&gt; 对象需要任何动态状态，则该状态&lt;strong&gt;必须&lt;/strong&gt;已在当前命令缓冲区中设置&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64bab4816c128dab4befd6e7e2e34b1d90450c84" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;aspectMask&lt;/code&gt; member of any given element of &lt;code&gt;pAttachments&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;, the &lt;code&gt;colorAttachment&lt;/code&gt; member of those elements &lt;strong&gt;must&lt;/strong&gt; refer to a valid color attachment in the current subpass</source>
          <target state="translated">如果 &lt;code&gt;aspectMask&lt;/code&gt; 的任何给定元件的构件 &lt;code&gt;pAttachments&lt;/code&gt; 包含 &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; ，所述 &lt;code&gt;colorAttachment&lt;/code&gt; 那些元件的构件&lt;strong&gt;必须&lt;/strong&gt;指向一个有效的色附着在当前subpass</target>
        </trans-unit>
        <trans-unit id="5221731fc27ca4fbe651ea6acc0e4a5b242f594a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pInputAttachments&lt;/code&gt;, &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;, or any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt; in any given element of &lt;code&gt;pSubpasses&lt;/code&gt; is not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;attachmentCount&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pInputAttachments&lt;/code&gt; ， &lt;code&gt;pColorAttachments&lt;/code&gt; ， &lt;code&gt;pResolveAttachments&lt;/code&gt; 或 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 的任何元素的 &lt;code&gt;attachment&lt;/code&gt; 成员，或者 &lt;code&gt;pPreserveAttachments&lt;/code&gt; 的任何给定元素中的 &lt;code&gt;pSubpasses&lt;/code&gt; 任何元素不是 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; ，则它&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;attachmentCount&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b18d3acdaa06d2007dfedeb9dd2ffce4f81ba23" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pInputAttachments&lt;/code&gt;, &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;, or the attachment indexed by any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt; in any given element of &lt;code&gt;pSubpasses&lt;/code&gt; is bound to a range of a &lt;code&gt;VkDeviceMemory&lt;/code&gt; object that overlaps with any other attachment in any subpass (including the same subpass), the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures describing them &lt;strong&gt;must&lt;/strong&gt; include &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; in &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pInputAttachments&lt;/code&gt; ， &lt;code&gt;pColorAttachments&lt;/code&gt; ， &lt;code&gt;pResolveAttachments&lt;/code&gt; 或 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 的任何元素的 &lt;code&gt;attachment&lt;/code&gt; 成员，或 &lt;code&gt;pPreserveAttachments&lt;/code&gt; 的任何给定元素中由 &lt;code&gt;pSubpasses&lt;/code&gt; 的任何元素索引的附件，都绑定到 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 对象的范围，该对象与任何子遍历中的任何其他附件重叠（ （包括相同的子通道），描述它们的 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构&lt;strong&gt;必须&lt;/strong&gt;在 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a85f3733573f67982c06ef8869ac164641d4a2df" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dstBinding&lt;/code&gt; has fewer than &lt;code&gt;descriptorCount&lt;/code&gt; array elements remaining starting from &lt;code&gt;dstArrayElement&lt;/code&gt;, then the remainder will be used to update the subsequent binding - &lt;code&gt;dstBinding&lt;/code&gt;+1 starting at array element zero. If a binding has a &lt;code&gt;descriptorCount&lt;/code&gt; of zero, it is skipped. This behavior applies recursively, with the update affecting consecutive bindings as needed to update all &lt;code&gt;descriptorCount&lt;/code&gt; descriptors.</source>
          <target state="translated">如果 &lt;code&gt;dstBinding&lt;/code&gt; 从 &lt;code&gt;dstArrayElement&lt;/code&gt; 开始剩余少于 &lt;code&gt;descriptorCount&lt;/code&gt; 计数数组元素，则其余部分将用于更新后续绑定- 从数组元素0开始的 &lt;code&gt;dstBinding&lt;/code&gt; +1。如果绑定的 &lt;code&gt;descriptorCount&lt;/code&gt; 计数为零，则将其跳过。此行为是递归应用的，该更新会影响更新所有 &lt;code&gt;descriptorCount&lt;/code&gt; 符计数描述符所需的连续绑定。</target>
        </trans-unit>
        <trans-unit id="9b30366086b8ca074a7ccc4cb0efb13dbebd4066" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dstSet&lt;/code&gt; member of any given element of &lt;code&gt;pDescriptorWrites&lt;/code&gt; or &lt;code&gt;pDescriptorCopies&lt;/code&gt; is bound, accessed, or modified by any command that was recorded to a command buffer which is currently in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;recording or executable state&lt;/a&gt;, that command buffer becomes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pDescriptorWrites&lt;/code&gt; 或 &lt;code&gt;pDescriptorCopies&lt;/code&gt; 的任何给定元素的 &lt;code&gt;dstSet&lt;/code&gt; 成员被记录到当前处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;记录或可执行状态&lt;/a&gt;的命令缓冲区的任何命令绑定，访问或修改，则该命令缓冲区将变为&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;无效&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3393dfa6818e1df0e7af55979bc9e3a2718ebe77" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of &lt;code&gt;pCreateInfo&lt;/code&gt; includes &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, creating this &lt;code&gt;VkBuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not cause the total required sparse memory for all currently valid sparse resources on the device to exceed &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;sparseAddressSpaceSize&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pCreateInfo&lt;/code&gt; 的 &lt;code&gt;flags&lt;/code&gt; 成员包括 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; ，则创建此 &lt;code&gt;VkBuffer&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不会导致设备上所有当前有效的稀疏资源所需的总稀疏内存超过 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;sparseAddressSpaceSize&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b13418e7f8c7c3a44c96305f01be41cdeab9e0b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of &lt;code&gt;pCreateInfo&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, creating this &lt;code&gt;VkImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not cause the total required sparse memory for all currently valid sparse resources on the device to exceed &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;sparseAddressSpaceSize&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;pCreateInfo&lt;/code&gt; 的 &lt;code&gt;flags&lt;/code&gt; 成员包括 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; ，则创建此 &lt;code&gt;VkImage&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不会导致设备上所有当前有效的稀疏资源所需的总稀疏内存超过 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;sparseAddressSpaceSize&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="467f63f021e4dbb163eeb41cc3d6996090813a54" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of any given element of &lt;code&gt;pCreateInfos&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and the &lt;code&gt;basePipelineIndex&lt;/code&gt; member of that same element is not &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;basePipelineIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the index into &lt;code&gt;pCreateInfos&lt;/code&gt; that corresponds to that element</source>
          <target state="translated">如果 &lt;code&gt;pCreateInfos&lt;/code&gt; 的任何给定元素的 &lt;code&gt;flags&lt;/code&gt; 成员包含 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 标志，并且同一元素的 &lt;code&gt;basePipelineIndex&lt;/code&gt; 成员不为 &lt;code&gt;-1&lt;/code&gt; ，则 &lt;code&gt;basePipelineIndex&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;pCreateInfos&lt;/code&gt; 中与该元素对应的索引&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68c395ff3073504a29223b5980d1b3b4c3e653f6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of any given element of &lt;code&gt;pCreateInfos&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, the base pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; flag set</source>
          <target state="translated">如果 &lt;code&gt;pCreateInfos&lt;/code&gt; 的任何给定元素的 &lt;code&gt;flags&lt;/code&gt; 成员包含 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 标志，则&lt;strong&gt;必须&lt;/strong&gt;已设置 &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; 标志来创建基本管道&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72f52b497ba4f01e5c7c76b04f2f0c77be248cc5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; of the pool is &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt;, an implementation &lt;strong&gt;must&lt;/strong&gt; return a result that matches the actual number of samples passed. This is described in more detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;Occlusion Queries&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 的游泳池是 &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt; ，一个实现&lt;strong&gt;必须&lt;/strong&gt;返回一个通过样品的实际数量相匹配的结果。这在&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;遮挡查询&amp;rdquo;&lt;/a&gt;中有更详细的描述。</target>
        </trans-unit>
        <trans-unit id="8fc16055ec6d5098a39a55af925d9389814e04de" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 用于创建 &lt;code&gt;queryPool&lt;/code&gt; 是 &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; 的 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持图形操作</target>
        </trans-unit>
        <trans-unit id="2057c23d2f041eb5914063614bf8ee200dffb978" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; and any of the &lt;code&gt;pipelineStatistics&lt;/code&gt; indicate compute operations, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 用于创建 &lt;code&gt;queryPool&lt;/code&gt; 是 &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; 和任何的 &lt;code&gt;pipelineStatistics&lt;/code&gt; 表明运算时， &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持计算操作</target>
        </trans-unit>
        <trans-unit id="148d9622bbefcf3103c86a91718547300cd96a7d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; and any of the &lt;code&gt;pipelineStatistics&lt;/code&gt; indicate graphics operations, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 用于创建 &lt;code&gt;queryPool&lt;/code&gt; 是 &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; 和任何的 &lt;code&gt;pipelineStatistics&lt;/code&gt; 显示图形操作中， &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持图形操作</target>
        </trans-unit>
        <trans-unit id="65b6a57b19b5e0db26179fa2021c7e0590ae6f2e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;queryType&lt;/code&gt; 用于创建 &lt;code&gt;queryPool&lt;/code&gt; 是 &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不含有 &lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40f59cfa6de4c114163064bf3b2996abe5184a45" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pRasterizationState&lt;/code&gt; 的 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; 成员为 &lt;code&gt;VK_FALSE&lt;/code&gt; ，则 &lt;code&gt;pMultisampleState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; 结构的指针&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46033b1a6716ca3e1be34e9aee0f8fe0a0af36fd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pRasterizationState&lt;/code&gt; 的 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; 成员为 &lt;code&gt;VK_FALSE&lt;/code&gt; ，则 &lt;code&gt;pViewportState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 结构的指针&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f244ad19fad3cdf035d3d03bc47c32c280ed3757" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment, &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pRasterizationState&lt;/code&gt; 的 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; 成员为 &lt;code&gt;VK_FALSE&lt;/code&gt; ，并且子 &lt;code&gt;subpass&lt;/code&gt; 使用深度/模板附件，则 &lt;code&gt;pDepthStencilState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 结构的指针&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8dd793918a179bd3bfe14999cf12ffc472dbc83" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, and &lt;code&gt;subpass&lt;/code&gt; uses color attachments, &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">如果 &lt;code&gt;pRasterizationState&lt;/code&gt; 的 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; 成员为 &lt;code&gt;VK_FALSE&lt;/code&gt; ，并且子 &lt;code&gt;subpass&lt;/code&gt; 使用颜色附件，则 &lt;code&gt;pColorBlendState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向有效 &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; 结构的指针&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d7b5a8df2463c554aac8c986aaaa49d4815c2e2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;topology&lt;/code&gt; member of &lt;code&gt;pInputAssembly&lt;/code&gt; is &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;, &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; include tessellation shader stages</source>
          <target state="translated">如果 &lt;code&gt;pInputAssembly&lt;/code&gt; 的 &lt;code&gt;topology&lt;/code&gt; 成员是 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt; ，则 &lt;code&gt;pStages&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;包含镶嵌细分着色器阶段&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1fffc1dd2b73a9a1bd6971ef57790e95e102ad9" translate="yes" xml:space="preserve">
          <source>If the VK_KHR_sampler_mirror_clamp_to_edge extension is not enabled, &lt;code&gt;addressModeU&lt;/code&gt;, &lt;code&gt;addressModeV&lt;/code&gt; and &lt;code&gt;addressModeW&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt;</source>
          <target state="translated">如果未启用VK_KHR_sampler_mirror_clamp_to_edge扩展， &lt;code&gt;addressModeU&lt;/code&gt; ， &lt;code&gt;addressModeV&lt;/code&gt; 和 &lt;code&gt;addressModeW&lt;/code&gt; &lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bdb5b4920f4b2e5b0ac1c1d4a2752fec288fd51" translate="yes" xml:space="preserve">
          <source>If the allocation is scoped to the lifetime of an instance and the instance has an allocator, its allocator will be used with an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt;.</source>
          <target state="translated">如果分配范围是实例的生命周期，并且该实例具有分配器，则其分配器将与 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt; 的分配范围一起使用。</target>
        </trans-unit>
        <trans-unit id="c2a401949e633bfe2b9e2c1bab2fbf8f1b2f3858" translate="yes" xml:space="preserve">
          <source>If the attachment uses a color format, then &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;storeOp&lt;/code&gt; are used, and &lt;code&gt;stencilLoadOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; are ignored. If the format has depth and/or stencil components, &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;storeOp&lt;/code&gt; apply only to the depth data, while &lt;code&gt;stencilLoadOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; define how the stencil data is handled. &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;stencilLoadOp&lt;/code&gt; define the &lt;em&gt;load operations&lt;/em&gt; that execute as part of the first subpass that uses the attachment. &lt;code&gt;storeOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; define the &lt;em&gt;store operations&lt;/em&gt; that execute as part of the last subpass that uses the attachment.</source>
          <target state="translated">如果附件使用颜色格式，则使用 &lt;code&gt;loadOp&lt;/code&gt; 和 &lt;code&gt;storeOp&lt;/code&gt; ，而 &lt;code&gt;stencilLoadOp&lt;/code&gt; 和 &lt;code&gt;stencilStoreOp&lt;/code&gt; 将被忽略。如果格式包含深度和/或模板组件，则 &lt;code&gt;loadOp&lt;/code&gt; 和 &lt;code&gt;storeOp&lt;/code&gt; 仅适用于深度数据，而 &lt;code&gt;stencilLoadOp&lt;/code&gt; 和 &lt;code&gt;stencilStoreOp&lt;/code&gt; 定义如何处理模板数据。 &lt;code&gt;loadOp&lt;/code&gt; 和 &lt;code&gt;stencilLoadOp&lt;/code&gt; 定义作为使用附件的第一个子通道的一部分执行的&lt;em&gt;加载操作&lt;/em&gt;。 &lt;code&gt;storeOp&lt;/code&gt; 和 &lt;code&gt;stencilStoreOp&lt;/code&gt; 定义&lt;em&gt;存储操作&lt;/em&gt; 作为使用附件的最后一个子通道的一部分执行。</target>
        </trans-unit>
        <trans-unit id="9d6d883eddd92b58ec8f36f24493c1ab7858954f" translate="yes" xml:space="preserve">
          <source>If the bound pipeline state object was not created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled, viewport transformation parameters are specified using the &lt;code&gt;pViewports&lt;/code&gt; member of &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; in the pipeline state object. If the pipeline state object was created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled, the viewport transformation parameters are dynamically set and changed with the command:</source>
          <target state="translated">如果绑定的管道状态对象不是在启用了 &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 动态状态的情况下创建的，则使用管道状态对象中 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 的 &lt;code&gt;pViewports&lt;/code&gt; 成员指定视口转换参数。如果管道状态对象是在启用了 &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 动态状态的情况下创建的，则使用以下命令动态设置和更改视口转换参数：</target>
        </trans-unit>
        <trans-unit id="591c0ea04c37d0a378da3e0f4b1b8881bfb6bd53" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferImageHeight&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;bufferImageHeight&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块高度的倍数</target>
        </trans-unit>
        <trans-unit id="60d7aa1073a5fe011b61e825245ccd4b45b3ea42" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block size in bytes</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;bufferOffset&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块大小的倍数（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="1af2c2aee14bad79e1c61088e87b2afb3770a91c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferRowLength&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;bufferRowLength&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块宽度的倍数</target>
        </trans-unit>
        <trans-unit id="23701ab6c6205224ba990c32877dd814689c4dc1" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;imageExtent.depth&lt;/code&gt; + &lt;code&gt;imageOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource depth</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;imageExtent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩纹理像素深度的倍数，或者（ &lt;code&gt;imageExtent.depth&lt;/code&gt; + &lt;code&gt;imageOffset.z&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于图像子资源深度</target>
        </trans-unit>
        <trans-unit id="1e626badebf41bf554c7b43f0faeba14f8d2b44f" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;imageExtent.height&lt;/code&gt; + &lt;code&gt;imageOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource height</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;imageExtent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩纹理像素高度的倍数，或者（ &lt;code&gt;imageExtent.height&lt;/code&gt; + &lt;code&gt;imageOffset.y&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于图像子资源的高度</target>
        </trans-unit>
        <trans-unit id="703e95163a04ae17f7ba38ce1ba6a00d6de9dbc4" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;imageExtent.width&lt;/code&gt; + &lt;code&gt;imageOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource width</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;imageExtent.width&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块宽度的倍数，或者（ &lt;code&gt;imageExtent.width&lt;/code&gt; + &lt;code&gt;imageOffset.x&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于图像子资源的宽度</target>
        </trans-unit>
        <trans-unit id="4a03cf2147807d4604496760d90135e2b39c629c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, all members of &lt;code&gt;imageOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是压缩格式的图像，则 &lt;code&gt;imageOffset&lt;/code&gt; 的所有成员&lt;strong&gt;必须&lt;/strong&gt;是压缩texel块的相应尺寸的倍数</target>
        </trans-unit>
        <trans-unit id="686c38f80d660b5dcfdb4a0e83ba3d3533a27a14" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is of &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, the &lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; members of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, respectively</source>
          <target state="translated">如果主叫命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数是&lt;a href=&quot;#VkImageType&quot;&gt;VkImageType &lt;/a&gt; &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; ，所述 &lt;code&gt;baseArrayLayer&lt;/code&gt; 和 &lt;code&gt;layerCount&lt;/code&gt; 成员 &lt;code&gt;imageSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;1&lt;/code&gt; 分别</target>
        </trans-unit>
        <trans-unit id="f55f5338587eabd6cd16d07e867c7ca1537fbe5c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;dstOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource depth</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块深度的倍数，或者（ &lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;dstOffset.z&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于目标图像子资源深度</target>
        </trans-unit>
        <trans-unit id="b28c87379364451f3b36fd916fb19672798e576b" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;dstOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource height</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块高度的倍数，或者（ &lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;dstOffset.y&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于目标图像子资源的高度</target>
        </trans-unit>
        <trans-unit id="558f4178cb281a334328854e8fe68b57bca8675b" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;dstOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource width</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.width&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块宽度的倍数，或者（ &lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;dstOffset.x&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于目标图像子资源的宽度</target>
        </trans-unit>
        <trans-unit id="37257d546c948d2d9c18e6a044099d7f80698167" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, all members of &lt;code&gt;dstOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;dstOffset&lt;/code&gt; 的所有成员&lt;strong&gt;必须&lt;/strong&gt;是压缩texel块的相应尺寸的倍数</target>
        </trans-unit>
        <trans-unit id="c9455a7d009d517ac3180616cfaad8477dd105ad" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;dstOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;dstOffset.z&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44c28b8ea4e4d17994c48d3100770ed83bc9bd50" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;dstOffset&lt;/code&gt;[0].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;dstOffset&lt;/code&gt;[1].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;dstOffset&lt;/code&gt; [0] .z &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; 且 &lt;code&gt;dstOffset&lt;/code&gt; [1] .z &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e40041487982469956890c22c93b0a6084dee44e" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;dstOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;dstOffset.y&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fa06638e6154a12f148b5e22df2be92e83ae0ee" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;dstOffset&lt;/code&gt;[0].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;dstOffset&lt;/code&gt;[1].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;dstImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;dstOffset&lt;/code&gt; [0] .y &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;dstOffset&lt;/code&gt; [1] .y &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecae3faffc478a83471ae040ebc177c4aac060ab" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;) or &lt;code&gt;dstImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;) is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;imageOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;imageExtent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;）或 &lt;code&gt;dstImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;）的类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;imageOffset.z&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; 且 &lt;code&gt;imageExtent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="160bca763ff6693059f878b1712333bd87ccb2dc" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;) or &lt;code&gt;dstImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;) is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;imageOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;imageExtent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;）或 &lt;code&gt;dstImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;）的类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;imageOffset.y&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;imageExtent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5567e2b0f4a76520483994e2358ab39b4b54c554" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;srcOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource depth</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块深度的倍数，或者（ &lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;srcOffset.z&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于源图像子资源深度</target>
        </trans-unit>
        <trans-unit id="08826b9a0454d1444b02409ba43dc97bf6518f35" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;srcOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource height</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块高度的倍数，或者（ &lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;srcOffset.y&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于源图像子资源高度</target>
        </trans-unit>
        <trans-unit id="8f1e1cbfa4f41d360486748ed78ba7ac901ed3a0" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;srcOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource width</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;extent.width&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是压缩的texel块宽度的倍数，或者（ &lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;srcOffset.x&lt;/code&gt; ）&lt;strong&gt;必须&lt;/strong&gt;等于源图像子资源宽度</target>
        </trans-unit>
        <trans-unit id="369bd7459e6f62e7684e73ccb2fd8bd92139e025" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, all members of &lt;code&gt;srcOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 是压缩格式的图像，则 &lt;code&gt;srcOffset&lt;/code&gt; 的所有成员&lt;strong&gt;必须&lt;/strong&gt;是压缩texel块的相应尺寸的倍数</target>
        </trans-unit>
        <trans-unit id="f5c9232a301c3208501435016df280b93d724335" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;srcOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;srcOffset.z&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;extent.depth&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="432e50e60947120bfd350d7c26390b4e0b405c30" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;srcOffset&lt;/code&gt;[0].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;srcOffset&lt;/code&gt;[1].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; ，则 &lt;code&gt;srcOffset&lt;/code&gt; [0] .z &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; 且 &lt;code&gt;srcOffset&lt;/code&gt; [1] .z &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee19b183d3171b3939afe3de9df8ca8befd003a5" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;srcOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;srcOffset.y&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;extent.height&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="405058af1517bb50ac0495c0c8bd96aab7a71553" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;srcOffset&lt;/code&gt;[0].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;srcOffset&lt;/code&gt;[1].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果调用命令的 &lt;code&gt;srcImage&lt;/code&gt; 类型为 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; ，则 &lt;code&gt;srcOffset&lt;/code&gt; [0] .y &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;srcOffset&lt;/code&gt; [1] .y &lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf4a55559aa630c9aa682af6666bb5a7a055ab92" translate="yes" xml:space="preserve">
          <source>If the color attachment is fixed-point, the components of the source and destination values and blend factors are each clamped to [0,1] or [-1,1] respectively for an unsigned normalized or signed normalized color attachment prior to evaluating the blend operations. If the color attachment is floating-point, no clamping occurs.</source>
          <target state="translated">如果颜色附件是定点的,在评估混合操作之前,源值和目标值的分量以及混合因子分别被箝制为[0,1]或[-1,1],用于无符号归一化或有符号归一化颜色附件。如果颜色附件是浮点的,则不会发生钳位。</target>
        </trans-unit>
        <trans-unit id="2f123ea92e7fe5a38a517ad65da6cc63a69b952d" translate="yes" xml:space="preserve">
          <source>If the combination of parameters to &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; is not supported by the implementation for use in &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, then all members of &lt;code&gt;VkImageFormatProperties&lt;/code&gt; will be filled with zero.</source>
          <target state="translated">如果参数组合 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 不为正在使用的实现支持&lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;，那么所有成员 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; 将充满为零。</target>
        </trans-unit>
        <trans-unit id="17d3fe4116924c0d1ab46071ae6259b22aa06281" translate="yes" xml:space="preserve">
          <source>If the command buffer is a secondary command buffer, then the &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; structure defines any state that will be inherited from the primary command buffer:</source>
          <target state="translated">如果命令缓冲区是辅助命令缓冲区，则 &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; 结构定义将从主命令缓冲区继承的任何状态：</target>
        </trans-unit>
        <trans-unit id="7fbdc6a1bf61a0b220886f009d0fcdac7f7ff364" translate="yes" xml:space="preserve">
          <source>If the condition is satisfied when &lt;code&gt;vkWaitForFences&lt;/code&gt; is called, then &lt;code&gt;vkWaitForFences&lt;/code&gt; returns immediately. If the condition is not satisfied at the time &lt;code&gt;vkWaitForFences&lt;/code&gt; is called, then &lt;code&gt;vkWaitForFences&lt;/code&gt; will block and wait up to &lt;code&gt;timeout&lt;/code&gt; nanoseconds for the condition to become satisfied.</source>
          <target state="translated">如果条件满足时 &lt;code&gt;vkWaitForFences&lt;/code&gt; 被调用，那么 &lt;code&gt;vkWaitForFences&lt;/code&gt; 立即返回。如果在调用 &lt;code&gt;vkWaitForFences&lt;/code&gt; 时不满足条件，则 &lt;code&gt;vkWaitForFences&lt;/code&gt; 将阻塞并等待 &lt;code&gt;timeout&lt;/code&gt; 纳秒，直到条件满足。</target>
        </trans-unit>
        <trans-unit id="0907f380eda9db7f403dfa3058b160282a70609c" translate="yes" xml:space="preserve">
          <source>If the depth bias clamping feature is not enabled, no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt;, and the &lt;code&gt;depthBiasEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, the &lt;code&gt;depthBiasClamp&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0.0&lt;/code&gt;</source>
          <target state="translated">如果未启用深度偏压夹持特征，无的元素 &lt;code&gt;pDynamicStates&lt;/code&gt; 的构件 &lt;code&gt;pDynamicState&lt;/code&gt; 是 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; ，并且 &lt;code&gt;depthBiasEnable&lt;/code&gt; 的构件 &lt;code&gt;pDepthStencil&lt;/code&gt; 是 &lt;code&gt;VK_TRUE&lt;/code&gt; ，所述 &lt;code&gt;depthBiasClamp&lt;/code&gt; 的构件 &lt;code&gt;pDepthStencil&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f058a2a2aa22a20c91a022522aadf832544f9fe0" translate="yes" xml:space="preserve">
          <source>If the device has been lost (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;), &lt;code&gt;vkGetFenceStatus&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; return any of the above status codes. If the device has been lost and &lt;code&gt;vkGetFenceStatus&lt;/code&gt; is called repeatedly, it will eventually return either &lt;code&gt;VK_SUCCESS&lt;/code&gt; or &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">如果设备丢失（请参阅&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;丢失的设备&lt;/a&gt;），则 &lt;code&gt;vkGetFenceStatus&lt;/code&gt; &lt;strong&gt;可能&lt;/strong&gt;返回上述任何状态代码。如果设备丢失，并且反复调用 &lt;code&gt;vkGetFenceStatus&lt;/code&gt; ，它将最终返回 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 或 &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d01918c259e473d8f1cb2dc1b35329a5203ed530" translate="yes" xml:space="preserve">
          <source>If the first use of an attachment in this render pass is as an input attachment, and the attachment is not also used as a color or depth/stencil attachment in the same subpass, then &lt;code&gt;loadOp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</source>
          <target state="translated">如果在第一次使用在该附件的渲染过程是作为输入附件，该附件还没有用作在相同subpass颜色或深度/模板附接，然后 &lt;code&gt;loadOp&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能 &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f56bb7fcfdd8706662318cb4c950eb165576478" translate="yes" xml:space="preserve">
          <source>If the format being queried is a depth/stencil format, this bit only indicates that the depth aspect (not the stencil aspect) of an image of this format supports linear filtering, and that linear filtering of the depth aspect is supported whether depth compare is enabled in the sampler or not. If this bit is not present, linear filtering with depth compare disabled is unsupported and linear filtering with depth compare enabled is supported, but &lt;strong&gt;may&lt;/strong&gt; compute the filtered value in an implementation-dependent manner which differs from the normal rules of linear filtering. The resulting value &lt;strong&gt;must&lt;/strong&gt; be in the range [0,1] and &lt;strong&gt;should&lt;/strong&gt; be proportional to, or a weighted average of, the number of comparison passes or failures.</source>
          <target state="translated">如果要查询的格式是深度/模板格式，则此位仅指示此格式的图像的深度方面（不是模板方面）支持线性过滤，并且无论深度比较是否为，都支持深度方面的线性过滤。是否在采样器中启用。如果不存在此位，则不支持禁用深度比较的线性过滤，而支持启用深度比较的线性过滤，但是&lt;strong&gt;可能&lt;/strong&gt;以与实现相关的方式计算过滤后的值，该方式不同于线性过滤的常规规则。结果值&lt;strong&gt;必须&lt;/strong&gt;在[0,1]范围内，并且&lt;strong&gt;应&lt;/strong&gt;与比较通过或失败的次数成正比或为加权平均值。</target>
        </trans-unit>
        <trans-unit id="6d2bbc4ce5ee19f1e6fef23c05c140fc65281314" translate="yes" xml:space="preserve">
          <source>If the format of the image corresponding to the parameters is one of the block-compressed formats then for the purposes of the above calculations the granularity &lt;strong&gt;must&lt;/strong&gt; be scaled up by the compressed texel block dimensions.</source>
          <target state="translated">如果与参数相对应的图像格式是块压缩格式之一，则出于上述计算的目的，&lt;strong&gt;必须&lt;/strong&gt;通过压缩的纹理像素块尺寸按比例放大粒度。</target>
        </trans-unit>
        <trans-unit id="708689f31f433200b206ca7c5c602da099057268" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;ClipDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxClipDistances&lt;/code&gt;</source>
          <target state="translated">如果确定入口点包括声明与在其接口的任何变量 &lt;code&gt;ClipDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; 装修，该变量&lt;strong&gt;必须&lt;/strong&gt;不能有一个数组的大小大于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxClipDistances&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10f138f46b9b8fbb350a345ea32606783ac97570" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;CullDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxCullDistances&lt;/code&gt;</source>
          <target state="translated">如果确定入口点包括声明与在其接口的任何变量 &lt;code&gt;CullDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; 装修，该变量&lt;strong&gt;必须&lt;/strong&gt;不能有一个数组的大小大于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxCullDistances&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f519428d547e30a00af217f6928edd99475c0fc" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;SampleMask&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxSampleMaskWords&lt;/code&gt;</source>
          <target state="translated">如果确定入口点包括声明与在其接口的任何变量 &lt;code&gt;SampleMask&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; 装修，该变量&lt;strong&gt;必须&lt;/strong&gt;不能有一个数组的大小大于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxSampleMaskWords&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cf5b4cb98b9fe266905a4f2e86c2917aa4b8f13" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variables in its interface that are declared with the &lt;code&gt;ClipDistance&lt;/code&gt; or &lt;code&gt;CullDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, those variables &lt;strong&gt;must&lt;/strong&gt; not have array sizes which sum to more than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxCombinedClipAndCullDistances&lt;/code&gt;</source>
          <target state="translated">如果所识别的入口点包括声明为在其界面的任何变量 &lt;code&gt;ClipDistance&lt;/code&gt; 或 &lt;code&gt;CullDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; 装饰，这些变量&lt;strong&gt;一定&lt;/strong&gt;不能有数组大小，其总和超过 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxCombinedClipAndCullDistances&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed706c543a884fdff902df4b0c356594632cf44f" translate="yes" xml:space="preserve">
          <source>If the image has more than one sample, the same value is written to all samples for any pixels being cleared.</source>
          <target state="translated">如果图像有多个样本,那么对于任何被清除的像素,相同的值被写入所有样本。</target>
        </trans-unit>
        <trans-unit id="d2f83731eb00d7a5a5dafcb9e34360bb94fe469b" translate="yes" xml:space="preserve">
          <source>If the image was not created with &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; then &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; will be set to zero and &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; will not be written to.</source>
          <target state="translated">如果未使用 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 创建映像，则 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; 将设置为零，并且不会写入 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94874d7411130a1cc5b254dc2cce99a51d64ba63" translate="yes" xml:space="preserve">
          <source>If the implementation is able to continue correct processing of the current command without the requested allocation, then it &lt;strong&gt;may&lt;/strong&gt; do so, and &lt;strong&gt;must&lt;/strong&gt; not generate &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; as a result of this failed allocation.</source>
          <target state="translated">如果实现能够继续当前命令的正确处理，不分配请求，那么它&lt;strong&gt;可以&lt;/strong&gt;这样做，而且&lt;strong&gt;一定&lt;/strong&gt;不能产生 &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; 因为这样分配失败的结果。</target>
        </trans-unit>
        <trans-unit id="88ba7c7344f17960f0ca2d73eb06020e7abe1e28" translate="yes" xml:space="preserve">
          <source>If the memory object does have the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; property flag, writes to the memory object from the host are automatically made visible to the &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt;. Similarly, writes made visible to the &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt; are automatically made visible to the host.</source>
          <target state="translated">如果该内存对象确实具有 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; 属性标志，则从主机对内存对象的写入将自动变为 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;访问类型&lt;/a&gt;可见。同样，对 &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;访问类型&lt;/a&gt;可见的写入将自动对主机可见。</target>
        </trans-unit>
        <trans-unit id="1394c86c935c7f455dfbfe34cea1bee8811c6136" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil compare mask call:</source>
          <target state="translated">如果在启用了 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; 动态状态的情况下创建了管道状态对象，则可以动态设置模具比较掩码调用：</target>
        </trans-unit>
        <trans-unit id="3bd8608fd4f878f9931bb51353a0401c875a6309" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil reference value call:</source>
          <target state="translated">如果在启用 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; 动态状态的情况下创建管道状态对象，则要动态设置模具参考值调用：</target>
        </trans-unit>
        <trans-unit id="8b2e875072383c99541d763643de36cdede794b5" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil write mask call:</source>
          <target state="translated">如果在启用了 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; 动态状态的情况下创建了管道状态对象，则可以动态设置模具写掩码调用：</target>
        </trans-unit>
        <trans-unit id="21513b189f372be2a856b4bedd845527e56c317e" translate="yes" xml:space="preserve">
          <source>If the specified timeout period expires before the condition is satisfied, &lt;code&gt;vkWaitForFences&lt;/code&gt; returns &lt;code&gt;VK_TIMEOUT&lt;/code&gt;. If the condition is satisfied before &lt;code&gt;timeout&lt;/code&gt; nanoseconds has expired, &lt;code&gt;vkWaitForFences&lt;/code&gt; returns &lt;code&gt;VK_SUCCESS&lt;/code&gt;.</source>
          <target state="translated">如果指定的超时期限在满足条件之前到期，则 &lt;code&gt;vkWaitForFences&lt;/code&gt; 返回 &lt;code&gt;VK_TIMEOUT&lt;/code&gt; 。如果在 &lt;code&gt;timeout&lt;/code&gt; 纳秒）到期之前满足了条件，则 &lt;code&gt;vkWaitForFences&lt;/code&gt; 返回 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8b7d3c4890171f8822925870249ee5722f9b96f" translate="yes" xml:space="preserve">
          <source>If the stencil test fails, the sample&amp;rsquo;s coverage bit is cleared in the fragment. If there is no stencil framebuffer attachment, stencil modification &lt;strong&gt;cannot&lt;/strong&gt; occur, and it is as if the stencil tests always pass.</source>
          <target state="translated">如果模板测试失败，则在片段中清除样本的覆盖位。如果没有模板帧缓冲区附件，&lt;strong&gt;则无法进行&lt;/strong&gt;模板修改，就好像模板测试始终通过一样。</target>
        </trans-unit>
        <trans-unit id="3f95650742d86a041a1880f8296f735ceb2e0c1b" translate="yes" xml:space="preserve">
          <source>If the stencil test passes, the &lt;code&gt;writeMask&lt;/code&gt; member of the &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt; structures controls how the updated stencil value is written to the stencil framebuffer attachment.</source>
          <target state="translated">如果模板测试通过，则 &lt;code&gt;writeMask&lt;/code&gt; 的的构件&lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;结构控制如何更新模板值被写入到帧缓冲器蜡纸附着。</target>
        </trans-unit>
        <trans-unit id="1ae2725fba86f90060ec41a69c258441ca5c4a24" translate="yes" xml:space="preserve">
          <source>If the the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter&amp;rsquo;s format is not a depth/stencil format, then &lt;code&gt;bufferOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the format&amp;rsquo;s element size</source>
          <target state="translated">如果调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数的格式不是深度/模板格式，则 &lt;code&gt;bufferOffset&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是该格式的元素大小的倍数</target>
        </trans-unit>
        <trans-unit id="e7f06fac0c1cddf9b5428aa9a81918d081c606dd" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pData&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pDataSize&lt;/code&gt; bytes</source>
          <target state="translated">如果 &lt;code&gt;pDataSize&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pData&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pData&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pDataSize&lt;/code&gt; 字节数组的指针</target>
        </trans-unit>
        <trans-unit id="25568656307073e6522ffc92dfbea75618f7430b" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pPhysicalDevices&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pPhysicalDevices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;&lt;code&gt;VkPhysicalDevice&lt;/code&gt; handles</source>
          <target state="translated">如果 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pPhysicalDevices&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pPhysicalDevices&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; &lt;code&gt;VkPhysicalDevice&lt;/code&gt; 句柄数组的指针</target>
        </trans-unit>
        <trans-unit id="bd807452626bfe7b2ca78aad0271f244449daea0" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkExtensionProperties&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pProperties&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pProperties&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkExtensionProperties&lt;/code&gt; 结构数组的指针。</target>
        </trans-unit>
        <trans-unit id="4e3979be2fc9cdc2dd1b757b50227cb79ffe7f6b" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkLayerProperties&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pProperties&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pProperties&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkLayerProperties&lt;/code&gt; 结构数组的指针</target>
        </trans-unit>
        <trans-unit id="1cb56b4065fbae60f3f4908c086f0586b66673e4" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pPropertyCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pProperties&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pProperties&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; 结构数组的指针</target>
        </trans-unit>
        <trans-unit id="8228854d1863f05f1534a9b0baf89ccd6922136d" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pQueueFamilyProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;&lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; &lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; 结构数组的指针</target>
        </trans-unit>
        <trans-unit id="54046ebcc97e7ae2b4124937e1b1502a1a24a1f1" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;&lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; structures</source>
          <target state="translated">如果 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; 引用的值不为 &lt;code&gt;0&lt;/code&gt; ，并且 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 不是 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是指向 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; 结构数组的指针。</target>
        </trans-unit>
        <trans-unit id="a0a7dfe4815abbae2e5a5f5b8e448c9d236c0a1b" translate="yes" xml:space="preserve">
          <source>If the vendor of the physical device has a valid PCI vendor ID issued by &lt;a href=&quot;https://pcisig.com/&quot;&gt;PCI-SIG&lt;/a&gt;, that ID &lt;strong&gt;should&lt;/strong&gt; be used to construct &lt;code&gt;vendorID&lt;/code&gt; as described above for PCI-based implementations. Implementations that do not return a PCI vendor ID in &lt;code&gt;vendorID&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return a valid Khronos vendor ID, obtained as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vulkan-styleguide&quot;&gt;Vulkan Documentation and Extensions&lt;/a&gt; document in the section &amp;ldquo;Registering a Vendor ID with Khronos&amp;rdquo;. Khronos vendor IDs are allocated starting at 0x10000, to distinguish them from the PCI vendor ID namespace.</source>
          <target state="translated">如果物理设备的供应商具有由发出的有效PCI厂商ID &lt;a href=&quot;https://pcisig.com/&quot;&gt;PCI-SIG&lt;/a&gt;，该ID &lt;strong&gt;应该&lt;/strong&gt;被用来构建 &lt;code&gt;vendorID&lt;/code&gt; 如上文对基于PCI的实施方案所描述。在 &lt;code&gt;vendorID&lt;/code&gt; 中未返回PCI供应商ID的实现&lt;strong&gt;必须&lt;/strong&gt;返回有效的Khronos供应商ID，该&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vulkan-styleguide&quot;&gt;信息已&lt;/a&gt;按照&amp;ldquo;在Khronos中注册供应商ID&amp;rdquo;部分的Vulkan文档和扩展文档中的说明获得。 Khronos供应商ID从0x10000开始分配，以区别于PCI供应商ID名称空间。</target>
        </trans-unit>
        <trans-unit id="0d5463c7a76983c1077e07d34fa03527edb8f918" translate="yes" xml:space="preserve">
          <source>If the wide lines feature is not enabled, and no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt;, the &lt;code&gt;lineWidth&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">如果宽线功能未启用，并且没有的元件 &lt;code&gt;pDynamicStates&lt;/code&gt; 的构件 &lt;code&gt;pDynamicState&lt;/code&gt; 是 &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; ，所述 &lt;code&gt;lineWidth&lt;/code&gt; 的构件 &lt;code&gt;pRasterizationState&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73c8518bfc4366e501489a6f8a21715ef69fe57a" translate="yes" xml:space="preserve">
          <source>If there was an error during recording, the application will be notified by an unsuccessful return code returned by &lt;code&gt;vkEndCommandBuffer&lt;/code&gt;. If the application wishes to further use the command buffer, the command buffer &lt;strong&gt;must&lt;/strong&gt; be reset. The command buffer &lt;strong&gt;must&lt;/strong&gt; have been in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;recording state&lt;/a&gt;, and is moved to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;.</source>
          <target state="translated">如果在记录过程中发生错误，则将通过 &lt;code&gt;vkEndCommandBuffer&lt;/code&gt; 返回的返回码失败通知应用程序。如果应用程序希望进一步使用命令缓冲区，则&lt;strong&gt;必须&lt;/strong&gt;重置命令缓冲区。命令缓冲区&lt;strong&gt;必须&lt;/strong&gt;已经处于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;记录状态&lt;/a&gt;，并且已移至&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;可执行状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae9a2543c02df9b741b548479bd8c55c951fb755" translate="yes" xml:space="preserve">
          <source>If this function fails and &lt;code&gt;pOriginal&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt; the application &lt;strong&gt;must&lt;/strong&gt; not free the old allocation.</source>
          <target state="translated">如果该函数失败，并 &lt;code&gt;pOriginal&lt;/code&gt; 是非 &lt;code&gt;NULL&lt;/code&gt; 的应用程序&lt;strong&gt;必须&lt;/strong&gt;不释放旧的分配。</target>
        </trans-unit>
        <trans-unit id="56540e8d9a562b8ccfdd00041da2a9b42c1a9291" translate="yes" xml:space="preserve">
          <source>Image formats which &lt;strong&gt;can&lt;/strong&gt; be passed to, and &lt;strong&gt;may&lt;/strong&gt; be returned from Vulkan commands, are:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;传递给Vulkan命令并&lt;strong&gt;可以&lt;/strong&gt;从Vulkan命令返回的图像格式为：</target>
        </trans-unit>
        <trans-unit id="dc7aea89ea7b1285bdebb8b6dce382d81c351c02" translate="yes" xml:space="preserve">
          <source>Image objects are not directly accessed by pipeline shaders for reading or writing image data. Instead, &lt;em&gt;image views&lt;/em&gt; representing contiguous ranges of the image subresources and containing additional metadata are used for that purpose. Views &lt;strong&gt;must&lt;/strong&gt; be created on images of compatible types, and &lt;strong&gt;must&lt;/strong&gt; represent a valid subset of image subresources.</source>
          <target state="translated">管道着色器不直接访问图像对象以读取或写入图像数据。取而代之的是，表示图像子资源的连续范围并包含其他元数据的&lt;em&gt;图像视图&lt;/em&gt;被用于此目的。视图&lt;strong&gt;必须&lt;/strong&gt;在兼容类型的图像上创建，并且&lt;strong&gt;必须&lt;/strong&gt;表示图像子资源的有效子集。</target>
        </trans-unit>
        <trans-unit id="81ddf6753fd0aad180f22e26cf6048ae03bf23cf" translate="yes" xml:space="preserve">
          <source>Image parameters</source>
          <target state="translated">图像参数</target>
        </trans-unit>
        <trans-unit id="0afd8402ae9d964414342afe8732cb509d669cba" translate="yes" xml:space="preserve">
          <source>Image subresources used as attachments &lt;strong&gt;must&lt;/strong&gt; not be accessed in any other way for the duration of a render pass instance.</source>
          <target state="translated">用作附件图像的子资源&lt;strong&gt;必须&lt;/strong&gt;不能在用于渲染过程实例的持续时间的任何其它方式来访问。</target>
        </trans-unit>
        <trans-unit id="6ec2c6fc56f7ada1535d1030947efe7b79df32fc" translate="yes" xml:space="preserve">
          <source>Image subresources used as attachments in the current render pass &lt;strong&gt;must&lt;/strong&gt; not be accessed in any way other than as an attachment by this command.</source>
          <target state="translated">用作当前附件图像的子资源渲染过程&lt;strong&gt;必须&lt;/strong&gt;不能以除由该命令的附接之外的任何方式进行访问。</target>
        </trans-unit>
        <trans-unit id="7b81ccc95283a87443226d3c08a0517e515b981d" translate="yes" xml:space="preserve">
          <source>Image views are represented by &lt;code&gt;VkImageView&lt;/code&gt; handles:</source>
          <target state="translated">图像视图由 &lt;code&gt;VkImageView&lt;/code&gt; 手柄表示：</target>
        </trans-unit>
        <trans-unit id="38b1c7b31c65affa0e0f560ec0798cc62c3f8279" translate="yes" xml:space="preserve">
          <source>Images are represented by &lt;code&gt;VkImage&lt;/code&gt; handles:</source>
          <target state="translated">图像由 &lt;code&gt;VkImage&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="ed88f13607e3c1609e3b6dbec1311e457c0b4ecf" translate="yes" xml:space="preserve">
          <source>Images created with &lt;code&gt;tiling&lt;/code&gt; equal to &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; have further restrictions on their limits and capabilities compared to images created with &lt;code&gt;tiling&lt;/code&gt; equal to &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;. Creation of images with tiling &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; not be supported unless other parameters meet all of the constraints:</source>
          <target state="translated">与创建图像 &lt;code&gt;tiling&lt;/code&gt; 等于 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 相比，与创建的图像有其局限性和能力进一步限制 &lt;code&gt;tiling&lt;/code&gt; 等于 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 。除非其他参数满足所有约束，否则&lt;strong&gt;可能&lt;/strong&gt;不支持使用图块 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 创建图像。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc45e1c0d35af06285aca40db6402e506931b9fd" translate="yes" xml:space="preserve">
          <source>Images represent multidimensional - up to 3 - arrays of data which &lt;strong&gt;can&lt;/strong&gt; be used for various purposes (e.g. attachments, textures), by binding them to a graphics or compute pipeline via descriptor sets, or by directly specifying them as parameters to certain commands.</source>
          <target state="translated">图像表示多维数据集（最多3个），&lt;strong&gt;可&lt;/strong&gt;用于各种目的（例如，附件，纹理），通过将它们绑定到图形或通过描述符集计算管道，或通过直接将它们指定为某些命令的参数来使用。</target>
        </trans-unit>
        <trans-unit id="c56b53cd8ccdf0e63a7b6e70c8e74861b2788035" translate="yes" xml:space="preserve">
          <source>Images still require a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts&quot;&gt;layout transition&lt;/a&gt; from &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; before being used on the first queue.</source>
          <target state="translated">在第一个队列上使用 &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; 之前，图像仍需要从 &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; 或VK_IMAGE_LAYOUT_PREINITIALIZED进行&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts&quot;&gt;布局转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d6b1993bf2454d104ce5f3aac73fe0d26abe907" translate="yes" xml:space="preserve">
          <source>Implementations &lt;strong&gt;may&lt;/strong&gt; support additional limits and capabilities beyond those listed above.</source>
          <target state="translated">实施&lt;strong&gt;可能会&lt;/strong&gt;支持超出上面列出的限制和功能。</target>
        </trans-unit>
        <trans-unit id="c184b611d1e020755822644bc18e37ed11616280" translate="yes" xml:space="preserve">
          <source>Implementations &lt;strong&gt;should&lt;/strong&gt; make every effort to limit any critical sections to the actual accesses to the cache, which is expected to be significantly shorter than the duration of the &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; and &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; commands.</source>
          <target state="translated">实现&lt;strong&gt;应尽&lt;/strong&gt;一切努力将任何关键部分限制为对缓存的实际访问，这预计比 &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; 和 &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; 命令的持续时间短得多。</target>
        </trans-unit>
        <trans-unit id="c74baf1fbeea0b9a62e010e6276e264826269db6" translate="yes" xml:space="preserve">
          <source>In order to support systems with multiple Vulkan implementations comprising heterogeneous collections of hardware and software, the function pointers returned by &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; point to dispatch code, which calls a different real implementation for different &lt;code&gt;VkDevice&lt;/code&gt; objects (and objects created from them). The overhead of this internal dispatch &lt;strong&gt;can&lt;/strong&gt; be avoided by obtaining device-specific function pointers for any commands that use a device or device-child object as their dispatchable object. Such function pointers &lt;strong&gt;can&lt;/strong&gt; be obtained with the command:</source>
          <target state="translated">为了支持具有包含不同 &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; 的硬件和软件集合的多个Vulkan实现的系统，vkGetInstanceProcAddr返回的功能指针&lt;strong&gt;可能&lt;/strong&gt;指向分派代码，该分派代码针对不同的 &lt;code&gt;VkDevice&lt;/code&gt; 对象（以及从中创建的对象）调用不同的实际实现。此内部调度的开销&lt;strong&gt;可以&lt;/strong&gt;通过对使用的装置或设备，子对象作为其分派对象的任何命令获取特定于设备的功能的指针来避免。&lt;strong&gt;可以&lt;/strong&gt;通过以下命令获取此类函数指针：</target>
        </trans-unit>
        <trans-unit id="c6e2634175a4dc089b48d2a1466c33732fa955c6" translate="yes" xml:space="preserve">
          <source>In this table, the following conventions are used:</source>
          <target state="translated">在本表中,使用了以下惯例:</target>
        </trans-unit>
        <trans-unit id="c9c8d2c9a6af8b07da14869e39d7e5e1844a6c1c" translate="yes" xml:space="preserve">
          <source>Information about the descriptor set layout is passed in an instance of the &lt;code&gt;VkDescriptorSetLayoutCreateInfo&lt;/code&gt; structure:</source>
          <target state="translated">有关描述符集布局的信息在 &lt;code&gt;VkDescriptorSetLayoutCreateInfo&lt;/code&gt; 结构的实例中传递：</target>
        </trans-unit>
        <trans-unit id="45fca81be8a6e01915813868a52d5a423c24224c" translate="yes" xml:space="preserve">
          <source>Information about the layout of the image subresource is returned in a &lt;code&gt;VkSubresourceLayout&lt;/code&gt; structure:</source>
          <target state="translated">有关图像子资源布局的信息在 &lt;code&gt;VkSubresourceLayout&lt;/code&gt; 结构中返回：</target>
        </trans-unit>
        <trans-unit id="8deed4efac89dc1076983f50d9dda54976214d59" translate="yes" xml:space="preserve">
          <source>Inside</source>
          <target state="translated">Inside</target>
        </trans-unit>
        <trans-unit id="13cd833744334ee496db672981052ffca5b15e53" translate="yes" xml:space="preserve">
          <source>Instances are represented by &lt;code&gt;VkInstance&lt;/code&gt; handles:</source>
          <target state="translated">实例由 &lt;code&gt;VkInstance&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="07bafcbf8e3c88748cd64d44a8336fceaa34634c" translate="yes" xml:space="preserve">
          <source>Integer formats &lt;strong&gt;can&lt;/strong&gt; only be converted to other integer formats with the same signedness.</source>
          <target state="translated">整数格式&lt;strong&gt;可以&lt;/strong&gt;仅被转换成其他格式的整数用相同的符号性。</target>
        </trans-unit>
        <trans-unit id="958696b9ed9d82ed397c31de385f2e526bade09f" translate="yes" xml:space="preserve">
          <source>It is an application error to call &lt;code&gt;vkMapMemory&lt;/code&gt; on a memory object that is already mapped.</source>
          <target state="translated">在已映射的内存对象上调用 &lt;code&gt;vkMapMemory&lt;/code&gt; 是应用程序错误。</target>
        </trans-unit>
        <trans-unit id="e542ca6dc31d6447047a27c0a75533ab68120d44" translate="yes" xml:space="preserve">
          <source>It is important for the application developer to become meticulously familiar with all of the mechanisms described in the chapter on &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;Synchronization and Cache Control&lt;/a&gt; as they are crucial to maintaining memory access ordering.</source>
          <target state="translated">对于应用程序开发人员来说，一定要熟悉&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;同步和缓存控制&lt;/a&gt;这一章中描述的所有机制，因为它们对于维护内存访问顺序至关重要。</target>
        </trans-unit>
        <trans-unit id="3029f703d75931fe83308f2d109490fa01906890" translate="yes" xml:space="preserve">
          <source>It is legal for a subpass to use no color or depth/stencil attachments, and rather use shader side effects such as image stores and atomics to produce an output. In this case, the subpass continues to use the &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;layers&lt;/code&gt; of the framebuffer to define the dimensions of the rendering area, and the &lt;code&gt;rasterizationSamples&lt;/code&gt; from each pipeline&amp;rsquo;s &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; to define the number of samples used in rasterization; however, if &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt;::&lt;code&gt;variableMultisampleRate&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, then all pipelines to be bound with a given zero-attachment subpass &lt;strong&gt;must&lt;/strong&gt; have the same value for &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;::&lt;code&gt;rasterizationSamples&lt;/code&gt;.</source>
          <target state="translated">子通道不使用颜色或深度/模板附件是合法的，而是使用诸如图像存储和原子之类的着色器副作用来产生输出。在这种情况下，subpass继续使用 &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; ，和 &lt;code&gt;layers&lt;/code&gt; 帧缓冲器来定义呈现区域的尺寸，并且 &lt;code&gt;rasterizationSamples&lt;/code&gt; 从每个管道的&lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;以限定在光栅化中使用的样本的数量;然而，如果&lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt; :: &lt;code&gt;variableMultisampleRate&lt;/code&gt; 是 &lt;code&gt;VK_FALSE&lt;/code&gt; ，那么所有的管道，以与给定的零附着subpass束缚&lt;strong&gt;绝&lt;/strong&gt;对&lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; :: &lt;code&gt;rasterizationSamples&lt;/code&gt; 具有相同的值。</target>
        </trans-unit>
        <trans-unit id="1b82ed9d94c1ada5d7e07e124a1f64adcbf1f82f" translate="yes" xml:space="preserve">
          <source>It is legal for an implementation to report a larger value in &lt;code&gt;VkMemoryRequirements&lt;/code&gt;::&lt;code&gt;size&lt;/code&gt; than would be obtained by adding together memory sizes for all &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; returned by &lt;code&gt;vkGetImageSparseMemoryRequirements&lt;/code&gt;. This &lt;strong&gt;may&lt;/strong&gt; occur when the hardware requires unused padding in the address range describing the resource.</source>
          <target state="translated">它是合法的实现报告中一个较大的值 &lt;code&gt;VkMemoryRequirements&lt;/code&gt; :: &lt;code&gt;size&lt;/code&gt; 比将由相加的内存大小为所有获得 &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; 通过返回 &lt;code&gt;vkGetImageSparseMemoryRequirements&lt;/code&gt; 。当硬件要求在描述资源的地址范围内使用未使用的填充时，&lt;strong&gt;可能&lt;/strong&gt;会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="63e2a26ecc7423e3bb35c40f316eb6d208a8297a" translate="yes" xml:space="preserve">
          <source>It is valid to set both &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; and &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt;. This allows a pipeline to be both a parent and possibly a child in a pipeline hierarchy. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;Pipeline Derivatives&lt;/a&gt; for more information.</source>
          <target state="translated">同时设置 &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; 和 &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; 是有效的。这允许管道在管道层次结构中既是父级又可能是子级。有关更多信息，请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;管道衍生工具&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="211ec93f0374b890f6c782dc446be9c882960bbc" translate="yes" xml:space="preserve">
          <source>Layout transitions that are performed via image memory barriers execute in their entirety in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, relative to other image layout transitions submitted to the same queue, including those performed by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;render passes&lt;/a&gt;. In effect there is an implicit execution dependency from each such layout transition to all layout transitions previously submitted to the same queue.</source>
          <target state="translated">相对于提交到同一队列的其他图像布局转换，包括通过&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;渲染&lt;/a&gt;遍历执行的布局，通过图像内存屏障执行的布局转换按&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;提交顺序&lt;/a&gt;完整执行。实际上，从每个此类布局转换到先前提交给同一队列的所有布局转换都存在隐式执行依赖性。</target>
        </trans-unit>
        <trans-unit id="a9ce522cb0a03624969154fd5e6aceacb8a3f714" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution 4.0 International License.</source>
          <target state="translated">采用知识共享署名4.0国际许可协议进行许可。</target>
        </trans-unit>
        <trans-unit id="c2a0c893019e3e3d26689e1a93c0a0ec482ff903" translate="yes" xml:space="preserve">
          <source>Logical devices are represented by &lt;code&gt;VkDevice&lt;/code&gt; handles:</source>
          <target state="translated">逻辑设备由 &lt;code&gt;VkDevice&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="e22d4798fb728af4e1e14a5af6f163593cf02105" translate="yes" xml:space="preserve">
          <source>Logical operations are controlled by the &lt;code&gt;logicOpEnable&lt;/code&gt; and &lt;code&gt;logicOp&lt;/code&gt; members of &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;. If &lt;code&gt;logicOpEnable&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, then a logical operation selected by &lt;code&gt;logicOp&lt;/code&gt; is applied between each color attachment and the fragment&amp;rsquo;s corresponding output value, and blending of all attachments is treated as if it were disabled. Any attachments using color formats for which logical operations are not supported simply pass through the color values unmodified. The logical operation is applied independently for each of the red, green, blue, and alpha components. The &lt;code&gt;logicOp&lt;/code&gt; is selected from the following operations:</source>
          <target state="translated">逻辑操作由 &lt;code&gt;logicOpEnable&lt;/code&gt; 和 &lt;code&gt;logicOp&lt;/code&gt; 成员&lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;控制&lt;/a&gt;。如果 &lt;code&gt;logicOpEnable&lt;/code&gt; 为 &lt;code&gt;VK_TRUE&lt;/code&gt; ，则在每个颜色附件和片段的相应输出值之间应用由 &lt;code&gt;logicOp&lt;/code&gt; 选择的逻辑操作，并且将所有附件的混合视为已禁用。使用不支持逻辑操作的颜色格式的任何附件都会简单地传递未修改的颜色值。逻辑操作分别应用于红色，绿色，蓝色和alpha分量。该 &lt;code&gt;logicOp&lt;/code&gt; 从以下操作中选择：</target>
        </trans-unit>
        <trans-unit id="088e0e8e8f032365941bd93c8844c6b3d25b44ce" translate="yes" xml:space="preserve">
          <source>Mapping non-coherent memory does not implicitly invalidate the mapped memory, and device writes that have not been invalidated &lt;strong&gt;must&lt;/strong&gt; be made visible before the host reads or overwrites them.</source>
          <target state="translated">映射非一致性内存不会隐式地使映射内存无效，并且在主机读取或覆盖它们之前，&lt;strong&gt;必须&lt;/strong&gt;使尚未无效的设备写操作可见。</target>
        </trans-unit>
        <trans-unit id="ea92b6b03a8c8ec828084da110ee37b8b1e229aa" translate="yes" xml:space="preserve">
          <source>Mapping of OpenGL to Vulkan filter modes</source>
          <target state="translated">OpenGL到Vulkan过滤模式的映射</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="d4040e7237109fa0399aceefd8371df89689f06c" translate="yes" xml:space="preserve">
          <source>Members of &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; that are not used in an update (as described above) are ignored.</source>
          <target state="translated">&lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; 的未在更新中使用的成员（如上所述）将被忽略。</target>
        </trans-unit>
        <trans-unit id="584c3f218214226a92f9fe0a54eb0fd316f70f2f" translate="yes" xml:space="preserve">
          <source>Memory &lt;strong&gt;can&lt;/strong&gt; be bound to sparse image blocks of &lt;code&gt;VkImage&lt;/code&gt; objects created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;使用以下结构将内存绑定到使用 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 标志创建的 &lt;code&gt;VkImage&lt;/code&gt; 对象的稀疏图像块：</target>
        </trans-unit>
        <trans-unit id="6556bcdcbaccd429b8497e030af13546ac4a42a4" translate="yes" xml:space="preserve">
          <source>Memory in Vulkan &lt;strong&gt;can&lt;/strong&gt; be accessed from within shader invocations and via some fixed-function stages of the pipeline. The &lt;em&gt;access type&lt;/em&gt; is a function of the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets&quot;&gt;descriptor type&lt;/a&gt; used, or how a fixed-function stage accesses memory. Each access type corresponds to a bit flag in &lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt;.</source>
          <target state="translated">Vulkan中的内存&lt;strong&gt;可以&lt;/strong&gt;从着色器调用中以及通过管道的某些固定功能阶段进行访问。的&lt;em&gt;接入类型&lt;/em&gt;是的函数&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets&quot;&gt;描述符类型&lt;/a&gt;使用，或者如何固定功能阶段存取存储器。每种访问类型都对应于&lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits中&lt;/a&gt;的位标志。</target>
        </trans-unit>
        <trans-unit id="74e7bbd2e6d083718e31c1d69bd679284fff4db7" translate="yes" xml:space="preserve">
          <source>Memory is bound to &lt;code&gt;VkBuffer&lt;/code&gt; objects created with the &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">使用以下结构将内存绑定到使用 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 标志创建的 &lt;code&gt;VkBuffer&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="e55e44500b7e8d75dce7c9cf5be86d00e2541fa2" translate="yes" xml:space="preserve">
          <source>Memory is bound to opaque regions of &lt;code&gt;VkImage&lt;/code&gt; objects created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">使用以下结构将内存绑定到使用 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 标志创建的 &lt;code&gt;VkImage&lt;/code&gt; 对象的不透明区域：</target>
        </trans-unit>
        <trans-unit id="39f516e96cf5dd8a70936206ff781f81265b1094" translate="yes" xml:space="preserve">
          <source>Memory objects are represented by &lt;code&gt;VkDeviceMemory&lt;/code&gt; handles:</source>
          <target state="translated">内存对象由 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="6bcab1625fbddfba636187b4a8dcb0be1460eaf5" translate="yes" xml:space="preserve">
          <source>Memory types are ordered in the list such that X is assigned a lesser &lt;code&gt;memoryTypeIndex&lt;/code&gt; than Y if (X &amp;le; Y) &amp;and; &amp;not; (Y &amp;le; X) according to the preorder. Note that the list of all allowed memory property flag combinations above satisfies this preorder, but other orders would as well. The goal of this ordering is to enable applications to use a simple search loop in selecting the proper memory type, along the lines of:</source>
          <target state="translated">内存类型在列表中排序，如果根据预 &lt;code&gt;memoryTypeIndex&lt;/code&gt; ，如果（X&amp;le;Y）&amp;not;&amp;not;（Y&amp;le;X），则为 X分配比Y 小的memoryTypeIndex。请注意，上面所有允许的内存属性标志组合的列表都满足此预排序，但其他命令也将满足。该排序的目的是使应用程序能够使用简单的搜索循环来选择适当的内存类型，方法如下：</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="9fb598360964c636bfba410a029c41e6b74d6ad1" translate="yes" xml:space="preserve">
          <source>Most Vulkan commands operate on a single object, or there is a sole object that is being created or manipulated. When an allocation uses an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; or &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt;, the allocation is scoped to the object being created or manipulated.</source>
          <target state="translated">大多数Vulkan命令对单个对象进行操作，或者只有一个对象正在创建或操纵。当分配使用 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; 或 &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; 的分配范围时，该分配的作用域是要创建或操作的对象。</target>
        </trans-unit>
        <trans-unit id="de2a91e902f73caf1a035d332dfb2473c3e864dc" translate="yes" xml:space="preserve">
          <source>Most Vulkan handle types, such as &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, are non-dispatchable.</source>
          <target state="translated">大多数Vulkan句柄类型（例如&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;）都是不可分派的。</target>
        </trans-unit>
        <trans-unit id="5ffd69dabb1b2e1c3dc54acbdbc711cd9064a869" translate="yes" xml:space="preserve">
          <source>Moving to the next subpass automatically performs any multisample resolve operations in the subpass being ended. End-of-subpass multisample resolves are treated as color attachment writes for the purposes of synchronization. That is, they are considered to execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage and their writes are synchronized with &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;. Synchronization between rendering within a subpass and any resolve operations at the end of the subpass occurs automatically, without need for explicit dependencies or pipeline barriers. However, if the resolve attachment is also used in a different subpass, an explicit dependency is needed.</source>
          <target state="translated">移至下一个子通道会自动执行要结束的子通道中的所有多样本解析操作。子通结束多样本解析被视为颜色附件写入，以进行同步。也就是说，它们被视为在 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; 流水线阶段执行，并且其写入与 &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; 同步。子通道内的渲染与子通道末尾的任何解析操作之间的同步自动发生，而无需显式的依赖关系或管道障碍。但是，如果在其他子过程中也使用了解析附件，则需要显式依赖。</target>
        </trans-unit>
        <trans-unit id="375f8fc6ea9ee0181fac651e1cd70252a35dca5b" translate="yes" xml:space="preserve">
          <source>Multiple aspects are returned for depth/stencil images that are implemented as separate planes by the implementation. The depth and stencil data planes each have unique &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; data.</source>
          <target state="translated">返回深度/模板图像的多个方面，这些深度/模板图像由实现方式实现为单独的平面。深度和模板数据平面每个都有唯一的 &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; 数据。</target>
        </trans-unit>
        <trans-unit id="1957527a6f5f2b2cab857137e1f1ad146b105ee3" translate="yes" xml:space="preserve">
          <source>Multiple logical devices &lt;strong&gt;can&lt;/strong&gt; be created from the same physical device. Logical device creation &lt;strong&gt;may&lt;/strong&gt; fail due to lack of device-specific resources (in addition to the other errors). If that occurs, &lt;code&gt;vkCreateDevice&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;从同一物理设备创建多个逻辑设备。由于缺少特定于设备的资源（除了其他错误），逻辑设备创建&lt;strong&gt;可能会&lt;/strong&gt;失败。如果发生这种情况， &lt;code&gt;vkCreateDevice&lt;/code&gt; 将返回 &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="edc73e41a0147fbaf61d930aeee9419e9909b970" translate="yes" xml:space="preserve">
          <source>No cross-references are available</source>
          <target state="translated">没有交叉参考资料</target>
        </trans-unit>
        <trans-unit id="4072aa7bf6f2ea46b2dc24ad89b9a74423c8b2d5" translate="yes" xml:space="preserve">
          <source>No format conversion is supported between depth/stencil images. The formats &lt;strong&gt;must&lt;/strong&gt; match.</source>
          <target state="translated">深度/模板图像之间不支持格式转换。格式&lt;strong&gt;必须&lt;/strong&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="31d5650a41f96c9dfbc78cc8a8785c8c336b6319" translate="yes" xml:space="preserve">
          <source>No memory barriers are needed between &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; and preceding or subsequent draw or attachment clear commands in the same subpass.</source>
          <target state="translated">在同一子遍中的 &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; 与之前或之后的绘制或附件清除命令之间，不需要任何内存屏障。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="a71ee7b038fc978127bca3eb9d094ef88d1d3de3" translate="yes" xml:space="preserve">
          <source>Note that using a &lt;code&gt;maxLod&lt;/code&gt; of zero would cause &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;magnification&lt;/a&gt; to always be performed, and the &lt;code&gt;magFilter&lt;/code&gt; to always be used. This is valid, just not an exact match for OpenGL behavior. Clamping the maximum LOD to 0.25 allows the &amp;lambda; value to be non-zero and minification to be performed, while still always rounding down to the base level. If the &lt;code&gt;minFilter&lt;/code&gt; and &lt;code&gt;magFilter&lt;/code&gt; are equal, then using a &lt;code&gt;maxLod&lt;/code&gt; of zero also works.</source>
          <target state="translated">请注意，使用 &lt;code&gt;maxLod&lt;/code&gt; 为零将导致始终执行&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;放大&lt;/a&gt;，并且始终使用 &lt;code&gt;magFilter&lt;/code&gt; 。这是有效的，只是与OpenGL行为不完全匹配。将最大LOD钳位到0.25可以使&amp;lambda;值不为零，并且可以执行最小化，同时仍始终舍入到基本水平。如果 &lt;code&gt;minFilter&lt;/code&gt; 和 &lt;code&gt;magFilter&lt;/code&gt; 相等，则也可以使用 &lt;code&gt;maxLod&lt;/code&gt; 为零。</target>
        </trans-unit>
        <trans-unit id="7c1dc45f2b802c8cb8e237b3e14cecc219666107" translate="yes" xml:space="preserve">
          <source>Note: Some implementations will default to shader state if this member does not match.</source>
          <target state="translated">注意:如果该成员不匹配,一些实现将默认为shader状态。</target>
        </trans-unit>
        <trans-unit id="25b0c518c1db54503a1eda0c84458e75867bb5fa" translate="yes" xml:space="preserve">
          <source>Object Handles</source>
          <target state="translated">对象句柄</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="9d928d1908ece5763519358c1fd3c69933e1b4bf" translate="yes" xml:space="preserve">
          <source>Once a pipeline has been created, it &lt;strong&gt;can&lt;/strong&gt; be bound to the command buffer using the command:</source>
          <target state="translated">创建管道后，&lt;strong&gt;可以&lt;/strong&gt;使用以下命令将其绑定到命令缓冲区：</target>
        </trans-unit>
        <trans-unit id="2a1208fdc5f4c6cb373dbd49c2d4e1842477ca9e" translate="yes" xml:space="preserve">
          <source>Once a query is ended the query &lt;strong&gt;must&lt;/strong&gt; finish in finite time, unless the state of the query is changed using other commands, e.g. by issuing a reset of the query.</source>
          <target state="translated">查询结束后，查询&lt;strong&gt;必须&lt;/strong&gt;在有限时间内结束，除非使用其他命令（例如通过发出查询重置）更改查询的状态。</target>
        </trans-unit>
        <trans-unit id="fff73ba35611844509e435e22a9813a71dbc2084" translate="yes" xml:space="preserve">
          <source>Once a shader module has been created, any entry points it contains &lt;strong&gt;can&lt;/strong&gt; be used in pipeline shader stages as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-compute&quot;&gt;Compute Pipelines&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-graphics&quot;&gt;Graphics Pipelines&lt;/a&gt;.</source>
          <target state="translated">创建着色器模块后，它包含的所有入口点&lt;strong&gt;都&lt;/strong&gt;可以在管道着色器阶段使用，如&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-compute&quot;&gt;计算管道&lt;/a&gt;和&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-graphics&quot;&gt;图形管道&amp;rdquo;中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09186b594997f20c440e6c606b9ce19b5a68d0d9" translate="yes" xml:space="preserve">
          <source>Once allocated, descriptor sets &lt;strong&gt;can&lt;/strong&gt; be updated with a combination of write and copy operations. To update descriptor sets, call:</source>
          <target state="translated">分配后，描述符集&lt;strong&gt;可以&lt;/strong&gt;使用写和复制操作的组合进行更新。要更新描述符集，请调用：</target>
        </trans-unit>
        <trans-unit id="a3ebfd88cd8fc0e9ef55b8c531fb6c472e792a53" translate="yes" xml:space="preserve">
          <source>Once bound, a descriptor set affects rendering of subsequent graphics or compute commands in the command buffer until a different set is bound to the same set number, or else until the set is disturbed as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-compatibility&quot;&gt;Pipeline Layout Compatibility&lt;/a&gt;.</source>
          <target state="translated">一旦绑定，描述符集将影响命令缓冲区中后续图形或计算命令的渲染，直到将不同的集绑定到相同的集编号，或者直到该集受到干扰（如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-compatibility&quot;&gt;管线布局兼容性中&lt;/a&gt;所述）为止。</target>
        </trans-unit>
        <trans-unit id="847966dc1bdc1c6e8ab07e943882489732ba20cf" translate="yes" xml:space="preserve">
          <source>Once bound, a pipeline binding affects subsequent graphics or compute commands in the command buffer until a different pipeline is bound to the bind point. The pipeline bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; controls the behavior of &lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt; and &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;. The pipeline bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; controls the behavior of &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;, and &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;. No other commands are affected by the pipeline state.</source>
          <target state="translated">绑定后，管线绑定会影响命令缓冲区中的后续图形或计算命令，直到将不同的管线绑定到绑定点为止。绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 的管道控制&lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;和&lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;的行为。绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 的管道控制&lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;，&lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;，&lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;和&lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect的行为&lt;/a&gt;。管道状态不会影响其他命令。</target>
        </trans-unit>
        <trans-unit id="4965c4b40c00711ccc4aba8a055d515228540865" translate="yes" xml:space="preserve">
          <source>Once created, a pipeline cache &lt;strong&gt;can&lt;/strong&gt; be passed to the &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; and &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; commands. If the pipeline cache passed into these commands is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, the implementation will query it for possible reuse opportunities and update it with new content. The use of the pipeline cache object in these commands is internally synchronized, and the same pipeline cache object &lt;strong&gt;can&lt;/strong&gt; be used in multiple threads simultaneously.</source>
          <target state="translated">创建管道缓存后，&lt;strong&gt;可以&lt;/strong&gt;将其传递给 &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; 和 &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; 命令。如果传递给这些命令的管道缓存不是&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;，则实现将向其查询可能的重用机会并使用新内容对其进行更新。这些命令中的管道缓存对象的使用在内部是同步的，并且同一管道缓存对象&lt;strong&gt;可以&lt;/strong&gt;同时在多个线程中使用。</target>
        </trans-unit>
        <trans-unit id="2ea5ba6c3e4f3c8706ba3083086e2c2921654543" translate="yes" xml:space="preserve">
          <source>Once the contents of an attachment become undefined in subpass &lt;strong&gt;S&lt;/strong&gt;, they remain undefined for subpasses in subpass dependency chains starting with subpass &lt;strong&gt;S&lt;/strong&gt; until they are written again. However, they remain valid for subpasses in other subpass dependency chains starting with subpass &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; if those subpasses use or preserve the attachment.</source>
          <target state="translated">一旦附件的内容在子通道&lt;strong&gt;S中&lt;/strong&gt;变得不确定，则对于子通道依赖链中从子通道&lt;strong&gt;S&lt;/strong&gt;开始的子通道，它们的内容仍未定义，直到再次写入。但是，如果这些子通道使用或保留附件，则它们对于从子通道&lt;strong&gt;S &lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt;开始的其他子通道依赖项链中的子通道仍然有效。</target>
        </trans-unit>
        <trans-unit id="fbd2d6f3d71e555a3df68816f77996beae4536c2" translate="yes" xml:space="preserve">
          <source>Once the orientation of triangles is determined, they are culled according to the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;cullMode&lt;/code&gt; property of the currently active pipeline. Possible values are:</source>
          <target state="translated">确定三角形的方向后，将根据当前活动管道的&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;cullMode&lt;/code&gt; 属性将其选中。可能的值为：</target>
        </trans-unit>
        <trans-unit id="19e278dc971c80ae5679ac5fc2ed32eade32ae2d" translate="yes" xml:space="preserve">
          <source>Once the source and destination blend factors have been selected, they along with the source and destination components are passed to the blending operations. RGB and alpha components &lt;strong&gt;can&lt;/strong&gt; use different operations. Possible values of &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt;, specifying the operations, are:</source>
          <target state="translated">一旦选择了源和目标混合因子，它们就会与源和目标组件一起传递到混合操作。RGB和alpha组件&lt;strong&gt;可以&lt;/strong&gt;使用不同的操作。指定操作的&lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp的&lt;/a&gt;可能值为：</target>
        </trans-unit>
        <trans-unit id="cdb181b1917416479c4abab65f39edb8bbdafa17" translate="yes" xml:space="preserve">
          <source>Only one of &lt;code&gt;pImageInfo&lt;/code&gt;, &lt;code&gt;pBufferInfo&lt;/code&gt;, or &lt;code&gt;pTexelBufferView&lt;/code&gt; members is used according to the descriptor type specified in the &lt;code&gt;descriptorType&lt;/code&gt; member of the containing &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; structure, as specified below.</source>
          <target state="translated">根据包含 &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; 结构的描述符类型成员中指定的 &lt;code&gt;descriptorType&lt;/code&gt; 符类型，仅使用 &lt;code&gt;pImageInfo&lt;/code&gt; ， &lt;code&gt;pBufferInfo&lt;/code&gt; 或 &lt;code&gt;pTexelBufferView&lt;/code&gt; 成员之一，如下所示。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="5003bfd94c3da2ddd802162c03d7700d6fbe5e7d" translate="yes" xml:space="preserve">
          <source>Otherwise an implementation will allocate memory through an alternative mechanism that is unspecified.</source>
          <target state="translated">否则,一个实现将通过一个未指定的替代机制来分配内存。</target>
        </trans-unit>
        <trans-unit id="4b490826635035295b80d1095244d3d154d5ba32" translate="yes" xml:space="preserve">
          <source>Otherwise, the counter is incremented by zero or more.</source>
          <target state="translated">否则,计数器将以零或更多的方式递增。</target>
        </trans-unit>
        <trans-unit id="9df574100a2071d4e544e88390c44053b7b4fc93" translate="yes" xml:space="preserve">
          <source>Otherwise, the line width is set by calling &lt;code&gt;vkCmdSetLineWidth&lt;/code&gt;:</source>
          <target state="translated">否则，通过调用 &lt;code&gt;vkCmdSetLineWidth&lt;/code&gt; 设置线宽：</target>
        </trans-unit>
        <trans-unit id="6071415d975ac5454c7882e8ba8d2ce7b3a385c1" translate="yes" xml:space="preserve">
          <source>Otherwise, to dynamically set and change the blend constant, call:</source>
          <target state="translated">否则,要动态地设置和更改混合常数,请调用。</target>
        </trans-unit>
        <trans-unit id="4a925b0f4f83525d4f42d82a3f2aa2d5ed2ae603" translate="yes" xml:space="preserve">
          <source>Out of memory errors do not damage any currently existing Vulkan objects. Objects that have already been successfully created &lt;strong&gt;can&lt;/strong&gt; still be used by the application.</source>
          <target state="translated">内存不足错误不会损坏任何当前存在的Vulkan对象。已经被成功创建的对象&lt;strong&gt;可以&lt;/strong&gt;仍然由应用程序使用。</target>
        </trans-unit>
        <trans-unit id="404b141df9bcae25c9956c2c2d089393661f836b" translate="yes" xml:space="preserve">
          <source>Out-of-bounds atomics &lt;strong&gt;may&lt;/strong&gt; modify values within the memory range(s) bound to the buffer, but &lt;strong&gt;must&lt;/strong&gt; not modify any other memory, and return an undefined value.</source>
          <target state="translated">外的边界原子公司&lt;strong&gt;可&lt;/strong&gt;修改存储器范围（S）结合到缓冲器内的值，但&lt;strong&gt;必须&lt;/strong&gt;不修改任何其它存储器，并且返回一个未定义的值。</target>
        </trans-unit>
        <trans-unit id="d8876391b621655e779ba6e4af0e1bcf6a09ddc6" translate="yes" xml:space="preserve">
          <source>Out-of-bounds buffer loads will return any of the following values:</source>
          <target state="translated">越界缓冲区加载将返回以下任何一个值。</target>
        </trans-unit>
        <trans-unit id="35c4eb67b67e136b99bae8c66e353bcc9499cfd1" translate="yes" xml:space="preserve">
          <source>Out-of-bounds writes &lt;strong&gt;may&lt;/strong&gt; modify values within the memory range(s) bound to the buffer, but &lt;strong&gt;must&lt;/strong&gt; not modify any other memory.</source>
          <target state="translated">外的边界的写入&lt;strong&gt;可&lt;/strong&gt;修改存储器范围（S）结合到缓冲器内的值，但&lt;strong&gt;必须&lt;/strong&gt;不修改任何其它存储器。</target>
        </trans-unit>
        <trans-unit id="b7efb76a74598f9f246f303d790fc5073191889d" translate="yes" xml:space="preserve">
          <source>Outside</source>
          <target state="translated">Outside</target>
        </trans-unit>
        <trans-unit id="98f005cca3748f1d422239557995a36c39f9750c" translate="yes" xml:space="preserve">
          <source>PFN_vkAllocationFunction - Application-defined memory allocation function</source>
          <target state="translated">PFN_vkAllocationFunction-应用程序定义的内存分配功能。</target>
        </trans-unit>
        <trans-unit id="cf99e588bfeb565e4ad2afb77a88fa6fbdd8d077" translate="yes" xml:space="preserve">
          <source>PFN_vkAllocationFunction(3)</source>
          <target state="translated">PFN_vkAllocationFunction(3)</target>
        </trans-unit>
        <trans-unit id="a96c98dbb5073e4075c5489c7a0e16679ca6fc02" translate="yes" xml:space="preserve">
          <source>PFN_vkFreeFunction - Application-defined memory free function</source>
          <target state="translated">PFN_vkFreeFunction-应用程序定义的内存释放功能。</target>
        </trans-unit>
        <trans-unit id="c223ad0cad2796c92fa438b14b325e78c8efa0f1" translate="yes" xml:space="preserve">
          <source>PFN_vkFreeFunction(3)</source>
          <target state="translated">PFN_vkFreeFunction(3)</target>
        </trans-unit>
        <trans-unit id="0dc17b74dddc957f332c25a9e302ca1ad2a82db5" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalAllocationNotification - Application-defined memory allocation notification function</source>
          <target state="translated">PFN_vkInternalAllocationNotification-应用程序定义的内存分配通知功能。</target>
        </trans-unit>
        <trans-unit id="be173227812acd4badbec2a976d3aa7ffd67a366" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalAllocationNotification(3)</source>
          <target state="translated">PFN_vkInternalAllocationNotification(3)</target>
        </trans-unit>
        <trans-unit id="0a833a79f8589e98cb93eb4e8243bed22f0103f0" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalFreeNotification - Application-defined memory free notification function</source>
          <target state="translated">PFN_vkInternalFreeNotification-应用程序定义的内存释放通知功能。</target>
        </trans-unit>
        <trans-unit id="b167cabb347cf03fe7f776eb6caed1cbb80222f5" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalFreeNotification(3)</source>
          <target state="translated">PFN_vkInternalFreeNotification(3)</target>
        </trans-unit>
        <trans-unit id="3933bdd6b222083665e4f9258512b4a2d65e82e4" translate="yes" xml:space="preserve">
          <source>PFN_vkReallocationFunction - Application-defined memory reallocation function</source>
          <target state="translated">PFN_vkReallocationFunction-应用程序定义的内存重新分配功能。</target>
        </trans-unit>
        <trans-unit id="c4dcf233c2b3204f177d33e50ae7e818f3564a3c" translate="yes" xml:space="preserve">
          <source>PFN_vkReallocationFunction(3)</source>
          <target state="translated">PFN_vkReallocationFunction(3)</target>
        </trans-unit>
        <trans-unit id="c21d38d270b0abd492e0636618983996c7ce636c" translate="yes" xml:space="preserve">
          <source>PFN_vkVoidFunction - Dummy function pointer type returned by queries</source>
          <target state="translated">PFN_vkVoidFunction-查询返回的虚函数指针类型。</target>
        </trans-unit>
        <trans-unit id="f881db55849ec572c6df800e7e9c3d68dcdb53fe" translate="yes" xml:space="preserve">
          <source>PFN_vkVoidFunction(3)</source>
          <target state="translated">PFN_vkVoidFunction(3)</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="c2dc50c9ba7624d2e0385fba982c4c65b155ad77" translate="yes" xml:space="preserve">
          <source>Performance-critical commands generally do not have return codes. If a run time error occurs in such commands, the implementation will defer reporting the error until a specified point. For commands that record into command buffers (&lt;code&gt;vkCmd*&lt;/code&gt;) run time errors are reported by &lt;code&gt;vkEndCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">关键性能命令通常没有返回码。如果在此类命令中发生运行时错误，则实现将推迟报告错误，直到指定点为止。对于记录到命令缓冲区（ &lt;code&gt;vkCmd*&lt;/code&gt; ）中的命令，运行时错误由 &lt;code&gt;vkEndCommandBuffer&lt;/code&gt; 报告。</target>
        </trans-unit>
        <trans-unit id="89d1eb1bb0ffac331d140d5ab0fb09530b43d2f6" translate="yes" xml:space="preserve">
          <source>Physical devices are represented by &lt;code&gt;VkPhysicalDevice&lt;/code&gt; handles:</source>
          <target state="translated">物理设备由 &lt;code&gt;VkPhysicalDevice&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="dcf6901798d7a92cc7c2fd7c970d73630d8a5707" translate="yes" xml:space="preserve">
          <source>Pipeline Type</source>
          <target state="translated">管道类型</target>
        </trans-unit>
        <trans-unit id="736e52cb366c0485215c5ce5b04d323e5b685380" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects &lt;strong&gt;can&lt;/strong&gt; be merged using the command:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;使用以下命令合并管道缓存对象：</target>
        </trans-unit>
        <trans-unit id="533d75593ccf045730391f172b61a9a4c82a7a4d" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects allow the result of pipeline construction to be reused between pipelines and between runs of an application. Reuse between pipelines is achieved by passing the same pipeline cache object when creating multiple related pipelines. Reuse across runs of an application is achieved by retrieving pipeline cache contents in one run of an application, saving the contents, and using them to preinitialize a pipeline cache on a subsequent run. The contents of the pipeline cache objects are managed by the implementation. Applications &lt;strong&gt;can&lt;/strong&gt; manage the host memory consumed by a pipeline cache object and control the amount of data retrieved from a pipeline cache object.</source>
          <target state="translated">管道缓存对象允许在管道之间以及应用程序运行之间重用管道构建的结果。通过在创建多个相关管道时传递相同的管道缓存对象来实现管道之间的重用。通过在应用程序的一次运行中检索管道缓存内容，保存内容并在后续运行中使用它们来预先初始化管道缓存，可以实现应用程序各次运行之间的重用。管道缓存对象的内容由实现管理。应用程序&lt;strong&gt;可以&lt;/strong&gt;管理管道缓存对象占用的主机内存，并控制从管道缓存对象检索的数据量。</target>
        </trans-unit>
        <trans-unit id="751ae5b56ae15ee44718f40db7f933ce7a80a0f4" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects are represented by &lt;code&gt;VkPipelineCache&lt;/code&gt; handles:</source>
          <target state="translated">管道缓存对象由 &lt;code&gt;VkPipelineCache&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="c94f9ab768f70b545f69ac3ebc7b291c1682b364" translate="yes" xml:space="preserve">
          <source>Pipeline layout objects are represented by &lt;code&gt;VkPipelineLayout&lt;/code&gt; handles:</source>
          <target state="translated">管道布局对象由 &lt;code&gt;VkPipelineLayout&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="aa28ec835f4baaeef20fd0f5807c5bb12f0e3ba7" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;::&lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;stencilLoadOp&lt;/code&gt;, specifying how the contents of the attachment are treated, are:</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; :: &lt;code&gt;loadOp&lt;/code&gt; 和 &lt;code&gt;stencilLoadOp&lt;/code&gt; 的可能值（指定如何处理附件的内容）为：</target>
        </trans-unit>
        <trans-unit id="48e2175d98f8146cbbd1ccb29ea534d0f10836f1" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;::&lt;code&gt;storeOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt;, specifying how the contents of the attachment are treated, are:</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; :: &lt;code&gt;storeOp&lt;/code&gt; 和 &lt;code&gt;stencilStoreOp&lt;/code&gt; 的可能值（指定如何处理附件的内容）为：</target>
        </trans-unit>
        <trans-unit id="872dba75ec83312d85258077f0407aba893ab1f7" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt;::&lt;code&gt;flags&lt;/code&gt;, specifying the command buffer level, are:</source>
          <target state="translated">指定命令缓冲区级别的&lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt; :: &lt;code&gt;flags&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="15d80b579dd6b29f9d09f2e4a542f4bee53c216b" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;::&lt;code&gt;imageType&lt;/code&gt;, specifying the basic dimensionality of an image, are:</source>
          <target state="translated">指定图像基本尺寸的&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; :: &lt;code&gt;imageType&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="e658478121399c9cee4d22776fdd24bbaad5f8dd" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;::&lt;code&gt;tiling&lt;/code&gt;, specifying the tiling arrangement of data elements in an image, are:</source>
          <target state="translated">指定图像中数据元素的排列方式的&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; :: &lt;code&gt;tiling&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="3472adc60019ec88bdedc899b48d34302ffb427a" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;::&lt;code&gt;queryType&lt;/code&gt;, specifying the type of queries managed by the pool, are:</source>
          <target state="translated">指定由池管理的查询类型的&lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt; :: &lt;code&gt;queryType&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="325dc7d4f369a127c6a18ddba1ceec92b4c7361c" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;borderColor&lt;/code&gt;, specifying the border color used for texture lookups, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;borderColor&lt;/code&gt; ，可能指定用于纹理查找的边框颜色，可能的值为：</target>
        </trans-unit>
        <trans-unit id="67cf4b87b3d0ebae4dcb435fd2d6d4f1a069f4b9" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt;::&lt;code&gt;inputRate&lt;/code&gt;, specifying the rate at which vertex attributes are pulled from buffers, are:</source>
          <target state="translated">&lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt; :: &lt;code&gt;inputRate&lt;/code&gt; 的可能值（指定从缓冲区提取顶点属性的速率）为：</target>
        </trans-unit>
        <trans-unit id="0ce794c0d55efc3a17e309868ce7fe2076ed9af3" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;::&lt;code&gt;contents&lt;/code&gt;, specifying how the commands in the first subpass will be provided, are:</source>
          <target state="translated">&lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt; :: &lt;code&gt;contents&lt;/code&gt; 的可能值（指定如何提供第一个子阶段中的命令）为：</target>
        </trans-unit>
        <trans-unit id="464de956a38bdfc6a97d76b20032cd5973274948" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;::&lt;code&gt;indexType&lt;/code&gt;, specifying the size of indices, are:</source>
          <target state="translated">指定索引大小的&lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; :: &lt;code&gt;indexType&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="823e3f19189a88816b4274a732a6a554c432e8fa" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;::&lt;code&gt;pipelineBindPoint&lt;/code&gt;, specifying the bind point of a pipeline object, are:</source>
          <target state="translated">的可能值&lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt; :: &lt;code&gt;pipelineBindPoint&lt;/code&gt; ，指定一个管道对象的绑定点，分别是：</target>
        </trans-unit>
        <trans-unit id="80870cec54d70e2b07c3137f824ea53ea0d00781" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;code&gt;minImageTransferGranularity&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;minImageTransferGranularity&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="e8ff2e2c8d74cc92b1471f53f25a99f62645770c" translate="yes" xml:space="preserve">
          <source>Possible values of VkStencilOpState::&lt;code&gt;compareOp&lt;/code&gt;, specifying the stencil comparison function, are:</source>
          <target state="translated">指定模板比较功能的VkStencilOpState :: &lt;code&gt;compareOp&lt;/code&gt; 的可能值为：</target>
        </trans-unit>
        <trans-unit id="98208b8dbde05437fcf5398427669bfb3e1bdce2" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;polygonMode&lt;/code&gt; property of the currently active pipeline, specifying the method of rasterization for polygons, are:</source>
          <target state="translated">用于指定多边形栅格化方法的当前活动管道的&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;polygonMode&lt;/code&gt; 属性的可能值为：</target>
        </trans-unit>
        <trans-unit id="90062fcf92a6566ebe8df3b9a5855285cf8c0ae0" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;addressMode&lt;/code&gt;* parameters, specifying the behavior of sampling with coordinates outside the range [0,1] for the respective u, v, or w coordinate as defined in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-wrapping-operation&quot;&gt;Wrapping Operation&lt;/a&gt; section, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;addressMode&lt;/code&gt; *参数的可能值（用于指定&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-wrapping-operation&quot;&gt;包裹操作&amp;rdquo;&lt;/a&gt;部分中定义的u，v或w坐标的坐标范围[0,1]以外的采样行为）是：</target>
        </trans-unit>
        <trans-unit id="ffb26ba9fc0a5b9add232f85cd09cf3d9b9737c3" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;magFilter&lt;/code&gt; and &lt;code&gt;minFilter&lt;/code&gt; parameters, specifying filters used for texture lookups, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;magFilter&lt;/code&gt; 和 &lt;code&gt;minFilter&lt;/code&gt; 参数的可能值（指定用于纹理查找的过滤器）为：</target>
        </trans-unit>
        <trans-unit id="519e9494c43a124109cd42ea56657536ec94fe18" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;mipmapMode&lt;/code&gt;, specifying the mipmap mode used for texture lookups, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;mipmapMode&lt;/code&gt; 的可能值（指定用于纹理查找的mipmap模式）为：</target>
        </trans-unit>
        <trans-unit id="20a01be1a06626e33b548f708e1af96f08c32dfb" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;code&gt;failOp&lt;/code&gt;, &lt;code&gt;passOp&lt;/code&gt;, and &lt;code&gt;depthFailOp&lt;/code&gt; members of &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;, specifying what happens to the stored stencil value if this or certain subsequent tests fail or pass, are:</source>
          <target state="translated">在可能的值 &lt;code&gt;failOp&lt;/code&gt; ， &lt;code&gt;passOp&lt;/code&gt; 和 &lt;code&gt;depthFailOp&lt;/code&gt; 成员&lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;，规定如果某些或随后的测试中失败或传球，都发生了什么存储模板值：</target>
        </trans-unit>
        <trans-unit id="e901d9074d46f1041fd55dd4a04ce03fea167038" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;code&gt;flags&lt;/code&gt; member of &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; and &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, specifying how a pipeline is created, are:</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;和&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;的 &lt;code&gt;flags&lt;/code&gt; 成员（指定如何创建管道）的可能值为：</target>
        </trans-unit>
        <trans-unit id="dabbf4a23c20846772bb2c3a8a1be6df779b1396" translate="yes" xml:space="preserve">
          <source>Possible values of the members of &lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;, specifying the component values placed in each component of the output vector, are:</source>
          <target state="translated">&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;的成员的可能值（指定放置在输出向量的每个分量中的分量值）是：</target>
        </trans-unit>
        <trans-unit id="8e97d3876c89c0193ae5aa1071665ab860982909" translate="yes" xml:space="preserve">
          <source>Possible values of the second group of four bytes in the header returned by &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;, encoding the pipeline cache version, are:</source>
          <target state="translated">由&lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;返回的标头中的第二组四个字节的可能值是，对管道缓存版本进行了编码：</target>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="6494e5e67ef2e1017abc99786e54979d0531a8e9" translate="yes" xml:space="preserve">
          <source>Push constants represent a high speed path to modify constant data in pipelines that is expected to outperform memory-backed resource updates.</source>
          <target state="translated">推送常量代表了一种在管道中修改常量数据的高速路径,其性能有望优于内存支持的资源更新。</target>
        </trans-unit>
        <trans-unit id="e6932d084c70b708967c0a9ce888626651eed1c5" translate="yes" xml:space="preserve">
          <source>Queries are managed using &lt;em&gt;query pool&lt;/em&gt; objects. Each query pool is a collection of a specific number of queries of a particular type.</source>
          <target state="translated">使用&lt;em&gt;查询池&lt;/em&gt;对象管理&lt;em&gt;查询&lt;/em&gt;。每个查询池都是特定类型的特定数量查询的集合。</target>
        </trans-unit>
        <trans-unit id="405eac455e30ced015c459b7bd40e581c63c254c" translate="yes" xml:space="preserve">
          <source>Query pools are represented by &lt;code&gt;VkQueryPool&lt;/code&gt; handles:</source>
          <target state="translated">查询池由 &lt;code&gt;VkQueryPool&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="42f1973dc7dedafa2dad2b6b3beddd4e6d4d91cd" translate="yes" xml:space="preserve">
          <source>Queues are represented by &lt;code&gt;VkQueue&lt;/code&gt; handles:</source>
          <target state="translated">队列由 &lt;code&gt;VkQueue&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="a2023e982b3996bdcebed6e8b177c4fae57b60f1" translate="yes" xml:space="preserve">
          <source>Queues supporting graphics and/or compute operations &lt;strong&gt;must&lt;/strong&gt; report (1,1,1) in &lt;code&gt;minImageTransferGranularity&lt;/code&gt;, meaning that there are no additional restrictions on the granularity of image transfer operations for these queues. Other queues supporting image transfer operations are only &lt;strong&gt;required&lt;/strong&gt; to support whole mip level transfers, thus &lt;code&gt;minImageTransferGranularity&lt;/code&gt; for queues belonging to such queue families &lt;strong&gt;may&lt;/strong&gt; be (0,0,0).</source>
          <target state="translated">支持图形和/或计算操作的队列&lt;strong&gt;必须&lt;/strong&gt;在 &lt;code&gt;minImageTransferGranularity&lt;/code&gt; 中报告（1,1,1），这意味着这些队列对图像传输操作的粒度没有其他限制。仅&lt;strong&gt;需要&lt;/strong&gt;支持其他图像传输操作的其他队列来支持整个mip级别的传输，因此，属于此类队列族的队列的 &lt;code&gt;minImageTransferGranularity&lt;/code&gt; &lt;strong&gt;可能&lt;/strong&gt;为（0,0,0）。</target>
        </trans-unit>
        <trans-unit id="b79e00f9362238b2b786fd62ee2d68330a74f5aa" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt; - R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt; -R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5d72bde2bb2027522eff90ff13a01dc700d82dc0" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt; + R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt; + R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="541ddae78f9326fae191c0813c30a03451658fd3" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt; - R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt; -R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="903b87da3367a87b4418488f7c352f5512c9ab51" translate="yes" xml:space="preserve">
          <source>R = max(R&lt;sub&gt;s0&lt;/sub&gt;,R&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">R =最大值（R &lt;sub&gt;s0&lt;/sub&gt;，R &lt;sub&gt;d&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="30f6402df32410d0245d87d08ea9fd2d5e27d538" translate="yes" xml:space="preserve">
          <source>R = min(R&lt;sub&gt;s0&lt;/sub&gt;,R&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">R = min（R &lt;sub&gt;s0&lt;/sub&gt;，R &lt;sub&gt;d&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="41093711e07a6a995d19ad0de7c1c812aa975ae9" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;c&lt;/sub&gt;,G&lt;sub&gt;c&lt;/sub&gt;,B&lt;sub&gt;c&lt;/sub&gt; and A&lt;sub&gt;c&lt;/sub&gt; represent the blend constant R, G, B, and A components, respectively.</source>
          <target state="translated">R &lt;sub&gt;c&lt;/sub&gt;，G &lt;sub&gt;c&lt;/sub&gt;，B &lt;sub&gt;c&lt;/sub&gt;和A &lt;sub&gt;c分别&lt;/sub&gt;表示混合常数R，G，B和A组分。</target>
        </trans-unit>
        <trans-unit id="dcb36067343b917d6a26a4a272e4095a400971f2" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;d&lt;/sub&gt;, G&lt;sub&gt;d&lt;/sub&gt;, B&lt;sub&gt;d&lt;/sub&gt; and A&lt;sub&gt;d&lt;/sub&gt; represent the R, G, B, and A components of the destination color. That is, the color currently in the corresponding color attachment for this fragment/sample.</source>
          <target state="translated">R &lt;sub&gt;d&lt;/sub&gt;，G &lt;sub&gt;d&lt;/sub&gt;，B &lt;sub&gt;d&lt;/sub&gt;和A &lt;sub&gt;d&lt;/sub&gt;代表目标颜色的R，G，B和A分量。即，当前在该片段/样本的相应颜色附件中的颜色。</target>
        </trans-unit>
        <trans-unit id="6bc6a07cd4772de29ef4220bac4e62cdcfd2db80" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;d&lt;/sub&gt;,G&lt;sub&gt;d&lt;/sub&gt;,B&lt;sub&gt;d&lt;/sub&gt; and A&lt;sub&gt;d&lt;/sub&gt; represent the R, G, B, and A components of the destination color. That is, the color currently in the corresponding color attachment for this fragment/sample.</source>
          <target state="translated">R &lt;sub&gt;d&lt;/sub&gt;，G &lt;sub&gt;d&lt;/sub&gt;，B &lt;sub&gt;d&lt;/sub&gt;和A &lt;sub&gt;d&lt;/sub&gt;代表目标颜色的R，G，B和A分量。即，当前在该片段/样本的相应颜色附件中的颜色。</target>
        </trans-unit>
        <trans-unit id="6055fd0ae08f2f92ad8f15578c98a87ac6104d8e" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s0&lt;/sub&gt;, G&lt;sub&gt;s0&lt;/sub&gt;, B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt; represent the first source color R, G, B, and A components, respectively.</source>
          <target state="translated">R &lt;sub&gt;s0&lt;/sub&gt;，G &lt;sub&gt;s0&lt;/sub&gt;，B &lt;sub&gt;s0&lt;/sub&gt;和A &lt;sub&gt;s0分别&lt;/sub&gt;表示第一源颜色R，G，B和A分量。</target>
        </trans-unit>
        <trans-unit id="9eb2dffc9a63ae4cadfc67e309e845ca3139cdde" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s0&lt;/sub&gt;,G&lt;sub&gt;s0&lt;/sub&gt;,B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt; represent the first source color R, G, B, and A components, respectively, for the fragment output location corresponding to the color attachment being blended.</source>
          <target state="translated">R &lt;sub&gt;s0&lt;/sub&gt;，G &lt;sub&gt;s0&lt;/sub&gt;，B &lt;sub&gt;s0&lt;/sub&gt;和A &lt;sub&gt;s0分别&lt;/sub&gt;代表与混合的颜色附件相对应的片段输出位置的第一源颜色R，G，B和A分量。</target>
        </trans-unit>
        <trans-unit id="7bd987507e4810feb58da0028a40db64b3f86c61" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s1&lt;/sub&gt;,G&lt;sub&gt;s1&lt;/sub&gt;,B&lt;sub&gt;s1&lt;/sub&gt; and A&lt;sub&gt;s1&lt;/sub&gt; represent the second source color R, G, B, and A components, respectively, used in dual source blending modes, for the fragment output location corresponding to the color attachment being blended.</source>
          <target state="translated">R &lt;sub&gt;s1&lt;/sub&gt;，G &lt;sub&gt;s1&lt;/sub&gt;，B &lt;sub&gt;s1&lt;/sub&gt;和A &lt;sub&gt;s1分别&lt;/sub&gt;表示在双源混合模式下使用的第二源颜色R，G，B和A分量，用于与要混合的颜色附件相对应的片段输出位置。</target>
        </trans-unit>
        <trans-unit id="32b12811dec521407d505d082316c80efec8882d" translate="yes" xml:space="preserve">
          <source>RGB Blend Factors (S&lt;sub&gt;r&lt;/sub&gt;,S&lt;sub&gt;g&lt;/sub&gt;,S&lt;sub&gt;b&lt;/sub&gt;) or (D&lt;sub&gt;r&lt;/sub&gt;,D&lt;sub&gt;g&lt;/sub&gt;,D&lt;sub&gt;b&lt;/sub&gt;)</source>
          <target state="translated">RGB混合因子（S &lt;sub&gt;r&lt;/sub&gt;，S &lt;sub&gt;g&lt;/sub&gt;，S &lt;sub&gt;b&lt;/sub&gt;）或（D &lt;sub&gt;r&lt;/sub&gt;，D &lt;sub&gt;g&lt;/sub&gt;，D &lt;sub&gt;b&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="370cad40414ecb914eb5de3cebbd4a023f87d88c" translate="yes" xml:space="preserve">
          <source>RGB Components</source>
          <target state="translated">RGB元件</target>
        </trans-unit>
        <trans-unit id="5fdc6a02fc8d3e3a68fd0a8279ebcaba5c6b825f" translate="yes" xml:space="preserve">
          <source>Ranges of buffers and image subresources of image objects created using &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be accessed by queues from the queue families specified through the &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; and &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; members of the corresponding create info structures.</source>
          <target state="translated">缓冲器和图像对象的图像的子资源的范围使用创建 &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;仅通过来自通过所述指定的队列家庭队列访问 &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; 和 &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; 相应创建信息结构的成员。</target>
        </trans-unit>
        <trans-unit id="46d1764eb2bce7a26ef267ad99994d7581714f9f" translate="yes" xml:space="preserve">
          <source>Ranges of buffers and image subresources of image objects created using &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be accessed by queues in the same queue family at any given time. In order for a different queue family to be able to interpret the memory contents of a range or image subresource, the application &lt;strong&gt;must&lt;/strong&gt; perform a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers&quot;&gt;queue family ownership transfer&lt;/a&gt;.</source>
          <target state="translated">缓冲剂，并使用创建的图像对象的图像子资源的范围 &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;只能由队列在同一队列的家庭在任何特定时间访问。为了使其他队列族能够解释范围或图像子资源的内存内容，应用程序&lt;strong&gt;必须&lt;/strong&gt;执行&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers&quot;&gt;队列族所有权转移&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb55598a799c6dc14ac6f5511a072f986028960b" translate="yes" xml:space="preserve">
          <source>Rectangles are used to describe a specified rectangular region of pixels within an image or framebuffer. Rectangles include both an offset and an extent of the same dimensionality, as described above. Two-dimensional rectangles are defined by the structure</source>
          <target state="translated">矩形用于描述图像或帧缓冲区内指定的矩形像素区域。如上所述,矩形包括偏移量和同一维度的范围。二维矩形由以下结构定义</target>
        </trans-unit>
        <trans-unit id="f16748ad587919cfdb51f89929df3bfe53c3caa4" translate="yes" xml:space="preserve">
          <source>Render Pass Scope</source>
          <target state="translated">渲染通道范围</target>
        </trans-unit>
        <trans-unit id="b0052913cd9a63d50436b184181efe571d9edb20" translate="yes" xml:space="preserve">
          <source>Render passes are represented by &lt;code&gt;VkRenderPass&lt;/code&gt; handles:</source>
          <target state="translated">渲染过程由 &lt;code&gt;VkRenderPass&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="6321a081af4e30de7dc33639cde2f200dd4fed52" translate="yes" xml:space="preserve">
          <source>Render passes operate in conjunction with &lt;em&gt;framebuffers&lt;/em&gt;. Framebuffers represent a collection of specific memory attachments that a render pass instance uses.</source>
          <target state="translated">渲染过程与&lt;em&gt;帧缓冲区&lt;/em&gt;结合使用。帧缓冲区表示渲染过程实例使用的特定内存附件的集合。</target>
        </trans-unit>
        <trans-unit id="a751ea66f504c0018d8354be8014ccbb188e73b5" translate="yes" xml:space="preserve">
          <source>Resetting a command pool recycles all of the resources from all of the command buffers allocated from the command pool back to the command pool. All command buffers that have been allocated from the command pool are put in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;initial state&lt;/a&gt;.</source>
          <target state="translated">重置命令池可将所有资源从命令池分配的所有命令缓冲区中回收回命令池。从命令池分配的所有命令缓冲区均置于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;初始状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a3d85c63500389439de4ffe980966faf0012c83" translate="yes" xml:space="preserve">
          <source>Resetting a descriptor pool recycles all of the resources from all of the descriptor sets allocated from the descriptor pool back to the descriptor pool, and the descriptor sets are implicitly freed.</source>
          <target state="translated">重置描述符池会将描述符池分配的所有描述符集的所有资源回收到描述符池中,描述符集被隐式释放。</target>
        </trans-unit>
        <trans-unit id="f26e4ddcd779e0ff1d608fbc41a8e53dd1eb3909" translate="yes" xml:space="preserve">
          <source>Resolves are done layer by layer starting with &lt;code&gt;baseArrayLayer&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; for the source and &lt;code&gt;dstSubresource&lt;/code&gt; for the destination. &lt;code&gt;layerCount&lt;/code&gt; layers are resolved to the destination image.</source>
          <target state="translated">解决完成逐层开始 &lt;code&gt;baseArrayLayer&lt;/code&gt; 的构件 &lt;code&gt;srcSubresource&lt;/code&gt; 源和 &lt;code&gt;dstSubresource&lt;/code&gt; 为目的地。 &lt;code&gt;layerCount&lt;/code&gt; 图层解析为目标图像。</target>
        </trans-unit>
        <trans-unit id="e031e223512bf43c9a34b7730c010ea3489679d5" translate="yes" xml:space="preserve">
          <source>Restarting the assembly of primitives discards the most recent index values if those elements formed an incomplete primitive, and restarts the primitive assembly using the subsequent indices, but only assembling the immediately following element through the end of the originally specified elements. The primitive restart index value comparison is performed before adding the &lt;code&gt;vertexOffset&lt;/code&gt; value to the index value.</source>
          <target state="translated">如果那些元素形成不完整的原语，则重新启动原语的组装将丢弃最新的索引值，并使用后续索引重新启动原语的组装，但仅将紧随其后的元素组装到原始指定元素的末尾。在将 &lt;code&gt;vertexOffset&lt;/code&gt; 值添加到索引值之前，执行原始重启索引值比较。</target>
        </trans-unit>
        <trans-unit id="2990d745269c93c4307be5199105ba4db52fb4f8" translate="yes" xml:space="preserve">
          <source>Return Codes</source>
          <target state="translated">返回代码</target>
        </trans-unit>
        <trans-unit id="03087aeb540494affd09664d2dd5c836a9e1eebd" translate="yes" xml:space="preserve">
          <source>Run time error codes are returned when a command needs to communicate a failure that could only be detected at run time. All run time error codes are negative values.</source>
          <target state="translated">当命令需要传达只能在运行时检测到的故障时,会返回运行时错误代码。所有运行时错误代码都是负值。</target>
        </trans-unit>
        <trans-unit id="82718830066416e1e4d6604e30d026b103c6d77c" translate="yes" xml:space="preserve">
          <source>S&lt;sub&gt;r&lt;/sub&gt;, S&lt;sub&gt;g&lt;/sub&gt;, S&lt;sub&gt;b&lt;/sub&gt; and S&lt;sub&gt;a&lt;/sub&gt; represent the source blend factor R, G, B, and A components, respectively.</source>
          <target state="translated">S &lt;sub&gt;r&lt;/sub&gt;，S &lt;sub&gt;g&lt;/sub&gt;，S &lt;sub&gt;b&lt;/sub&gt;和S &lt;sub&gt;a分别&lt;/sub&gt;表示源混合因子R，G，B和A分量。</target>
        </trans-unit>
        <trans-unit id="5e7bef6429a6c8fdf454fdc90380e3ad5a3e7f32" translate="yes" xml:space="preserve">
          <source>SPARSE_BINDING</source>
          <target state="translated">SPARSE_BINDING</target>
        </trans-unit>
        <trans-unit id="ba32a67865588081b30edc5d0fa29932fa917d6c" translate="yes" xml:space="preserve">
          <source>Samplers are represented by &lt;code&gt;VkSampler&lt;/code&gt; handles:</source>
          <target state="translated">采样器由 &lt;code&gt;VkSampler&lt;/code&gt; 手柄表示：</target>
        </trans-unit>
        <trans-unit id="2393e5ca7e23d4e6b269ecc8ac08cf4d08845bda" translate="yes" xml:space="preserve">
          <source>Satisfying this guarantee &lt;strong&gt;may&lt;/strong&gt; require careful ordering by the application, e.g. to read the availability status before reading the results.</source>
          <target state="translated">要满足此保证，应用程序&lt;strong&gt;可能&lt;/strong&gt;需要仔细订购，例如在读取结果之前先读取可用性状态。</target>
        </trans-unit>
        <trans-unit id="025de599ea0a6262eeb4ea073413e273d0ea875b" translate="yes" xml:space="preserve">
          <source>Secondary</source>
          <target state="translated">Secondary</target>
        </trans-unit>
        <trans-unit id="2fd635ab66f97d4369ec3a93b2e97e7238594654" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;Sparse Resource Features&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features&quot;&gt;Physical Device Features&lt;/a&gt; for details of the sparse memory features supported on a device.</source>
          <target state="translated">有关&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features&quot;&gt;设备&lt;/a&gt;支持的稀疏存储功能的详细信息，请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;稀疏资源功能&lt;/a&gt;和物理设备功能。</target>
        </trans-unit>
        <trans-unit id="b6cfb646b30502aa6034a94081097b066feae135" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;Sparse Resource Features&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-physicalfeatures&quot;&gt;Sparse Physical Device Features&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;稀疏资源功能&lt;/a&gt;和&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-physicalfeatures&quot;&gt;稀疏物理设备功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="b6f5fac8b9a508b0a07b8b3c614feaca73f97698" translate="yes" xml:space="preserve">
          <source>Semaphores are a synchronization primitive that &lt;strong&gt;can&lt;/strong&gt; be used to insert a dependency between batches submitted to queues. Semaphores have two states - signaled and unsignaled. The state of a semaphore &lt;strong&gt;can&lt;/strong&gt; be signaled after execution of a batch of commands is completed. A batch &lt;strong&gt;can&lt;/strong&gt; wait for a semaphore to become signaled before it begins execution, and the semaphore is also unsignaled before the batch begins execution.</source>
          <target state="translated">信号量是一个同步原语，&lt;strong&gt;可&lt;/strong&gt;用于在提交到队列的批处理之间插入依赖项。信号量具有两种状态-发出信号和未发出信号。信号量的状态&lt;strong&gt;可&lt;/strong&gt;完成一个批处理命令的执行之后被发信号通知。批处理&lt;strong&gt;可以&lt;/strong&gt;在开始执行之前等待信号量被发出信号，并且在该批处理开始执行之前，信号量也没有信号。</target>
        </trans-unit>
        <trans-unit id="efe35ecb9d649ab5ed42f6929c922bbe3a40f48e" translate="yes" xml:space="preserve">
          <source>Semaphores are represented by &lt;code&gt;VkSemaphore&lt;/code&gt; handles:</source>
          <target state="translated">信号量由 &lt;code&gt;VkSemaphore&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="c3af2061e3e115110eb69727aba2fb4f4f00b1ea" translate="yes" xml:space="preserve">
          <source>Setting the identity swizzle on a component is equivalent to setting the identity mapping on that component. That is:</source>
          <target state="translated">在一个组件上设置identity swizzle相当于在该组件上设置identity mapping。也就是:</target>
        </trans-unit>
        <trans-unit id="3a3b7ecf447ba8b681f779eae2a065ba1ef8b498" translate="yes" xml:space="preserve">
          <source>Several of the synchronization commands include pipeline stage parameters, restricting the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scopes&lt;/a&gt; for that command to just those stages. This allows fine grained control over the exact execution dependencies and accesses performed by action commands. Implementations &lt;strong&gt;should&lt;/strong&gt; use these pipeline stages to avoid unnecessary stalls or cache flushing.</source>
          <target state="translated">几个同步命令包括管道阶段参数，将该命令的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步范围&lt;/a&gt;限制为仅那些阶段。这允许对操作命令执行的确切执行依赖关系和访问进行精细控制。实现&lt;strong&gt;应&lt;/strong&gt;使用这些管道阶段，以避免不必要的停顿或缓存刷新。</target>
        </trans-unit>
        <trans-unit id="d30c200a960bfb05ea60fc1803b313155597c1b2" translate="yes" xml:space="preserve">
          <source>Shader modules are represented by &lt;code&gt;VkShaderModule&lt;/code&gt; handles:</source>
          <target state="translated">着色器模块由 &lt;code&gt;VkShaderModule&lt;/code&gt; 句柄表示：</target>
        </trans-unit>
        <trans-unit id="1dea6d0ea1c073deb15edd9efa11a7e7fbe3f60b" translate="yes" xml:space="preserve">
          <source>Signed and unsigned integers are converted by first clamping to the representable range of the destination format, then casting the value.</source>
          <target state="translated">有符号整数和无符号整数的转换方法是,先将其箝制在目标格式的可表示范围内,然后再将其值转换。</target>
        </trans-unit>
        <trans-unit id="4aee7a097d1f9d034d85844a5d1c09cf73419867" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; is set and &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; is not set, the availability is guaranteed to reflect the most recent use of the query on the same queue, assuming that the query is not being simultaneously used by other queues. As with &lt;code&gt;vkGetQueryPoolResults&lt;/code&gt;, implementations &lt;strong&gt;must&lt;/strong&gt; guarantee that if they return a non-zero availability value, then the numerical results are valid.</source>
          <target state="translated">同样，如果 &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; 设置和 &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; 没有设置，可用性保证以反映最近的使用在同一个队列的查询，假设查询不被同时使用的其他队列。与 &lt;code&gt;vkGetQueryPoolResults&lt;/code&gt; 一样，实现&lt;strong&gt;必须&lt;/strong&gt;保证如果它们返回非零可用性值，则数字结果有效。</target>
        </trans-unit>
        <trans-unit id="306dd1890484b05617d071e006ab602814a3f655" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;dstImage&lt;/code&gt; is compressed, then:</source>
          <target state="translated">同样，如果 &lt;code&gt;dstImage&lt;/code&gt; 被压缩，则：</target>
        </trans-unit>
        <trans-unit id="ea85c2d12a72bf589f721946f0c5256792a825f8" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt; is a non-dispatchable handle type, implementations &lt;strong&gt;may&lt;/strong&gt; return the same handle for sampler state vectors that are identical. In such cases, all such objects would only count once against the &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; limit.</source>
          <target state="translated">由于&lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt;是不可分派的句柄类型，因此对于相同的采样器状态向量，实现&lt;strong&gt;可能&lt;/strong&gt;返回相同的句柄。在这种情况下，所有此类对象仅会针对 &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; 限制计数一次。</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="7d1ec4d40756e14dc53e222c8bd15d258bd2edd3" translate="yes" xml:space="preserve">
          <source>Some of the image creation parameters are inherited by the view. The remaining parameters are contained in the &lt;code&gt;pCreateInfo&lt;/code&gt;.</source>
          <target state="translated">一些图像创建参数被视图继承。其余参数包含在 &lt;code&gt;pCreateInfo&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a942835b55f2b912cc313f91ad3da7e6a13ccf4f" translate="yes" xml:space="preserve">
          <source>Some platforms &lt;strong&gt;may&lt;/strong&gt; have a limit on the maximum size of a single allocation. For example, certain systems &lt;strong&gt;may&lt;/strong&gt; fail to create allocations with a size greater than or equal to 4GB. Such a limit is implementation-dependent, and if such a failure occurs then the error &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt;&lt;strong&gt;should&lt;/strong&gt; be returned.</source>
          <target state="translated">某些平台&lt;strong&gt;可能&lt;/strong&gt;对单个分配的最大大小有限制。例如，某些系统&lt;strong&gt;可能&lt;/strong&gt;无法创建大小大于或等于4GB的分配。这样的限制取决于实现，并且，如果发生这样的故障，则&lt;strong&gt;应该&lt;/strong&gt;返回错误 &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ea7471f263b29f9c66b3d3679203876d4e410c8" translate="yes" xml:space="preserve">
          <source>Some synchronization commands take sets of access types as parameters to define the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scopes&lt;/a&gt; of a memory dependency. If a synchronization command includes a source access mask, its first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; only includes accesses via the access types specified in that mask. Similarly, if a synchronization command includes a destination access mask, its second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; only includes accesses via the access types specified in that mask.</source>
          <target state="translated">某些同步命令将访问类型集作为参数来定义内存依赖项的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;。如果同步命令包括源访问掩码，则其第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅包括通过该掩码中指定的访问类型进行的访问。同样，如果同步命令包括目标访问掩码，则其第二&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅包括通过该掩码中指定的访问类型进行的访问。</target>
        </trans-unit>
        <trans-unit id="c42adf00966f25b49fa92fb2afd3fca201de4e36" translate="yes" xml:space="preserve">
          <source>Specifying the exact framebuffer that the secondary command buffer will be executed with &lt;strong&gt;may&lt;/strong&gt; result in better performance at command buffer execution time.</source>
          <target state="translated">指定将与辅助命令缓冲区一起执行的确切帧缓冲区&lt;strong&gt;可能会&lt;/strong&gt;在命令缓冲区执行时带来更好的性能。</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="c64b6d8ab6a3167af6b211df05198e555a8951eb" translate="yes" xml:space="preserve">
          <source>Structures</source>
          <target state="translated">Structures</target>
        </trans-unit>
        <trans-unit id="093b6cd6e09a681f50b3995205ca4c104c2807de" translate="yes" xml:space="preserve">
          <source>Submission can be a high overhead operation, and applications &lt;strong&gt;should&lt;/strong&gt; attempt to batch work together into as few calls to &lt;code&gt;vkQueueSubmit&lt;/code&gt; as possible.</source>
          <target state="translated">提交可能是一项高开销的操作，应用程序&lt;strong&gt;应&lt;/strong&gt;尝试将批处理工作分批处理，以尽可能少地调用 &lt;code&gt;vkQueueSubmit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5ee48f4626430b4b0eb9ccf81cb61818a482854" translate="yes" xml:space="preserve">
          <source>Subpass dependencies are not affected by the render area, and apply to the entire image subresources attached to the framebuffer as specified in the description of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;automatic layout transitions&lt;/a&gt;. Similarly, pipeline barriers are valid even if their effect extends outside the render area.</source>
          <target state="translated">子通道依赖关系不受渲染区域的影响，并且适用于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;自动布局过渡&lt;/a&gt;说明中指定的，附加到帧缓冲区的整个图像子资源。类似地，即使管道屏障的效果延伸到渲染区域之外，管道屏障也是有效的。</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="316d63bf521d1a2129970b36cde68883e6a77699" translate="yes" xml:space="preserve">
          <source>Success Codes</source>
          <target state="translated">成功代码</target>
        </trans-unit>
        <trans-unit id="a2cbc439c9045c310d0fbcdb653addfdbdfa2620" translate="yes" xml:space="preserve">
          <source>Successful completion codes are returned when a command needs to communicate success or status information. All successful completion codes are non-negative values.</source>
          <target state="translated">当命令需要传达成功或状态信息时,会返回成功完成代码。所有成功完成代码都是非负值。</target>
        </trans-unit>
        <trans-unit id="2616ff87cadf2d1f2a5fbb2b55015289cefbb3de" translate="yes" xml:space="preserve">
          <source>Supported Queue Types</source>
          <target state="translated">支持的队列类型</target>
        </trans-unit>
        <trans-unit id="0e3be3a65e844f516e59412e57af5f7f89c0d712" translate="yes" xml:space="preserve">
          <source>Supported pipeline stages</source>
          <target state="translated">支持的管道阶段</target>
        </trans-unit>
        <trans-unit id="b816729f8cfd7023f87362593c8e3c3fbd97648d" translate="yes" xml:space="preserve">
          <source>Table 1. vkGetDeviceProcAddr behavior</source>
          <target state="translated">表1.vkGetDeviceProcAddr行为</target>
        </trans-unit>
        <trans-unit id="1742582516ee749eb727849e027891cfe1a77eef" translate="yes" xml:space="preserve">
          <source>Table 10. Component Mappings Equivalent To &lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt;</source>
          <target state="translated">表10.等效于 &lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt; 的组件映射</target>
        </trans-unit>
        <trans-unit id="9fbe1b1057482bc8e2a9980a7c41d7c4a596b876" translate="yes" xml:space="preserve">
          <source>Table 11. Logical Operations</source>
          <target state="translated">表11.逻辑操作 逻辑操作</target>
        </trans-unit>
        <trans-unit id="94c6f5ef7cbcf5e2cb167fba793a72eb265e9bdb" translate="yes" xml:space="preserve">
          <source>Table 12. VkObjectType and Vulkan Handle Relationship</source>
          <target state="translated">表12.VkObjectType和Vulkan Handle关系 VkObjectType和Vulkan Handle的关系。</target>
        </trans-unit>
        <trans-unit id="2da473c4731f212bf8417ecf4c08b8b5cbdfcf56" translate="yes" xml:space="preserve">
          <source>Table 2. Event Object Status Codes</source>
          <target state="translated">表2.事件对象状态代码 事件对象状态代码</target>
        </trans-unit>
        <trans-unit id="1aa4e565052de4bba04bce9edf26f02647537fe1" translate="yes" xml:space="preserve">
          <source>Table 3. Fence Object Status Codes</source>
          <target state="translated">表3.栅栏对象状态代码 栅栏对象状态代码</target>
        </trans-unit>
        <trans-unit id="8feca90e7fe13b94e3d4bcd2ed60c473e4bd60ba" translate="yes" xml:space="preserve">
          <source>Table 4. vkGetInstanceProcAddr behavior</source>
          <target state="translated">表4.vkGetInstanceProcAddr行为</target>
        </trans-unit>
        <trans-unit id="831ab4f5641d496e5ca0390d0fad229c67d29c93" translate="yes" xml:space="preserve">
          <source>Table 5. Layout for pipeline cache header version &lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt;</source>
          <target state="translated">表5.管道高速缓存头版本 &lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt; 的布局</target>
        </trans-unit>
        <trans-unit id="27ac27c0ffded35668d9f9c30dc98d9ca91d7138" translate="yes" xml:space="preserve">
          <source>Table 6. Image and image view parameter compatibility requirements</source>
          <target state="translated">表6.图像和图像视图参数兼容性要求 图像和图像视图参数兼容性要求</target>
        </trans-unit>
        <trans-unit id="a0e73cb6a2b5d98ea6c4ec60f77d7f24de613510" translate="yes" xml:space="preserve">
          <source>Table 7. Supported access types</source>
          <target state="translated">表7.支持的访问类型 支持的访问类型</target>
        </trans-unit>
        <trans-unit id="61ae5d5ec9f9ba465bb08753341fb2a6d8837356" translate="yes" xml:space="preserve">
          <source>Table 8. Blend Factors</source>
          <target state="translated">表8.混合因素</target>
        </trans-unit>
        <trans-unit id="2562fae0aad0eb791e709b85fdaa591a529ad966" translate="yes" xml:space="preserve">
          <source>Table 9. Basic Blend Operations</source>
          <target state="translated">表9.基本混合操作 基本混合操作</target>
        </trans-unit>
        <trans-unit id="260d031c0a011609575545b5de3494526dfad1dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;::&lt;code&gt;binding&lt;/code&gt; members of the elements of the &lt;code&gt;pBindings&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each have different values.</source>
          <target state="translated">&lt;code&gt;pBindings&lt;/code&gt; 数组的元素的&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; :: &lt;code&gt;binding&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;各自具有不同的值。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6a78099cc4a599ed528b4deb0bc5cbb7a7ef457" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; of each of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible, as defined &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies-images-format-compatibility&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">所述&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;的每一个的 &lt;code&gt;srcImage&lt;/code&gt; 和 &lt;code&gt;dstImage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是兼容的，所定义的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies-images-format-compatibility&quot;&gt;下面&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b935630130d371037fdd72c3f5fdc89b4b3a3b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; structure includes an array of shader create info structures containing all the desired active shader stages, as well as creation info to define all relevant fixed-function stages, and a pipeline layout.</source>
          <target state="translated">该&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;结构包括着色器的阵列创建包含所有所需的活性着色器阶段，以及创建信息定义所有相关的固定功能阶段信息的结构，并且一个管道布局。</target>
        </trans-unit>
        <trans-unit id="b3d2dd2bfa113e06cd0fb91fac058c399de965ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; members of the elements of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each be less than the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">创建 &lt;code&gt;image&lt;/code&gt; 时， &lt;code&gt;pRanges&lt;/code&gt; 数组的元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;arrayLayers&lt;/code&gt; 指定的&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;arrayLayers&lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcb0dc656b86663f74dcbe4af9207f17c955e6ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; members of the elements of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each be less than the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">创建 &lt;code&gt;image&lt;/code&gt; 时， &lt;code&gt;pRanges&lt;/code&gt; 数组的元素的&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;分别小于 &lt;code&gt;mipLevels&lt;/code&gt; 指定的&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;mipLevels&lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0f3ef181c371f4e9ec190ba0e88c81584aa554a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkObjectType&quot;&gt;VkObjectType&lt;/a&gt; enumeration defines values, each of which corresponds to a specific Vulkan handle type. These values &lt;strong&gt;can&lt;/strong&gt; be used to associate debug information with a particular type of object through one or more extensions.</source>
          <target state="translated">所述&lt;a href=&quot;#VkObjectType&quot;&gt;VkObjectType&lt;/a&gt;枚举定义的值，其中每一个对应于一个特定的Vulkan句柄类型。这些值&lt;strong&gt;可&lt;/strong&gt;用于通过一个或多个扩展将调试信息与特定类型的对象相关联。</target>
        </trans-unit>
        <trans-unit id="ec89ee4fbea8f53b65a7c304310ea1b4361a8e21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt; structure is defined as:</source>
          <target state="translated">该&lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt;结构被定义为：</target>
        </trans-unit>
        <trans-unit id="e3b8bcbf9952df3464fa48ae305b76482e3a723d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt; command &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-host-writes&quot;&gt;automatically guarantees that host writes flushed to &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; are made available&lt;/a&gt; if they were flushed before the command executed, so in most cases an explicit memory barrier is not needed for this case. In the few circumstances where a submit does not occur between the host write and the device read access, writes &lt;strong&gt;can&lt;/strong&gt; be made available by using an explicit memory barrier.</source>
          <target state="translated">该&lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt;命令&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-host-writes&quot;&gt;自动地保证了主机写入刷新到 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 是可用&lt;/a&gt;，如果他们被命令执行之前冲刷，所以在大多数情况下不需要这种情况下明确的内存屏障。在少数情况下，主机写操作和设备读访问之间不会发生提交，&lt;strong&gt;可以&lt;/strong&gt;使用显式内存屏障使写&lt;strong&gt;操作&lt;/strong&gt;可用。</target>
        </trans-unit>
        <trans-unit id="847c30607b15a6350eaf5a0a8774fdb2b7f94ab9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device&quot;&gt;Device Memory&lt;/a&gt; section describes memory properties queried from the physical device.</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device&quot;&gt;设备内存&amp;rdquo;&lt;/a&gt;部分描述了从物理设备查询的内存属性。</target>
        </trans-unit>
        <trans-unit id="8d34aa9fff7ba1ac43b0f4969108a4e7eb9cbec0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-available-and-visible&quot;&gt;availability and visibility operations&lt;/a&gt; defined by a subpass dependency affect the execution of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;image layout transitions&lt;/a&gt; within the render pass.</source>
          <target state="translated">由子通道依赖项定义的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-available-and-visible&quot;&gt;可用性和可见性操作&lt;/a&gt;会影响渲染通道中&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;图像布局转换&lt;/a&gt;的执行。</target>
        </trans-unit>
        <trans-unit id="58cbce4bb72c06ae6ab939ee38b65227a8044f9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkApplicationInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkApplicationInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="131b4be23ee3eb73500763ec1557135c1db7f7d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="2e6a54f7c6cdcb88f967df54dcfaf0dd4273404d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkAttachmentReference&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkAttachmentReference&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="224f0f88fa0d8e5c0760bcaca4a4d580b11a62f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBindSparseInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkBindSparseInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="bcb88f2ebb7fb99282d531d233b4c1e2f99a62b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferCopy&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkBufferCopy&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="c76ea7967eceab6014aeaa4f3c529fe1692e4264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkBufferCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="6ba59eaded72202eeafd207ef9e896d9de40407c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkBufferMemoryBarrier&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="54032f1c63408d6dcecf68bafe3abbfb59147a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferViewCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkBufferViewCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="ea2d47c8d5630f363f75f6923a280ce6f6c79fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearAttachment&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkClearAttachment&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="0c3032c2477cc4fc38f136f26c0b73ea22020b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearColorValue&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkClearColorValue&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="2a6845b989d4701b83c4cc982433ff8e04c1a805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearDepthStencilValue&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkClearDepthStencilValue&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="b34daebae4dd88a7f31773618688710822b7c368" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearRect&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkClearRect&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="4460eb00c02e69c2eee107a625fe338b1efcd6ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearValue&lt;/code&gt; union is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkClearValue&lt;/code&gt; 工会的定义是：</target>
        </trans-unit>
        <trans-unit id="696cc15e6b77a4144383d42237dd4e023a4807da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandBufferAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkCommandBufferAllocateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="df36512a90c6ebeeb6b5b3e76bf2e86a41b37779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandBufferBeginInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkCommandBufferBeginInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="748e587ce04a8d7aa4500ac778fbd75f66727716" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">该 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持计算操作</target>
        </trans-unit>
        <trans-unit id="99c7c33ddbe73576107c3d3ee6c071ea459a9498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">该 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持图形操作</target>
        </trans-unit>
        <trans-unit id="6124495af689e32e1c22e44381bf0b7caa5acbd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics or compute operations</source>
          <target state="translated">该 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持图形或计算操作</target>
        </trans-unit>
        <trans-unit id="182448d0ac8823ad1d731cbdc148d348eb770d9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics, or compute operations</source>
          <target state="translated">该 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持图形，或计算业务</target>
        </trans-unit>
        <trans-unit id="247194d6c9c09e3a7508b0f909a4d0ae45017991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support transfer, graphics, or compute operations</source>
          <target state="translated">该 &lt;code&gt;VkCommandPool&lt;/code&gt; 是 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配&lt;strong&gt;必须&lt;/strong&gt;支持传输，图形或计算操作</target>
        </trans-unit>
        <trans-unit id="e2ad496765f25b942a71b7931ee4e14f2a93b7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPoolCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkCommandPoolCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="0fb925689a4f8769913a439d47518973d9a7f905" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkComponentMapping&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkComponentMapping&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="786c2dfe65d8d6fa6f3b907c82ea5af2d26c0788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkComputePipelineCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkComputePipelineCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="5b9c5d6e3f91422a6be1107053e17bbc9e74b07e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCopyDescriptorSet&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkCopyDescriptorSet&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="bc2bac80cbd95ff18f31389120c00b3451c0d80f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="9c1cfee713c724e59b533700a56180f1d88e08d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="acf81da1d784d8708d95dcd4cc15c96092326bbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="163d4f309e1f35b8c8dfb3346b335c9e40215175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorSetAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDescriptorSetAllocateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="389952baae652dbd578f630eaf36433720bb0b61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorSetLayoutBinding&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDescriptorSetLayoutBinding&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="9966dc243cff5bd8ef790797a34466da99abcb9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDeviceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDeviceCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="29da10b5e17156b0e0e645a42b89f915fd00b09a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDeviceQueueCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDeviceQueueCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="2f4144f99670654008e5d5bf931a64f593392fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="10f95a83cce2a1a6f3a271641c0540a64e809020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="739ad2f55fb00003d439ae52e24a98985b555c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="fdee65628dbaaae8cf71a150817f6194fe90fa5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkEventCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkEventCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="8fe73e96b56f10b3b350fabea454d9c8200d16d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkExtensionProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkExtensionProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="09c4dd843909908c4354a452392808d237f3149d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFenceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkFenceCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="518b030fbb1280e2ab5ebcf4febf8a09089c7339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkFormatProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="7d9758a1bba8e46faba332fc6071722c8572b260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFramebufferCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkFramebufferCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="c6a3751614085c89999095cc97205e1e155b8927" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="ac118a4da7fb9cf4b68347228b13838ca0a6cb72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageBlit&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageBlit&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="d777ef0576281bdf7a5b6f803971cb0efbf23ca7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageCopy&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageCopy&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="991c6f02e9cabe044ce306003e6151d59cebe0d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="435a665e34eb28f0d26891cfa3ee1b15b4ad9e2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageFormatProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="63462cf771fed6a50e682fb9bd8cd1a364e6c81d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="668d55cc4f4f9d568862c7d8d396c605c32284c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageResolve&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageResolve&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="26cc8d4eb90a3288910860973593054e09811851" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresource&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageSubresource&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="44875c039fd0d1b9273acbbf7ab4d2f19b90b8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresourceLayers&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageSubresourceLayers&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="28ded60cba790410f21b5914c08b1decc8973e62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresourceRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageSubresourceRange&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="9e7dcdc4fea4b6b9c75e25570fda184bd218208c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageViewCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkImageViewCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="2b5bc8ba0af3918a7e83283293b48fc5f1f82ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkInstanceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkInstanceCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="2a51dc9fdc8714489f134df1aadfd3aa743b679e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkLayerProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkLayerProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="44842a4d5af7b1972ceced0461683feacbee64a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMappedMemoryRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMappedMemoryRange&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="25534c3c23e6738152d5ca5ca8d7df08e9a3e77b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMemoryAllocateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="a0222a61cf02852e7f44d46f6c8e443327114224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMemoryBarrier&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="dbba01f1c5af0aac9fd20a9650394109ff04f7ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryHeap&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMemoryHeap&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="1792755b145743041dffbd10007bb986b54c12cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMemoryRequirements&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="0929e33e54a09be6012d7bbc0e4bb0b72d137eb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryType&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkMemoryType&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="f616221081ff53b744f8f24f0602285fba7457ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="401180f2feecbe16e5a412f7d51d07b2f95b44a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="622b4d81ad990ce16b109ad912e02926432d68ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; structure describes a number of &lt;em&gt;memory heaps&lt;/em&gt; as well as a number of &lt;em&gt;memory types&lt;/em&gt; that &lt;strong&gt;can&lt;/strong&gt; be used to access memory allocated in those heaps. Each heap describes a memory resource of a particular size, and each memory type describes a set of memory properties (e.g. host cached vs uncached) that &lt;strong&gt;can&lt;/strong&gt; be used with a given memory heap. Allocations using a particular memory type will consume resources from the heap indicated by that memory type&amp;rsquo;s heap index. More than one memory type &lt;strong&gt;may&lt;/strong&gt; share each heap, and the heaps and memory types provide a mechanism to advertise an accurate size of the physical memory resources while allowing the memory to be used with a variety of different properties.</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; 结构描述了许多&lt;em&gt;存储器堆&lt;/em&gt;以及若干&lt;em&gt;存储器类型&lt;/em&gt;其&lt;strong&gt;可&lt;/strong&gt;被用来在这些堆分配存取存储器。每个堆描述特定大小的内存资源，每种内存类型描述一组&lt;strong&gt;可&lt;/strong&gt;与给定内存堆一起使用的内存属性（例如，主机缓存与未缓存的主机）。使用特定内存类型的分配将消耗该内存类型的堆索引指示的堆中的资源。&lt;strong&gt;可能&lt;/strong&gt;有不止一种记忆类型&lt;strong&gt;&lt;/strong&gt; 共享每个堆，堆和内存类型提供了一种机制，可在物理内存资源准确大小的同时通告具有各种不同属性的内存。</target>
        </trans-unit>
        <trans-unit id="3856adc0a32bcea44208f6dd47cb1f3b3aa31212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="10315218c47d5ae1e186650f6f32a9b83de2571e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="136ee89a5f22c25a105c31669fe930182dbae59f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceSparseProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPhysicalDeviceSparseProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="dcd9322c8393e8011eb660aa085f43b581c03602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="0604dfba983332b87e1a93a183957d7d709c94e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="df528cbcc50122d077aae56c081522f898a8f0cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="7a745c1ec7e4284c96d8925f41c46354cce91cc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="3905a5b7c17ab91a93f3b7e33464927718983f1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="53a9553127226655b1efe0ad4bd80a322dc8dcbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="58ca0c78871eb695131ee434ce2e0ddcf1d5a4f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="68bde8ef80f7aa913f9ba509648949c445482e14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineShaderStageCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineShaderStageCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="712f2cc0f913c50c142e9059f51e0068096f4259" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="5e26dc90e366138b8bbbcf9a76cd423a302bb837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineVertexInputStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineVertexInputStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="a105bcf6810a6c66b3e290590875bd943031f5df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="db771ac4b29ed4b4f42a78d3b115bd64dda34002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPushConstantRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkPushConstantRange&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="69aef621905902df33cf4ab952a85b0d23e1c492" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkQueryPoolCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkQueryPoolCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="e0899881be8a96b7c5317bc2f1a7b16fb5e54987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="8785e79fb90816cd873daf908840f5b636c48311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkRenderPassBeginInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkRenderPassBeginInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="71ec2bb8c5547f727b140ec79c8c660fb7347da9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="ddbed6f13311007846b8e0ea47417c7d5287d57a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSamplerCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSamplerCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="f9a5d80b1ad778d43e0676943fe0cb3a09e6b17b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSemaphoreCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSemaphoreCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="ab818bb4ebad0369b6906cdf1c8dedce77c3f486" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkShaderModuleCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkShaderModuleCreateInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="be253d71ae41fea6256d0e9cb568d913278d09f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="c2a72db3192d9c41852e08fb11e65059a67a20c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="7c5073880061f7ee490cb16ef5f25b2c10d00bb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="33521c532563d6bd06bdf750a5f873739258cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseMemoryBind&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSparseMemoryBind&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="9a6547af51fe52815fcb1453a77a8fbc530b3263" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSpecializationInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSpecializationInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="0af5bf0aa7a5a6f6fee49e9f4f7acf0a1df2efd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="130616dd57d3c59a7ccf1b1ff317316aece7d0ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkStencilOpState&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkStencilOpState&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="07b4e8d803aca132fc35c11869168ac725cf64a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubmitInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSubmitInfo&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="100c116d18035cac7f1b4e7c3418890144324902" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubpassDependency&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSubpassDependency&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="b2d60e81c4ec56731a57f63516f46a8bfc6caebc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubpassDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkSubpassDescription&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="ebaf5a64cabbe7667b16607561f7978ee655c696" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="8f2e2fab820610881a7d0c63ae4e5f916590a39b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="62b963678c895ec8bd972bc92913c3af5fc151bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkViewport&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkViewport&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="c8f3cb12fc2d3c1662e8d57f72acf8e65a61c45f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; structure is defined as:</source>
          <target state="translated">该 &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; 结构被定义为：</target>
        </trans-unit>
        <trans-unit id="a6cda091bf55776b730ca1302cc01ae2ec1419fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allocationType&lt;/code&gt; parameter to the &lt;code&gt;pfnInternalAllocation&lt;/code&gt; and &lt;code&gt;pfnInternalFree&lt;/code&gt; functions &lt;strong&gt;may&lt;/strong&gt; be one of the following values:</source>
          <target state="translated">&lt;code&gt;pfnInternalAllocation&lt;/code&gt; 和 &lt;code&gt;pfnInternalFree&lt;/code&gt; 函数的 &lt;code&gt;allocationType&lt;/code&gt; 参数&lt;strong&gt;可以&lt;/strong&gt;是以下值之一：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9208fb7d824f2e25273322b1c289f85a81d56011" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;dstSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指定存在的调用指令的方面 &lt;code&gt;dstImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89b27277fa7d3c762a21d5045eda290d8437f41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only have a single bit set</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;imageSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;只有一个位集</target>
        </trans-unit>
        <trans-unit id="cd0aabac8c1f4e57c6070b383db299c7ed9dfbdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;imageSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;注明方面存在的调用命令的 &lt;code&gt;VkImage&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="7ef69911448032b954a590d8b4ab46709f1b1c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;pSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only have a single bit set</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;pSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;只有一个位集</target>
        </trans-unit>
        <trans-unit id="1a2ac50691da602236abc3c316dc40d476d6e9e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcSubresource&lt;/code&gt; 和 &lt;code&gt;dstSubresource&lt;/code&gt; 的 &lt;code&gt;aspectMask&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;匹配&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7739efe6f8515d6be193287a2510c512ba32dd5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only contain &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;srcSubresource&lt;/code&gt; 和 &lt;code&gt;dstSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;只包含 &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8a668103a793a4c5f78621bfeabb92ee8fb0192" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;aspectMask&lt;/code&gt; 成员 &lt;code&gt;srcSubresource&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;指定存在的调用指令的方面 &lt;code&gt;srcImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ffd43a312df9c04539b119b8f8063686f366931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">所述 &lt;code&gt;attachment&lt;/code&gt; 的任何元件的构件 &lt;code&gt;pPreserveAttachments&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a658f5616ac7579cb84d2327bd4afb667045174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;components&lt;/code&gt; member is of type &lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;, and describes a remapping from components of the image to components of the vector returned by shader image instructions. This remapping &lt;strong&gt;must&lt;/strong&gt; be identity for storage image descriptors, input attachment descriptors, and framebuffer attachments.</source>
          <target state="translated">所述 &lt;code&gt;components&lt;/code&gt; 构件是类型的&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;，并且描述从图像的部件的重新映射到由着色图像的指令返回的矢量的分量。此重新映射&lt;strong&gt;必须&lt;/strong&gt;是存储映像描述符，输入附件描述符和帧缓冲区附件的标识。</target>
        </trans-unit>
        <trans-unit id="5022ba94cb8f1cb9169875c347c47ef768a718c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the size of &lt;code&gt;dstBuffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; 的给定元素的 &lt;code&gt;dstOffset&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;dstBuffer&lt;/code&gt; 的大小&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4179b26376c3717ac1687e25b940341b2d51085a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstSet&lt;/code&gt; member of any given element of &lt;code&gt;pDescriptorWrites&lt;/code&gt; or &lt;code&gt;pDescriptorCopies&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be used by any command that was recorded to a command buffer which is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;dstSet&lt;/code&gt; 的任何给定元件的构件 &lt;code&gt;pDescriptorWrites&lt;/code&gt; 或 &lt;code&gt;pDescriptorCopies&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不是由已记录到命令缓冲器这在任何命令中使用&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;挂起状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf3ac74c25ae62b8a50f87e93a803a9a7382aec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; parameters correspond to parameters that would be consumed by &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt; (as members of &lt;code&gt;VkImageCreateInfo&lt;/code&gt;).</source>
          <target state="translated">的 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; ，和 &lt;code&gt;flags&lt;/code&gt; 参数对应于将被消耗参数&lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;（作为成员 &lt;code&gt;VkImageCreateInfo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ce207943cad80baf419b1027cf8041ba094f6bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;layerCount&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcSubresource&lt;/code&gt; 和 &lt;code&gt;dstSubresource&lt;/code&gt; 的 &lt;code&gt;layerCount&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;匹配&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8d416b6dd2086a1ff80cbb1a61027d4220f4baa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; member of any given element of &lt;code&gt;pMapEntries&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;dataSize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pMapEntries&lt;/code&gt; 的任何给定元素的 &lt;code&gt;offset&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;dataSize&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a195e5a4b60dd6f929c9d741bef093a8ae1ff241" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; support sparse binding operations</source>
          <target state="translated">该 &lt;code&gt;queue&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;支持稀疏绑定操作</target>
        </trans-unit>
        <trans-unit id="7bec009564a27ca8c448cae5fc259332e4497907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queueFamilyIndex&lt;/code&gt; member of any given element of &lt;code&gt;pQueueCreateInfos&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique within &lt;code&gt;pQueueCreateInfos&lt;/code&gt;</source>
          <target state="translated">所述 &lt;code&gt;queueFamilyIndex&lt;/code&gt; 的任何给定元件的构件 &lt;code&gt;pQueueCreateInfos&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是内是唯一的 &lt;code&gt;pQueueCreateInfos&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ad1795334fdbcef4a2616878687ac5356f416ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; 的给定元素的 &lt;code&gt;size&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;大于 &lt;code&gt;0&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06fa7f4c2f577925722d6b841abcf5e2e8def858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;dstBuffer&lt;/code&gt; minus &lt;code&gt;dstOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; 的给定元素的 &lt;code&gt;size&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;dstBuffer&lt;/code&gt; 的大小减去 &lt;code&gt;dstOffset&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baa59e566284f2915b55fbe4ee5d5502f87b84c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;srcBuffer&lt;/code&gt; minus &lt;code&gt;srcOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; 的给定元素的 &lt;code&gt;size&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;srcBuffer&lt;/code&gt; 的大小减去 &lt;code&gt;srcOffset&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea198012feca8b705519f06a5c3ab91c0ad4e205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of the &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure returned from a call to &lt;code&gt;vkGetBufferMemoryRequirements&lt;/code&gt; with &lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;memoryOffset&lt;/code&gt;</source>
          <target state="translated">从带 &lt;code&gt;buffer&lt;/code&gt; &lt;code&gt;vkGetBufferMemoryRequirements&lt;/code&gt; 调用返回的 &lt;code&gt;VkMemoryRequirements&lt;/code&gt; 结构的 &lt;code&gt;size&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;memory&lt;/code&gt; 大小减去 &lt;code&gt;memoryOffset&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9a29a2a7cff8c5858ab31f947fce664e5d3355e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of the &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure returned from a call to &lt;code&gt;vkGetImageMemoryRequirements&lt;/code&gt; with &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;memoryOffset&lt;/code&gt;</source>
          <target state="translated">从带有 &lt;code&gt;image&lt;/code&gt; &lt;code&gt;vkGetImageMemoryRequirements&lt;/code&gt; 的调用返回的 &lt;code&gt;VkMemoryRequirements&lt;/code&gt; 结构的 &lt;code&gt;size&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;memory&lt;/code&gt; 大小减去 &lt;code&gt;memoryOffset&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9669ae793ae82330efaddc4f1b6d2fa46b88c9f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcOffset&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the size of &lt;code&gt;srcBuffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; 的给定元素的 &lt;code&gt;srcOffset&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;srcBuffer&lt;/code&gt; 的大小&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81e0298bb5065344438754e72da780e874a08bda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt; members of any element of the &lt;code&gt;pDependencies&lt;/code&gt; member of &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt; used to create &lt;code&gt;renderpass&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported by the capabilities of the queue family identified by the &lt;code&gt;queueFamilyIndex&lt;/code&gt; member of the &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt; used to create the command pool which &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from.</source>
          <target state="translated">的 &lt;code&gt;srcStageMask&lt;/code&gt; 和 &lt;code&gt;dstStageMask&lt;/code&gt; 所述的任何元素的成员 &lt;code&gt;pDependencies&lt;/code&gt; 的构件&lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt;用于创建 &lt;code&gt;renderpass&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;由由所识别的队列系列的功能来支持 &lt;code&gt;queueFamilyIndex&lt;/code&gt; 所述的构件&lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;用来创建命令池 &lt;code&gt;commandBuffer&lt;/code&gt; 从分配。</target>
        </trans-unit>
        <trans-unit id="b99262b28fb7dccc209dbd02b496d24c845e46c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;stage&lt;/code&gt; 的构件 &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2131814b7a766b5bdad85ee3d3e6b699bb3d4ee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of any given element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;stage&lt;/code&gt; 的任何给定元件的构件 &lt;code&gt;pStages&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能 &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d8427f84a2a5c1038381fe9e7a78f48c0f2f554" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of each element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; 的每个元素的 &lt;code&gt;stage&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;唯一&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c92a170278fc9e2375a9c31f51c31e661dcc7123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of one element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; 的一个元素的 &lt;code&gt;stage&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;为 &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de59a62f2f7bb4d74251ebbbc8a205285ce0a8b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendorID&lt;/code&gt; and &lt;code&gt;deviceID&lt;/code&gt; fields are provided to allow applications to adapt to device characteristics that are not adequately exposed by other Vulkan queries. These &lt;strong&gt;may&lt;/strong&gt; include performance profiles, hardware errata, or other characteristics. In PCI-based implementations, the low sixteen bits of &lt;code&gt;vendorID&lt;/code&gt; and &lt;code&gt;deviceID&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain (respectively) the PCI vendor and device IDs associated with the hardware device, and the remaining bits &lt;strong&gt;must&lt;/strong&gt; be set to zero. In non-PCI implementations, the choice of what values to return &lt;strong&gt;may&lt;/strong&gt; be dictated by operating system or platform policies. It is otherwise at the discretion of the implementer, subject to the following constraints and guidelines:</source>
          <target state="translated">提供了 &lt;code&gt;vendorID&lt;/code&gt; 和 &lt;code&gt;deviceID&lt;/code&gt; 字段，以允许应用程序适应其他Vulkan查询未充分展示的设备特征。这些&lt;strong&gt;可能&lt;/strong&gt;包括性能配置文件，硬件勘误或其他特征。在基于PCI的实现中， &lt;code&gt;vendorID&lt;/code&gt; 和 &lt;code&gt;deviceID&lt;/code&gt; 的低16位&lt;strong&gt;必须&lt;/strong&gt;（分别）包含与硬件设备关联的PCI供应商和设备ID，并且其余位&lt;strong&gt;必须&lt;/strong&gt;设置为零。在非PCI实现的什么值选择返回&lt;strong&gt;可能&lt;/strong&gt;由操作系统或平台策略决定。否则，由实施者酌情决定，并遵守以下约束和准则：</target>
        </trans-unit>
        <trans-unit id="098acafb535ec82abe3012050d1ddeb9d907617a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be either &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是要么 &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b631d0fa293d233953fa510afeb1f8cfbceacecb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; command is not affected by the bound pipeline state.</source>
          <target state="translated">该 &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; 命令不受绑定管道的状态。</target>
        </trans-unit>
        <trans-unit id="2bea4edeeb2adeeb9646a6a6a2589e895a239096" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;depth&lt;/code&gt; members of a &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; parameter &lt;strong&gt;must&lt;/strong&gt; always match the width, height, and depth of the image subresource corresponding to the parameter, respectively.</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;参数的 &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;depth&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;始终分别与对应于该参数的图像子资源的宽度，高度和深度匹配。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0635954591f6bf9ebe5b5db6f4150676dfdbb8fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members of &lt;code&gt;offset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 的 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;大于或等于 &lt;code&gt;0&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c535841c90dccbb28542ab36ddf70b40c863195f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; members of a &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; parameter &lt;strong&gt;must&lt;/strong&gt; always be zero.</source>
          <target state="translated">&lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;参数的 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 成员&lt;strong&gt;必须&lt;/strong&gt;始终为零。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93bc96eebd3423677fc3784258f8ff1eae3acfdd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;binding range&lt;/em&gt; [&lt;code&gt;resourceOffset&lt;/code&gt;, &lt;code&gt;resourceOffset&lt;/code&gt; + &lt;code&gt;size&lt;/code&gt;) has different constraints based on &lt;code&gt;flags&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt;, the binding range &lt;strong&gt;must&lt;/strong&gt; be within the mip tail region of the metadata aspect. This metadata region is defined by:</source>
          <target state="translated">的&lt;em&gt;结合范围&lt;/em&gt; [ &lt;code&gt;resourceOffset&lt;/code&gt; ， &lt;code&gt;resourceOffset&lt;/code&gt; + &lt;code&gt;size&lt;/code&gt; ）具有基于不同的约束 &lt;code&gt;flags&lt;/code&gt; 。如果 &lt;code&gt;flags&lt;/code&gt; 包含 &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; ，则绑定范围&lt;strong&gt;必须&lt;/strong&gt;在元数据方面的Mip尾部区域内。此元数据区域由以下方式定义：</target>
        </trans-unit>
        <trans-unit id="22aa6e117b686a7c031d033f6507c3c8e014fa61" translate="yes" xml:space="preserve">
          <source>The above also applies when &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; is used in combination with &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt;. In this case, the returned availability status &lt;strong&gt;may&lt;/strong&gt; reflect the result of a previous use of the query unless the &lt;code&gt;vkCmdResetQueryPool&lt;/code&gt; command has been executed since the last use of the query.</source>
          <target state="translated">当 &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; 与 &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; 结合使用时，以上内容同样适用。在这种情况下，除非自上次使用查询以来已执行 &lt;code&gt;vkCmdResetQueryPool&lt;/code&gt; 命令，否则返回的可用性状态&lt;strong&gt;可能&lt;/strong&gt;反映该查询先前的使用结果。</target>
        </trans-unit>
        <trans-unit id="cf89bfed9ea09ce48da4c21e3ce94056c57420ac" translate="yes" xml:space="preserve">
          <source>The above guarantee avoids a potential memory corruption in scenarios where host writes to a mapped memory object have not been flushed before the memory is unmapped (or freed), and the virtual address range is subsequently reused for a different mapping (or memory allocation).</source>
          <target state="translated">上述保证避免了主机对被映射的内存对象的写入在内存被解除映射(或释放)之前没有被刷新,而虚拟地址范围随后被重新用于不同的映射(或内存分配)的情况下可能出现的内存损坏。</target>
        </trans-unit>
        <trans-unit id="56daef2d3a345c981074d0521a3db38efd169062" translate="yes" xml:space="preserve">
          <source>The above layout definition allows the descriptor bindings to be specified sparsely such that not all binding numbers between 0 and the maximum binding number need to be specified in the &lt;code&gt;pBindings&lt;/code&gt; array. Bindings that are not specified have a &lt;code&gt;descriptorCount&lt;/code&gt; and &lt;code&gt;stageFlags&lt;/code&gt; of zero, and the &lt;code&gt;descriptorType&lt;/code&gt; is treated as undefined. However, all binding numbers between 0 and the maximum binding number in the &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;::&lt;code&gt;pBindings&lt;/code&gt; array &lt;strong&gt;may&lt;/strong&gt; consume memory in the descriptor set layout even if not all descriptor bindings are used, though it &lt;strong&gt;should&lt;/strong&gt; not consume additional memory from the descriptor pool.</source>
          <target state="translated">上面的布局定义允许稀疏指定描述符绑定，以便不需要在 &lt;code&gt;pBindings&lt;/code&gt; 数组中指定0到最大绑定数之间的所有绑定数。未指定的绑定的 &lt;code&gt;descriptorCount&lt;/code&gt; 和 &lt;code&gt;stageFlags&lt;/code&gt; 为零，并且 &lt;code&gt;descriptorType&lt;/code&gt; 被视为未定义。但是，即使没有使用所有描述符绑定，&lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt; :: &lt;code&gt;pBindings&lt;/code&gt; 数组中介于0和最大绑定数之间的所有绑定号&lt;strong&gt;可能会&lt;/strong&gt;消耗描述符集布局中的内存，尽管它&lt;strong&gt;不应&lt;/strong&gt;消耗描述符池中的额外内存。</target>
        </trans-unit>
        <trans-unit id="80cb686d3f7b8d3d2a7c9259bbdd943307d90e08" translate="yes" xml:space="preserve">
          <source>The absolute value of &lt;code&gt;mipLodBias&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxSamplerLodBias&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mipLodBias&lt;/code&gt; 的绝对值&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxSamplerLodBias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acea91dc9ebaac70dd26e5b7789fd22f7fc73c17" translate="yes" xml:space="preserve">
          <source>The allocated descriptor sets are returned in &lt;code&gt;pDescriptorSets&lt;/code&gt;.</source>
          <target state="translated">分配的描述符集在 &lt;code&gt;pDescriptorSets&lt;/code&gt; 中返回。</target>
        </trans-unit>
        <trans-unit id="710d39fa7e15c8f09a8933107fedfa184e5e96eb" translate="yes" xml:space="preserve">
          <source>The attachment is not used or preserved in subpass &lt;strong&gt;S&lt;/strong&gt;.</source>
          <target state="translated">附件未在子通道&lt;strong&gt;S中&lt;/strong&gt;使用或保留。</target>
        </trans-unit>
        <trans-unit id="9b505f0513266dbafc4a3eb5b69b264af27413db" translate="yes" xml:space="preserve">
          <source>The attachment is used as a color, depth/stencil, or resolve attachment in any subpass in the render pass.</source>
          <target state="translated">该附件在渲染通道中的任何子通道中作为颜色、深度/网纹或解析附件使用。</target>
        </trans-unit>
        <trans-unit id="a6a0f359d66b01efceb00826f885257f4c5b9851" translate="yes" xml:space="preserve">
          <source>The bias value o for a polygon is</source>
          <target state="translated">多边形的偏置值o为</target>
        </trans-unit>
        <trans-unit id="aa5717c4b74219f0b6297b247fb605cb3fb4ff46" translate="yes" xml:space="preserve">
          <source>The blending operation produces a new set of values R, G, B and A, which are written to the framebuffer attachment. If blending is not enabled for this attachment, then R, G, B and A are assigned R&lt;sub&gt;s0&lt;/sub&gt;, G&lt;sub&gt;s0&lt;/sub&gt;, B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt;, respectively.</source>
          <target state="translated">混合操作将产生一组新的值R，G，B和A，这些值将被写入帧缓冲区附件。如果未为此附件启用混合，则分别为R，G，B和A分配R &lt;sub&gt;s0&lt;/sub&gt;，G &lt;sub&gt;s0&lt;/sub&gt;，B &lt;sub&gt;s0&lt;/sub&gt;和A &lt;sub&gt;s0&lt;/sub&gt;。</target>
        </trans-unit>
        <trans-unit id="565496b76a3aa0506509ae2ced78c3cc7301c7f4" translate="yes" xml:space="preserve">
          <source>The buffer region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstBuffer&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的缓冲区区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;dstBuffer&lt;/code&gt; 中包含的区域</target>
        </trans-unit>
        <trans-unit id="86296d853eed9afa2ea25b351f82b90c9ff01780" translate="yes" xml:space="preserve">
          <source>The buffer region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcBuffer&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的缓冲区区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;srcBuffer&lt;/code&gt; 中包含的区域</target>
        </trans-unit>
        <trans-unit id="5f019de8b8f115f7409d4cc544afe149fa8d33df" translate="yes" xml:space="preserve">
          <source>The color write mask operation is applied regardless of whether blending is enabled.</source>
          <target state="translated">无论是否启用混合,都会应用颜色写入蒙版操作。</target>
        </trans-unit>
        <trans-unit id="12d74f95e1e366bc99f8bb0f59524468df0c88e4" translate="yes" xml:space="preserve">
          <source>The combination of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported, as indicated by a &lt;code&gt;VK_SUCCESS&lt;/code&gt; return value from &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; invoked with the same values passed to the corresponding parameters.</source>
          <target state="translated">&lt;strong&gt;必须&lt;/strong&gt;支持 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;imageType&lt;/code&gt; ， &lt;code&gt;tiling&lt;/code&gt; ， &lt;code&gt;usage&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 的组合，这是通过从 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 调用的 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 返回值指示的，并使用传递给相应参数的相同值来表示。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00f46cc5ae868f238e8b29b2f3b4e69fd8dad4bf" translate="yes" xml:space="preserve">
          <source>The command pool&amp;rsquo;s queue family &lt;strong&gt;must&lt;/strong&gt; support a non-zero &lt;code&gt;timestampValidBits&lt;/code&gt;</source>
          <target state="translated">命令池的队列系列&lt;strong&gt;必须&lt;/strong&gt;支持非零的 &lt;code&gt;timestampValidBits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2eb3c0c02419238d4ae7042a76a78181edb689e" translate="yes" xml:space="preserve">
          <source>The conditions leading to an optimal &lt;code&gt;renderArea&lt;/code&gt; are:</source>
          <target state="translated">导致最佳 &lt;code&gt;renderArea&lt;/code&gt; 的条件是：</target>
        </trans-unit>
        <trans-unit id="50cb7c27ca8d62fb8fe3f0b869c6048232e2ce62" translate="yes" xml:space="preserve">
          <source>The contents of an attachment within the render area become undefined at the start of a subpass &lt;strong&gt;S&lt;/strong&gt; if all of the following conditions are true:</source>
          <target state="translated">如果满足以下所有条件，则在子通道&lt;strong&gt;S&lt;/strong&gt;的开始处，渲染区域内附件的内容将变得不确定：</target>
        </trans-unit>
        <trans-unit id="a81b652043754cc83df106b77ecdb9353fb11230" translate="yes" xml:space="preserve">
          <source>The created descriptor pool is returned in &lt;code&gt;pDescriptorPool&lt;/code&gt;.</source>
          <target state="translated">创建的描述符池在 &lt;code&gt;pDescriptorPool&lt;/code&gt; 中返回。</target>
        </trans-unit>
        <trans-unit id="c756ee750341c4330bf0825cc0ec5072a4791252" translate="yes" xml:space="preserve">
          <source>The current render pass &lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;compatible&lt;/a&gt; with the &lt;code&gt;renderPass&lt;/code&gt; member of the &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure specified when creating the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;.</source>
          <target state="translated">当前渲染过程&lt;strong&gt;必须&lt;/strong&gt;是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;兼容&lt;/a&gt;与 &lt;code&gt;renderPass&lt;/code&gt; 所述的构件 &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; 创建时结构中指定 &lt;code&gt;VkPipeline&lt;/code&gt; 当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b523df2a28c7478cef06a2fb3291fd00d2d3a575" translate="yes" xml:space="preserve">
          <source>The current subpass index &lt;strong&gt;must&lt;/strong&gt; be equal to the number of subpasses in the render pass minus one</source>
          <target state="translated">当前子通道索引&lt;strong&gt;必须&lt;/strong&gt;等于渲染通道中的子通道数量减去1</target>
        </trans-unit>
        <trans-unit id="a83e57eda77585091f28f607f26e101161189cf2" translate="yes" xml:space="preserve">
          <source>The current subpass index &lt;strong&gt;must&lt;/strong&gt; be less than the number of subpasses in the render pass minus one</source>
          <target state="translated">当前子通道索引&lt;strong&gt;必须&lt;/strong&gt;小于渲染通道中的子通道数量减一</target>
        </trans-unit>
        <trans-unit id="b97b5e972908be5dcd30074a9cd15f959831395c" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用了 &lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="35ecdff218ae9491544c29302f00f3c55f7f4e92" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="a4e8acb181b547d821366967d07461678b13b736" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="15942d1ea9b7ed8626bf0053742c26b804840926" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用了 &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="9b23210ee9f0b7a0c91428b46063dc08a54f0775" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用了 &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="db4d20d8da07c85e1330290da187eb65d77d7f8a" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用了 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="09c254f63a832e7453a4d843cd3f7ac08a60c41d" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="88d292a68900a85230c2c67d1f7b53571615fb90" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用了 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="30b15ce9e6e3d2a0477f955a8c618f174e78b8ff" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">当前绑定的图形管道&lt;strong&gt;必须&lt;/strong&gt;已在启用 &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 动态状态的情况下创建</target>
        </trans-unit>
        <trans-unit id="db8a84e06d4430264416004b8e4c0843b3045a85" translate="yes" xml:space="preserve">
          <source>The definition of &lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt; is:</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;的定义是：</target>
        </trans-unit>
        <trans-unit id="cfe93afb35386af9625bca9df468f2cf686963f7" translate="yes" xml:space="preserve">
          <source>The depth bounds test conditionally disables coverage of a sample based on the outcome of a comparison between the value z&lt;sub&gt;a&lt;/sub&gt; in the depth attachment at location (x&lt;sub&gt;f&lt;/sub&gt;,y&lt;sub&gt;f&lt;/sub&gt;) (for the appropriate sample) and a range of values. The test is enabled or disabled by the &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; member of &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;: If the pipeline state object is created without the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; dynamic state enabled then the range of values used in the depth bounds test are defined by the &lt;code&gt;minDepthBounds&lt;/code&gt; and &lt;code&gt;maxDepthBounds&lt;/code&gt; members of the &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; structure. Otherwise, to dynamically set the depth bounds range values call:</source>
          <target state="translated">深度范围测试基于位置（x &lt;sub&gt;f&lt;/sub&gt;，y &lt;sub&gt;f&lt;/sub&gt;）（对于适当的样品）的深度附件中的值z &lt;sub&gt;a&lt;/sub&gt;与值范围之间的比较结果，有条件地禁用样品的覆盖范围。该试验通过在启用或禁用 &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; 的构件&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;：如果没有在创建流水线状态对象 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; 动态状态然后启用在深度界限试验中使用由定义的值的范围 &lt;code&gt;minDepthBounds&lt;/code&gt; 和 &lt;code&gt;maxDepthBounds&lt;/code&gt; 的成员&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;&lt;sub&gt;&lt;/sub&gt;&lt;sub&gt;&lt;/sub&gt;结构体。否则，要动态设置深度边界范围值，请调用：</target>
        </trans-unit>
        <trans-unit id="e41c7161827f899f311a2e5859f58e0b3a33000f" translate="yes" xml:space="preserve">
          <source>The depth values of all fragments generated by the rasterization of a polygon &lt;strong&gt;can&lt;/strong&gt; be offset by a single value that is computed for that polygon. This behavior is controlled by the &lt;code&gt;depthBiasEnable&lt;/code&gt;, &lt;code&gt;depthBiasConstantFactor&lt;/code&gt;, &lt;code&gt;depthBiasClamp&lt;/code&gt;, and &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; members of &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;, or by the corresponding parameters to the &lt;code&gt;vkCmdSetDepthBias&lt;/code&gt; command if depth bias state is dynamic.</source>
          <target state="translated">通过多边形的栅格化生成的所有片段的深度值&lt;strong&gt;可以&lt;/strong&gt;偏移为该多边形计算的单个值。此行为由 &lt;code&gt;depthBiasEnable&lt;/code&gt; ， &lt;code&gt;depthBiasConstantFactor&lt;/code&gt; ， &lt;code&gt;depthBiasClamp&lt;/code&gt; 和 &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; 成员&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;控制&lt;/a&gt;，如果深度偏差状态为动态， &lt;code&gt;vkCmdSetDepthBias&lt;/code&gt; 命令的相应参数控制。</target>
        </trans-unit>
        <trans-unit id="a5425ef20d59c0a9036bace40c57cd217d1c9cc0" translate="yes" xml:space="preserve">
          <source>The descriptor set contents bound by a call to &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; be consumed during host execution of the command, or during shader execution of the resulting draws, or any time in between. Thus, the contents &lt;strong&gt;must&lt;/strong&gt; not be altered (overwritten by an update command, or freed) between when the command is recorded and when the command completes executing on the queue. The contents of &lt;code&gt;pDynamicOffsets&lt;/code&gt; are consumed immediately during execution of &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt;. Once all pending uses have completed, it is legal to update and reuse a descriptor set.</source>
          <target state="translated">通过调用 &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt; 绑定的描述符集内容&lt;strong&gt;可以&lt;/strong&gt;在命令的主机执行过程中，着色器的着色器执行过程中或介于两者之间的任何时间使用。因此，内容&lt;strong&gt;必须&lt;/strong&gt;不被改变时该命令被记录，并且当命令完成队列上执行之间（由更新命令重写，或释放）。在执行 &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt; 时,立即消耗 &lt;code&gt;pDynamicOffsets&lt;/code&gt; 的内容。一旦所有待定用途都已完成，就可以更新和重用描述符集。</target>
        </trans-unit>
        <trans-unit id="aea000d1fdd9247f509123a494a5b76770e7469b" translate="yes" xml:space="preserve">
          <source>The destination region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的目标区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;dstImage&lt;/code&gt; 中包含的区域</target>
        </trans-unit>
        <trans-unit id="aa509db1bafcc77f4615a0c63ca921a0db9a046e" translate="yes" xml:space="preserve">
          <source>The details of the merge operation are implementation dependent, but implementations &lt;strong&gt;should&lt;/strong&gt; merge the contents of the specified pipelines and prune duplicate entries.</source>
          <target state="translated">合并操作的详细信息取决于实现，但是实现&lt;strong&gt;应&lt;/strong&gt;合并指定管道的内容并修剪重复条目。</target>
        </trans-unit>
        <trans-unit id="1488e0aea1834f68f8a9f1b9bc881fefc6fef565" translate="yes" xml:space="preserve">
          <source>The device has been lost. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;.</source>
          <target state="translated">设备已丢失。请参阅&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;丢失的设备&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="382f5e2cfd135b2147657b9579d44f1365f64c13" translate="yes" xml:space="preserve">
          <source>The effective offset used for dynamic uniform and storage buffer bindings is the sum of the relative offset taken from &lt;code&gt;pDynamicOffsets&lt;/code&gt;, and the base address of the buffer plus base offset in the descriptor set. The length of the dynamic uniform and storage buffer bindings is the buffer range as specified in the descriptor set.</source>
          <target state="translated">用于动态统一和存储缓冲区绑定的有效偏移量是从 &lt;code&gt;pDynamicOffsets&lt;/code&gt; 获取的相对偏移量与缓冲区的基地址加描述符集中的基本偏移量之和。动态统一和存储缓冲区绑定的长度是描述符集中指定的缓冲区范围。</target>
        </trans-unit>
        <trans-unit id="c678a8ed2a8ebdb69e8ccabf05f91ff6439cc752" translate="yes" xml:space="preserve">
          <source>The elements of the sample mask array are of type &lt;code&gt;VkSampleMask&lt;/code&gt;, each representing 32 bits of coverage information:</source>
          <target state="translated">样本掩码数组的元素类型为 &lt;code&gt;VkSampleMask&lt;/code&gt; ，每个元素代表32位的覆盖率信息：</target>
        </trans-unit>
        <trans-unit id="0dfb1028299f1ad35aa097a44ef59c28589e3f02" translate="yes" xml:space="preserve">
          <source>The equivalent to &lt;code&gt;newLayout&lt;/code&gt; is the attachment&amp;rsquo;s layout according to the subpass description for &lt;code&gt;dstSubpass&lt;/code&gt;.</source>
          <target state="translated">相当于 &lt;code&gt;newLayout&lt;/code&gt; 是根据用于subpass描述附件的布局 &lt;code&gt;dstSubpass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede059e8d00eb9bd9d71af3a314286f9b8949d16" translate="yes" xml:space="preserve">
          <source>The equivalent to &lt;code&gt;oldLayout&lt;/code&gt; is the attachment&amp;rsquo;s layout according to the subpass description for &lt;code&gt;srcSubpass&lt;/code&gt;.</source>
          <target state="translated">相当于 &lt;code&gt;oldLayout&lt;/code&gt; 是根据用于subpass描述附件的布局 &lt;code&gt;srcSubpass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6e7639cbfe2fcd1c2eb8819c9d33d36a596d133" translate="yes" xml:space="preserve">
          <source>The event specified by &lt;code&gt;event&lt;/code&gt; is signaled.</source>
          <target state="translated">由事件指定的 &lt;code&gt;event&lt;/code&gt; 会发出信号。</target>
        </trans-unit>
        <trans-unit id="e9cafdd1b0b8f15c2a15b98715b015b1e9e5bd6d" translate="yes" xml:space="preserve">
          <source>The event specified by &lt;code&gt;event&lt;/code&gt; is unsignaled.</source>
          <target state="translated">由event指定的 &lt;code&gt;event&lt;/code&gt; 没有信号。</target>
        </trans-unit>
        <trans-unit id="65fd257ce7422e177bd432e60ee56ddc16f07848" translate="yes" xml:space="preserve">
          <source>The exact image view type is partially implicit, based on the image&amp;rsquo;s type and sample count, as well as the view creation parameters as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-views-compatibility&quot;&gt;image view compatibility table&lt;/a&gt; for &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;. This table also shows which SPIR-V &lt;code&gt;OpTypeImage&lt;/code&gt;&lt;code&gt;Dim&lt;/code&gt; and &lt;code&gt;Arrayed&lt;/code&gt; parameters correspond to each image view type.</source>
          <target state="translated">确切的图像视图类型是部分隐式的，基于图像的类型和样本数以及视图创建参数，如&lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-views-compatibility&quot;&gt;图像视图兼容性表&lt;/a&gt;中所述。该表还显示了对应于每种图像视图类型的SPIR-V &lt;code&gt;OpTypeImage&lt;/code&gt; &lt;code&gt;Dim&lt;/code&gt; 和 &lt;code&gt;Arrayed&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="d838b31a1114821e01aa666eead8d7ced1ed8285" translate="yes" xml:space="preserve">
          <source>The fence specified by &lt;code&gt;fence&lt;/code&gt; is signaled.</source>
          <target state="translated">栅栏指定的 &lt;code&gt;fence&lt;/code&gt; 会发出信号。</target>
        </trans-unit>
        <trans-unit id="edc73308b803087d7dc3897a77cef8cbe639790c" translate="yes" xml:space="preserve">
          <source>The fence specified by &lt;code&gt;fence&lt;/code&gt; is unsignaled.</source>
          <target state="translated">栅栏指定的 &lt;code&gt;fence&lt;/code&gt; 没有信号。</target>
        </trans-unit>
        <trans-unit id="d00b25d47ef03526f1da69bb81bc43cf61e6d9b3" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;. It is also limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于由 &lt;code&gt;srcStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;源阶段掩码&lt;/a&gt;确定的管道阶段中的访问。它还限于 &lt;code&gt;srcAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;源访问掩码&lt;/a&gt;中的访问类型。</target>
        </trans-unit>
        <trans-unit id="0dd28dd06912021101bc65025a2011470efbf7e3" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;. Within that, the first access scope only includes the first access scopes defined by elements of the &lt;code&gt;pMemoryBarriers&lt;/code&gt;, &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; and &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; arrays, which each define a set of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;memory barriers&lt;/a&gt;. If no memory barriers are specified, then the first access scope includes no accesses.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于由 &lt;code&gt;srcStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;源阶段掩码&lt;/a&gt;确定的管道阶段中的访问。其中，第一访问范围仅包括由 &lt;code&gt;pMemoryBarriers&lt;/code&gt; ， &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; 和 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; 数组的元素定义的第一访问范围，它们各自定义了一组&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;存储屏障&lt;/a&gt;。如果未指定内存屏障，则第一个访问范围不包括任何访问。</target>
        </trans-unit>
        <trans-unit id="e492da86eede953cfa6a34c65b9acbf693f0d25b" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified buffer range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;. If &lt;code&gt;srcAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;, memory writes performed by that access type are also made visible, as that access type is not performed through a resource.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于通过 &lt;code&gt;srcAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;源访问掩码&lt;/a&gt;中的访问类型，通过指定的缓冲区范围访问内存。如果 &lt;code&gt;srcAccessMask&lt;/code&gt; 包括 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; ，则该访问类型执行的内存写操作也将变为可见，因为该访问类型不是通过资源执行的。</target>
        </trans-unit>
        <trans-unit id="9247f95b382b547d5c431d1543727dd6f02b99ae" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified image subresource range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;. If &lt;code&gt;srcAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;, memory writes performed by that access type are also made visible, as that access type is not performed through a resource.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于通过 &lt;code&gt;srcAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;源访问掩码&lt;/a&gt;中的访问类型，通过指定的图像子资源范围访问内存。如果 &lt;code&gt;srcAccessMask&lt;/code&gt; 包括 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; ，则该访问类型执行的内存写操作也将变为可见，因为该访问类型不是通过资源执行的。</target>
        </trans-unit>
        <trans-unit id="1abeefbc36a3864c139f34e0e0319c20852afa1b" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于 &lt;code&gt;srcAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;源访问掩码&lt;/a&gt;中的访问类型。</target>
        </trans-unit>
        <trans-unit id="7b60353fa8805fa41f7ddc5f7b05159d0fb40a24" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes every command previously submitted to the same queue, including those in the same command buffer and batch. The synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;stageMask&lt;/code&gt;.</source>
          <target state="translated">第一个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步作用域&lt;/a&gt;包括先前提交给相同队列的每个命令，包括相同命令缓冲区和批处理中的命令。同步范围仅限于由 &lt;code&gt;stageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;源阶段掩码所&lt;/a&gt;确定的流水线阶段上的操作。</target>
        </trans-unit>
        <trans-unit id="9882c112cd2476eacde68f380835624749568289" translate="yes" xml:space="preserve">
          <source>The first four bytes encode the length of the entire pipeline header, in bytes. This value includes all fields in the header including the pipeline cache version field and the size of the length field.</source>
          <target state="translated">前四个字节对整个管道头的长度进行编码,单位为字节。该值包括管线缓存版本字段和长度字段的大小在内的所有字段。</target>
        </trans-unit>
        <trans-unit id="e5cf8c105b1ba372cb813ecaa7b2b837623dfbe2" translate="yes" xml:space="preserve">
          <source>The first step of polygon rasterization is to determine whether the triangle is &lt;em&gt;back-facing&lt;/em&gt; or &lt;em&gt;front-facing&lt;/em&gt;. This determination is made based on the sign of the (clipped or unclipped) polygon&amp;rsquo;s area computed in framebuffer coordinates. One way to compute this area is:</source>
          <target state="translated">多边形栅格化的第一步是确定三角形是&lt;em&gt;背面的&lt;/em&gt;还是&lt;em&gt;正面的&lt;/em&gt;。根据在帧缓冲区坐标中计算的（剪切或未剪切）多边形区域的符号来进行此确定。计算该面积的一种方法是：</target>
        </trans-unit>
        <trans-unit id="226d5138064ec81a9e29b2c08e1448b087198c8b" translate="yes" xml:space="preserve">
          <source>The first synchronization scope only includes event signal operations that operate on members of &lt;code&gt;pEvents&lt;/code&gt;, and the operations that happened-before the event signal operations. Event signal operations performed by &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; that were previously submitted to the same queue are included in the first synchronization scope, if the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in their &lt;code&gt;stageMask&lt;/code&gt; parameter is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earlier&lt;/a&gt; than or equal to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in &lt;code&gt;srcStageMask&lt;/code&gt;. Event signal operations performed by &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt; are only included in the first synchronization scope if &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; is included in &lt;code&gt;srcStageMask&lt;/code&gt;.</source>
          <target state="translated">第一个同步作用域仅包括对 &lt;code&gt;pEvents&lt;/code&gt; 成员进行操作的事件信号操作，以及在事件信号操作之前发生的操作。通过进行事件信号操作&lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt;先前提交到相同的队列包括在第一同步范围，如果&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑上最新的&lt;/a&gt;在他们的流水线阶段 &lt;code&gt;stageMask&lt;/code&gt; 参数是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑上早&lt;/a&gt;于或等于&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;逻辑上最新&lt;/a&gt;的流水线阶段 &lt;code&gt;srcStageMask&lt;/code&gt; 。如果 &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; ,则由&lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt;执行的事件信号操作仅包括在第一个同步范围内包含在 &lt;code&gt;srcStageMask&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="209d85e794f8ee6dafb8b2b39e6c6f87b0930ab1" translate="yes" xml:space="preserve">
          <source>The first vertex index is at an offset of &lt;code&gt;firstIndex&lt;/code&gt; * &lt;code&gt;indexSize&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt; within the currently bound index buffer, where &lt;code&gt;offset&lt;/code&gt; is the offset specified by &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt; and &lt;code&gt;indexSize&lt;/code&gt; is the byte size of the type specified by &lt;code&gt;indexType&lt;/code&gt;. Subsequent index values are retrieved from consecutive locations in the index buffer. Indices are first compared to the primitive restart value, then zero extended to 32 bits (if the &lt;code&gt;indexType&lt;/code&gt; is &lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt;) and have &lt;code&gt;vertexOffset&lt;/code&gt; added to them, before being supplied as the &lt;code&gt;vertexIndex&lt;/code&gt; value.</source>
          <target state="translated">第一个顶点索引位于当前绑定索引缓冲区内的 &lt;code&gt;firstIndex&lt;/code&gt; * &lt;code&gt;indexSize&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt; 的偏移处，其中 &lt;code&gt;offset&lt;/code&gt; 是 &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt; 指定的偏移量， &lt;code&gt;indexSize&lt;/code&gt; 是 &lt;code&gt;indexType&lt;/code&gt; 指定的类型的字节大小。从索引缓冲区中的连续位置检索后续索引值。首先将索引与原始重新启动值进行比较，然后将零扩展为32位（如果 &lt;code&gt;indexType&lt;/code&gt; 为 &lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt; ）， &lt;code&gt;vertexOffset&lt;/code&gt; 添加vertexOffset，然后再将其作为 &lt;code&gt;vertexIndex&lt;/code&gt; 值提供。</target>
        </trans-unit>
        <trans-unit id="991b1d3304070211ebd8bee1a42b0cc6edfaf3b0" translate="yes" xml:space="preserve">
          <source>The floating-point viewport bounds are represented with an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-viewportSubPixelBits&quot;&gt;implementation-dependent precision&lt;/a&gt;.</source>
          <target state="translated">浮点视口边界以&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-viewportSubPixelBits&quot;&gt;实现相关的精度表示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd1d8138f684f4b42c62c0e61b0a0709ff681bf3" translate="yes" xml:space="preserve">
          <source>The following bits &lt;strong&gt;may&lt;/strong&gt; be set in &lt;code&gt;bufferFeatures&lt;/code&gt;, specifying that the features are supported by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBuffer&quot;&gt;buffers&lt;/a&gt; or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBufferView&quot;&gt;buffer views&lt;/a&gt; created with the queried &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;::&lt;code&gt;format&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;在 &lt;code&gt;bufferFeatures&lt;/code&gt; 中设置以下位，以指定由查询的&lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt; :: &lt;code&gt;format&lt;/code&gt; 创建的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBuffer&quot;&gt;缓冲区&lt;/a&gt;或&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBufferView&quot;&gt;缓冲区视图&lt;/a&gt;支持这些功能：</target>
        </trans-unit>
        <trans-unit id="4ef3009d4b093b8b62b75a7072a32392af20ca1d" translate="yes" xml:space="preserve">
          <source>The following bits &lt;strong&gt;may&lt;/strong&gt; be set in &lt;code&gt;linearTilingFeatures&lt;/code&gt; and &lt;code&gt;optimalTilingFeatures&lt;/code&gt;, specifying that the features are supported by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImage&quot;&gt;images&lt;/a&gt; or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImageView&quot;&gt;image views&lt;/a&gt; created with the queried &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt;::&lt;code&gt;format&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;在 &lt;code&gt;linearTilingFeatures&lt;/code&gt; 和 &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 设置以下位，指定使用查询的&lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; :: &lt;code&gt;format&lt;/code&gt; 创建的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImage&quot;&gt;图像&lt;/a&gt;或&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImageView&quot;&gt;图像视图&lt;/a&gt;支持这些功能：</target>
        </trans-unit>
        <trans-unit id="bd1f625cbc9aa7c902aedf2870a8d2cf96df52f1" translate="yes" xml:space="preserve">
          <source>The following filtering and conversion rules apply:</source>
          <target state="translated">适用以下过滤和转换规则。</target>
        </trans-unit>
        <trans-unit id="cae5ac67a733200806eb81fde4ed63ac0ed45839" translate="yes" xml:space="preserve">
          <source>The formats of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible. Formats are considered compatible if their element size is the same between both formats. For example, &lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; is compatible with &lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; because both texels are 4 bytes in size. Depth/stencil formats &lt;strong&gt;must&lt;/strong&gt; match exactly.</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; 和 &lt;code&gt;dstImage&lt;/code&gt; 的格式&lt;strong&gt;必须&lt;/strong&gt;兼容。如果两种格式之间的元素大小相同，则认为格式兼容。例如， &lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; 与 &lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; 兼容，因为两个纹理像素的大小均为4个字节。深度/模板格式&lt;strong&gt;必须&lt;/strong&gt;完全匹配。</target>
        </trans-unit>
        <trans-unit id="04adf0d7f1a5f2426d3d8f06212b1af0c925fb2b" translate="yes" xml:space="preserve">
          <source>The four array elements of the clear color map to R, G, B, and A components of image formats, in order.</source>
          <target state="translated">清色图的四个数组元素依次为R、G、B、A四种图像格式的组成部分。</target>
        </trans-unit>
        <trans-unit id="a35b898f1e242dcd8c287423a0b0a63288499113" translate="yes" xml:space="preserve">
          <source>The framebuffer depth coordinate &lt;code&gt;z&lt;/code&gt;&lt;sub&gt;f&lt;/sub&gt;&lt;strong&gt;may&lt;/strong&gt; be represented using either a fixed-point or floating-point representation. However, a floating-point representation &lt;strong&gt;must&lt;/strong&gt; be used if the depth/stencil attachment has a floating-point depth component. If an m-bit fixed-point representation is used, we assume that it represents each value \(\frac{k}{2^m - 1}\), where k &amp;isin; { 0, 1, &amp;hellip;​, 2&lt;sup&gt;m&lt;/sup&gt;-1 }, as k (e.g. 1.0 is represented in binary as a string of all ones).</source>
          <target state="translated">帧缓冲器深度坐标 &lt;code&gt;z&lt;/code&gt; &lt;sub&gt;f &lt;/sub&gt;&lt;strong&gt;可以&lt;/strong&gt;使用定点或浮点表示来表示。但是，如果深度/模板附件具有浮点深度分量，则&lt;strong&gt;必须&lt;/strong&gt;使用浮点表示。如果使用一个m位的定点表示，我们假设它代表每个值\（\压裂{K} {2 ^ M - 1} \），其中k&amp;isin;{0，1，...，2 &lt;sup&gt;米&lt;/sup&gt; - 1}，表示为k（例如1.0以二进制形式表示为全1的字符串）。</target>
        </trans-unit>
        <trans-unit id="5cbf55345bdb079a7ed741287eac1621828d53c6" translate="yes" xml:space="preserve">
          <source>The functions &lt;strong&gt;must&lt;/strong&gt; not use offsets.</source>
          <target state="translated">该功能&lt;strong&gt;必须&lt;/strong&gt;不使用偏移。</target>
        </trans-unit>
        <trans-unit id="94407d47d1ad9d03bb3c6a49b92c83d857c2c4cc" translate="yes" xml:space="preserve">
          <source>The functions &lt;strong&gt;must&lt;/strong&gt; not use projection.</source>
          <target state="translated">该功能&lt;strong&gt;必须&lt;/strong&gt;不使用投影。</target>
        </trans-unit>
        <trans-unit id="c34e2145e54dd65f98a2cefdff1129eef069a554" translate="yes" xml:space="preserve">
          <source>The image layout of each image subresource &lt;strong&gt;must&lt;/strong&gt; be well-defined at each point in the image subresource&amp;rsquo;s lifetime. This means that when performing a layout transition on the image subresource, the old layout value &lt;strong&gt;must&lt;/strong&gt; either equal the current layout of the image subresource (at the time the transition executes), or else be &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; (implying that the contents of the image subresource need not be preserved). The new layout used in a transition &lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt;.</source>
          <target state="translated">每个图像子资源的图像布局&lt;strong&gt;必须&lt;/strong&gt;在图像子资源的生命周期中的每个点上得到明确定义。这意味着在对图像子资源执行布局转换时，旧的布局值&lt;strong&gt;必须&lt;/strong&gt;等于图像子资源的当前布局（执行转换时），或者为 &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; （这意味着需要图像子资源的内容）不保留）。在过渡中使用的新的布局&lt;strong&gt;一定&lt;/strong&gt;不能 &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; 或 &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5f1c20b719b66c6c83edc199dc2b044d8a1ebc" translate="yes" xml:space="preserve">
          <source>The image region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的图像区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;dstImage&lt;/code&gt; 中包含的区域</target>
        </trans-unit>
        <trans-unit id="892ac42f1e7b7aceb128464b30a7eeb57420eedb" translate="yes" xml:space="preserve">
          <source>The image region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的图像区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;srcImage&lt;/code&gt; 内包含的区域</target>
        </trans-unit>
        <trans-unit id="3ede74731e52c6a1967502c1cc7f16d29ef00b4f" translate="yes" xml:space="preserve">
          <source>The image view &lt;strong&gt;must&lt;/strong&gt; have a single layer and a single mip level.</source>
          <target state="translated">图像视图&lt;strong&gt;必须&lt;/strong&gt;具有单个图层和单个mip级别。</target>
        </trans-unit>
        <trans-unit id="c15cd9e119bbc69cabd2468d1d58352a3bf63a07" translate="yes" xml:space="preserve">
          <source>The implementation &lt;strong&gt;may&lt;/strong&gt; update the commitment at any time, and the value returned by this query &lt;strong&gt;may&lt;/strong&gt; be out of date.</source>
          <target state="translated">该实现&lt;strong&gt;可以&lt;/strong&gt;随时更新承诺，并且此查询返回的值&lt;strong&gt;可能&lt;/strong&gt;已过期。</target>
        </trans-unit>
        <trans-unit id="9a97052903fd73a84d038a3ddccbc30dcd8095bb" translate="yes" xml:space="preserve">
          <source>The implementation guarantees to allocate any committed memory from the heapIndex indicated by the memory type that the memory object was created with.</source>
          <target state="translated">实现保证从内存对象创建的内存类型所指示的heapIndex中分配任何承诺的内存。</target>
        </trans-unit>
        <trans-unit id="19b2e86ba5bb4b04756279e82d8c41a7f822004c" translate="yes" xml:space="preserve">
          <source>The intent of the &lt;code&gt;viewportBoundsRange&lt;/code&gt; limit is to allow a maximum sized viewport to be arbitrarily shifted relative to the output target as long as at least some portion intersects. This would give a bounds limit of [-&lt;code&gt;size&lt;/code&gt; + 1, 2 &amp;times; &lt;code&gt;size&lt;/code&gt; - 1] which would allow all possible non-empty-set intersections of the output target and the viewport. Since these numbers are typically powers of two, picking the signed number range using the smallest possible number of bits ends up with the specified range.</source>
          <target state="translated">&lt;code&gt;viewportBoundsRange&lt;/code&gt; 限制的目的是允许最大尺寸的视口相对于输出目标任意移动，只要至少某些部分相交即可。这将提供[ &lt;code&gt;size&lt;/code&gt; + 1，2&amp;times; &lt;code&gt;size&lt;/code&gt; -1] 的边界限制，这将允许输出目标和视口的所有可能的非空集相交。由于这些数字通常是2的幂，因此使用可能的最小位数来选择带符号的数字范围将最终达到指定的范围。</target>
        </trans-unit>
        <trans-unit id="01c644decf9778ee405c3f7c2b0b19933a5a310a" translate="yes" xml:space="preserve">
          <source>The interpretation of the sign of a is determined by the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;frontFace&lt;/code&gt; property of the currently active pipeline. Possible values are:</source>
          <target state="translated">对a符号的解释由当前活动管道的&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;frontFace&lt;/code&gt; 属性确定。可能的值为：</target>
        </trans-unit>
        <trans-unit id="75dbbbf2271598e9e3e9f03d07ff97c2ebc46d6e" translate="yes" xml:space="preserve">
          <source>The layers [&lt;code&gt;baseArrayLayer&lt;/code&gt;, &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt;) counting from the base layer of the attachment image view are cleared.</source>
          <target state="translated">从附件图像视图的基础层开始计数的层[ &lt;code&gt;baseArrayLayer&lt;/code&gt; ， &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt; ）被清除。</target>
        </trans-unit>
        <trans-unit id="a522dd3a9e2bec0bfdbcca03c0a13cd6e00d81e8" translate="yes" xml:space="preserve">
          <source>The layers specified by a given element of &lt;code&gt;pRects&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be contained within every attachment that &lt;code&gt;pAttachments&lt;/code&gt; refers to</source>
          <target state="translated">由 &lt;code&gt;pRects&lt;/code&gt; 的给定元素指定的层&lt;strong&gt;必须&lt;/strong&gt;包含在 &lt;code&gt;pAttachments&lt;/code&gt; 所引用的每个附件中</target>
        </trans-unit>
        <trans-unit id="9e3fdd959cb433bb8274942cbab7498212e6f1f5" translate="yes" xml:space="preserve">
          <source>The least significant s bits of &lt;code&gt;writeMask&lt;/code&gt;, where s is the number of bits in the stencil framebuffer attachment, specify an integer mask. Where a 1 appears in this mask, the corresponding bit in the stencil value in the depth/stencil attachment is written; where a 0 appears, the bit is not written. The &lt;code&gt;writeMask&lt;/code&gt; value uses either the front-facing or back-facing state based on the facingness of the fragment. Fragments generated by front-facing primitives use the front mask and fragments generated by back-facing primitives use the back mask.</source>
          <target state="translated">&lt;code&gt;writeMask&lt;/code&gt; 的最低有效s位（其中s是模板帧缓冲区附件中的位数）指定整数掩码。如果此掩码中出现1，则写入深度/模板附件中的模板值中的相应位；如果出现0，则不会写入该位。所述 &lt;code&gt;writeMask&lt;/code&gt; 值既可使用或者基于该片段的facingness背面朝向的状态前置。正面图元生成的片段使用前遮罩，而背面图元生成的片段使用后遮罩。</target>
        </trans-unit>
        <trans-unit id="fa20fe39416a6a68c7f67744c98d8433a97b537c" translate="yes" xml:space="preserve">
          <source>The lifetime of each of these objects is bound by the lifetime of the &lt;code&gt;VkDevice&lt;/code&gt; object. Therefore, to avoid resource leaks, it is critical that an application explicitly free all of these resources prior to calling &lt;code&gt;vkDestroyDevice&lt;/code&gt;.</source>
          <target state="translated">每个对象的生存期都受 &lt;code&gt;VkDevice&lt;/code&gt; 对象的生存期约束。因此，为了避免资源泄漏，至关重要的是，应用程序在调用 &lt;code&gt;vkDestroyDevice&lt;/code&gt; 之前显式释放所有这些资源。</target>
        </trans-unit>
        <trans-unit id="cc45a5dee0c4acaae7037b99992ba48c0a396491" translate="yes" xml:space="preserve">
          <source>The limitations on an image format that are reported by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; have the following property: if &lt;code&gt;usage1&lt;/code&gt; and &lt;code&gt;usage2&lt;/code&gt; of type &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt; are such that the bits set in &lt;code&gt;usage1&lt;/code&gt; are a subset of the bits set in &lt;code&gt;usage2&lt;/code&gt;, and &lt;code&gt;flags1&lt;/code&gt; and &lt;code&gt;flags2&lt;/code&gt; of type &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt; are such that the bits set in &lt;code&gt;flags1&lt;/code&gt; are a subset of the bits set in &lt;code&gt;flags2&lt;/code&gt;, then the limitations for &lt;code&gt;usage1&lt;/code&gt; and &lt;code&gt;flags1&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be no more strict than the limitations for &lt;code&gt;usage2&lt;/code&gt; and &lt;code&gt;flags2&lt;/code&gt;, for all values of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;tiling&lt;/code&gt;.</source>
          <target state="translated">由报告上的图像格式的限制 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 具有以下属性：如果 &lt;code&gt;usage1&lt;/code&gt; 和 &lt;code&gt;usage2&lt;/code&gt; 类型的&lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt;，在设定的位是这样 &lt;code&gt;usage1&lt;/code&gt; 是在设定的位的子集 &lt;code&gt;usage2&lt;/code&gt; ，和 &lt;code&gt;flags1&lt;/code&gt; 和 &lt;code&gt;flags2&lt;/code&gt; 类型的&lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt;是这样在设置的位 &lt;code&gt;flags1&lt;/code&gt; 是在设定的位的子集 &lt;code&gt;flags2&lt;/code&gt; ，那么对于局限性 &lt;code&gt;usage1&lt;/code&gt; 和 &lt;code&gt;flags1&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不大于用于限制更加严格 &lt;code&gt;usage2&lt;/code&gt; 和 &lt;code&gt;flags2&lt;/code&gt; ，用于 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;tiling&lt;/code&gt; 所有值。</target>
        </trans-unit>
        <trans-unit id="8a09d5f518198a7cce50d94354298702d1f57a8a" translate="yes" xml:space="preserve">
          <source>The line width is specified by the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;lineWidth&lt;/code&gt; property of the currently active pipeline, if the pipeline was not created with &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; enabled.</source>
          <target state="translated">如果未在启用了 &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; 的情况下创建管道，&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;则由&lt;/a&gt;当前活动管道的VkPipelineRasterizationStateCreateInfo :: &lt;code&gt;lineWidth&lt;/code&gt; 属性指定线宽。</target>
        </trans-unit>
        <trans-unit id="21c35b4cd4f78eec84ee719ba63db9d6e71098ff" translate="yes" xml:space="preserve">
          <source>The list of available layers may change at any time due to actions outside of the Vulkan implementation, so two calls to &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; with the same parameters &lt;strong&gt;may&lt;/strong&gt; return different results, or retrieve different &lt;code&gt;pPropertyCount&lt;/code&gt; values or &lt;code&gt;pProperties&lt;/code&gt; contents. Once an instance has been created, the layers enabled for that instance will continue to be enabled and valid for the lifetime of that instance, even if some of them become unavailable for future instances.</source>
          <target state="translated">可用层的列表可能会由于Vulkan实现之外的动作而随时更改，因此使用相同参数两次调用 &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; &lt;strong&gt;可能会&lt;/strong&gt;返回不同的结果，或检索不同的 &lt;code&gt;pPropertyCount&lt;/code&gt; 值或 &lt;code&gt;pProperties&lt;/code&gt; 内容。创建实例后，为该实例启用的图层将在该实例的生存期内继续启用并有效，即使其中某些图层对于将来的实例不再可用。</target>
        </trans-unit>
        <trans-unit id="d310f949025d9c3b6e405c6130bf52ef1570b7a8" translate="yes" xml:space="preserve">
          <source>The list of layers enumerated by &lt;code&gt;vkEnumerateDeviceLayerProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be exactly the sequence of layers enabled for the instance. The members of &lt;code&gt;VkLayerProperties&lt;/code&gt; for each enumerated layer &lt;strong&gt;must&lt;/strong&gt; be the same as the properties when the layer was enumerated by &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vkEnumerateDeviceLayerProperties&lt;/code&gt; 枚举的层列表&lt;strong&gt;必须&lt;/strong&gt;完全是为实例启用的层序列。成员 &lt;code&gt;VkLayerProperties&lt;/code&gt; 对于每个列举的层&lt;strong&gt;必须&lt;/strong&gt;是相同的属性，当层被列举 &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c54041801eda282f39fd289fd982911bd81cd6a9" translate="yes" xml:space="preserve">
          <source>The load operation for each sample in an attachment happens-before any recorded command which accesses the sample in the first subpass where the attachment is used. Load operations for attachments with a depth/stencil format execute in the &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; pipeline stage. Load operations for attachments with a color format execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage.</source>
          <target state="translated">附件中每个样本的加载操作发生在使用该附件的第一个子通道中访问该样本的任何记录命令之前。在 &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; 流水线阶段执行具有深度/模板格式的附件的加载操作。在 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; 流水线阶段执行具有彩色格式的附件的加载操作。</target>
        </trans-unit>
        <trans-unit id="c5d36db236467e630781781820ef25da66dc89f9" translate="yes" xml:space="preserve">
          <source>The logical operations supported by Vulkan are summarized in the following table in which</source>
          <target state="translated">Vulkan支持的逻辑操作总结在下表中,其中包括</target>
        </trans-unit>
        <trans-unit id="b21dc053bc23767c6ac2408bd1ce4520f8987da2" translate="yes" xml:space="preserve">
          <source>The loop will find the first supported memory type that has all bits requested in &lt;code&gt;properties&lt;/code&gt; set. If there is no exact match, it will find a closest match (i.e. a memory type with the fewest additional bits set), which has some additional bits set but which are not detrimental to the behaviors requested by &lt;code&gt;properties&lt;/code&gt;. The application &lt;strong&gt;can&lt;/strong&gt; first search for the optimal properties, e.g. a memory type that is device-local or supports coherent cached accesses, as appropriate for the intended usage, and if such a memory type is not present &lt;strong&gt;can&lt;/strong&gt; fallback to searching for a less optimal but guaranteed set of properties such as &quot;0&quot; or &quot;host-visible and coherent&quot;.</source>
          <target state="translated">循环将找到第一个受支持的内存类型，该类型在 &lt;code&gt;properties&lt;/code&gt; 设置了所有请求的位。如果没有精确匹配，它将找到最接近的匹配（即，具有最少的附加位设置的内存类型），其中设置了一些附加的位，但对 &lt;code&gt;properties&lt;/code&gt; 请求的行为无害。应用程序&lt;strong&gt;可以&lt;/strong&gt;首先搜索最佳属性，例如适合于预期用途的设备本地或支持相干缓存访问的内存类型，如果不存在这种内存类型，则&lt;strong&gt;可以&lt;/strong&gt;回退到搜索次优但不理想的内存。有保证的一组属性，例如&amp;ldquo; 0&amp;rdquo;或&amp;ldquo;主机可见且一致&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="995eda1a70ec08ec89320329b625b396e654f896" translate="yes" xml:space="preserve">
          <source>The maximum binding number specified &lt;strong&gt;should&lt;/strong&gt; be as compact as possible to avoid wasted memory.</source>
          <target state="translated">指定的最大绑定数&lt;strong&gt;应&lt;/strong&gt;尽可能紧凑，以避免浪费内存。</target>
        </trans-unit>
        <trans-unit id="616d28f646176989bd55e2bd369eb2ba19eb70c8" translate="yes" xml:space="preserve">
          <source>The maximum depth slope m of a triangle is</source>
          <target state="translated">三角形的最大深度斜率m为</target>
        </trans-unit>
        <trans-unit id="ff4cba9613e626822043f05bf920927c34eec76f" translate="yes" xml:space="preserve">
          <source>The maximum number of sampler objects which &lt;strong&gt;can&lt;/strong&gt; be simultaneously created on a device is implementation-dependent and specified by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxSamplerAllocationCount&quot;&gt;&lt;code&gt;maxSamplerAllocationCount&lt;/code&gt;&lt;/a&gt; member of the &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; structure. If &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; is exceeded, &lt;code&gt;vkCreateSampler&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;在设备上同时创建的采样器对象的最大数量取决于实现，并由&lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;结构的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxSamplerAllocationCount&quot;&gt; &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; &lt;/a&gt;成员指定。如果 &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; 超标， &lt;code&gt;vkCreateSampler&lt;/code&gt; 将返回 &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90cd38f4b464a3432f018619ea0071c10e747e97" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; have the same meaning as the corresponding parameters of &lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;.</source>
          <target state="translated">成员 &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; 的含义的对应参数相同&lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14baae74c405bc18501d4ba5cc537cdc44a0a87b" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; have the same meaning as the similarly named parameters of &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;.</source>
          <target state="translated">成员 &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; 的含义的类似命名的参数相同&lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3288d42822a2455af438790164fcffae8eb874ec" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; have the same meaning as the similarly named parameters of &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;.</source>
          <target state="translated">成员 &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; 的含义的类似命名的参数相同&lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c97573a7af91d954ed4268af359c5e58ef05a387" translate="yes" xml:space="preserve">
          <source>The members of the &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure describe the following features:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; 结构的成员描述以下功能：</target>
        </trans-unit>
        <trans-unit id="505119ad4d2e5684e52a41f2bba617951853b92f" translate="yes" xml:space="preserve">
          <source>The memory types are sorted according to a preorder which serves to aid in easily selecting an appropriate memory type. Given two memory types X and Y, the preorder defines X &amp;le; Y if:</source>
          <target state="translated">根据预排序对存储器类型进行排序，这有助于轻松选择合适的存储器类型。给定两种存储类型X和Y，如果满足以下条件，则预定义项定义X&amp;le;Y：</target>
        </trans-unit>
        <trans-unit id="80605179896eebbaf6d577b8d97722595f0a8318" translate="yes" xml:space="preserve">
          <source>The minimum resolvable difference r is an implementation-dependent parameter that depends on the depth buffer representation. It is the smallest difference in framebuffer coordinate z values that is guaranteed to remain distinct throughout polygon rasterization and in the depth buffer. All pairs of fragments generated by the rasterization of two polygons with otherwise identical vertices, but &lt;code&gt;z&lt;/code&gt;&lt;sub&gt;f&lt;/sub&gt; values that differ by $r$, will have distinct depth values.</source>
          <target state="translated">最小可分辨差r是取决于深度缓冲区表示形式的与实现相关的参数。它是帧缓冲区坐标z值的最小差异，可以保证在整个多边形栅格化过程中和深度缓冲区中保持不同。通过对具有其他相同顶点的两个多边形进行栅格化生成的所有片段对，但 &lt;code&gt;z&lt;/code&gt; &lt;sub&gt;f&lt;/sub&gt;值相差$ r $，将具有不同的深度值。</target>
        </trans-unit>
        <trans-unit id="47cb5d8e8308ace41c4e8bbb0d7a80b52a8a959b" translate="yes" xml:space="preserve">
          <source>The next four bytes encode the pipeline cache version, as described for &lt;a href=&quot;#VkPipelineCacheHeaderVersion&quot;&gt;VkPipelineCacheHeaderVersion&lt;/a&gt;. A consumer of the pipeline cache &lt;strong&gt;should&lt;/strong&gt; use the cache version to interpret the remainder of the cache header.</source>
          <target state="translated">接下来的四个字节编码管道缓存版本，如&lt;a href=&quot;#VkPipelineCacheHeaderVersion&quot;&gt;VkPipelineCacheHeaderVersion所述&lt;/a&gt;。管道缓存的使用者&lt;strong&gt;应&lt;/strong&gt;使用缓存版本来解释缓存头的其余部分。</target>
        </trans-unit>
        <trans-unit id="8afa81f4b8f83682ea74a96c252fe19922dd6416" translate="yes" xml:space="preserve">
          <source>The number of currently valid memory objects, allocated from &lt;code&gt;device&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxMemoryAllocationCount&lt;/code&gt;</source>
          <target state="translated">从目前分配有效的内存对象的数量， &lt;code&gt;device&lt;/code&gt; ，&lt;strong&gt;必须&lt;/strong&gt;小于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27bcba543f3b8fcaa92f36b0ac111deedee57783" translate="yes" xml:space="preserve">
          <source>The number of memory heaps is given by &lt;code&gt;memoryHeapCount&lt;/code&gt; and is less than or equal to &lt;code&gt;VK_MAX_MEMORY_HEAPS&lt;/code&gt;. Each heap is described by an element of the &lt;code&gt;memoryHeaps&lt;/code&gt; array, as a &lt;code&gt;VkMemoryHeap&lt;/code&gt; structure. The number of memory types available across all memory heaps is given by &lt;code&gt;memoryTypeCount&lt;/code&gt; and is less than or equal to &lt;code&gt;VK_MAX_MEMORY_TYPES&lt;/code&gt;. Each memory type is described by an element of the &lt;code&gt;memoryTypes&lt;/code&gt; array, as a &lt;code&gt;VkMemoryType&lt;/code&gt; structure.</source>
          <target state="translated">存储器堆的数量由下式给出 &lt;code&gt;memoryHeapCount&lt;/code&gt; 和小于或等于 &lt;code&gt;VK_MAX_MEMORY_HEAPS&lt;/code&gt; 。每个堆都由 &lt;code&gt;memoryHeaps&lt;/code&gt; 数组的一个元素描述为 &lt;code&gt;VkMemoryHeap&lt;/code&gt; 结构。所有内存堆中可用的内存类型数量由 &lt;code&gt;memoryTypeCount&lt;/code&gt; 给出，并且小于或等于 &lt;code&gt;VK_MAX_MEMORY_TYPES&lt;/code&gt; 。每种内存类型都由 &lt;code&gt;memoryTypes&lt;/code&gt; 数组的元素描述为 &lt;code&gt;VkMemoryType&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="b29e231064fb1df3c6fab2d55c43140a54071327" translate="yes" xml:space="preserve">
          <source>The number of mipmap levels and array layers &lt;strong&gt;must&lt;/strong&gt; be a subset of the image subresources in the image. If an application wants to use all mip levels or layers in an image after the &lt;code&gt;baseMipLevel&lt;/code&gt; or &lt;code&gt;baseArrayLayer&lt;/code&gt;, it &lt;strong&gt;can&lt;/strong&gt; set &lt;code&gt;levelCount&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; to the special values &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; and &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; without knowing the exact number of mip levels or layers.</source>
          <target state="translated">Mipmap级别和数组层的数量&lt;strong&gt;必须&lt;/strong&gt;是图像中图像子资源的子集。如果应用程序要在 &lt;code&gt;baseMipLevel&lt;/code&gt; 或 &lt;code&gt;baseArrayLayer&lt;/code&gt; 之后使用图像中的所有mip层或层，则&lt;strong&gt;可以&lt;/strong&gt;在不知道mip层或层的确切数量的情况下将 &lt;code&gt;levelCount&lt;/code&gt; 和 &lt;code&gt;layerCount&lt;/code&gt; 设置为特殊值 &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; 和 &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ed39edae73d76ac42d8a69ae041c1fcc20f53bc" translate="yes" xml:space="preserve">
          <source>The only dispatchable handle types are those related to device and instance management, such as &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;.</source>
          <target state="translated">唯一可调度的句柄类型是与设备和实例管理相关的那些，例如&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afd8787b69bad10b575fb80b4dfa15422c680947" translate="yes" xml:space="preserve">
          <source>The operations described by &lt;code&gt;pDescriptorWrites&lt;/code&gt; are performed first, followed by the operations described by &lt;code&gt;pDescriptorCopies&lt;/code&gt;. Within each array, the operations are performed in the order they appear in the array.</source>
          <target state="translated">首先执行 &lt;code&gt;pDescriptorWrites&lt;/code&gt; 描述的操作，然后执行 &lt;code&gt;pDescriptorCopies&lt;/code&gt; 描述的操作。在每个阵列中，操作按照它们在阵列中出现的顺序执行。</target>
        </trans-unit>
        <trans-unit id="923e10c411c35319f50e382bd9bf0fb30ed088b5" translate="yes" xml:space="preserve">
          <source>The order that batches appear in &lt;code&gt;pSubmits&lt;/code&gt; is used to determine &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, and thus all the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;implicit ordering guarantees&lt;/a&gt; that respect it. Other than these implicit ordering guarantees and any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;explicit synchronization primitives&lt;/a&gt;, these batches &lt;strong&gt;may&lt;/strong&gt; overlap or otherwise execute out of order.</source>
          <target state="translated">批处理出现在 &lt;code&gt;pSubmits&lt;/code&gt; 中的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;顺序&lt;/a&gt;用于确定提交顺序，因此所有&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;隐式顺序都保证&lt;/a&gt;遵守该顺序。除了这些隐式排序保证和任何&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;显式同步原语之外&lt;/a&gt;，这些批处理&lt;strong&gt;可能会&lt;/strong&gt;重叠或以乱序执行。</target>
        </trans-unit>
        <trans-unit id="03caeed9e9b76b5e07d7a14fe5121cbd51f413da" translate="yes" xml:space="preserve">
          <source>The order that command buffers appear in &lt;code&gt;pCommandBuffers&lt;/code&gt; is used to determine &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, and thus all the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;implicit ordering guarantees&lt;/a&gt; that respect it. Other than these implicit ordering guarantees and any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;explicit synchronization primitives&lt;/a&gt;, these command buffers &lt;strong&gt;may&lt;/strong&gt; overlap or otherwise execute out of order.</source>
          <target state="translated">命令缓冲区在 &lt;code&gt;pCommandBuffers&lt;/code&gt; 中出现的顺序用于确定&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;提交顺序&lt;/a&gt;，因此所有&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;隐式顺序都保证&lt;/a&gt;遵守该顺序。除了这些隐式排序保证和任何&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;显式的同步原语之外&lt;/a&gt;，这些命令缓冲区&lt;strong&gt;可能会&lt;/strong&gt;重叠或以乱序方式执行。</target>
        </trans-unit>
        <trans-unit id="c29e914c1a526cfa427002d4f1bffe096286e626" translate="yes" xml:space="preserve">
          <source>The parameters &lt;code&gt;basePipelineHandle&lt;/code&gt; and &lt;code&gt;basePipelineIndex&lt;/code&gt; are described in more detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;Pipeline Derivatives&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;管道导数&lt;/a&gt;中更详细地描述了参数 &lt;code&gt;basePipelineHandle&lt;/code&gt; 和 &lt;code&gt;basePipelineIndex&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d286c2ef5a6ff8aab82721babd54208fe2849c02" translate="yes" xml:space="preserve">
          <source>The physical device type is advertised for informational purposes only, and does not directly affect the operation of the system. However, the device type &lt;strong&gt;may&lt;/strong&gt; correlate with other advertised properties or capabilities of the system, such as how many memory heaps there are.</source>
          <target state="translated">物理设备类型仅用于提供信息，并不直接影响系统的运行。但是，设备类型&lt;strong&gt;可能&lt;/strong&gt;与系统的其他公告属性或功能相关，例如有多少内存堆。</target>
        </trans-unit>
        <trans-unit id="4b29bf4b5e836d9f3d51dfcbe4523a7f092a970b" translate="yes" xml:space="preserve">
          <source>The physical device types which &lt;strong&gt;may&lt;/strong&gt; be returned in &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;::&lt;code&gt;deviceType&lt;/code&gt; are:</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt; :: &lt;code&gt;deviceType&lt;/code&gt; 中&lt;strong&gt;可能&lt;/strong&gt;返回的物理设备类型为：</target>
        </trans-unit>
        <trans-unit id="2aedfd5cc6c8d033512036428a65bf9e6126a794" translate="yes" xml:space="preserve">
          <source>The pointer was formed by &lt;code&gt;OpImageTexelPointer&lt;/code&gt; and the coordinate is less than zero or greater than or equal to the number of whole elements in the bound range.</source>
          <target state="translated">指针由 &lt;code&gt;OpImageTexelPointer&lt;/code&gt; 组成，坐标小于零或大于或等于绑定范围内整个元素的数量。</target>
        </trans-unit>
        <trans-unit id="7563ec807a5ce8fbc00db84f7c5f303c0cb1bc99" translate="yes" xml:space="preserve">
          <source>The pointer was not formed by &lt;code&gt;OpImageTexelPointer&lt;/code&gt; and the object pointed to is not wholly contained within the bound range.</source>
          <target state="translated">指针不是由 &lt;code&gt;OpImageTexelPointer&lt;/code&gt; 组成的，指向的对象并不完全包含在绑定范围内。</target>
        </trans-unit>
        <trans-unit id="49873c50bc0914c555ae9d7b4a97c8c756d0bcf2" translate="yes" xml:space="preserve">
          <source>The primitives are drawn &lt;code&gt;instanceCount&lt;/code&gt; times with &lt;code&gt;instanceIndex&lt;/code&gt; starting with &lt;code&gt;firstInstance&lt;/code&gt; and increasing sequentially for each instance. The assembled primitives execute the currently bound graphics pipeline.</source>
          <target state="translated">绘制的图元的 &lt;code&gt;instanceCount&lt;/code&gt; 时间为 &lt;code&gt;instanceIndex&lt;/code&gt; ，实例 &lt;code&gt;firstInstance&lt;/code&gt; 从firstInstance开始，并针对每个实例依次增加。组装的原语执行当前绑定的图形管线。</target>
        </trans-unit>
        <trans-unit id="7ee888620b6d92a077de76e1d5068b36fde50c6b" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;em&gt;unavailable&lt;/em&gt;</source>
          <target state="translated">通过鉴定查询 &lt;code&gt;queryPool&lt;/code&gt; 和 &lt;code&gt;query&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;是&lt;em&gt;不可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="430d591cef795a700ee99c31e8cc8ed1982e478a" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unavailable</source>
          <target state="translated">&lt;code&gt;queryPool&lt;/code&gt; 和query标识的 &lt;code&gt;query&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不可用</target>
        </trans-unit>
        <trans-unit id="ad5e6bc01d4d93e1a1cd00b9aa7aeb82fea70e11" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; currently be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">通过鉴定查询 &lt;code&gt;queryPool&lt;/code&gt; 和 &lt;code&gt;query&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;目前是&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;活跃的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3233e363b802b9b2b1809e9837a046e991315b65" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; currently not be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">由 &lt;code&gt;queryPool&lt;/code&gt; 和query标识的 &lt;code&gt;query&lt;/code&gt; 当前&lt;strong&gt;必须&lt;/strong&gt;处于非&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;活动状态&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b44d5ff466b2f60d67cd23579b98ad22895fe39" translate="yes" xml:space="preserve">
          <source>The reason for this is that &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; was only added in a later revision of the 1.0 specification, and so drivers &lt;strong&gt;may&lt;/strong&gt; return other errors if they were written against earlier revisions. To ensure full compatibility with earlier patch revisions, these other errors are allowed.</source>
          <target state="translated">原因是 &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; 仅在1.0规范的更高版本中添加，因此，如果驱动程序是针对较早的版本编写的，则驱动程序&lt;strong&gt;可能会&lt;/strong&gt;返回其他错误。为了确保与早期修补程序版本完全兼容，允许这些其他错误。</target>
        </trans-unit>
        <trans-unit id="2126729d905952e983f7920ee9d94d7f708f7295" translate="yes" xml:space="preserve">
          <source>The rectangular region specified by a given element of &lt;code&gt;pRects&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be contained within the render area of the current render pass instance</source>
          <target state="translated">由 &lt;code&gt;pRects&lt;/code&gt; 的给定元素指定的矩形区域&lt;strong&gt;必须&lt;/strong&gt;包含在当前渲染过程实例的渲染区域内</target>
        </trans-unit>
        <trans-unit id="4200034de68fd5520125f42b1ee9a4d95d814549" translate="yes" xml:space="preserve">
          <source>The result of the logical operation is then written to the color attachment as controlled by the component write mask, described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendoperations&quot;&gt;Blend Operations&lt;/a&gt;.</source>
          <target state="translated">然后，将逻辑运算的结果写入&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendoperations&quot;&gt;混合&lt;/a&gt;附件中由组件写入掩码控制的颜色附件中。</target>
        </trans-unit>
        <trans-unit id="db6f7cce4f2f127b3b9fefdf00e19fa12cf8c56a" translate="yes" xml:space="preserve">
          <source>The returned function pointer &lt;strong&gt;must&lt;/strong&gt; only be called with a dispatchable object (the first parameter) that is &lt;code&gt;device&lt;/code&gt; or a child of &lt;code&gt;device&lt;/code&gt;. e.g. &lt;code&gt;VkDevice&lt;/code&gt;, &lt;code&gt;VkQueue&lt;/code&gt;, or &lt;code&gt;VkCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">返回的函数指针&lt;strong&gt;必须&lt;/strong&gt;只能与可分派对象（第一个参数），它称为 &lt;code&gt;device&lt;/code&gt; 或的子 &lt;code&gt;device&lt;/code&gt; 。例如 &lt;code&gt;VkDevice&lt;/code&gt; ， &lt;code&gt;VkQueue&lt;/code&gt; 或 &lt;code&gt;VkCommandBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd45dc9f64b345f7fd207bc4f48316aa0f73700c" translate="yes" xml:space="preserve">
          <source>The returned function pointer &lt;strong&gt;must&lt;/strong&gt; only be called with a dispatchable object (the first parameter) that is &lt;code&gt;instance&lt;/code&gt; or a child of &lt;code&gt;instance&lt;/code&gt;. e.g. &lt;code&gt;VkInstance&lt;/code&gt;, &lt;code&gt;VkPhysicalDevice&lt;/code&gt;, &lt;code&gt;VkDevice&lt;/code&gt;, &lt;code&gt;VkQueue&lt;/code&gt;, or &lt;code&gt;VkCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">返回函数指针&lt;strong&gt;，必须&lt;/strong&gt;只能用分派对象（第一个参数）被称为 &lt;code&gt;instance&lt;/code&gt; 或子 &lt;code&gt;instance&lt;/code&gt; 。例如 &lt;code&gt;VkInstance&lt;/code&gt; ， &lt;code&gt;VkPhysicalDevice&lt;/code&gt; ， &lt;code&gt;VkDevice&lt;/code&gt; ， &lt;code&gt;VkQueue&lt;/code&gt; 或 &lt;code&gt;VkCommandBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fd911007c0fdb04b2f83ca2b1124bd0986a6634" translate="yes" xml:space="preserve">
          <source>The returned function pointer is of type &lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;, and must be cast to the type of the command being queried.</source>
          <target state="translated">返回的函数指针的类型为&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;，并且必须强制转换为要查询的命令的类型。</target>
        </trans-unit>
        <trans-unit id="c1c1de13ce5bddf5b6ad23affdd8d8c409e5bda8" translate="yes" xml:space="preserve">
          <source>The sample count of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; both be equal to &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; 和 &lt;code&gt;dstImage&lt;/code&gt; 的样本计数&lt;strong&gt;必须&lt;/strong&gt;都等于 &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab936da7e0b1451d7368652115d97a099afc3ff5" translate="yes" xml:space="preserve">
          <source>The sample count of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; 和 &lt;code&gt;dstImage&lt;/code&gt; 的样本计数&lt;strong&gt;必须&lt;/strong&gt;匹配</target>
        </trans-unit>
        <trans-unit id="e6f7bcb4e74f258f6406ced05cf0d3f99cfa7146" translate="yes" xml:space="preserve">
          <source>The scale is determined from the source and destination regions, and applied to the offset coordinates:</source>
          <target state="translated">该比例尺由源区域和目的区域确定,并应用于偏移坐标。</target>
        </trans-unit>
        <trans-unit id="f77ed02958b74de8f16df0a47b32cd8d259a46c5" translate="yes" xml:space="preserve">
          <source>The scissor rectangles taken from element i of &lt;code&gt;pScissors&lt;/code&gt; replace the current state for the scissor index &lt;code&gt;firstScissor&lt;/code&gt; + i, for i in [0, &lt;code&gt;scissorCount&lt;/code&gt;).</source>
          <target state="translated">取自 &lt;code&gt;pScissors&lt;/code&gt; 元素i的剪刀矩形将剪刀索引 &lt;code&gt;firstScissor&lt;/code&gt; + i 的当前状态替换为[0， &lt;code&gt;scissorCount&lt;/code&gt; ）中的i 。</target>
        </trans-unit>
        <trans-unit id="c91ad6cb250a76e2fc75486a4945727818d0d4f5" translate="yes" xml:space="preserve">
          <source>The scissor test determines if a fragment&amp;rsquo;s framebuffer coordinates (x&lt;sub&gt;f&lt;/sub&gt;,y&lt;sub&gt;f&lt;/sub&gt;) lie within the scissor rectangle corresponding to the viewport index (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-viewport&quot;&gt;Controlling the Viewport&lt;/a&gt;) used by the primitive that generated the fragment. If the pipeline state object is created without &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; enabled then the scissor rectangles are set by the &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; state of the pipeline state object. Otherwise, to dynamically set the scissor rectangles call:</source>
          <target state="translated">剪刀测试确定片段的帧缓冲区坐标（x &lt;sub&gt;f&lt;/sub&gt;，y &lt;sub&gt;f&lt;/sub&gt;）是否位于与生成片段的基元使用的视口索引（请参见&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-viewport&quot;&gt;控制视口&lt;/a&gt;）相对应的剪刀矩形内。如果创建管道状态对象时未启用 &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; ,则剪刀矩形由管道状态对象的&lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;状态设置。否则，要动态设置剪刀矩形调用：</target>
        </trans-unit>
        <trans-unit id="d3dace0daa14b4695fc932e3ffc3350a20e7fb12" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;. It is also limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于由 &lt;code&gt;dstStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;目标阶段掩码&lt;/a&gt;确定的管道阶段中的访问。它还限于 &lt;code&gt;dstAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;目标访问掩码&lt;/a&gt;中的访问类型。</target>
        </trans-unit>
        <trans-unit id="b99dd47d746ccb730cbe645c82cd7850c934c379" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;. Within that, the second access scope only includes the second access scopes defined by elements of the &lt;code&gt;pMemoryBarriers&lt;/code&gt;, &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; and &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; arrays, which each define a set of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;memory barriers&lt;/a&gt;. If no memory barriers are specified, then the second access scope includes no accesses.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于由 &lt;code&gt;dstStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;目标阶段掩码所&lt;/a&gt;确定的管道阶段中的访问。在此范围内，第二访问范围仅包括由 &lt;code&gt;pMemoryBarriers&lt;/code&gt; ， &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; 和 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; 数组的元素定义的第二访问范围，它们各自定义了一组&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;存储屏障&lt;/a&gt;。如果未指定内存屏障，则第二访问范围不包括任何访问。</target>
        </trans-unit>
        <trans-unit id="fc7c155367c0099bc4aa84a2f3c60853d1681f42" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified buffer range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt;. specified by &lt;code&gt;dstAccessMask&lt;/code&gt;. If &lt;code&gt;dstAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; or &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;, available memory writes are also made visible to accesses of those types, as those access types are not performed through a resource.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于通过&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;目标访问掩码&lt;/a&gt;中的访问类型，通过指定的缓冲区范围访问内存。由 &lt;code&gt;dstAccessMask&lt;/code&gt; 指定。如果 &lt;code&gt;dstAccessMask&lt;/code&gt; 包含 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 或 &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; ，则这些类型的访问也会看到可用的内存写入，因为这些访问类型不是通过资源执行的。</target>
        </trans-unit>
        <trans-unit id="ef1f1867fa5701d6392b224ff4b170caeb03301a" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified image subresource range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;. If &lt;code&gt;dstAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; or &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;, available memory writes are also made visible to accesses of those types, as those access types are not performed through a resource.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于通过指定的图像子资源范围通过 &lt;code&gt;dstAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;目标访问掩码&lt;/a&gt;中的访问类型访问内存。如果 &lt;code&gt;dstAccessMask&lt;/code&gt; 包含 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 或 &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; ，则这些类型的访问也会看到可用的内存写入，因为这些访问类型不是通过资源执行的。</target>
        </trans-unit>
        <trans-unit id="0ebc13b7458fc7093cba09856ed2df90a8027b44" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;访问范围&lt;/a&gt;仅限于 &lt;code&gt;dstAccessMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;目标访问掩码&lt;/a&gt;中的访问类型。</target>
        </trans-unit>
        <trans-unit id="edf250044701e0102ab5fc067cb966a3b7a7bb9c" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes commands subsequently submitted to the same queue, including those in the same command buffer and batch. The second synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步作用域&lt;/a&gt;包括随后提交给相同队列的命令，包括相同命令缓冲区和批处理中的命令。第二个同步范围仅限于由 &lt;code&gt;dstStageMask&lt;/code&gt; 指定的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;目标阶段掩码所&lt;/a&gt;确定的管道阶段上的操作。</target>
        </trans-unit>
        <trans-unit id="d3b2329c9134a6aee655f819cc2b5cfa24df21ce" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes only the event signal operation.</source>
          <target state="translated">第二&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步范围&lt;/a&gt;仅包括事件信号操作。</target>
        </trans-unit>
        <trans-unit id="763906953af3e55966376dcd24325fc2ccb59335" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes only the event unsignal operation.</source>
          <target state="translated">第二个&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同步作用域&lt;/a&gt;仅包括事件无信号操作。</target>
        </trans-unit>
        <trans-unit id="7cd4060403b4ff3a8b122d708ab8b089fe571de0" translate="yes" xml:space="preserve">
          <source>The semantics of each basic blend operations is described in the table below:</source>
          <target state="translated">各基本混合操作的语义如下表所示。</target>
        </trans-unit>
        <trans-unit id="e8892a0b1601a4f9d21fb53fc1687b6610d2c23e" translate="yes" xml:space="preserve">
          <source>The semantics of each enum value is described in the table below:</source>
          <target state="translated">下表描述了每个枚举值的语义。</target>
        </trans-unit>
        <trans-unit id="8c6a1582a51b9ea7d750fdf47704c8dbdd236ba6" translate="yes" xml:space="preserve">
          <source>The set of image layouts consists of:</source>
          <target state="translated">这套图像布局包括:</target>
        </trans-unit>
        <trans-unit id="3b32dbfd2c6a44920e5605ee12a4af65fcb696ce" translate="yes" xml:space="preserve">
          <source>The shader code for the entry point identified by &lt;code&gt;stage&lt;/code&gt; and the rest of the state identified by this structure &lt;strong&gt;must&lt;/strong&gt; adhere to the pipeline linking rules described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;Shader Interfaces&lt;/a&gt; chapter</source>
          <target state="translated">由 &lt;code&gt;stage&lt;/code&gt; 标识的入口点的着色器代码和由该结构标识的其余状态的着色器代码&lt;strong&gt;必须&lt;/strong&gt;遵守&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;着色器接口&amp;rdquo;&lt;/a&gt;一章中描述的管道链接规则。</target>
        </trans-unit>
        <trans-unit id="c8cfae3588ecb602ed7a1ab2b9d73ea1b385c061" translate="yes" xml:space="preserve">
          <source>The shader code for the entry points identified by &lt;code&gt;pStages&lt;/code&gt;, and the rest of the state identified by this structure &lt;strong&gt;must&lt;/strong&gt; adhere to the pipeline linking rules described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;Shader Interfaces&lt;/a&gt; chapter</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; 标识的入口点的着色器代码以及此结构标识的其余状态&lt;strong&gt;必须&lt;/strong&gt;遵守&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;Shader Interfaces&amp;rdquo;&lt;/a&gt;一章中描述的管道链接规则。</target>
        </trans-unit>
        <trans-unit id="c7f1cbd9e0348a475e312987798722e1a3b0eb22" translate="yes" xml:space="preserve">
          <source>The source and destination color and alpha blending factors are selected from the enum:</source>
          <target state="translated">从枚举中选择源和目标颜色和alpha混合因子。</target>
        </trans-unit>
        <trans-unit id="b522a21c376c1a0ecbd2e79ab5378e25fd271d3f" translate="yes" xml:space="preserve">
          <source>The source data is copied from the user pointer to the command buffer when the command is called.</source>
          <target state="translated">当命令被调用时,源数据会从用户指针复制到命令缓冲区。</target>
        </trans-unit>
        <trans-unit id="1a94de5215b14a644477f7d31140e0ca4a5a2d9f" translate="yes" xml:space="preserve">
          <source>The source of different pieces of dynamic state is specified by the &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt;::&lt;code&gt;pDynamicStates&lt;/code&gt; property of the currently active pipeline, each of whose elements &lt;strong&gt;must&lt;/strong&gt; be one of the values:</source>
          <target state="translated">动态状态的不同部分的 &lt;code&gt;pDynamicStates&lt;/code&gt; 当前活动管道的&lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt; :: pDynamicStates属性指定，每个管道的元素&lt;strong&gt;必须&lt;/strong&gt;为以下值之一：</target>
        </trans-unit>
        <trans-unit id="69d3c0da5eb9fa0268cb2df40c394a5112b59d15" translate="yes" xml:space="preserve">
          <source>The source region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">由 &lt;code&gt;pRegions&lt;/code&gt; 的给定元素指定的源区域&lt;strong&gt;必须&lt;/strong&gt;是 &lt;code&gt;srcImage&lt;/code&gt; 内包含的区域</target>
        </trans-unit>
        <trans-unit id="71a3c2e2bee66fcefcf53d67b0e491e39df8bd61" translate="yes" xml:space="preserve">
          <source>The state of an event &lt;strong&gt;can&lt;/strong&gt; be updated by the host. The state of the event is immediately changed, and subsequent calls to &lt;code&gt;vkGetEventStatus&lt;/code&gt; will return the new state. If an event is already in the requested state, then updating it to the same state has no effect.</source>
          <target state="translated">事件的状态&lt;strong&gt;可以&lt;/strong&gt;由主机进行更新。事件的状态会立即更改，随后对 &lt;code&gt;vkGetEventStatus&lt;/code&gt; 的调用将返回新状态。如果事件已处于请求状态，则将其更新为相同状态无效。</target>
        </trans-unit>
        <trans-unit id="4d7f805e8c5bfc2834ddc4ee5bc4a6b6effa5f2b" translate="yes" xml:space="preserve">
          <source>The store operation for each sample in an attachment happens-after any recorded command which accesses the sample in the last subpass where the attachment is used. Store operations for attachments with a depth/stencil format execute in the &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; pipeline stage. Store operations for attachments with a color format execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage.</source>
          <target state="translated">附件中每个样本的存储操作发生在任何记录的命令之后，该命令在使用附件的最后一个子通道中访问该样本。具有深度/模板格式的附件的存储操作在 &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; 管道阶段执行。颜色格式的附件的存储操作在 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; 管道阶段执行。</target>
        </trans-unit>
        <trans-unit id="571fb5eb8f896875413b8722503ba0ea02d2304c" translate="yes" xml:space="preserve">
          <source>The subpass index for a render pass begins at zero when &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; is recorded, and increments each time &lt;code&gt;vkCmdNextSubpass&lt;/code&gt; is recorded.</source>
          <target state="translated">用于渲染过程的subpass指数为零时开始 &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; 被记录，和增量每次 &lt;code&gt;vkCmdNextSubpass&lt;/code&gt; 被记录。</target>
        </trans-unit>
        <trans-unit id="78cbedae7eff7e1c78b5e082f2b9f59dadc76495" translate="yes" xml:space="preserve">
          <source>The subpass index of the current render pass &lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;subpass&lt;/code&gt; member of the &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure specified when creating the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;.</source>
          <target state="translated">当前渲染过程的子过程索引&lt;strong&gt;必须&lt;/strong&gt;等于创建当前绑定到 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 的 &lt;code&gt;VkPipeline&lt;/code&gt; 时指定的 &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; 结构的 &lt;code&gt;subpass&lt;/code&gt; 成员。</target>
        </trans-unit>
        <trans-unit id="62e13cfa8ec21e55e0ce7f689c2da516fdc67daf" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;dstArrayElement&lt;/code&gt; and &lt;code&gt;descriptorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of array elements in the descriptor set binding specified by &lt;code&gt;dstBinding&lt;/code&gt;, and all applicable consecutive bindings, as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dstArrayElement&lt;/code&gt; 和 &lt;code&gt;descriptorCount&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;dstBinding&lt;/code&gt; 指定的描述符集绑定和所有适用的连续绑定中的数组元素的数量，如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html / vkspec.html＃descriptorsets-updates-conecutive&lt;/a&gt;所述</target>
        </trans-unit>
        <trans-unit id="9057fb32871648932a205ef00133a2b3720c496f" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstBinding&lt;/code&gt; and &lt;code&gt;bindingCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxVertexInputBindings&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;firstBinding&lt;/code&gt; 和 &lt;code&gt;bindingCount&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxVertexInputBindings&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abc205b0a3acfac7059c1540de2a6021a9045809" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstQuery&lt;/code&gt; and &lt;code&gt;queryCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of queries in &lt;code&gt;queryPool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;firstQuery&lt;/code&gt; 和 &lt;code&gt;queryCount&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;queryPool&lt;/code&gt; 中的查询数</target>
        </trans-unit>
        <trans-unit id="ff52456a9b01355b3a52e39ddc54232f335fea5d" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstScissor&lt;/code&gt; and &lt;code&gt;scissorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxViewports&lt;/code&gt;, inclusive</source>
          <target state="translated">&lt;code&gt;firstScissor&lt;/code&gt; 和 &lt;code&gt;scissorCount&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;在 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxViewports&lt;/code&gt; 之间（含）</target>
        </trans-unit>
        <trans-unit id="45ca7c0c2638c9e3617956385b2f6f174633eb5f" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstSet&lt;/code&gt; and &lt;code&gt;descriptorSetCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPipelineLayoutCreateInfo&lt;/code&gt;::&lt;code&gt;setLayoutCount&lt;/code&gt; provided when &lt;code&gt;layout&lt;/code&gt; was created</source>
          <target state="translated">的总和 &lt;code&gt;firstSet&lt;/code&gt; 和 &lt;code&gt;descriptorSetCount&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPipelineLayoutCreateInfo&lt;/code&gt; :: &lt;code&gt;setLayoutCount&lt;/code&gt; 时提供 &lt;code&gt;layout&lt;/code&gt; 创建</target>
        </trans-unit>
        <trans-unit id="2312970c6208088685318526a4f42e88d84a0df1" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstViewport&lt;/code&gt; and &lt;code&gt;viewportCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxViewports&lt;/code&gt;, inclusive</source>
          <target state="translated">&lt;code&gt;firstViewport&lt;/code&gt; 和 &lt;code&gt;viewportCount&lt;/code&gt; 的总和&lt;strong&gt;必须&lt;/strong&gt;在 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxViewports&lt;/code&gt; 之间（含）</target>
        </trans-unit>
        <trans-unit id="c5a1d0ba29469047ebdcebfccee04109c0988830" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;offset&lt;/code&gt; and the address of the range of &lt;code&gt;VkDeviceMemory&lt;/code&gt; object that is backing &lt;code&gt;buffer&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be a multiple of the type indicated by &lt;code&gt;indexType&lt;/code&gt;</source>
          <target state="translated">的总和 &lt;code&gt;offset&lt;/code&gt; 和范围的地址 &lt;code&gt;VkDeviceMemory&lt;/code&gt; 被备份对象 &lt;code&gt;buffer&lt;/code&gt; ，&lt;strong&gt;必须&lt;/strong&gt;是由所指示的类型的倍数 &lt;code&gt;indexType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06dbe14d7b39184cea1a929f5687227ae6c1ddce" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;offset&lt;/code&gt; and the size of &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">的总和 &lt;code&gt;offset&lt;/code&gt; 和大小 &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于的大小 &lt;code&gt;buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64d346396f7baca56e7ceb3febcee28cca03fd45" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;srcArrayElement&lt;/code&gt; and &lt;code&gt;descriptorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of array elements in the descriptor set binding specified by &lt;code&gt;srcBinding&lt;/code&gt;, and all applicable consecutive bindings, as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;srcArrayElement&lt;/code&gt; 和 &lt;code&gt;descriptorCount&lt;/code&gt; 之和&lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;srcBinding&lt;/code&gt; 指定的描述符集绑定和所有适用的连续绑定中的数组元素的数量，如&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html / vkspec.html＃descriptorsets-updates-conecutive&lt;/a&gt;所述</target>
        </trans-unit>
        <trans-unit id="3e26f24a4e4dc6c8c1fe1975c53ce82836d67723" translate="yes" xml:space="preserve">
          <source>The table below defines the various use cases for &lt;code&gt;vkGetDeviceProcAddr&lt;/code&gt; and expected return value for each case.</source>
          <target state="translated">下表定义了 &lt;code&gt;vkGetDeviceProcAddr&lt;/code&gt; 的各种用例以及每种用例的预期返回值。</target>
        </trans-unit>
        <trans-unit id="df1a71d984c186f762bdd4ff2a2a5d958262df34" translate="yes" xml:space="preserve">
          <source>The table below defines the various use cases for &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; and expected return value (&quot;fp&quot; is function pointer) for each case.</source>
          <target state="translated">下表定义了 &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; 的各种使用情况以及每种情况的预期返回值（&amp;ldquo; fp&amp;rdquo;是函数指针）。</target>
        </trans-unit>
        <trans-unit id="73a2eba7b03c376fc2d08adedf571829aab3ab4d" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt;, and &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorSampledImages&lt;/code&gt;</source>
          <target state="translated">的类型的描述符的总数量 &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; ， &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt; 和 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; 访问跨越的所有元素任何给定着色器级 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorSampledImages&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da28eea927b9b94b4c73b38585008493b00ffa0f" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorSamplers&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt; 所有元素中，任何给定的着色器阶段可访问的VK_DESCRIPTOR_TYPE_SAMPLER和 &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; 类型的描述符的 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorSamplers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd07bd25e13e1e05df6857fcf3663988f0c412a1" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorStorageBuffers&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; 所有元素中，任何给定着色器阶段可访问的VK_DESCRIPTOR_TYPE_STORAGE_BUFFER和 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; 类型的描述符的 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorStorageBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bc6c3471db4af2f1b67376be436315e72e243e" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt;, and &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorStorageImages&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt; 所有元素中，任何给定着色器阶段可访问的VK_DESCRIPTOR_TYPE_STORAGE_IMAGE类型和 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; 类型的描述符的 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorStorageImages&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98823483c874132230a59f0813a8217a3259cbf1" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorUniformBuffers&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; 所有元素中，任何给定着色器阶段可访问的VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER和 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; 类型的描述符的 &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;小于或等于 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorUniformBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10e64105c33717fc834a14842b5619c6f4426a6f" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnAllocation&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnAllocation&lt;/code&gt; 的类型为：</target>
        </trans-unit>
        <trans-unit id="74afb14243a14484f0d4c36e3e767bae8f081301" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnFree&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnFree&lt;/code&gt; 的类型为：</target>
        </trans-unit>
        <trans-unit id="dc2a415f63963012a8eecebeccd1ff40bcbc0188" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnInternalAllocation&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnInternalAllocation&lt;/code&gt; 的类型为：</target>
        </trans-unit>
        <trans-unit id="72abb1776911c614fb6ab9f6cab4cbf592215c8b" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnInternalFree&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnInternalFree&lt;/code&gt; 的类型为：</target>
        </trans-unit>
        <trans-unit id="9c60019ea65453837ee5e5f1bcec37f92616b0a0" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnReallocation&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnReallocation&lt;/code&gt; 的类型为：</target>
        </trans-unit>
        <trans-unit id="59cd79e18995e4deaf4b4fd9748c608440046c7e" translate="yes" xml:space="preserve">
          <source>The type of descriptors in a descriptor set is specified by &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;::&lt;code&gt;descriptorType&lt;/code&gt;, which &lt;strong&gt;must&lt;/strong&gt; be one of the values:</source>
          <target state="translated">在描述符组的类型描述符被指定&lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; :: &lt;code&gt;descriptorType&lt;/code&gt; ，它&lt;strong&gt;必须&lt;/strong&gt;是一个值：</target>
        </trans-unit>
        <trans-unit id="5ccc184a1d6b413579807169c7b54d56d1ea69a5" translate="yes" xml:space="preserve">
          <source>The type(s) of device access supported by each layout are:</source>
          <target state="translated">每个布局支持的设备访问类型是:</target>
        </trans-unit>
        <trans-unit id="d6f5ae2f24710b4be9e153e5537d4e160df65f8d" translate="yes" xml:space="preserve">
          <source>The types of image views that &lt;strong&gt;can&lt;/strong&gt; be created are:</source>
          <target state="translated">&lt;strong&gt;可以&lt;/strong&gt;创建的图像视图类型为：</target>
        </trans-unit>
        <trans-unit id="15839dad587dcadf748ff272d001ad48771f0c2c" translate="yes" xml:space="preserve">
          <source>The union of all destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory with any texel that &lt;strong&gt;may&lt;/strong&gt; be sampled during the blit operation</source>
          <target state="translated">所有目的地区域的联合，通过的元素指定 &lt;code&gt;pRegions&lt;/code&gt; ，&lt;strong&gt;必须&lt;/strong&gt;不在存储器中与任何纹理像素重叠&lt;strong&gt;可以&lt;/strong&gt;在块传输操作期间被采样</target>
        </trans-unit>
        <trans-unit id="a6b5b4840159247d367192ba9d6d452ac2feba0b" translate="yes" xml:space="preserve">
          <source>The union of all source regions, and the union of all destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory</source>
          <target state="translated">所有源极区域的并集，并且所有目的地区域的联合，通过的元素指定 &lt;code&gt;pRegions&lt;/code&gt; ，&lt;strong&gt;必须&lt;/strong&gt;在存储器中不重叠</target>
        </trans-unit>
        <trans-unit id="096529af4db29185292b78396a0e7b4b8777c5d2" translate="yes" xml:space="preserve">
          <source>The union of the source regions, and the union of the destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory</source>
          <target state="translated">源极区域的并集，并且目的地区域的联合，通过的元素指定 &lt;code&gt;pRegions&lt;/code&gt; ，&lt;strong&gt;必须&lt;/strong&gt;在存储器中不重叠</target>
        </trans-unit>
        <trans-unit id="d42bbfb89ea8b8eb7f36264990a8ec44b6898bb4" translate="yes" xml:space="preserve">
          <source>The value of any element of the &lt;code&gt;pPreserveAttachments&lt;/code&gt; member in any given element of &lt;code&gt;pSubpasses&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">所述的任何元素的值 &lt;code&gt;pPreserveAttachments&lt;/code&gt; 构件中的任何给定元件 &lt;code&gt;pSubpasses&lt;/code&gt; &lt;strong&gt;必须&lt;/strong&gt;不能 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d0487f48776f79b21686dce41b643930ac5f98d" translate="yes" xml:space="preserve">
          <source>The value returned in &lt;code&gt;minImageTransferGranularity&lt;/code&gt; has a unit of compressed texel blocks for images having a block-compressed format, and a unit of texels otherwise.</source>
          <target state="translated">&lt;code&gt;minImageTransferGranularity&lt;/code&gt; 中返回的值对于具有块压缩格式的图像，具有一个压缩的texel块单位，否则具有一个texel单位。</target>
        </trans-unit>
        <trans-unit id="724ad04584feac74dfe1c61d6cc20e929683540d" translate="yes" xml:space="preserve">
          <source>The values taken from elements i of &lt;code&gt;pBuffers&lt;/code&gt; and &lt;code&gt;pOffsets&lt;/code&gt; replace the current state for the vertex input binding &lt;code&gt;firstBinding&lt;/code&gt; + i, for i in [0, &lt;code&gt;bindingCount&lt;/code&gt;). The vertex input binding is updated to start at the offset indicated by &lt;code&gt;pOffsets&lt;/code&gt;[i] from the start of the buffer &lt;code&gt;pBuffers&lt;/code&gt;[i]. All vertex input attributes that use each of these bindings will use these updated addresses in their address calculations for subsequent draw commands.</source>
          <target state="translated">从 &lt;code&gt;pBuffers&lt;/code&gt; 和 &lt;code&gt;pOffsets&lt;/code&gt; 的元素i获取的值替换顶点输入绑定 &lt;code&gt;firstBinding&lt;/code&gt; + i 的当前状态，对于[0， &lt;code&gt;bindingCount&lt;/code&gt; ）中的i 。将顶点输入绑定更新为从缓冲区 &lt;code&gt;pBuffers&lt;/code&gt; [i] 的起点开始，由 &lt;code&gt;pOffsets&lt;/code&gt; [i] 指示的偏移量开始。使用每个绑定的所有顶点输入属性在其地址计算中将这些更新的地址用于后续绘制命令。</target>
        </trans-unit>
        <trans-unit id="8074beb33e3f67407fcbb037b008601b118eaed2" translate="yes" xml:space="preserve">
          <source>The vendor of the physical device is responsible for selecting &lt;code&gt;deviceID&lt;/code&gt;. The value selected &lt;strong&gt;should&lt;/strong&gt; uniquely identify both the device version and any major configuration options (for example, core count in the case of multicore devices). The same device ID &lt;strong&gt;should&lt;/strong&gt; be used for all physical implementations of that device version and configuration. For example, all uses of a specific silicon IP GPU version and configuration &lt;strong&gt;should&lt;/strong&gt; use the same device ID, even if those uses occur in different SoCs.</source>
          <target state="translated">物理设备的供应商负责选择 &lt;code&gt;deviceID&lt;/code&gt; 。所选的值&lt;strong&gt;应&lt;/strong&gt;唯一地标识设备版本和任何主要配置选项（例如，对于多核设备，为核心计数）。该设备版本和配置的所有物理实现&lt;strong&gt;都应&lt;/strong&gt;使用相同的设备ID 。例如，对特定硅IP GPU版本和配置的所有使用&lt;strong&gt;都应&lt;/strong&gt;使用相同的设备ID，即使这些使用发生在不同的SoC中也是如此。</target>
        </trans-unit>
        <trans-unit id="03c8491a1f46be021902bb20b2a9b054a007d7aa" translate="yes" xml:space="preserve">
          <source>The viewport parameters shown in the above equations are found from these values as</source>
          <target state="translated">上式所示的视口参数从这些数值中可以发现,作为</target>
        </trans-unit>
        <trans-unit id="9e85e05c1ae03c2860baeff2e63a80e7d1069141" translate="yes" xml:space="preserve">
          <source>The viewport parameters taken from element i of &lt;code&gt;pViewports&lt;/code&gt; replace the current state for the viewport index &lt;code&gt;firstViewport&lt;/code&gt; + i, for i in [0, &lt;code&gt;viewportCount&lt;/code&gt;).</source>
          <target state="translated">从 &lt;code&gt;pViewports&lt;/code&gt; 的元素i获取的视口参数替换了视口索引 &lt;code&gt;firstViewport&lt;/code&gt; + i 的当前状态，对于[0， &lt;code&gt;viewportCount&lt;/code&gt; ）中的i 。</target>
        </trans-unit>
        <trans-unit id="6bda13f6f3ff148e89a26736d0e16306772da2a7" translate="yes" xml:space="preserve">
          <source>The vulkan.h header allows the &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; definition to be overridden by the application. If &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; is already defined when the vulkan.h header is compiled the default definition is skipped. This allows the application to define a binary-compatible custom handle which &lt;strong&gt;may&lt;/strong&gt; provide more type-safety or other features needed by the application. Behavior is undefined if the application defines a non-binary-compatible handle and &lt;strong&gt;may&lt;/strong&gt; result in memory corruption or application termination. Binary compatibility is platform dependent so the application &lt;strong&gt;must&lt;/strong&gt; be careful if it overrides the default &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; definition.</source>
          <target state="translated">vulkan.h标头允许 &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 定义被应用程序覆盖。如果 &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 当vulkan.h头编译已定义默认定义被跳过。这允许应用程序定义二进制兼容的自定义句柄，该句柄&lt;strong&gt;可以&lt;/strong&gt;提供应用程序所需的更多类型安全性或其他功能。如果应用程序定义了非二进制兼容的句柄，&lt;strong&gt;则&lt;/strong&gt;行为是不确定的，并且&lt;strong&gt;可能&lt;/strong&gt;导致内存损坏或应用程序终止。二进制兼容性取决于平台，因此如果应用程序覆盖默认的 &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 定义，则&lt;strong&gt;必须&lt;/strong&gt;小心。</target>
        </trans-unit>
        <trans-unit id="ce506fa7bdefd4ca123101b400a2ca3505f2d370" translate="yes" xml:space="preserve">
          <source>The width and height of the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxViewportDimensions&quot;&gt;implementation-dependent maximum viewport dimensions&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to the width and height of the largest image which &lt;strong&gt;can&lt;/strong&gt; be created and attached to a framebuffer.</source>
          <target state="translated">所述的宽度和高度&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxViewportDimensions&quot;&gt;依赖于实现的最大视口尺寸&lt;/a&gt;&lt;strong&gt;必须&lt;/strong&gt;大于或等于所述宽度和最大图像高度&lt;strong&gt;可以&lt;/strong&gt;被创建并连接到一个帧缓冲区。</target>
        </trans-unit>
        <trans-unit id="040b2047602bbe78894ff5fe5f325295655cc7ef" translate="yes" xml:space="preserve">
          <source>There &lt;strong&gt;may&lt;/strong&gt; be a performance cost for using a render area smaller than the framebuffer, unless it matches the render area granularity for the render pass.</source>
          <target state="translated">有&lt;strong&gt;可能&lt;/strong&gt;是使用渲染面积比帧缓冲区小的性能开销，除非它在渲染过程渲染区域粒度匹配。</target>
        </trans-unit>
        <trans-unit id="4271f85a7276cbd7d7052446e1917ac6c4b355b3" translate="yes" xml:space="preserve">
          <source>There &lt;strong&gt;must&lt;/strong&gt; be at least one memory type with both the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; and &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; bits set in its &lt;code&gt;propertyFlags&lt;/code&gt;. There &lt;strong&gt;must&lt;/strong&gt; be at least one memory type with the &lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; bit set in its &lt;code&gt;propertyFlags&lt;/code&gt;.</source>
          <target state="translated">有&lt;strong&gt;必须&lt;/strong&gt;是至少一个存储器类型与两个 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; 和 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; 在其设置的位 &lt;code&gt;propertyFlags&lt;/code&gt; 。有&lt;strong&gt;必须&lt;/strong&gt;至少有一个存储器类型与 &lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; 在其位设置 &lt;code&gt;propertyFlags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec91d30ad7b14cac0056aefe7f90430deecf1aa" translate="yes" xml:space="preserve">
          <source>There are no Vulkan filter modes that directly correspond to OpenGL minification filters of &lt;code&gt;GL_LINEAR&lt;/code&gt; or &lt;code&gt;GL_NEAREST&lt;/code&gt;, but they &lt;strong&gt;can&lt;/strong&gt; be emulated using &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;, &lt;code&gt;minLod&lt;/code&gt; = 0, and &lt;code&gt;maxLod&lt;/code&gt; = 0.25, and using &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; or &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt;, respectively.</source>
          <target state="translated">没有直接对应于 &lt;code&gt;GL_LINEAR&lt;/code&gt; 或 &lt;code&gt;GL_NEAREST&lt;/code&gt; 的 OpenGL缩小过滤器的Vulkan过滤器模式，但&lt;strong&gt;可以&lt;/strong&gt;使用 &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; ， &lt;code&gt;minLod&lt;/code&gt; = 0和 &lt;code&gt;maxLod&lt;/code&gt; = 0.25以及分别使用 &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; 或 &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; 来模拟它们。</target>
        </trans-unit>
        <trans-unit id="e17c8ac309406162c75b6dc324975ff41ab69834" translate="yes" xml:space="preserve">
          <source>There is a subpass &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; that uses or preserves the attachment, and a subpass dependency from &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; to &lt;strong&gt;S&lt;/strong&gt;.</source>
          <target state="translated">有一个使用或保留附件的子通道&lt;strong&gt;S &lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt;以及从&lt;strong&gt;S &lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt;到&lt;strong&gt;S&lt;/strong&gt;的子通道依赖项。</target>
        </trans-unit>
        <trans-unit id="3c78d23ea75b660fd0da3e971315140a57998cb0" translate="yes" xml:space="preserve">
          <source>There is an implementation-dependent maximum number of memory allocations which &lt;strong&gt;can&lt;/strong&gt; be simultaneously created on a device. This is specified by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxMemoryAllocationCount&quot;&gt;&lt;code&gt;maxMemoryAllocationCount&lt;/code&gt;&lt;/a&gt; member of the &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; structure. If &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; is exceeded, &lt;code&gt;vkAllocateMemory&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">有其中存储器分配的实现有关的最大数量&lt;strong&gt;可以&lt;/strong&gt;在设备上同时创建。这由 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; 结构的&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxMemoryAllocationCount&quot;&gt; &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; &lt;/a&gt;成员指定。如果 &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; 超标， &lt;code&gt;vkAllocateMemory&lt;/code&gt; 将返回 &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a491cfb6bfe3594f50c4f122eda503e38e7c1ce" translate="yes" xml:space="preserve">
          <source>There is no global state in Vulkan and all per-application state is stored in a &lt;code&gt;VkInstance&lt;/code&gt; object. Creating a &lt;code&gt;VkInstance&lt;/code&gt; object initializes the Vulkan library and allows the application to pass information about itself to the implementation.</source>
          <target state="translated">Vulkan中没有全局状态，并且每个应用程序的所有状态都存储在 &lt;code&gt;VkInstance&lt;/code&gt; 对象中。创建 &lt;code&gt;VkInstance&lt;/code&gt; 对象将初始化Vulkan库，并允许应用程序将有关自身的信息传递给实现。</target>
        </trans-unit>
        <trans-unit id="4930b91363d357418428590b9f803dd9ce553156" translate="yes" xml:space="preserve">
          <source>There is no mechanism to query the size of an image before creating it, to compare that size against &lt;code&gt;maxResourceSize&lt;/code&gt;. If an application attempts to create an image that exceeds this limit, the creation will fail or the image will be invalid. While the advertised limit &lt;strong&gt;must&lt;/strong&gt; be at least 2&lt;sup&gt;31&lt;/sup&gt;, it &lt;strong&gt;may&lt;/strong&gt; not be possible to create an image that approaches that size, particularly for &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;.</source>
          <target state="translated">没有机制可以在创建图像之前查询图像的大小，将该图像大小与 &lt;code&gt;maxResourceSize&lt;/code&gt; 进行比较。如果应用程序尝试创建超出此限制的图像，则创建将失败或该图像无效。尽管公布的限制&lt;strong&gt;必须&lt;/strong&gt;至少为2 &lt;sup&gt;31&lt;/sup&gt;，但&lt;strong&gt;可能&lt;/strong&gt;无法创建接近该大小的图像，尤其是对于 &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 而言。</target>
        </trans-unit>
        <trans-unit id="24099cf06b9bee682799be8656a40584d910789b" translate="yes" xml:space="preserve">
          <source>These base coordinates are then offset by the first destination offset:</source>
          <target state="translated">然后,这些基本坐标会被第一个目的地偏移量所抵消。</target>
        </trans-unit>
        <trans-unit id="64489f90cc2dbb129e55b12499f631e51dc21349" translate="yes" xml:space="preserve">
          <source>These colors are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-replacement&quot;&gt;Texel Replacement&lt;/a&gt;.</source>
          <target state="translated">这些颜色在&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-replacement&quot;&gt;Texel替换&amp;rdquo;&lt;/a&gt;中详细介绍。</target>
        </trans-unit>
        <trans-unit id="4b0159a534c33a379dbb07b20b6029b7fa6019f8" translate="yes" xml:space="preserve">
          <source>These coordinates are used to sample from the source image, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures&quot;&gt;Image Operations chapter&lt;/a&gt;, with the filter mode equal to that of &lt;code&gt;filter&lt;/code&gt;, a mipmap mode of &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; and an address mode of &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt;. Implementations &lt;strong&gt;must&lt;/strong&gt; clamp at the edge of the source image, and &lt;strong&gt;may&lt;/strong&gt; additionally clamp to the edge of the source region.</source>
          <target state="translated">这些坐标被用于样品从源图像，如在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures&quot;&gt;影像操作章&lt;/a&gt;，与过滤器模式等于的 &lt;code&gt;filter&lt;/code&gt; ，的mip映射模式 &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; 和的地址模式 &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; 。实现&lt;strong&gt;必须&lt;/strong&gt;夹在源图像的边缘，并且&lt;strong&gt;可能&lt;/strong&gt;另外夹在源区域的边缘。</target>
        </trans-unit>
        <trans-unit id="6eb39edba45f12d3132f8aa5cbf785899d220c1e" translate="yes" xml:space="preserve">
          <source>These filters are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel Filtering&lt;/a&gt;.</source>
          <target state="translated">这些过滤器在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel过滤&lt;/a&gt;中有详细描述。</target>
        </trans-unit>
        <trans-unit id="30692e1c13ededaacad9c849877c962c162e6d06" translate="yes" xml:space="preserve">
          <source>These modes affect only the final rasterization of polygons: in particular, a polygon&amp;rsquo;s vertices are shaded and the polygon is clipped and possibly culled before these modes are applied.</source>
          <target state="translated">这些模式仅影响多边形的最终栅格化：特别是，在应用这些模式之前，将多边形的顶点着色并对其进行裁剪和剔除。</target>
        </trans-unit>
        <trans-unit id="3103d3743b08f0841d7a1150bfefa9da4df3a9e8" translate="yes" xml:space="preserve">
          <source>These modes are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel Filtering&lt;/a&gt;.</source>
          <target state="translated">这些模式在&amp;ldquo; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel过滤&amp;rdquo;&lt;/a&gt;中有详细描述。</target>
        </trans-unit>
        <trans-unit id="0b91338e13062917fd8d49405c7110cff3ee2556" translate="yes" xml:space="preserve">
          <source>These values are intended to measure relative statistics on one implementation. Various device architectures will count these values differently. Any or all counters &lt;strong&gt;may&lt;/strong&gt; be affected by the issues described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-undefined&quot;&gt;Query Operation&lt;/a&gt;.</source>
          <target state="translated">这些值旨在测量一种实现方式的相对统计信息。各种设备架构将对这些值进行不同的计算。&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-undefined&quot;&gt;查询操作中&lt;/a&gt;描述的问题&lt;strong&gt;可能&lt;/strong&gt;会影响任何或所有计数器。</target>
        </trans-unit>
        <trans-unit id="0432ad8ea9ac8a6371af658f747f0b1aaa984c75" translate="yes" xml:space="preserve">
          <source>This allows the last compressed texel block of the image in each non-multiple dimension to be included as a source or destination of the copy.</source>
          <target state="translated">这允许在每一个非多重维度的图像的最后一个压缩的texel块被包括在副本的源或目的地。</target>
        </trans-unit>
        <trans-unit id="32d67a6a010db08cb7cbee09ae62081cc40d2d31" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;must&lt;/strong&gt; only be called inside of a render pass instance</source>
          <target state="translated">此命令&lt;strong&gt;必须&lt;/strong&gt;只有一个渲染过程实例的内部调用</target>
        </trans-unit>
        <trans-unit id="10ae78c7bb735edd8cb22a9c1f299d658706e238" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;must&lt;/strong&gt; only be called outside of a render pass instance</source>
          <target state="translated">此命令&lt;strong&gt;必须&lt;/strong&gt;只能被称为一个渲染过程实例外</target>
        </trans-unit>
        <trans-unit id="8d7c911fa9621656f34fe4b77934410504543a23" translate="yes" xml:space="preserve">
          <source>This is a purely informational callback.</source>
          <target state="translated">这是一个纯粹的信息回调。</target>
        </trans-unit>
        <trans-unit id="793f467b177506a6a7574bbd94cdd31a9c25fac5" translate="yes" xml:space="preserve">
          <source>This macro &lt;strong&gt;can&lt;/strong&gt; be used when constructing the &lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt;::&lt;code&gt;apiVersion&lt;/code&gt; parameter passed to &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;.</source>
          <target state="translated">这个宏&lt;strong&gt;可以&lt;/strong&gt;构造时，可以使用&lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt; :: &lt;code&gt;apiVersion&lt;/code&gt; 传递给参数&lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50967c23579778cdefd5f4195f1eb73b55ca84fd" translate="yes" xml:space="preserve">
          <source>This page is a generated document. Fixes and changes should be made to the generator scripts, not directly.</source>
          <target state="translated">本页为生成文档。修正和修改应该在生成器脚本中进行,而不是直接进行。</target>
        </trans-unit>
        <trans-unit id="6d3744f49fa1443c89fc0da04c14165ba6ad90b5" translate="yes" xml:space="preserve">
          <source>This restriction means that the render pass has full knowledge of all uses of all of the attachments, so that the implementation is able to make correct decisions about when and how to perform layout transitions, when to overlap execution of subpasses, etc.</source>
          <target state="translated">这个限制意味着渲染通证对所有附件的所有使用情况都有充分的了解,因此,实现能够正确决定何时以及如何执行布局转换,何时重叠执行子通证等。</target>
        </trans-unit>
        <trans-unit id="9e067e5b5d2e5eca5086fe9127c97682f7d58459" translate="yes" xml:space="preserve">
          <source>This union is used where part of the API requires either color or depth/stencil clear values, depending on the attachment, and defines the initial clear values in the &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; structure.</source>
          <target state="translated">在部分API需要颜色或深度/模板清除值（取决于附件）的情况下使用此联合，并在&lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;结构中定义初始清除值。</target>
        </trans-unit>
        <trans-unit id="1aef8c9e8eb1d7a90f50e9c1bb403a8a1e0b0c50" translate="yes" xml:space="preserve">
          <source>To allocate command buffers, call:</source>
          <target state="translated">要分配命令缓冲区,请调用。</target>
        </trans-unit>
        <trans-unit id="6b20f0130ba0fad974419761771dd338c83d125f" translate="yes" xml:space="preserve">
          <source>To allocate descriptor sets from a descriptor pool, call:</source>
          <target state="translated">要从描述符池中分配描述符集,请调用。</target>
        </trans-unit>
        <trans-unit id="7555a11fd062095e524fdcd196228de29092ef32" translate="yes" xml:space="preserve">
          <source>To allocate memory objects, call:</source>
          <target state="translated">要分配内存对象,调用。</target>
        </trans-unit>
        <trans-unit id="615fa4d5583c87e1142196c86fca2bb07b45f3d0" translate="yes" xml:space="preserve">
          <source>To attach memory to a buffer object, call:</source>
          <target state="translated">要将内存附加到一个缓冲区对象上,调用。</target>
        </trans-unit>
        <trans-unit id="1680ffc10a228e8d720ed08f1d0a6ac879f906ec" translate="yes" xml:space="preserve">
          <source>To attach memory to an image object, call:</source>
          <target state="translated">要将内存附加到图像对象上,请调用。</target>
        </trans-unit>
        <trans-unit id="64bb1b826b19b78c84ee3ba86a477a2da0851b25" translate="yes" xml:space="preserve">
          <source>To begin a query, call:</source>
          <target state="translated">要开始查询,请调用。</target>
        </trans-unit>
        <trans-unit id="b07c2355a44ca6f58bf6f9651f07d0c919fadc56" translate="yes" xml:space="preserve">
          <source>To begin a render pass instance, call:</source>
          <target state="translated">要开始渲染传递实例,请调用。</target>
        </trans-unit>
        <trans-unit id="3be0ac278e471208630efa76c88eabcf7de66de9" translate="yes" xml:space="preserve">
          <source>To begin recording a command buffer, call:</source>
          <target state="translated">要开始记录命令缓冲区,请调用。</target>
        </trans-unit>
        <trans-unit id="d4d1f168cdf034a59fa62e8bc357fc21b96758a2" translate="yes" xml:space="preserve">
          <source>To bind an index buffer to a command buffer, call:</source>
          <target state="translated">要将索引缓冲区绑定到命令缓冲区,调用。</target>
        </trans-unit>
        <trans-unit id="50690f60e769e7d7103105681eedbdb23e0c5852" translate="yes" xml:space="preserve">
          <source>To bind one or more descriptor sets to a command buffer, call:</source>
          <target state="translated">要将一个或多个描述符集绑定到命令缓冲区,请调用。</target>
        </trans-unit>
        <trans-unit id="9c435bacd4629dc2424dc087cc97c57e3973d0aa" translate="yes" xml:space="preserve">
          <source>To bind vertex buffers to a command buffer for use in subsequent draw commands, call:</source>
          <target state="translated">要将顶点缓冲区绑定到命令缓冲区,以便在随后的绘制命令中使用,请调用。</target>
        </trans-unit>
        <trans-unit id="c2358f12c919badc0c2a67faadde0e585f56ee3b" translate="yes" xml:space="preserve">
          <source>To clear buffer data, call:</source>
          <target state="translated">要清除缓冲区数据,请调用。</target>
        </trans-unit>
        <trans-unit id="c81cf0b6a2a2ea9a0db02d18d3d242030ac0980f" translate="yes" xml:space="preserve">
          <source>To clear one or more regions of color and depth/stencil attachments inside a render pass instance, call:</source>
          <target state="translated">要清除渲染通道实例中的一个或多个颜色和深度/钢笔附件区域,请调用。</target>
        </trans-unit>
        <trans-unit id="365bbb3cb0968432e53d6db60cf89d26201849fa" translate="yes" xml:space="preserve">
          <source>To clear one or more subranges of a color image, call:</source>
          <target state="translated">要清除彩色图像的一个或多个子区域,请调用。</target>
        </trans-unit>
        <trans-unit id="09d300f6450259928de5529ab2f3bf4c3ab3d28e" translate="yes" xml:space="preserve">
          <source>To clear one or more subranges of a depth/stencil image, call:</source>
          <target state="translated">要清除深度/钢笔图像的一个或多个子区域,请调用。</target>
        </trans-unit>
        <trans-unit id="b80336cb92cd34caa26bd8321f4908bee7c34c15" translate="yes" xml:space="preserve">
          <source>To complete recording of a command buffer, call:</source>
          <target state="translated">要完成命令缓冲区的记录,请调用。</target>
        </trans-unit>
        <trans-unit id="bee9945ea5e072bbed6272da07073b91d4a45af0" translate="yes" xml:space="preserve">
          <source>To copy both the depth and stencil aspects of a depth/stencil format, two entries in &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be used, where one specifies the depth aspect in &lt;code&gt;imageSubresource&lt;/code&gt;, and the other specifies the stencil aspect.</source>
          <target state="translated">要复制深度/模板格式的深度和模板方面，&lt;strong&gt;可以&lt;/strong&gt;在 &lt;code&gt;pRegions&lt;/code&gt; 中使用两个条目，其中一个在 &lt;code&gt;imageSubresource&lt;/code&gt; 中指定深度方面，另一个在指定模板方面。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8332f4221e849dd84bc88daa0d2c27c0e53a95ea" translate="yes" xml:space="preserve">
          <source>To copy data between buffer objects, call:</source>
          <target state="translated">要在缓冲区对象之间复制数据,请调用。</target>
        </trans-unit>
        <trans-unit id="d672dfee89874e29ce6332ba8b462934c390bb05" translate="yes" xml:space="preserve">
          <source>To copy data between image objects, call:</source>
          <target state="translated">要在图像对象之间复制数据,请调用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
