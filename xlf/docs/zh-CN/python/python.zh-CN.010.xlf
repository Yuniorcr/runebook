<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="41cf36b57a09029e0930c65593e97c425f25385c" translate="yes" xml:space="preserve">
          <source>Determines whether the window accepts the focus during keyboard traversal. 0, 1 or an empty string is returned. If 0 is returned, it means that the window should be skipped entirely during keyboard traversal. If 1, it means that the window should receive the input focus as long as it is viewable. And an empty string means that the traversal scripts make the decision about whether or not to focus on the window.</source>
          <target state="translated">确定窗口在键盘遍历过程中是否接受焦点,返回0、1或空字符串。返回0、1或一个空字符串。如果返回0,表示在键盘遍历过程中应完全跳过窗口。如果是1,则意味着只要窗口可以查看,就应该接受输入焦点。而空字符串则意味着由遍历脚本来决定是否对窗口进行聚焦。</target>
        </trans-unit>
        <trans-unit id="a9b9c524283ef65e98a82d93ec990e57870e259e" translate="yes" xml:space="preserve">
          <source>Determining if an Object is Aware or Naive</source>
          <target state="translated">确定一个对象是有意识的还是无意识的。</target>
        </trans-unit>
        <trans-unit id="67f3adfacb330aee4a77e40e7fde0c2b8c823dc3" translate="yes" xml:space="preserve">
          <source>Deterministic pycs</source>
          <target state="translated">确定性的pycs</target>
        </trans-unit>
        <trans-unit id="227ba6b966ce35298cb13e42b2cde346a9f64fbf" translate="yes" xml:space="preserve">
          <source>Developers of applications written in Python may wish to hide &lt;em&gt;all&lt;/em&gt; Python level warnings from their users by default, and only display them when running tests or otherwise working on the application. The &lt;a href=&quot;sys#sys.warnoptions&quot;&gt;&lt;code&gt;sys.warnoptions&lt;/code&gt;&lt;/a&gt; attribute used to pass filter configurations to the interpreter can be used as a marker to indicate whether or not warnings should be disabled:</source>
          <target state="translated">使用Python编写的应用程序的开发人员可能希望默认情况下对用户隐藏&lt;em&gt;所有&lt;/em&gt; Python级别的警告，仅在运行测试或在应用程序上运行时才显示它们。可以将用于将过滤器配置传递到解释器的&lt;a href=&quot;sys#sys.warnoptions&quot;&gt; &lt;code&gt;sys.warnoptions&lt;/code&gt; &lt;/a&gt;属性用作指示是否应禁用警告的标记：</target>
        </trans-unit>
        <trans-unit id="c83efca71a2db98805984e21bc069c97a6e54f0a" translate="yes" xml:space="preserve">
          <source>Developers of test runners for Python code are advised to instead ensure that &lt;em&gt;all&lt;/em&gt; warnings are displayed by default for the code under test, using code like:</source>
          <target state="translated">建议使用Python代码的测试运行者的开发人员改为确保默认情况下使用以下代码显示针对被测试代码的&lt;em&gt;所有&lt;/em&gt;警告：</target>
        </trans-unit>
        <trans-unit id="0d42a8d569e440582dd6f493e86e769d7ace0645" translate="yes" xml:space="preserve">
          <source>Developing tkinter applications</source>
          <target state="translated">开发tkinter应用程序</target>
        </trans-unit>
        <trans-unit id="69e08870be0ea69b026eb028e089a45e4aadb5ae" translate="yes" xml:space="preserve">
          <source>Developing with asyncio</source>
          <target state="translated">用asyncio开发</target>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="translated">开发工具</target>
        </trans-unit>
        <trans-unit id="9a6a50b41ee8aba0a7ad4d460b7fcd489d8aaf30" translate="yes" xml:space="preserve">
          <source>Device control 2, block-mode flow control</source>
          <target state="translated">设备控制2、块模式流量控制</target>
        </trans-unit>
        <trans-unit id="99e66b66a02a1ee7e99342652890cd1ca85ebf30" translate="yes" xml:space="preserve">
          <source>Device control 4</source>
          <target state="translated">设备控制 4</target>
        </trans-unit>
        <trans-unit id="88140a99cc73d6037ebc42dbf052b9760e08e9ad" translate="yes" xml:space="preserve">
          <source>Device inode resides on.</source>
          <target state="translated">设备inode所在。</target>
        </trans-unit>
        <trans-unit id="472deee175b73a542254dec55f58f9d2616f1d1b" translate="yes" xml:space="preserve">
          <source>Device not a stream</source>
          <target state="translated">设备非流</target>
        </trans-unit>
        <trans-unit id="e914a8417a836459823812aa69a567d2573691c0" translate="yes" xml:space="preserve">
          <source>Device or resource busy</source>
          <target state="translated">设备或资源繁忙</target>
        </trans-unit>
        <trans-unit id="fbf791da64a6f6cc8813eb953ab15733b8a9afc1" translate="yes" xml:space="preserve">
          <source>Dialects and Formatting Parameters</source>
          <target state="translated">方言和格式参数</target>
        </trans-unit>
        <trans-unit id="f8808ef7cf0e671eacf36da443a071254bd3ccd1" translate="yes" xml:space="preserve">
          <source>Dialects support the following attributes:</source>
          <target state="translated">方言支持以下属性:</target>
        </trans-unit>
        <trans-unit id="ab5432e726cd06aa63821e0e9ee891817a60436e" translate="yes" xml:space="preserve">
          <source>Dialog to let the user choose a color.</source>
          <target state="translated">对话框让用户选择颜色。</target>
        </trans-unit>
        <trans-unit id="7b2f0dc8ba3fefcd0ad85c299eb369b0c44ec6f2" translate="yes" xml:space="preserve">
          <source>DictReader objects have the following public attribute:</source>
          <target state="translated">DictReader对象有以下公共属性。</target>
        </trans-unit>
        <trans-unit id="f7701461b214d90ff772f645eb7737e941419731" translate="yes" xml:space="preserve">
          <source>DictWriter objects have the following public method:</source>
          <target state="translated">DictWriter对象有以下公共方法。</target>
        </trans-unit>
        <trans-unit id="dab1b2e060963421780f99f99f8333356b11f484" translate="yes" xml:space="preserve">
          <source>Dictionaries and dictionary views are reversible.</source>
          <target state="translated">字典和字典视图是可逆的。</target>
        </trans-unit>
        <trans-unit id="d8a3f2e4e27b59aff156a80c90bd0e61a79e929f" translate="yes" xml:space="preserve">
          <source>Dictionaries are sorted by key before the display is computed.</source>
          <target state="translated">在计算显示之前,字典是按键排序的。</target>
        </trans-unit>
        <trans-unit id="cc77ad3dc358d8f0c4202fd6b67fedccf96b0c7a" translate="yes" xml:space="preserve">
          <source>Dictionaries can be created by placing a comma-separated list of &lt;code&gt;key: value&lt;/code&gt; pairs within braces, for example: &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; or &lt;code&gt;{4098:
'jack', 4127: 'sjoerd'}&lt;/code&gt;, or by the &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">可以通过以下方式创建字典：以逗号分隔的 &lt;code&gt;key: value&lt;/code&gt; 对列表放在花括号中，例如： &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; 或 &lt;code&gt;{4098: 'jack', 4127: 'sjoerd'}&lt;/code&gt; ，或通过&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="fcda0270e3f9044179237f7db532a14ec2abb911" translate="yes" xml:space="preserve">
          <source>Dictionaries can be created by several means:</source>
          <target state="translated">字典可以通过多种方式创建。</target>
        </trans-unit>
        <trans-unit id="8c3a2db47bf8a581a52622cba95060db97ba81bb" translate="yes" xml:space="preserve">
          <source>Dictionaries compare equal if and only if they have the same &lt;code&gt;(key,
value)&lt;/code&gt; pairs (regardless of ordering). Order comparisons (&amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;&amp;lt;=&amp;rsquo;, &amp;lsquo;&amp;gt;=&amp;rsquo;, &amp;lsquo;&amp;gt;&amp;rsquo;) raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当且仅当字典具有相同的 &lt;code&gt;(key, value)&lt;/code&gt; 对时，字典才会比较相等（无论顺序如何）。订单比较（&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;rdquo;，&amp;ldquo;&amp;gt; =&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;）引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39c1670b0b7a7ba40b9a9d4c83b18f7c9c04ad3a" translate="yes" xml:space="preserve">
          <source>Dictionaries preserve insertion order. Note that updating a key does not affect the order. Keys added after deletion are inserted at the end.</source>
          <target state="translated">字典保留插入顺序。注意,更新一个键不会影响顺序。删除后添加的键被插入到最后。</target>
        </trans-unit>
        <trans-unit id="11e4e1bd6354fe87eabd1901d226ac34a6736551" translate="yes" xml:space="preserve">
          <source>Dictionary Schema Details</source>
          <target state="translated">字典模式详情</target>
        </trans-unit>
        <trans-unit id="d8b283c48261e4ecb7a9bbe964e5c60e4131f141" translate="yes" xml:space="preserve">
          <source>Dictionary mapping field names to default values.</source>
          <target state="translated">将字段名映射到默认值的字典。</target>
        </trans-unit>
        <trans-unit id="6042f2bfa5164ad89d60a949b51e0f9674e3a2bb" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to MIME types.</source>
          <target state="translated">将文件名扩展名映射到MIME类型的字典。</target>
        </trans-unit>
        <trans-unit id="cb6ed1766c441df58f2b613e0dea5ef76b601253" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to encoding types.</source>
          <target state="translated">将文件名扩展名映射到编码类型的字典。</target>
        </trans-unit>
        <trans-unit id="cc743300da11561abe7cccb0301d600320914337" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to encoding types. This is initially a copy of the global &lt;a href=&quot;#mimetypes.encodings_map&quot;&gt;&lt;code&gt;encodings_map&lt;/code&gt;&lt;/a&gt; defined in the module.</source>
          <target state="translated">将文件名扩展名映射到编码类型的字典。最初是模块中定义的全局&lt;a href=&quot;#mimetypes.encodings_map&quot;&gt; &lt;code&gt;encodings_map&lt;/code&gt; &lt;/a&gt;的副本。</target>
        </trans-unit>
        <trans-unit id="3946d8795bb6d7919f1c5e41c5b09a7f43674b39" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to non-standard, but commonly found MIME types.</source>
          <target state="translated">将文件名扩展名映射到非标准但常见的MIME类型的字典。</target>
        </trans-unit>
        <trans-unit id="a23d5e1a918ecde718d3194609b2fb09730da8db" translate="yes" xml:space="preserve">
          <source>Dictionary mapping host names to &lt;code&gt;(login, account, password)&lt;/code&gt; tuples. The &amp;lsquo;default&amp;rsquo; entry, if any, is represented as a pseudo-host by that name.</source>
          <target state="translated">字典将主机名映射到 &lt;code&gt;(login, account, password)&lt;/code&gt; 元组。&amp;ldquo;默认&amp;rdquo;条目（如果有）用该名称表示为伪主机。</target>
        </trans-unit>
        <trans-unit id="6a20be1cc4b03cc107300484267c30e75500f64e" translate="yes" xml:space="preserve">
          <source>Dictionary mapping macro names to string lists.</source>
          <target state="translated">将宏名映射到字符串列表的字典。</target>
        </trans-unit>
        <trans-unit id="1a6f3a328e7fe9dc5d4d50d48b00b95c792889e9" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.confstr&quot;&gt;&lt;code&gt;confstr()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">字典将&lt;a href=&quot;#os.confstr&quot;&gt; &lt;code&gt;confstr()&lt;/code&gt; &lt;/a&gt;接受的名称映射为主机操作系统为此名称定义的整数值。这可用于确定系统已知的名称集。</target>
        </trans-unit>
        <trans-unit id="6ccdaf305830e968d57992fa9d9bf0a4e700fa8c" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.pathconf&quot;&gt;&lt;code&gt;pathconf()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.fpathconf&quot;&gt;&lt;code&gt;fpathconf()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">字典映射名称由&lt;a href=&quot;#os.pathconf&quot;&gt; &lt;code&gt;pathconf()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.fpathconf&quot;&gt; &lt;code&gt;fpathconf()&lt;/code&gt; &lt;/a&gt;接受到主机操作系统为这些名称定义的整数值。这可用于确定系统已知的名称集。</target>
        </trans-unit>
        <trans-unit id="c5052e74fa4846ce8de8b33c9e8642836e29e4f8" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.sysconf&quot;&gt;&lt;code&gt;sysconf()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">字典将&lt;a href=&quot;#os.sysconf&quot;&gt; &lt;code&gt;sysconf()&lt;/code&gt; &lt;/a&gt;接受的名称映射为主机操作系统为此名称定义的整数值。这可用于确定系统已知的名称集。</target>
        </trans-unit>
        <trans-unit id="d1042fd8ccb48d1cccd2c79e82340ae4728ce4bc" translate="yes" xml:space="preserve">
          <source>Dictionary mapping operation names to bytecodes.</source>
          <target state="translated">将操作名称映射到字节码的字典。</target>
        </trans-unit>
        <trans-unit id="d320f3654028862a4c4a9c7058e10c8a100bc32e" translate="yes" xml:space="preserve">
          <source>Dictionary mapping suffixes to suffixes. This is used to allow recognition of encoded files for which the encoding and the type are indicated by the same extension. For example, the &lt;code&gt;.tgz&lt;/code&gt; extension is mapped to &lt;code&gt;.tar.gz&lt;/code&gt; to allow the encoding and type to be recognized separately.</source>
          <target state="translated">字典映射后缀到后缀。这用于允许识别编码文件，其编码和类型由相同的扩展名表示。例如， &lt;code&gt;.tgz&lt;/code&gt; 扩展名映射到 &lt;code&gt;.tar.gz&lt;/code&gt; ,以允许分别识别编码和类型。</target>
        </trans-unit>
        <trans-unit id="ba111bb63f7f04cb2c6ffad0dfc326bced082a43" translate="yes" xml:space="preserve">
          <source>Dictionary mapping suffixes to suffixes. This is used to allow recognition of encoded files for which the encoding and the type are indicated by the same extension. For example, the &lt;code&gt;.tgz&lt;/code&gt; extension is mapped to &lt;code&gt;.tar.gz&lt;/code&gt; to allow the encoding and type to be recognized separately. This is initially a copy of the global &lt;a href=&quot;#mimetypes.suffix_map&quot;&gt;&lt;code&gt;suffix_map&lt;/code&gt;&lt;/a&gt; defined in the module.</source>
          <target state="translated">字典映射后缀到后缀。这用于允许识别编码文件，其编码和类型由相同的扩展名表示。例如， &lt;code&gt;.tgz&lt;/code&gt; 扩展名映射到 &lt;code&gt;.tar.gz&lt;/code&gt; ,以允许分别识别编码和类型。最初是模块中定义的全局&lt;a href=&quot;#mimetypes.suffix_map&quot;&gt; &lt;code&gt;suffix_map&lt;/code&gt; &lt;/a&gt;的副本。</target>
        </trans-unit>
        <trans-unit id="168115d9d1a3a169576861b302205ec9e2950502" translate="yes" xml:space="preserve">
          <source>Dictionary mapping the numeric values of the constants defined in this module back to name strings, allowing more human-readable representation of parse trees to be generated.</source>
          <target state="translated">将本模块定义的常量的数值映射回名称字符串的字典,使生成的解析树有更多的可读性表示。</target>
        </trans-unit>
        <trans-unit id="e3dabf768529c5c0a05d31ae2894f6e329b9c6c9" translate="yes" xml:space="preserve">
          <source>Dictionary providing a mapping from the errno value to the string name in the underlying system. For instance, &lt;code&gt;errno.errorcode[errno.EPERM]&lt;/code&gt; maps to &lt;code&gt;'EPERM'&lt;/code&gt;.</source>
          <target state="translated">在底层系统中提供从errno值到字符串名称的映射的字典。例如， &lt;code&gt;errno.errorcode[errno.EPERM]&lt;/code&gt; 映射到 &lt;code&gt;'EPERM'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40597299627c550fcec55295c4bb145ed6cf1d78" translate="yes" xml:space="preserve">
          <source>Dictionary view objects</source>
          <target state="translated">字典视图对象</target>
        </trans-unit>
        <trans-unit id="36bd5b623a353d13fe2893d2198b78a7baeb18e9" translate="yes" xml:space="preserve">
          <source>Dictionary views can be iterated over to yield their respective data, and support membership tests:</source>
          <target state="translated">字典视图可以迭代产生各自的数据,并支持成员测试。</target>
        </trans-unit>
        <trans-unit id="139d350f94ffb48040d8894ee7a42401613111f6" translate="yes" xml:space="preserve">
          <source>Differ Example</source>
          <target state="translated">不同的例子</target>
        </trans-unit>
        <trans-unit id="cd728318667a85a62b573e348a3f148aef08641b" translate="yes" xml:space="preserve">
          <source>Differ Objects</source>
          <target state="translated">不同对象</target>
        </trans-unit>
        <trans-unit id="b16f1f66543d3256c7320f66ff9ae94cbd849539" translate="yes" xml:space="preserve">
          <source>Difference</source>
          <target state="translated">Difference</target>
        </trans-unit>
        <trans-unit id="3f42c895712e6c6a328c797466b0a8dec5f7adc8" translate="yes" xml:space="preserve">
          <source>Difference of &lt;em&gt;t2&lt;/em&gt; and &lt;em&gt;t3&lt;/em&gt;. Afterwards &lt;em&gt;t1&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt; - &lt;em&gt;t3&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t1&lt;/em&gt; + &lt;em&gt;t3&lt;/em&gt; are true. (1)(6)</source>
          <target state="translated">差异&lt;em&gt;T2&lt;/em&gt;和&lt;em&gt;T3&lt;/em&gt;。之后，&lt;em&gt;t1&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt; - &lt;em&gt;t3&lt;/em&gt;和&lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t1&lt;/em&gt; + &lt;em&gt;t3&lt;/em&gt;为真。（1）（6）</target>
        </trans-unit>
        <trans-unit id="6624ab01690a92e0f0a8a19484c2fd2471ce1058" translate="yes" xml:space="preserve">
          <source>Difference of number of memory blocks between the old and the new snapshots (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been allocated in the new snapshot.</source>
          <target state="translated">新旧快照之间的内存块数量差异（ &lt;code&gt;int&lt;/code&gt; ）：如果已在新快照中分配了内存块，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86f96f336ae06cf6a1b8a61189ade72185a20755" translate="yes" xml:space="preserve">
          <source>Difference of total size of memory blocks in bytes between the old and the new snapshots (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been allocated in the new snapshot.</source>
          <target state="translated">旧快照和新快照之间的内存块总大小之差（以字节为单位）（ &lt;code&gt;int&lt;/code&gt; ）：如果已在新快照中分配了内存块，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40bbccf2ba866425060b0cb20b93db8b94798d1b" translate="yes" xml:space="preserve">
          <source>Different values of &lt;code&gt;nargs&lt;/code&gt; may cause the metavar to be used multiple times. Providing a tuple to &lt;code&gt;metavar&lt;/code&gt; specifies a different display for each of the arguments:</source>
          <target state="translated">不同的 &lt;code&gt;nargs&lt;/code&gt; 值可能会导致metavar多次使用。为 &lt;code&gt;metavar&lt;/code&gt; 提供元组会为每个参数指定不同的显示方式：</target>
        </trans-unit>
        <trans-unit id="fc6fd1376fd880cb9ae2825f4fd3cf98cb14391b" translate="yes" xml:space="preserve">
          <source>Dim mode</source>
          <target state="translated">调光模式</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="b138c42c2b3dec6d9d696fea7e389c6986342198" translate="yes" xml:space="preserve">
          <source>Directly calling &lt;code&gt;blocking_io()&lt;/code&gt; in any coroutine would block the event loop for its duration, resulting in an additional 1 second of run time. Instead, by using &lt;code&gt;asyncio.to_thread()&lt;/code&gt;, we can run it in a separate thread without blocking the event loop.</source>
          <target state="translated">在任何协程中直接调用 &lt;code&gt;blocking_io()&lt;/code&gt; 会在事件持续时间内阻止事件循环，从而导致运行时间增加1秒。相反，通过使用 &lt;code&gt;asyncio.to_thread()&lt;/code&gt; ，我们可以在单独的线程中运行它而不会阻塞事件循环。</target>
        </trans-unit>
        <trans-unit id="dc6a447bac6f99d1a389591808fbaff01c06f423" translate="yes" xml:space="preserve">
          <source>Directly using the &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt; class allows formatting profile results without writing the profile data to a file:</source>
          <target state="translated">直接使用&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;/a&gt;类可在不将配置文件数据写入文件的情况下格式化配置文件结果：</target>
        </trans-unit>
        <trans-unit id="fc6eeb851607c3b55aaacacd74d18bddb9fd02b0" translate="yes" xml:space="preserve">
          <source>Directory Objects</source>
          <target state="translated">目录对象</target>
        </trans-unit>
        <trans-unit id="ffd1ab279b81704543013ac343cefcf1e2b7548e" translate="yes" xml:space="preserve">
          <source>Directory and files operations</source>
          <target state="translated">目录和文件操作</target>
        </trans-unit>
        <trans-unit id="ca827528d6904965fcebbbcad976a987f5f845b3" translate="yes" xml:space="preserve">
          <source>Directory not empty</source>
          <target state="translated">目录不为空</target>
        </trans-unit>
        <trans-unit id="bcd01b1fcfc45feeb0b610cedd055b91feedcae8" translate="yes" xml:space="preserve">
          <source>Directory prepended to the path to each file being compiled. This will appear in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">在每个被编译文件的路径前加上目录。这将出现在编译时的回溯中,也会被编译到字节码文件中,在字节码文件执行时源文件不存在的情况下,它将被用于回溯和其他信息中。</target>
        </trans-unit>
        <trans-unit id="e24ad17992020f3be6b95a5b746b62d6077b46e8" translate="yes" xml:space="preserve">
          <source>Directory to start discovery (&lt;code&gt;.&lt;/code&gt; default)</source>
          <target state="translated">开始发现的目录（ &lt;code&gt;.&lt;/code&gt; 默认）</target>
        </trans-unit>
        <trans-unit id="aa85c82dbbd07d561fa1ca6cdd3784c4b55212eb" translate="yes" xml:space="preserve">
          <source>Directory where the report files go. The coverage report for &lt;code&gt;package.module&lt;/code&gt; is written to file &lt;code&gt;&lt;em&gt;dir&lt;/em&gt;/&lt;em&gt;package&lt;/em&gt;/&lt;em&gt;module&lt;/em&gt;.cover&lt;/code&gt;.</source>
          <target state="translated">报告文件所在的目录。对于覆盖报告 &lt;code&gt;package.module&lt;/code&gt; 被写入文件 &lt;code&gt;&lt;em&gt;dir&lt;/em&gt;/&lt;em&gt;package&lt;/em&gt;/&lt;em&gt;module&lt;/em&gt;.cover&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="b880122308ce27b5ab48c3a6d598cd3097440d21" translate="yes" xml:space="preserve">
          <source>Disable all renegotiation in TLSv1.2 and earlier. Do not send HelloRequest messages, and ignore renegotiation requests via ClientHello.</source>
          <target state="translated">在TLSv1.2及更早的版本中禁用所有的重新协商。不要发送HelloRequest消息,并忽略通过ClientHello的重新协商请求。</target>
        </trans-unit>
        <trans-unit id="6702afe54fec9e2d0d8d66485bd9af6027c6ec30" translate="yes" xml:space="preserve">
          <source>Disable automatic garbage collection.</source>
          <target state="translated">禁止自动收集垃圾。</target>
        </trans-unit>
        <trans-unit id="67ac096f22bb26091ab23d04893929ab1c5ee4a3" translate="yes" xml:space="preserve">
          <source>Disable compression on the SSL channel. This is useful if the application protocol supports its own compression scheme.</source>
          <target state="translated">在SSL通道上禁用压缩。如果应用协议支持自己的压缩方案,这很有用。</target>
        </trans-unit>
        <trans-unit id="6a617b5eeb1945ca47df687d9c7242d1929b1d88" translate="yes" xml:space="preserve">
          <source>Disable escaping of non-ascii characters, see &lt;a href=&quot;#json.dumps&quot;&gt;&lt;code&gt;json.dumps()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">禁用转义非ASCII字符，有关更多信息，请参见&lt;a href=&quot;#json.dumps&quot;&gt; &lt;code&gt;json.dumps()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8554496342320bb00b9cd6ea070562a878bad5db" translate="yes" xml:space="preserve">
          <source>Disable the breakpoints given as a space separated list of breakpoint numbers. Disabling a breakpoint means it cannot cause the program to stop execution, but unlike clearing a breakpoint, it remains in the list of breakpoints and can be (re-)enabled.</source>
          <target state="translated">禁用以空格分隔的断点编号列表给出的断点。禁用断点意味着它不能导致程序停止执行,但与清除断点不同的是,它仍保留在断点列表中,并可以(重新)启用。</target>
        </trans-unit>
        <trans-unit id="61473ef24244fd6354a880a118dc31e352e4ff73" translate="yes" xml:space="preserve">
          <source>Disable the fault handler: uninstall the signal handlers installed by &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">禁用故障处理程序：卸载&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt;安装的信号处理程序。</target>
        </trans-unit>
        <trans-unit id="9ed405df70ba7025acb374fe4e8581c83ef8fb55" translate="yes" xml:space="preserve">
          <source>Disables registry reflection for 32-bit processes running on a 64-bit operating system.</source>
          <target state="translated">禁用在64位操作系统上运行的32位进程的注册表反射。</target>
        </trans-unit>
        <trans-unit id="5bfbd758cfd4b12de4ce9b1991cf396206be8124" translate="yes" xml:space="preserve">
          <source>Disablesevent</source>
          <target state="translated">Disablesevent</target>
        </trans-unit>
        <trans-unit id="f2c139f4275906840325036c5447f3b226e78992" translate="yes" xml:space="preserve">
          <source>Disassemble a code object, indicating the last instruction if &lt;em&gt;lasti&lt;/em&gt; was provided. The output is divided in the following columns:</source>
          <target state="translated">反汇编代码对象，指示是否提供了&lt;em&gt;lasti&lt;/em&gt;的最后一条指令。输出分为以下几列：</target>
        </trans-unit>
        <trans-unit id="eb66f3ccadfa9df8451bb8de2769fa1fa09e0581" translate="yes" xml:space="preserve">
          <source>Disassemble the &lt;em&gt;x&lt;/em&gt; object. &lt;em&gt;x&lt;/em&gt; can denote either a module, a class, a method, a function, a generator, an asynchronous generator, a coroutine, a code object, a string of source code or a byte sequence of raw bytecode. For a module, it disassembles all functions. For a class, it disassembles all methods (including class and static methods). For a code object or sequence of raw bytecode, it prints one line per bytecode instruction. It also recursively disassembles nested code objects (the code of comprehensions, generator expressions and nested functions, and the code used for building nested classes). Strings are first compiled to code objects with the &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; built-in function before being disassembled. If no object is provided, this function disassembles the last traceback.</source>
          <target state="translated">拆卸&lt;em&gt;x&lt;/em&gt;对象。&lt;em&gt;x&lt;/em&gt;可以表示模块，类，方法，函数，生成器，异步生成器，协程，代码对象，源代码字符串或原始字节码的字节序列。对于模块，它将分解所有功能。对于一个类，它将分解所有方法（包括类和静态方法）。对于代码对象或原始字节码序列，每个字节码指令将打印一行。它还递归反汇编嵌套的代码对象（理解代码，生成器表达式和嵌套函数以及用于构建嵌套类的代码）。首先使用&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;将字符串编译为代码对象内置功能，在拆卸之前。如果未提供任何对象，则此函数将反汇编最后的回溯。</target>
        </trans-unit>
        <trans-unit id="c5a722487b8d1e4d30d77117b7eb465b9eac4723" translate="yes" xml:space="preserve">
          <source>Disassemble the top-of-stack function of a traceback, using the last traceback if none was passed. The instruction causing the exception is indicated.</source>
          <target state="translated">拆解回溯的栈顶函数,如果没有传递回溯函数,则使用上次回溯的函数。引起异常的指令会被指出。</target>
        </trans-unit>
        <trans-unit id="c2a4395b2a5ea228066e1b239a95864f6fbc655c" translate="yes" xml:space="preserve">
          <source>Discard all session cookies.</source>
          <target state="translated">丢弃所有会话cookie。</target>
        </trans-unit>
        <trans-unit id="2596998b4fe1168192e8b375218c5ec98e0bd94d" translate="yes" xml:space="preserve">
          <source>Discard queued data on file descriptor &lt;em&gt;fd&lt;/em&gt;. The &lt;em&gt;queue&lt;/em&gt; selector specifies which queue: &lt;code&gt;TCIFLUSH&lt;/code&gt; for the input queue, &lt;code&gt;TCOFLUSH&lt;/code&gt; for the output queue, or &lt;code&gt;TCIOFLUSH&lt;/code&gt; for both queues.</source>
          <target state="translated">丢弃文件描述符&lt;em&gt;fd&lt;/em&gt;上的排队数据。的&lt;em&gt;队列&lt;/em&gt;选择器指定哪些队列： &lt;code&gt;TCIFLUSH&lt;/code&gt; 用于输入队列， &lt;code&gt;TCOFLUSH&lt;/code&gt; 为输出队列，或 &lt;code&gt;TCIOFLUSH&lt;/code&gt; 两个队列。</target>
        </trans-unit>
        <trans-unit id="a2c9625daf2840b98fcf5f102e1b6ba05dd18ca3" translate="yes" xml:space="preserve">
          <source>Discards all contained cookies that have a true &lt;code&gt;discard&lt;/code&gt; attribute (usually because they had either no &lt;code&gt;max-age&lt;/code&gt; or &lt;code&gt;expires&lt;/code&gt; cookie-attribute, or an explicit &lt;code&gt;discard&lt;/code&gt; cookie-attribute). For interactive browsers, the end of a session usually corresponds to closing the browser window.</source>
          <target state="translated">丢弃所有包含具有真正 &lt;code&gt;discard&lt;/code&gt; 属性的cookie （通常是因为它们没有 &lt;code&gt;max-age&lt;/code&gt; 或 &lt;code&gt;expires&lt;/code&gt; cookie属性，或显式 &lt;code&gt;discard&lt;/code&gt; cookie属性）。对于交互式浏览器，会话结束通常对应于关闭浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="4e9a60543dd57372c68f390bac04e0461166ca1d" translate="yes" xml:space="preserve">
          <source>Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. This was published in &lt;a href=&quot;http://www.drdobbs.com/&quot;&gt;Dr. Dobb&amp;rsquo;s Journal&lt;/a&gt; in July, 1988.</source>
          <target state="translated">John W. Ratcliff和DE Metzener对类似算法的讨论。该论文发表于1988年7月&lt;a href=&quot;http://www.drdobbs.com/&quot;&gt;的《多布博士杂志》&lt;/a&gt;上。</target>
        </trans-unit>
        <trans-unit id="d4527219ebc14b19edf84ed58e3cf877b05f8ae4" translate="yes" xml:space="preserve">
          <source>Discussion of the special methods used to support object state retrieval and restoration.</source>
          <target state="translated">讨论用于支持对象状态检索和恢复的特殊方法。</target>
        </trans-unit>
        <trans-unit id="199d52ab4e7eeeec4b75fa2687c5cf88feebd5ce" translate="yes" xml:space="preserve">
          <source>Dispatch Tables</source>
          <target state="translated">调度表</target>
        </trans-unit>
        <trans-unit id="120c31099db22289dd35dfede7eab3541204be55" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;url&lt;/em&gt; using the browser handled by this controller. If &lt;em&gt;new&lt;/em&gt; is 1, a new browser window is opened if possible. If &lt;em&gt;new&lt;/em&gt; is 2, a new browser page (&amp;ldquo;tab&amp;rdquo;) is opened if possible.</source>
          <target state="translated">使用此控制器处理的浏览器显示&lt;em&gt;URL&lt;/em&gt;。如果&lt;em&gt;new&lt;/em&gt;为1，则如果可能，将打开一个新的浏览器窗口。如果&lt;em&gt;new&lt;/em&gt;为2，则如果可能，将打开一个新的浏览器页面（&amp;ldquo;选项卡&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f6fb36a69d73ec27ad1d1472002427d3ae1cb9ab" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;url&lt;/em&gt; using the default browser. If &lt;em&gt;new&lt;/em&gt; is 0, the &lt;em&gt;url&lt;/em&gt; is opened in the same browser window if possible. If &lt;em&gt;new&lt;/em&gt; is 1, a new browser window is opened if possible. If &lt;em&gt;new&lt;/em&gt; is 2, a new browser page (&amp;ldquo;tab&amp;rdquo;) is opened if possible. If &lt;em&gt;autoraise&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the window is raised if possible (note that under many window managers this will occur regardless of the setting of this variable).</source>
          <target state="translated">使用默认浏览器显示&lt;em&gt;网址&lt;/em&gt;。如果&lt;em&gt;new&lt;/em&gt;为0，则在可能的情况下在同一浏览器窗口中打开&lt;em&gt;url&lt;/em&gt;。如果&lt;em&gt;new&lt;/em&gt;为1，则如果可能，将打开一个新的浏览器窗口。如果&lt;em&gt;new&lt;/em&gt;为2，则如果可能，将打开一个新的浏览器页面（&amp;ldquo;选项卡&amp;rdquo;）。如果&lt;em&gt;autoraise&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则在可能的情况下升高窗口（请注意，在许多窗口管理器下，无论此变量的设置如何，都会发生此情况）。</target>
        </trans-unit>
        <trans-unit id="13017eda9a7646a38f56cc4d72d63ed546778ff6" translate="yes" xml:space="preserve">
          <source>Display a horizontal line starting at &lt;code&gt;(y, x)&lt;/code&gt; with length &lt;em&gt;n&lt;/em&gt; consisting of the character &lt;em&gt;ch&lt;/em&gt;.</source>
          <target state="translated">显示从 &lt;code&gt;(y, x)&lt;/code&gt; 开始的水平线，长度为&lt;em&gt;n，&lt;/em&gt;由字符&lt;em&gt;ch&lt;/em&gt;组成。</target>
        </trans-unit>
        <trans-unit id="f19f71996c2d490fdfdeff600e4250507ae38bb5" translate="yes" xml:space="preserve">
          <source>Display a vertical line starting at &lt;code&gt;(y, x)&lt;/code&gt; with length &lt;em&gt;n&lt;/em&gt; consisting of the character &lt;em&gt;ch&lt;/em&gt;.</source>
          <target state="translated">显示从 &lt;code&gt;(y, x)&lt;/code&gt; 开始的垂直线，长度为&lt;em&gt;n，&lt;/em&gt;由字符&lt;em&gt;ch&lt;/em&gt;组成。</target>
        </trans-unit>
        <trans-unit id="7a9d7e7727e3e3cb853031d8d0c1277467f8459b" translate="yes" xml:space="preserve">
          <source>Display debug information about compiled expression. No corresponding inline flag.</source>
          <target state="translated">显示编译后的表达式的调试信息。没有对应的内联标志。</target>
        </trans-unit>
        <trans-unit id="8920c6735bdd22367a16ff3e75e24ff01a275d3d" translate="yes" xml:space="preserve">
          <source>Display lines as they are executed.</source>
          <target state="translated">在执行时显示行。</target>
        </trans-unit>
        <trans-unit id="353e5399b87fe59bf1c77b7f579f0adff69b179d" translate="yes" xml:space="preserve">
          <source>Display the 10 files allocating the most memory:</source>
          <target state="translated">显示分配内存最多的10个文件。</target>
        </trans-unit>
        <trans-unit id="dfddf83d4b9349eea3d92aca890036f08ba476c1" translate="yes" xml:space="preserve">
          <source>Display the calling relationships exposed by running the program.</source>
          <target state="translated">显示运行程序所暴露的调用关系。</target>
        </trans-unit>
        <trans-unit id="acc7bc5de5e0e49fb62bcc6a7ffe55ed19638aef" translate="yes" xml:space="preserve">
          <source>Display the current date with call_later()</source>
          <target state="translated">用call_later()显示当前日期。</target>
        </trans-unit>
        <trans-unit id="27969bc4b7ef1252a2b1e1a3c667ae4c6936e686" translate="yes" xml:space="preserve">
          <source>Display the exception that just occurred. We remove the first stack item because it is within the interpreter object implementation. The output is written by the &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">显示刚刚发生的异常。我们删除第一个堆栈项，因为它在解释器对象实现中。输出由&lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法写入。</target>
        </trans-unit>
        <trans-unit id="707e41d17abca028a5e98cfa1758e30bd472c734" translate="yes" xml:space="preserve">
          <source>Display the functions executed by running the program.</source>
          <target state="translated">显示通过运行程序执行的功能。</target>
        </trans-unit>
        <trans-unit id="7c2f45b5531b60dc5a7d302f261bf0a21953134d" translate="yes" xml:space="preserve">
          <source>Display the interpreter embedded in the archive, for diagnostic purposes. In this case, any other options are ignored and SOURCE must be an archive, not a directory.</source>
          <target state="translated">显示嵌入在存档中的解释器,用于诊断目的。在这种情况下,任何其他选项都会被忽略,而且SOURCE必须是一个存档,而不是一个目录。</target>
        </trans-unit>
        <trans-unit id="f51b781010d52173391d7f7c2cabf79ba6b00c3a" translate="yes" xml:space="preserve">
          <source>Display the panel (which might have been hidden).</source>
          <target state="translated">显示面板(可能已经被隐藏)。</target>
        </trans-unit>
        <trans-unit id="80b34d14136938fe6e2823bb4036030f94af3ed5" translate="yes" xml:space="preserve">
          <source>Display the syntax error that just occurred. This does not display a stack trace because there isn&amp;rsquo;t one for syntax errors. If &lt;em&gt;filename&lt;/em&gt; is given, it is stuffed into the exception instead of the default filename provided by Python&amp;rsquo;s parser, because it always uses &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; when reading from a string. The output is written by the &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">显示刚发生的语法错误。这不会显示堆栈跟踪，因为语法错误没有一个。如果给出了&lt;em&gt;filename&lt;/em&gt;，它将填充到异常中，而不是Python解析器提供的默认文件名，因为从字符串读取时，它始终使用 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; 。输出由&lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法写入。</target>
        </trans-unit>
        <trans-unit id="67b271d8095bfb0281d7cadf4bee170b8076a98c" translate="yes" xml:space="preserve">
          <source>Display the top 10</source>
          <target state="translated">显示前10名</target>
        </trans-unit>
        <trans-unit id="24ba3c37ed6f52b28171c9f6d98aed2e8d196536" translate="yes" xml:space="preserve">
          <source>Display the value of the expression if it changed, each time execution stops in the current frame.</source>
          <target state="translated">每次在当前帧中停止执行时,显示表达式的值是否改变。</target>
        </trans-unit>
        <trans-unit id="1c38724023d1d974b88c593a9b7e180d2e599d65" translate="yes" xml:space="preserve">
          <source>Display the version of the module and exit.</source>
          <target state="translated">显示模块的版本并退出。</target>
        </trans-unit>
        <trans-unit id="029e04b31534b7edac240599c5b991dcaf5bba7e" translate="yes" xml:space="preserve">
          <source>Display this IDLE document, detailing the menu options, basic editing and navigation, and other tips.</source>
          <target state="translated">显示这个IDLE文档,详细介绍菜单选项、基本编辑和导航等提示。</target>
        </trans-unit>
        <trans-unit id="b10a75882873e7163ae8a8a02e0a51df096ef953" translate="yes" xml:space="preserve">
          <source>Display usage and exit.</source>
          <target state="translated">显示使用情况并退出。</target>
        </trans-unit>
        <trans-unit id="a4bd2df6e17ff0f0517f62a68c5aa517f24226b3" translate="yes" xml:space="preserve">
          <source>Display version, copyright, license, credits, and more.</source>
          <target state="translated">显示版本、版权、许可、信用等。</target>
        </trans-unit>
        <trans-unit id="009ce48f7048f7e5f0cb064ebec8077d5c89382e" translate="yes" xml:space="preserve">
          <source>Disposition</source>
          <target state="translated">Disposition</target>
        </trans-unit>
        <trans-unit id="20b69002d2c6e520b927b3a43dea0de43d58c5f7" translate="yes" xml:space="preserve">
          <source>Distinct argument patterns may be considered to be distinct calls with separate cache entries. For example, &lt;code&gt;f(a=1, b=2)&lt;/code&gt; and &lt;code&gt;f(b=2, a=1)&lt;/code&gt; differ in their keyword argument order and may have two separate cache entries.</source>
          <target state="translated">可以将不同的参数模式视为具有单独的缓存项的不同调用。例如， &lt;code&gt;f(a=1, b=2)&lt;/code&gt; 和 &lt;code&gt;f(b=2, a=1)&lt;/code&gt; 的关键字参数顺序不同，并且可能具有两个单独的缓存条目。</target>
        </trans-unit>
        <trans-unit id="7cd1c8a78ee9c2a7323dae344547c6d55dc3fb14" translate="yes" xml:space="preserve">
          <source>Distinct from both single use and reentrant context managers are &amp;ldquo;reusable&amp;rdquo; context managers (or, to be completely explicit, &amp;ldquo;reusable, but not reentrant&amp;rdquo; context managers, since reentrant context managers are also reusable). These context managers support being used multiple times, but will fail (or otherwise not work correctly) if the specific context manager instance has already been used in a containing with statement.</source>
          <target state="translated">与一次性使用和可重入上下文管理器截然不同的是&amp;ldquo;可重用&amp;rdquo;上下文管理器（或完全明确的，&amp;ldquo;可重用但不可重入&amp;rdquo;的上下文管理器，因为可重入上下文管理器也可重用）。这些上下文管理器支持多次使用，但是如果特定的上下文管理器实例已在包含with语句中使用，则将失败（否则将无法正常工作）。</target>
        </trans-unit>
        <trans-unit id="85af23b5424dad3c493f2e8d5a5b573cc731a8e3" translate="yes" xml:space="preserve">
          <source>Distinguishing test iterations using subtests</source>
          <target state="translated">使用子测试来区分测试迭代。</target>
        </trans-unit>
        <trans-unit id="788e31b37b8efd934ca4ce597a5260242da6c678" translate="yes" xml:space="preserve">
          <source>Distributing Python Modules (Legacy version)</source>
          <target state="translated">分发Python模块 (旧版)</target>
        </trans-unit>
        <trans-unit id="46be8efcce69378124f44728d91708a8597915f8" translate="yes" xml:space="preserve">
          <source>Distribution files</source>
          <target state="translated">分发文件</target>
        </trans-unit>
        <trans-unit id="218a336f7d3c8849777d9ee8add3bbed03333de2" translate="yes" xml:space="preserve">
          <source>Distribution metadata</source>
          <target state="translated">分发元数据</target>
        </trans-unit>
        <trans-unit id="20a0cd11e022f816090238286fd14f8d2b546e87" translate="yes" xml:space="preserve">
          <source>Distribution requirements</source>
          <target state="translated">分配需求</target>
        </trans-unit>
        <trans-unit id="6d9fbc32b4eaa47c3d3e3e0f4259a92de14156ef" translate="yes" xml:space="preserve">
          <source>Distribution versions</source>
          <target state="translated">发行版本</target>
        </trans-unit>
        <trans-unit id="71fff5ea85661c16e7519843bc17a41ff8e91eb9" translate="yes" xml:space="preserve">
          <source>Distributions</source>
          <target state="translated">Distributions</target>
        </trans-unit>
        <trans-unit id="dba5f7b801f7c7025e3dabcd3d37753760f4dbe1" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;data&lt;/em&gt; into &lt;em&gt;n&lt;/em&gt; continuous intervals with equal probability. Returns a list of &lt;code&gt;n - 1&lt;/code&gt; cut points separating the intervals.</source>
          <target state="translated">将&lt;em&gt;数据&lt;/em&gt;以相等的概率分成&lt;em&gt;n个&lt;/em&gt;连续的间隔。返回分隔间隔的 &lt;code&gt;n - 1&lt;/code&gt; 切点的列表。</target>
        </trans-unit>
        <trans-unit id="aa3e27e86228c726c3ef08f35de01264e76d72a0" translate="yes" xml:space="preserve">
          <source>Divide data into intervals with equal probability.</source>
          <target state="translated">将数据划分为概率相等的区间。</target>
        </trans-unit>
        <trans-unit id="7a294dbc43830d66cf929c8c8b3998bdb4327fb6" translate="yes" xml:space="preserve">
          <source>Divide the given string into examples and intervening text, and return them as a list of alternating &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s and strings. Line numbers for the &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s are 0-based. The optional argument &lt;em&gt;name&lt;/em&gt; is a name identifying this string, and is only used for error messages.</source>
          <target state="translated">将给定的字符串分成示例和中间文本，然后将它们作为&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;和字符串的交替列表返回。&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;的行号从0开始。可选参数&lt;em&gt;名称&lt;/em&gt;是标识此字符串的名称，仅用于错误消息。</target>
        </trans-unit>
        <trans-unit id="287a88fed9b5807828cdc14c0e4c5235f42ad073" translate="yes" xml:space="preserve">
          <source>Divide the normal distribution into &lt;em&gt;n&lt;/em&gt; continuous intervals with equal probability. Returns a list of (n - 1) cut points separating the intervals.</source>
          <target state="translated">将正态分布以相等的概率分成&lt;em&gt;n个&lt;/em&gt;连续的间隔。返回分隔间隔的（n-1）个切割点的列表。</target>
        </trans-unit>
        <trans-unit id="6572353bc2d41f71740a90e1de08f6ac079aa71c" translate="yes" xml:space="preserve">
          <source>Divides two numbers and returns the integer part of the result.</source>
          <target state="translated">将两个数相除并返回结果的整数部分。</target>
        </trans-unit>
        <trans-unit id="30d936ef2bdc1ec9706ee5f744c29609c9ac3aa5" translate="yes" xml:space="preserve">
          <source>Dividing a constant by an instance of &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; is not supported because the result wouldn&amp;rsquo;t be normally distributed.</source>
          <target state="translated">不支持将常量除以&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt;实例，因为结果不会呈正态分布。</target>
        </trans-unit>
        <trans-unit id="bbbec44416269797757a1579d0b1247911acd066" translate="yes" xml:space="preserve">
          <source>Division</source>
          <target state="translated">Division</target>
        </trans-unit>
        <trans-unit id="e5eb20e5c067ea0c34b9ac912ec95b871121e9ea" translate="yes" xml:space="preserve">
          <source>Division (3) of overall duration &lt;em&gt;t2&lt;/em&gt; by interval unit &lt;em&gt;t3&lt;/em&gt;. Returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">总持续时间&lt;em&gt;t2&lt;/em&gt;的（3）除以间隔单位&lt;em&gt;t3&lt;/em&gt;。返回一个&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bdbac7241c2f36b2d99a0ed0c6cd33d0082be63f" translate="yes" xml:space="preserve">
          <source>Division by 0 raises &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除以0会引发&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cb1f784122a51e930d4116beaebb03612ed0f90" translate="yes" xml:space="preserve">
          <source>Django&amp;rsquo;s &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/context.py&quot;&gt;Context class&lt;/a&gt; for templating is a read-only chain of mappings. It also features pushing and popping of contexts similar to the &lt;a href=&quot;#collections.ChainMap.new_child&quot;&gt;&lt;code&gt;new_child()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#collections.ChainMap.parents&quot;&gt;&lt;code&gt;parents&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Django 用于模板化的&lt;a href=&quot;https://github.com/django/django/blob/master/django/template/context.py&quot;&gt;Context类&lt;/a&gt;是一个只读的映射链。它还具有类似于&lt;a href=&quot;#collections.ChainMap.new_child&quot;&gt; &lt;code&gt;new_child()&lt;/code&gt; &lt;/a&gt;方法和&lt;a href=&quot;#collections.ChainMap.parents&quot;&gt; &lt;code&gt;parents&lt;/code&gt; &lt;/a&gt;属性的上下文推送和弹出功能。</target>
        </trans-unit>
        <trans-unit id="eeb591199802a69e904d88d2106b2d31bf4d9722" translate="yes" xml:space="preserve">
          <source>Do &lt;a href=&quot;#check-module&quot;&gt;Check Module&lt;/a&gt;. If no error, restart the shell to clean the environment, then execute the module. Output is displayed in the Shell window. Note that output requires use of &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt;. When execution is complete, the Shell retains focus and displays a prompt. At this point, one may interactively explore the result of execution. This is similar to executing a file with &lt;code&gt;python -i file&lt;/code&gt; at a command line.</source>
          <target state="translated">请&lt;a href=&quot;#check-module&quot;&gt;检查模块&lt;/a&gt;。如果没有错误，请重新启动外壳以清理环境，然后执行模块。输出显示在&amp;ldquo;外壳&amp;rdquo;窗口中。请注意，输出需要使用 &lt;code&gt;print&lt;/code&gt; 或 &lt;code&gt;write&lt;/code&gt; 。执行完成后，命令行管理程序将保留焦点并显示提示。在这一点上，可以交互地探索执行的结果。这类似于在命令行使用 &lt;code&gt;python -i file&lt;/code&gt; 执行文件。</target>
        </trans-unit>
        <trans-unit id="cd9e4d30f8cc723de4d149fa329ee8f8a98dc4bd" translate="yes" xml:space="preserve">
          <source>Do a plural-forms lookup of a message id. &lt;em&gt;singular&lt;/em&gt; is used as the message id for purposes of lookup in the catalog, while &lt;em&gt;n&lt;/em&gt; is used to determine which plural form to use.</source>
          <target state="translated">对消息ID进行复数形式的查找。在目录中查找时，&lt;em&gt;单数&lt;/em&gt;用作消息ID，而&lt;em&gt;n&lt;/em&gt;用于确定使用哪种复数形式。</target>
        </trans-unit>
        <trans-unit id="68cd8fd719e9ac463c601d1f4195c63b4fd3351c" translate="yes" xml:space="preserve">
          <source>Do a plural-forms lookup of a message id. &lt;em&gt;singular&lt;/em&gt; is used as the message id for purposes of lookup in the catalog, while &lt;em&gt;n&lt;/em&gt; is used to determine which plural form to use. The returned message string is a Unicode string.</source>
          <target state="translated">对消息ID进行复数形式的查找。在目录中查找时，&lt;em&gt;单数&lt;/em&gt;用作消息ID，而&lt;em&gt;n&lt;/em&gt;用于确定使用哪种复数形式。返回的消息字符串是Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="e0a441b7398a9f65222c06733df2a4d2e2b02ec5" translate="yes" xml:space="preserve">
          <source>Do formatting for a record - if a formatter is set, use it. Otherwise, use the default formatter for the module.</source>
          <target state="translated">对记录进行格式化--如果设置了格式化器,就使用它,否则,使用模块的默认格式化器。否则,使用模块的默认格式化。</target>
        </trans-unit>
        <trans-unit id="b6589e67d3090bf9b9da4d718362d012c0a32f12" translate="yes" xml:space="preserve">
          <source>Do not display the expression any more in the current frame. Without expression, clear all display expressions for the current frame.</source>
          <target state="translated">不在当前帧中再显示表达式。不显示表情,清除当前帧的所有显示表情。</target>
        </trans-unit>
        <trans-unit id="06521232fa735574a02ca5b55fa8b562caa16292" translate="yes" xml:space="preserve">
          <source>Do not dump the file.</source>
          <target state="translated">不要转储文件。</target>
        </trans-unit>
        <trans-unit id="c632735f4b8d924e489d3bafe3a21ea4e348fd93" translate="yes" xml:space="preserve">
          <source>Do not generate annotated listings. This is useful if you intend to make several runs with &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt;, and then produce a single set of annotated listings at the end.</source>
          <target state="translated">不要生成带注释的列表。如果打算使用&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt;进行多次运行，然后在末尾生成一组带注释的清单，则这很有用。</target>
        </trans-unit>
        <trans-unit id="ccc05b92eed59e4a3f1ef94ac0ab070f30b719be" translate="yes" xml:space="preserve">
          <source>Do not instantiate the class directly.</source>
          <target state="translated">不要直接实例化该类。</target>
        </trans-unit>
        <trans-unit id="50afc3876abe8deb63fcb13bb579ac815ed47f90" translate="yes" xml:space="preserve">
          <source>Do not interrupt sounds currently playing.</source>
          <target state="translated">不要中断当前播放的声音。</target>
        </trans-unit>
        <trans-unit id="1024b9422648b3adf0f39455ac5cba143511fea3" translate="yes" xml:space="preserve">
          <source>Do not lock database.</source>
          <target state="translated">不要锁定数据库。</target>
        </trans-unit>
        <trans-unit id="4a7c43cbc655e7bcf00394f4473ebe655a06041a" translate="yes" xml:space="preserve">
          <source>Do not print the list of files compiled. If passed once, error messages will still be printed. If passed twice (&lt;code&gt;-qq&lt;/code&gt;), all output is suppressed.</source>
          <target state="translated">不要打印已编译文件的列表。如果通过一次，错误消息仍将被打印。如果传递两次（ &lt;code&gt;-qq&lt;/code&gt; ），则所有输出均被抑制。</target>
        </trans-unit>
        <trans-unit id="5a4af04dfadd635864f1d47051a2f6d2d40a7326" translate="yes" xml:space="preserve">
          <source>Do not recurse into subdirectories, only compile source code files directly contained in the named or implied directories.</source>
          <target state="translated">不要递归到子目录,只编译直接包含在命名或隐含目录中的源代码文件。</target>
        </trans-unit>
        <trans-unit id="12d94812e86e2c93f2de3c4eb8df6b85de7af955" translate="yes" xml:space="preserve">
          <source>Do not rely on the shelf being closed automatically; always call &lt;a href=&quot;#shelve.Shelf.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; explicitly when you don&amp;rsquo;t need it any more, or use &lt;a href=&quot;#shelve.open&quot;&gt;&lt;code&gt;shelve.open()&lt;/code&gt;&lt;/a&gt; as a context manager:</source>
          <target state="translated">不要依靠架子自动关闭；总是在不需要的时候显式调用&lt;a href=&quot;#shelve.Shelf.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;，或者使用&lt;a href=&quot;#shelve.open&quot;&gt; &lt;code&gt;shelve.open()&lt;/code&gt; &lt;/a&gt;作为上下文管理器：</target>
        </trans-unit>
        <trans-unit id="40de5cf71f2263de0c71c91bd19a81f093c553d5" translate="yes" xml:space="preserve">
          <source>Do not reopen an already connected instance.</source>
          <target state="translated">不要重新打开一个已经连接的实例。</target>
        </trans-unit>
        <trans-unit id="8fe4941def3982e086581837fb544fe5fa8976d7" translate="yes" xml:space="preserve">
          <source>Do not set &lt;a href=&quot;#signal.SIGPIPE&quot;&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s disposition to &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt; in order to avoid &lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt;. Doing that would cause your program to exit unexpectedly also whenever any socket connection is interrupted while your program is still writing to it.</source>
          <target state="translated">请勿将&lt;a href=&quot;#signal.SIGPIPE&quot;&gt; &lt;code&gt;SIGPIPE&lt;/code&gt; &lt;/a&gt;的处理方式设置为&lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt;，以避免&lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt;。这样做还会导致在程序仍在写入时任何套接字连接中断时，程序也会异常退出。</target>
        </trans-unit>
        <trans-unit id="5ce5d4dcc66330340d108fe7d87893af7471ed1f" translate="yes" xml:space="preserve">
          <source>Do not set &lt;code&gt;SIGPIPE&lt;/code&gt;&amp;rsquo;s disposition to &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt; in order to avoid &lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt;. Doing that would cause your program to exit unexpectedly also whenever any socket connection is interrupted while your program is still writing to it.</source>
          <target state="translated">请勿将 &lt;code&gt;SIGPIPE&lt;/code&gt; 的处理方式设置为&lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt;，以避免&lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt;。这样做还会导致在程序仍在写入时任何套接字连接中断时，程序也会意外退出。</target>
        </trans-unit>
        <trans-unit id="393ebdae087b04fef0d03db43359e5113026e598" translate="yes" xml:space="preserve">
          <source>Do not try to reopen an already connected instance.</source>
          <target state="translated">不要试图重新打开一个已经连接的实例。</target>
        </trans-unit>
        <trans-unit id="cedb87dc9f6380227ee290d839e507e4f318c8f9" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; with this function. The child process will block if it generates enough output to a pipe to fill up the OS pipe buffer as the pipes are not being read from.</source>
          <target state="translated">请勿将此功能与 &lt;code&gt;stdout=PIPE&lt;/code&gt; 或 &lt;code&gt;stderr=PIPE&lt;/code&gt; 一起使用。如果子进程为管道生成足够的输出以填充OS管道缓冲区，则该子进程将阻塞，因为未从中读取管道。</target>
        </trans-unit>
        <trans-unit id="de65886633d48caad23e43d68744518a68705029" translate="yes" xml:space="preserve">
          <source>Do not use a proxy object from more than one thread unless you protect it with a lock.</source>
          <target state="translated">不要使用一个以上线程的代理对象,除非你用锁保护它。</target>
        </trans-unit>
        <trans-unit id="6560f226fca8db32a9c82c605563fe8e8a89e12d" translate="yes" xml:space="preserve">
          <source>Do not wait for data which is not immediately available. If this flag is specified, the system call will return instantly if it would have to read data from the backing storage or wait for a lock.</source>
          <target state="translated">不要等待不是立即可用的数据。如果指定了这个标志,如果系统调用必须从备份存储中读取数据或等待锁,系统调用将立即返回。</target>
        </trans-unit>
        <trans-unit id="c0132ab944eec806896591b4dcefc5c8c94b4538" translate="yes" xml:space="preserve">
          <source>Do nothing by default. This exists so a subclass can override it.</source>
          <target state="translated">默认情况下什么都不做。这个存在是为了让子类可以覆盖它。</target>
        </trans-unit>
        <trans-unit id="1cf886c54793b70e8941f7ee56688e9c0987e9a4" translate="yes" xml:space="preserve">
          <source>Do nothing code. Used as a placeholder by the bytecode optimizer.</source>
          <target state="translated">不做任何事情的代码。被字节码优化器用作占位符。</target>
        </trans-unit>
        <trans-unit id="b79381b5e4abbab070d893c170cf6863d7f68d8f" translate="yes" xml:space="preserve">
          <source>Do nothing if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is not tracing memory allocations.</source>
          <target state="translated">如果&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;模块未跟踪内存分配，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="265c757a06e5de848a47f036dfceb6ab1cf300cc" translate="yes" xml:space="preserve">
          <source>Do nothing if the process completed.</source>
          <target state="translated">如果过程完成,什么都不做。</target>
        </trans-unit>
        <trans-unit id="63a53b3c148512836e10b471262a7b6c2e6d6ef8" translate="yes" xml:space="preserve">
          <source>Do nothing. Might be used as a keep-alive.</source>
          <target state="translated">什么都不做。可能会被用作保命。</target>
        </trans-unit>
        <trans-unit id="c873b0f21139faab33c49c07e735493d868a9f61" translate="yes" xml:space="preserve">
          <source>Do whatever it takes to actually log the specified logging record. This version is intended to be implemented by subclasses and so raises a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">执行任何操作以实际记录指定的记录记录。此版本旨在由子类实现，因此引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82a1c2e28fd0eb3132bb7ba77b16bc64702f8182" translate="yes" xml:space="preserve">
          <source>DocCGIXMLRPCRequestHandler</source>
          <target state="translated">DocCGIXMLRPCRequestHandler</target>
        </trans-unit>
        <trans-unit id="1ca5aa6039469fe8728dd326bd8c3cb563edc91d" translate="yes" xml:space="preserve">
          <source>DocTest Objects</source>
          <target state="translated">DocTest对象</target>
        </trans-unit>
        <trans-unit id="73f9464603c21d6597be356ca9db0699a606c183" translate="yes" xml:space="preserve">
          <source>DocTestFinder objects</source>
          <target state="translated">DocTestFinder对象</target>
        </trans-unit>
        <trans-unit id="f929c1001ce7dc1e5d6017ef4471a48cd0c00655" translate="yes" xml:space="preserve">
          <source>DocTestParser objects</source>
          <target state="translated">DocTestParser对象</target>
        </trans-unit>
        <trans-unit id="b644827da6680ffaf980ed80a6f83fb238489881" translate="yes" xml:space="preserve">
          <source>DocTestRunner objects</source>
          <target state="translated">DocTestRunner对象</target>
        </trans-unit>
        <trans-unit id="dbd1b3059dc7d5c324f4210557c75552c0f77590" translate="yes" xml:space="preserve">
          <source>DocXMLRPCServer Objects</source>
          <target state="translated">DocXMLRPCServer对象</target>
        </trans-unit>
        <trans-unit id="385ac7c1acbac24f9d3c3a76215d29ce43eca20f" translate="yes" xml:space="preserve">
          <source>Docstrings can be customized by making direct assignments to the &lt;code&gt;__doc__&lt;/code&gt; fields:</source>
          <target state="translated">可以通过直接分配 &lt;code&gt;__doc__&lt;/code&gt; 字段来自定义文档字符串：</target>
        </trans-unit>
        <trans-unit id="3efe7d550d55032ef1a594fe010efc79ad889696" translate="yes" xml:space="preserve">
          <source>Doctest also makes an excellent tool for regression testing, especially if you don&amp;rsquo;t skimp on explanatory text. By interleaving prose and examples, it becomes much easier to keep track of what&amp;rsquo;s actually being tested, and why. When a test fails, good prose can make it much easier to figure out what the problem is, and how it should be fixed. It&amp;rsquo;s true that you could write extensive comments in code-based testing, but few programmers do. Many have found that using doctest approaches instead leads to much clearer tests. Perhaps this is simply because doctest makes writing prose a little easier than writing code, while writing comments in code is a little harder. I think it goes deeper than just that: the natural attitude when writing a doctest-based test is that you want to explain the fine points of your software, and illustrate them with examples. This in turn naturally leads to test files that start with the simplest features, and logically progress to complications and edge cases. A coherent narrative is the result, instead of a collection of isolated functions that test isolated bits of functionality seemingly at random. It&amp;rsquo;s a different attitude, and produces different results, blurring the distinction between testing and explaining.</source>
          <target state="translated">Doctest还是用于回归测试的出色工具，尤其是如果您不漏读解释性文字。通过交织散文和示例，可以更轻松地跟踪实际测试的内容以及原因。当测试失败时，好的散文可以使找出问题的根源以及应该如何解决变得容易得多。的确，您可以在基于代码的测试中编写大量注释，但很少有程序员这样做。许多人发现使用doctest方法可以带来更清晰的测试。也许这仅仅是因为doctest使编写散文比编写代码要容易一些，而在代码中编写注释要困难一些。我认为这不仅限于此：编写基于doctest的测试时，自然的态度是您要解释软件的优点，并通过示例进行说明。这自然会导致测试文件以最简单的功能开始，并从逻辑上发展为复杂情况和极端情况。结果是连贯的叙述，而不是孤立的函数的集合，这些孤立的函数似乎随机地测试孤立的功能位。这是一种不同的态度，并产生不同的结果，从而模糊了测试和解释之间的区别。</target>
        </trans-unit>
        <trans-unit id="fcbd85d55b4ae1c1b68c5c4968f941e910f8f6eb" translate="yes" xml:space="preserve">
          <source>Doctest can&amp;rsquo;t guess whether your expected output came from an exception traceback or from ordinary printing. So, e.g., an example that expects &lt;code&gt;ValueError: 42 is prime&lt;/code&gt; will pass whether &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is actually raised or if the example merely prints that traceback text. In practice, ordinary output rarely begins with a traceback header line, so this doesn&amp;rsquo;t create real problems.</source>
          <target state="translated">Doctest无法猜测您的预期输出是来自异常回溯还是来自普通打印。因此，例如，一个预期 &lt;code&gt;ValueError: 42 is prime&lt;/code&gt; 的示例将通过&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;是实际引发还是仅打印该回溯文本的示例。实际上，普通输出很少以回溯头行开头，因此这不会造成实际问题。</target>
        </trans-unit>
        <trans-unit id="c6535db5edc84e2b27c0941ee6ab8317ae646202" translate="yes" xml:space="preserve">
          <source>Doctest directives may be used to modify the &lt;a href=&quot;#doctest-options&quot;&gt;option flags&lt;/a&gt; for an individual example. Doctest directives are special Python comments following an example&amp;rsquo;s source code:</source>
          <target state="translated">Doctest指令可用于修改单个示例的&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;。Doctest指令是在示例源代码之后的特殊Python注释：</target>
        </trans-unit>
        <trans-unit id="6b26d4e14358a0d63bbcd8212793958f73f96735" translate="yes" xml:space="preserve">
          <source>Doctest provides several mechanisms for debugging doctest examples:</source>
          <target state="translated">Doctest提供了几种调试doctest实例的机制。</target>
        </trans-unit>
        <trans-unit id="e740d41cc733e38d4a21312172b56d6ea8e3a666" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 1 Specification</source>
          <target state="translated">文档对象模型(DOM)一级规范</target>
        </trans-unit>
        <trans-unit id="6be2ce90f6e0398537ee671de98726b9a59795a4" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 2 Specification</source>
          <target state="translated">文档对象模型(DOM)二级规范</target>
        </trans-unit>
        <trans-unit id="9a3a1b08117152fba18c532a4c06ba131ed34f12" translate="yes" xml:space="preserve">
          <source>Document Objects</source>
          <target state="translated">文件对象</target>
        </trans-unit>
        <trans-unit id="b99accd9e73ee9bb14ab8b72d9ac2c0cbbe19ce9" translate="yes" xml:space="preserve">
          <source>Document describing the generic syntactic requirements for both Uniform Resource Names (URNs) and Uniform Resource Locators (URLs).</source>
          <target state="translated">描述统一资源名称(URN)和统一资源定位器(URL)的通用语法要求的文件。</target>
        </trans-unit>
        <trans-unit id="56aec556555fb59a8820b30b25469c6d976fb748" translate="yes" xml:space="preserve">
          <source>DocumentType Objects</source>
          <target state="translated">文档类型对象</target>
        </trans-unit>
        <trans-unit id="71330a4d4ce5df6d4a272f28923ca430bad572ac" translate="yes" xml:space="preserve">
          <source>Documentation for tar archive files, including GNU tar extensions.</source>
          <target state="translated">关于tar存档文件的文档,包括GNU tar扩展文件。</target>
        </trans-unit>
        <trans-unit id="7bbda680f665e0833e2d6c4158a5e8679b7f993a" translate="yes" xml:space="preserve">
          <source>Documentation of the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; standard module.</source>
          <target state="translated">&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;标准模块的文档。</target>
        </trans-unit>
        <trans-unit id="c48574c7a3ee1deed4dd1acbed50852343aee3ba" translate="yes" xml:space="preserve">
          <source>Documentation of the higher-level archiving facilities provided by the standard &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">标准&lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;模块提供的高级归档工具的文档。</target>
        </trans-unit>
        <trans-unit id="35469c2ea1370f03c82a5166accde7c0b88be3ab" translate="yes" xml:space="preserve">
          <source>Documentation of underlying &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">基础&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;类的文档</target>
        </trans-unit>
        <trans-unit id="54469b6bd39b705e43b8962025cf5f918051f4d6" translate="yes" xml:space="preserve">
          <source>Documentation on the ZIP file format by Phil Katz, the creator of the format and algorithms used.</source>
          <target state="translated">关于ZIP文件格式的文档,由ZIP文件格式的创造者Phil Katz撰写,以及所使用的算法。</target>
        </trans-unit>
        <trans-unit id="dfc3f775cf5605ee404503333f0469b1ec2c9db4" translate="yes" xml:space="preserve">
          <source>Documenting XMLRPC server</source>
          <target state="translated">记录XMLRPC服务器</target>
        </trans-unit>
        <trans-unit id="7f4e3c304116baf5bc099500ff7f0ff374185591" translate="yes" xml:space="preserve">
          <source>Documents describing the protocol, and sources and binaries for servers implementing it, can all be found at the University of Washington&amp;rsquo;s &lt;em&gt;IMAP Information Center&lt;/em&gt; (&lt;a href=&quot;https://www.washington.edu/imap/&quot;&gt;https://www.washington.edu/imap/&lt;/a&gt;).</source>
          <target state="translated">可以在华盛顿大学&lt;em&gt;IMAP信息中心&lt;/em&gt;（&lt;a href=&quot;https://www.washington.edu/imap/&quot;&gt;https://www.washington.edu/imap/&lt;/a&gt;）上找到描述协议的文档以及实现该协议的服务器的源文件和二进制文件。</target>
        </trans-unit>
        <trans-unit id="96ac8cee958aa67c5f7fedc6c1005eaeb9fbedf6" translate="yes" xml:space="preserve">
          <source>Does a rollover, as described above.</source>
          <target state="translated">做一个翻身,如上所述。</target>
        </trans-unit>
        <trans-unit id="7a8626e81074581005f4c901e9c1a54a5825b177" translate="yes" xml:space="preserve">
          <source>Does basic configuration for the logging system by creating a &lt;a href=&quot;logging.handlers#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt; with a default &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; and adding it to the root logger. The functions &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.warning&quot;&gt;&lt;code&gt;warning()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.error&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.critical&quot;&gt;&lt;code&gt;critical()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt; automatically if no handlers are defined for the root logger.</source>
          <target state="translated">通过创建带有默认&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;logging.handlers#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt;并将其添加到根记录器中，对记录系统进行基本配置。功能&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.warning&quot;&gt; &lt;code&gt;warning()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.error&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#logging.critical&quot;&gt; &lt;code&gt;critical()&lt;/code&gt; &lt;/a&gt;将调用&lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; &lt;/a&gt;自动，如果没有处理程序的根记录定义。</target>
        </trans-unit>
        <trans-unit id="ad0846e643d2a7724261b5a5d3f96eaae8b761fa" translate="yes" xml:space="preserve">
          <source>DomainFilter</source>
          <target state="translated">DomainFilter</target>
        </trans-unit>
        <trans-unit id="de01c31d5c21fe5caa3232783ced4d1c02a6b27a" translate="yes" xml:space="preserve">
          <source>Domains in block or allow lists that do not start with a dot must equal the cookie domain to be matched. For example, &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; matches a blacklist entry of &lt;code&gt;&quot;example.com&quot;&lt;/code&gt;, but &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; does not. Domains that do start with a dot are matched by more specific domains too. For example, both &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; and &lt;code&gt;&quot;www.coyote.example.com&quot;&lt;/code&gt; match &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; (but &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; itself does not). IP addresses are an exception, and must match exactly. For example, if blocked_domains contains &lt;code&gt;&quot;192.168.1.2&quot;&lt;/code&gt; and &lt;code&gt;&quot;.168.1.2&quot;&lt;/code&gt;, 192.168.1.2 is blocked, but 193.168.1.2 is not.</source>
          <target state="translated">阻止列表或允许列表中不以点开头的域必须等于要匹配的Cookie域。例如， &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 相匹配的黑名单 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; ，但 &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 没有。以点开头的域也会与更多特定域匹配。例如， &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;www.coyote.example.com&quot;&lt;/code&gt; 匹配 &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; （但 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 本身不匹配）。 IP地址是一个例外，必须完全匹配。例如，如果blocked_domains包含 &lt;code&gt;&quot;192.168.1.2&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;.168.1.2&quot;&lt;/code&gt; ，则192.168.1.2被阻止，但不是193.168.1.2。</target>
        </trans-unit>
        <trans-unit id="cf96a1e7a8abc2d716d1f2663d364ef25b9418d7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t add &lt;em&gt;Cookie2&lt;/em&gt; header to requests (the presence of this header indicates to the server that we understand &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies).</source>
          <target state="translated">不要在请求中添加&lt;em&gt;Cookie2&lt;/em&gt;标头（此标头的存在向服务器表明我们了解&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; Cookie）。</target>
        </trans-unit>
        <trans-unit id="55793ccb24e71c744183363c60eb5bcab00036d0" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow setting cookies whose path doesn&amp;rsquo;t path-match request URI.</source>
          <target state="translated">不允许设置其路径与请求URI不匹配的cookie。</target>
        </trans-unit>
        <trans-unit id="0646536920e21baacc70a4a35d41604e456fa60e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow sites to set two-component domains with country-code top-level domains like &lt;code&gt;.co.uk&lt;/code&gt;, &lt;code&gt;.gov.uk&lt;/code&gt;, &lt;code&gt;.co.nz&lt;/code&gt;.etc. This is far from perfect and isn&amp;rsquo;t guaranteed to work!</source>
          <target state="translated">不允许网站使用国家/地区代码顶级域名（例如 &lt;code&gt;.co.uk&lt;/code&gt; ， &lt;code&gt;.gov.uk&lt;/code&gt; ， &lt;code&gt;.co.nz&lt;/code&gt; .etc）设置两部分域名。这远非完美，不能保证能正常工作！</target>
        </trans-unit>
        <trans-unit id="9a8ed9cba02c1b5af492322ff1a5bd489834f04f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t confuse this with the &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">不要将此与&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;模块混淆</target>
        </trans-unit>
        <trans-unit id="4b9dd891921e1fac8c1f37c42d9157badf88fc9e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t parse type comments.</source>
          <target state="translated">不要解析类型注释。</target>
        </trans-unit>
        <trans-unit id="d7fbf8a3496384473277777e85aca46d6bd68611" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to give a CGI script a set-uid mode. This doesn&amp;rsquo;t work on most systems, and is a security liability as well.</source>
          <target state="translated">不要尝试为CGI脚本设置set-uid模式。这不适用于大多数系统，并且也是安全责任。</target>
        </trans-unit>
        <trans-unit id="73e352bc7716a4ca88225ac742e68f01e718e026" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the &lt;a href=&quot;#ast.NodeVisitor&quot;&gt;&lt;code&gt;NodeVisitor&lt;/code&gt;&lt;/a&gt; if you want to apply changes to nodes during traversal. For this a special visitor exists (&lt;a href=&quot;#ast.NodeTransformer&quot;&gt;&lt;code&gt;NodeTransformer&lt;/code&gt;&lt;/a&gt;) that allows modifications.</source>
          <target state="translated">如果要在遍历期间将更改应用于节点，请不要使用&lt;a href=&quot;#ast.NodeVisitor&quot;&gt; &lt;code&gt;NodeVisitor&lt;/code&gt; &lt;/a&gt;。为此，存在允许修改的特殊访问者（&lt;a href=&quot;#ast.NodeTransformer&quot;&gt; &lt;code&gt;NodeTransformer&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3b48b909493b3b77706e420cd1f45faa37cba811" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this module without reading the &lt;a href=&quot;#ssl-security&quot;&gt;Security considerations&lt;/a&gt;. Doing so may lead to a false sense of security, as the default settings of the ssl module are not necessarily appropriate for your application.</source>
          <target state="translated">在未阅读&lt;a href=&quot;#ssl-security&quot;&gt;安全注意事项之前，&lt;/a&gt;请勿使用此模块。这样做可能会导致错误的安全感，因为ssl模块的默认设置不一定适合您的应用程序。</target>
        </trans-unit>
        <trans-unit id="f4dc45aa9e26e2bd41d47c239adc70dd7e4698c6" translate="yes" xml:space="preserve">
          <source>Donald E., Jeffrey I. Schiller</source>
          <target state="translated">Donald E.,Jeffrey I.Schiller</target>
        </trans-unit>
        <trans-unit id="7b449ef2828479985e2452fffd29b041ff92dd8c" translate="yes" xml:space="preserve">
          <source>Door.</source>
          <target state="translated">Door.</target>
        </trans-unit>
        <trans-unit id="e18572a00fb194205c79f6b8ffad6831eacd6462" translate="yes" xml:space="preserve">
          <source>Double quotes: &lt;code&gt;&quot;allows embedded 'single' quotes&quot;&lt;/code&gt;.</source>
          <target state="translated">双引号： &lt;code&gt;&quot;allows embedded 'single' quotes&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b825c0f075c2ae4499a8ae58525c32123e914501" translate="yes" xml:space="preserve">
          <source>Double quotes: &lt;code&gt;b&quot;still allows embedded 'single' quotes&quot;&lt;/code&gt;.</source>
          <target state="translated">双引号： &lt;code&gt;b&quot;still allows embedded 'single' quotes&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf93e5ce8bc1228c2585b3f5a368053c9fe8346a" translate="yes" xml:space="preserve">
          <source>Down</source>
          <target state="translated">Down</target>
        </trans-unit>
        <trans-unit id="9687248b68a4174fe2d16babdd2986cb843c40b2" translate="yes" xml:space="preserve">
          <source>Down-arrow</source>
          <target state="translated">Down-arrow</target>
        </trans-unit>
        <trans-unit id="23d33e22acfcb9ecddb4a85f10607dc4ff49e23c" translate="yes" xml:space="preserve">
          <source>Draft</source>
          <target state="translated">Draft</target>
        </trans-unit>
        <trans-unit id="5313774fc5d54ca1dbac0e699b905bbbba26e8fe" translate="yes" xml:space="preserve">
          <source>Drag-and-drop support for &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;. This is experimental and should become deprecated when it is replaced with the Tk DND.</source>
          <target state="translated">对&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;的拖放支持。这是实验性的，当用Tk DND替换时，不建议使用。</target>
        </trans-unit>
        <trans-unit id="07f3f9a467149b2dbbe728abdecdbdc76069eb48" translate="yes" xml:space="preserve">
          <source>Draw a border around the edges of the window. Each parameter specifies the character to use for a specific part of the border; see the table below for more details.</source>
          <target state="translated">在窗口的边缘画一个边框。每个参数都指定了要用于边框特定部分的字符;更多细节请参见下表。</target>
        </trans-unit>
        <trans-unit id="07d19779082e62a479ed14856bfdb1ed7f18c5e3" translate="yes" xml:space="preserve">
          <source>Draw a circle with given &lt;em&gt;radius&lt;/em&gt;. The center is &lt;em&gt;radius&lt;/em&gt; units left of the turtle; &lt;em&gt;extent&lt;/em&gt; &amp;ndash; an angle &amp;ndash; determines which part of the circle is drawn. If &lt;em&gt;extent&lt;/em&gt; is not given, draw the entire circle. If &lt;em&gt;extent&lt;/em&gt; is not a full circle, one endpoint of the arc is the current pen position. Draw the arc in counterclockwise direction if &lt;em&gt;radius&lt;/em&gt; is positive, otherwise in clockwise direction. Finally the direction of the turtle is changed by the amount of &lt;em&gt;extent&lt;/em&gt;.</source>
          <target state="translated">用给定的&lt;em&gt;半径&lt;/em&gt;画一个圆。中心是乌龟左侧的&lt;em&gt;半径&lt;/em&gt;单位；&lt;em&gt;范围&lt;/em&gt; -角度-确定绘制圆的哪一部分。如果&lt;em&gt;范围&lt;/em&gt;没有给出，绘制整个圆。如果&lt;em&gt;范围&lt;/em&gt;不是一个完整的圆，则圆弧的一个端点是当前笔的位置。如果&lt;em&gt;半径&lt;/em&gt;为正，则沿逆时针方向绘制弧，否则沿顺时针方向绘制弧。最终，乌龟的方向会改变&lt;em&gt;程度&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fb9f78f1407fa6442fb02c776b4e87b4667a669b" translate="yes" xml:space="preserve">
          <source>Draw a circular dot with diameter &lt;em&gt;size&lt;/em&gt;, using &lt;em&gt;color&lt;/em&gt;. If &lt;em&gt;size&lt;/em&gt; is not given, the maximum of pensize+4 and 2*pensize is used.</source>
          <target state="translated">绘制直径的圆形点&lt;em&gt;大小&lt;/em&gt;，使用&lt;em&gt;颜色&lt;/em&gt;。如果未指定&lt;em&gt;大小&lt;/em&gt;，则使用pensize + 4和2 * pensize的最大值。</target>
        </trans-unit>
        <trans-unit id="53d0344e7ff511ab866aef27f35e30da12db6af3" translate="yes" xml:space="preserve">
          <source>Draw a rectangle. The first argument must be a window object; the remaining arguments are coordinates relative to that window. The second and third arguments are the y and x coordinates of the upper left hand corner of the rectangle to be drawn; the fourth and fifth arguments are the y and x coordinates of the lower right hand corner. The rectangle will be drawn using VT100/IBM PC forms characters on terminals that make this possible (including xterm and most other software terminal emulators). Otherwise it will be drawn with ASCII dashes, vertical bars, and plus signs.</source>
          <target state="translated">绘制一个矩形。第一个参数必须是一个窗口对象,其余参数是相对于该窗口的坐标,第二个和第三个参数是要绘制的矩形左上角的y和x坐标,第四和第五个参数是右下角的y和x坐标。第二个和第三个参数是要绘制的矩形左上角的y和x坐标;第四个和第五个参数是右下角的y和x坐标。矩形将使用VT100/IBM PC表格字符在终端上绘制(包括xterm和大多数其他软件终端仿真器)。否则将使用ASCII破折号、竖条和加号来绘制。</target>
        </trans-unit>
        <trans-unit id="33e720b1654b934e16ab4a5c3395dff71ee2eab6" translate="yes" xml:space="preserve">
          <source>Drawing state</source>
          <target state="translated">绘制状态</target>
        </trans-unit>
        <trans-unit id="8908dfbd1a90f7318e04a78c865f51ee77db0103" translate="yes" xml:space="preserve">
          <source>Due to limitations in the &lt;code&gt;Expat&lt;/code&gt; library used by &lt;code&gt;pyexpat&lt;/code&gt;, the &lt;code&gt;xmlparser&lt;/code&gt; instance returned can only be used to parse a single XML document. Call &lt;code&gt;ParserCreate&lt;/code&gt; for each document to provide unique parser instances.</source>
          <target state="translated">由于 &lt;code&gt;pyexpat&lt;/code&gt; 使用的 &lt;code&gt;Expat&lt;/code&gt; 库中的限制，返回的 &lt;code&gt;xmlparser&lt;/code&gt; 实例只能用于解析单个XML文档。为每个文档调用 &lt;code&gt;ParserCreate&lt;/code&gt; 以提供唯一的解析器实例。</target>
        </trans-unit>
        <trans-unit id="6241e2cf3a6ba60bd7c9650b006c1caf26b0e295" translate="yes" xml:space="preserve">
          <source>Due to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt;, &lt;code&gt;asyncio.to_thread()&lt;/code&gt; can typically only be used to make IO-bound functions non-blocking. However, for extension modules that release the GIL or alternative Python implementations that don&amp;rsquo;t have one, &lt;code&gt;asyncio.to_thread()&lt;/code&gt; can also be used for CPU-bound functions.</source>
          <target state="translated">由于&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;GIL的&lt;/a&gt; &lt;code&gt;asyncio.to_thread()&lt;/code&gt; ，asyncio.to_thread（）通常只能用于使IO绑定的函数成为非阻塞的。但是，对于发布GIL的扩展模块或没有Python扩展的替代Python实现， &lt;code&gt;asyncio.to_thread()&lt;/code&gt; 也可以用于CPU绑定函数。</target>
        </trans-unit>
        <trans-unit id="6c0275bc8b35befce3bfad9a917c9e7ad508f141" translate="yes" xml:space="preserve">
          <source>Due to the chunked encoding specification, empty chunks yielded by an iterator body will be ignored by the chunk-encoder. This is to avoid premature termination of the read of the request by the target server due to malformed encoding.</source>
          <target state="translated">由于分块编码规范,迭代器主体产生的空分块将被分块编码器忽略。这是为了避免目标服务器因编码错误而过早地终止对请求的读取。</target>
        </trans-unit>
        <trans-unit id="49e61c086a1b16a67c5f900260c35d18d4bb00e5" translate="yes" xml:space="preserve">
          <source>Due to the early negotiation phase of the TLS connection, only limited methods and attributes are usable like &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;SSLSocket.context&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLSocket.cipher&quot;&gt;&lt;code&gt;SSLSocket.cipher()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SSLSocket.compress()&lt;/code&gt; methods require that the TLS connection has progressed beyond the TLS Client Hello and therefore will not contain return meaningful values nor can they be called safely.</source>
          <target state="translated">由于TLS连接的早期协商阶段，因此只能使用有限的方法和属性，例如&lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;SSLSocket.context&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.SSLSocket.cipher&quot;&gt; &lt;code&gt;SSLSocket.cipher()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;SSLSocket.compress()&lt;/code&gt; 方法要求TLS连接已超出TLS客户端Hello的范围，因此将不包含返回有意义的值，也无法对其进行安全调用。</target>
        </trans-unit>
        <trans-unit id="a0730ae056616317913542eb7710d1784f15239a" translate="yes" xml:space="preserve">
          <source>Due to the use of &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; as described above, there are potential security risks which result from using the &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; to send and receive configurations via sockets. The risks are limited to where multiple users with no mutual trust run code on the same machine; see the &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">由于如上所述使用&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;，存在潜在的安全风险，这是由于使用&lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;通过套接字发送和接收配置而导致的。风险仅限于没有相互信任的多个用户在同一台​​计算机上运行代码的情况；有关更多信息，请参见&lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="96fd28191d21f7ac96af7a2598a56b2a7fed2474" translate="yes" xml:space="preserve">
          <source>Due to the way the decorator protocol works, a callback function declared this way cannot take any parameters. Instead, any resources to be released must be accessed as closure variables.</source>
          <target state="translated">由于装饰器协议的工作方式,以这种方式声明的回调函数不能接受任何参数。相反,任何要释放的资源必须作为闭包变量来访问。</target>
        </trans-unit>
        <trans-unit id="8d2e4c52874ae980f39833d0bd6768bd0323fd4f" translate="yes" xml:space="preserve">
          <source>Dump the class data as a string in the format of a netrc file. (This discards comments and may reorder the entries.)</source>
          <target state="translated">将类数据以netrc文件的格式转储为一个字符串。(这将丢弃注释,并可能重新排列条目。)</target>
        </trans-unit>
        <trans-unit id="439b7c1b68ef2b52834db37b6a73b9d923047385" translate="yes" xml:space="preserve">
          <source>Dump the tracebacks of all threads into &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, dump only the current thread.</source>
          <target state="translated">将所有线程的追溯转储到&lt;em&gt;file中&lt;/em&gt;。如果&lt;em&gt;all_threads&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则仅转储当前线程。</target>
        </trans-unit>
        <trans-unit id="22af09cc316559d66133b87399c0a38c4090f960" translate="yes" xml:space="preserve">
          <source>Dump the tracebacks of all threads, after a timeout of &lt;em&gt;timeout&lt;/em&gt; seconds, or every &lt;em&gt;timeout&lt;/em&gt; seconds if &lt;em&gt;repeat&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;. If &lt;em&gt;exit&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, call &lt;code&gt;_exit()&lt;/code&gt; with status=1 after dumping the tracebacks. (Note &lt;code&gt;_exit()&lt;/code&gt; exits the process immediately, which means it doesn&amp;rsquo;t do any cleanup like flushing file buffers.) If the function is called twice, the new call replaces previous parameters and resets the timeout. The timer has a sub-second resolution.</source>
          <target state="translated">在&lt;em&gt;超时&lt;/em&gt;秒超时后，或在&lt;em&gt;重复&lt;/em&gt;秒为 &lt;code&gt;True&lt;/code&gt; 的每个&lt;em&gt;超时&lt;/em&gt;秒中，转储所有线程的回溯。如果&lt;em&gt;exit&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则转储回溯后以status = 1 调用 &lt;code&gt;_exit()&lt;/code&gt; 。 （注意 &lt;code&gt;_exit()&lt;/code&gt; 立即退出该进程，这意味着它不会像刷新文件缓冲区那样进行任何清理。）如果该函数被调用两次，则新调用将替换先前的参数并重置超时。计时器的分辨率为亚秒级。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d0953f02e2e64737942e00a542536186f667eee" translate="yes" xml:space="preserve">
          <source>Dumping the traceback</source>
          <target state="translated">倾倒回溯</target>
        </trans-unit>
        <trans-unit id="90aae7e430fa2817e82b75cea83ccfb192f261d9" translate="yes" xml:space="preserve">
          <source>Dumping the traceback on a user signal</source>
          <target state="translated">倾倒用户信号的回溯数据</target>
        </trans-unit>
        <trans-unit id="3611658d48f19a2ec51c68bd199c34eace02a55f" translate="yes" xml:space="preserve">
          <source>Dumping the tracebacks after a timeout</source>
          <target state="translated">超时后倾倒回溯数据</target>
        </trans-unit>
        <trans-unit id="0b22a109bf726c4eb513d42599d86cc74075919c" translate="yes" xml:space="preserve">
          <source>Duplicate a socket and prepare it for sharing with a target process. The target process must be provided with &lt;em&gt;process_id&lt;/em&gt;. The resulting bytes object can then be passed to the target process using some form of interprocess communication and the socket can be recreated there using &lt;a href=&quot;#socket.fromshare&quot;&gt;&lt;code&gt;fromshare()&lt;/code&gt;&lt;/a&gt;. Once this method has been called, it is safe to close the socket since the operating system has already duplicated it for the target process.</source>
          <target state="translated">复制套接字，并准备将其与目标进程共享。目标进程必须提供有&lt;em&gt;process_id&lt;/em&gt;。然后，可以使用某种形式的进程间通信将结果字节对象传递给目标进程，并可以使用&lt;a href=&quot;#socket.fromshare&quot;&gt; &lt;code&gt;fromshare()&lt;/code&gt; &lt;/a&gt;在其中重新创建套接字。一旦调用此方法，就可以安全地关闭套接字，因为操作系统已经为目标进程复制了该套接字。</target>
        </trans-unit>
        <trans-unit id="f8871fb7b172ee8410208de389e003b29c2a3b9a" translate="yes" xml:space="preserve">
          <source>Duplicate elements are &lt;em&gt;not&lt;/em&gt; ignored when comparing &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt;. It verifies whether each element has the same count in both sequences. Equivalent to: &lt;code&gt;assertEqual(Counter(list(first)), Counter(list(second)))&lt;/code&gt; but works with sequences of unhashable objects as well.</source>
          <target state="translated">比较&lt;em&gt;first&lt;/em&gt;和&lt;em&gt;second&lt;/em&gt;时，&lt;em&gt;不会&lt;/em&gt;忽略重复的元素。它验证两个序列中每个元素的计数是否相同。等效于： &lt;code&gt;assertEqual(Counter(list(first)), Counter(list(second)))&lt;/code&gt; 但也适用于不可哈希对象的序列。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6261f6f0d2ab40a062aa81a3e2c8eff386d6a0c" translate="yes" xml:space="preserve">
          <source>Duplicate file descriptor &lt;em&gt;fd&lt;/em&gt; to &lt;em&gt;fd2&lt;/em&gt;, closing the latter first if necessary. Return &lt;em&gt;fd2&lt;/em&gt;. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;inheritable&lt;/a&gt; by default or non-inheritable if &lt;em&gt;inheritable&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">将文件描述符&lt;em&gt;fd&lt;/em&gt;复制到&lt;em&gt;fd2&lt;/em&gt;，如有必要，先关闭后者。返回&lt;em&gt;fd2&lt;/em&gt;。默认情况下，新文件描述符是&lt;a href=&quot;#fd-inheritance&quot;&gt;可继承的&lt;/a&gt;，如果&lt;em&gt;Inheritable&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ,则不可继承。</target>
        </trans-unit>
        <trans-unit id="889a8f8c7c99ee1c1b9d552eba33b9db1f6ef6dd" translate="yes" xml:space="preserve">
          <source>Duplicate the file descriptor &lt;em&gt;fd&lt;/em&gt; (an integer as returned by a file object&amp;rsquo;s &lt;code&gt;fileno()&lt;/code&gt; method) and build a socket object from the result. Address family, socket type and protocol number are as for the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function above. The file descriptor should refer to a socket, but this is not checked &amp;mdash; subsequent operations on the object may fail if the file descriptor is invalid. This function is rarely needed, but can be used to get or set socket options on a socket passed to a program as standard input or output (such as a server started by the Unix inet daemon). The socket is assumed to be in blocking mode.</source>
          <target state="translated">复制文件描述符&lt;em&gt;fd&lt;/em&gt;（由文件对象的 &lt;code&gt;fileno()&lt;/code&gt; 方法返回的整数），然后从结果中构建一个套接字对象。地址族，套接字类型和协议号与上面的&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;函数相同。文件描述符应该引用一个套接字，但是未选中-如果文件描述符无效，则对该对象的后续操作可能会失败。很少需要此函数，但可以使用该函数在作为标准输入或输出（例如Unix inet守护程序启动的服务器）传递给程序的套接字上获取或设置套接字选项。假定套接字处于阻止模式。</target>
        </trans-unit>
        <trans-unit id="3d9868ddaefa32c9871f4b477dbca6d50aa12695" translate="yes" xml:space="preserve">
          <source>Duplicate the socket.</source>
          <target state="translated">复制插座。</target>
        </trans-unit>
        <trans-unit id="1057c796a3bda52be52f517af1249d81d336e4bd" translate="yes" xml:space="preserve">
          <source>DuplicateFreeEnum</source>
          <target state="translated">DuplicateFreeEnum</target>
        </trans-unit>
        <trans-unit id="1410d937e036bef29faacd4b4c842e3d2a937812" translate="yes" xml:space="preserve">
          <source>Duplicated annotations are not removed:</source>
          <target state="translated">重复的注释不会被删除。</target>
        </trans-unit>
        <trans-unit id="b90a5b94425621edab723374c22d6af5af560415" translate="yes" xml:space="preserve">
          <source>Duplicates the reference on top of the stack.</source>
          <target state="translated">复制堆栈顶部的引用。</target>
        </trans-unit>
        <trans-unit id="37773116f5751a7989aff3a01ae26af5226bb51c" translate="yes" xml:space="preserve">
          <source>Duplicates the two references on top of the stack, leaving them in the same order.</source>
          <target state="translated">复制堆栈顶部的两个引用,让它们保持相同的顺序。</target>
        </trans-unit>
        <trans-unit id="23531d122060762c19d9fa7db965b70b708f270d" translate="yes" xml:space="preserve">
          <source>Duplicating enum members and values</source>
          <target state="translated">复制枚举成员和值</target>
        </trans-unit>
        <trans-unit id="dfef2f63f57cbced5af413a84d928321ccd4c524" translate="yes" xml:space="preserve">
          <source>During asynchronous processing, each mapped channel&amp;rsquo;s &lt;a href=&quot;#asyncore.dispatcher.readable&quot;&gt;&lt;code&gt;readable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncore.dispatcher.writable&quot;&gt;&lt;code&gt;writable()&lt;/code&gt;&lt;/a&gt; methods are used to determine whether the channel&amp;rsquo;s socket should be added to the list of channels &lt;code&gt;select()&lt;/code&gt;ed or &lt;code&gt;poll()&lt;/code&gt;ed for read and write events.</source>
          <target state="translated">在异步处理过程中，每个映射通道的&lt;a href=&quot;#asyncore.dispatcher.readable&quot;&gt; &lt;code&gt;readable()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncore.dispatcher.writable&quot;&gt; &lt;code&gt;writable()&lt;/code&gt; &lt;/a&gt;方法用于确定是否将通道的套接字添加到用于读取和写入事件的 &lt;code&gt;select()&lt;/code&gt; ed或 &lt;code&gt;poll()&lt;/code&gt; ed 的通道列表中。</target>
        </trans-unit>
        <trans-unit id="b3e475528d442e3ae5736dcca583d9176a13e698" translate="yes" xml:space="preserve">
          <source>Dynamic Type Creation</source>
          <target state="translated">动态类型创建</target>
        </trans-unit>
        <trans-unit id="45ecdb297a5d03af0ed09d7f32b5225a16db07d6" translate="yes" xml:space="preserve">
          <source>Dynamically adding abstract methods to a class, or attempting to modify the abstraction status of a method or class once it is created, are not supported. The &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt; only affects subclasses derived using regular inheritance; &amp;ldquo;virtual subclasses&amp;rdquo; registered with the ABC&amp;rsquo;s &lt;code&gt;register()&lt;/code&gt; method are not affected.</source>
          <target state="translated">不支持将动态方法添加到类，或在创建方法或类后尝试修改其抽象状态。该&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; &lt;/a&gt;只影响使用常规的继承派生的子类; 用ABC的 &lt;code&gt;register()&lt;/code&gt; 方法注册的&amp;ldquo;虚拟子类&amp;rdquo; 不受影响。</target>
        </trans-unit>
        <trans-unit id="9eba0f202ad83d024c1a994a5349b82499dd6c1f" translate="yes" xml:space="preserve">
          <source>EBCDIC-CP-BE, EBCDIC-CP-CH, IBM500</source>
          <target state="translated">EBCDIC-CP-BE、EBCDIC-CP-CH、IBM500。</target>
        </trans-unit>
        <trans-unit id="fd237df64f3b34807e426182cc5fd026a5538720" translate="yes" xml:space="preserve">
          <source>EBCDIC-CP-HE, IBM424</source>
          <target state="translated">EBCDIC-CP-HE,IBM424。</target>
        </trans-unit>
        <trans-unit id="4fd668988fb53bd9a053b46077c87d876ac3dd0c" translate="yes" xml:space="preserve">
          <source>EHLO</source>
          <target state="translated">EHLO</target>
        </trans-unit>
        <trans-unit id="b5f455d3e9fdf793b9ed474569d144a430f4fed1" translate="yes" xml:space="preserve">
          <source>EOF is signaled with a &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; value;</source>
          <target state="translated">EOF用&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;值表示；</target>
        </trans-unit>
        <trans-unit id="4c49f83b052d9fd32537298873b9355036344465" translate="yes" xml:space="preserve">
          <source>EOF is signaled with an empty string (&lt;code&gt;''&lt;/code&gt;);</source>
          <target state="translated">EOF用空字符串（ &lt;code&gt;''&lt;/code&gt; ）发出信号；</target>
        </trans-unit>
        <trans-unit id="7b9e6e531c95a34720d1a8d1d5a2c5f1c560afeb" translate="yes" xml:space="preserve">
          <source>EOFError</source>
          <target state="translated">EOFError</target>
        </trans-unit>
        <trans-unit id="8664dc00e7190b6b4bc1b4c25bf22f56acbe19cd" translate="yes" xml:space="preserve">
          <source>EXPN</source>
          <target state="translated">EXPN</target>
        </trans-unit>
        <trans-unit id="3f257ef4deeb38d39d7c23f398e671c79834f42f" translate="yes" xml:space="preserve">
          <source>Each class keeps a list of weak references to its immediate subclasses. This method returns a list of all those references still alive. Example:</source>
          <target state="translated">每个类都会保存一个对其直属子类的弱引用列表。本方法返回所有这些仍然有效的引用的列表。例子:</target>
        </trans-unit>
        <trans-unit id="49b3d8c715909f41cc320395540e3e23f0c84cef" translate="yes" xml:space="preserve">
          <source>Each codec has to define four interfaces to make it usable as codec in Python: stateless encoder, stateless decoder, stream reader and stream writer. The stream reader and writers typically reuse the stateless encoder/decoder to implement the file protocols. Codec authors also need to define how the codec will handle encoding and decoding errors.</source>
          <target state="translated">每个编解码器都必须定义四个接口,才能在Python中作为编解码器使用:无状态编码器、无状态解码器、流读取器和流写入器。流读取器和写入器通常重复使用无状态编码器/解码器来实现文件协议。编解码器作者还需要定义编解码器如何处理编码和解码错误。</target>
        </trans-unit>
        <trans-unit id="7e5ae951076a28f94f188c0c78d56dc1243a53b4" translate="yes" xml:space="preserve">
          <source>Each command returns a tuple: &lt;code&gt;(type, [data, ...])&lt;/code&gt; where &lt;em&gt;type&lt;/em&gt; is usually &lt;code&gt;'OK'&lt;/code&gt; or &lt;code&gt;'NO'&lt;/code&gt;, and &lt;em&gt;data&lt;/em&gt; is either the text from the command response, or mandated results from the command. Each &lt;em&gt;data&lt;/em&gt; is either a &lt;code&gt;bytes&lt;/code&gt;, or a tuple. If a tuple, then the first part is the header of the response, and the second part contains the data (ie: &amp;lsquo;literal&amp;rsquo; value).</source>
          <target state="translated">每个命令都返回一个元组： &lt;code&gt;(type, [data, ...])&lt;/code&gt; ，其中&lt;em&gt;type&lt;/em&gt;通常是 &lt;code&gt;'OK'&lt;/code&gt; 或 &lt;code&gt;'NO'&lt;/code&gt; ，而&lt;em&gt;data&lt;/em&gt;要么是命令响应中的文本，要么是命令中的强制结果。每个&lt;em&gt;数据&lt;/em&gt;可以是一个 &lt;code&gt;bytes&lt;/code&gt; ，也可以是一个元组。如果是元组，则第一部分是响应的标题，第二部分包含数据（即：&amp;ldquo;文字&amp;rdquo;值）。</target>
        </trans-unit>
        <trans-unit id="282f17f731792f16d9273e6a347f472556b09b25" translate="yes" xml:space="preserve">
          <source>Each command returns a tuple: &lt;code&gt;(type, [data, ...])&lt;/code&gt; where &lt;em&gt;type&lt;/em&gt; is usually &lt;code&gt;'OK'&lt;/code&gt; or &lt;code&gt;'NO'&lt;/code&gt;, and &lt;em&gt;data&lt;/em&gt; is either the text from the command response, or mandated results from the command. Each &lt;em&gt;data&lt;/em&gt; is either a string, or a tuple. If a tuple, then the first part is the header of the response, and the second part contains the data (ie: &amp;lsquo;literal&amp;rsquo; value).</source>
          <target state="translated">每个命令都返回一个元组： &lt;code&gt;(type, [data, ...])&lt;/code&gt; ，其中&lt;em&gt;type&lt;/em&gt;通常是 &lt;code&gt;'OK'&lt;/code&gt; 或 &lt;code&gt;'NO'&lt;/code&gt; ，而&lt;em&gt;data&lt;/em&gt;要么是命令响应中的文本，要么是命令中的强制结果。每个&lt;em&gt;数据&lt;/em&gt;可以是字符串，也可以是元组。如果是元组，则第一部分是响应的头，第二部分包含数据（即：&amp;ldquo;文字&amp;rdquo;值）。</target>
        </trans-unit>
        <trans-unit id="b1fc694bb45d480ca1940a2e1064ce8c21ebc647" translate="yes" xml:space="preserve">
          <source>Each concrete class has an attribute &lt;a href=&quot;#ast.AST._fields&quot;&gt;&lt;code&gt;_fields&lt;/code&gt;&lt;/a&gt; which gives the names of all child nodes.</source>
          <target state="translated">每个具体类都有一个&lt;a href=&quot;#ast.AST._fields&quot;&gt; &lt;code&gt;_fields&lt;/code&gt; &lt;/a&gt;属性，该属性提供所有子节点的名称。</target>
        </trans-unit>
        <trans-unit id="68a50347d1587b9181be5b21c8a4401ebdc590f5" translate="yes" xml:space="preserve">
          <source>Each element of &lt;em&gt;pathsegments&lt;/em&gt; can be either a string representing a path segment, an object implementing the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface which returns a string, or another path object:</source>
          <target state="translated">&lt;em&gt;pathegments的&lt;/em&gt;每个元素可以是表示路径段的字符串，实现&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;接口并返回字符串的对象，也可以是其他路径对象：</target>
        </trans-unit>
        <trans-unit id="7d47bd7e76e37961a2c232d0d7b5ad58b1d23e40" translate="yes" xml:space="preserve">
          <source>Each element of the sequences returned by &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; has a simple form. Sequences representing non-terminal elements in the grammar always have a length greater than one. The first element is an integer which identifies a production in the grammar. These integers are given symbolic names in the C header file &lt;code&gt;Include/graminit.h&lt;/code&gt; and the Python module &lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;. Each additional element of the sequence represents a component of the production as recognized in the input string: these are always sequences which have the same form as the parent. An important aspect of this structure which should be noted is that keywords used to identify the parent node type, such as the keyword &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;if_stmt&lt;/code&gt;, are included in the node tree without any special treatment. For example, the &lt;code&gt;if&lt;/code&gt; keyword is represented by the tuple &lt;code&gt;(1, 'if')&lt;/code&gt;, where &lt;code&gt;1&lt;/code&gt; is the numeric value associated with all &lt;code&gt;NAME&lt;/code&gt; tokens, including variable and function names defined by the user. In an alternate form returned when line number information is requested, the same token might be represented as &lt;code&gt;(1, 'if', 12)&lt;/code&gt;, where the &lt;code&gt;12&lt;/code&gt; represents the line number at which the terminal symbol was found.</source>
          <target state="translated">&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt;返回的序列的每个元素都具有简单的形式。表示语法中非末尾元素的序列的长度始终大于一。第一个元素是整数，用于标识语法中的产生式。这些整数在C头文件 &lt;code&gt;Include/graminit.h&lt;/code&gt; 和Python模块&lt;a href=&quot;symbol#module-symbol&quot;&gt; &lt;code&gt;symbol&lt;/code&gt; &lt;/a&gt;中给定符号名称。序列的每个其他元素代表输入字符串中识别的生产的组成部分：这些始终是与父代具有相同形式的序列。这个结构，其应注意的一个重要方面是用于识别父节点类型的关键字，例如关键字&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;在一个 &lt;code&gt;if_stmt&lt;/code&gt; 包含在节点树中，无需任何特殊处理。例如， &lt;code&gt;if&lt;/code&gt; 关键字由元组 &lt;code&gt;(1, 'if')&lt;/code&gt; ，其中 &lt;code&gt;1&lt;/code&gt; 是与所有 &lt;code&gt;NAME&lt;/code&gt; 标记关联的数值，包括用户定义的变量和函数名称。在请求行号信息时返回的另一种形式中，相同的令牌可能表示为 &lt;code&gt;(1, 'if', 12)&lt;/code&gt; ，其中 &lt;code&gt;12&lt;/code&gt; 代表找到终端符号的行号。</target>
        </trans-unit>
        <trans-unit id="c3694a4b7f2e5e589699cb04ebdebc3c44a3f4a6" translate="yes" xml:space="preserve">
          <source>Each element of the sequences returned by &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; has a simple form. Sequences representing non-terminal elements in the grammar always have a length greater than one. The first element is an integer which identifies a production in the grammar. These integers are given symbolic names in the C header file &lt;code&gt;Include/graminit.h&lt;/code&gt; and the Python module &lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;. Each additional element of the sequence represents a component of the production as recognized in the input string: these are always sequences which have the same form as the parent. An important aspect of this structure which should be noted is that keywords used to identify the parent node type, such as the keyword &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;if_stmt&lt;/code&gt;, are included in the node tree without any special treatment. For example, the &lt;code&gt;if&lt;/code&gt; keyword is represented by the tuple &lt;code&gt;(1, 'if')&lt;/code&gt;, where &lt;code&gt;1&lt;/code&gt; is the numeric value associated with all &lt;code&gt;NAME&lt;/code&gt; tokens, including variable and function names defined by the user. In an alternate form returned when line number information is requested, the same token might be represented as &lt;code&gt;(1, 'if', 12)&lt;/code&gt;, where the &lt;code&gt;12&lt;/code&gt; represents the line number at which the terminal symbol was found.</source>
          <target state="translated">&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt;返回的序列中的每个元素都具有简单的形式。表示语法中非末尾元素的序列的长度始终大于一。第一个元素是整数，用于标识语法中的产生式。这些整数在C头文件 &lt;code&gt;Include/graminit.h&lt;/code&gt; 和Python模块&lt;a href=&quot;symbol#module-symbol&quot;&gt; &lt;code&gt;symbol&lt;/code&gt; 中&lt;/a&gt;被赋予符号名称。序列中的每个其他元素都代表输入字符串中所识别的产品的组成部分：这些总是与母体具有相同形式的序列。该结构的一个重要方面是应注意的是，用于标识父节点类型的关键字，例如关键字，&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;if_stmt&lt;/code&gt; 包含在节点树中，无需任何特殊处理。例如， &lt;code&gt;if&lt;/code&gt; 关键字由元组 &lt;code&gt;(1, 'if')&lt;/code&gt; ，其中 &lt;code&gt;1&lt;/code&gt; 是与所有 &lt;code&gt;NAME&lt;/code&gt; 标记相关联的数字值，包括用户定义的变量和函数名称。在请求行号信息时返回的另一种形式中，相同的令牌可能表示为 &lt;code&gt;(1, 'if', 12)&lt;/code&gt; ，其中 &lt;code&gt;12&lt;/code&gt; 代表找到终端符号所在的行号。</target>
        </trans-unit>
        <trans-unit id="fbbb92dbc3b8b3f3d23474fa6aec35d50a033430" translate="yes" xml:space="preserve">
          <source>Each instance maintains a stack of registered callbacks that are called in reverse order when the instance is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement). Note that callbacks are &lt;em&gt;not&lt;/em&gt; invoked implicitly when the context stack instance is garbage collected.</source>
          <target state="translated">每个实例维护一堆注册的回调，当实例关闭时，它们以相反的顺序调用（在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的末尾显式或隐式）。请注意，在垃圾回收上下文堆栈实例时，&lt;em&gt;不会&lt;/em&gt;隐式调用回调。</target>
        </trans-unit>
        <trans-unit id="686ca9cda61b82be89d20b603510c3bf98f284a7" translate="yes" xml:space="preserve">
          <source>Each instance maintains a stack of registered callbacks that are called in reverse order when the instance is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement). Note that callbacks are &lt;em&gt;not&lt;/em&gt; invoked implicitly when the context stack instance is garbage collected.</source>
          <target state="translated">每个实例维护一堆注册的回调，当实例关闭时（在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的末尾显式或隐式），将以相反的顺序调用这些回调。请注意，在垃圾回收上下文堆栈实例时，&lt;em&gt;不会&lt;/em&gt;隐式调用回调。</target>
        </trans-unit>
        <trans-unit id="8de95ec9ac0b515be6306a38072974d2399457c5" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; will run a single base method: the method named &lt;em&gt;methodName&lt;/em&gt;. In most uses of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;, you will neither change the &lt;em&gt;methodName&lt;/em&gt; nor reimplement the default &lt;code&gt;runTest()&lt;/code&gt; method.</source>
          <target state="translated">每个&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;实例将运行一个基本方法：名为&lt;em&gt;methodName&lt;/em&gt;的方法。在大多数使用&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; 的情况下&lt;/a&gt;，既不会更改&lt;em&gt;methodName&lt;/em&gt;也不会重新实现默认的 &lt;code&gt;runTest()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1caec864f11d896329b6c2f98e42ed6c3ffa4d84" translate="yes" xml:space="preserve">
          <source>Each instance of a concrete class has one attribute for each child node, of the type as defined in the grammar. For example, &lt;a href=&quot;#ast.BinOp&quot;&gt;&lt;code&gt;ast.BinOp&lt;/code&gt;&lt;/a&gt; instances have an attribute &lt;code&gt;left&lt;/code&gt; of type &lt;code&gt;ast.expr&lt;/code&gt;.</source>
          <target state="translated">具体类的每个实例对每个子节点都有一个属性，该属性的类型如语法中所定义。例如，&lt;a href=&quot;#ast.BinOp&quot;&gt; &lt;code&gt;ast.BinOp&lt;/code&gt; &lt;/a&gt;实例的属性 &lt;code&gt;left&lt;/code&gt; 为 &lt;code&gt;ast.expr&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="d4adfaccfd02783f72f1bf5a8a740336421c2115" translate="yes" xml:space="preserve">
          <source>Each instance of a concrete class has one attribute for each child node, of the type as defined in the grammar. For example, &lt;code&gt;ast.BinOp&lt;/code&gt; instances have an attribute &lt;code&gt;left&lt;/code&gt; of type &lt;code&gt;ast.expr&lt;/code&gt;.</source>
          <target state="translated">具体类的每个实例对每个子节点都有一个属性，该属性的类型如语法中所定义。例如， &lt;code&gt;ast.BinOp&lt;/code&gt; 实例的属性 &lt;code&gt;left&lt;/code&gt; 为 &lt;code&gt;ast.expr&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="13ea0b080ba9b453721cead18f47d5cd873c0211" translate="yes" xml:space="preserve">
          <source>Each item also has a list of tags, which can be used to associate event bindings with individual items and control the appearance of the item.</source>
          <target state="translated">每个项目还有一个标签列表,可以用来将事件绑定与单个项目关联,并控制项目的外观。</target>
        </trans-unit>
        <trans-unit id="e44e01ec262fcc06e2c821c79bd1b985a39335e0" translate="yes" xml:space="preserve">
          <source>Each item in the list will be a string which is the value of the &lt;code&gt;charset&lt;/code&gt; parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header for the represented subpart. However, if the subpart has no &lt;em&gt;Content-Type&lt;/em&gt; header, no &lt;code&gt;charset&lt;/code&gt; parameter, or is not of the &lt;em&gt;text&lt;/em&gt; main MIME type, then that item in the returned list will be &lt;em&gt;failobj&lt;/em&gt;.</source>
          <target state="translated">列表中的每个项目都是一个字符串，它是所表示子部分的&lt;em&gt;Content-Type&lt;/em&gt;标头中 &lt;code&gt;charset&lt;/code&gt; 参数的值。但是，如果子部分没有&lt;em&gt;Content-Type&lt;/em&gt;标头，没有 &lt;code&gt;charset&lt;/code&gt; 参数或者不是&lt;em&gt;文本&lt;/em&gt;主MIME类型，则返回列表中的&lt;em&gt;该项&lt;/em&gt;将为&lt;em&gt;failobj&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf9f8e6f669080eee75ae9dc5a75b7bbd4c47d81" translate="yes" xml:space="preserve">
          <source>Each item in the list will be a string which is the value of the &lt;code&gt;charset&lt;/code&gt; parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header for the represented subpart. If the subpart has no &lt;em&gt;Content-Type&lt;/em&gt; header, no &lt;code&gt;charset&lt;/code&gt; parameter, or is not of the &lt;em&gt;text&lt;/em&gt; main MIME type, then that item in the returned list will be &lt;em&gt;failobj&lt;/em&gt;.</source>
          <target state="translated">列表中的每个项目都是一个字符串，它是所表示子部分的&lt;em&gt;Content-Type&lt;/em&gt;标头中 &lt;code&gt;charset&lt;/code&gt; 参数的值。如果子部分没有&lt;em&gt;Content-Type&lt;/em&gt;头，没有 &lt;code&gt;charset&lt;/code&gt; 参数或者不是&lt;em&gt;文本&lt;/em&gt;主MIME类型，则返回列表中的&lt;em&gt;该项&lt;/em&gt;将为&lt;em&gt;failobj&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da0ee9fd3f992367055d3f5837dcc4a138a402ce" translate="yes" xml:space="preserve">
          <source>Each item in this tuple contains further information about a parameter, it must be a tuple containing one, two, or three items.</source>
          <target state="translated">这个元组中的每一项都包含了一个参数的进一步信息,它必须是一个包含一项、两项或三项的元组。</target>
        </trans-unit>
        <trans-unit id="77e53c8c02a8a57ebc4ed20d807d943b6ff96866" translate="yes" xml:space="preserve">
          <source>Each item is identified by a unique name. The widget will generate item IDs if they are not supplied by the caller. There is a distinguished root item, named &lt;code&gt;{}&lt;/code&gt;. The root item itself is not displayed; its children appear at the top level of the hierarchy.</source>
          <target state="translated">每个项目均由唯一名称标识。如果调用者未提供项目ID，则小部件将生成项目ID。有一个独特的根项目，名为 &lt;code&gt;{}&lt;/code&gt; 。根项目本身不显示；它的子级出现在层次结构的顶层。</target>
        </trans-unit>
        <trans-unit id="4bce3597203de7edee0f57b19d4a2d5cbffdf95e" translate="yes" xml:space="preserve">
          <source>Each item should have the same number of values as the widget option columns. If there are fewer values than columns, the remaining values are assumed empty. If there are more values than columns, the extra values are ignored.</source>
          <target state="translated">每个项目的值数量应与小组件选项列相同。如果数值少于列,则假设剩余数值为空。如果数值比列数多,多余的数值将被忽略。</target>
        </trans-unit>
        <trans-unit id="e78be99b38a7a6e8f05f339ced460b87f7c2eaf4" translate="yes" xml:space="preserve">
          <source>Each iteration yields a tuple as specified by the format string.</source>
          <target state="translated">每次迭代都会产生一个由格式字符串指定的元组。</target>
        </trans-unit>
        <trans-unit id="2f826346b31818133756fc3c73c82e215e0c9cf5" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;kw&lt;/em&gt; is an option and each value is a string identifying the value for that option.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;中的每个键都是一个选项，每个值都是一个字符串，用于标识该选项的值。</target>
        </trans-unit>
        <trans-unit id="39b11157702a1c985e2f006a001b5fee4627520f" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;kw&lt;/em&gt; is an option and each value should be a list or a tuple (usually) containing statespecs grouped in tuples, lists, or some other preference. A statespec is a compound of one or more states and then a value.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;中的每个键都是一个选项，每个值应该是一个列表或一个元组（通常），其中包含以元组，列表或某些其他首选项分组的状态规范。状态规范是一个或多个状态然后是一个值的组合。</target>
        </trans-unit>
        <trans-unit id="3e8597bf6453e280e6bc0fb06128abdc83d25df7" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;settings&lt;/em&gt; is a style and each value may contain the keys &amp;lsquo;configure&amp;rsquo;, &amp;lsquo;map&amp;rsquo;, &amp;lsquo;layout&amp;rsquo; and &amp;lsquo;element create&amp;rsquo; and they are expected to have the same format as specified by the methods &lt;a href=&quot;#tkinter.ttk.Style.configure&quot;&gt;&lt;code&gt;Style.configure()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt;&lt;code&gt;Style.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Style.layout&quot;&gt;&lt;code&gt;Style.layout()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt;&lt;code&gt;Style.element_create()&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;em&gt;设置&lt;/em&gt;中的每个键都是一种样式，并且每个值都可以包含键&amp;ldquo; configure&amp;rdquo;，&amp;ldquo; map&amp;rdquo;，&amp;ldquo; layout&amp;rdquo;和&amp;ldquo; element create&amp;rdquo;，并且它们应具有与&lt;a href=&quot;#tkinter.ttk.Style.configure&quot;&gt; &lt;code&gt;Style.configure()&lt;/code&gt; &lt;/a&gt;方法指定的格式相同的格式，&lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt; &lt;code&gt;Style.map()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.ttk.Style.layout&quot;&gt; &lt;code&gt;Style.layout()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt; &lt;code&gt;Style.element_create()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87388fd6d132977913179af099110ca3324339a0" translate="yes" xml:space="preserve">
          <source>Each line of a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; delta begins with a two-letter code:</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt; delta的每一行都以两个字母的代码开头：</target>
        </trans-unit>
        <trans-unit id="e42a08c19ff6f318b0b306e48a39eabc2c06f3ef" translate="yes" xml:space="preserve">
          <source>Each line of the traceback stack (if present) must be indented further than the first line of the example, &lt;em&gt;or&lt;/em&gt; start with a non-alphanumeric character. The first line following the traceback header indented the same and starting with an alphanumeric is taken to be the start of the exception detail. Of course this does the right thing for genuine tracebacks.</source>
          <target state="translated">追溯堆栈的每一行（如果存在）必须比示例的第一行缩进更多，&lt;em&gt;或者&lt;/em&gt;以非字母数字字符开头。跟踪标头之后的第一行以相同的缩进方式，并以字母数字开头，被视为异常详细信息的开始。当然，这对于真正的回溯是正确的。</target>
        </trans-unit>
        <trans-unit id="966983a00fbe34b47c3c999bd9e9a31fd05e66a8" translate="yes" xml:space="preserve">
          <source>Each module in the &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package whose name starts with &lt;code&gt;test_&lt;/code&gt; is a testing suite for a specific module or feature. All new tests should be written using the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module. Some older tests are written using a &amp;ldquo;traditional&amp;rdquo; testing style that compares output printed to &lt;code&gt;sys.stdout&lt;/code&gt;; this style of test is considered deprecated.</source>
          <target state="translated">&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;包中每个名称以 &lt;code&gt;test_&lt;/code&gt; 开头的模块都是针对特定模块或功能的测试套件。所有新测试都应使用&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;模块编写。一些较早的测试是使用&amp;ldquo;传统&amp;rdquo;测试样式编写的，该样式将打印的输出与 &lt;code&gt;sys.stdout&lt;/code&gt; 进行比较；这种测试风格被认为已弃用。</target>
        </trans-unit>
        <trans-unit id="570d43e41fd016220171b8d9766922e2767c092c" translate="yes" xml:space="preserve">
          <source>Each of the authentication methods supported by &lt;a href=&quot;#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; are tried in turn if they are advertised as supported by the server. See &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt;&lt;code&gt;auth()&lt;/code&gt;&lt;/a&gt; for a list of supported authentication methods. &lt;em&gt;initial_response_ok&lt;/em&gt; is passed through to &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt;&lt;code&gt;auth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;支持的每种身份验证方法被广告宣传为服务器支持，则依次尝试。有关受支持的身份验证方法的列表，请参见&lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt; &lt;code&gt;auth()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;initial_response_ok&lt;/em&gt;传递给&lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt; &lt;code&gt;auth()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0be42f64114c87525015606161dd516884beee6" translate="yes" xml:space="preserve">
          <source>Each of the following constants defines a tar archive format that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module is able to create. See section &lt;a href=&quot;#tar-formats&quot;&gt;Supported tar formats&lt;/a&gt; for details.</source>
          <target state="translated">以下每个常量定义&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块能够创建的tar存档格式。有关详细信息，请参见&amp;ldquo; &lt;a href=&quot;#tar-formats&quot;&gt;受支持的tar格式&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="c8eacfcf105bb64fff8fabb452ae84f33e7ee8ec" translate="yes" xml:space="preserve">
          <source>Each of the methods &lt;a href=&quot;#venv.EnvBuilder.ensure_directories&quot;&gt;&lt;code&gt;ensure_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.create_configuration&quot;&gt;&lt;code&gt;create_configuration()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt;&lt;code&gt;setup_scripts()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt;&lt;code&gt;post_setup()&lt;/code&gt;&lt;/a&gt; can be overridden.</source>
          <target state="translated">每个方法都可以覆盖&lt;a href=&quot;#venv.EnvBuilder.ensure_directories&quot;&gt; &lt;code&gt;ensure_directories()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#venv.EnvBuilder.create_configuration&quot;&gt; &lt;code&gt;create_configuration()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt; &lt;code&gt;setup_scripts()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt; &lt;code&gt;post_setup()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dc6ae0f9750e9fa2a785125e5f9d0d801c4c29a" translate="yes" xml:space="preserve">
          <source>Each row read from the csv file is returned as a list of strings. No automatic data type conversion is performed unless the &lt;code&gt;QUOTE_NONNUMERIC&lt;/code&gt; format option is specified (in which case unquoted fields are transformed into floats).</source>
          <target state="translated">从csv文件读取的每一行都作为字符串列表返回。除非指定了 &lt;code&gt;QUOTE_NONNUMERIC&lt;/code&gt; 格式选项，否则不执行自动数据类型转换（在这种情况下，未引用的字段将转换为浮点数）。</target>
        </trans-unit>
        <trans-unit id="39af9c24f6267667f16c1f8937c3f68cebb65cc8" translate="yes" xml:space="preserve">
          <source>Each scheme is itself composed of a series of paths and each path has a unique identifier. Python currently uses eight paths:</source>
          <target state="translated">每个方案本身由一系列路径组成,每个路径都有一个唯一的标识符。目前Python使用了8条路径。</target>
        </trans-unit>
        <trans-unit id="d6be844de18e8ac1c0c125847ea509ec8672f2af" translate="yes" xml:space="preserve">
          <source>Each sequence must contain individual single-line strings ending with newlines. Such sequences can be obtained from the &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt;&lt;code&gt;readlines()&lt;/code&gt;&lt;/a&gt; method of file-like objects. The delta generated also consists of newline-terminated strings, ready to be printed as-is via the &lt;a href=&quot;io#io.IOBase.writelines&quot;&gt;&lt;code&gt;writelines()&lt;/code&gt;&lt;/a&gt; method of a file-like object.</source>
          <target state="translated">每个序列必须包含以换行符结尾的单个单行字符串。可以从类似文件的对象的&lt;a href=&quot;io#io.IOBase.readlines&quot;&gt; &lt;code&gt;readlines()&lt;/code&gt; &lt;/a&gt;方法获得此类序列。生成的增量还包括换行符终止的字符串，这些字符串可以通过类似文件的对象的&lt;a href=&quot;io#io.IOBase.writelines&quot;&gt; &lt;code&gt;writelines()&lt;/code&gt; &lt;/a&gt;方法原样打印。</target>
        </trans-unit>
        <trans-unit id="f6fea372c2e6910286f3770084c74f69f7479d39" translate="yes" xml:space="preserve">
          <source>Each statement in &lt;code&gt;__future__.py&lt;/code&gt; is of the form:</source>
          <target state="translated">&lt;code&gt;__future__.py&lt;/code&gt; 中的每个语句的格式为：</target>
        </trans-unit>
        <trans-unit id="9e29db3d8e94a8e1eddfab4dff35fd962a74e06a" translate="yes" xml:space="preserve">
          <source>Each string is limited to 500 characters.</source>
          <target state="translated">每个字串限制在500个字符以内。</target>
        </trans-unit>
        <trans-unit id="170cfb863712b473cc75fb950f928a5a8285210f" translate="yes" xml:space="preserve">
          <source>Each thread has its own current context which is accessed or changed using the &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; functions:</source>
          <target state="translated">每个线程都有自己的当前上下文，可以使用&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;函数对其进行访问或更改：</target>
        </trans-unit>
        <trans-unit id="4d777ac10aa65cebbc73a8b54c83325611989663" translate="yes" xml:space="preserve">
          <source>Each time a telnet option is read on the input flow, this &lt;em&gt;callback&lt;/em&gt; (if set) is called with the following parameters: callback(telnet socket, command (DO/DONT/WILL/WONT), option). No other action is done afterwards by telnetlib.</source>
          <target state="translated">每次在输入流上读取telnet选项时，都会使用以下参数调用此&lt;em&gt;回调&lt;/em&gt;（如果已设置）：callback（telnet套接字，命令（DO / DONT / WILL / WONT），option）。telnetlib之后没有其他动作。</target>
        </trans-unit>
        <trans-unit id="bfad8ccc8a211d61d36409d0bf2f14aa35ee256d" translate="yes" xml:space="preserve">
          <source>Each type variable argument to &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; must be distinct. This is thus invalid:</source>
          <target state="translated">&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;每个类型变量参数都必须是不同的。因此，这是无效的：</target>
        </trans-unit>
        <trans-unit id="c84331c7ef4d85ab05cce6fed746ac676d4e101d" translate="yes" xml:space="preserve">
          <source>Each widget in &lt;code&gt;ttk&lt;/code&gt; is assigned a style, which specifies the set of elements making up the widget and how they are arranged, along with dynamic and default settings for element options. By default the style name is the same as the widget&amp;rsquo;s class name, but it may be overridden by the widget&amp;rsquo;s style option. If you don&amp;rsquo;t know the class name of a widget, use the method &lt;code&gt;Misc.winfo_class()&lt;/code&gt; (somewidget.winfo_class()).</source>
          <target state="translated">为 &lt;code&gt;ttk&lt;/code&gt; 中的每个窗口小部件分配了一种样式，该样式指定组成窗口小部件的元素集及其排列方式，以及元素选项的动态和默认设置。默认情况下，样式名称与窗口小部件的类名相同，但是可以由窗口小部件的样式选项覆盖。如果您不知道小部件的类名，请使用方法 &lt;code&gt;Misc.winfo_class()&lt;/code&gt; （somewidget.winfo_class（））。</target>
        </trans-unit>
        <trans-unit id="ac6958e8c84c43dc505ed0bc0da9c2ae587471df" translate="yes" xml:space="preserve">
          <source>Edge and Level Trigger Polling (epoll) Objects</source>
          <target state="translated">边缘和级别触发轮询(epoll)对象</target>
        </trans-unit>
        <trans-unit id="5583cdff4d4a6580ea0a38b30db66be0866f671a" translate="yes" xml:space="preserve">
          <source>Edit menu (Shell and Editor)</source>
          <target state="translated">编辑菜单(外壳和编辑器</target>
        </trans-unit>
        <trans-unit id="185ea171b3d3bde051ea325fee7b199751c8574b" translate="yes" xml:space="preserve">
          <source>Editable text widget for curses supporting &lt;strong&gt;Emacs&lt;/strong&gt;-like bindings.</source>
          <target state="translated">可编辑的文本小部件，用于支持&lt;strong&gt;Emacs之&lt;/strong&gt;类的绑定的curses 。</target>
        </trans-unit>
        <trans-unit id="938a52ac689dd4874b63cf940ebb77391725c7d1" translate="yes" xml:space="preserve">
          <source>Editing and navigation</source>
          <target state="translated">编辑和导航</target>
        </trans-unit>
        <trans-unit id="90f14ba0b6909fa15eb3284afbcd0982f6764f14" translate="yes" xml:space="preserve">
          <source>Editor windows</source>
          <target state="translated">编辑窗口</target>
        </trans-unit>
        <trans-unit id="0efd6762e1cf2a894e742725c6e1de2bd3237193" translate="yes" xml:space="preserve">
          <source>Editor windows also have breakpoint functions. Lines with a breakpoint set are specially marked. Breakpoints only have an effect when running under the debugger. Breakpoints for a file are saved in the user&amp;rsquo;s &lt;code&gt;.idlerc&lt;/code&gt; directory.</source>
          <target state="translated">编辑器窗口还具有断点功能。设置了断点的行会特别标记。断点仅在调试器下运行时才有效。文件的断点保存在用户的 &lt;code&gt;.idlerc&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="766678d2b718b817641af4ac74b0cbc28f9013bf" translate="yes" xml:space="preserve">
          <source>Effects of the Python Development Mode</source>
          <target state="translated">Python开发模式的效果</target>
        </trans-unit>
        <trans-unit id="2072c523779b54d2efd759254f1191af3f0206d0" translate="yes" xml:space="preserve">
          <source>Effects of the Python Development Mode:</source>
          <target state="translated">Python开发模式的影响。</target>
        </trans-unit>
        <trans-unit id="8a9ba193ecdd6f264d6c16c5e8ae467c10e10059" translate="yes" xml:space="preserve">
          <source>Either &amp;ldquo;normal&amp;rdquo;, &amp;ldquo;disabled&amp;rdquo; or &amp;ldquo;hidden&amp;rdquo;. If &amp;ldquo;disabled&amp;rdquo;, then the tab is not selectable. If &amp;ldquo;hidden&amp;rdquo;, then the tab is not shown.</source>
          <target state="translated">&amp;ldquo;正常&amp;rdquo;，&amp;ldquo;禁用&amp;rdquo;或&amp;ldquo;隐藏&amp;rdquo;。如果&amp;ldquo;禁用&amp;rdquo;，则该选项卡不可选择。如果为&amp;ldquo;隐藏&amp;rdquo;，则不显示该选项卡。</target>
        </trans-unit>
        <trans-unit id="abd9d70a96769f378e601ed03a344c72fddacf4f" translate="yes" xml:space="preserve">
          <source>Either &lt;em&gt;action&lt;/em&gt; or &lt;em&gt;delayfunc&lt;/em&gt; can raise an exception. In either case, the scheduler will maintain a consistent state and propagate the exception. If an exception is raised by &lt;em&gt;action&lt;/em&gt;, the event will not be attempted in future calls to &lt;a href=&quot;#sched.scheduler.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">无论是&lt;em&gt;动作&lt;/em&gt;还是&lt;em&gt;delayfunc&lt;/em&gt;可引发异常。无论哪种情况，调度程序都将保持一致的状态并传播异常。如果通过&lt;em&gt;操作&lt;/em&gt;引发异常，则在以后的&lt;a href=&quot;#sched.scheduler.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;调用中将不会尝试尝试该事件。</target>
        </trans-unit>
        <trans-unit id="85c84f61f57bea218ff74b0e009533443082981e" translate="yes" xml:space="preserve">
          <source>Either escapes special characters (permitting you to match characters like &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'?'&lt;/code&gt;, and so forth), or signals a special sequence; special sequences are discussed below.</source>
          <target state="translated">要么转义特殊字符（允许您匹配 &lt;code&gt;'*'&lt;/code&gt; ， &lt;code&gt;'?'&lt;/code&gt; 等字符，要么发出特殊序列的信号；或者 特殊序列将在下面讨论。</target>
        </trans-unit>
        <trans-unit id="6eee7c7fedc41829e794e6532414686d341b604b" translate="yes" xml:space="preserve">
          <source>Either this method or &lt;a href=&quot;#test.support.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; should be used for any tests where a server socket needs to be bound to a particular port for the duration of the test. Which one to use depends on whether the calling code is creating a Python socket, or if an unused port needs to be provided in a constructor or passed to an external program (i.e. the &lt;code&gt;-accept&lt;/code&gt; argument to openssl&amp;rsquo;s s_server mode). Always prefer &lt;a href=&quot;#test.support.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;#test.support.find_unused_port&quot;&gt;&lt;code&gt;find_unused_port()&lt;/code&gt;&lt;/a&gt; where possible. Using a hard coded port is discouraged since it can make multiple instances of the test impossible to run simultaneously, which is a problem for buildbots.</source>
          <target state="translated">对于在测试期间需要将服务器套接字绑定到特定端口的任何测试，都应使用此方法或&lt;a href=&quot;#test.support.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt;。使用哪一个取决于调用代码是否正在创建Python套接字，或者是否需要在构造函数中提供未使用的端口或将其传递给外部程序（即，openssl s_server模式的 &lt;code&gt;-accept&lt;/code&gt; 参数）。在可能的情况下，始终首选使用&lt;a href=&quot;#test.support.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; 而&lt;/a&gt;不是&lt;a href=&quot;#test.support.find_unused_port&quot;&gt; &lt;code&gt;find_unused_port()&lt;/code&gt; &lt;/a&gt;。不建议使用硬编码端口，因为它会使多个测试实例无法同时运行，这对于buildbot来说是个问题。</target>
        </trans-unit>
        <trans-unit id="9a6c46c5e94ad5acddfcaefdbb1838daf6a17636" translate="yes" xml:space="preserve">
          <source>Either this method or &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; should be used for any tests where a server socket needs to be bound to a particular port for the duration of the test. Which one to use depends on whether the calling code is creating a Python socket, or if an unused port needs to be provided in a constructor or passed to an external program (i.e. the &lt;code&gt;-accept&lt;/code&gt; argument to openssl&amp;rsquo;s s_server mode). Always prefer &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;#test.support.socket_helper.find_unused_port&quot;&gt;&lt;code&gt;find_unused_port()&lt;/code&gt;&lt;/a&gt; where possible. Using a hard coded port is discouraged since it can make multiple instances of the test impossible to run simultaneously, which is a problem for buildbots.</source>
          <target state="translated">对于在测试期间需要将服务器套接字绑定到特定端口的任何测试，都应使用此方法或&lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt;。使用哪一个取决于调用代码是否正在创建Python套接字，或者是否需要在构造函数中提供未使用的端口或将其传递给外部程序（即，openssl s_server模式的 &lt;code&gt;-accept&lt;/code&gt; 参数）。在可能的情况下，始终首选使用&lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; 而&lt;/a&gt;不是&lt;a href=&quot;#test.support.socket_helper.find_unused_port&quot;&gt; &lt;code&gt;find_unused_port()&lt;/code&gt; &lt;/a&gt;。不建议使用硬编码端口，因为它会使多个测试实例无法同时运行，这对于buildbot来说是个问题。</target>
        </trans-unit>
        <trans-unit id="595af9f0b2bd2f1aad5e8a611a6b67dcd9fdb296" translate="yes" xml:space="preserve">
          <source>Either type of image is created through either the &lt;code&gt;file&lt;/code&gt; or the &lt;code&gt;data&lt;/code&gt; option (other options are available as well).</source>
          <target state="translated">可以通过 &lt;code&gt;file&lt;/code&gt; 或 &lt;code&gt;data&lt;/code&gt; 选项创建图像的任何一种（其他选项也可用）。</target>
        </trans-unit>
        <trans-unit id="359218794b7e55476802d4e7b22031fcdc11a904" translate="yes" xml:space="preserve">
          <source>Element Objects</source>
          <target state="translated">元素对象</target>
        </trans-unit>
        <trans-unit id="49534abd221be130bf26afdaca69c9d22709f868" translate="yes" xml:space="preserve">
          <source>Element class. This class defines the Element interface, and provides a reference implementation of this interface.</source>
          <target state="translated">Element类。该类定义了 Element 接口,并提供了该接口的参考实现。</target>
        </trans-unit>
        <trans-unit id="ef0b2c7a0b2591de8486cfbe012dd3bf013c9430" translate="yes" xml:space="preserve">
          <source>Element nodes in the document hierarchy.</source>
          <target state="translated">文件层次结构中的元素节点。</target>
        </trans-unit>
        <trans-unit id="f4648a38161abf7ec412ca53076e6858990db678" translate="yes" xml:space="preserve">
          <source>ElementTree Objects</source>
          <target state="translated">元素树对象</target>
        </trans-unit>
        <trans-unit id="4f2ce384320f7363ad9b94cc0a546bdae1eab4d4" translate="yes" xml:space="preserve">
          <source>ElementTree wrapper class. This class represents an entire element hierarchy, and adds some extra support for serialization to and from standard XML.</source>
          <target state="translated">ElementTree封装类。该类代表了整个元素层次结构,并为标准XML的序列化和从标准XML的序列化增加了一些额外的支持。</target>
        </trans-unit>
        <trans-unit id="e24a4bf20d22559c7e5a0526dfebb54f5104a66b" translate="yes" xml:space="preserve">
          <source>Elements are counted from an &lt;em&gt;iterable&lt;/em&gt; or added-in from another &lt;em&gt;mapping&lt;/em&gt; (or counter). Like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; but adds counts instead of replacing them. Also, the &lt;em&gt;iterable&lt;/em&gt; is expected to be a sequence of elements, not a sequence of &lt;code&gt;(key, value)&lt;/code&gt; pairs.</source>
          <target state="translated">元素是从&lt;em&gt;可迭代的&lt;/em&gt;或从另一个&lt;em&gt;映射&lt;/em&gt;（或计数器）添加的元素中计数的。像&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;一样，但是添加计数而不是替换它们。同样，&lt;em&gt;可迭代&lt;/em&gt;对象应该是元素序列，而不是 &lt;code&gt;(key, value)&lt;/code&gt; 对序列。</target>
        </trans-unit>
        <trans-unit id="e5957fa1f33f3be4329508a3d81ddf845cff5498" translate="yes" xml:space="preserve">
          <source>Elements are counted from an &lt;em&gt;iterable&lt;/em&gt; or initialized from another &lt;em&gt;mapping&lt;/em&gt; (or counter):</source>
          <target state="translated">元素是从一个&lt;em&gt;可迭代的&lt;/em&gt;对象计数或从另一个&lt;em&gt;映射&lt;/em&gt;（或计数器）初始化的：</target>
        </trans-unit>
        <trans-unit id="e16188e6c59f02f989fa3685c7fd0fc9c19161c4" translate="yes" xml:space="preserve">
          <source>Elements are subtracted from an &lt;em&gt;iterable&lt;/em&gt; or from another &lt;em&gt;mapping&lt;/em&gt; (or counter). Like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; but subtracts counts instead of replacing them. Both inputs and outputs may be zero or negative.</source>
          <target state="translated">从&lt;em&gt;可迭代对象&lt;/em&gt;或另一个&lt;em&gt;映射&lt;/em&gt;（或计数器）中减去元素。像&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;一样，但是减去计数而不是替换它们。输入和输出都可以为零或负。</target>
        </trans-unit>
        <trans-unit id="0143fc64324e3d8e5c44dbc294959eb5a7104759" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, the generated combinations will also be unique.</source>
          <target state="translated">元素根据其位置而不是其值被视为唯一。所以如果输入元素是唯一的,生成的组合也将是唯一的。</target>
        </trans-unit>
        <trans-unit id="11dcc2ac3f506948cc124bda3adca41a062af817" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each combination.</source>
          <target state="translated">元素根据其位置而不是其值被视为唯一。所以如果输入的元素是唯一的,那么每个组合中就不会有重复值。</target>
        </trans-unit>
        <trans-unit id="a7b6e8e82fdfd17809cefa633bda0e009bcc17f5" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each permutation.</source>
          <target state="translated">元素根据其位置而不是其值被视为唯一。因此,如果输入的元素是唯一的,那么在每个排列组合中就不会有重复的值。</target>
        </trans-unit>
        <trans-unit id="34a8d1deb6f308a56f56218b6f5d343ef934119f" translate="yes" xml:space="preserve">
          <source>Elements which are declared to be &lt;code&gt;EMPTY&lt;/code&gt; have this model type.</source>
          <target state="translated">声明为 &lt;code&gt;EMPTY&lt;/code&gt; 的元素具有此模型类型。</target>
        </trans-unit>
        <trans-unit id="10f74c250875f4d100fff5cde5ff0835190404c1" translate="yes" xml:space="preserve">
          <source>Elimination of PYO files</source>
          <target state="translated">消除PYO文件</target>
        </trans-unit>
        <trans-unit id="6ff0f4a868ef59be803181103a0f8dacda1099dd" translate="yes" xml:space="preserve">
          <source>Ellipsis</source>
          <target state="translated">Ellipsis</target>
        </trans-unit>
        <trans-unit id="ed17628a4f82dc8f7f14625d39bd363df62db888" translate="yes" xml:space="preserve">
          <source>Else &lt;em&gt;MandatoryRelease&lt;/em&gt; records when the feature became part of the language; in releases at or after that, modules no longer need a future statement to use the feature in question, but may continue to use such imports.</source>
          <target state="translated">其他&lt;em&gt;强制发布&lt;/em&gt;功能记录该功能何时成为语言的一部分；在那时或之后的版本中，模块不再需要将来的声明来使用所涉及的功能，而是可以继续使用此类导入。</target>
        </trans-unit>
        <trans-unit id="84add5b2952787581cb9a8851eef63d1ec75d22b" translate="yes" xml:space="preserve">
          <source>Email</source>
          <target state="translated">Email</target>
        </trans-unit>
        <trans-unit id="da824744005afe1d0c34eee098eaf67872e3d742" translate="yes" xml:space="preserve">
          <source>Emit a short attention sound.</source>
          <target state="translated">发出短暂的注意声。</target>
        </trans-unit>
        <trans-unit id="712fe37c31ba2210e87e7f7f3b1bf5e14d866d27" translate="yes" xml:space="preserve">
          <source>Empties the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Used by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">清空包含在单元格插槽&lt;em&gt;i&lt;/em&gt;和可用变量存储中的单元格。由&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt;语句使用。</target>
        </trans-unit>
        <trans-unit id="ed21ab90fe378dfcb0eca7cdd9be415109ce1c81" translate="yes" xml:space="preserve">
          <source>Empties the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Used by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">清空包含在单元格插槽&lt;em&gt;i&lt;/em&gt;和可用变量存储中的单元格。由&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt;语句使用。</target>
        </trans-unit>
        <trans-unit id="6f66f8ef5d271d13742c0b875e964787e7b320e6" translate="yes" xml:space="preserve">
          <source>Empty files are opened and immediately closed; the only time their presence in the list of filenames is noticeable at all is when the last file opened is empty.</source>
          <target state="translated">空文件被打开并立即关闭;只有当最后打开的文件是空文件时,才会注意到它们在文件名列表中的存在。</target>
        </trans-unit>
        <trans-unit id="989470481eafc77ed997959fad54049224706769" translate="yes" xml:space="preserve">
          <source>Empty iterables are allowed, but acceptance of three empty iterables is platform-dependent. (It is known to work on Unix but not on Windows.) The optional &lt;em&gt;timeout&lt;/em&gt; argument specifies a time-out as a floating point number in seconds. When the &lt;em&gt;timeout&lt;/em&gt; argument is omitted the function blocks until at least one file descriptor is ready. A time-out value of zero specifies a poll and never blocks.</source>
          <target state="translated">允许使用空的Iterable，但是否接受三个空的Iterable取决于平台。（众所周知，它可以在Unix上工作，但不能在Windows上工作。）可选的&lt;em&gt;timeout&lt;/em&gt;参数将&lt;em&gt;超时&lt;/em&gt;指定为以秒为单位的浮点数。当省略了&lt;em&gt;超时&lt;/em&gt;参数时，该功能将阻塞，直到至少一个文件描述符准备就绪。超时值为零表示轮询，并且永不阻塞。</target>
        </trans-unit>
        <trans-unit id="96fc58d87dcfa6680714e0fc0a204c20e1bc2122" translate="yes" xml:space="preserve">
          <source>Empty matches for the pattern split the string only when not adjacent to a previous empty match.</source>
          <target state="translated">模式的空匹配只有在不与之前的空匹配相邻时才会分割字符串。</target>
        </trans-unit>
        <trans-unit id="6eb0779fd09c16502ebd15fb0795bd1835ade77f" translate="yes" xml:space="preserve">
          <source>Empty sequences are allowed, but acceptance of three empty sequences is platform-dependent. (It is known to work on Unix but not on Windows.) The optional &lt;em&gt;timeout&lt;/em&gt; argument specifies a time-out as a floating point number in seconds. When the &lt;em&gt;timeout&lt;/em&gt; argument is omitted the function blocks until at least one file descriptor is ready. A time-out value of zero specifies a poll and never blocks.</source>
          <target state="translated">允许使用空序列，但是否接受三个空序列取决于平台。（众所周知，它可以在Unix上工作，但不能在Windows上工作。）可选的&lt;em&gt;timeout&lt;/em&gt;参数将&lt;em&gt;超时&lt;/em&gt;指定为以秒为单位的浮点数。如果省略了&lt;em&gt;超时&lt;/em&gt;参数，则该功能将阻塞，直到至少准备好一个文件描述符。超时值为零表示轮询且永不阻塞。</target>
        </trans-unit>
        <trans-unit id="f9ca147c86f3511f63e922200d892933735a3ce7" translate="yes" xml:space="preserve">
          <source>Enable &amp;ldquo;passive&amp;rdquo; mode if &lt;em&gt;val&lt;/em&gt; is true, otherwise disable passive mode. Passive mode is on by default.</source>
          <target state="translated">如果&lt;em&gt;val&lt;/em&gt;为true，则启用&amp;ldquo;被动&amp;rdquo;模式，否则禁用被动模式。默认情况下，被动模式是打开的。</target>
        </trans-unit>
        <trans-unit id="086568da0d78035964a7e9e36aa55f06cd524374" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;asyncio debug mode&lt;/a&gt;. For example, &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; checks for coroutines that were not awaited and logs them.</source>
          <target state="translated">启用&lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;异步调试模式&lt;/a&gt;。例如，&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;检查未等待的协程并记录它们。</target>
        </trans-unit>
        <trans-unit id="1a1830a9ad6b230d4772920b444e77e892a7b2c0" translate="yes" xml:space="preserve">
          <source>Enable &lt;em&gt;capability&lt;/em&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5161.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5161&lt;/strong&gt;&lt;/a&gt;). Most capabilities do not need to be enabled. Currently only the &lt;code&gt;UTF8=ACCEPT&lt;/code&gt; capability is supported (see &lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">启用&lt;em&gt;功能&lt;/em&gt;（请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc5161.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5161&lt;/strong&gt;&lt;/a&gt;）。大多数功能不需要启用。当前仅支持 &lt;code&gt;UTF8=ACCEPT&lt;/code&gt; 功能（请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e64969c2a478b0193d345f61f0278bb04e5a5c3d" translate="yes" xml:space="preserve">
          <source>Enable TLS 1.3 post-handshake client authentication. Post-handshake auth is disabled by default and a server can only request a TLS client certificate during the initial handshake. When enabled, a server may request a TLS client certificate at any time after the handshake.</source>
          <target state="translated">启用TLS 1.3握手后客户端认证。默认情况下,握手后认证是禁用的,服务器只能在初始握手过程中请求TLS客户端证书。启用后,服务器可以在握手后的任何时候请求TLS客户端证书。</target>
        </trans-unit>
        <trans-unit id="5b01e8ffd8306cea3683a91d93d4207b25a77ccd" translate="yes" xml:space="preserve">
          <source>Enable a server to accept connections. If &lt;em&gt;backlog&lt;/em&gt; is specified, it must be at least 0 (if it is lower, it is set to 0); it specifies the number of unaccepted connections that the system will allow before refusing new connections. If not specified, a default reasonable value is chosen.</source>
          <target state="translated">启用服务器以接受连接。如果指定了&lt;em&gt;积压&lt;/em&gt;，则必须至少为0（如果较低，则将其设置为0）；否则，必须为0。它指定系统在拒绝新连接之前允许的不可接受的连接数。如果未指定，则选择默认的合理值。</target>
        </trans-unit>
        <trans-unit id="971896ffb7e3ebd15d517c1f88efeb1e585f6fb1" translate="yes" xml:space="preserve">
          <source>Enable automatic garbage collection.</source>
          <target state="translated">启用自动垃圾收集功能。</target>
        </trans-unit>
        <trans-unit id="eacc85becdea9d34a7f0f87cf3c7f4659f303bdb" translate="yes" xml:space="preserve">
          <source>Enable keyboard traversal for a toplevel window containing this notebook.</source>
          <target state="translated">启用包含该笔记本的顶层窗口的键盘遍历。</target>
        </trans-unit>
        <trans-unit id="eeb17b55c47c064f0c885ac6edcfc504029b5711" translate="yes" xml:space="preserve">
          <source>Enable or disable automatic calls to &lt;code&gt;add_history()&lt;/code&gt; when reading input via readline. The &lt;em&gt;enabled&lt;/em&gt; argument should be a Boolean value that when true, enables auto history, and that when false, disables auto history.</source>
          <target state="translated">通过readline读取输入时，启用或禁用对 &lt;code&gt;add_history()&lt;/code&gt; 的自动调用。该&lt;em&gt;启用的&lt;/em&gt;参数应该是一个布尔值，如果为true，使汽车的历史，而且当假的，禁止汽车的历史。</target>
        </trans-unit>
        <trans-unit id="26a73bd72aa4da39ed18ebf87aa69760fe6a344f" translate="yes" xml:space="preserve">
          <source>Enable or disable the debug mode.</source>
          <target state="translated">启用或禁用调试模式。</target>
        </trans-unit>
        <trans-unit id="befd2646a620e600335d49ff83a819d286b6b876" translate="yes" xml:space="preserve">
          <source>Enable stricter semantics for mixing floats and Decimals.</source>
          <target state="translated">启用更严格的浮点数和小数混合语义。</target>
        </trans-unit>
        <trans-unit id="f9377cf43de0047335652dca6650eb8fd8f870ef" translate="yes" xml:space="preserve">
          <source>Enable the breakpoints specified.</source>
          <target state="translated">启用指定的断点。</target>
        </trans-unit>
        <trans-unit id="78484a7c1326bcc3e5583395ac67b8a7c9642313" translate="yes" xml:space="preserve">
          <source>Enable the fault handler: install handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt; and &lt;code&gt;SIGILL&lt;/code&gt; signals to dump the Python traceback. If &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, produce tracebacks for every running thread. Otherwise, dump only the current thread.</source>
          <target state="translated">启用错误处理程序：为 &lt;code&gt;SIGSEGV&lt;/code&gt; ， &lt;code&gt;SIGFPE&lt;/code&gt; ， &lt;code&gt;SIGABRT&lt;/code&gt; ， &lt;code&gt;SIGBUS&lt;/code&gt; 和 &lt;code&gt;SIGILL&lt;/code&gt; 信号安装处理程序以转储Python追溯。如果&lt;em&gt;all_threads&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则为每个正在运行的线程生成回溯。否则，仅转储当前线程。</target>
        </trans-unit>
        <trans-unit id="00219e9a1b9ff26ad0b40fd3c6c39fe8683fdcc9" translate="yes" xml:space="preserve">
          <source>Enables CAN FD support in a CAN_RAW socket. This is disabled by default. This allows your application to send both CAN and CAN FD frames; however, you must accept both CAN and CAN FD frames when reading from the socket.</source>
          <target state="translated">在CAN_RAW插座中启用CAN FD支持。默认情况下是禁用的。这允许您的应用程序同时发送CAN和CAN FD帧;但是,当您从插座中读取数据时,必须同时接受CAN和CAN FD帧。</target>
        </trans-unit>
        <trans-unit id="1710fc7505c79b54673902cffbe395489ac698dc" translate="yes" xml:space="preserve">
          <source>Enables support for &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; style type comments (&lt;code&gt;# type: &amp;lt;type&amp;gt;&lt;/code&gt;, &lt;code&gt;# type: ignore &amp;lt;stuff&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">启用对&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;样式类型注释的支持（ &lt;code&gt;# type: &amp;lt;type&amp;gt;&lt;/code&gt; ， &lt;code&gt;# type: ignore &amp;lt;stuff&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="433b11bbca8680e3b1eb83dc619dac219f09fcd3" translate="yes" xml:space="preserve">
          <source>Enables support for top-level &lt;code&gt;await&lt;/code&gt;, &lt;code&gt;async for&lt;/code&gt;, &lt;code&gt;async with&lt;/code&gt; and async comprehensions.</source>
          <target state="translated">启用对顶级 &lt;code&gt;await&lt;/code&gt; ， &lt;code&gt;async for&lt;/code&gt; ， &lt;code&gt;async with&lt;/code&gt; 和async comprehensions的支持。</target>
        </trans-unit>
        <trans-unit id="b48d635867970782604405e57297e025f0d6a89c" translate="yes" xml:space="preserve">
          <source>Enables workarounds for various bugs present in other SSL implementations. This option is set by default. It does not necessarily set the same flags as OpenSSL&amp;rsquo;s &lt;code&gt;SSL_OP_ALL&lt;/code&gt; constant.</source>
          <target state="translated">为其他SSL实现中存在的各种错误启用解决方法。默认情况下设置此选项。它不必设置与OpenSSL的 &lt;code&gt;SSL_OP_ALL&lt;/code&gt; 常量相同的标志。</target>
        </trans-unit>
        <trans-unit id="1cdca8499ba0f0ffddfe7036f37fdfd9bd58cea9" translate="yes" xml:space="preserve">
          <source>Enabling debug mode</source>
          <target state="translated">启用调试模式</target>
        </trans-unit>
        <trans-unit id="07af2f6e3bb3a4e462e895058fcbc45334a604b2" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;em&gt;allow_dotted_names&lt;/em&gt; option allows intruders to access your module&amp;rsquo;s global variables and may allow intruders to execute arbitrary code on your machine. Only use this example only within a secure, closed network.</source>
          <target state="translated">启用&lt;em&gt;allow_dotted_names&lt;/em&gt;选项允许入侵者访问模块的全局变量，并且可以允许入侵者在计算机上执行任意代码。仅在安全，封闭的网络中使用此示例。</target>
        </trans-unit>
        <trans-unit id="c7b1af61e74fb0fcb6656cb2909de6d3c9f228d8" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;em&gt;allow_dotted_names&lt;/em&gt; option allows intruders to access your module&amp;rsquo;s global variables and may allow intruders to execute arbitrary code on your machine. Only use this option on a secure, closed network.</source>
          <target state="translated">启用&lt;em&gt;allow_dotted_names&lt;/em&gt;选项允许入侵者访问模块的全局变量，并且可能允许入侵者在计算机上执行任意代码。仅在安全，封闭的网络上使用此选项。</target>
        </trans-unit>
        <trans-unit id="e0dc0c7e9924417b53fe768dcbe06985665e6209" translate="yes" xml:space="preserve">
          <source>Enabling the Python Development Mode displays a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; warning:</source>
          <target state="translated">启用Python开发模式会显示&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;警告：</target>
        </trans-unit>
        <trans-unit id="e2e7fa36c7837dad6cdfdadeb04e867884476ccf" translate="yes" xml:space="preserve">
          <source>Enabling the Python Development Mode is similar to the following command, but with additional effects described below:</source>
          <target state="translated">启用Python开发模式类似于下面的命令,但有下面描述的附加效果。</target>
        </trans-unit>
        <trans-unit id="a19099a826dd8a9592dea4c03d95ca189ffd83fd" translate="yes" xml:space="preserve">
          <source>Encapsulate an XML error or warning. This class can contain basic error or warning information from either the XML parser or the application: it can be subclassed to provide additional functionality or to add localization. Note that although the handlers defined in the &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt; interface receive instances of this exception, it is not required to actually raise the exception &amp;mdash; it is also useful as a container for information.</source>
          <target state="translated">封装XML错误或警告。此类可以包含来自XML解析器或应用程序的基本错误或警告信息：可以将其子类化以提供其他功能或添加本地化。请注意，尽管在&lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;接口中定义的处理程序会收到此异常的实例，但实际上并不需要引发该异常-它也可用作信息容器。</target>
        </trans-unit>
        <trans-unit id="7b89d059b48fe1d6ce07ae4ebf8b9b1f65d5439b" translate="yes" xml:space="preserve">
          <source>Encapsulates the asynchronous execution of a callable. &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; instances are created by &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt;&lt;code&gt;Executor.submit()&lt;/code&gt;&lt;/a&gt; and should not be created directly except for testing.</source>
          <target state="translated">封装可调用对象的异步执行。&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;实例由&lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt; &lt;code&gt;Executor.submit()&lt;/code&gt; &lt;/a&gt;创建，除测试外，不应直接创建。</target>
        </trans-unit>
        <trans-unit id="3fc3b238ce3cff3109f5fca3d21d66f397859fba" translate="yes" xml:space="preserve">
          <source>Encapsulation of the information needed by the &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to read entities.</source>
          <target state="translated">封装&lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;读取实体所需的信息。</target>
        </trans-unit>
        <trans-unit id="14f77877197d80a81f16a011d2af74a80b57468e" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes preserve the literal value of all characters within the quotes;</source>
          <target state="translated">在引号中包含的字符会保留引号内所有字符的字面价值。</target>
        </trans-unit>
        <trans-unit id="88ad97909485c7dd6989f04a4e8fcd2dc6f0fac1" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes which are not part of &lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt;&lt;code&gt;escapedquotes&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;&quot;'&quot;&lt;/code&gt;) preserve the literal value of all characters within the quotes;</source>
          <target state="translated">在不属于的一部分报价包围字符&lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt; &lt;code&gt;escapedquotes&lt;/code&gt; &lt;/a&gt;（例如 &lt;code&gt;&quot;'&quot;&lt;/code&gt; ）保存引号内的所有字符的文本值;</target>
        </trans-unit>
        <trans-unit id="d4821252d35584af9326a6e7f60f1d73b77d48c3" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes which are part of &lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt;&lt;code&gt;escapedquotes&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;'&quot;'&lt;/code&gt;) preserves the literal value of all characters within the quotes, with the exception of the characters mentioned in &lt;a href=&quot;#shlex.shlex.escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt;. The escape characters retain its special meaning only when followed by the quote in use, or the escape character itself. Otherwise the escape character will be considered a normal character.</source>
          <target state="translated">括在引号括起来的部分字符&lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt; &lt;code&gt;escapedquotes&lt;/code&gt; &lt;/a&gt;（如 &lt;code&gt;'&quot;'&lt;/code&gt; ）保留了引号中的所有字符的字面意义，所提到的人物外&lt;a href=&quot;#shlex.shlex.escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;。转义字符，后面时报价仅保留其特殊含义或转义字符本身，否则转义字符将被视为普通字符。</target>
        </trans-unit>
        <trans-unit id="8e3ef7fb5bbf1067d36ca7d114791bb1ecfe2094" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the URL- and filesystem-safe alphabet, which substitutes &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; in the standard Base64 alphabet, and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. The result can still contain &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用URL-和文件系统安全的字母表，其中的替代品 &lt;code&gt;-&lt;/code&gt; 代替 &lt;code&gt;+&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 代替 &lt;code&gt;/&lt;/code&gt; 在标准的Base64字母，并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。结果仍然可以包含 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfbd8dc1abad46fd0071384996480ac840443421" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the standard Base64 alphabet and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用标准的Base64字母，并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84e671106e5fd09bcba9090332501ac45ae84724" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt;&lt;em&gt;filename&lt;/em&gt; to the filesystem encoding with &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler, or &lt;code&gt;'strict'&lt;/code&gt; on Windows; return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径类似&lt;/a&gt;&lt;em&gt;的文件名&lt;/em&gt;与文件系统编码 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序，或 &lt;code&gt;'strict'&lt;/code&gt; 的Windows; 返回&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="05fe0e75fe79f4d8975b5cd3a8909af0029ef6cf" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the URL- and filesystem-safe alphabet, which substitutes &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; in the standard Base64 alphabet, and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. The result can still contain &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用URL-和文件系统安全的字母表，其中的替代品 &lt;code&gt;-&lt;/code&gt; 代替 &lt;code&gt;+&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 代替 &lt;code&gt;/&lt;/code&gt; 在标准的Base64字母，并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。结果仍然可以包含 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77ba8ada5c22b1dea8030be84eb23548ca6cf244" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the standard Base64 alphabet and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用标准的Base64字母，并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="076372c7ed27099e4d1463b4eb578995770fc7f3" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt;&lt;em&gt;filename&lt;/em&gt; to the filesystem encoding with &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler, or &lt;code&gt;'strict'&lt;/code&gt; on Windows; return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径类似&lt;/a&gt;&lt;em&gt;的文件名&lt;/em&gt;与文件系统编码 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序，或 &lt;code&gt;'strict'&lt;/code&gt; 的Windows; 返回&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="ffdf7198a76c3276541a5db4c0b0209534929dca" translate="yes" xml:space="preserve">
          <source>Encode &lt;em&gt;s&lt;/em&gt; using the &lt;code&gt;ASCII&lt;/code&gt; codec and the &lt;code&gt;surrogateescape&lt;/code&gt; error handler, and pass it to the &lt;em&gt;write&lt;/em&gt; method of the &lt;em&gt;outfp&lt;/em&gt; passed to the &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s constructor.</source>
          <target state="translated">编码&lt;em&gt;小号&lt;/em&gt;使用 &lt;code&gt;ASCII&lt;/code&gt; 编解码器和 &lt;code&gt;surrogateescape&lt;/code&gt; 错误处理程序，并把它传递给&lt;em&gt;写&lt;/em&gt;的方法&lt;em&gt;outfp&lt;/em&gt;传递给&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;的构造。</target>
        </trans-unit>
        <trans-unit id="6e685faa81657b0e3f36d4d3a4f45234790e538f" translate="yes" xml:space="preserve">
          <source>Encode a message header into an RFC-compliant format, possibly wrapping long lines and encapsulating non-ASCII parts in base64 or quoted-printable encodings.</source>
          <target state="translated">将消息头编码成符合RFC的格式,可能会包装长行,并将非ASCII部分用base64或可引号打印编码封装。</target>
        </trans-unit>
        <trans-unit id="ba9ada320fca1e8cb2142e1346d247f9f806f542" translate="yes" xml:space="preserve">
          <source>Encode and decode MIME base64 data</source>
          <target state="translated">对MIME base64数据进行编码和解码。</target>
        </trans-unit>
        <trans-unit id="7ab581d597f3bf448a02f8351b29151a923e6e6f" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using Ascii85 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;使用ASCII85并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d11216cbf678c1763da91fd2fb9b0f745134c5fd" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using base85 (as used in e.g. git-style binary diffs) and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;使用base85（如在例如git的风格的二进制diff文件中使用），并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf1fdba47a42f7a6afd6ab89d4bca80118d00ef3" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base16 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base16并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d56aa77069a6187dbe9ae10ef72b7abeab315a8e" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base32 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base32并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="635ad9b339c141c690488f6ac82847a524ee904f" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base64 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base64和返回编码的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83850d70b6021bfeec0e6a1e79a7dc069defb565" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt;, which can contain arbitrary binary data, and return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the base64-encoded data, with newlines (&lt;code&gt;b'\n'&lt;/code&gt;) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;，它可以包含任意的二进制数据，并返回&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;含有base64编码数据，用换行（ &lt;code&gt;b'\n'&lt;/code&gt; ）插入每76个字节的输出，之后，并确保有一个尾随换行符，根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;（MIME）。</target>
        </trans-unit>
        <trans-unit id="6c24483d2a7551dba9ca85707c56b2a4d3adba2a" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using Ascii85 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;使用ASCII85并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="286d7e815fd0189e292a2ad6beea18b707ea6d62" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using base85 (as used in e.g. git-style binary diffs) and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;使用base85（如在例如git的风格的二进制diff文件中使用），并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="730735ea1ed7145d328c5f5cd530ec18fa4e9a18" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base16 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base16并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7841a8d4a266107d80bd65cf7027f070a979143" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base32 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base32并返回所述经编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1ccfd30475fd6bdfe8a78f4b61b4f29aff9304b" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base64 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;使用Base64和返回编码的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11789d869c4dcccbb878dde1c467ecd5806dab44" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt;, which can contain arbitrary binary data, and return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the base64-encoded data, with newlines (&lt;code&gt;b'\n'&lt;/code&gt;) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">编码&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;&lt;em&gt;小号&lt;/em&gt;，它可以包含任意的二进制数据，并返回&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;含有base64编码数据，用换行（ &lt;code&gt;b'\n'&lt;/code&gt; ）插入每76个字节的输出，之后，并确保有一个尾随换行符，根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;（MIME）。</target>
        </trans-unit>
        <trans-unit id="ae13ec2bd5725d886fbbd75e44ed1df1c2ae02ed" translate="yes" xml:space="preserve">
          <source>Encode the contents of the &lt;em&gt;input&lt;/em&gt; file and write the resulting quoted-printable data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;binary file objects&lt;/a&gt;. &lt;em&gt;quotetabs&lt;/em&gt;, a non-optional flag which controls whether to encode embedded spaces and tabs; when true it encodes such embedded whitespace, and when false it leaves them unencoded. Note that spaces and tabs appearing at the end of lines are always encoded, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;header&lt;/em&gt; is a flag which controls if spaces are encoded as underscores as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;em&gt;输入&lt;/em&gt;文件的内容进行编码，并将得到的带引号的可打印数据写入&lt;em&gt;输出&lt;/em&gt;文件。&lt;em&gt;输入&lt;/em&gt;和&lt;em&gt;输出&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;二进制文件对象&lt;/a&gt;。&lt;em&gt;quotetabs&lt;/em&gt;，一个非可选的标志，用于控制是否对嵌入的空格和制表符进行编码；如果为true，则将对此类嵌入的空格进行编码；如果为false，则将其保留为未编码。注意，出现在行尾的空格和制表符始终按照&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521进行&lt;/strong&gt;&lt;/a&gt;编码。&lt;em&gt;header&lt;/em&gt;是一个标志，用于控制是否按照&lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522将&lt;/strong&gt;&lt;/a&gt;空格编码为下划线。</target>
        </trans-unit>
        <trans-unit id="ddb0a5f7f449a827c30ca94d3c06bf83c01065e9" translate="yes" xml:space="preserve">
          <source>Encode the contents of the &lt;em&gt;input&lt;/em&gt; file and write the resulting quoted-printable data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;binary file objects&lt;/a&gt;. &lt;em&gt;quotetabs&lt;/em&gt;, a non-optional flag which controls whether to encode embedded spaces and tabs; when true it encodes such embedded whitespace, and when false it leaves them unencoded. Note that spaces and tabs appearing at the end of lines are always encoded, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;header&lt;/em&gt; is a flag which controls if spaces are encoded as underscores as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">对&lt;em&gt;输入&lt;/em&gt;文件的内容进行编码，然后将得到的带引号的可打印数据写入&lt;em&gt;输出&lt;/em&gt;文件。&lt;em&gt;输入&lt;/em&gt;和&lt;em&gt;输出&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;二进制文件对象&lt;/a&gt;。&lt;em&gt;quotetabs&lt;/em&gt;，一个非可选的标志，用于控制是否对嵌入的空格和制表符进行编码；如果为true，则对此类嵌入的空格进行编码；如果为false，则将其保留为未编码。请注意，出现在行尾的空格和制表符始终按照&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521进行&lt;/strong&gt;&lt;/a&gt;编码。&lt;em&gt;header&lt;/em&gt;是一个标志，用于控制是否按照&lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522将&lt;/strong&gt;&lt;/a&gt;空格编码为下划线。</target>
        </trans-unit>
        <trans-unit id="6b1af585911b3e2c2490aef5a95b4109bcbec15d" translate="yes" xml:space="preserve">
          <source>Encode the contents of the binary &lt;em&gt;input&lt;/em&gt; file and write the resulting base64 encoded data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. &lt;em&gt;input&lt;/em&gt; will be read until &lt;code&gt;input.read()&lt;/code&gt; returns an empty bytes object. &lt;a href=&quot;#base64.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; inserts a newline character (&lt;code&gt;b'\n'&lt;/code&gt;) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">对二进制&lt;em&gt;输入&lt;/em&gt;文件的内容进行编码，然后将生成的base64编码数据写入&lt;em&gt;输出&lt;/em&gt;文件。&lt;em&gt;输入&lt;/em&gt;和&lt;em&gt;输出&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。&lt;em&gt;输入&lt;/em&gt;将被读取，直到 &lt;code&gt;input.read()&lt;/code&gt; 返回一个空字节对象为止。根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;（MIME），&lt;a href=&quot;#base64.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;在输出的每76个字节之后插入一个换行符（ &lt;code&gt;b'\n'&lt;/code&gt; ），并确保输出始终以换行符结尾。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b52a84f90bd01e427f867044644866c0976f8b2" translate="yes" xml:space="preserve">
          <source>Encode the contents of the binary &lt;em&gt;input&lt;/em&gt; file and write the resulting base64 encoded data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. &lt;em&gt;input&lt;/em&gt; will be read until &lt;code&gt;input.read()&lt;/code&gt; returns an empty bytes object. &lt;a href=&quot;#base64.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; inserts a newline character (&lt;code&gt;b'\n'&lt;/code&gt;) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">对二进制&lt;em&gt;输入&lt;/em&gt;文件的内容进行编码，并将生成的base64编码数据写入&lt;em&gt;输出&lt;/em&gt;文件。&lt;em&gt;输入&lt;/em&gt;和&lt;em&gt;输出&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。&lt;em&gt;输入&lt;/em&gt;将一直被读取，直到 &lt;code&gt;input.read()&lt;/code&gt; 返回一个空字节对象为止。根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;（MIME），&lt;a href=&quot;#base64.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;在输出的每76个字节之后插入一个换行符（ &lt;code&gt;b'\n'&lt;/code&gt; ），并确保输出始终以换行符结尾。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ece4908e842d1a57462d3e13321736479cca5fc" translate="yes" xml:space="preserve">
          <source>Encode the given object, &lt;em&gt;o&lt;/em&gt;, and yield each string representation as available. For example:</source>
          <target state="translated">编码给定的对象&lt;em&gt;o&lt;/em&gt;，并产生每个可用的字符串表示形式。例如：</target>
        </trans-unit>
        <trans-unit id="4edd62a7f69a53a1d9591005cca6ad7e417e11cf" translate="yes" xml:space="preserve">
          <source>Encode the string &lt;em&gt;s&lt;/em&gt; according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;. Optional &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;language&lt;/em&gt;, if given is the character set name and language name to use. If neither is given, &lt;em&gt;s&lt;/em&gt; is returned as-is. If &lt;em&gt;charset&lt;/em&gt; is given but &lt;em&gt;language&lt;/em&gt; is not, the string is encoded using the empty string for &lt;em&gt;language&lt;/em&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;对字符串&lt;em&gt;s&lt;/em&gt;进行编码。可选的&lt;em&gt;字符集&lt;/em&gt;和&lt;em&gt;语言&lt;/em&gt;（如果给出）是要使用的字符集名称和语言名称。如果两者均未给出，则&lt;em&gt;s&lt;/em&gt;按原样返回。如果给出了&lt;em&gt;字符集&lt;/em&gt;，但未指定&lt;em&gt;语言&lt;/em&gt;，则使用空字符串&lt;em&gt;language&lt;/em&gt;对该字符串进行编码。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8df3651ff60e834a39b4df93aa682f9e7023628" translate="yes" xml:space="preserve">
          <source>Encoder / decoder</source>
          <target state="translated">编码器/解码器</target>
        </trans-unit>
        <trans-unit id="0b2560b8670c5d6b00522cd4ae4b4d4307d0b2be" translate="yes" xml:space="preserve">
          <source>Encoders and Decoders</source>
          <target state="translated">编码器和解码器</target>
        </trans-unit>
        <trans-unit id="d71cfe7f4cafe8422a37c04504b23989f4687ef0" translate="yes" xml:space="preserve">
          <source>Encodes &lt;em&gt;obj&lt;/em&gt; using the codec registered for &lt;em&gt;encoding&lt;/em&gt;.</source>
          <target state="translated">编码&lt;em&gt;OBJ&lt;/em&gt;使用注册的编解码器&lt;em&gt;编码&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5a0794f1f14ae2870d08446eefc407ddf1f0233a" translate="yes" xml:space="preserve">
          <source>Encodes &lt;em&gt;object&lt;/em&gt; (taking the current state of the encoder into account) and returns the resulting encoded object. If this is the last call to &lt;a href=&quot;#codecs.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;final&lt;/em&gt; must be true (the default is false).</source>
          <target state="translated">对&lt;em&gt;对象&lt;/em&gt;进行编码（考虑编码器的当前状态）并返回生成的编码对象。如果这是最后一次对&lt;a href=&quot;#codecs.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; 的&lt;/a&gt;调用，则&lt;em&gt;final&lt;/em&gt;必须为true（默认值为false）。</target>
        </trans-unit>
        <trans-unit id="43b6fc9174410620829b5e6f78b9b2c8513e41c1" translate="yes" xml:space="preserve">
          <source>Encodes the facility and priority into an integer. You can pass in strings or integers - if strings are passed, internal mapping dictionaries are used to convert them to integers.</source>
          <target state="translated">将设施和优先级编码为一个整数。您可以传入字符串或整数--如果传入字符串,则使用内部映射字典将其转换为整数。</target>
        </trans-unit>
        <trans-unit id="378f8c352c46252bbb75391a25357f76d573bd74" translate="yes" xml:space="preserve">
          <source>Encodes the object &lt;em&gt;input&lt;/em&gt; and returns a tuple (output object, length consumed). For instance, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; converts a string object to a bytes object using a particular character set encoding (e.g., &lt;code&gt;cp1252&lt;/code&gt; or &lt;code&gt;iso-8859-1&lt;/code&gt;).</source>
          <target state="translated">对对象&lt;em&gt;输入进行&lt;/em&gt;编码，并返回一个元组（输出对象，消耗的长度）。例如，&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;使用特定的字符集编码（例如 &lt;code&gt;cp1252&lt;/code&gt; 或 &lt;code&gt;iso-8859-1&lt;/code&gt; ）将字符串对象转换为字节对象。</target>
        </trans-unit>
        <trans-unit id="a23bc0a6d8752d25efb2c617bc68c6592e8d47d2" translate="yes" xml:space="preserve">
          <source>Encodes the object &lt;em&gt;input&lt;/em&gt; and returns a tuple (output object, length consumed). For instance, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; converts a string object to a bytes object using a particular character set encoding (e.g., &lt;code&gt;cp1252&lt;/code&gt; or &lt;code&gt;iso-8859-1&lt;/code&gt;).</source>
          <target state="translated">对对象&lt;em&gt;输入进行&lt;/em&gt;编码，并返回一个元组（输出对象，消耗的长度）。例如，&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;使用特定的字符集编码（例如 &lt;code&gt;cp1252&lt;/code&gt; 或 &lt;code&gt;iso-8859-1&lt;/code&gt; ）将字符串对象转换为字节对象。</target>
        </trans-unit>
        <trans-unit id="fc1b7b9683d09c85651ce4de2401dc8d304b150a" translate="yes" xml:space="preserve">
          <source>Encodes the payload into base64 form and sets the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to &lt;code&gt;base64&lt;/code&gt;. This is a good encoding to use when most of your payload is unprintable data since it is a more compact form than quoted-printable. The drawback of base64 encoding is that it renders the text non-human readable.</source>
          <target state="translated">将有效负载编码为base64形式，并将&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头设置为 &lt;code&gt;base64&lt;/code&gt; 。当大多数有效负载是不可打印的数据时，这是一种很好的编码方式，因为它是比quoted-printable更紧凑的形式。base64编码的缺点是它使文本变得不可读。</target>
        </trans-unit>
        <trans-unit id="95c8e0549c3213a2dda1d9312f81c01e867a1e92" translate="yes" xml:space="preserve">
          <source>Encodes the payload into quoted-printable form and sets the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to &lt;code&gt;quoted-printable&lt;/code&gt;&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. This is a good encoding to use when most of your payload is normal printable data, but contains a few unprintable characters.</source>
          <target state="translated">将有效负载编码为带引号的可打印形式，并将&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头设置为 &lt;code&gt;quoted-printable&lt;/code&gt; &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。当大多数有效负载是正常的可打印数据但包含一些不可打印的字符时，这是一种很好的编码方式。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="596bb52694c422af5f31e595be194a5b80ef5824" translate="yes" xml:space="preserve">
          <source>Encoding basic Python object hierarchies:</source>
          <target state="translated">编码基本的Python对象层次结构。</target>
        </trans-unit>
        <trans-unit id="e01623560da289b520db5d6a7d88c0bbc24861ce" translate="yes" xml:space="preserve">
          <source>Encoding of PalmOS 3.5.</source>
          <target state="translated">PalmOS 3.5的编码。</target>
        </trans-unit>
        <trans-unit id="b04bd66c21e22fbff9114ec0c6134bbca1a0b6a8" translate="yes" xml:space="preserve">
          <source>Encoding suitable as the contents of a Unicode literal in ASCII-encoded Python source code, except that quotes are not escaped. Decode from Latin-1 source code. Beware that Python source code actually uses UTF-8 by default.</source>
          <target state="translated">编码适合于ASCII编码的Python源代码中Unicode文字的内容,除了引号不被转义。从Latin-1源码解码。注意Python源码实际上默认使用UTF-8。</target>
        </trans-unit>
        <trans-unit id="7aec5e156e6be9b6aed99321306edff96823d8f5" translate="yes" xml:space="preserve">
          <source>Encoding used to encode method arguments (Unicode strings and characters). The encoding attribute is inherited from the parent window when a subwindow is created, for example with &lt;a href=&quot;#curses.window.subwin&quot;&gt;&lt;code&gt;window.subwin()&lt;/code&gt;&lt;/a&gt;. By default, the locale encoding is used (see &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">用于对方法参数（Unicode字符串和字符）进行编码的编码。创建子窗口时&lt;a href=&quot;#curses.window.subwin&quot;&gt; &lt;code&gt;window.subwin()&lt;/code&gt; &lt;/a&gt;例如，使用window.subwin（）），从父窗口继承encoding属性。默认情况下，使用区域设置编码（请参见&lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1a47ec39576a907fb4fc37fec210dc585edad95c" translate="yes" xml:space="preserve">
          <source>Encodings and Unicode</source>
          <target state="translated">编码和Unicode</target>
        </trans-unit>
        <trans-unit id="edf16238133674f34dc062d2161f4e728de8384b" translate="yes" xml:space="preserve">
          <source>Encodings are first looked up in the registry&amp;rsquo;s cache. If not found, the list of registered search functions is scanned. If no &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object is found, a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; is raised. Otherwise, the &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object is stored in the cache and returned to the caller.</source>
          <target state="translated">首先在注册表的缓存中查找编码。如果找不到，将扫描已注册的搜索功能列表。如果找不到&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;对象，&lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;引发LookupError。否则，将&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;对象存储在缓存中并返回给调用方。</target>
        </trans-unit>
        <trans-unit id="630b425d9a00bb04751b2932f13d862908b045cf" translate="yes" xml:space="preserve">
          <source>Encrypted password</source>
          <target state="translated">加密密码</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="1922f8549c83f9841a0a3a96665a811403626eb9" translate="yes" xml:space="preserve">
          <source>End of medium</source>
          <target state="translated">媒介结束</target>
        </trans-unit>
        <trans-unit id="4de459b167bc17b3a0e6bbfc5dba938d1d966746" translate="yes" xml:space="preserve">
          <source>End of text</source>
          <target state="translated">文末</target>
        </trans-unit>
        <trans-unit id="8c7f307345f3f9f062b9e039589289044820b04a" translate="yes" xml:space="preserve">
          <source>End of transmission</source>
          <target state="translated">传输结束</target>
        </trans-unit>
        <trans-unit id="b750001d7ab130d7ac487cd2ca42bd5cd9f92224" translate="yes" xml:space="preserve">
          <source>End the scope of a prefix-URI mapping.</source>
          <target state="translated">结束前缀-URI映射的范围。</target>
        </trans-unit>
        <trans-unit id="96a5fa3659b07bd3bd2f4d5beb5509f96a53c4a4" translate="yes" xml:space="preserve">
          <source>End transmission block</source>
          <target state="translated">末端传输块</target>
        </trans-unit>
        <trans-unit id="e7a088c0208f7d8311fb5b3d1e0349a153b3d9ab" translate="yes" xml:space="preserve">
          <source>Engineering notation has an exponent which is a multiple of 3. This can leave up to 3 digits to the left of the decimal place and may require the addition of either one or two trailing zeros.</source>
          <target state="translated">工程符号的指数是3的倍数,这可能会在小数点左边留下3个数字,并且可能需要添加一个或两个尾数零。</target>
        </trans-unit>
        <trans-unit id="649df08a448ee3fa90f3746baaf6b0907df42c91" translate="yes" xml:space="preserve">
          <source>English</source>
          <target state="translated">English</target>
        </trans-unit>
        <trans-unit id="dcb1a009593a59322d64d1a3b6206a794460cc47" translate="yes" xml:space="preserve">
          <source>Enqueues the record on the queue using &lt;code&gt;put_nowait()&lt;/code&gt;; you may want to override this if you want to use blocking behaviour, or a timeout, or a customized queue implementation.</source>
          <target state="translated">使用 &lt;code&gt;put_nowait()&lt;/code&gt; 将记录排队入队；如果要使用阻止行为，超时或自定义队列实现，则可能需要覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="2888af4186691fc661359ab6d5971e729720db66" translate="yes" xml:space="preserve">
          <source>Enqueues the result of preparing the LogRecord. Should an exception occur (e.g. because a bounded queue has filled up), the &lt;a href=&quot;logging#logging.Handler.handleError&quot;&gt;&lt;code&gt;handleError()&lt;/code&gt;&lt;/a&gt; method is called to handle the error. This can result in the record silently being dropped (if &lt;code&gt;logging.raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;) or a message printed to &lt;code&gt;sys.stderr&lt;/code&gt; (if &lt;code&gt;logging.raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">使准备LogRecord的结果入队。如果发生异常（例如，由于队列已满），则将&lt;a href=&quot;logging#logging.Handler.handleError&quot;&gt; &lt;code&gt;handleError()&lt;/code&gt; &lt;/a&gt;方法来处理错误。这可能导致记录被静默删除（如果 &lt;code&gt;logging.raiseExceptions&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ）或打印到 &lt;code&gt;sys.stderr&lt;/code&gt; 的消息（如果 &lt;code&gt;logging.raiseExceptions&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa2754429737b3533e1ef0357b5a96fb4a6836c9" translate="yes" xml:space="preserve">
          <source>Enquiry, goes with &lt;code&gt;ACK&lt;/code&gt; flow control</source>
          <target state="translated">查询，与 &lt;code&gt;ACK&lt;/code&gt; 流控制一起使用</target>
        </trans-unit>
        <trans-unit id="ae5b77717b5f7a8d678dfc4e7f6ca1d4b33f96da" translate="yes" xml:space="preserve">
          <source>Ensure all logging output has been flushed. This version does nothing and is intended to be implemented by subclasses.</source>
          <target state="translated">确保所有的日志输出已经被刷新。这个版本什么都不做,打算由子类来实现。</target>
        </trans-unit>
        <trans-unit id="97cf15e5a9cea6dea99ae04c2ca52a01855adc4b" translate="yes" xml:space="preserve">
          <source>Ensure that &lt;em&gt;item&lt;/em&gt; is visible.</source>
          <target state="translated">确保该&lt;em&gt;项目&lt;/em&gt;可见。</target>
        </trans-unit>
        <trans-unit id="9aa26e76cdc98319b44465edafcf37d57d6abbaa" translate="yes" xml:space="preserve">
          <source>Ensure that all arguments to &lt;code&gt;Process.__init__()&lt;/code&gt; are picklable. Also, if you subclass &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; then make sure that instances will be picklable when the &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt;&lt;code&gt;Process.start&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">确保 &lt;code&gt;Process.__init__()&lt;/code&gt; 所有参数都是可挑剔的。另外，如果您将&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;子类化，则请确保在调用&lt;a href=&quot;#multiprocessing.Process.start&quot;&gt; &lt;code&gt;Process.start&lt;/code&gt; &lt;/a&gt;方法时实例是可腌制的。</target>
        </trans-unit>
        <trans-unit id="b3c36c2f4b34cceda516e9a8a5706327c94c9ce7" translate="yes" xml:space="preserve">
          <source>Ensure that the arguments to the methods of proxies are picklable.</source>
          <target state="translated">确保代理方法的参数是可挑选的。</target>
        </trans-unit>
        <trans-unit id="762ec42796d5195f94b6f19b0a871c17688f7448" translate="yes" xml:space="preserve">
          <source>Ensures that enough disk space is allocated for the file specified by &lt;em&gt;fd&lt;/em&gt; starting from &lt;em&gt;offset&lt;/em&gt; and continuing for &lt;em&gt;len&lt;/em&gt; bytes.</source>
          <target state="translated">确保为&lt;em&gt;fd&lt;/em&gt;指定的文件分配了足够的磁盘空间，该空间从&lt;em&gt;offset&lt;/em&gt;开始并持续&lt;em&gt;len&lt;/em&gt;个字节。</target>
        </trans-unit>
        <trans-unit id="b7eb63354554772150750f9cedad21f70a5cb44a" translate="yes" xml:space="preserve">
          <source>Ensuring unique enumeration values</source>
          <target state="translated">确保唯一的枚举值</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="8fa2a05b9d6104dc8feb95f4c534efae63c8fab5" translate="yes" xml:space="preserve">
          <source>Enter &lt;em&gt;string&lt;/em&gt; in the table of &amp;ldquo;interned&amp;rdquo; strings and return the interned string &amp;ndash; which is &lt;em&gt;string&lt;/em&gt; itself or a copy. Interning strings is useful to gain a little performance on dictionary lookup &amp;ndash; if the keys in a dictionary are interned, and the lookup key is interned, the key comparisons (after hashing) can be done by a pointer compare instead of a string compare. Normally, the names used in Python programs are automatically interned, and the dictionaries used to hold module, class or instance attributes have interned keys.</source>
          <target state="translated">在&amp;ldquo; interned&amp;rdquo;字符串表中输入&lt;em&gt;string&lt;/em&gt;并返回被中断的字符串&amp;ndash;它是&lt;em&gt;字符串&lt;/em&gt;本身或副本。插入字符串对于提高字典查找的性能很有用-如果字典中的键被插入并且查找键被插入，则键比较（散列后）可以通过指针比较而不是字符串比较来完成。通常，Python程序中使用的名称会被自动插入，而用于保存模块，类或实例属性的字典则具有插入键。</target>
        </trans-unit>
        <trans-unit id="b663cf4347cd84e7bc69f1115cc575cfd52e6845" translate="yes" xml:space="preserve">
          <source>Enter a polling loop that terminates after count passes or all open channels have been closed. All arguments are optional. The &lt;em&gt;count&lt;/em&gt; parameter defaults to &lt;code&gt;None&lt;/code&gt;, resulting in the loop terminating only when all channels have been closed. The &lt;em&gt;timeout&lt;/em&gt; argument sets the timeout parameter for the appropriate &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; call, measured in seconds; the default is 30 seconds. The &lt;em&gt;use_poll&lt;/em&gt; parameter, if true, indicates that &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; (the default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">输入一个轮询循环，该循环在计数通过或关闭所有打开的通道后终止。所有参数都是可选的。的&lt;em&gt;计数&lt;/em&gt;参数默认为 &lt;code&gt;None&lt;/code&gt; ，导致循环当所有的频道都被关闭仅终止。的&lt;em&gt;超时&lt;/em&gt;参数设置为适当的超时参数&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;调用，以秒为单位;默认值为30秒。该&lt;em&gt;use_poll&lt;/em&gt;参数，如果属实，表明&lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;应优先使用&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;（默认为 &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bf6ee635905c79fc10776a891aacc8f8db536c1a" translate="yes" xml:space="preserve">
          <source>Enter a recursive debugger that steps through the code argument (which is an arbitrary expression or statement to be executed in the current environment).</source>
          <target state="translated">输入一个递归调试器,通过代码参数(是当前环境中要执行的任意表达式或语句)进行分步调试。</target>
        </trans-unit>
        <trans-unit id="06cda8081b0c699a9ae8156111f134ffc77e8bf8" translate="yes" xml:space="preserve">
          <source>Enter cbreak mode. In cbreak mode (sometimes called &amp;ldquo;rare&amp;rdquo; mode) normal tty line buffering is turned off and characters are available to be read one by one. However, unlike raw mode, special characters (interrupt, quit, suspend, and flow control) retain their effects on the tty driver and calling program. Calling first &lt;a href=&quot;#curses.raw&quot;&gt;&lt;code&gt;raw()&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;#curses.cbreak&quot;&gt;&lt;code&gt;cbreak()&lt;/code&gt;&lt;/a&gt; leaves the terminal in cbreak mode.</source>
          <target state="translated">进入cbreak模式。在cbreak模式下（有时称为&amp;ldquo;稀有&amp;rdquo;模式），常规tty行缓冲被关闭，并且字符可被一一读取。但是，与原始模式不同，特殊字符（中断，退出，挂起和流控制）在tty驱动程序和调用程序上保留其效果。先调用&lt;a href=&quot;#curses.raw&quot;&gt; &lt;code&gt;raw()&lt;/code&gt; &lt;/a&gt;然后再调用&lt;a href=&quot;#curses.cbreak&quot;&gt; &lt;code&gt;cbreak()&lt;/code&gt; &lt;/a&gt;可使终端处于cbreak模式。</target>
        </trans-unit>
        <trans-unit id="f8cea7d09a31360054e9f869e3c5d795b0458192" translate="yes" xml:space="preserve">
          <source>Enter converters.</source>
          <target state="translated">进入转换器。</target>
        </trans-unit>
        <trans-unit id="602385ef4a72988bf782bf33f06a8f646ad69432" translate="yes" xml:space="preserve">
          <source>Enter echo mode. In echo mode, each character input is echoed to the screen as it is entered.</source>
          <target state="translated">进入回声模式。在回声模式下,输入的每个字符都会在输入时回声到屏幕上。</target>
        </trans-unit>
        <trans-unit id="429905251e2a3e543f489797d59b5a24f9ef97db" translate="yes" xml:space="preserve">
          <source>Enter newline mode. This mode translates the return key into newline on input, and translates newline into return and line-feed on output. Newline mode is initially on.</source>
          <target state="translated">进入换行模式。该模式在输入时将回车键转化为换行,在输出时将换行转化为回车和换行。新线模式最初是开启的。</target>
        </trans-unit>
        <trans-unit id="31b90800a714a8a3e0ab43e272c0b938df50c7db" translate="yes" xml:space="preserve">
          <source>Enter or send (unreliable)</source>
          <target state="translated">输入或发送(不可靠)</target>
        </trans-unit>
        <trans-unit id="7b32a1a4ed5b14160b995b3b5225adbecd8b0343" translate="yes" xml:space="preserve">
          <source>Enter post-mortem debugging of the given &lt;em&gt;traceback&lt;/em&gt; object. If no &lt;em&gt;traceback&lt;/em&gt; is given, it uses the one of the exception that is currently being handled (an exception must be being handled if the default is to be used).</source>
          <target state="translated">输入给定&lt;em&gt;回溯&lt;/em&gt;对象的事后调试。如果没有给出&lt;em&gt;回溯&lt;/em&gt;，它将使用当前正在处理的异常之一（如果要使用默认值，则必须处理异常）。</target>
        </trans-unit>
        <trans-unit id="f097b04746b05b7586d964276b16901fd65c113d" translate="yes" xml:space="preserve">
          <source>Enter post-mortem debugging of the traceback found in &lt;a href=&quot;sys#sys.last_traceback&quot;&gt;&lt;code&gt;sys.last_traceback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输入在&lt;a href=&quot;sys#sys.last_traceback&quot;&gt; &lt;code&gt;sys.last_traceback&lt;/code&gt; 中&lt;/a&gt;找到的追溯的事后调试。</target>
        </trans-unit>
        <trans-unit id="7ccc9469aa0d39ac8b4ae0c50a90919c84871d0d" translate="yes" xml:space="preserve">
          <source>Enter raw mode. In raw mode, normal line buffering and processing of interrupt, quit, suspend, and flow control keys are turned off; characters are presented to curses input functions one by one.</source>
          <target state="translated">进入原始模式。在原始模式下,关闭正常的行缓冲和中断、退出、暂停、流控键的处理,字符将逐一呈现给诅咒输入功能。</target>
        </trans-unit>
        <trans-unit id="a0dbd0b641f4836b322a1ad352c0e6127776e34d" translate="yes" xml:space="preserve">
          <source>Enter the debugger at the calling stack frame. This is useful to hard-code a breakpoint at a given point in a program, even if the code is not otherwise being debugged (e.g. when an assertion fails). If given, &lt;em&gt;header&lt;/em&gt; is printed to the console just before debugging begins.</source>
          <target state="translated">在调用堆栈帧处输入调试器。即使未对代码进行调试（例如，断言失败时），也可以在程序中给定点硬编码断点。如果给定，则会在调试开始之前将&lt;em&gt;标头&lt;/em&gt;打印到控制台。</target>
        </trans-unit>
        <trans-unit id="c2390d15b9f37ee098a11e644788934b4602939e" translate="yes" xml:space="preserve">
          <source>Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the &lt;code&gt;as&lt;/code&gt; clause of &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements using this context manager.</source>
          <target state="translated">输入运行时上下文，然后返回该对象或与运行时上下文相关的另一个对象。使用此上下文管理器，此方法返回的值绑定到&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的 &lt;code&gt;as&lt;/code&gt; 子句中的标识符。</target>
        </trans-unit>
        <trans-unit id="fb2047c3bba3ba8a6dc620b750759389818e8f2f" translate="yes" xml:space="preserve">
          <source>Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the &lt;code&gt;as&lt;/code&gt; clause of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements using this context manager.</source>
          <target state="translated">输入运行时上下文，然后返回该对象或与运行时上下文相关的另一个对象。使用此上下文管理器，此方法返回的值绑定到&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的 &lt;code&gt;as&lt;/code&gt; 子句中的标识符。</target>
        </trans-unit>
        <trans-unit id="8a3ea35903eb24e2439f6a0e520d488eeda6c731" translate="yes" xml:space="preserve">
          <source>Entering a blank line repeats the last command entered. Exception: if the last command was a &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; command, the next 11 lines are listed.</source>
          <target state="translated">输入空白行将重复最后输入的命令。例外：如果最后一个命令是&lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;命令，则会列出接下来的11行。</target>
        </trans-unit>
        <trans-unit id="611a51f214fed567158739312e45abb78fbe33de" translate="yes" xml:space="preserve">
          <source>Enters a new context manager and adds its &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack. The return value is the result of the context manager&amp;rsquo;s own &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">输入一个新的上下文管理器，并将其&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法添加到回调堆栈中。返回值是上下文管理器自己的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;方法的结果。</target>
        </trans-unit>
        <trans-unit id="c57dad185f83c1fe4fcb59dfcf4791150f8db483" translate="yes" xml:space="preserve">
          <source>Enters a new context manager and adds its &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack. The return value is the result of the context manager&amp;rsquo;s own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">输入一个新的上下文管理器，并将其&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法添加到回调堆栈中。返回值是上下文管理器自己的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;方法的结果。</target>
        </trans-unit>
        <trans-unit id="bd5d52ebfda30bf0319952ff2a299cea17d4e30d" translate="yes" xml:space="preserve">
          <source>Entity declarations can contain more than just text for replacement. They can also point to external resources or local files. The XML parser accesses the resource and embeds the content into the XML document.</source>
          <target state="translated">实体声明不仅可以包含用于替换的文本,还可以指向外部资源或本地文件。它们还可以指向外部资源或本地文件。XML解析器访问资源并将内容嵌入到XML文档中。</target>
        </trans-unit>
        <trans-unit id="2dbd6d3f83290ba9348b436b12d8b7daf2635aa9" translate="yes" xml:space="preserve">
          <source>EntityResolver Objects</source>
          <target state="translated">EntityResolver对象</target>
        </trans-unit>
        <trans-unit id="953bd861b8d839338c4a580a2b0b5c9b37af0e5f" translate="yes" xml:space="preserve">
          <source>Entries are typically tuples of the form &lt;code&gt;(priority_number, data)&lt;/code&gt;.</source>
          <target state="translated">条目通常是 &lt;code&gt;(priority_number, data)&lt;/code&gt; 形式的元组。</target>
        </trans-unit>
        <trans-unit id="087b9e0aeb254cf0e900ba213fa1da3a8e9d24f1" translate="yes" xml:space="preserve">
          <source>Entries which cannot be determined are set to &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">不能确定项设置为 &lt;code&gt;''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53705f2e3b68f3633d75ceaf05413bb3ba654a56" translate="yes" xml:space="preserve">
          <source>Entries which cannot be determined are set to &lt;code&gt;''&lt;/code&gt;. All tuple entries are strings.</source>
          <target state="translated">不能确定项设置为 &lt;code&gt;''&lt;/code&gt; 。所有元组条目都是字符串。</target>
        </trans-unit>
        <trans-unit id="18f73528d44427047489bb703aa3ca755342dbbb" translate="yes" xml:space="preserve">
          <source>Entry points</source>
          <target state="translated">入境点</target>
        </trans-unit>
        <trans-unit id="d4d3e8a2c230f83aa0e684d966714d49817aea3f" translate="yes" xml:space="preserve">
          <source>Entry widget indexes (index, view index, etc.)</source>
          <target state="translated">条目小部件索引(索引、视图索引等)。</target>
        </trans-unit>
        <trans-unit id="ef8f90b6c36e96a8f3138956ecec46b1d2f89b29" translate="yes" xml:space="preserve">
          <source>Entry widgets have options that refer to character positions in the text being displayed. You can use these &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; functions to access these special points in text widgets:</source>
          <target state="translated">输入窗口小部件具有用于引用所显示文本中字符位置的选项。您可以使用以下&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;函数来访问文本小部件中的这些特殊点：</target>
        </trans-unit>
        <trans-unit id="35748b339b75707aa86eccdc826e9c484f210273" translate="yes" xml:space="preserve">
          <source>Enum Classes</source>
          <target state="translated">枚举类</target>
        </trans-unit>
        <trans-unit id="bd214812f74614a175b9a557097bf69a0bea623e" translate="yes" xml:space="preserve">
          <source>Enum Members (aka instances)</source>
          <target state="translated">枚举成员(又称实例)</target>
        </trans-unit>
        <trans-unit id="5b06633b47e3b3d368410e3fcb03bd07f5b3d58c" translate="yes" xml:space="preserve">
          <source>Enum Name</source>
          <target state="translated">枚举名称</target>
        </trans-unit>
        <trans-unit id="74cee2f76b2f08d1d822a0ac94ba9d489a4bdb9e" translate="yes" xml:space="preserve">
          <source>Enum class decorator that ensures only one name is bound to any one value.</source>
          <target state="translated">Enum类装饰器,确保只有一个名字绑定到任何一个值。</target>
        </trans-unit>
        <trans-unit id="4a5bc6fdb389a921b77691f1ae62efd63242c0e2" translate="yes" xml:space="preserve">
          <source>Enum member values</source>
          <target state="translated">枚举成员值</target>
        </trans-unit>
        <trans-unit id="3d0a2cd7fcbb6a833c1876f5c6fae7bafe7f2441" translate="yes" xml:space="preserve">
          <source>Enum members also have a property that contains just their item name:</source>
          <target state="translated">枚举成员也有一个只包含其项目名称的属性。</target>
        </trans-unit>
        <trans-unit id="ac8abe6035a83a26f86fc58e8f94b33a048f67de" translate="yes" xml:space="preserve">
          <source>Enumerate the children of the current directory.</source>
          <target state="translated">枚举当前目录的子目录。</target>
        </trans-unit>
        <trans-unit id="d908e41face2db6aa2e63d82a5d94ab42f2201db" translate="yes" xml:space="preserve">
          <source>Enumerates subkeys of an open registry key, returning a string.</source>
          <target state="translated">枚举一个打开的注册表键的子键,返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="672127fd3527f8fc48242253b35034acf2091efe" translate="yes" xml:space="preserve">
          <source>Enumerates values of an open registry key, returning a tuple.</source>
          <target state="translated">枚举打开的注册表键值,返回一个元组。</target>
        </trans-unit>
        <trans-unit id="3fb14da66a56415bff0ad761c36d594d42bedbae" translate="yes" xml:space="preserve">
          <source>Enumeration members are compared by identity:</source>
          <target state="translated">枚举成员按身份进行比较。</target>
        </trans-unit>
        <trans-unit id="1178a57aa7859712c54c6114945255e34205b1e4" translate="yes" xml:space="preserve">
          <source>Enumeration members are hashable, so they can be used in dictionaries and sets:</source>
          <target state="translated">枚举成员是可哈希的,所以它们可以在字典和集合中使用。</target>
        </trans-unit>
        <trans-unit id="e472257922d05bccf3578137ac9fc6b17ee1a5f2" translate="yes" xml:space="preserve">
          <source>Enumeration members have human readable string representations:</source>
          <target state="translated">枚举成员有人类可读的字符串表示。</target>
        </trans-unit>
        <trans-unit id="dd0a466f4da4a792ee601c1958443d6ace0821a6" translate="yes" xml:space="preserve">
          <source>Enumerations are Python classes, and can have methods and special methods as usual. If we have this enumeration:</source>
          <target state="translated">枚举是Python的类,一样平常可以有方法和特别方法。如果我们有这个枚举。</target>
        </trans-unit>
        <trans-unit id="40f561f88b2257b63cb2fb13e1fe24beff58df37" translate="yes" xml:space="preserve">
          <source>Enumerations are created using the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax, which makes them easy to read and write. An alternative creation method is described in &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;. To define an enumeration, subclass &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">枚举是使用&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;语法创建的，这使得它们易于读写。在&lt;a href=&quot;#functional-api&quot;&gt;功能API中&lt;/a&gt;介绍了一种替代的创建方法。要定义枚举，请子类&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;如下：</target>
        </trans-unit>
        <trans-unit id="b249d18934543185a909fe2565d3ae6f3298031e" translate="yes" xml:space="preserve">
          <source>Enumerations are created using the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax, which makes them easy to read and write. An alternative creation method is described in &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;. To define an enumeration, subclass &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">枚举使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;语法创建，这使得它们易于读取和写入。在&lt;a href=&quot;#functional-api&quot;&gt;功能性API中&lt;/a&gt;介绍了一种替代的创建方法。要定义枚举，请子类&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="916080f51e0a1e47a17a417292d676be5cdcc6c5" translate="yes" xml:space="preserve">
          <source>Enumerations can be pickled and unpickled:</source>
          <target state="translated">枚举可以腌制,也可以不腌制。</target>
        </trans-unit>
        <trans-unit id="afa830c866023673c4f9348a0f95ab021df8ef05" translate="yes" xml:space="preserve">
          <source>Enumerations support iteration, in definition order:</source>
          <target state="translated">枚举支持迭代,按定义顺序。</target>
        </trans-unit>
        <trans-unit id="922ed09b766daccfca53d5df49778614ae54ae66" translate="yes" xml:space="preserve">
          <source>Enums have a custom metaclass that affects many aspects of both derived Enum classes and their instances (members).</source>
          <target state="translated">Enums有一个自定义的元类,它影响到派生Enum类和它们的实例(成员)的许多方面。</target>
        </trans-unit>
        <trans-unit id="f595aaad578ca1ec1beb6f14e376368516b3b030" translate="yes" xml:space="preserve">
          <source>Environment configuration</source>
          <target state="translated">环境配置</target>
        </trans-unit>
        <trans-unit id="52290975d27191c5718cc3c19935ef179fd55b88" translate="yes" xml:space="preserve">
          <source>Environment example:</source>
          <target state="translated">环境实例:</target>
        </trans-unit>
        <trans-unit id="7acfb9859940856ef732a50aabb8e6e5a634d65f" translate="yes" xml:space="preserve">
          <source>EnvironmentError</source>
          <target state="translated">EnvironmentError</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="0ea9631890f3c3ddadbb49be5feb1a38c4f675ab" translate="yes" xml:space="preserve">
          <source>Equality comparisons are defined though:</source>
          <target state="translated">虽然定义了平等比较。</target>
        </trans-unit>
        <trans-unit id="bd00d2fa4ce7f9b3799e9324d37d66327650eef7" translate="yes" xml:space="preserve">
          <source>Equality tests between &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects are order-sensitive and are implemented as &lt;code&gt;list(od1.items())==list(od2.items())&lt;/code&gt;. Equality tests between &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects and other &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; objects are order-insensitive like regular dictionaries. This allows &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects to be substituted anywhere a regular dictionary is used.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;对象之间的相等性测试对顺序敏感，并实现为 &lt;code&gt;list(od1.items())==list(od2.items())&lt;/code&gt; 。与常规字典一样，&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;对象与其他&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;对象之间的相等性测试对顺序不敏感。这样就可以在使用常规词典的任何地方替换&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="61ce4cfe7855e867407978f9c2806aa92588f0fa" translate="yes" xml:space="preserve">
          <source>Equivalent to 0 (ie. all of the above Netscape domain strictness flags switched off).</source>
          <target state="translated">相当于0(即上述所有网景域严格性标志都关闭)。</target>
        </trans-unit>
        <trans-unit id="3e1a831f3885fcf01724787c32f8ff7381b26db1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.EmailMessage.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;bytes(msg)&lt;/code&gt; to produce a bytes object containing the serialized message.</source>
          <target state="translated">等效于&lt;a href=&quot;#email.message.EmailMessage.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt;。允许 &lt;code&gt;bytes(msg)&lt;/code&gt; 生成包含序列化消息的bytes对象。</target>
        </trans-unit>
        <trans-unit id="d9cce4bbb04162f7733d5750ecd4d39c58ff074b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;bytes(msg)&lt;/code&gt; to produce a bytes object containing the formatted message.</source>
          <target state="translated">等效于&lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt;。允许 &lt;code&gt;bytes(msg)&lt;/code&gt; 生成包含格式化消息的bytes对象。</target>
        </trans-unit>
        <trans-unit id="59158a5ff65138652445ed251a27dc21a6e9150e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.Message.as_string&quot;&gt;&lt;code&gt;as_string()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;str(msg)&lt;/code&gt; to produce a string containing the formatted message.</source>
          <target state="translated">等效于&lt;a href=&quot;#email.message.Message.as_string&quot;&gt; &lt;code&gt;as_string()&lt;/code&gt; &lt;/a&gt;。允许 &lt;code&gt;str(msg)&lt;/code&gt; 生成包含格式化消息的字符串。</target>
        </trans-unit>
        <trans-unit id="8f56c313d1897cc5bd915d14d383918de3b15796" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#gettext.GNUTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.GNUTranslations.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but the translation is returned as a byte string encoded in the preferred system encoding if no encoding was explicitly set with &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt;&lt;code&gt;set_output_charset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">等效于&lt;a href=&quot;#gettext.GNUTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#gettext.GNUTranslations.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;，但是如果未使用&lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt; &lt;code&gt;set_output_charset()&lt;/code&gt; &lt;/a&gt;显式设置任何编码，则转换以首选系统编码中的字节字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="b929dcdf93e833942100bcfd2521eb537f4575c4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but the translation is returned as a byte string encoded in the preferred system encoding if no encoding was explicitly set with &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt;&lt;code&gt;set_output_charset()&lt;/code&gt;&lt;/a&gt;. Overridden in derived classes.</source>
          <target state="translated">等效于&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;，但是如果未使用&lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt; &lt;code&gt;set_output_charset()&lt;/code&gt; &lt;/a&gt;显式设置任何编码，则转换以首选系统编码中的字节字符串形式返回。在派生类中重写。</target>
        </trans-unit>
        <trans-unit id="02563697a0fa57e5ce1168a5733d29d5e6f44a1a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#winreg.KEY_READ&quot;&gt;&lt;code&gt;KEY_READ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">等效于&lt;a href=&quot;#winreg.KEY_READ&quot;&gt; &lt;code&gt;KEY_READ&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69dff8b0d9537ee5a976ee7fb9f22df6af014657" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;'grouping'&lt;/code&gt;, used for monetary values.</source>
          <target state="translated">等同于 &lt;code&gt;'grouping'&lt;/code&gt; ，用于货币值。</target>
        </trans-unit>
        <trans-unit id="6fd5ba978072c7d2a6ca1194f41377f2f6c02509" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9577878c711c65c19c4d1a6b45fc26fa77f1b8c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;EPOLLIN&lt;/code&gt;</source>
          <target state="translated">相当于 &lt;code&gt;EPOLLIN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2443801768eb95d9756d03d866b00db3da79813a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;EPOLLOUT&lt;/code&gt;</source>
          <target state="translated">等效于 &lt;code&gt;EPOLLOUT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c75de4891c94ac80ca2797e5676efa9d38daabd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;as_string(policy=self.policy.clone(utf8=True))&lt;/code&gt;. Allows &lt;code&gt;str(msg)&lt;/code&gt; to produce a string containing the serialized message in a readable format.</source>
          <target state="translated">等效于 &lt;code&gt;as_string(policy=self.policy.clone(utf8=True))&lt;/code&gt; 。允许 &lt;code&gt;str(msg)&lt;/code&gt; 产生一个包含可读格式的序列化消息的字符串。</target>
        </trans-unit>
        <trans-unit id="498f574627ce47a8c97257efb3e593bf179bd84b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;get(False)&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;get(False)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="882d9b2b409ad6b7450f6c950c6fa3b50fddd662" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;not key in d&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;not key in d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1411dd558ed3d5c3b0e3e1943566fb197cdb665f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;pencolor(colorstring1)&lt;/code&gt; and &lt;code&gt;fillcolor(colorstring2)&lt;/code&gt; and analogously if the other input format is used.</source>
          <target state="translated">等效于 &lt;code&gt;pencolor(colorstring1)&lt;/code&gt; 和 &lt;code&gt;fillcolor(colorstring2)&lt;/code&gt; ，如果使用其他输入格式，则类似。</target>
        </trans-unit>
        <trans-unit id="d3e0663e7f56bca65438c71c5ecf53a3ac03e471" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(item)&lt;/code&gt;, provided for compatibility with &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt;&lt;code&gt;Queue.put_nowait()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;put(item)&lt;/code&gt; ，为与&lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt; &lt;code&gt;Queue.put_nowait()&lt;/code&gt; &lt;/a&gt;兼容而提供。</target>
        </trans-unit>
        <trans-unit id="4cf151630145678e1c1abceeac6eb7289eb99e6b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(item, False)&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;put(item, False)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba2c64df04b46764b2b3b68b2579acfafb0a714f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(obj, False)&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;put(obj, False)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa7377fb4a7fcc696f633b01dc35eb725c5ff01c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tputs(str, 1, putchar)&lt;/code&gt;; emit the value of a specified terminfo capability for the current terminal. Note that the output of &lt;a href=&quot;#curses.putp&quot;&gt;&lt;code&gt;putp()&lt;/code&gt;&lt;/a&gt; always goes to standard output.</source>
          <target state="translated">相当于 &lt;code&gt;tputs(str, 1, putchar)&lt;/code&gt; ; 发出当前终端的指定terminfo功能的值。请注意，&lt;a href=&quot;#curses.putp&quot;&gt; &lt;code&gt;putp()&lt;/code&gt; &lt;/a&gt;的输出始终转到标准输出。</target>
        </trans-unit>
        <trans-unit id="1e63fcd5fb787d4a3c6b9d9ed88dfe3dca78e6d4" translate="yes" xml:space="preserve">
          <source>Equivalent to the corresponding functions without the &lt;code&gt;l&lt;/code&gt; prefix (&lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.dgettext&quot;&gt;&lt;code&gt;dgettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.dngettext&quot;&gt;&lt;code&gt;dngettext()&lt;/code&gt;&lt;/a&gt;), but the translation is returned as a byte string encoded in the preferred system encoding if no other encoding was explicitly set with &lt;a href=&quot;#gettext.bind_textdomain_codeset&quot;&gt;&lt;code&gt;bind_textdomain_codeset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">等效于不带 &lt;code&gt;l&lt;/code&gt; 前缀的相应函数（&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#gettext.dgettext&quot;&gt; &lt;code&gt;dgettext()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#gettext.dngettext&quot;&gt; &lt;code&gt;dngettext()&lt;/code&gt; &lt;/a&gt;），但是如果没有其他显式设置，则转换将以首选系统编码方式编码的字节字符串形式返回。&lt;a href=&quot;#gettext.bind_textdomain_codeset&quot;&gt; &lt;code&gt;bind_textdomain_codeset()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="315728e0990367d75d40e64feff3d637283509e1" translate="yes" xml:space="preserve">
          <source>Erase from cursor to the end of the line.</source>
          <target state="translated">从光标到行尾擦除。</target>
        </trans-unit>
        <trans-unit id="4619259d1590500b34cdd053102b2bb5cb08a27d" translate="yes" xml:space="preserve">
          <source>Erase from cursor to the end of the window: all lines below the cursor are deleted, and then the equivalent of &lt;a href=&quot;#curses.window.clrtoeol&quot;&gt;&lt;code&gt;clrtoeol()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">从游标擦除到窗口的结尾：删除游标下面的所有行，然后执行&lt;a href=&quot;#curses.window.clrtoeol&quot;&gt; &lt;code&gt;clrtoeol()&lt;/code&gt; &lt;/a&gt;的等效操作。</target>
        </trans-unit>
        <trans-unit id="d3e856491e1bc6fd30d79529b1024eb08ed1e4e9" translate="yes" xml:space="preserve">
          <source>Error Handlers</source>
          <target state="translated">错误处理程序</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="4c6986de1c86cf9ac917927e4adfec8f6bfe5614" translate="yes" xml:space="preserve">
          <source>Error Handling API</source>
          <target state="translated">错误处理API</target>
        </trans-unit>
        <trans-unit id="9e8a18bdf1224aba7c5640dca2752cb0f27bda94" translate="yes" xml:space="preserve">
          <source>Error condition happened on the assoc. fd</source>
          <target state="translated">同事的fd发生了错误状况。</target>
        </trans-unit>
        <trans-unit id="c06a4667ab2007b00a3679ad01f2c2deae43bffe" translate="yes" xml:space="preserve">
          <source>Error condition of some sort</source>
          <target state="translated">某种错误条件</target>
        </trans-unit>
        <trans-unit id="e4a425fe29ba88e41be9834c2976e81cdd62ab0e" translate="yes" xml:space="preserve">
          <source>Error handling is done in the same way as defined for the stream readers and writers.</source>
          <target state="translated">错误处理的方式与流读取器和写入器的定义相同。</target>
        </trans-unit>
        <trans-unit id="0ce0e9091d4c585a750b4f74ffd57e53b22799a3" translate="yes" xml:space="preserve">
          <source>Error occurred during establishment of a connection with the server.</source>
          <target state="translated">与服务器建立连接时发生错误。</target>
        </trans-unit>
        <trans-unit id="2aad66e5d2aeba2dd907b4c02fdd7536e059af24" translate="yes" xml:space="preserve">
          <source>Error raised when an unpicklable object is encountered by &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt;. It inherits &lt;a href=&quot;#pickle.PickleError&quot;&gt;&lt;code&gt;PickleError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;遇到无法拾取的对象时引发错误。它继承了&lt;a href=&quot;#pickle.PickleError&quot;&gt; &lt;code&gt;PickleError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="700cc5c8bc3311f1f7de53ead5e890a4d6df4103" translate="yes" xml:space="preserve">
          <source>Error raised when there is a problem unpickling an object, such as a data corruption or a security violation. It inherits &lt;a href=&quot;#pickle.PickleError&quot;&gt;&lt;code&gt;PickleError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解开对象时出现问题，例如数据损坏或安全冲突，将引发错误。它继承了&lt;a href=&quot;#pickle.PickleError&quot;&gt; &lt;code&gt;PickleError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bd7165001d6a8de56949614e8427bb6f024f601" translate="yes" xml:space="preserve">
          <source>ErrorHandler Objects</source>
          <target state="translated">错误处理对象</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9777fd6046fd2b79471201c70d64c950708d6028" translate="yes" xml:space="preserve">
          <source>Errors are reported as exceptions; the usual exceptions are given for type errors, while errors reported by the system calls raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">错误被报告为异常；对于类型错误，通常会给出异常，而由系统调用报告的错误会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4cfe1f435f06beaae8e7d7c6d43e5dddbe640bb" translate="yes" xml:space="preserve">
          <source>Escape</source>
          <target state="translated">Escape</target>
        </trans-unit>
        <trans-unit id="a3ca63fcb126584c7cbc69cb44097bc0a98431f5" translate="yes" xml:space="preserve">
          <source>Escape &lt;code&gt;'&amp;amp;'&lt;/code&gt;, &lt;code&gt;'&amp;lt;'&lt;/code&gt;, and &lt;code&gt;'&amp;gt;'&lt;/code&gt; in a string of data.</source>
          <target state="translated">在数据字符串中转义 &lt;code&gt;'&amp;amp;'&lt;/code&gt; ， &lt;code&gt;'&amp;lt;'&lt;/code&gt; 和 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87b0bd467ee85b7f8847d9eb3649852161ccbc0c" translate="yes" xml:space="preserve">
          <source>Escape all special characters (&lt;code&gt;'?'&lt;/code&gt;, &lt;code&gt;'*'&lt;/code&gt; and &lt;code&gt;'['&lt;/code&gt;). This is useful if you want to match an arbitrary literal string that may have special characters in it. Special characters in drive/UNC sharepoints are not escaped, e.g. on Windows &lt;code&gt;escape('//?/c:/Quo vadis?.txt')&lt;/code&gt; returns &lt;code&gt;'//?/c:/Quo vadis[?].txt'&lt;/code&gt;.</source>
          <target state="translated">转义所有特殊字符（ &lt;code&gt;'?'&lt;/code&gt; ， &lt;code&gt;'*'&lt;/code&gt; 和 &lt;code&gt;'['&lt;/code&gt; ）。如果要匹配其中可能包含特殊字符的任意文字字符串，这将很有用。驱动器/ UNC共享点中的特殊字符不会转义，例如，在Windows &lt;code&gt;escape('//?/c:/Quo vadis?.txt')&lt;/code&gt; 返回 &lt;code&gt;'//?/c:/Quo vadis[?].txt'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="645fe693ac8b623ab59ba5a913fa56e06ea5cf34" translate="yes" xml:space="preserve">
          <source>Escape characters are not recognized;</source>
          <target state="translated">不识别转义字符。</target>
        </trans-unit>
        <trans-unit id="1c8ea8bc4f65d5bfd8546e074c6c3ed1833a24b0" translate="yes" xml:space="preserve">
          <source>Escape special characters in &lt;em&gt;pattern&lt;/em&gt;. This is useful if you want to match an arbitrary literal string that may have regular expression metacharacters in it. For example:</source>
          <target state="translated">在&lt;em&gt;模式中&lt;/em&gt;转义特殊字符。如果您要匹配其中可能包含正则表达式元字符的任意文字字符串，这将很有用。例如：</target>
        </trans-unit>
        <trans-unit id="1d0a36d2b4f6f39c281a11428ee518d9f087808c" translate="yes" xml:space="preserve">
          <source>Esperanto, Maltese</source>
          <target state="translated">世界语、马耳他语</target>
        </trans-unit>
        <trans-unit id="b9603ee7bcecaa495cbf6687553a3756c705570d" translate="yes" xml:space="preserve">
          <source>Essentially, transports and protocols should only be used in libraries and frameworks and never in high-level asyncio applications.</source>
          <target state="translated">基本上,传输和协议只应该在库和框架中使用,而绝不应该在高级asyncio应用中使用。</target>
        </trans-unit>
        <trans-unit id="0946aa68f0bba7f1fbe4c3793c30db49bbee67bd" translate="yes" xml:space="preserve">
          <source>Establish a TCP connection.</source>
          <target state="translated">建立一个TCP连接。</target>
        </trans-unit>
        <trans-unit id="d2d166fb4f8060af809ab3750f0779c96f2c2772" translate="yes" xml:space="preserve">
          <source>Establish a Unix socket connection and return a pair of &lt;code&gt;(reader, writer)&lt;/code&gt;.</source>
          <target state="translated">建立一个Unix套接字连接并返回一对 &lt;code&gt;(reader, writer)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f41b06a3c2e0f7210c8c5ea4a7a815d0f61f476" translate="yes" xml:space="preserve">
          <source>Establish a Unix socket connection.</source>
          <target state="translated">建立Unix套接字连接。</target>
        </trans-unit>
        <trans-unit id="27ddc90aba864b61e63ca9fcab375d32046e5f68" translate="yes" xml:space="preserve">
          <source>Establish a network connection and return a pair of &lt;code&gt;(reader, writer)&lt;/code&gt; objects.</source>
          <target state="translated">建立网络连接并返回一对 &lt;code&gt;(reader, writer)&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b33dfb090a73f3e7fa9ec19387939863ce9a9697" translate="yes" xml:space="preserve">
          <source>Establishes a connection to a predefined registry handle on another computer, and returns a &lt;a href=&quot;#handle-object&quot;&gt;handle object&lt;/a&gt;.</source>
          <target state="translated">建立与另一台计算机上的预定义注册表句柄的连接，并返回&lt;a href=&quot;#handle-object&quot;&gt;句柄对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46eac8641b41a554c4af978ac95022766230c363" translate="yes" xml:space="preserve">
          <source>Establishes an arbitrary timer</source>
          <target state="translated">建立一个任意的定时器</target>
        </trans-unit>
        <trans-unit id="387507d9043a48f9895cfaa2673836fe0752cb7a" translate="yes" xml:space="preserve">
          <source>Evaluate the &lt;em&gt;expression&lt;/em&gt; (given as a string or a code object) under debugger control. When &lt;a href=&quot;#pdb.runeval&quot;&gt;&lt;code&gt;runeval()&lt;/code&gt;&lt;/a&gt; returns, it returns the value of the expression. Otherwise this function is similar to &lt;a href=&quot;#pdb.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在调试器控制下评估&lt;em&gt;表达式&lt;/em&gt;（以字符串或代码对象&lt;em&gt;形式&lt;/em&gt;给出）。当&lt;a href=&quot;#pdb.runeval&quot;&gt; &lt;code&gt;runeval()&lt;/code&gt; &lt;/a&gt;返回时，它返回表达式的值。否则，此函数类似于&lt;a href=&quot;#pdb.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bbd8f1d5e5391f6492fcec6625b513a0bb874fcf" translate="yes" xml:space="preserve">
          <source>Evaluate the &lt;em&gt;expression&lt;/em&gt; in the current context and print its value.</source>
          <target state="translated">在当前上下文中评估&lt;em&gt;表达式&lt;/em&gt;并打印其值。</target>
        </trans-unit>
        <trans-unit id="2e025428974165b15278efafd9c9b0d22a029d83" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;n! / (k! * (n - k)!)&lt;/code&gt; when &lt;code&gt;k &amp;lt;= n&lt;/code&gt; and evaluates to zero when &lt;code&gt;k &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">评估为 &lt;code&gt;n! / (k! * (n - k)!)&lt;/code&gt; 当 &lt;code&gt;k &amp;lt;= n&lt;/code&gt; 时；当 &lt;code&gt;k &amp;gt; n&lt;/code&gt; 时，结果为零。</target>
        </trans-unit>
        <trans-unit id="db06d1f9400c9b6f59b6bcb16845f15ee0707af4" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;n! / (n - k)!&lt;/code&gt; when &lt;code&gt;k &amp;lt;= n&lt;/code&gt; and evaluates to zero when &lt;code&gt;k &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">评估为 &lt;code&gt;n! / (n - k)!&lt;/code&gt; 当 &lt;code&gt;k &amp;lt;= n&lt;/code&gt; 时，当 &lt;code&gt;k &amp;gt; n&lt;/code&gt; 时求值为零。</target>
        </trans-unit>
        <trans-unit id="b97d45e2e76a4e66439f778565d0ee17e1fde472" translate="yes" xml:space="preserve">
          <source>Even if two unicode strings are normalized and look the same to a human reader, if one has combining characters and the other doesn&amp;rsquo;t, they may not compare equal.</source>
          <target state="translated">即使将两个unicode字符串标准化并在人类读者看来是相同的，但如果一个字符串包含组合字符而另一个字符串没有组合，则它们可能不相等。</target>
        </trans-unit>
        <trans-unit id="c2371ef0b3d2525f10074eb1b01da734606274be" translate="yes" xml:space="preserve">
          <source>Even the higher-level file copying functions (&lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;shutil.copy()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;shutil.copy2()&lt;/code&gt;&lt;/a&gt;) cannot copy all file metadata.</source>
          <target state="translated">即使是更高级别的文件复制功能（&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;shutil.copy()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;shutil.copy2()&lt;/code&gt; &lt;/a&gt;）也无法复制所有文件元数据。</target>
        </trans-unit>
        <trans-unit id="499bbe4b0828963aced093b14a412aa05bcf8a05" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; does not declare &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; because their signatures will vary, implementations and clients should consider those methods part of the interface. Also, implementations may raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;) when operations they do not support are called.</source>
          <target state="translated">即使&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;因为它们的签名会有所不同而未声明 &lt;code&gt;read()&lt;/code&gt; 或 &lt;code&gt;write()&lt;/code&gt; ，但实现和客户端仍应将这些方法视为接口的一部分。此外，在调用不支持的操作时，实现可能会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#io.UnsupportedOperation&quot;&gt; &lt;code&gt;UnsupportedOperation&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c7263b2f6cfc43f8cba961ab3031692280b00432" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt;&lt;code&gt;FunctionTestCase&lt;/code&gt;&lt;/a&gt; can be used to quickly convert an existing test base over to a &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;-based system, this approach is not recommended. Taking the time to set up proper &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; subclasses will make future test refactorings infinitely easier.</source>
          <target state="translated">尽管&lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt; &lt;code&gt;FunctionTestCase&lt;/code&gt; &lt;/a&gt;可用于快速转换到一个现有的试验基地&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;为基础的系统，不建议使用这种方法。花时间设置适当的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;子类将使将来的测试重构变得更加轻松。</target>
        </trans-unit>
        <trans-unit id="ff19b36ae0ff27e7c6b431a5884cd7d3d669658d" translate="yes" xml:space="preserve">
          <source>Even though there&amp;rsquo;s a native keyed hashing mode, BLAKE2 can, of course, be used in HMAC construction with &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">即使存在本机键控哈希模式，BLAKE2当然也可以用于具有&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; &lt;/a&gt;模块的HMAC构造中：</target>
        </trans-unit>
        <trans-unit id="d7f036ced6014aec397327a4880396286c4f3e4e" translate="yes" xml:space="preserve">
          <source>Even though we use the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax to create Enums, Enums are not normal Python classes. See &lt;a href=&quot;#how-are-enums-different&quot;&gt;How are Enums different?&lt;/a&gt; for more details.</source>
          <target state="translated">即使我们使用&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;语法创建枚举，但枚举也不是普通的Python类。请参阅&lt;a href=&quot;#how-are-enums-different&quot;&gt;枚举有何不同？&lt;/a&gt;更多细节。</target>
        </trans-unit>
        <trans-unit id="ff240f57ce265df8c3bfbeee2e1169f4222a2b42" translate="yes" xml:space="preserve">
          <source>Even though we use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax to create Enums, Enums are not normal Python classes. See &lt;a href=&quot;#how-are-enums-different&quot;&gt;How are Enums different?&lt;/a&gt; for more details.</source>
          <target state="translated">即使我们使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;语法来创建Enums，Enums也不是普通的Python类。请参阅&lt;a href=&quot;#how-are-enums-different&quot;&gt;枚举有何不同？&lt;/a&gt;更多细节。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="16cdaf23858a23440a22c418d4c6b612df6fdb46" translate="yes" xml:space="preserve">
          <source>Event Loop</source>
          <target state="translated">事件循环</target>
        </trans-unit>
        <trans-unit id="5576dbff159fec8a46dbd0a52a25671fa3b9372e" translate="yes" xml:space="preserve">
          <source>Event Loop Implementations</source>
          <target state="translated">事件循环的实现</target>
        </trans-unit>
        <trans-unit id="77a9a7549edf389a9cb37745d2e54aceacf3da51" translate="yes" xml:space="preserve">
          <source>Event Loop Methods</source>
          <target state="translated">事件循环方法</target>
        </trans-unit>
        <trans-unit id="a67706b3e7508f740414461219436fc9a73e214a" translate="yes" xml:space="preserve">
          <source>Event Loop Policies</source>
          <target state="translated">事件循环政策</target>
        </trans-unit>
        <trans-unit id="6c2ed30703b4deb10039f26a41c46d82ade3869e" translate="yes" xml:space="preserve">
          <source>Event Objects</source>
          <target state="translated">事件对象</target>
        </trans-unit>
        <trans-unit id="ed3cd825d47faf09b9e89f0c92cdae979e2e31a2" translate="yes" xml:space="preserve">
          <source>Event handler for click event on directory.</source>
          <target state="translated">对目录上的点击事件进行事件处理。</target>
        </trans-unit>
        <trans-unit id="11b9ad2ef7942d8668e807a0bd3d61addc9bc8a3" translate="yes" xml:space="preserve">
          <source>Event handler for double-click event on directory.</source>
          <target state="translated">对目录上的双击事件进行事件处理。</target>
        </trans-unit>
        <trans-unit id="9eb5bd3296bfcd9a9d0d09fd539431fab0855169" translate="yes" xml:space="preserve">
          <source>Event handler for double-click event on file.</source>
          <target state="translated">文件上双击事件的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="093fbe8ab68194b8bb10c5cfddd1e74b5b34f347" translate="yes" xml:space="preserve">
          <source>Event handler for single-click event on file.</source>
          <target state="translated">文件上单次点击事件的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="440fcc4d594dae931e312babd2de1b9b3d2a28fc" translate="yes" xml:space="preserve">
          <source>Event loop provides mechanisms to schedule callback functions to be called at some point in the future. Event loop uses monotonic clocks to track time.</source>
          <target state="translated">事件循环提供了安排回调函数在未来某个时刻被调用的机制。事件循环使用单调时钟来跟踪时间。</target>
        </trans-unit>
        <trans-unit id="62e71e6548032c1c325d64816dbf74d764e0c929" translate="yes" xml:space="preserve">
          <source>Event loops have &lt;strong&gt;low-level&lt;/strong&gt; APIs for the following:</source>
          <target state="translated">事件循环具有用于以下目的&lt;strong&gt;的低级&lt;/strong&gt; API：</target>
        </trans-unit>
        <trans-unit id="517d8715e77155c962befa306539460c53898616" translate="yes" xml:space="preserve">
          <source>Event loops use cooperative scheduling: an event loop runs one Task at a time. While a Task awaits for the completion of a Future, the event loop runs other Tasks, callbacks, or performs IO operations.</source>
          <target state="translated">事件循环使用合作调度:一个事件循环一次运行一个Task。当一个Task等待一个Future完成时,事件循环会运行其他Task、回调或执行IO操作。</target>
        </trans-unit>
        <trans-unit id="ced38f1f5acc3782ecfa5e0a5049aac2064b7102" translate="yes" xml:space="preserve">
          <source>Event methods, such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; accept factories that return streaming protocols.</source>
          <target state="translated">事件方法，例如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt; &lt;code&gt;loop.create_unix_server()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt; &lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;接受工厂返回流协议。</target>
        </trans-unit>
        <trans-unit id="d2666c7b871ccb15924b349d18cdc53f00b1b05d" translate="yes" xml:space="preserve">
          <source>Event port.</source>
          <target state="translated">事件端口。</target>
        </trans-unit>
        <trans-unit id="c09e1c6446bbff501e408ad68773effacce68f7c" translate="yes" xml:space="preserve">
          <source>Events provided in a previous call to &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;read_events()&lt;/code&gt;&lt;/a&gt; will not be yielded again. Events are consumed from the internal queue only when they are retrieved from the iterator, so multiple readers iterating in parallel over iterators obtained from &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;read_events()&lt;/code&gt;&lt;/a&gt; will have unpredictable results.</source>
          <target state="translated">先前对&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;read_events()&lt;/code&gt; 的&lt;/a&gt;调用中提供的事件将不再产生。仅当从迭代器中检索事件时，才会从内部队列中使用事件，因此，多个读取器对从&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;read_events()&lt;/code&gt; &lt;/a&gt;获得的迭代器进行并行迭代将产生不可预测的结果。</target>
        </trans-unit>
        <trans-unit id="87f71e1dc2cd3d8c17bb5319ed639fa3a8cf8f61" translate="yes" xml:space="preserve">
          <source>Events that must be waited for on this file object.</source>
          <target state="translated">该文件对象上必须等待的事件。</target>
        </trans-unit>
        <trans-unit id="adeeb9efa131202d0465b43c1ad89c9661314fa7" translate="yes" xml:space="preserve">
          <source>Ever since the SSL module was introduced in Python 2.6, the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; class has provided two related but distinct areas of functionality:</source>
          <target state="translated">自从Python 2.6中引入SSL模块以来，&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;类提供了两个相关但截然不同的功能领域：</target>
        </trans-unit>
        <trans-unit id="3c376cc3b04f0eda118d988e7f66f6dd0fa1fb91" translate="yes" xml:space="preserve">
          <source>Every distribution includes some metadata, which you can extract using the &lt;code&gt;metadata()&lt;/code&gt; function:</source>
          <target state="translated">每个发行版都包含一些元数据，您可以使用 &lt;code&gt;metadata()&lt;/code&gt; 函数提取这些元数据：</target>
        </trans-unit>
        <trans-unit id="5790b30b90561d5789c25e94ba42cf2105a4a907" translate="yes" xml:space="preserve">
          <source>Every handler with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; has that method called to pre-process the request.</source>
          <target state="translated">每个使用名为 &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; 的方法的处理程序都会调用该方法来预处理请求。</target>
        </trans-unit>
        <trans-unit id="87dd6abe2d83be9ac05336f5766d67cec0efbdc0" translate="yes" xml:space="preserve">
          <source>Every handler with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; has that method called to post-process the response.</source>
          <target state="translated">每个使用名为 &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; 之类的方法的处理程序都会调用该方法以对响应进行后处理。</target>
        </trans-unit>
        <trans-unit id="023f8d53f12bb3daad0277efc4c3662d502e1d1f" translate="yes" xml:space="preserve">
          <source>Every new component that is installed using &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; or a Distutils-based system will follow the same scheme to copy its file in the right places.</source>
          <target state="translated">使用&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;或基于Distutils的系统安装的每个新组件都将遵循相同的方案在正确的位置复制其文件。</target>
        </trans-unit>
        <trans-unit id="986fbc42665dc91f40f77aea3b95a8ca43c093c4" translate="yes" xml:space="preserve">
          <source>Every type is compatible with &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">每种类型都与&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;兼容。</target>
        </trans-unit>
        <trans-unit id="53b7884e98183ceb9b4cfd1d011ac92d5357e2a0" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;headersonly&lt;/em&gt; defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt;完全一样，只是&lt;em&gt;headersonly&lt;/em&gt;默认为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46f25aeba7b5a83d7186802db481749d4e234b64" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;headersonly&lt;/em&gt; defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;完全一样，只是&lt;em&gt;headersonly&lt;/em&gt;默认为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efd3fcb68660d6ddc801f3d5fff097ef21ad1001" translate="yes" xml:space="preserve">
          <source>Exactly one of &lt;em&gt;hex&lt;/em&gt;, &lt;em&gt;bytes&lt;/em&gt;, &lt;em&gt;bytes_le&lt;/em&gt;, &lt;em&gt;fields&lt;/em&gt;, or &lt;em&gt;int&lt;/em&gt; must be given. The &lt;em&gt;version&lt;/em&gt; argument is optional; if given, the resulting UUID will have its variant and version number set according to &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;, overriding bits in the given &lt;em&gt;hex&lt;/em&gt;, &lt;em&gt;bytes&lt;/em&gt;, &lt;em&gt;bytes_le&lt;/em&gt;, &lt;em&gt;fields&lt;/em&gt;, or &lt;em&gt;int&lt;/em&gt;.</source>
          <target state="translated">正好一个&lt;em&gt;十六进制&lt;/em&gt;，&lt;em&gt;字节&lt;/em&gt;，&lt;em&gt;bytes_le&lt;/em&gt;，&lt;em&gt;字段&lt;/em&gt;，或&lt;em&gt;INT&lt;/em&gt;必须给予。该&lt;em&gt;版本的&lt;/em&gt;参数是可选的; 如果给出，则所得的UUID将根据&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;设置其变体和版本号，并覆盖给定&lt;em&gt;hex中的&lt;/em&gt;位，&lt;em&gt;bytes&lt;/em&gt;，&lt;em&gt;bytes_le&lt;/em&gt;，&lt;em&gt;fields&lt;/em&gt;或&lt;em&gt;int&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="065d263ca721579032051461d0f85c251cda8d94" translate="yes" xml:space="preserve">
          <source>Examine the set of signals that are pending for delivery to the calling thread (i.e., the signals which have been raised while blocked). Return the set of the pending signals.</source>
          <target state="translated">检查待交付给调用线程的信号集(即在阻塞时已发出的信号)。返回待传递信号集。</target>
        </trans-unit>
        <trans-unit id="8140c9559ead396556a69cb7c13870d100e23e12" translate="yes" xml:space="preserve">
          <source>Examining Symbol Tables</source>
          <target state="translated">检查符号表</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ba64059d54ecf2e4f58095e4ffbe78024c708b65" translate="yes" xml:space="preserve">
          <source>Example 1, copy an existing database into another:</source>
          <target state="translated">例1,将一个现有的数据库复制到另一个数据库中。</target>
        </trans-unit>
        <trans-unit id="137645e6411b45ecbf0303ef253386e5ec8dcb85" translate="yes" xml:space="preserve">
          <source>Example 2, copy an existing database into a transient copy:</source>
          <target state="translated">例2,将现有的数据库复制成一个瞬时副本。</target>
        </trans-unit>
        <trans-unit id="c37bc538c5bc9675c11e37a0307e34b3f0c1f015" translate="yes" xml:space="preserve">
          <source>Example HTML Parser Application</source>
          <target state="translated">HTML解析器应用实例</target>
        </trans-unit>
        <trans-unit id="0debb52aa0d853532835e594e85ae883978d8199" translate="yes" xml:space="preserve">
          <source>Example Objects</source>
          <target state="translated">示例对象</target>
        </trans-unit>
        <trans-unit id="d73338318be14a2ee00fe61b468ee7e6b4519df6" translate="yes" xml:space="preserve">
          <source>Example call to enable tracing with &lt;em&gt;skip&lt;/em&gt;:</source>
          <target state="translated">使用&lt;em&gt;skip&lt;/em&gt;启用跟踪的示例调用：</target>
        </trans-unit>
        <trans-unit id="a6887178fdbaf756ad1659904ae754f41804ae6d" translate="yes" xml:space="preserve">
          <source>Example for a TurtleScreen instance named &lt;code&gt;screen&lt;/code&gt; and a Turtle instance named turtle:</source>
          <target state="translated">名为 &lt;code&gt;screen&lt;/code&gt; 的TurtleScreen实例和名为turtle的Turtle实例的示例：</target>
        </trans-unit>
        <trans-unit id="865e4a8d44043cfd9cf400e7ea38cc03278129a8" translate="yes" xml:space="preserve">
          <source>Example for a context with one CA cert and one other cert:</source>
          <target state="translated">一个上下文有一个CA证书和另一个证书的例子。</target>
        </trans-unit>
        <trans-unit id="fef9a506f6a96368c854bbe7b4f86e06f07d8682" translate="yes" xml:space="preserve">
          <source>Example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;statistical bootstrapping&lt;/a&gt; using resampling with replacement to estimate a confidence interval for the mean of a sample of size five:</source>
          <target state="translated">使用重采样和替换来估计大小为5的样本平均值的置信区间的&lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;统计自举&lt;/a&gt;示例：</target>
        </trans-unit>
        <trans-unit id="3ca61bbb7e9b81c9545dbd2fcf6d7aecf4ad39b2" translate="yes" xml:space="preserve">
          <source>Example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;statistical bootstrapping&lt;/a&gt; using resampling with replacement to estimate a confidence interval for the mean of a sample:</source>
          <target state="translated">使用重采样和替换来估计样本均值的置信区间的&lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;统计自举&lt;/a&gt;示例：</target>
        </trans-unit>
        <trans-unit id="86c7e42216c745a3820b86e8839c09c2adbf656f" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;ContextDecorator&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="8357286354d7663d68a111084817ddfbcaa5aee9" translate="yes" xml:space="preserve">
          <source>Example of Client Usage</source>
          <target state="translated">客户端使用实例</target>
        </trans-unit>
        <trans-unit id="5440db91bbed4c909b616c48187fbe4347314229" translate="yes" xml:space="preserve">
          <source>Example of Client and Server Usage</source>
          <target state="translated">客户端和服务器使用实例</target>
        </trans-unit>
        <trans-unit id="8c2d5ec44c12d9ff6754b9395d719e20a220c4a2" translate="yes" xml:space="preserve">
          <source>Example of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests&quot;&gt;resampling permutation test&lt;/a&gt; to determine the statistical significance or &lt;a href=&quot;https://en.wikipedia.org/wiki/P-value&quot;&gt;p-value&lt;/a&gt; of an observed difference between the effects of a drug versus a placebo:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests&quot;&gt;重新抽样置换测试的&lt;/a&gt;示例，用于确定药物与安慰剂之间观察到的差异的统计显着性或&lt;a href=&quot;https://en.wikipedia.org/wiki/P-value&quot;&gt;p值&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f554a16636435edbf30d67f304f055459fe1f648" translate="yes" xml:space="preserve">
          <source>Example of a WSGI application serving the current directory, accept optional directory and port number (default: 8000) on the command line:</source>
          <target state="translated">WSGI应用程序服务于当前目录的例子,接受命令行中可选的目录和端口号(默认:8000)。</target>
        </trans-unit>
        <trans-unit id="3e0f8a042f13e9fc73559f195e6936162acacf55" translate="yes" xml:space="preserve">
          <source>Example of a script counting the number of lines of the text file specified in the command line:</source>
          <target state="translated">在命令行中指定文本文件的行数的脚本示例。</target>
        </trans-unit>
        <trans-unit id="b39c929319837464183a66a188d5a4b74c358856" translate="yes" xml:space="preserve">
          <source>Example of a script rewriter that transforms float literals into Decimal objects:</source>
          <target state="translated">将浮点数转换为十进制对象的脚本重写器示例。</target>
        </trans-unit>
        <trans-unit id="3df4e542b42fe51861f15425bec08c9e581be4f2" translate="yes" xml:space="preserve">
          <source>Example of a segmentation fault on Linux with and without enabling the fault handler:</source>
          <target state="translated">Linux上的分段故障实例,有启用和未启用故障处理程序。</target>
        </trans-unit>
        <trans-unit id="8494eb293c63909857aec1796f431b7a0bcbfea9" translate="yes" xml:space="preserve">
          <source>Example of an LRU cache for static web content:</source>
          <target state="translated">为静态网页内容提供LRU缓存的例子。</target>
        </trans-unit>
        <trans-unit id="34595c8b7423a2763fbbca8c42af8ea2cc5eda5c" translate="yes" xml:space="preserve">
          <source>Example of an unhandled exception:</source>
          <target state="translated">未处理的异常的例子。</target>
        </trans-unit>
        <trans-unit id="a3bc5b7aba328df1e407aaf62166c8f472d2c871" translate="yes" xml:space="preserve">
          <source>Example of changing the attribute &amp;ldquo;target&amp;rdquo; of every link in first paragraph:</source>
          <target state="translated">更改第一段中每个链接的属性&amp;ldquo;目标&amp;rdquo;的示例：</target>
        </trans-unit>
        <trans-unit id="c8cc5adbc6bda92d954c23713e40bb147c821ac5" translate="yes" xml:space="preserve">
          <source>Example of coroutine displaying the current date every second for 5 seconds:</source>
          <target state="translated">每隔5秒显示当前日期的coroutine示例。</target>
        </trans-unit>
        <trans-unit id="ace7964881fa427c9b955e08733877f771e2256c" translate="yes" xml:space="preserve">
          <source>Example of counting days to an event:</source>
          <target state="translated">例子:一个事件的计算天数。</target>
        </trans-unit>
        <trans-unit id="36b3976e8dd6454c66e771264b482ca8db8300d9" translate="yes" xml:space="preserve">
          <source>Example of efficiently computing &lt;a href=&quot;https://en.wikipedia.org/wiki/Fibonacci_number&quot;&gt;Fibonacci numbers&lt;/a&gt; using a cache to implement a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming&quot;&gt;dynamic programming&lt;/a&gt; technique:</source>
          <target state="translated">使用高速缓存有效地计算&lt;a href=&quot;https://en.wikipedia.org/wiki/Fibonacci_number&quot;&gt;斐波那契数&lt;/a&gt;以实现&lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming&quot;&gt;动态编程&lt;/a&gt;技术的示例：</target>
        </trans-unit>
        <trans-unit id="92e63a15b16a1e3592e498eb90ae1c50fad07a68" translate="yes" xml:space="preserve">
          <source>Example of how to GZIP compress a binary string:</source>
          <target state="translated">GZIP压缩二进制字符串的例子。</target>
        </trans-unit>
        <trans-unit id="1474ae500b5a001a9b1d649894b172c8f216da9b" translate="yes" xml:space="preserve">
          <source>Example of how to GZIP compress an existing file:</source>
          <target state="translated">举例说明如何对现有文件进行GZIP压缩。</target>
        </trans-unit>
        <trans-unit id="85dc75b483cd6ca6d07c566852cffb63738c9c78" translate="yes" xml:space="preserve">
          <source>Example of how to create a compressed GZIP file:</source>
          <target state="translated">如何创建一个压缩的GZIP文件的例子。</target>
        </trans-unit>
        <trans-unit id="4dd12dcc603cf2780656fa2a8bb16e8d59559b18" translate="yes" xml:space="preserve">
          <source>Example of how to read a compressed file:</source>
          <target state="translated">如何读取压缩文件的例子。</target>
        </trans-unit>
        <trans-unit id="6f2cfef200873444a0503cb83516d7f97f10d111" translate="yes" xml:space="preserve">
          <source>Example of how to wait for enqueued tasks to be completed:</source>
          <target state="translated">如何等待已排队任务完成的例子。</target>
        </trans-unit>
        <trans-unit id="279156ed9b71d7424658bef303f91a5f62b81e6a" translate="yes" xml:space="preserve">
          <source>Example of letting user specified command-line arguments take precedence over environment variables which in turn take precedence over default values:</source>
          <target state="translated">让用户指定的命令行参数优先于环境变量,而环境变量又优先于默认值的例子。</target>
        </trans-unit>
        <trans-unit id="626096412640de8c129ec606e725bbd326ee4695" translate="yes" xml:space="preserve">
          <source>Example of output before/after running some tests of the Python test suite:</source>
          <target state="translated">运行Python测试套件的一些测试之前/之后的输出示例。</target>
        </trans-unit>
        <trans-unit id="c591df6074ed0fe5e6bf8dc7b32c667a8e5dba71" translate="yes" xml:space="preserve">
          <source>Example of output of the Python test suite (traceback limited to 25 frames):</source>
          <target state="translated">Python测试套件的输出示例 (回溯限制为25帧)。</target>
        </trans-unit>
        <trans-unit id="baf8308b40270c8e949acaa0e52904b087b78869" translate="yes" xml:space="preserve">
          <source>Example of output of the Python test suite:</source>
          <target state="translated">Python测试套件的输出示例。</target>
        </trans-unit>
        <trans-unit id="41696aeac4c168c952d61557ba52d98acdc47f3b" translate="yes" xml:space="preserve">
          <source>Example of simulating Python&amp;rsquo;s internal lookup chain:</source>
          <target state="translated">模拟Python内部查找链的示例：</target>
        </trans-unit>
        <trans-unit id="74185058881dcc36931b01100d8e43520182b9fe" translate="yes" xml:space="preserve">
          <source>Example of tokenizing a file programmatically, reading unicode strings instead of bytes with &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以编程方式标记文件的示例，使用&lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt;读取unicode字符串而不是字节：</target>
        </trans-unit>
        <trans-unit id="d13f5ff947b45e47e249594d1bd333d3fdd19f37" translate="yes" xml:space="preserve">
          <source>Example of tokenizing from the command line. The script:</source>
          <target state="translated">在命令行中进行标记化的例子。脚本。</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">使用实例:</target>
        </trans-unit>
        <trans-unit id="ff254b80ff4deddde105df533b4ecf09cb09b4b9" translate="yes" xml:space="preserve">
          <source>Example of using &lt;a href=&quot;#operator.itemgetter&quot;&gt;&lt;code&gt;itemgetter()&lt;/code&gt;&lt;/a&gt; to retrieve specific fields from a tuple record:</source>
          <target state="translated">使用&lt;a href=&quot;#operator.itemgetter&quot;&gt; &lt;code&gt;itemgetter()&lt;/code&gt; &lt;/a&gt;从元组记录中检索特定字段的示例：</target>
        </trans-unit>
        <trans-unit id="1f16a763880498f7b430c362f22c1b3f123bbad9" translate="yes" xml:space="preserve">
          <source>Example patterns for using the &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; class to simulate nested contexts:</source>
          <target state="translated">使用&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt;类模拟嵌套上下文的示例模式：</target>
        </trans-unit>
        <trans-unit id="b57fbbce3024226f494b8c9f6b74c9e0f9482dfe" translate="yes" xml:space="preserve">
          <source>Example usage of ModuleFinder</source>
          <target state="translated">ModuleFinder的使用实例</target>
        </trans-unit>
        <trans-unit id="97e958b379493045126047344a14c53561a623ed" translate="yes" xml:space="preserve">
          <source>Example usage of some of the methods of &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">一些&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;方法的用法示例：</target>
        </trans-unit>
        <trans-unit id="60f284f90e62dd3c3da0a06cd83c63a0a2636e6f" translate="yes" xml:space="preserve">
          <source>Example usage of the binary objects. We&amp;rsquo;re going to transfer an image over XMLRPC:</source>
          <target state="translated">二进制对象的用法示例。我们将通过XMLRPC传输图像：</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用实例。</target>
        </trans-unit>
        <trans-unit id="c7a9f6edde5b90563dc590480ce2c19b3ceb8c4c" translate="yes" xml:space="preserve">
          <source>Example use with input stream:</source>
          <target state="translated">与输入流一起使用的例子。</target>
        </trans-unit>
        <trans-unit id="40207c8cfe3dfb26f745fedfb1e280021e268b08" translate="yes" xml:space="preserve">
          <source>Example use with output streams:</source>
          <target state="translated">与输出流的使用实例。</target>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="translated">使用实例:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a53066aab3018c902feba5bb8428b1e0c0ca3f41" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Tuple[T1, T2]&lt;/code&gt; is a tuple of two elements corresponding to type variables T1 and T2. &lt;code&gt;Tuple[int, float, str]&lt;/code&gt; is a tuple of an int, a float and a string.</source>
          <target state="translated">示例： &lt;code&gt;Tuple[T1, T2]&lt;/code&gt; 是两个与类型变量T1和T2相对应的元素的元组。 &lt;code&gt;Tuple[int, float, str]&lt;/code&gt; 是一个int，一个float和一个字符串的元组。</target>
        </trans-unit>
        <trans-unit id="d5ff9b1ca76cd267a4d86feb025b24f6e8e44e83" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;http.client.responses[http.client.NOT_FOUND]&lt;/code&gt; is &lt;code&gt;'Not Found'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;http.client.responses[http.client.NOT_FOUND]&lt;/code&gt; 是 &lt;code&gt;'Not Found'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bac6bf28038e84740e2a40be66e3c0eab528c1a" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote('/El Ni&amp;ntilde;o/')&lt;/code&gt; yields &lt;code&gt;'/El%20Ni%C3%B1o/'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;quote('/El Ni&amp;ntilde;o/')&lt;/code&gt; 得出 &lt;code&gt;'/El%20Ni%C3%B1o/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11fef01fb5ea38d0eca370802e6deeb2a2aace34" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote_from_bytes(b'a&amp;amp;\xef')&lt;/code&gt; yields &lt;code&gt;'a%26%EF'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;quote_from_bytes(b'a&amp;amp;\xef')&lt;/code&gt; 得出 &lt;code&gt;'a%26%EF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cdde3985a7fb4acf75fc1fdc43cf98aa4d7fb8" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote_plus('/El Ni&amp;ntilde;o/')&lt;/code&gt; yields &lt;code&gt;'%2FEl+Ni%C3%B1o%2F'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;quote_plus('/El Ni&amp;ntilde;o/')&lt;/code&gt; 得出 &lt;code&gt;'%2FEl+Ni%C3%B1o%2F'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8c50fbefe3d09e28519b8ae7c691cb75894a1fd" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote('/El%20Ni%C3%B1o/')&lt;/code&gt; yields &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;unquote('/El%20Ni%C3%B1o/')&lt;/code&gt; 得出 &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8d066e789bc4b0e4ff9e3d86d53595cc3ee6e29" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote_plus('/El+Ni%C3%B1o/')&lt;/code&gt; yields &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;unquote_plus('/El+Ni%C3%B1o/')&lt;/code&gt; 得出 &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e1ac2893d1259af6f482135918cb008646b0886" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote_to_bytes('a%26%EF')&lt;/code&gt; yields &lt;code&gt;b'a&amp;amp;\xef'&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;unquote_to_bytes('a%26%EF')&lt;/code&gt; 产生 &lt;code&gt;b'a&amp;amp;\xef'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c3aa7e06017e8ff98680df27fbdea1b412f07ad" translate="yes" xml:space="preserve">
          <source>Example: Emulation of compile()</source>
          <target state="translated">例子:模拟编译()</target>
        </trans-unit>
        <trans-unit id="b26c82a6a778161b5bdbdbe192421089f6e5017f" translate="yes" xml:space="preserve">
          <source>Example: Given the function &lt;code&gt;myfunc()&lt;/code&gt;:</source>
          <target state="translated">示例：给定函数 &lt;code&gt;myfunc()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0fa10e8510aad6feea266e052f24f7f689f84c23" translate="yes" xml:space="preserve">
          <source>Example: print all descriptions of arguments:</source>
          <target state="translated">例如:打印所有参数的描述。</target>
        </trans-unit>
        <trans-unit id="70c3542949a842ba3f647de478464545ff410014" translate="yes" xml:space="preserve">
          <source>Example: print all keyword-only arguments without default values:</source>
          <target state="translated">示例:打印所有只包含关键字的参数,不包含默认值。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="6d082aaac0220b28f2b8c187674d4fc1ad5d01c2" translate="yes" xml:space="preserve">
          <source>Examples (all on a SVR4 compliant system):</source>
          <target state="translated">例子(都是在符合SVR4的系统上)。</target>
        </trans-unit>
        <trans-unit id="ba7cb01919ec9e725d24d29be0234801f58640ba" translate="yes" xml:space="preserve">
          <source>Examples and Recipes</source>
          <target state="translated">例子和食谱</target>
        </trans-unit>
        <trans-unit id="a361faee4c8e9d15d95654bf795e643a84fc895c" translate="yes" xml:space="preserve">
          <source>Examples containing both expected output and an exception are not supported. Trying to guess where one ends and the other begins is too error-prone, and that also makes for a confusing test.</source>
          <target state="translated">不支持同时包含预期输出和异常的例子。试图猜测一个结束和另一个开始的位置太容易出错了,这也使得测试变得混乱。</target>
        </trans-unit>
        <trans-unit id="86ce654eab3bc677fad0231965f3321413be76f0" translate="yes" xml:space="preserve">
          <source>Examples of &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; arithmetic:</source>
          <target state="translated">&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;算法的示例：</target>
        </trans-unit>
        <trans-unit id="a9cb2f8191f0236461789853c793fe43887124be" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">用法示例：&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f53aa95370601fa81bc3dadc1f65b4708e63a4cd" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">用法示例：&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec3db14421f66f5032b9ec5cc4a9289b18017179" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">用法示例：&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="217609f8d539d8fd74dde985eae19ac4f03520a8" translate="yes" xml:space="preserve">
          <source>Examples of returned values:</source>
          <target state="translated">返回值的例子:</target>
        </trans-unit>
        <trans-unit id="259aa5fcfc60a59c500052a700193e18835bd2e4" translate="yes" xml:space="preserve">
          <source>Examples of these sections in the file are given below.</source>
          <target state="translated">以下是文件中这些部分的例子。</target>
        </trans-unit>
        <trans-unit id="6854cb6d7461f271239ae6431fef4bbfb9d0849f" translate="yes" xml:space="preserve">
          <source>Examples of usage</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="91fc4c486785c00452b26ce872ca765962ee129b" translate="yes" xml:space="preserve">
          <source>Examples of usage: &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">用法示例：&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7140845a3bb12ad8574343147a832baa55c8d7e8" translate="yes" xml:space="preserve">
          <source>Examples of working with &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">使用&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象的示例：</target>
        </trans-unit>
        <trans-unit id="f129f0c85e501b41344120925f5197433ede1e8c" translate="yes" xml:space="preserve">
          <source>Examples of working with a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">使用&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象的示例：</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="cc3ff6324e8eebbf50e9554bcdd2e7c7a2cbc65b" translate="yes" xml:space="preserve">
          <source>Exceeding limitations on different file systems can cause decompression failed. Such as allowable characters in the directory entries, length of the file name, length of the pathname, size of a single file, and number of files, etc.</source>
          <target state="translated">超过不同文件系统的限制,会导致解压失败。如目录项中允许的字符、文件名的长度、路径名的长度、单个文件的大小、文件的数量等。</target>
        </trans-unit>
        <trans-unit id="1f7913834e700496b52dad8f01ac19616ff774c6" translate="yes" xml:space="preserve">
          <source>Except for the code &lt;code&gt;'C'&lt;/code&gt;, the language code corresponds to &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;language code&lt;/em&gt; and &lt;em&gt;encoding&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt; if their values cannot be determined.</source>
          <target state="translated">除了代码 &lt;code&gt;'C'&lt;/code&gt; ，语言代码对应于&lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;。如果无法确定其值，则&lt;em&gt;语言代码&lt;/em&gt;和&lt;em&gt;编码&lt;/em&gt;可能为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80904ba25a9e3243ed632e1ff1cc6a03a8d1747e" translate="yes" xml:space="preserve">
          <source>Except for the code &lt;code&gt;'C'&lt;/code&gt;, the language code corresponds to &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;language code&lt;/em&gt; and &lt;em&gt;encoding&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt; if their values cannot be determined.</source>
          <target state="translated">除了代码 &lt;code&gt;'C'&lt;/code&gt; ，语言代码对应于&lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;。如果无法确定其值，则&lt;em&gt;语言代码&lt;/em&gt;和&lt;em&gt;编码&lt;/em&gt;可能为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="0748cd739094a93fe7da05e30469096aa55c80e4" translate="yes" xml:space="preserve">
          <source>Exception classes</source>
          <target state="translated">异常类</target>
        </trans-unit>
        <trans-unit id="312428d3e8acfd1d42aeb467b6b1c11802d7c8c2" translate="yes" xml:space="preserve">
          <source>Exception failing because of &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; invalidity: incorrect attributes, incorrect &lt;em&gt;Set-Cookie&lt;/em&gt; header, etc.</source>
          <target state="translated">由于&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;无效而导致异常失败：错误的属性，错误的&lt;em&gt;Set-Cookie&lt;/em&gt;标&lt;em&gt;头等&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="209011554fcfc911dcec7eb38e42eca35be08388" translate="yes" xml:space="preserve">
          <source>Exception hierarchy</source>
          <target state="translated">异常层次结构</target>
        </trans-unit>
        <trans-unit id="8b676f0d2de85f0abc2af15f19b9c6a83a75d753" translate="yes" xml:space="preserve">
          <source>Exception raised by &lt;code&gt;Connection.recv_bytes_into()&lt;/code&gt; when the supplied buffer object is too small for the message read.</source>
          <target state="translated">当提供的缓冲区对象太小而无法读取消息时， &lt;code&gt;Connection.recv_bytes_into()&lt;/code&gt; 引发异常。</target>
        </trans-unit>
        <trans-unit id="8e9814d47307c441f0f179379aabd00fa81be39a" translate="yes" xml:space="preserve">
          <source>Exception raised by strict parsers if a single option appears twice during reading from a single file, string or dictionary. This catches misspellings and case sensitivity-related errors, e.g. a dictionary may have two keys representing the same case-insensitive configuration key.</source>
          <target state="translated">如果在从一个文件、字符串或字典中读取一个选项时出现两次,则严格解析器会引发异常。这将捕获拼写错误和大小写敏感度相关的错误,例如,一个字典可能有两个键代表同一个大小写不敏感的配置键。</target>
        </trans-unit>
        <trans-unit id="0be211047c69b5d08f64a29ebebc88eb78862e7f" translate="yes" xml:space="preserve">
          <source>Exception raised by the &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; class for quitting the debugger.</source>
          <target state="translated">&lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt;类引发的用于退出调试器的异常。</target>
        </trans-unit>
        <trans-unit id="f74f98c16d92d1f665535f7524cabfe2c83a8b61" translate="yes" xml:space="preserve">
          <source>Exception raised by the &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; class when syntactical errors are encountered in source text. Instances of this exception provide three interesting attributes: &lt;code&gt;msg&lt;/code&gt; is a textual explanation of the error, &lt;code&gt;filename&lt;/code&gt; is the name of the source file, and &lt;code&gt;lineno&lt;/code&gt; gives the line number on which the error was found.</source>
          <target state="translated">在源文本中遇到语法错误时，&lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; &lt;/a&gt;类引发的异常。此异常的实例提供了三个有趣的属性： &lt;code&gt;msg&lt;/code&gt; 是错误的文本说明， &lt;code&gt;filename&lt;/code&gt; 是源文件的名称， &lt;code&gt;lineno&lt;/code&gt; 提供了发现错误所在的行号。</target>
        </trans-unit>
        <trans-unit id="72225b97067acb514db053e3737009c2206a61fb" translate="yes" xml:space="preserve">
          <source>Exception raised by zipimporter objects. It&amp;rsquo;s a subclass of &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;, so it can be caught as &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;, too.</source>
          <target state="translated">zipimporter对象引发的异常。它是&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;的子类，因此也可以作为&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;捕获。</target>
        </trans-unit>
        <trans-unit id="326de5ee01a9691f56ba64beec39fbde19b7e2b8" translate="yes" xml:space="preserve">
          <source>Exception raised for errors that are related to the database&amp;rsquo;s operation and not necessarily under the control of the programmer, e.g. an unexpected disconnect occurs, the data source name is not found, a transaction could not be processed, etc. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与数据库的操作相关的错误引发的异常，不一定在程序员的控制下，例如发生意外断开连接，找不到数据源名称，无法处理事务等。它是&lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="ee960a200e08a9cd1318594ffd8b99e35250caec" translate="yes" xml:space="preserve">
          <source>Exception raised for errors that are related to the database.</source>
          <target state="translated">出现与数据库有关的错误的异常。</target>
        </trans-unit>
        <trans-unit id="01200d3d284b1e6dc53e60c9884b2ad8119aa369" translate="yes" xml:space="preserve">
          <source>Exception raised for programming errors, e.g. table not found or already exists, syntax error in the SQL statement, wrong number of parameters specified, etc. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">因编程错误而引发的异常，例如，找不到或已经存在表，SQL语句中的语法错误，指定的参数数量错误等。它是&lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="4271bf7a06917b05a5d1384e0893d9d319bbe0ab" translate="yes" xml:space="preserve">
          <source>Exception raised if &lt;code&gt;add_section()&lt;/code&gt; is called with the name of a section that is already present or in strict parsers when a section if found more than once in a single input file, string or dictionary.</source>
          <target state="translated">如果在单个输入文件，字符串或字典中多次发现 &lt;code&gt;add_section()&lt;/code&gt; ，则用已经存在的段的名称或在严格的解析器中调用add_section（）会引发异常。</target>
        </trans-unit>
        <trans-unit id="057a471983601bd66f25f0c5286e874cf7e33a0b" translate="yes" xml:space="preserve">
          <source>Exception raised in case a method or database API was used which is not supported by the database, e.g. calling the &lt;a href=&quot;#sqlite3.Connection.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt; method on a connection that does not support transaction or has transactions turned off. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果使用了数据库不支持的方法或数据库API，则会引发异常，例如，在不支持事务或已关闭事务的连接上调用&lt;a href=&quot;#sqlite3.Connection.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; &lt;/a&gt;方法。它是&lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="d060797ed8d4ae3223972050fa472e9e83ba86d6" translate="yes" xml:space="preserve">
          <source>Exception raised on any errors from this module (errors from &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module are not caught). The reason for the exception is passed to the constructor as a string.</source>
          <target state="translated">此模块的任何错误引发异常（不捕获&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;模块的错误）。异常的原因作为字符串传递给构造函数。</target>
        </trans-unit>
        <trans-unit id="bd190d9d0aef112603ae20aa4d23969762ddd09b" translate="yes" xml:space="preserve">
          <source>Exception raised on any errors. The reason for the exception is passed to the constructor as a string.</source>
          <target state="translated">任何错误都会引发异常。异常原因以字符串形式传递给构造函数。</target>
        </trans-unit>
        <trans-unit id="add7af7e43c5821985246901960320352b13632a" translate="yes" xml:space="preserve">
          <source>Exception raised on compression and decompression errors.</source>
          <target state="translated">压缩和解压缩错误时引发异常。</target>
        </trans-unit>
        <trans-unit id="83582aafa9421ade9e11a1c6e9ada45e9240c08e" translate="yes" xml:space="preserve">
          <source>Exception raised on errors. These are usually programming errors.</source>
          <target state="translated">错误时引发的异常。这些通常是编程错误。</target>
        </trans-unit>
        <trans-unit id="d89247aeb60c7b476bf711d788fdd3b23f45a545" translate="yes" xml:space="preserve">
          <source>Exception raised on incomplete data. These are usually not programming errors, but may be handled by reading a little more data and trying again.</source>
          <target state="translated">在数据不完整时引发的异常。这些通常不是编程错误,但可以通过读取更多的数据并再次尝试来处理。</target>
        </trans-unit>
        <trans-unit id="ee06e8cdc58ec38aa06821b5c570c6ead19e78bf" translate="yes" xml:space="preserve">
          <source>Exception raised on various occasions; argument is a string describing what is wrong.</source>
          <target state="translated">在各种场合下引发的异常;参数是一个描述错误的字符串。</target>
        </trans-unit>
        <trans-unit id="8aea2f4d93f31bf28c13b84df0443c26570db178" translate="yes" xml:space="preserve">
          <source>Exception raised when a browser control error occurs.</source>
          <target state="translated">发生浏览器控制错误时引发的异常。</target>
        </trans-unit>
        <trans-unit id="d49e7c6044bf1d82135e97b494b41e584ec919ed" translate="yes" xml:space="preserve">
          <source>Exception raised when a curses library function returns an error.</source>
          <target state="translated">当curses库函数返回错误时引发异常。</target>
        </trans-unit>
        <trans-unit id="73bd4d3b3c0dbde6b337c936d8c4ddb67a2f15f9" translate="yes" xml:space="preserve">
          <source>Exception raised when a failure occurs within the parser module. This is generally produced for validation failures rather than the built-in &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; raised during normal parsing. The exception argument is either a string describing the reason of the failure or a tuple containing a sequence causing the failure from a parse tree passed to &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; and an explanatory string. Calls to &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; need to be able to handle either type of exception, while calls to other functions in the module will only need to be aware of the simple string values.</source>
          <target state="translated">解析器模块内发生故障时引发异常。通常是为验证失败而生成的，而不是在正常解析过程中引发的内置&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。异常参数可以是描述失败原因的字符串，也可以是包含从导致传递给&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;的解析树到失败的序列的元组和说明性字符串。调用&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;必须能够处理两种类型的异常，而调用模块中的其他函数则只需要知道简单的字符串值即可。</target>
        </trans-unit>
        <trans-unit id="0cb1412863f6feab0709a71cd7908436a470d95a" translate="yes" xml:space="preserve">
          <source>Exception raised when a proxy object is used but the underlying object has been collected. This is the same as the standard &lt;a href=&quot;exceptions#ReferenceError&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">使用代理对象但已收集基础对象时引发异常。这与标准&lt;a href=&quot;exceptions#ReferenceError&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;异常相同。</target>
        </trans-unit>
        <trans-unit id="e3633dc111c05817710e4593aa78a11ceb9920e4" translate="yes" xml:space="preserve">
          <source>Exception raised when a reply is received from the server that does not begin with a digit in the range 1&amp;ndash;5.</source>
          <target state="translated">从服务器收到的答复不是以1到5范围内的数字开头时引发的异常。</target>
        </trans-unit>
        <trans-unit id="8b175a0377a3f39fe7da494c1e660375102c528d" translate="yes" xml:space="preserve">
          <source>Exception raised when a reply is received from the server that does not fit the response specifications of the File Transfer Protocol, i.e. begin with a digit in the range 1&amp;ndash;5.</source>
          <target state="translated">当从服务器接收到不符合文件传输协议的响应规范的答复时引发的异常，即以1-5范围内的数字开头。</target>
        </trans-unit>
        <trans-unit id="178c3d0791275ff5c898f9c8e23a3262f4890471" translate="yes" xml:space="preserve">
          <source>Exception raised when a response code in the range 400&amp;ndash;499 is received.</source>
          <target state="translated">收到400-499范围内的响应代码时引发异常。</target>
        </trans-unit>
        <trans-unit id="4313ff412f1b54328f22236a36a88ad719a8f052" translate="yes" xml:space="preserve">
          <source>Exception raised when a response code in the range 500&amp;ndash;599 is received.</source>
          <target state="translated">收到500-599范围内的响应代码时引发异常。</target>
        </trans-unit>
        <trans-unit id="b310113af08754064dafc82caa63d5845c17c234" translate="yes" xml:space="preserve">
          <source>Exception raised when a specified option is not found in the specified section.</source>
          <target state="translated">当在指定的章节中找不到指定的选项时,发出异常。</target>
        </trans-unit>
        <trans-unit id="1004e9f4741227620239abe10c19ae1f580a13e0" translate="yes" xml:space="preserve">
          <source>Exception raised when a specified section is not found.</source>
          <target state="translated">当找不到指定的部分时,发出异常。</target>
        </trans-unit>
        <trans-unit id="d170cc3be4359bff0d1bd6c483fb6593917ddd92" translate="yes" xml:space="preserve">
          <source>Exception raised when a string passed to one of the functions here is not a valid regular expression (for example, it might contain unmatched parentheses) or when some other error occurs during compilation or matching. It is never an error if a string contains no match for a pattern. The error instance has the following additional attributes:</source>
          <target state="translated">当传递给函数之一的字符串不是有效的正则表达式时(例如,它可能包含未匹配的括号)或在编译或匹配过程中发生其他错误时,会引发异常。如果一个字符串不包含匹配的模式,那就永远不会是错误。错误实例有以下附加属性。</target>
        </trans-unit>
        <trans-unit id="fa4e1d32e4e5cc4617660d479d0e6e738f91e3aa" translate="yes" xml:space="preserve">
          <source>Exception raised when an error code signifying a permanent error (response codes in the range 500&amp;ndash;599) is received.</source>
          <target state="translated">当收到表示永久错误的错误代码（响应代码在500-599范围内）时，引发异常。</target>
        </trans-unit>
        <trans-unit id="bebdf5cfc60e6b3b7fe1aaa5a65b62566a2f3963" translate="yes" xml:space="preserve">
          <source>Exception raised when an error code signifying a temporary error (response codes in the range 400&amp;ndash;499) is received.</source>
          <target state="translated">当收到表示临时错误的错误代码（响应代码在400-499范围内）时引发异常。</target>
        </trans-unit>
        <trans-unit id="a5694a429c5b81e9ff0998944dfdfe1bb38edae7" translate="yes" xml:space="preserve">
          <source>Exception raised when an error occurs while attempting to compile the file.</source>
          <target state="translated">当试图编译文件时发生错误时,发出异常。</target>
        </trans-unit>
        <trans-unit id="7d2745077fcab3e366892be2556894fde814c021" translate="yes" xml:space="preserve">
          <source>Exception raised when an option referenced from a value does not exist. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从值引用的选项不存在时引发的异常。&lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="1b7880563336914d732cc4888dbfc1750c2e27d3" translate="yes" xml:space="preserve">
          <source>Exception raised when an unexpected reply is received from the server.</source>
          <target state="translated">当从服务器收到意外的回复时,发生异常。</target>
        </trans-unit>
        <trans-unit id="f4b8fc254e42ccc6740f5732866846a4a570ce88" translate="yes" xml:space="preserve">
          <source>Exception raised when attempting to parse a file which has no section headers.</source>
          <target state="translated">当试图解析一个没有节头的文件时引发异常。</target>
        </trans-unit>
        <trans-unit id="c79f27b9a9e561a4cfaa3a6453eb34419222db51" translate="yes" xml:space="preserve">
          <source>Exception raised when errors occur attempting to parse a file.</source>
          <target state="translated">试图解析文件时发生错误时引发的异常。</target>
        </trans-unit>
        <trans-unit id="631784ac2fbe83dd79545eb9ccb32e5e4637a3f2" translate="yes" xml:space="preserve">
          <source>Exception raised when non-blocking &lt;a href=&quot;#queue.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#queue.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt;) is called on a &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; object which is empty.</source>
          <target state="translated">在空的&lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;对象上调用非阻塞&lt;a href=&quot;#queue.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#queue.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;）时引发的异常。</target>
        </trans-unit>
        <trans-unit id="46b915457295e62b46f8751e8312793a4805b076" translate="yes" xml:space="preserve">
          <source>Exception raised when non-blocking &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt;&lt;code&gt;put_nowait()&lt;/code&gt;&lt;/a&gt;) is called on a &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; object which is full.</source>
          <target state="translated">在&lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt; &lt;code&gt;put_nowait()&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;对象上调用非阻塞&lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;（或put_nowait（））时引发的异常。</target>
        </trans-unit>
        <trans-unit id="c1b955eb00c6914a5e6e63306f665ace77961838" translate="yes" xml:space="preserve">
          <source>Exception raised when something can&amp;rsquo;t be encoded using the binhex format (for example, a filename is too long to fit in the filename field), or when input is not properly encoded binhex data.</source>
          <target state="translated">当某些内容无法使用Binhex格式编码时（例如，文件名太长而无法在filename字段中容纳），或者输入未正确编码为Binhex数据时，会引发异常。</target>
        </trans-unit>
        <trans-unit id="c563209ae42fb0b135aae77ecc57a734af366ac5" translate="yes" xml:space="preserve">
          <source>Exception raised when string interpolation cannot be completed because the number of iterations exceeds &lt;a href=&quot;#configparser.MAX_INTERPOLATION_DEPTH&quot;&gt;&lt;code&gt;MAX_INTERPOLATION_DEPTH&lt;/code&gt;&lt;/a&gt;. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于迭代次数超过&lt;a href=&quot;#configparser.MAX_INTERPOLATION_DEPTH&quot;&gt; &lt;code&gt;MAX_INTERPOLATION_DEPTH&lt;/code&gt; &lt;/a&gt;而无法完成字符串插值时，引发异常。&lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="df8889c1d3d172d311451a8a2ec6064de60c1810" translate="yes" xml:space="preserve">
          <source>Exception raised when the &lt;a href=&quot;#asyncio.Queue.put_nowait&quot;&gt;&lt;code&gt;put_nowait()&lt;/code&gt;&lt;/a&gt; method is called on a queue that has reached its &lt;em&gt;maxsize&lt;/em&gt;.</source>
          <target state="translated">在已达到其&lt;em&gt;maxsize&lt;/em&gt;的队列上调用&lt;a href=&quot;#asyncio.Queue.put_nowait&quot;&gt; &lt;code&gt;put_nowait()&lt;/code&gt; &lt;/a&gt;方法时引发异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba8897a682d567138428408ab9df581f4594f8ab" translate="yes" xml:space="preserve">
          <source>Exception raised when the locale passed to &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; is not recognized.</source>
          <target state="translated">当传递给&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;的语言环境无法识别时引发异常。</target>
        </trans-unit>
        <trans-unit id="bb3faee804f53ff4db6f433e551c2d08c0c32915" translate="yes" xml:space="preserve">
          <source>Exception raised when the relational integrity of the database is affected, e.g. a foreign key check fails. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当影响数据库的关系完整性时引发异常，例如，外键检查失败。它是&lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="04bb87f4130b4180b1ba156d3a51be1dea3bdb9b" translate="yes" xml:space="preserve">
          <source>Exception raised when the source text into which substitutions are made does not conform to the required syntax. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当进行替换的源文本不符合要求的语法时，引发异常。&lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="532ac37a2d888c287b65abc3fd3680b66b2ca974" translate="yes" xml:space="preserve">
          <source>Exception raised when there is some error in the response data.</source>
          <target state="translated">当响应数据中出现错误时,发出异常。</target>
        </trans-unit>
        <trans-unit id="224d233b1223bd5e534e4c92fba78ccc504d48bd" translate="yes" xml:space="preserve">
          <source>Exception to be raised when a test fails. This is deprecated in favor of &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;-based tests and &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s assertion methods.</source>
          <target state="translated">测试失败时引发的异常。不推荐使用此方法，而推荐使用基于&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的测试和&lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;的断言方法。</target>
        </trans-unit>
        <trans-unit id="6f961bbc4f35e8d30c38075dc27127e8e39cb1ef" translate="yes" xml:space="preserve">
          <source>Exception tuple (&amp;agrave; la &lt;code&gt;sys.exc_info&lt;/code&gt;) or, if no exception has occurred, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">异常元组（ &lt;code&gt;sys.exc_info&lt;/code&gt; ）；或者，如果未发生异常，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e151058274b1944e593ebbb920057fb138f7f000" translate="yes" xml:space="preserve">
          <source>Exception when a node does not exist in the referenced context. For example, &lt;code&gt;NamedNodeMap.removeNamedItem()&lt;/code&gt; will raise this if the node passed in does not exist in the map.</source>
          <target state="translated">当引用上下文中不存在节点时发生异常。例如，如果传入的节点在地图中不存在，则 &lt;code&gt;NamedNodeMap.removeNamedItem()&lt;/code&gt; 将引发此事件。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="369b35fc723492a4b2012ba48db7d24ca448035c" translate="yes" xml:space="preserve">
          <source>Exceptions and Error Handling</source>
          <target state="translated">异常和错误处理</target>
        </trans-unit>
        <trans-unit id="ccf1573108e16e6d38ba26ddc8eacf022ebd30f9" translate="yes" xml:space="preserve">
          <source>Exceptions and warnings</source>
          <target state="translated">例外情况和警告</target>
        </trans-unit>
        <trans-unit id="df71308e3d32ab453e4717e512971ad84660cee6" translate="yes" xml:space="preserve">
          <source>Exceptions defined in this module all inherit from &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块中定义的异常都继承自&lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="befafc060d7dd8ad7d50727f39e2bf81a426267d" translate="yes" xml:space="preserve">
          <source>Exceptions in this module are coded as class instances:</source>
          <target state="translated">本模块中的异常被编码为类实例。</target>
        </trans-unit>
        <trans-unit id="a249548d6691d3290bc9485f451db6dd6febec8a" translate="yes" xml:space="preserve">
          <source>Exceptions raised by finalizer callbacks during garbage collection will be shown on the standard error output, but cannot be propagated. They are handled in the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method or a weak reference&amp;rsquo;s callback.</source>
          <target state="translated">垃圾回收过程中终结器回调引发的异常将显示在标准错误输出上，但不能传播。它们的处理方式与从对象的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;方法或弱引用的回调引发的异常相同。</target>
        </trans-unit>
        <trans-unit id="d796429598fba2d1c58a59f6f3ee19a6a7783970" translate="yes" xml:space="preserve">
          <source>Exceptions raised by finalizer callbacks during garbage collection will be shown on the standard error output, but cannot be propagated. They are handled in the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method or a weak reference&amp;rsquo;s callback.</source>
          <target state="translated">垃圾回收期间终结器回调引发的异常将显示在标准错误输出上，但不能传播。它们的处理方式与从对象的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;方法或弱引用的回调引发的异常相同。</target>
        </trans-unit>
        <trans-unit id="a8f3eecca356dbdba89502d5f4b7f7be1cd1bf0d" translate="yes" xml:space="preserve">
          <source>Exceptions raised by the callback will be noted on the standard error output, but cannot be propagated; they are handled in exactly the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">回调引发的异常将在标准错误输出中记录，但不能传播；它们的处理方式与对象的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;方法引发的异常完全相同。</target>
        </trans-unit>
        <trans-unit id="c86df5cc027824161d8e65075c77d500a0c90077" translate="yes" xml:space="preserve">
          <source>Exceptions raised by the callback will be noted on the standard error output, but cannot be propagated; they are handled in exactly the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">回调引发的异常将在标准错误输出中记录，但不能传播；它们的处理方式与对象的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;方法引发的异常相同。</target>
        </trans-unit>
        <trans-unit id="602a17b7f1d4f59e242e69ecf8bb008f79200e74" translate="yes" xml:space="preserve">
          <source>Exceptions raised in the child process, before the new program has started to execute, will be re-raised in the parent.</source>
          <target state="translated">在新程序开始执行之前,在子进程中引发的异常将在父进程中重新引发。</target>
        </trans-unit>
        <trans-unit id="0a861a497465e6d5e961800a373ccee2f73c3c64" translate="yes" xml:space="preserve">
          <source>Exchange full</source>
          <target state="translated">交换完整</target>
        </trans-unit>
        <trans-unit id="40111bff621e73a44959a0a4b3c7a85b2711035e" translate="yes" xml:space="preserve">
          <source>Exchanging objects between processes</source>
          <target state="translated">流程之间交换对象</target>
        </trans-unit>
        <trans-unit id="c31466ffb66056cc1102e73d3e7736f02ea55d33" translate="yes" xml:space="preserve">
          <source>Exclamation</source>
          <target state="translated">Exclamation</target>
        </trans-unit>
        <trans-unit id="08b88e08cae7b5bb1e4110d2f9f58f64e8ddb558" translate="yes" xml:space="preserve">
          <source>Excluded time components are truncated, not rounded.</source>
          <target state="translated">排除的时间成分是截断的,不是四舍五入。</target>
        </trans-unit>
        <trans-unit id="b63162a783524a1ec5efa41e95fe5121b9b98b72" translate="yes" xml:space="preserve">
          <source>Exec format error</source>
          <target state="translated">执行格式错误</target>
        </trans-unit>
        <trans-unit id="61e507592e1b0d9543a474be7a1e6119f6855048" translate="yes" xml:space="preserve">
          <source>Executable documentation / literate testing.</source>
          <target state="translated">可执行文件/识字测试。</target>
        </trans-unit>
        <trans-unit id="05733ba7a5338b29357c9f188c1b0ffe46bb2809" translate="yes" xml:space="preserve">
          <source>Executables named here without a full path will be searched in the directories given in the &lt;code id=&quot;index-3&quot;&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="translated">在没有完整路径的情况下在此处命名的可执行文件将在 &lt;code id=&quot;index-3&quot;&gt;PATH&lt;/code&gt; 环境变量中给定的目录中搜索。</target>
        </trans-unit>
        <trans-unit id="286f2d3129a2b679620ae0bdaa405b24e672bf6a" translate="yes" xml:space="preserve">
          <source>Execute &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; subclasses passed to the function. The function scans the classes for methods starting with the prefix &lt;code&gt;test_&lt;/code&gt; and executes the tests individually.</source>
          <target state="translated">执行传递给函数的&lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;子类。该函数在类中扫描以前缀 &lt;code&gt;test_&lt;/code&gt; 开头的方法，并分别执行测试。</target>
        </trans-unit>
        <trans-unit id="a241e75b43251ba0271bd81025aacaae9b72202b" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;callable(*args, **kwargs)&lt;/code&gt; code in the context object the &lt;em&gt;run&lt;/em&gt; method is called on. Return the result of the execution or propagate an exception if one occurred.</source>
          <target state="translated">在 &lt;code&gt;callable(*args, **kwargs)&lt;/code&gt; &lt;em&gt;run&lt;/em&gt;方法的上下文对象中执行callable（* args，** kwargs）代码。返回执行结果或传播异常（如果发生）。</target>
        </trans-unit>
        <trans-unit id="69ed63c879a440dcfb6d968855ae91e33bf18942" translate="yes" xml:space="preserve">
          <source>Execute a child program in a new process. On POSIX, the class uses &lt;a href=&quot;os#os.execvp&quot;&gt;&lt;code&gt;os.execvp()&lt;/code&gt;&lt;/a&gt;-like behavior to execute the child program. On Windows, the class uses the Windows &lt;code&gt;CreateProcess()&lt;/code&gt; function. The arguments to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; are as follows.</source>
          <target state="translated">在新进程中执行子程序。在POSIX上，该类使用&lt;a href=&quot;os#os.execvp&quot;&gt; &lt;code&gt;os.execvp()&lt;/code&gt; &lt;/a&gt;的行为来执行子程序。在Windows上，该类使用Windows &lt;code&gt;CreateProcess()&lt;/code&gt; 函数。&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;的参数如下。</target>
        </trans-unit>
        <trans-unit id="e6a91ef61eaa929da297d5aebf9277979dbd795f" translate="yes" xml:space="preserve">
          <source>Execute a code object. When an exception occurs, &lt;a href=&quot;#code.InteractiveInterpreter.showtraceback&quot;&gt;&lt;code&gt;showtraceback()&lt;/code&gt;&lt;/a&gt; is called to display a traceback. All exceptions are caught except &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;, which is allowed to propagate.</source>
          <target state="translated">执行一个代码对象。发生异常时，将调用&lt;a href=&quot;#code.InteractiveInterpreter.showtraceback&quot;&gt; &lt;code&gt;showtraceback()&lt;/code&gt; &lt;/a&gt;以显示回溯。除&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;之外，所有异常都被捕获，允许其传播。</target>
        </trans-unit>
        <trans-unit id="7e81ce564d602b517c838c91c8da9ba683c00772" translate="yes" xml:space="preserve">
          <source>Execute a readline initialization file. The default filename is the last filename used. This calls &lt;code&gt;rl_read_init_file()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">执行readline初始化文件。默认文件名是最后使用的文件名。这将在基础库中调用 &lt;code&gt;rl_read_init_file()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba07fbeef18083f616ae510801b11d8066bf6eb3" translate="yes" xml:space="preserve">
          <source>Execute command args with messages identified by UID, rather than message number. Returns response appropriate to command. At least one argument must be supplied; if none are provided, the server will return an error and an exception will be raised.</source>
          <target state="translated">执行命令args,信息由UID标识,而不是信息编号。返回与命令相应的响应。至少必须提供一个参数,如果没有提供,服务器将返回一个错误并引发异常。</target>
        </trans-unit>
        <trans-unit id="81aec3d478a802d061fd2f1de4579ce8cc091bb6" translate="yes" xml:space="preserve">
          <source>Execute end of drag-and-drop functions.</source>
          <target state="translated">执行拖放功能的结束。</target>
        </trans-unit>
        <trans-unit id="31b06121b9ec4fe8849d3894f93b635bf18f224d" translate="yes" xml:space="preserve">
          <source>Execute the (one-line) &lt;em&gt;statement&lt;/em&gt; in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. To set a global variable, you can prefix the assignment command with a &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; statement on the same line, e.g.:</source>
          <target state="translated">在当前堆栈框架的上下文中执行（单行）&lt;em&gt;语句&lt;/em&gt;。除非语句的第一个单词类似于调试器命令，否则可以省略感叹号。要设置全局变量，可以在同一行的赋值命令前加上&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#global&quot;&gt; &lt;code&gt;global&lt;/code&gt; &lt;/a&gt;语句，例如：</target>
        </trans-unit>
        <trans-unit id="43a2d8be28eb3a8b0ac4892111bfc50e0b9f95c8" translate="yes" xml:space="preserve">
          <source>Execute the (one-line) &lt;em&gt;statement&lt;/em&gt; in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. To set a global variable, you can prefix the assignment command with a &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; statement on the same line, e.g.:</source>
          <target state="translated">在当前堆栈框架的上下文中执行（单行）&lt;em&gt;语句&lt;/em&gt;。除非语句的第一个单词类似于调试器命令，否则可以省略感叹号。要设置全局变量，可以在同一行的赋值命令前加上&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#global&quot;&gt; &lt;code&gt;global&lt;/code&gt; &lt;/a&gt;语句，例如：</target>
        </trans-unit>
        <trans-unit id="826334beb56840bb5c7db5683c5e7ca7ddf91968" translate="yes" xml:space="preserve">
          <source>Execute the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt; and return the result.</source>
          <target state="translated">执行&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt;并返回结果。</target>
        </trans-unit>
        <trans-unit id="208568cb191f36b8a472e3e6ac5a9cae457cbb80" translate="yes" xml:space="preserve">
          <source>Execute the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt; and return the result.</source>
          <target state="translated">执行&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt;并返回结果。</target>
        </trans-unit>
        <trans-unit id="993f7355e3e5a673bcbcdb78e35376ca7db42fbf" translate="yes" xml:space="preserve">
          <source>Execute the &lt;em&gt;statement&lt;/em&gt; (given as a string or a code object) under debugger control. The debugger prompt appears before any code is executed; you can set breakpoints and type &lt;a href=&quot;#pdbcommand-continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt;, or you can step through the statement using &lt;a href=&quot;#pdbcommand-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; (all these commands are explained below). The optional &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; arguments specify the environment in which the code is executed; by default the dictionary of the module &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; is used. (See the explanation of the built-in &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; functions.)</source>
          <target state="translated">在调试器的控制下执行该&lt;em&gt;语句&lt;/em&gt;（以字符串或代码对象的形式提供）。在执行任何代码之前，调试器提示会出现。您可以设置断点并键入&lt;a href=&quot;#pdbcommand-continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt;，也可以使用&lt;a href=&quot;#pdbcommand-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;逐步执行该语句（下面将解释所有这些命令）。可选的&lt;em&gt;globals&lt;/em&gt;和&lt;em&gt;locals&lt;/em&gt;参数指定执行代码的环境；默认情况下，使用模块&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;的字典。 （请参阅内置&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;函数的说明。）</target>
        </trans-unit>
        <trans-unit id="957c0a46c8c5eae402bb66fc52f1f0746167605d" translate="yes" xml:space="preserve">
          <source>Execute the SQL query of the view, through &lt;code&gt;MSIViewExecute()&lt;/code&gt;. If &lt;em&gt;params&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it is a record describing actual values of the parameter tokens in the query.</source>
          <target state="translated">通过 &lt;code&gt;MSIViewExecute()&lt;/code&gt; 执行视图的SQL查询。如果&lt;em&gt;params&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; ，则它是一条记录，描述查询中参数标记的实际值。</target>
        </trans-unit>
        <trans-unit id="3d06b0236831d9b4a24c24c13a620443b6325555" translate="yes" xml:space="preserve">
          <source>Execute the code at the named filesystem location and return the resulting module globals dictionary. As with a script name supplied to the CPython command line, the supplied path may refer to a Python source file, a compiled bytecode file or a valid sys.path entry containing a &lt;code&gt;__main__&lt;/code&gt; module (e.g. a zipfile containing a top-level &lt;code&gt;__main__.py&lt;/code&gt; file).</source>
          <target state="translated">在指定的文件系统位置执行代码，然后返回生成的模块全局字典。与提供给CPython命令行的脚本名称一样，提供的路径可能指向Python源文件，编译的字节码文件或包含 &lt;code&gt;__main__&lt;/code&gt; 模块的有效sys.path条目（例如，包含顶级 &lt;code&gt;__main__.py&lt;/code&gt; 的zipfile）。文件）。</target>
        </trans-unit>
        <trans-unit id="793598dfa7dcb5d5d2f8a7449ed34dd13e3bc919" translate="yes" xml:space="preserve">
          <source>Execute the code of the specified module and return the resulting module globals dictionary. The module&amp;rsquo;s code is first located using the standard import mechanism (refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for details) and then executed in a fresh module namespace.</source>
          <target state="translated">执行指定模块的代码，并返回生成的模块全局字典。首先使用标准导入机制定位模块的代码（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;），然后在新的模块名称空间中执行。</target>
        </trans-unit>
        <trans-unit id="9e21a77bd94392e4d0027b41d97cf1fc40ff6a2e" translate="yes" xml:space="preserve">
          <source>Execute the command (a string) in a subshell. This is implemented by calling the Standard C function &lt;code&gt;system()&lt;/code&gt;, and has the same limitations. Changes to &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;, etc. are not reflected in the environment of the executed command. If &lt;em&gt;command&lt;/em&gt; generates any output, it will be sent to the interpreter standard output stream.</source>
          <target state="translated">在子外壳程序中执行命令（字符串）。这是通过调用标准C函数 &lt;code&gt;system()&lt;/code&gt; 来实现的，并且具有相同的限制。对&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;等的更改不会反映在已执行命令的环境中。如果&lt;em&gt;命令&lt;/em&gt;生成任何输出，它将被发送到解释器标准输出流。</target>
        </trans-unit>
        <trans-unit id="2aedf6c540cf5d6012a301638f91c6d689e3a5db" translate="yes" xml:space="preserve">
          <source>Execute the command and gather statistics from the execution with the current tracing parameters, in the defined global and local environments. If not defined, &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; default to empty dictionaries.</source>
          <target state="translated">在定义的全局和局部环境中，执行命令并使用当前的跟踪参数从执行中收集统计信息。如果未定义，则&lt;em&gt;全局变量&lt;/em&gt;和&lt;em&gt;本地&lt;/em&gt;&lt;em&gt;变量&lt;/em&gt;默认为空字典。</target>
        </trans-unit>
        <trans-unit id="80a05e02bcf359c90586f52db20dad5469639bd2" translate="yes" xml:space="preserve">
          <source>Execute the command and gather statistics from the execution with the current tracing parameters. &lt;em&gt;cmd&lt;/em&gt; must be a string or code object, suitable for passing into &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">执行命令并使用当前跟踪参数从执行中收集统计信息。&lt;em&gt;cmd&lt;/em&gt;必须是字符串或代码对象，适合传递给&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="734e46faf8e21459ae0c946eb0235e32ee99537b" translate="yes" xml:space="preserve">
          <source>Execute the current line, stop at the first possible occasion (either in a function that is called or on the next line in the current function).</source>
          <target state="translated">执行当前行,在第一个可能的场合停止(无论是在被调用的函数中还是在当前函数的下一行)。</target>
        </trans-unit>
        <trans-unit id="b63fd92562c30795dffe275ecbc6d69bedc43beb" translate="yes" xml:space="preserve">
          <source>Execute the init line provided in the &lt;em&gt;string&lt;/em&gt; argument. This calls &lt;code&gt;rl_parse_and_bind()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">执行&lt;em&gt;字符串&lt;/em&gt;参数中提供的init行。这将在基础库中调用 &lt;code&gt;rl_parse_and_bind()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9a25ececa2495c95f119e64a7b4b8eb079e7b80" translate="yes" xml:space="preserve">
          <source>Execute the program &lt;em&gt;path&lt;/em&gt; in a new process.</source>
          <target state="translated">在新进程中执行程序&lt;em&gt;路径&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4fc211867504f03ecbc0ba4699cf8ff7d3f11f2" translate="yes" xml:space="preserve">
          <source>Execute the string &lt;em&gt;cmd&lt;/em&gt; in a shell with &lt;code&gt;Popen.check_output()&lt;/code&gt; and return a 2-tuple &lt;code&gt;(exitcode, output)&lt;/code&gt;. The locale encoding is used; see the notes on &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt; for more details.</source>
          <target state="translated">在外壳程序中使用 &lt;code&gt;Popen.check_output()&lt;/code&gt; 执行字符串&lt;em&gt;cmd&lt;/em&gt;并返回一个2元组 &lt;code&gt;(exitcode, output)&lt;/code&gt; 。使用语言环境编码；有关更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;#frequently-used-arguments&quot;&gt;常用参数&amp;rdquo;中&lt;/a&gt;的注释。</target>
        </trans-unit>
        <trans-unit id="3e7484258f8f0d962a52cb295082cfc4486e5526" translate="yes" xml:space="preserve">
          <source>Executes an SQL command against all parameter sequences or mappings found in the sequence &lt;em&gt;seq_of_parameters&lt;/em&gt;. The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module also allows using an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding parameters instead of a sequence.</source>
          <target state="translated">对序列&lt;em&gt;seq_of_parameters中&lt;/em&gt;找到的所有参数序列或映射执行SQL命令。的&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 的&lt;/a&gt;模块还允许使用&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;产生的参数，而不是一个序列。</target>
        </trans-unit>
        <trans-unit id="dfb8f22d4ae4cfd8596a107d50ed4e22cc848004" translate="yes" xml:space="preserve">
          <source>Executes an SQL command against all parameter sequences or mappings found in the sequence &lt;em&gt;seq_of_parameters&lt;/em&gt;. The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module also allows using an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding parameters instead of a sequence.</source>
          <target state="translated">对序列&lt;em&gt;seq_of_parameters中&lt;/em&gt;找到的所有参数序列或映射执行SQL命令。的&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 的&lt;/a&gt;模块还允许使用&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;产生的参数，而不是一个序列。</target>
        </trans-unit>
        <trans-unit id="5fed61f794b123d4df64a51baba8f0490dd462f4" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement. The SQL statement may be parameterized (i. e. placeholders instead of SQL literals). The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module supports two kinds of placeholders: question marks (qmark style) and named placeholders (named style).</source>
          <target state="translated">执行一条SQL语句。可以对SQL语句进行参数化（即，使用占位符代替SQL文字）。在&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 的&lt;/a&gt;模块支持两种占位符：问号（QMARK风格）和命名占位符（命名样式）。</target>
        </trans-unit>
        <trans-unit id="c49ddd797cbb0588fd381fc136bcc980a935ae82" translate="yes" xml:space="preserve">
          <source>Executing code in thread or process pools</source>
          <target state="translated">在线程或进程池中执行代码</target>
        </trans-unit>
        <trans-unit id="de93521cc9f60a060ec9a4429e441b99ed1e28ff" translate="yes" xml:space="preserve">
          <source>Executing the event means executing &lt;code&gt;action(*argument, **kwargs)&lt;/code&gt;. &lt;em&gt;argument&lt;/em&gt; is a sequence holding the positional arguments for &lt;em&gt;action&lt;/em&gt;. &lt;em&gt;kwargs&lt;/em&gt; is a dictionary holding the keyword arguments for &lt;em&gt;action&lt;/em&gt;.</source>
          <target state="translated">执行事件意味着执行 &lt;code&gt;action(*argument, **kwargs)&lt;/code&gt; 。&lt;em&gt;参数&lt;/em&gt;是包含&lt;em&gt;动作&lt;/em&gt;位置参数的序列。&lt;em&gt;kwargs&lt;/em&gt;是一本字典，其中包含用于&lt;em&gt;操作&lt;/em&gt;的关键字参数。</target>
        </trans-unit>
        <trans-unit id="b44827a87c41a75678cdd5f76bd61447a3fc10f5" translate="yes" xml:space="preserve">
          <source>Execution of Python signal handlers</source>
          <target state="translated">Python信号处理程序的执行</target>
        </trans-unit>
        <trans-unit id="ed3931e45d9bc3ce577741dbd125810e45a2b826" translate="yes" xml:space="preserve">
          <source>Executor Objects</source>
          <target state="translated">执行者对象</target>
        </trans-unit>
        <trans-unit id="211c10fefffd8e3b3e355bf1edcb1832fad0f9ca" translate="yes" xml:space="preserve">
          <source>Exhaust as many code paths as possible. Test where branching occurs and thus tailor input to make sure as many different paths through the code are taken.</source>
          <target state="translated">尽可能多地排查代码路径。测试发生分支的地方,从而调整输入,以确保尽可能多的不同路径通过代码。</target>
        </trans-unit>
        <trans-unit id="222f4735cc04fbb94d3f36bb2ec690b85bf1cebb" translate="yes" xml:space="preserve">
          <source>Existing context managers that already have a base class can be extended by using &lt;code&gt;ContextDecorator&lt;/code&gt; as a mixin class:</source>
          <target state="translated">可以通过使用 &lt;code&gt;ContextDecorator&lt;/code&gt; 作为mixin类来扩展已经具有基类的现有上下文管理器：</target>
        </trans-unit>
        <trans-unit id="f83b6fe3aebf13744e866019556d9129cd7a55be" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Exit</target>
        </trans-unit>
        <trans-unit id="8dc762b6cd999e9e7c339e2a9ffd275e4e6e9d6b" translate="yes" xml:space="preserve">
          <source>Exit Windows</source>
          <target state="translated">退出窗口</target>
        </trans-unit>
        <trans-unit id="0eb6852fe58ab846e7bbe411d7c5e62bb4d27841" translate="yes" xml:space="preserve">
          <source>Exit code that means a specified host did not exist.</source>
          <target state="translated">表示指定主机不存在的退出代码。</target>
        </trans-unit>
        <trans-unit id="7a22f8343aa29394ba70bf5dc7afa73c08926734" translate="yes" xml:space="preserve">
          <source>Exit code that means a specified user did not exist.</source>
          <target state="translated">表示指定用户不存在的退出代码。</target>
        </trans-unit>
        <trans-unit id="1e96d47cca855bf6edef7796cdce40087e984555" translate="yes" xml:space="preserve">
          <source>Exit code that means a temporary failure occurred. This indicates something that may not really be an error, such as a network connection that couldn&amp;rsquo;t be made during a retryable operation.</source>
          <target state="translated">退出代码，表示发生了暂时的故障。这表示可能并非真正错误的内容，例如在可重试操作期间无法建立的网络连接。</target>
        </trans-unit>
        <trans-unit id="130b0662bd564bed3b370b021be7c79e675673ec" translate="yes" xml:space="preserve">
          <source>Exit code that means a user specified output file could not be created.</source>
          <target state="translated">表示无法创建用户指定的输出文件的退出代码。</target>
        </trans-unit>
        <trans-unit id="ee6998f7707f8890d572b71f35265321e03105a3" translate="yes" xml:space="preserve">
          <source>Exit code that means an input file did not exist or was not readable.</source>
          <target state="translated">表示输入文件不存在或不可读的退出代码。</target>
        </trans-unit>
        <trans-unit id="9105cdf46e59b903bc936574e1e7533cdf138f82" translate="yes" xml:space="preserve">
          <source>Exit code that means an internal software error was detected.</source>
          <target state="translated">表示检测到内部软件错误的退出代码。</target>
        </trans-unit>
        <trans-unit id="1d74434dbdfc578d821f4318fe90a51b17a17cd4" translate="yes" xml:space="preserve">
          <source>Exit code that means an operating system error was detected, such as the inability to fork or create a pipe.</source>
          <target state="translated">表示检测到操作系统错误的退出代码,如无法分叉或创建管道。</target>
        </trans-unit>
        <trans-unit id="05d48920a0aebcc6b3c4c2390c6c09782f77ea3e" translate="yes" xml:space="preserve">
          <source>Exit code that means no error occurred.</source>
          <target state="translated">表示没有发生错误的退出代码。</target>
        </trans-unit>
        <trans-unit id="0f7bc1803a4a72d74f632ceb8f951a754f403608" translate="yes" xml:space="preserve">
          <source>Exit code that means some system file did not exist, could not be opened, or had some other kind of error.</source>
          <target state="translated">表示某个系统文件不存在、无法打开或有其他错误的退出代码。</target>
        </trans-unit>
        <trans-unit id="873b690550da75d449939d35005ee675abb600c4" translate="yes" xml:space="preserve">
          <source>Exit code that means something like &amp;ldquo;an entry was not found&amp;rdquo;.</source>
          <target state="translated">退出代码，表示&amp;ldquo;找不到条目&amp;rdquo;之类的内容。</target>
        </trans-unit>
        <trans-unit id="ae632ba3b2d0e464ffc16d4e6f9467aeab63b17f" translate="yes" xml:space="preserve">
          <source>Exit code that means that a protocol exchange was illegal, invalid, or not understood.</source>
          <target state="translated">表示协议交换非法、无效或不理解的退出代码。</target>
        </trans-unit>
        <trans-unit id="2236398f4560c2c3270ca6afed0572a5a292e10b" translate="yes" xml:space="preserve">
          <source>Exit code that means that a required service is unavailable.</source>
          <target state="translated">表示所需服务不可用的退出代码。</target>
        </trans-unit>
        <trans-unit id="2769a4e9e329eedb10d1c8259f8c1431a9d913e1" translate="yes" xml:space="preserve">
          <source>Exit code that means that an error occurred while doing I/O on some file.</source>
          <target state="translated">表示在某个文件上进行I/O时发生错误的退出代码。</target>
        </trans-unit>
        <trans-unit id="18fe8007ea03054c8698943a4e0e8de37594ec1d" translate="yes" xml:space="preserve">
          <source>Exit code that means that some kind of configuration error occurred.</source>
          <target state="translated">表示发生某种配置错误的退出代码。</target>
        </trans-unit>
        <trans-unit id="c7fbf7f46a8ce37387db819583c55d99b5c0a745" translate="yes" xml:space="preserve">
          <source>Exit code that means that there were insufficient permissions to perform the operation (but not intended for file system problems).</source>
          <target state="translated">意味着执行操作的权限不足的退出代码(但不是针对文件系统问题)。</target>
        </trans-unit>
        <trans-unit id="0045f24ba4cbea5891945395b979e9d9cf52329e" translate="yes" xml:space="preserve">
          <source>Exit code that means the command was used incorrectly, such as when the wrong number of arguments are given.</source>
          <target state="translated">意味着命令使用错误的退出代码,比如给了错误的参数数。</target>
        </trans-unit>
        <trans-unit id="0ab31a146165c6ef2fb3014ef6aa6d6dab33309d" translate="yes" xml:space="preserve">
          <source>Exit code that means the input data was incorrect.</source>
          <target state="translated">表示输入数据不正确的退出代码。</target>
        </trans-unit>
        <trans-unit id="7c7a5953cdb8427212ad792fdc557eb0ada3a393" translate="yes" xml:space="preserve">
          <source>Exit dialog returning current selection.</source>
          <target state="translated">退出对话框,返回当前选择。</target>
        </trans-unit>
        <trans-unit id="e01cb7a32370242cba226e91bd6d151eb568a747" translate="yes" xml:space="preserve">
          <source>Exit dialog returning filename, if any.</source>
          <target state="translated">退出对话框,返回文件名(如有)。</target>
        </trans-unit>
        <trans-unit id="29749cfb9382cb00c435991190794173c3a641de" translate="yes" xml:space="preserve">
          <source>Exit from Python. This is implemented by raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception, so cleanup actions specified by finally clauses of &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements are honored, and it is possible to intercept the exit attempt at an outer level.</source>
          <target state="translated">从Python退出。这是通过引发&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;异常来实现的，因此可以使用&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;语句的finally子句指定的清除操作，并且可以在外部级别拦截出口尝试。</target>
        </trans-unit>
        <trans-unit id="4f1f744d60565c7a347622495b0bff7cd037b37c" translate="yes" xml:space="preserve">
          <source>Exit from Python. This is implemented by raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception, so cleanup actions specified by finally clauses of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements are honored, and it is possible to intercept the exit attempt at an outer level.</source>
          <target state="translated">从Python退出。这是通过引发&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;异常来实现的，因此可以使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;语句的finally子句指定的清除操作，并且有可能在外部级别拦截出口尝试。</target>
        </trans-unit>
        <trans-unit id="ccb0d6a92730bf5e1a73f3bfc4f253e7d84022d0" translate="yes" xml:space="preserve">
          <source>Exit insert char mode</source>
          <target state="translated">退出插入字符模式</target>
        </trans-unit>
        <trans-unit id="031fa31cf206c2ec1cd22ca183b8e96c3c9872e8" translate="yes" xml:space="preserve">
          <source>Exit status of the child process. If the process exited due to a signal, this will be the negative signal number.</source>
          <target state="translated">子进程的退出状态。如果进程因信号而退出,这将是负信号号。</target>
        </trans-unit>
        <trans-unit id="19adb7c9c5eaa16417045df4e6323c37b803665c" translate="yes" xml:space="preserve">
          <source>Exit status of the child process. Typically, an exit status of 0 indicates that it ran successfully.</source>
          <target state="translated">子进程的退出状态。通常情况下,退出状态为0表示运行成功。</target>
        </trans-unit>
        <trans-unit id="782552048b669f3e29d23655320f5c5ec4a69c8d" translate="yes" xml:space="preserve">
          <source>Exit the process with status &lt;em&gt;n&lt;/em&gt;, without calling cleanup handlers, flushing stdio buffers, etc.</source>
          <target state="translated">退出状态为&lt;em&gt;n&lt;/em&gt;的进程，而不调用清理处理程序，刷新stdio缓冲区等。</target>
        </trans-unit>
        <trans-unit id="e568f5a9fa1a0a52b3de44fc53325fcc76e97cc0" translate="yes" xml:space="preserve">
          <source>Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">退出运行时上下文，并返回一个布尔值标志，指示是否应禁止发生的任何异常。如果在执行&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的主体时发生异常，则参数包含异常类型，值和回溯信息。否则，所有三个参数均为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa1387d769b587d725aac2d843518392e062f346" translate="yes" xml:space="preserve">
          <source>Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">退出运行时上下文，并返回一个布尔型标志，指示是否应禁止发生的任何异常。如果在执行&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的主体时发生异常，则参数包含异常类型，值和回溯信息。否则，所有三个参数均为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="813d6a80ed490c32c14fd6b15893f76ab9515615" translate="yes" xml:space="preserve">
          <source>Exiting methods</source>
          <target state="translated">退出方法</target>
        </trans-unit>
        <trans-unit id="f0545bde9ddc8fa1efb4f51bf8ddc1930ca8a6aa" translate="yes" xml:space="preserve">
          <source>Exiting the context manager cleans up any temporary file created when the resource needs to be extracted from e.g. a zip file.</source>
          <target state="translated">退出上下文管理器会清理在需要从 zip 文件等提取资源时创建的任何临时文件。</target>
        </trans-unit>
        <trans-unit id="705912607514938d70ecf589927512f5012e6eed" translate="yes" xml:space="preserve">
          <source>Expand Word</source>
          <target state="translated">扩展词</target>
        </trans-unit>
        <trans-unit id="4b0fc2127b40c104cccfbdb5737f0aa1b76fc944" translate="yes" xml:space="preserve">
          <source>Expand a prefix you have typed to match a full word in the same window; repeat to get a different expansion.</source>
          <target state="translated">展开您输入的前缀,以匹配同一窗口中的完整单词;重复得到不同的扩展。</target>
        </trans-unit>
        <trans-unit id="af74b0c485a7e9735a00ba13b8e6543ff0acd03a" translate="yes" xml:space="preserve">
          <source>Expands all children of &lt;em&gt;node&lt;/em&gt; into &lt;em&gt;node&lt;/em&gt;. Example:</source>
          <target state="translated">将&lt;em&gt;node的&lt;/em&gt;所有子级展开为&lt;em&gt;node&lt;/em&gt;。例：</target>
        </trans-unit>
        <trans-unit id="b6235ec6054cdf78ee69907b788f865a06567cfe" translate="yes" xml:space="preserve">
          <source>Expands environment variable placeholders &lt;code&gt;%NAME%&lt;/code&gt; in strings like &lt;a href=&quot;#winreg.REG_EXPAND_SZ&quot;&gt;&lt;code&gt;REG_EXPAND_SZ&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在诸如&lt;a href=&quot;#winreg.REG_EXPAND_SZ&quot;&gt; &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; 的&lt;/a&gt;字符串中扩展环境变量占位符 &lt;code&gt;%NAME%&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1fd1d786684facabead378e367b48b5f9bad65fb" translate="yes" xml:space="preserve">
          <source>Expansion field data. The &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP Application Note&lt;/a&gt; contains some comments on the internal structure of the data contained in this &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">扩展字段数据。在&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP应用笔记&lt;/a&gt;中包含的数据的内部结构的一些意见包含在此&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="59e2311798f2ce925a5a5bcf558e82fd2f02f1be" translate="yes" xml:space="preserve">
          <source>Expat can optionally do XML namespace processing for you, enabled by providing a value for &lt;em&gt;namespace_separator&lt;/em&gt;. The value must be a one-character string; a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if the string has an illegal length (&lt;code&gt;None&lt;/code&gt; is considered the same as omission). When namespace processing is enabled, element type names and attribute names that belong to a namespace will be expanded. The element name passed to the element handlers &lt;code&gt;StartElementHandler&lt;/code&gt; and &lt;code&gt;EndElementHandler&lt;/code&gt; will be the concatenation of the namespace URI, the namespace separator character, and the local part of the name. If the namespace separator is a zero byte (&lt;code&gt;chr(0)&lt;/code&gt;) then the namespace URI and the local part will be concatenated without any separator.</source>
          <target state="translated">通过提供&lt;em&gt;namespace_separator&lt;/em&gt;的值，Expat可以选择为您执行XML名称空间处理。该值必须是一个单字符字符串；一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;如果字符串具有非法长度（将提高 &lt;code&gt;None&lt;/code&gt; 被认为是相同的遗漏）。启用名称空间处理后，属于名称空间的元素类型名称和属性名称将被扩展。传递给元素处理程序 &lt;code&gt;StartElementHandler&lt;/code&gt; 和 &lt;code&gt;EndElementHandler&lt;/code&gt; 的元素名称将是名称空间URI，名称空间分隔符和名称的本地部分的串联。如果名称空间分隔符为零字节（ &lt;code&gt;chr(0)&lt;/code&gt; ），则名称空间URI和本地部分将被串联起来而没有任何分隔符。</target>
        </trans-unit>
        <trans-unit id="da8abdeaaae5e01377deae8fb1c50c19174a8ea8" translate="yes" xml:space="preserve">
          <source>Expat error constants</source>
          <target state="translated">外籍人士错误常数</target>
        </trans-unit>
        <trans-unit id="08105ec54ec812c08ae7f829e3d2d086acf47b22" translate="yes" xml:space="preserve">
          <source>Expat was not able to allocate memory internally.</source>
          <target state="translated">Expat无法在内部分配内存。</target>
        </trans-unit>
        <trans-unit id="ae83915ff1e542a4aa9b192c227278e059870679" translate="yes" xml:space="preserve">
          <source>Expat&amp;rsquo;s internal error number for the specific error. The &lt;a href=&quot;#xml.parsers.expat.errors.messages&quot;&gt;&lt;code&gt;errors.messages&lt;/code&gt;&lt;/a&gt; dictionary maps these error numbers to Expat&amp;rsquo;s error messages. For example:</source>
          <target state="translated">针对特定错误的Expat内部错误号。该&lt;a href=&quot;#xml.parsers.expat.errors.messages&quot;&gt; &lt;code&gt;errors.messages&lt;/code&gt; &lt;/a&gt;字典这些错误号码映射到外籍人士的错误消息。例如：</target>
        </trans-unit>
        <trans-unit id="49b412a0f51820f38bfe44b5bc6f73f29177ee5e" translate="yes" xml:space="preserve">
          <source>ExpatError Exceptions</source>
          <target state="translated">ExpatError Exceptions</target>
        </trans-unit>
        <trans-unit id="247dde85da683c7c073b9190b1453ace6096f3d3" translate="yes" xml:space="preserve">
          <source>Expected failures use the &lt;a href=&quot;#unittest.expectedFailure&quot;&gt;&lt;code&gt;expectedFailure()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">预期的失败使用ExpectedFailure &lt;a href=&quot;#unittest.expectedFailure&quot;&gt; &lt;code&gt;expectedFailure()&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="78647db73123cd8372fb4f4bbcc9f2105592afba" translate="yes" xml:space="preserve">
          <source>Expected output cannot contain an all-whitespace line, since such a line is taken to signal the end of expected output. If expected output does contain a blank line, put &lt;code&gt;&amp;lt;BLANKLINE&amp;gt;&lt;/code&gt; in your doctest example each place a blank line is expected.</source>
          <target state="translated">预期输出不能包含全空白行，因为采用了这样的行来表示预期输出的结束。如果预期输出的确包含空白行，请在您的doctest示例 &lt;code&gt;&amp;lt;BLANKLINE&amp;gt;&lt;/code&gt; 放在每个预期空白行的位置。</target>
        </trans-unit>
        <trans-unit id="93617b006b3706f8adecd6a3c8aad6df6b3318d3" translate="yes" xml:space="preserve">
          <source>Expected output:</source>
          <target state="translated">预期产出:</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="4521cb9e86ffb37d381aebe8d8ce8956c54915a1" translate="yes" xml:space="preserve">
          <source>Explicitly close the audio device. When you are done writing to or reading from an audio device, you should explicitly close it. A closed device cannot be used again.</source>
          <target state="translated">明确关闭音频设备。当您完成对音频设备的写入或读取时,应明确关闭该设备。关闭的设备不能再使用。</target>
        </trans-unit>
        <trans-unit id="4bbffebc70065656746756e2001956fe84cdef41" translate="yes" xml:space="preserve">
          <source>Explicitly pass resources to child processes</source>
          <target state="translated">显式地将资源传递给子进程</target>
        </trans-unit>
        <trans-unit id="6c8f65243d9f006f8c6c4439bd8b8a6b5dfac7c9" translate="yes" xml:space="preserve">
          <source>Explicitly via the column name</source>
          <target state="translated">通过列名明确</target>
        </trans-unit>
        <trans-unit id="8a330a9c7957095585f0e465fcc1e74ca875851e" translate="yes" xml:space="preserve">
          <source>Exponent notation. Prints the number in scientific notation using the letter &amp;lsquo;e&amp;rsquo; to indicate the exponent. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">指数表示法。用字母&amp;ldquo; e&amp;rdquo;以科学计数法打印数字以表示指数。默认精度为 &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13a4114eb5527628350c89f4e332e24a8b6adaf7" translate="yes" xml:space="preserve">
          <source>Exponent notation. Same as &lt;code&gt;'e'&lt;/code&gt; except it uses an upper case &amp;lsquo;E&amp;rsquo; as the separator character.</source>
          <target state="translated">指数表示法。与 &lt;code&gt;'e'&lt;/code&gt; 相同，不同之处在于它使用大写字母&amp;ldquo; E&amp;rdquo;作为分隔符。</target>
        </trans-unit>
        <trans-unit id="3237bbd0fba00be230671cc5c9f06d02aebed723" translate="yes" xml:space="preserve">
          <source>Exponent was lower than &lt;code&gt;Emin&lt;/code&gt; prior to rounding.</source>
          <target state="translated">在四舍五入之前，指数低于 &lt;code&gt;Emin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbc59c1ddea13a6824ca57d6407a1a5c5633bc43" translate="yes" xml:space="preserve">
          <source>Exponential distribution. &lt;em&gt;lambd&lt;/em&gt; is 1.0 divided by the desired mean. It should be nonzero. (The parameter would be called &amp;ldquo;lambda&amp;rdquo;, but that is a reserved word in Python.) Returned values range from 0 to positive infinity if &lt;em&gt;lambd&lt;/em&gt; is positive, and from negative infinity to 0 if &lt;em&gt;lambd&lt;/em&gt; is negative.</source>
          <target state="translated">指数分布。&lt;em&gt;lambd&lt;/em&gt;是1.0除以所需的均值。它应该不为零。（该参数将被称为&amp;ldquo;拉姆达&amp;rdquo;，但是这是在Python保留字。）返回值的范围从0到正无穷大如果&lt;em&gt;lambd&lt;/em&gt;为正，且从负无穷大到0，如果&lt;em&gt;lambd&lt;/em&gt;为负。</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="ffae2a0dbff1d55c82d5123af3372ea49a2b14bb" translate="yes" xml:space="preserve">
          <source>Expressing a percentage:</source>
          <target state="translated">表示一个百分比。</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="be18dee812522c6b5b7a76e5832b6a8e4ca2b812" translate="yes" xml:space="preserve">
          <source>Extend the left side of the deque by appending elements from &lt;em&gt;iterable&lt;/em&gt;. Note, the series of left appends results in reversing the order of elements in the iterable argument.</source>
          <target state="translated">通过添加来自&lt;em&gt;iterable的&lt;/em&gt;元素来扩展双端队列的左侧。请注意，一系列的左附加结果会颠倒可迭代参数中元素的顺序。</target>
        </trans-unit>
        <trans-unit id="f6c82ec936c20f92c0eaa0ffe5c71b79d6e553a1" translate="yes" xml:space="preserve">
          <source>Extend the right side of the deque by appending elements from the iterable argument.</source>
          <target state="translated">通过添加来自可迭代参数的元素来扩展deque的右侧。</target>
        </trans-unit>
        <trans-unit id="ffb6a2c58a4241d2ba27231ce784eb5eb15764da" translate="yes" xml:space="preserve">
          <source>Extend the search path for the modules which comprise a package. Intended use is to place the following code in a package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt;:</source>
          <target state="translated">扩展组成包的模块的搜索路径。预期用途是将以下代码放在包的 &lt;code&gt;__init__.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="8d3082bbd7153cdb35672556257cd022495b60e6" translate="yes" xml:space="preserve">
          <source>Extended header setting. This method is similar to &lt;a href=&quot;#email.message.EmailMessage.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; except that additional header parameters can be provided as keyword arguments. &lt;em&gt;_name&lt;/em&gt; is the header field to add and &lt;em&gt;_value&lt;/em&gt; is the &lt;em&gt;primary&lt;/em&gt; value for the header.</source>
          <target state="translated">扩展头设置。此方法类似于&lt;a href=&quot;#email.message.EmailMessage.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;不同之处在于可以提供其他标头参数作为关键字参数。&lt;em&gt;_name&lt;/em&gt;是要添加的标头字段，&lt;em&gt;_value&lt;/em&gt;是标头的&lt;em&gt;主要&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="a223abaf54dc8e1ab3eeaa89f4cd896ed498bd79" translate="yes" xml:space="preserve">
          <source>Extended header setting. This method is similar to &lt;a href=&quot;#email.message.Message.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; except that additional header parameters can be provided as keyword arguments. &lt;em&gt;_name&lt;/em&gt; is the header field to add and &lt;em&gt;_value&lt;/em&gt; is the &lt;em&gt;primary&lt;/em&gt; value for the header.</source>
          <target state="translated">扩展头设置。此方法类似于&lt;a href=&quot;#email.message.Message.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;不同之处在于可以提供其他标头参数作为关键字参数。&lt;em&gt;_name&lt;/em&gt;是要添加的标头字段，&lt;em&gt;_value&lt;/em&gt;是标头的&lt;em&gt;主要&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="8e0502094d27643a7e46ac113e2ec9103e1bc071" translate="yes" xml:space="preserve">
          <source>Extending &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">扩展&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3afaf5c09876f5a31aa15d2a3378f3f6a609a66e" translate="yes" xml:space="preserve">
          <source>Extending the search algorithm</source>
          <target state="translated">扩展搜索算法</target>
        </trans-unit>
        <trans-unit id="d14fa83017c01db06e1c086ad2b398b643736e71" translate="yes" xml:space="preserve">
          <source>Extends this array with data from the given unicode string. The array must be a type &lt;code&gt;'u'&lt;/code&gt; array; otherwise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;code&gt;array.frombytes(unicodestring.encode(enc))&lt;/code&gt; to append Unicode data to an array of some other type.</source>
          <target state="translated">使用给定unicode字符串中的数据扩展此数组。该数组必须是 &lt;code&gt;'u'&lt;/code&gt; 类型的数组；否则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。使用 &lt;code&gt;array.frombytes(unicodestring.encode(enc))&lt;/code&gt; 将Unicode数据附加到其他类型的数组。</target>
        </trans-unit>
        <trans-unit id="d17e683a4537ea32b7744d3fc9435748a13093cb" translate="yes" xml:space="preserve">
          <source>Extensible JSON encoder for Python data structures.</source>
          <target state="translated">用于Python数据结构的可扩展JSON编码器。</target>
        </trans-unit>
        <trans-unit id="4c367fb4974a67cae0c760962b58c3b9529d4ac9" translate="yes" xml:space="preserve">
          <source>Extension modules should never call &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt;, except to find out what the current locale is. But since the return value can only be used portably to restore it, that is not very useful (except perhaps to find out whether or not the locale is &lt;code&gt;C&lt;/code&gt;).</source>
          <target state="translated">扩展模块永远不要调用&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;，除非要找出当前的语言环境是什么。但是，由于只能将返回值用于移植，因此返回值不是很有用（除非找出语言​​环境是否为 &lt;code&gt;C&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ba4c6b9afff6a08f053cba5afe9f2c4f782f677a" translate="yes" xml:space="preserve">
          <source>Extension types can easily be made to support weak references; see &lt;a href=&quot;https://docs.python.org/3.8/extending/newtypes.html#weakref-support&quot;&gt;Weak Reference Support&lt;/a&gt;.</source>
          <target state="translated">扩展类型可以很容易地支持弱引用。请参阅&lt;a href=&quot;https://docs.python.org/3.8/extending/newtypes.html#weakref-support&quot;&gt;弱参考支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7695e067464a73173175fe091ca6abd7a955315" translate="yes" xml:space="preserve">
          <source>Extension types can easily be made to support weak references; see &lt;a href=&quot;https://docs.python.org/3.9/extending/newtypes.html#weakref-support&quot;&gt;Weak Reference Support&lt;/a&gt;.</source>
          <target state="translated">扩展类型可以很容易地支持弱引用。请参阅&lt;a href=&quot;https://docs.python.org/3.9/extending/newtypes.html#weakref-support&quot;&gt;弱参考支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="6c4a75205736caa4d532e632bbb923d90e882d92" translate="yes" xml:space="preserve">
          <source>Extensions peculiar to a particular operating system are also available through the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module, but using them is of course a threat to portability.</source>
          <target state="translated">特定于操作系统的扩展名也可以通过&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块获得，但是使用它们当然会威胁到可移植性。</target>
        </trans-unit>
        <trans-unit id="59a8e4193969041eb8a334bce8673971dd5ac36d" translate="yes" xml:space="preserve">
          <source>Extensive tutorial plus friendlier widget pages for some of the widgets.</source>
          <target state="translated">广泛的教程加上一些小部件的友好页面。</target>
        </trans-unit>
        <trans-unit id="c970654c58357168192acf4ccb045a4ec563e56d" translate="yes" xml:space="preserve">
          <source>External file attributes.</source>
          <target state="translated">外部文件属性。</target>
        </trans-unit>
        <trans-unit id="80cd74c846919e1cd0c0abf54f9566f2c9d1d9eb" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive as a file object. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If &lt;em&gt;member&lt;/em&gt; is a regular file or a link, an &lt;a href=&quot;io#io.BufferedReader&quot;&gt;&lt;code&gt;io.BufferedReader&lt;/code&gt;&lt;/a&gt; object is returned. For all other existing members, &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned. If &lt;em&gt;member&lt;/em&gt; does not appear in the archive, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">从存档中提取成员作为文件对象。&lt;em&gt;成员&lt;/em&gt;可以是文件名或&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象。如果&lt;em&gt;member&lt;/em&gt;是常规文件或链接，则返回&lt;a href=&quot;io#io.BufferedReader&quot;&gt; &lt;code&gt;io.BufferedReader&lt;/code&gt; &lt;/a&gt;对象。对于所有其他现有成员，&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;返回None。如果&lt;em&gt;成员&lt;/em&gt;未出现在存档中，则会引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2dfc8906bc4cd8f73d660501349acb60a736207e" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive as a file object. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If &lt;em&gt;member&lt;/em&gt; is a regular file or a link, an &lt;a href=&quot;io#io.BufferedReader&quot;&gt;&lt;code&gt;io.BufferedReader&lt;/code&gt;&lt;/a&gt; object is returned. Otherwise, &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">从存档中提取一个成员作为文件对象。&lt;em&gt;成员&lt;/em&gt;可以是文件名或&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象。如果&lt;em&gt;member&lt;/em&gt;是常规文件或链接，则返回&lt;a href=&quot;io#io.BufferedReader&quot;&gt; &lt;code&gt;io.BufferedReader&lt;/code&gt; &lt;/a&gt;对象。否则，&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;返回None。</target>
        </trans-unit>
        <trans-unit id="7153d56eaff624dd418e50a12f92bf3a17f36bf7" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. You can specify a different directory using &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. File attributes (owner, mtime, mode) are set unless &lt;em&gt;set_attrs&lt;/em&gt; is false.</source>
          <target state="translated">使用成员的全名将成员从存档中提取到当前工作目录。尽可能准确地提取其文件信息。&lt;em&gt;成员&lt;/em&gt;可以是文件名或&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象。您可以使用&lt;em&gt;path&lt;/em&gt;指定其他目录。&lt;em&gt;path&lt;/em&gt;可以是类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。除非&lt;em&gt;set_attrs&lt;/em&gt;为false，否则将设置文件属性（所有者，mtime，模式）。</target>
        </trans-unit>
        <trans-unit id="068a6dfa3ec47426ce09e59400eb121e7b5441f7" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. You can specify a different directory using &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. File attributes (owner, mtime, mode) are set unless &lt;em&gt;set_attrs&lt;/em&gt; is false.</source>
          <target state="translated">使用成员的全名将成员从存档中提取到当前工作目录。尽可能准确地提取其文件信息。&lt;em&gt;成员&lt;/em&gt;可以是文件名或&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象。您可以使用&lt;em&gt;path&lt;/em&gt;指定其他目录。&lt;em&gt;path&lt;/em&gt;可以是类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。除非&lt;em&gt;set_attrs&lt;/em&gt;为false，否则将设置文件属性（所有者，mtime，模式）。</target>
        </trans-unit>
        <trans-unit id="49bf42b59323ef5711d695a532178f9f50306eed" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory; &lt;em&gt;member&lt;/em&gt; must be its full name or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. Its file information is extracted as accurately as possible. &lt;em&gt;path&lt;/em&gt; specifies a different directory to extract to. &lt;em&gt;member&lt;/em&gt; can be a filename or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;pwd&lt;/em&gt; is the password used for encrypted files.</source>
          <target state="translated">从存档中提取成员到当前工作目录；&lt;em&gt;成员&lt;/em&gt;必须是其全名或&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;对象。尽可能准确地提取其文件信息。&lt;em&gt;path&lt;/em&gt;指定要提取到的其他目录。&lt;em&gt;成员&lt;/em&gt;可以是文件名或&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;pwd&lt;/em&gt;是用于加密文件的密码。</target>
        </trans-unit>
        <trans-unit id="544c78afc0b0d1b40f8be394b534ce094d439335" translate="yes" xml:space="preserve">
          <source>Extract all doctest examples from the given string, and collect them into a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">从给定的字符串中提取所有doctest示例，并将它们收集到&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;对象中。</target>
        </trans-unit>
        <trans-unit id="cce34faeb7495a0b53c8fa130ee26d2cc6aa07f2" translate="yes" xml:space="preserve">
          <source>Extract all doctest examples from the given string, and return them as a list of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; objects. Line numbers are 0-based. The optional argument &lt;em&gt;name&lt;/em&gt; is a name identifying this string, and is only used for error messages.</source>
          <target state="translated">从给定的字符串中提取所有doctest示例，并将其作为&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;对象的列表返回。行号从0开始。可选参数&lt;em&gt;名称&lt;/em&gt;是标识此字符串的名称，仅用于错误消息。</target>
        </trans-unit>
        <trans-unit id="6c9c93f9c15436e53bdd54ee82b7378dd38a0185" translate="yes" xml:space="preserve">
          <source>Extract all members from the archive to the current working directory or directory &lt;em&gt;path&lt;/em&gt;. If optional &lt;em&gt;members&lt;/em&gt; is given, it must be a subset of the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;. Directory information like owner, modification time and permissions are set after all members have been extracted. This is done to work around two problems: A directory&amp;rsquo;s modification time is reset each time a file is created in it. And, if a directory&amp;rsquo;s permissions do not allow writing, extracting files to it will fail.</source>
          <target state="translated">将存档中的所有成员提取到当前工作目录或目录&lt;em&gt;路径&lt;/em&gt;。如果给出了可选&lt;em&gt;成员&lt;/em&gt;，则它必须是&lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;返回的列表的子集。在提取所有成员之后，将设置目录信息，如所有者，修改时间和权限。这样做可以解决两个问题：每次在目录中创建文件时，都会重置目录的修改时间。而且，如果目录的权限不允许写入，则将文件提取到该目录将失败。</target>
        </trans-unit>
        <trans-unit id="ae6c5957177f81679444f51641f06f6286ee4707" translate="yes" xml:space="preserve">
          <source>Extract all members from the archive to the current working directory. &lt;em&gt;path&lt;/em&gt; specifies a different directory to extract to. &lt;em&gt;members&lt;/em&gt; is optional and must be a subset of the list returned by &lt;a href=&quot;#zipfile.ZipFile.namelist&quot;&gt;&lt;code&gt;namelist()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;pwd&lt;/em&gt; is the password used for encrypted files.</source>
          <target state="translated">将所有成员从存档提取到当前工作目录。&lt;em&gt;path&lt;/em&gt;指定要提取到的其他目录。&lt;em&gt;成员&lt;/em&gt;是可选的，并且必须是&lt;a href=&quot;#zipfile.ZipFile.namelist&quot;&gt; &lt;code&gt;namelist()&lt;/code&gt; &lt;/a&gt;返回的列表的子集。&lt;em&gt;pwd&lt;/em&gt;是用于加密文件的密码。</target>
        </trans-unit>
        <trans-unit id="10ff4d347f866ccd5f2a70db8425173e5abbb3e1" translate="yes" xml:space="preserve">
          <source>Extract cookies from HTTP &lt;em&gt;response&lt;/em&gt; and store them in the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt;, where allowed by policy.</source>
          <target state="translated">从HTTP &lt;em&gt;响应中&lt;/em&gt;提取cookie ，并将其存储在&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; 中&lt;/a&gt;（在策略允许的地方）。</target>
        </trans-unit>
        <trans-unit id="7762c8d14b070a61912e484ba2fc6db8aad38059" translate="yes" xml:space="preserve">
          <source>Extract tarfile into the current directory if &lt;em&gt;output_dir&lt;/em&gt; is not specified.</source>
          <target state="translated">如果未指定&lt;em&gt;output_dir，&lt;/em&gt;则将tarfile提取到当前目录中。</target>
        </trans-unit>
        <trans-unit id="ee747f17d62300fd6c830b297f78009d8493b4da" translate="yes" xml:space="preserve">
          <source>Extract the device major number from a raw device number (usually the &lt;code&gt;st_dev&lt;/code&gt; or &lt;code&gt;st_rdev&lt;/code&gt; field from &lt;code&gt;stat&lt;/code&gt;).</source>
          <target state="translated">从原始设备号（通常是 &lt;code&gt;stat&lt;/code&gt; 的 &lt;code&gt;st_dev&lt;/code&gt; 或 &lt;code&gt;st_rdev&lt;/code&gt; 字段）中提取设备主号码。</target>
        </trans-unit>
        <trans-unit id="5de253fc01d8caa12b19702c93bce330b8060401" translate="yes" xml:space="preserve">
          <source>Extract the device minor number from a raw device number (usually the &lt;code&gt;st_dev&lt;/code&gt; or &lt;code&gt;st_rdev&lt;/code&gt; field from &lt;code&gt;stat&lt;/code&gt;).</source>
          <target state="translated">从原始设备号（通常是 &lt;code&gt;stat&lt;/code&gt; 的 &lt;code&gt;st_dev&lt;/code&gt; 或 &lt;code&gt;st_rdev&lt;/code&gt; 字段）中提取设备次设备号。</target>
        </trans-unit>
        <trans-unit id="3546e06d76818c1a64fd63ff46d39da1c08c38e7" translate="yes" xml:space="preserve">
          <source>Extract the raw traceback from the current stack frame. The return value has the same format as for &lt;a href=&quot;#traceback.extract_tb&quot;&gt;&lt;code&gt;extract_tb()&lt;/code&gt;&lt;/a&gt;. The optional &lt;em&gt;f&lt;/em&gt; and &lt;em&gt;limit&lt;/em&gt; arguments have the same meaning as for &lt;a href=&quot;#traceback.print_stack&quot;&gt;&lt;code&gt;print_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从当前堆栈帧中提取原始回溯。返回值具有与&lt;a href=&quot;#traceback.extract_tb&quot;&gt; &lt;code&gt;extract_tb()&lt;/code&gt; &lt;/a&gt;相同的格式。可选的&lt;em&gt;f&lt;/em&gt;和&lt;em&gt;limit&lt;/em&gt;参数与&lt;a href=&quot;#traceback.print_stack&quot;&gt; &lt;code&gt;print_stack()&lt;/code&gt; &lt;/a&gt;具有相同的含义。</target>
        </trans-unit>
        <trans-unit id="e90fa4052b0c2e280e5fd99db0fbdd283520863d" translate="yes" xml:space="preserve">
          <source>Extract the url from a wrapped URL (that is, a string formatted as &lt;code&gt;&amp;lt;URL:scheme://host/path&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;scheme://host/path&amp;gt;&lt;/code&gt;, &lt;code&gt;URL:scheme://host/path&lt;/code&gt; or &lt;code&gt;scheme://host/path&lt;/code&gt;). If &lt;em&gt;url&lt;/em&gt; is not a wrapped URL, it is returned without changes.</source>
          <target state="translated">从包装的URL中提取URL（即，字符串格式为 &lt;code&gt;&amp;lt;URL:scheme://host/path&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;scheme://host/path&amp;gt;&lt;/code&gt; ， &lt;code&gt;URL:scheme://host/path&lt;/code&gt; 或 &lt;code&gt;scheme://host/path&lt;/code&gt; ）。如果&lt;em&gt;url&lt;/em&gt;不是包装的URL，则不做任何更改就返回它。</target>
        </trans-unit>
        <trans-unit id="80f14583713f04ef76e155d25c0906636fb553b4" translate="yes" xml:space="preserve">
          <source>Extract zipfile into target directory.</source>
          <target state="translated">解压zip文件到目标目录。</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="7a127fcb19d14c22958f0b2767119f711a5ee7e4" translate="yes" xml:space="preserve">
          <source>F flag</source>
          <target state="translated">F旗</target>
        </trans-unit>
        <trans-unit id="07c257b16606b468b4287bbfd069963fcb6c04a5" translate="yes" xml:space="preserve">
          <source>FIFO</source>
          <target state="translated">FIFO</target>
        </trans-unit>
        <trans-unit id="0e2b10e415755511239c761ec49ff29c9352b3b0" translate="yes" xml:space="preserve">
          <source>FIFO.</source>
          <target state="translated">FIFO.</target>
        </trans-unit>
        <trans-unit id="e47e8f6fd115bffcf60d2af9abb109a1fa0925c8" translate="yes" xml:space="preserve">
          <source>FIFOs are pipes that can be accessed like regular files. FIFOs exist until they are deleted (for example with &lt;a href=&quot;#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt;). Generally, FIFOs are used as rendezvous between &amp;ldquo;client&amp;rdquo; and &amp;ldquo;server&amp;rdquo; type processes: the server opens the FIFO for reading, and the client opens it for writing. Note that &lt;a href=&quot;#os.mkfifo&quot;&gt;&lt;code&gt;mkfifo()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t open the FIFO &amp;mdash; it just creates the rendezvous point.</source>
          <target state="translated">FIFO是可以像常规文件一样进行访问的管道。FIFO一直存在直到被删除（例如使用&lt;a href=&quot;#os.unlink&quot;&gt; &lt;code&gt;os.unlink()&lt;/code&gt; &lt;/a&gt;）。通常，FIFO被用作&amp;ldquo;客户端&amp;rdquo;和&amp;ldquo;服务器&amp;rdquo;类型进程之间的集合点：服务器打开FIFO进行读取，而客户端打开FIFO进行写入。请注意，&lt;a href=&quot;#os.mkfifo&quot;&gt; &lt;code&gt;mkfifo()&lt;/code&gt; &lt;/a&gt;不会打开FIFO，而只是创建了集合点。</target>
        </trans-unit>
        <trans-unit id="73792fb55d9abc9e92d1d3ebcd41bd7ba0f108d2" translate="yes" xml:space="preserve">
          <source>FILTER_DIR</source>
          <target state="translated">FILTER_DIR</target>
        </trans-unit>
        <trans-unit id="3d8d38284d7c48984126ae4544c8465c506ee097" translate="yes" xml:space="preserve">
          <source>FLT_RADIX</source>
          <target state="translated">FLT_RADIX</target>
        </trans-unit>
        <trans-unit id="234dca4e2a0e92e5608ec0464e330e76723ea1d3" translate="yes" xml:space="preserve">
          <source>FLT_ROUNDS</source>
          <target state="translated">FLT_ROUNDS</target>
        </trans-unit>
        <trans-unit id="fff53c283733fcf57487666af2c11072c9f49c9f" translate="yes" xml:space="preserve">
          <source>FTP Objects</source>
          <target state="translated">FTP对象</target>
        </trans-unit>
        <trans-unit id="d290164b6f9f0f0391591dd5f84256b1aa55a88a" translate="yes" xml:space="preserve">
          <source>FTPHandler Objects</source>
          <target state="translated">FTPHandler对象</target>
        </trans-unit>
        <trans-unit id="aa3185ffb8ddcb7e8518130ce5be3ff6a65da6ca" translate="yes" xml:space="preserve">
          <source>FTP_TLS Objects</source>
          <target state="translated">FTP_TLS对象</target>
        </trans-unit>
        <trans-unit id="a1c787ee1263352ed63b1407e8cc20b772ec3981" translate="yes" xml:space="preserve">
          <source>Facilities:</source>
          <target state="translated">Facilities:</target>
        </trans-unit>
        <trans-unit id="057a04d70c3eb26b21d6a1fc2b1b41a4dfb8a5c6" translate="yes" xml:space="preserve">
          <source>Factory function for drag-and-drop process.</source>
          <target state="translated">拖放过程的工厂功能。</target>
        </trans-unit>
        <trans-unit id="6f7d036abe80e350d83c5c2ef79b8d3dffb2724d" translate="yes" xml:space="preserve">
          <source>Fails if either of &lt;em&gt;first&lt;/em&gt; or &lt;em&gt;second&lt;/em&gt; does not have a &lt;code&gt;set.difference()&lt;/code&gt; method.</source>
          <target state="translated">如果&lt;em&gt;first&lt;/em&gt;或&lt;em&gt;second&lt;/em&gt;都没有 &lt;code&gt;set.difference()&lt;/code&gt; 方法，则失败。</target>
        </trans-unit>
        <trans-unit id="e8dee02f91d0dedd9886f02de920cf9df2f8dc44" translate="yes" xml:space="preserve">
          <source>Fairly portable uname interface. Returns a &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; containing six attributes: &lt;a href=&quot;#platform.system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.node&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.release&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.machine&quot;&gt;&lt;code&gt;machine&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#platform.processor&quot;&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">相当便携的uname接口。返回包含六个属性的&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt;：&lt;a href=&quot;#platform.system&quot;&gt; &lt;code&gt;system&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#platform.node&quot;&gt; &lt;code&gt;node&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#platform.release&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#platform.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#platform.machine&quot;&gt; &lt;code&gt;machine&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#platform.processor&quot;&gt; &lt;code&gt;processor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="294d81f34aa607f6b9a4fa9aa3bd6b4ade4054e3" translate="yes" xml:space="preserve">
          <source>Fallback Values</source>
          <target state="translated">后备值</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="ac137ed5a5d51689e8820aa48b3c1f650954ec51" translate="yes" xml:space="preserve">
          <source>Fast, floating point arithmetic mean.</source>
          <target state="translated">快,浮点算术平均值。</target>
        </trans-unit>
        <trans-unit id="c85baec0392432a2c74935a26751b47a0c953558" translate="yes" xml:space="preserve">
          <source>Fault Objects</source>
          <target state="translated">故障对象</target>
        </trans-unit>
        <trans-unit id="91f8cc8b15d01ea4c886759792d8b779dea3eea4" translate="yes" xml:space="preserve">
          <source>Fault handler state</source>
          <target state="translated">故障处理机状态</target>
        </trans-unit>
        <trans-unit id="4d5f2566e2cbc8bd29a99af73a71daeccdfbc018" translate="yes" xml:space="preserve">
          <source>Feature Table</source>
          <target state="translated">特征表</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="12c5a78b3238d1421e12eecf4ddf3ff8b1e448d5" translate="yes" xml:space="preserve">
          <source>Feed some text to the parser. It is processed insofar as it consists of complete elements; incomplete data is buffered until more data is fed or &lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is called. &lt;em&gt;data&lt;/em&gt; must be &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将一些文本输入解析器。它是由完整元素组成的；不完整的数据将被缓冲，直到提供更多数据或调用&lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;为止。&lt;em&gt;数据&lt;/em&gt;必须为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f6658ca774a02313850f8d0282b532ca38865c5" translate="yes" xml:space="preserve">
          <source>Feed the given bytes data to the parser.</source>
          <target state="translated">将给定的字节数据送入解析器。</target>
        </trans-unit>
        <trans-unit id="387b29142d787ced69aeae549492449687987c43" translate="yes" xml:space="preserve">
          <source>Feed the parser some more data. &lt;em&gt;data&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; containing one or more lines. The lines can be partial and the parser will stitch such partial lines together properly. The lines can have any of the three common line endings: carriage return, newline, or carriage return and newline (they can even be mixed).</source>
          <target state="translated">向解析器提供更多数据。&lt;em&gt;数据&lt;/em&gt;应该是包含一个或多个行&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;。这些行可以是部分行，并且解析器会将这些部分行正确地缝合在一起。这些行可以具有三个公共行结尾中的任何一个：回车符，换行符或回车符和换行符（它们甚至可以混合使用）。</target>
        </trans-unit>
        <trans-unit id="8d2e25abe9d22776590f8162eed428faabb925ef" translate="yes" xml:space="preserve">
          <source>Feed the parser some more data. &lt;em&gt;data&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; containing one or more lines. The lines can be partial and the parser will stitch such partial lines together properly. The lines can have any of the three common line endings: carriage return, newline, or carriage return and newline (they can even be mixed).</source>
          <target state="translated">向解析器提供更多数据。&lt;em&gt;数据&lt;/em&gt;应该是包含一个或多个行&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;。这些行可以是部分行，并且解析器会将这些部分行正确地缝合在一起。这些行可以具有三个公共行结尾中的任何一个：回车符，换行符或回车符和换行符（它们甚至可以混合使用）。</target>
        </trans-unit>
        <trans-unit id="a50061ac9428ad8cb79bfb2c8ac329810e31e666" translate="yes" xml:space="preserve">
          <source>FeedParser API</source>
          <target state="translated">FeedParser API</target>
        </trans-unit>
        <trans-unit id="4b2cf2461de886a6ab48362af6c696c99b94d007" translate="yes" xml:space="preserve">
          <source>Feeding incomplete chunks to &lt;a href=&quot;#html.parser.HTMLParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; works, but &lt;a href=&quot;#html.parser.HTMLParser.handle_data&quot;&gt;&lt;code&gt;handle_data()&lt;/code&gt;&lt;/a&gt; might be called more than once (unless &lt;em&gt;convert_charrefs&lt;/em&gt; is set to &lt;code&gt;True&lt;/code&gt;):</source>
          <target state="translated">将不完整的块&lt;a href=&quot;#html.parser.HTMLParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt;到feed（）可以工作，但是&lt;a href=&quot;#html.parser.HTMLParser.handle_data&quot;&gt; &lt;code&gt;handle_data()&lt;/code&gt; &lt;/a&gt;可能会多次调用（除非&lt;em&gt;convert_charrefs&lt;/em&gt;设置为 &lt;code&gt;True&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="8c798e0422da17ca64b8b53da08c916bb2d4dba5" translate="yes" xml:space="preserve">
          <source>Feeding string objects into &lt;code&gt;update()&lt;/code&gt; is not supported, as hashes work on bytes, not on characters.</source>
          <target state="translated">不支持将字符串对象输入到 &lt;code&gt;update()&lt;/code&gt; 中，因为哈希处理字节而不是字符。</target>
        </trans-unit>
        <trans-unit id="b3cb49dc70c7bb4c8ba2aa9114340fbd11566992" translate="yes" xml:space="preserve">
          <source>Feeds data to the parser. &lt;em&gt;data&lt;/em&gt; is encoded data.</source>
          <target state="translated">将数据提供给解析器。&lt;em&gt;数据&lt;/em&gt;是编码数据。</target>
        </trans-unit>
        <trans-unit id="63da3e374ffa9eea709999e80cff37c228002165" translate="yes" xml:space="preserve">
          <source>Fetch (parts of) messages. &lt;em&gt;message_parts&lt;/em&gt; should be a string of message part names enclosed within parentheses, eg: &lt;code&gt;&quot;(UID BODY[TEXT])&quot;&lt;/code&gt;. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">提取消息（的一部分）。&lt;em&gt;message_parts&lt;/em&gt;应该是用括号括起来的消息部分名称的字符串，例如： &lt;code&gt;&quot;(UID BODY[TEXT])&quot;&lt;/code&gt; 。返回的数据是消息部分信封和数据的元组。</target>
        </trans-unit>
        <trans-unit id="a353d7de52e3d80c0d9c5a4d72ac4dc117b1a277" translate="yes" xml:space="preserve">
          <source>Fetch and/or change the signal mask of the calling thread. The signal mask is the set of signals whose delivery is currently blocked for the caller. Return the old signal mask as a set of signals.</source>
          <target state="translated">获取和/或更改调用线程的信号掩码。信号掩码是呼叫者当前传递受阻的信号集。将旧的信号掩码作为一组信号返回。</target>
        </trans-unit>
        <trans-unit id="cc3b211a4b23d07ed59e5660c59a281f7c520d6e" translate="yes" xml:space="preserve">
          <source>Fetch truncated part of a message. Returned data is a tuple of message part envelope and data.</source>
          <target state="translated">获取消息的截断部分。返回的数据是消息部分信封和数据的元组。</target>
        </trans-unit>
        <trans-unit id="41a014822c374f4dc32ed7c3bb8b27a133b416fe" translate="yes" xml:space="preserve">
          <source>Fetches all (remaining) rows of a query result, returning a list. Note that the cursor&amp;rsquo;s arraysize attribute can affect the performance of this operation. An empty list is returned when no rows are available.</source>
          <target state="translated">获取查询结果的所有（剩余）行，并返回一个列表。请注意，游标的arraysize属性会影响此操作的性能。如果没有可用的行，则返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="b5c8387f5e5b6662fa105e9b5dc36427bb6cda63" translate="yes" xml:space="preserve">
          <source>Fetches the next row of a query result set, returning a single sequence, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; when no more data is available.</source>
          <target state="translated">获取查询结果集的下一行，返回单个序列，如果没有更多数据可用，则返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2a8b384625d9b783eb012a6161ee49d504b3ea1" translate="yes" xml:space="preserve">
          <source>Fetches the next set of rows of a query result, returning a list. An empty list is returned when no more rows are available.</source>
          <target state="translated">获取查询结果的下一组记录,返回一个列表。当没有可用的记录时,将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="82d6a64de9a0838fcf2235d8ad49a6d8855b7d1d" translate="yes" xml:space="preserve">
          <source>Fetching a &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; instance from an object calls the mock, with no args. Setting it calls the mock with the value being set.</source>
          <target state="translated">从对象获取&lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt;实例将调用模拟，而没有参数。设置它会调用带有设置值的模拟。</target>
        </trans-unit>
        <trans-unit id="d54dbc3819945e4ef1e4f3d81c00a574445b7866" translate="yes" xml:space="preserve">
          <source>Fetching a header value from a &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; results in that header being parsed and a header object created and returned.</source>
          <target state="translated">从&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;获取标头值会导致对该标头进行解析，并创建并返回一个标头对象。</target>
        </trans-unit>
        <trans-unit id="7fdf343dc9e81798f45e8297c11c3eb775196edb" translate="yes" xml:space="preserve">
          <source>Fetching attributes statically</source>
          <target state="translated">静态获取属性</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="2dc913c8c6f4ce49af0f66f51e4ef93d71f78ea2" translate="yes" xml:space="preserve">
          <source>Field &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s can be retrieved from the &lt;em&gt;class&lt;/em&gt;, they are useful for debugging because they can provide useful information:</source>
          <target state="translated">字&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;段描述符&lt;/a&gt; s可以从&lt;em&gt;类中&lt;/em&gt;检索，它们对于调试很有用，因为它们可以提供有用的信息：</target>
        </trans-unit>
        <trans-unit id="f58a808acfe9f9a5304f70174d304e16577af9d3" translate="yes" xml:space="preserve">
          <source>Field &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s can be retrieved from the &lt;em&gt;class&lt;/em&gt;, they are useful for debugging because they can provide useful information:</source>
          <target state="translated">字&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;段描述符&lt;/a&gt;s可以从&lt;em&gt;类中&lt;/em&gt;检索，它们对于调试很有用，因为它们可以提供有用的信息：</target>
        </trans-unit>
        <trans-unit id="a9ad8121718f3a086e20f1b811bdb35613fea58f" translate="yes" xml:space="preserve">
          <source>Field names must be unique within one structure or union. This is not checked, only one field can be accessed when names are repeated.</source>
          <target state="translated">字段名在一个结构或联盟中必须是唯一的。这一点没有被检查,当名称重复时,只能访问一个字段。</target>
        </trans-unit>
        <trans-unit id="1aebfd4803965d0fd4af25c185165627060d49d6" translate="yes" xml:space="preserve">
          <source>Field values can be ints, strings, or instances of the Binary class.</source>
          <target state="translated">字段值可以是ints、字符串或Binary类的实例。</target>
        </trans-unit>
        <trans-unit id="5c2529071dd608545d05e8531aeb3706a1791075" translate="yes" xml:space="preserve">
          <source>Fields with a default value must come after any fields without a default.</source>
          <target state="translated">有默认值的字段必须放在没有默认值的字段之后。</target>
        </trans-unit>
        <trans-unit id="d19959803c490a8117d9f8eafb258f26113cfeed" translate="yes" xml:space="preserve">
          <source>File &amp;amp; Directory Access</source>
          <target state="translated">文件和目录访问</target>
        </trans-unit>
        <trans-unit id="d63d873dbd7f480c6ba1f630266ff8116e6cfb7e" translate="yes" xml:space="preserve">
          <source>File Descriptor Operations</source>
          <target state="translated">文件描述符操作</target>
        </trans-unit>
        <trans-unit id="0d12a3f0ea99ebe85fe967431fc2aa6a3e0fd02b" translate="yes" xml:space="preserve">
          <source>File Formats</source>
          <target state="translated">文件格式</target>
        </trans-unit>
        <trans-unit id="4bade3d77b57056d9a51c2d50dd4f03f30abeec7" translate="yes" xml:space="preserve">
          <source>File Handlers</source>
          <target state="translated">文件处理程序</target>
        </trans-unit>
        <trans-unit id="e6e2940ee51b2dfd01e2af1d2390a9c616642912" translate="yes" xml:space="preserve">
          <source>File Names, Command Line Arguments, and Environment Variables</source>
          <target state="translated">文件名、命令行参数和环境变量。</target>
        </trans-unit>
        <trans-unit id="6dec3d0c4b79541a012c7baa6831c7a5ed83666c" translate="yes" xml:space="preserve">
          <source>File Object Creation</source>
          <target state="translated">文件对象创建</target>
        </trans-unit>
        <trans-unit id="a726cab0d7c518573e2f7003375fc21599153b1b" translate="yes" xml:space="preserve">
          <source>File Operations</source>
          <target state="translated">文件操作</target>
        </trans-unit>
        <trans-unit id="fb6199fbca045175a16aa44e72c21f07a4b53d94" translate="yes" xml:space="preserve">
          <source>File Selectors</source>
          <target state="translated">文件选择器</target>
        </trans-unit>
        <trans-unit id="14692faa66db9ad4f6b25ac054c61284fcee9f47" translate="yes" xml:space="preserve">
          <source>File Separator</source>
          <target state="translated">文件分离器</target>
        </trans-unit>
        <trans-unit id="65d2775d2856db4e2072563cba39b4d84c4b88b1" translate="yes" xml:space="preserve">
          <source>File System limitations</source>
          <target state="translated">文件系统限制</target>
        </trans-unit>
        <trans-unit id="ba50e3ff10f69bbcd78d2b51aa445f4bc91949b8" translate="yes" xml:space="preserve">
          <source>File and Directory Access</source>
          <target state="translated">文件和目录访问</target>
        </trans-unit>
        <trans-unit id="f706e474058c3454a43a75c49c2b8118348979e4" translate="yes" xml:space="preserve">
          <source>File descriptor in bad state</source>
          <target state="translated">文件描述符处于不良状态</target>
        </trans-unit>
        <trans-unit id="a95112fa18cc4f2138e56a1ce528b00f3ae2af02" translate="yes" xml:space="preserve">
          <source>File descriptors are small integers corresponding to a file that has been opened by the current process. For example, standard input is usually file descriptor 0, standard output is 1, and standard error is 2. Further files opened by a process will then be assigned 3, 4, 5, and so forth. The name &amp;ldquo;file descriptor&amp;rdquo; is slightly deceptive; on Unix platforms, sockets and pipes are also referenced by file descriptors.</source>
          <target state="translated">文件描述符是与当前进程已打开的文件相对应的小整数。例如，标准输入通常是文件描述符0，标准输出是1，标准错误是2。然后，进程打开的其他文件将被分配3、4、5，依此类推。名称&amp;ldquo;文件描述符&amp;rdquo;具有欺骗性；在Unix平台上，套接字和管道也由文件描述符引用。</target>
        </trans-unit>
        <trans-unit id="e4abf36a5ea54ec41cce22ec0fe706639aba0b93" translate="yes" xml:space="preserve">
          <source>File exists</source>
          <target state="translated">文件存在</target>
        </trans-unit>
        <trans-unit id="cb5afff2713b6247dbc93cc5a2a8350787630318" translate="yes" xml:space="preserve">
          <source>File generation number.</source>
          <target state="translated">文件生成号。</target>
        </trans-unit>
        <trans-unit id="3e8a264d601e926718226415b8aea5f39c39c77a" translate="yes" xml:space="preserve">
          <source>File locking deadlock error</source>
          <target state="translated">文件锁定死锁错误</target>
        </trans-unit>
        <trans-unit id="a753126c02a7cdcf2329de8b6f0184b625a67089" translate="yes" xml:space="preserve">
          <source>File menu (Shell and Editor)</source>
          <target state="translated">文件菜单(外壳和编辑器</target>
        </trans-unit>
        <trans-unit id="6ec4b4ae68331f38e8eb79a30a03536a294a8f5c" translate="yes" xml:space="preserve">
          <source>File mode: file type and file mode bits (permissions).</source>
          <target state="translated">文件模式:文件类型和文件模式位(权限)。</target>
        </trans-unit>
        <trans-unit id="8a87b64cae5a39a0265ada62f19e089c25fa123c" translate="yes" xml:space="preserve">
          <source>File name too long</source>
          <target state="translated">文件名太长</target>
        </trans-unit>
        <trans-unit id="42f4b294f545a51be6ba48389e180aadbe58f642" translate="yes" xml:space="preserve">
          <source>File object registered.</source>
          <target state="translated">注册的文件对象。</target>
        </trans-unit>
        <trans-unit id="b8840fb4bc3b477275dcdcfe4e561235b1db91f8" translate="yes" xml:space="preserve">
          <source>File objects on Windows are not acceptable, but sockets are. On Windows, the underlying &lt;code&gt;select()&lt;/code&gt; function is provided by the WinSock library, and does not handle file descriptors that don&amp;rsquo;t originate from WinSock.</source>
          <target state="translated">Windows上的文件对象是不可接受的，但套接字是可接受的。在Windows上，底层的 &lt;code&gt;select()&lt;/code&gt; 函数由WinSock库提供，并且不处理不是源自WinSock的文件描述符。</target>
        </trans-unit>
        <trans-unit id="600941bc483d702b3e6700aa5c9df8eaacfc769f" translate="yes" xml:space="preserve">
          <source>File separator</source>
          <target state="translated">文件分隔符</target>
        </trans-unit>
        <trans-unit id="f61db49fc791da76e7a4fae457554297e80648e3" translate="yes" xml:space="preserve">
          <source>File system calls on reserved paths can fail mysteriously or have unintended effects.</source>
          <target state="translated">文件系统对保留路径的调用可能会神秘地失败或产生意想不到的效果。</target>
        </trans-unit>
        <trans-unit id="78c59929bfdd3ce1a14ecda0c9b3a704ea61f8d0" translate="yes" xml:space="preserve">
          <source>File system path representation: &lt;code&gt;__fspath__&lt;/code&gt;</source>
          <target state="translated">文件系统路径表示： &lt;code&gt;__fspath__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bca9e4b99c52f14bead7db3f4a025c74ea71611" translate="yes" xml:space="preserve">
          <source>File table overflow</source>
          <target state="translated">文件表溢出</target>
        </trans-unit>
        <trans-unit id="a0704a4eaa055ab08e3766911e446737f4f2a445" translate="yes" xml:space="preserve">
          <source>File too large</source>
          <target state="translated">文件太大</target>
        </trans-unit>
        <trans-unit id="51583aa4b17cb383a15403102b60604e1ffe68c3" translate="yes" xml:space="preserve">
          <source>File type.</source>
          <target state="translated">文件类型:</target>
        </trans-unit>
        <trans-unit id="e0343558dc440a496930dadd39dd8387c3ef8a09" translate="yes" xml:space="preserve">
          <source>File type. &lt;em&gt;type&lt;/em&gt; is usually one of these constants: &lt;code&gt;REGTYPE&lt;/code&gt;, &lt;code&gt;AREGTYPE&lt;/code&gt;, &lt;code&gt;LNKTYPE&lt;/code&gt;, &lt;code&gt;SYMTYPE&lt;/code&gt;, &lt;code&gt;DIRTYPE&lt;/code&gt;, &lt;code&gt;FIFOTYPE&lt;/code&gt;, &lt;code&gt;CONTTYPE&lt;/code&gt;, &lt;code&gt;CHRTYPE&lt;/code&gt;, &lt;code&gt;BLKTYPE&lt;/code&gt;, &lt;code&gt;GNUTYPE_SPARSE&lt;/code&gt;. To determine the type of a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object more conveniently, use the &lt;code&gt;is*()&lt;/code&gt; methods below.</source>
          <target state="translated">文件类型。&lt;em&gt;type&lt;/em&gt;通常是以下常量之一： &lt;code&gt;REGTYPE&lt;/code&gt; ， &lt;code&gt;AREGTYPE&lt;/code&gt; ， &lt;code&gt;LNKTYPE&lt;/code&gt; ， &lt;code&gt;SYMTYPE&lt;/code&gt; ， &lt;code&gt;DIRTYPE&lt;/code&gt; ， &lt;code&gt;FIFOTYPE&lt;/code&gt; ， &lt;code&gt;CONTTYPE&lt;/code&gt; ， &lt;code&gt;CHRTYPE&lt;/code&gt; ， &lt;code&gt;BLKTYPE&lt;/code&gt; ， &lt;code&gt;GNUTYPE_SPARSE&lt;/code&gt; 。要更方便地确定&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象的类型，请使用下面的 &lt;code&gt;is*()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="fc6610cbbc8b48db2b32dc4cea18d4eb726c9792" translate="yes" xml:space="preserve">
          <source>FileCookieJar subclasses and co-operation with web browsers</source>
          <target state="translated">FileCookieJar子类和与网络浏览器的合作。</target>
        </trans-unit>
        <trans-unit id="f383b8e9b99251c23741b31d5cc53abb63e20cdc" translate="yes" xml:space="preserve">
          <source>FileExistsError</source>
          <target state="translated">FileExistsError</target>
        </trans-unit>
        <trans-unit id="0ac6dbee4d8f540761408e72685ba06c2b71eae5" translate="yes" xml:space="preserve">
          <source>FileHandler</source>
          <target state="translated">FileHandler</target>
        </trans-unit>
        <trans-unit id="badf54288fb507d144cec214315538aa33ce8145" translate="yes" xml:space="preserve">
          <source>FileHandler Objects</source>
          <target state="translated">文件处理程序对象</target>
        </trans-unit>
        <trans-unit id="58c4fa0a0ae8dd1958950cee046cf91990f7447f" translate="yes" xml:space="preserve">
          <source>FileNotFoundError</source>
          <target state="translated">FileNotFoundError</target>
        </trans-unit>
        <trans-unit id="08f576d210cb57554632ff4a6560f019db2aebb7" translate="yes" xml:space="preserve">
          <source>FileType objects</source>
          <target state="translated">文件类型对象</target>
        </trans-unit>
        <trans-unit id="1327b5f2d09eccc6cf4ed8241ec999e6fd23b758" translate="yes" xml:space="preserve">
          <source>FileType objects understand the pseudo-argument &lt;code&gt;'-'&lt;/code&gt; and automatically convert this into &lt;code&gt;sys.stdin&lt;/code&gt; for readable &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects and &lt;code&gt;sys.stdout&lt;/code&gt; for writable &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">FileType对象理解伪参数 &lt;code&gt;'-'&lt;/code&gt; 并针对可读的&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;对象将其自动转换为 &lt;code&gt;sys.stdin&lt;/code&gt; ，对于可写的&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;对象将其自动转换为 &lt;code&gt;sys.stdout&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="40393ad111e27bcc683ee72e707bba890145c9d7" translate="yes" xml:space="preserve">
          <source>Filename (&lt;code&gt;str&lt;/code&gt;).</source>
          <target state="translated">文件名（ &lt;code&gt;str&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="87a4cc2de20c7671ca65638a2d02e9365422f798" translate="yes" xml:space="preserve">
          <source>Filename of default file in which to keep cookies. This attribute may be assigned to.</source>
          <target state="translated">保存cookies的默认文件的文件名。此属性可分配给:</target>
        </trans-unit>
        <trans-unit id="52c43544dfb2a45f1802d1c763e2a6dc8daaa754" translate="yes" xml:space="preserve">
          <source>Filename pattern of the filter (&lt;code&gt;str&lt;/code&gt;). Read-only property.</source>
          <target state="translated">过滤器的文件名模式（ &lt;code&gt;str&lt;/code&gt; ）。只读属性。</target>
        </trans-unit>
        <trans-unit id="68d63bdb6592b17bfb046f862f466553bd3f6720" translate="yes" xml:space="preserve">
          <source>Filename portion of &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pathname&lt;/code&gt; 文件名部分。</target>
        </trans-unit>
        <trans-unit id="003505cb00a80d1f2f5ea93d0f9242196378636c" translate="yes" xml:space="preserve">
          <source>Files and Directories</source>
          <target state="translated">文件和目录</target>
        </trans-unit>
        <trans-unit id="759a6920d195b7ce8672f19ab41d440633e44c8b" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in &lt;em&gt;a&lt;/em&gt;, filtered by &lt;em&gt;hide&lt;/em&gt; and &lt;em&gt;ignore&lt;/em&gt;.</source>
          <target state="translated">文件和子目录&lt;em&gt;一&lt;/em&gt;，通过过滤&lt;em&gt;隐藏&lt;/em&gt;和&lt;em&gt;忽略&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3a3936a42ac96b8925399b319d5a7d796d3d8db8" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in &lt;em&gt;b&lt;/em&gt;, filtered by &lt;em&gt;hide&lt;/em&gt; and &lt;em&gt;ignore&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;b中的&lt;/em&gt;文件和子目录，由&lt;em&gt;hide&lt;/em&gt;和&lt;em&gt;ignore&lt;/em&gt;过滤。</target>
        </trans-unit>
        <trans-unit id="a8b6fbc3a2273d1bb7466dae95464866701031f5" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中的&lt;/em&gt;文件和子目录。</target>
        </trans-unit>
        <trans-unit id="ed0be31e2bc597af493e72f4f33679b95df48ed6" translate="yes" xml:space="preserve">
          <source>Files and subdirectories only in &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">仅位于中&lt;em&gt;的&lt;/em&gt;文件和子目录。</target>
        </trans-unit>
        <trans-unit id="9ac464055e749e1e5b207f242390a2ba0bfdade9" translate="yes" xml:space="preserve">
          <source>Files and subdirectories only in &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">仅在&lt;em&gt;b中的&lt;/em&gt;文件和子目录。</target>
        </trans-unit>
        <trans-unit id="a4ae626010c4822a53276953b22090762c22ac3e" translate="yes" xml:space="preserve">
          <source>Files are an example of effectively single use context managers, since the first &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement will close the file, preventing any further IO operations using that file object.</source>
          <target state="translated">文件是有效的单次使用上下文管理器的示例，因为第一个&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句将关闭文件，从而防止使用该文件对象进行任何进一步的IO操作。</target>
        </trans-unit>
        <trans-unit id="c71d9778579ae9a94c7003b41c7a6b8d545f9ec7" translate="yes" xml:space="preserve">
          <source>Files are an example of effectively single use context managers, since the first &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement will close the file, preventing any further IO operations using that file object.</source>
          <target state="translated">文件是有效的单次使用上下文管理器的一个示例，因为第一个&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句将关闭文件，从而阻止使用该文件对象进行任何进一步的IO操作。</target>
        </trans-unit>
        <trans-unit id="4cd878bcefca3ec6e629466dc58bb31702253a22" translate="yes" xml:space="preserve">
          <source>Files in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中的&lt;/em&gt;文件。</target>
        </trans-unit>
        <trans-unit id="ea2f41f1c05642d27cd04535fc0e6f3df0c5954b" translate="yes" xml:space="preserve">
          <source>Files which are identical in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, using the class&amp;rsquo;s file comparison operator.</source>
          <target state="translated">使用类的文件比较运算符，在&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中&lt;/em&gt;都相同的文件。</target>
        </trans-unit>
        <trans-unit id="749d478161c9a248300f584a3f2f59df027d8b21" translate="yes" xml:space="preserve">
          <source>Files which are in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, but could not be compared.</source>
          <target state="translated">位于&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中的文件&lt;/em&gt;，但是无法比较。</target>
        </trans-unit>
        <trans-unit id="633f984cfb9a0ec3e74e412efec54a2603e5069c" translate="yes" xml:space="preserve">
          <source>Files which are in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, whose contents differ according to the class&amp;rsquo;s file comparison operator.</source>
          <target state="translated">文件，这是两个&lt;em&gt;一&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;，其内容根据类的文件比较运营商不同。</target>
        </trans-unit>
        <trans-unit id="3d1ee9e004d27605af6eb217be8809442c35a541" translate="yes" xml:space="preserve">
          <source>Fill the shape drawn after the last call to &lt;a href=&quot;#turtle.begin_fill&quot;&gt;&lt;code&gt;begin_fill()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">填充最后一次调用&lt;a href=&quot;#turtle.begin_fill&quot;&gt; &lt;code&gt;begin_fill()&lt;/code&gt; &lt;/a&gt;之后绘制的形状。</target>
        </trans-unit>
        <trans-unit id="98325be45e57b01ea42841fb2dc63e31875877c1" translate="yes" xml:space="preserve">
          <source>Filling</source>
          <target state="translated">Filling</target>
        </trans-unit>
        <trans-unit id="3310f43302c999c8492a42df42ea6b5b288e9557" translate="yes" xml:space="preserve">
          <source>Filling an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; with information about program arguments is done by making calls to the &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method. Generally, these calls tell the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; how to take the strings on the command line and turn them into objects. This information is stored and used when &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; is called. For example:</source>
          <target state="translated">通过调用&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;方法来完成有关程序参数信息的&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; 的&lt;/a&gt;填充。通常，这些调用告诉&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;如何在命令行中获取字符串并将其转换为对象。调用&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;时，将存储和使用此信息。例如：</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="a912d88c08a6e2310110ffbd20aa2b37095a730a" translate="yes" xml:space="preserve">
          <source>Filter Objects</source>
          <target state="translated">筛选对象</target>
        </trans-unit>
        <trans-unit id="a2d118fb1199e7aba611e82fb161d544d1eac75d" translate="yes" xml:space="preserve">
          <source>Filter action.</source>
          <target state="translated">过滤行动。</target>
        </trans-unit>
        <trans-unit id="40f168dc65ac13c1d458eb61d8d66634ac1a3375" translate="yes" xml:space="preserve">
          <source>Filter on traces of memory blocks.</source>
          <target state="translated">对内存块的痕迹进行过滤。</target>
        </trans-unit>
        <trans-unit id="46599895c7cc0e31d2f5baffff2b94f7c4930832" translate="yes" xml:space="preserve">
          <source>Filter specific EOF condition</source>
          <target state="translated">过滤器特定的EOF条件</target>
        </trans-unit>
        <trans-unit id="46c8bfb7a3178cfafcd4b07b975d5792a4676ea6" translate="yes" xml:space="preserve">
          <source>Filter specific data.</source>
          <target state="translated">过滤特定数据。</target>
        </trans-unit>
        <trans-unit id="9ac71d86bc0dc3c87565de360f8c150dfeaa3a12" translate="yes" xml:space="preserve">
          <source>Filter specific flags.</source>
          <target state="translated">过滤特定的标志。</target>
        </trans-unit>
        <trans-unit id="90bab0b2418045b3e5941db6175b231502b4d0a8" translate="yes" xml:space="preserve">
          <source>Filter the files by directory.</source>
          <target state="translated">按目录过滤文件。</target>
        </trans-unit>
        <trans-unit id="f615ce4691db8194f5e5c00719b0315f74011927" translate="yes" xml:space="preserve">
          <source>Filter traces of memory blocks by their address space (domain).</source>
          <target state="translated">按地址空间(域)过滤内存块的痕迹。</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="2353cd812767e6ab918c30790318afb782c94439" translate="yes" xml:space="preserve">
          <source>Filters provide a finer grained facility for determining which log records to output.</source>
          <target state="translated">过滤器提供了一个更精细的工具,用于确定要输出哪些日志记录。</target>
        </trans-unit>
        <trans-unit id="91234c54704fa45cc1c28452be237689e3afdac5" translate="yes" xml:space="preserve">
          <source>Finalizer Objects</source>
          <target state="translated">定稿器对象</target>
        </trans-unit>
        <trans-unit id="b4a9f27a229332b0ddb9b525d8627f1feae36bc7" translate="yes" xml:space="preserve">
          <source>Finally send the headers to the output stream and flush the internal headers buffer.</source>
          <target state="translated">最后将头文件发送到输出流,并冲刷内部头文件缓冲区。</target>
        </trans-unit>
        <trans-unit id="5340045eb569806018888d3e6ca8151bb31425b6" translate="yes" xml:space="preserve">
          <source>Finally the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; provides the following methods and attributes:</source>
          <target state="translated">最后，&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;提供以下方法和属性：</target>
        </trans-unit>
        <trans-unit id="ac7a70a71bee49fd5902a24b61b093fc56eeefe4" translate="yes" xml:space="preserve">
          <source>Finally, developers of interactive shells that run user code in a namespace other than &lt;code&gt;__main__&lt;/code&gt; are advised to ensure that &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; messages are made visible by default, using code like the following (where &lt;code&gt;user_ns&lt;/code&gt; is the module used to execute code entered interactively):</source>
          <target state="translated">最后，建议在以下名称空间（而非 &lt;code&gt;__main__&lt;/code&gt; )中运行用户代码的交互式shell的开发人员，确保使用以下类似的代码使&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;消息在默认情况下可见（其中 &lt;code&gt;user_ns&lt;/code&gt; 是用于执行以交互方式输入的代码的模块）：</target>
        </trans-unit>
        <trans-unit id="54483631603508ccb6eef71317df3b382f7a7d0f" translate="yes" xml:space="preserve">
          <source>Finally, it provides some additional type-related utility classes and functions that are not fundamental enough to be builtins.</source>
          <target state="translated">最后,它提供了一些额外的与类型相关的实用类和函数,这些类和函数还不足以成为内置类。</target>
        </trans-unit>
        <trans-unit id="4cc1441649b921d6fdae0ab41c8bf613ba751dc2" translate="yes" xml:space="preserve">
          <source>Finally, split each entry into a list with first name, last name, telephone number, and address. We use the &lt;code&gt;maxsplit&lt;/code&gt; parameter of &lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; because the address has spaces, our splitting pattern, in it:</source>
          <target state="translated">最后，将每个条目分成一个包含名字，姓氏，电话号码和地址的列表。我们使用&lt;a href=&quot;#re.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;maxsplit&lt;/code&gt; 参数，因为地址中包含空格（我们的拆分模式）：</target>
        </trans-unit>
        <trans-unit id="ca29ccfc698632fd34f8bef6c54a4c7594301bca" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;type&lt;/em&gt; determines how the data should be presented.</source>
          <target state="translated">最后，&lt;em&gt;类型&lt;/em&gt;确定应如何显示数据。</target>
        </trans-unit>
        <trans-unit id="6e412b4e5a4b243814ad83cb939463fbbfcd9073" translate="yes" xml:space="preserve">
          <source>Finally, the last line makes &lt;code&gt;Foo&lt;/code&gt; a virtual subclass of &lt;code&gt;MyIterable&lt;/code&gt;, even though it does not define an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method (it uses the old-style iterable protocol, defined in terms of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;). Note that this will not make &lt;code&gt;get_iterator&lt;/code&gt; available as a method of &lt;code&gt;Foo&lt;/code&gt;, so it is provided separately.</source>
          <target state="translated">最后，最后一 &lt;code&gt;MyIterable&lt;/code&gt; &lt;code&gt;Foo&lt;/code&gt; 成为MyIterable的虚拟子类，尽管它没有定义&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法（它使用旧式可迭代协议，该协议是根据&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;）。注意，这不会使 &lt;code&gt;get_iterator&lt;/code&gt; 可以作为 &lt;code&gt;Foo&lt;/code&gt; 的方法使用，因此它是单独提供的。</target>
        </trans-unit>
        <trans-unit id="a303a2bc925625afc4519d11fc8b93908009a399" translate="yes" xml:space="preserve">
          <source>Finally, the last line makes &lt;code&gt;Foo&lt;/code&gt; a virtual subclass of &lt;code&gt;MyIterable&lt;/code&gt;, even though it does not define an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method (it uses the old-style iterable protocol, defined in terms of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;). Note that this will not make &lt;code&gt;get_iterator&lt;/code&gt; available as a method of &lt;code&gt;Foo&lt;/code&gt;, so it is provided separately.</source>
          <target state="translated">最后，最后一 &lt;code&gt;MyIterable&lt;/code&gt; &lt;code&gt;Foo&lt;/code&gt; 成为MyIterable的虚拟子类，即使它没有定义&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法（它使用旧式可迭代协议，该协议是根据&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;）。请注意，这不会使 &lt;code&gt;get_iterator&lt;/code&gt; 可以作为 &lt;code&gt;Foo&lt;/code&gt; 的方法使用，因此它是单独提供的。</target>
        </trans-unit>
        <trans-unit id="90e60f8d4aa2795892376f060e02bfac6967dbef" translate="yes" xml:space="preserve">
          <source>Finally, the module defines the following functions:</source>
          <target state="translated">最后,该模块定义了以下功能。</target>
        </trans-unit>
        <trans-unit id="4802b5d7cd86363b824fd0ca9a616c0d0c5ad299" translate="yes" xml:space="preserve">
          <source>Finally, we compare the two:</source>
          <target state="translated">最后,我们将两者进行比较。</target>
        </trans-unit>
        <trans-unit id="df251b06eefdaa932e97b54fbe9a74d3e606fa61" translate="yes" xml:space="preserve">
          <source>Find</source>
          <target state="translated">Find</target>
        </trans-unit>
        <trans-unit id="e22d01c9a1cff7d8d85bf94c081d389c7cb45c44" translate="yes" xml:space="preserve">
          <source>Find Again</source>
          <target state="translated">再找</target>
        </trans-unit>
        <trans-unit id="fee9d437c96f424d55cbaea346f0b4c8fcac6cb5" translate="yes" xml:space="preserve">
          <source>Find Selection</source>
          <target state="translated">查找选择</target>
        </trans-unit>
        <trans-unit id="ef1f9108191ec94e03062bd8ad91db6782be5303" translate="yes" xml:space="preserve">
          <source>Find all the test modules by recursing into subdirectories from the specified start directory, and return a TestSuite object containing them. Only test files that match &lt;em&gt;pattern&lt;/em&gt; will be loaded. (Using shell style pattern matching.) Only module names that are importable (i.e. are valid Python identifiers) will be loaded.</source>
          <target state="translated">通过从指定的开始目录递归到子目录中，找到所有测试模块，然后返回包含它们的TestSuite对象。仅加载与&lt;em&gt;模式&lt;/em&gt;匹配的测试文件。（使用外壳样式模式匹配。）将仅加载可导入的模块名称（即有效的Python标识符）。</target>
        </trans-unit>
        <trans-unit id="5c62bc8f6363fb9566dfbefc3e5e304573710820" translate="yes" xml:space="preserve">
          <source>Find in Files&amp;hellip;</source>
          <target state="translated">在文件中查找...</target>
        </trans-unit>
        <trans-unit id="e1a3407ce9c645e9293a18e98df208634d5b0fd6" translate="yes" xml:space="preserve">
          <source>Find longest matching block in &lt;code&gt;a[alo:ahi]&lt;/code&gt; and &lt;code&gt;b[blo:bhi]&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;a[alo:ahi]&lt;/code&gt; 和 &lt;code&gt;b[blo:bhi]&lt;/code&gt; 找到最长的匹配块。</target>
        </trans-unit>
        <trans-unit id="88973852d34b548cba7442351fe7931983f58261" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for a module, optionally relative to the specified &lt;strong&gt;package&lt;/strong&gt; name. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; is returned (unless the spec would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no spec is found.</source>
          <target state="translated">查找模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;规格&lt;/a&gt;，可以选择相对于指定的&lt;strong&gt;包&lt;/strong&gt;名称。如果模块位于&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;，则返回 &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; （除非规范为 &lt;code&gt;None&lt;/code&gt; 或未设置，在这种情况下会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;）。否则，将使用&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;进行搜索。 &lt;code&gt;None&lt;/code&gt; 如果没有规范被发现被返回。</target>
        </trans-unit>
        <trans-unit id="47cc28f6ec26c92278c802332aae87071d54200f" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for a module, optionally relative to the specified &lt;strong&gt;package&lt;/strong&gt; name. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; is returned (unless the spec would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no spec is found.</source>
          <target state="translated">查找模块的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;规格&lt;/a&gt;，可以选择相对于指定的&lt;strong&gt;程序包&lt;/strong&gt;名称。如果模块位于&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;，则返回 &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; （除非规范为 &lt;code&gt;None&lt;/code&gt; 或未设置，在这种情况下会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;）。否则，将使用&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;进行搜索。 &lt;code&gt;None&lt;/code&gt; 如果没有规范被发现被返回。</target>
        </trans-unit>
        <trans-unit id="bb323e03785be602bcba83db798ce16c9bf59cc4" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://en.wikipedia.org/wiki/Quartile&quot;&gt;quartiles&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Decile&quot;&gt;deciles&lt;/a&gt; for the SAT scores:</source>
          <target state="translated">查找SAT分数的&lt;a href=&quot;https://en.wikipedia.org/wiki/Quartile&quot;&gt;四分位数&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Decile&quot;&gt;十分位数&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="54727e2ae4fbfa9a1379603de62399cc1ea08e5c" translate="yes" xml:space="preserve">
          <source>Find the loader for a module, optionally within the specified &lt;em&gt;path&lt;/em&gt;. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__loader__&lt;/code&gt; is returned (unless the loader would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no loader is found.</source>
          <target state="translated">查找模块的加载器，可以选择在指定的&lt;em&gt;path中&lt;/em&gt;。如果模块在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;，则返回 &lt;code&gt;sys.modules[name].__loader__&lt;/code&gt; （除非加载器为 &lt;code&gt;None&lt;/code&gt; 或未设置，在这种情况下会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;）。否则，将使用&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;进行搜索。 &lt;code&gt;None&lt;/code&gt; 如果没有加载器发现被返回。</target>
        </trans-unit>
        <trans-unit id="466bd9c283ada3a2104411c5b7cd20bcb47f3b3e" translate="yes" xml:space="preserve">
          <source>Find&amp;hellip;</source>
          <target state="translated">Find&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cf4be453d54751062a87b79b8d32be07d8baa9ca" translate="yes" xml:space="preserve">
          <source>Finding all Adverbs</source>
          <target state="translated">寻找所有副词</target>
        </trans-unit>
        <trans-unit id="b721c6da8e2db8fb2ef1a1be90eac8dd41d6f9e7" translate="yes" xml:space="preserve">
          <source>Finding all Adverbs and their Positions</source>
          <target state="translated">寻找所有副词及其位置</target>
        </trans-unit>
        <trans-unit id="0a2099ef6eb29e011a3b48632c5a2afdec3ee58e" translate="yes" xml:space="preserve">
          <source>Finding interesting elements</source>
          <target state="translated">寻找有趣的元素</target>
        </trans-unit>
        <trans-unit id="f7bb5e00680fccf4dcccd7c41b77a19932915851" translate="yes" xml:space="preserve">
          <source>Finding shared libraries</source>
          <target state="translated">寻找共享图书馆</target>
        </trans-unit>
        <trans-unit id="8e54a9c2cec2bb117d48536f67fc88db48ee2cec" translate="yes" xml:space="preserve">
          <source>Finds all matching subelements, by tag name or &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns a list containing all matching elements in document order. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">通过标签名称或&lt;a href=&quot;#elementtree-xpath&quot;&gt;路径&lt;/a&gt;查找所有匹配的子元素。返回包含所有按文档顺序匹配的元素的列表。&lt;em&gt;名称空间&lt;/em&gt;是从名称空间前缀到全名的可选映射。传递 &lt;code&gt;''&lt;/code&gt; 作为前缀，以将表达式中所有未加前缀的标记名称移动到给定的名称空间中。</target>
        </trans-unit>
        <trans-unit id="d859b654af5ed61880223a7226d7e7e1d3483231" translate="yes" xml:space="preserve">
          <source>Finds all matching subelements, by tag name or &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns an iterable yielding all matching elements in document order. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name.</source>
          <target state="translated">通过标签名称或&lt;a href=&quot;#elementtree-xpath&quot;&gt;路径&lt;/a&gt;查找所有匹配的子元素。返回一个可迭代的结果，按文档顺序生成所有匹配的元素。&lt;em&gt;名称空间&lt;/em&gt;是从名称空间前缀到全名的可选映射。</target>
        </trans-unit>
        <trans-unit id="5b27a1b5e4d00faec99659152610aca79a1d8fdf" translate="yes" xml:space="preserve">
          <source>Finds and returns the closest &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self&lt;/code&gt; that has denominator at most max_denominator. This method is useful for finding rational approximations to a given floating-point number:</source>
          <target state="translated">查找并返回最接近的&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;，以 &lt;code&gt;self&lt;/code&gt; 拥有最多max_denominator分母。此方法对于查找给定浮点数的有理逼近很有用：</target>
        </trans-unit>
        <trans-unit id="d10a60a0eaf8db436783842ebe25ff70039b0d06" translate="yes" xml:space="preserve">
          <source>Finds text for the first subelement matching &lt;em&gt;match&lt;/em&gt;. &lt;em&gt;match&lt;/em&gt; may be a tag name or a &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns the text content of the first matching element, or &lt;em&gt;default&lt;/em&gt; if no element was found. Note that if the matching element has no text content an empty string is returned. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">查找第一个子元素匹配&lt;em&gt;match的&lt;/em&gt;文本。&lt;em&gt;match&lt;/em&gt;可以是标签名称或&lt;a href=&quot;#elementtree-xpath&quot;&gt;路径&lt;/a&gt;。返回第一个匹配元素的文本内容；如果未找到任何元素，则返回&lt;em&gt;默认值&lt;/em&gt;。请注意，如果匹配的元素没有文本内容，则返回一个空字符串。&lt;em&gt;名称空间&lt;/em&gt;是从名称空间前缀到全名的可选映射。传递 &lt;code&gt;''&lt;/code&gt; 作为前缀，以将表达式中所有未添加前缀的标签名称移动到给定的名称空间中。</target>
        </trans-unit>
        <trans-unit id="da452c485a924a8c6950daa3d141c59442b42e7b" translate="yes" xml:space="preserve">
          <source>Finds the caller&amp;rsquo;s source filename and line number. Returns the filename, line number, function name and stack information as a 4-element tuple. The stack information is returned as &lt;code&gt;None&lt;/code&gt; unless &lt;em&gt;stack_info&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">查找呼叫者的源文件名和线路号。以4元素元组的形式返回文件名，行号，函数名称和堆栈信息。除非&lt;em&gt;stack_info&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ,否则堆栈信息将返回为 &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef05bb45a66bea7421c281f5a43ff7fb8a6ea316" translate="yes" xml:space="preserve">
          <source>Finds the first subelement matching &lt;em&gt;match&lt;/em&gt;. &lt;em&gt;match&lt;/em&gt; may be a tag name or a &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns an element instance or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">查找第一个子元素匹配&lt;em&gt;match&lt;/em&gt;。&lt;em&gt;match&lt;/em&gt;可以是标签名称或&lt;a href=&quot;#elementtree-xpath&quot;&gt;路径&lt;/a&gt;。返回一个元素实例或 &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;名称空间&lt;/em&gt;是从名称空间前缀到全名的可选映射。传递 &lt;code&gt;''&lt;/code&gt; 作为前缀，以将表达式中所有未加前缀的标记名称移动到给定的名称空间中。</target>
        </trans-unit>
        <trans-unit id="383b6f69481b14ce56e9a9c5c3e3db37deae4310" translate="yes" xml:space="preserve">
          <source>Finds the value &lt;em&gt;x&lt;/em&gt; of the random variable &lt;em&gt;X&lt;/em&gt; such that the probability of the variable being less than or equal to that value equals the given probability &lt;em&gt;p&lt;/em&gt;.</source>
          <target state="translated">查找随机变量&lt;em&gt;X&lt;/em&gt;的值&lt;em&gt;x&lt;/em&gt;，以使该变量小于或等于该值的概率等于给定的概率&lt;em&gt;p&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04d5bbaf630e544c5dc9e758ee6e372783543ff0" translate="yes" xml:space="preserve">
          <source>Finer Points</source>
          <target state="translated">細節</target>
        </trans-unit>
        <trans-unit id="432bdfa8572e3f54d5ae893d2654804bc7796b03" translate="yes" xml:space="preserve">
          <source>Finish the compression process, returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing any data stored in the compressor&amp;rsquo;s internal buffers.</source>
          <target state="translated">完成压缩过程，返回一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象，其中包含压缩器内部缓冲区中存储的所有数据。</target>
        </trans-unit>
        <trans-unit id="baed4062148e238b2036d98ee1192d5e5bac6f1c" translate="yes" xml:space="preserve">
          <source>Finish the compression process. Returns the compressed data left in internal buffers.</source>
          <target state="translated">完成压缩过程。返回留在内部缓冲区的压缩数据。</target>
        </trans-unit>
        <trans-unit id="a6b9354378ed8f6903d12116f4cc1f005f0095a5" translate="yes" xml:space="preserve">
          <source>Finishes cleaning up the stack when a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement block exits.</source>
          <target state="translated">当&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句块退出时，完成清理堆栈的操作。</target>
        </trans-unit>
        <trans-unit id="321b3d472ac84279a6e6dbb1bf70264bbbfa42e3" translate="yes" xml:space="preserve">
          <source>Finishes feeding data to the parser. Returns the result of calling the &lt;code&gt;close()&lt;/code&gt; method of the &lt;em&gt;target&lt;/em&gt; passed during construction; by default, this is the toplevel document element.</source>
          <target state="translated">完成将数据馈送到解析器。返回调用构造过程中传递的&lt;em&gt;目标&lt;/em&gt;的 &lt;code&gt;close()&lt;/code&gt; 方法的结果；默认情况下，这是顶级文档元素。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41b7c3042f5a197e5d2450646a9d85e745f8b93c" translate="yes" xml:space="preserve">
          <source>First of all, check for trivial installation errors &amp;mdash; reading the section above on installing your CGI script carefully can save you a lot of time. If you wonder whether you have understood the installation procedure correctly, try installing a copy of this module file (&lt;code&gt;cgi.py&lt;/code&gt;) as a CGI script. When invoked as a script, the file will dump its environment and the contents of the form in HTML form. Give it the right mode etc, and send it a request. If it&amp;rsquo;s installed in the standard &lt;code&gt;cgi-bin&lt;/code&gt; directory, it should be possible to send it a request by entering a URL into your browser of the form:</source>
          <target state="translated">首先，检查琐碎的安装错误-仔细阅读上面有关安装CGI脚本的部分，可以节省大量时间。如果您想知道自己是否正确理解了安装过程，请尝试以CGI脚本的形式安装此模块文件（ &lt;code&gt;cgi.py&lt;/code&gt; ）的副本。当作为脚本调用时，文件将以HTML格式转储其环境和表单内容。给它正确的模式，等等，并发送请求。如果安装在标准 &lt;code&gt;cgi-bin&lt;/code&gt; 目录中，则应该可以通过在浏览器中输入以下格式的URL来发送请求：</target>
        </trans-unit>
        <trans-unit id="ebb675d8053ea8a8ebe83ac6094160e6e0071a71" translate="yes" xml:space="preserve">
          <source>First the problem specific to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; has two assert methods that are extremely handy: &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">首先是&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;特有的问题。&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;有两个非常方便的assert方法：&lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98a58557fac74f7c207b0b17436f5fa6565e938f" translate="yes" xml:space="preserve">
          <source>First the whitespace in &lt;em&gt;text&lt;/em&gt; is collapsed (all whitespace is replaced by single spaces). If the result fits in the &lt;em&gt;width&lt;/em&gt;, it is returned. Otherwise, enough words are dropped from the end so that the remaining words plus the &lt;code&gt;placeholder&lt;/code&gt; fit within &lt;code&gt;width&lt;/code&gt;:</source>
          <target state="translated">首先，&lt;em&gt;文本中&lt;/em&gt;的空格被折叠（所有空格均由单个空格代替）。如果结果适合&lt;em&gt;width&lt;/em&gt;，则将其返回。否则，将从末尾放置足够的单词，以使其余单词加上 &lt;code&gt;placeholder&lt;/code&gt; 适合 &lt;code&gt;width&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="60176e770782809052d5a4eae68bdf54ef2f18da" translate="yes" xml:space="preserve">
          <source>First, here is the input. Normally it may come from a file, here we are using triple-quoted string syntax</source>
          <target state="translated">首先,这里是输入。通常情况下,它可能来自一个文件,这里我们使用三引号的字符串语法。</target>
        </trans-unit>
        <trans-unit id="8ac8683471df447adf6eda69155e038372dd0b95" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s see how to create and send a simple text message (both the text content and the addresses may contain unicode characters):</source>
          <target state="translated">首先，让我们看看如何创建和发送一条简单的文本消息（文本内容和地址都可能包含unicode字符）：</target>
        </trans-unit>
        <trans-unit id="4920efe102a0e3e17da7a48214b1bdd90e8c1783" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll define a converter function that accepts the string as a parameter and constructs a &lt;code&gt;Point&lt;/code&gt; object from it.</source>
          <target state="translated">首先，我们将定义一个转换器函数，该函数接受字符串作为参数并从中构造一个 &lt;code&gt;Point&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="93012090d3ab01bc45208ed0ff57920fc70eb692" translate="yes" xml:space="preserve">
          <source>First, you must create a class for the callback function. The class knows the calling convention, the return type, and the number and types of arguments this function will receive.</source>
          <target state="translated">首先,你必须为回调函数创建一个类。该类知道调用约定、返回类型以及该函数将接收的参数数量和类型。</target>
        </trans-unit>
        <trans-unit id="7ce9ecce087746a2eeddfb2675b9f7cd5ce64f3c" translate="yes" xml:space="preserve">
          <source>First-party package maintained by the CPython core developers to supply time zone data via PyPI.</source>
          <target state="translated">由CPython核心开发者维护的第一方包,通过PyPI提供时区数据。</target>
        </trans-unit>
        <trans-unit id="7d07384c1c8d9575109c37bcf20f13d8dfa38fc1" translate="yes" xml:space="preserve">
          <source>Firstly, the syntax for bytes literals is largely the same as that for string literals, except that a &lt;code&gt;b&lt;/code&gt; prefix is added:</source>
          <target state="translated">首先，字节字面量的语法与字符串字面量的语法基本相同，只是添加了 &lt;code&gt;b&lt;/code&gt; 前缀：</target>
        </trans-unit>
        <trans-unit id="cae6d93dfa09be89bb26051b385df24aec65afc3" translate="yes" xml:space="preserve">
          <source>Fixed-point notation. Displays the number as a fixed-point number. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">定点表示法。将数字显示为定点数字。默认精度为 &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33dac53d2b4a4305f7f3bd7b3790965764d3b777" translate="yes" xml:space="preserve">
          <source>Fixed-point notation. Same as &lt;code&gt;'f'&lt;/code&gt;, but converts &lt;code&gt;nan&lt;/code&gt; to &lt;code&gt;NAN&lt;/code&gt; and &lt;code&gt;inf&lt;/code&gt; to &lt;code&gt;INF&lt;/code&gt;.</source>
          <target state="translated">定点表示法。与 &lt;code&gt;'f'&lt;/code&gt; 相同，但是将 &lt;code&gt;nan&lt;/code&gt; 转换为 &lt;code&gt;NAN&lt;/code&gt; ,并将 &lt;code&gt;inf&lt;/code&gt; 转换为 &lt;code&gt;INF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53c31b9a84b3e76a8d130dc88d836771394313f6" translate="yes" xml:space="preserve">
          <source>Fixers</source>
          <target state="translated">Fixers</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="7c9da9ff0cbbea2040b17e92a80753515d34a4d1" translate="yes" xml:space="preserve">
          <source>Flag indicating whether or not the global data structures have been initialized. This is set to &lt;code&gt;True&lt;/code&gt; by &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示全局数据结构是否已初始化的标志。通过&lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt;将其设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c927012d2c39be22f56b1f50daa3abb8534258b8" translate="yes" xml:space="preserve">
          <source>Flag indicating whether to print only the filenames of files containing whitespace related problems. This is set to true by the &lt;code&gt;-q&lt;/code&gt; option if called as a script.</source>
          <target state="translated">指示是否仅打印包含空格相关问题的文件的文件名的标志。如果作为脚本调用，则通过 &lt;code&gt;-q&lt;/code&gt; 选项将其设置为true 。</target>
        </trans-unit>
        <trans-unit id="040ef0b73190ae184815b93c35518c7d638c9bfa" translate="yes" xml:space="preserve">
          <source>Flag indicating whether to print verbose messages. This is incremented by the &lt;code&gt;-v&lt;/code&gt; option if called as a script.</source>
          <target state="translated">指示是否打印详细消息的标志。如果作为脚本调用，则通过 &lt;code&gt;-v&lt;/code&gt; 选项增加。</target>
        </trans-unit>
        <trans-unit id="b827eb1ab4608b80fa780507f686619a8640bde9" translate="yes" xml:space="preserve">
          <source>Flag message number &lt;em&gt;which&lt;/em&gt; for deletion. On most servers deletions are not actually performed until QUIT (the major exception is Eudora QPOP, which deliberately violates the RFCs by doing pending deletes on any disconnect).</source>
          <target state="translated">标志的消息号&lt;em&gt;，其&lt;/em&gt;为删除。在大多数服务器上，实际上直到QUIT才执行删除操作（主要例外是Eudora QPOP，它通过在任何断开连接时进行挂起的删除来故意违反RFC）。</target>
        </trans-unit>
        <trans-unit id="b2c7e2cd1de9bde763ad0040d719d08ce2bcd792" translate="yes" xml:space="preserve">
          <source>Flag showing the status of the user site-packages directory. &lt;code&gt;True&lt;/code&gt; means that it is enabled and was added to &lt;code&gt;sys.path&lt;/code&gt;. &lt;code&gt;False&lt;/code&gt; means that it was disabled by user request (with &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;None&lt;/code&gt; means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator.</source>
          <target state="translated">显示用户site-packages目录状态的标志。 &lt;code&gt;True&lt;/code&gt; 表示已启用它，并将其添加到 &lt;code&gt;sys.path&lt;/code&gt; 中。 &lt;code&gt;False&lt;/code&gt; 表示它已被用户请求禁用（使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt; &lt;/a&gt;）。 &lt;code&gt;None&lt;/code&gt; 表示出于安全原因（用户或组ID与有效ID不匹配）或管理员的原因将其禁用。</target>
        </trans-unit>
        <trans-unit id="c0df1398588bf74289226e39d494c4154f2fb439" translate="yes" xml:space="preserve">
          <source>Flag showing the status of the user site-packages directory. &lt;code&gt;True&lt;/code&gt; means that it is enabled and was added to &lt;code&gt;sys.path&lt;/code&gt;. &lt;code&gt;False&lt;/code&gt; means that it was disabled by user request (with &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;None&lt;/code&gt; means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator.</source>
          <target state="translated">显示用户site-packages目录状态的标志。 &lt;code&gt;True&lt;/code&gt; 表示已启用它，并将其添加到 &lt;code&gt;sys.path&lt;/code&gt; 中。 &lt;code&gt;False&lt;/code&gt; 表示它已被用户请求禁用（使用&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt; &lt;/a&gt;）。 &lt;code&gt;None&lt;/code&gt; 表示出于安全原因（用户或组ID与有效ID不匹配）或管理员的原因将其禁用。</target>
        </trans-unit>
        <trans-unit id="250420fa54c4474c1a02e4a0675c7b67e4859b14" translate="yes" xml:space="preserve">
          <source>Flag to use as &lt;em&gt;mode&lt;/em&gt; parameter. On platforms where this flag is not available, it is defined as the integer zero.</source>
          <target state="translated">标记用作&lt;em&gt;模式&lt;/em&gt;参数。在此标志不可用的平台上，它定义为整数零。</target>
        </trans-unit>
        <trans-unit id="27da8f9d92b7abf1907ea7a26ca4441a58763537" translate="yes" xml:space="preserve">
          <source>Flag to use as &lt;em&gt;mode&lt;/em&gt; parameter. On platforms where this is not available, it is the same as &lt;em&gt;RTLD_GLOBAL&lt;/em&gt;.</source>
          <target state="translated">标记用作&lt;em&gt;模式&lt;/em&gt;参数。在不可用的平台上，它与&lt;em&gt;RTLD_GLOBAL&lt;/em&gt;相同。</target>
        </trans-unit>
        <trans-unit id="f8db8a172be6fab179a39aa7dee85e1f7afcbd56" translate="yes" xml:space="preserve">
          <source>Flagged</source>
          <target state="translated">Flagged</target>
        </trans-unit>
        <trans-unit id="1f07acd047ff4da9984807d5f9663de56e86b6b0" translate="yes" xml:space="preserve">
          <source>Flags for use with the &lt;a href=&quot;sys#sys.setdlopenflags&quot;&gt;&lt;code&gt;setdlopenflags()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sys#sys.getdlopenflags&quot;&gt;&lt;code&gt;getdlopenflags()&lt;/code&gt;&lt;/a&gt; functions. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen(3)&lt;/a&gt;&lt;/em&gt; for what the different flags mean.</source>
          <target state="translated">与&lt;a href=&quot;sys#sys.setdlopenflags&quot;&gt; &lt;code&gt;setdlopenflags()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;sys#sys.getdlopenflags&quot;&gt; &lt;code&gt;getdlopenflags()&lt;/code&gt; &lt;/a&gt;函数一起使用的标志。有关不同标志的含义，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen（3）&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cd24040b0de304246d5aae1e83cfc89a9def0cfd" translate="yes" xml:space="preserve">
          <source>Flags indicating how strict to be with domain-matching rules for Netscape cookies. See below for acceptable values.</source>
          <target state="translated">表示对Netscape cookies的域名匹配规则有多严格的标志。可接受的值见下文。</target>
        </trans-unit>
        <trans-unit id="c56c51fdb9503b6e8d9353fdc1a8910b2b26f96b" translate="yes" xml:space="preserve">
          <source>Flags that can be used in &lt;em&gt;advice&lt;/em&gt; in &lt;a href=&quot;#os.posix_fadvise&quot;&gt;&lt;code&gt;posix_fadvise()&lt;/code&gt;&lt;/a&gt; that specify the access pattern that is likely to be used.</source>
          <target state="translated">可以在&lt;a href=&quot;#os.posix_fadvise&quot;&gt; &lt;code&gt;posix_fadvise()&lt;/code&gt; &lt;/a&gt;中的&lt;em&gt;通知&lt;/em&gt;中使用的标志，用于指定可能使用的访问模式。</target>
        </trans-unit>
        <trans-unit id="4b29537980e35e6955e907c0423783c7fd5421c9" translate="yes" xml:space="preserve">
          <source>Flags that can be used in &lt;em&gt;options&lt;/em&gt; in &lt;a href=&quot;#os.waitid&quot;&gt;&lt;code&gt;waitid()&lt;/code&gt;&lt;/a&gt; that specify what child signal to wait for.</source>
          <target state="translated">可以在&lt;a href=&quot;#os.waitid&quot;&gt; &lt;code&gt;waitid()&lt;/code&gt; &lt;/a&gt;中的&lt;em&gt;选项&lt;/em&gt;中使用的标志，用于指定要等待的子信号。</target>
        </trans-unit>
        <trans-unit id="be03f41ac820d005e351ffd4e5eca83d99f28dd1" translate="yes" xml:space="preserve">
          <source>Flags that specify what action &lt;a href=&quot;#os.lockf&quot;&gt;&lt;code&gt;lockf()&lt;/code&gt;&lt;/a&gt; will take.</source>
          <target state="translated">用于指定&lt;a href=&quot;#os.lockf&quot;&gt; &lt;code&gt;lockf()&lt;/code&gt; &lt;/a&gt;采取何种操作的标志。</target>
        </trans-unit>
        <trans-unit id="6b378e0209f751bf8ed04ced4462379afd4e9bee" translate="yes" xml:space="preserve">
          <source>Flash the screen. That is, change it to reverse-video and then change it back in a short interval. Some people prefer such as &amp;lsquo;visible bell&amp;rsquo; to the audible attention signal produced by &lt;a href=&quot;#curses.beep&quot;&gt;&lt;code&gt;beep()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">闪烁屏幕。也就是说，将其更改为反向视频，然后在很短的间隔内将其更改回。有些人喜欢&amp;ldquo;可见钟声&amp;rdquo;，而不是&lt;a href=&quot;#curses.beep&quot;&gt; &lt;code&gt;beep()&lt;/code&gt; &lt;/a&gt;产生的听觉注意信号。</target>
        </trans-unit>
        <trans-unit id="0ef0237069aeed94495fee21d06b8dfebec5e725" translate="yes" xml:space="preserve">
          <source>Flattening the message may trigger changes to the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).</source>
          <target state="translated">如果需要填写默认值以完成对字符串的转换（例如，可能会生成或修改MIME边界），则拼合消息可能会触发对&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; 的&lt;/a&gt;更改。</target>
        </trans-unit>
        <trans-unit id="6338fe9d3c497dd27f17da5bf52b9bad1bcb9779" translate="yes" xml:space="preserve">
          <source>Flattening the message may trigger changes to the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).</source>
          <target state="translated">平坦化该消息可以触发切换到&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;，如果默认需要在完成改造为字符串将被填充（例如，可以生成或修改MIME边界）。</target>
        </trans-unit>
        <trans-unit id="683dbea5f7e1b5080e1ef7590ab4063b4f6510c0" translate="yes" xml:space="preserve">
          <source>Float value. If set, this is the maximum value to which the increment button will increment.</source>
          <target state="translated">浮点数。如果设置,这是增量按钮将递增的最大值。</target>
        </trans-unit>
        <trans-unit id="7afaf725c9b3acf299192e4694d4dfeb71640eb3" translate="yes" xml:space="preserve">
          <source>Float value. If set, this is the minimum value to which the decrement button will decrement. Must be spelled as &lt;code&gt;from_&lt;/code&gt; when used as an argument, since &lt;code&gt;from&lt;/code&gt; is a Python keyword.</source>
          <target state="translated">浮点值。如果设置，这是减量按钮将减少的最小值。用作参数时，必须将其拼写为 &lt;code&gt;from_&lt;/code&gt; ，因为 &lt;code&gt;from&lt;/code&gt; 是Python关键字。</target>
        </trans-unit>
        <trans-unit id="33b570f9eefd74d9957d763fc0f22770675a13a7" translate="yes" xml:space="preserve">
          <source>Float value. Specifies the amount which the increment/decrement buttons change the value. Defaults to 1.0.</source>
          <target state="translated">浮动值。指定增量/减量按钮改变数值的数量。默认值为1.0。</target>
        </trans-unit>
        <trans-unit id="1e1efdbc9f8f5ce44c24fc5643ba097cac8e6daf" translate="yes" xml:space="preserve">
          <source>Floating Point Notes</source>
          <target state="translated">浮点符号</target>
        </trans-unit>
        <trans-unit id="73d93d27d9be83ac0e1af6809845bb8b3e09dbf0" translate="yes" xml:space="preserve">
          <source>Floating point decimal format.</source>
          <target state="translated">浮点十进制格式。</target>
        </trans-unit>
        <trans-unit id="2b8008eef2f18bcf702847524bbc3d7f4c157eeb" translate="yes" xml:space="preserve">
          <source>Floating point exponential format (lowercase).</source>
          <target state="translated">浮点指数格式(小写)。</target>
        </trans-unit>
        <trans-unit id="3c529f15e6525e1ea8a92bc5c4f6df6089d52413" translate="yes" xml:space="preserve">
          <source>Floating point exponential format (uppercase).</source>
          <target state="translated">浮点指数格式(大写)。</target>
        </trans-unit>
        <trans-unit id="da386ed9df0e1a298956f76f008527bba636b22b" translate="yes" xml:space="preserve">
          <source>Floating point format. Uses lowercase exponential format if exponent is less than -4 or not less than precision, decimal format otherwise.</source>
          <target state="translated">浮点格式。如果指数小于-4或不小于精度,使用小写指数格式,否则使用十进制格式。</target>
        </trans-unit>
        <trans-unit id="ef7899b795de9435e853c0f84ac89f21e7eb5224" translate="yes" xml:space="preserve">
          <source>Floating point format. Uses uppercase exponential format if exponent is less than -4 or not less than precision, decimal format otherwise.</source>
          <target state="translated">浮点格式。如果指数小于-4或不小于精度,使用大写指数格式,否则使用十进制格式。</target>
        </trans-unit>
        <trans-unit id="6160e62f4a06dbbef1c2dbfca55ca8444c4640ec" translate="yes" xml:space="preserve">
          <source>Floating-point exception. For example, division by zero.</source>
          <target state="translated">浮点异常。例如,被零除。</target>
        </trans-unit>
        <trans-unit id="394f073446cec66b8aa90a4344a4ceaf8429ec3d" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are also subject to small output variations across platforms, because Python defers to the platform C library for float formatting, and C libraries vary widely in quality here.</source>
          <target state="translated">浮点数在不同平台上的输出也会有微小的差异,因为Python服从于平台上的C库进行浮点格式化,而C库在这里的质量差异很大。</target>
        </trans-unit>
        <trans-unit id="9f798cc28676aec8b10ead1c825d53504590834d" translate="yes" xml:space="preserve">
          <source>Floating-point positive infinity. Equivalent to &lt;code&gt;float('inf')&lt;/code&gt;.</source>
          <target state="translated">浮点正无穷大。等效于 &lt;code&gt;float('inf')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e9add85e668caad4a6328b8f15ea6541b73c6c7" translate="yes" xml:space="preserve">
          <source>FloatingPointError</source>
          <target state="translated">FloatingPointError</target>
        </trans-unit>
        <trans-unit id="0693c8a5c8ecb50a7a38a20549795a6f793dc1be" translate="yes" xml:space="preserve">
          <source>Flow Control Callbacks</source>
          <target state="translated">流程控制回调</target>
        </trans-unit>
        <trans-unit id="71ba0aeeee03560a33571599cba3282543b48123" translate="yes" xml:space="preserve">
          <source>Flow control callbacks can be called by transports to pause or resume writing performed by the protocol.</source>
          <target state="translated">流控制回调可以被传输器调用,以暂停或恢复协议执行的写入。</target>
        </trans-unit>
        <trans-unit id="4ecb5d4d4053c9b879e8913cfbedf4f7978220bc" translate="yes" xml:space="preserve">
          <source>Flush all input buffers. This throws away any typeahead that has been typed by the user and has not yet been processed by the program.</source>
          <target state="translated">刷新所有输入缓冲区。这将丢弃用户输入的、尚未被程序处理的任何类型前缀。</target>
        </trans-unit>
        <trans-unit id="39b8d0deff165745e1650b86238a87db9a3d861a" translate="yes" xml:space="preserve">
          <source>Flush and close this stream. This method has no effect if the file is already closed. Once the file is closed, any operation on the file (e.g. reading or writing) will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">冲洗并关闭此流。如果文件已经关闭，则此方法无效。文件关闭后，对文件的任何操作（例如，读取或写入）都将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f25b943d17f0a4cc96966f6ad97127f3bd8ce97b" translate="yes" xml:space="preserve">
          <source>Flush the mailbox, unlock it if necessary, and close any open files. For some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; subclasses, this method does nothing.</source>
          <target state="translated">冲洗邮箱，必要时将其解锁，然后关闭所有打开的文件。对于某些&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;子类，此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="f0a42975d0bcde8b733a94ac57ae99d81da7fcc2" translate="yes" xml:space="preserve">
          <source>Flush the write buffers of the stream if applicable. This does nothing for read-only and non-blocking streams.</source>
          <target state="translated">刷新流的写缓冲区(如果适用)。这对只读和非阻塞流没有任何作用。</target>
        </trans-unit>
        <trans-unit id="4039231f6971b19f5762909fe4049214cea03da4" translate="yes" xml:space="preserve">
          <source>Flushes and resets the codec buffers used for keeping state.</source>
          <target state="translated">刷新和重置用于保持状态的编解码器缓冲区。</target>
        </trans-unit>
        <trans-unit id="78c377fb030c4de02734cba213327ba32b5fd57a" translate="yes" xml:space="preserve">
          <source>Flushes changes made to the in-memory copy of a file back to disk. Without use of this call there is no guarantee that changes are written back before the object is destroyed. If &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt; are specified, only changes to the given range of bytes will be flushed to disk; otherwise, the whole extent of the mapping is flushed. &lt;em&gt;offset&lt;/em&gt; must be a multiple of the &lt;code&gt;PAGESIZE&lt;/code&gt; or &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt;.</source>
          <target state="translated">将对文件的内存副本所做的更改刷新回磁盘。如果不使用此调用，则无法保证在销毁对象之前将更改写回。如果指定了&lt;em&gt;偏移量&lt;/em&gt;和&lt;em&gt;大小&lt;/em&gt;，则仅将给定字节范围内的更改刷新到磁盘；否则，将刷新整个映射范围。&lt;em&gt;offset&lt;/em&gt;必须是 &lt;code&gt;PAGESIZE&lt;/code&gt; 或 &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; 的倍数。</target>
        </trans-unit>
        <trans-unit id="41986902b98edde6379cd94cf6c7f023e70d0fe6" translate="yes" xml:space="preserve">
          <source>Flushes the builder buffers, and returns the toplevel document element. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">刷新构建器缓冲区，并返回顶级文档元素。返回一个&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="dc210bf30127cac653beb084658fda0da6f45889" translate="yes" xml:space="preserve">
          <source>Flushes the stream by calling its &lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; method. Note that the &lt;code&gt;close()&lt;/code&gt; method is inherited from &lt;a href=&quot;logging#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; and so does no output, so an explicit &lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; call may be needed at times.</source>
          <target state="translated">通过调用其&lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;方法刷新流。请注意， &lt;code&gt;close()&lt;/code&gt; 方法是从&lt;a href=&quot;logging#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt;继承的，因此不会输出任何内容，因此有时可能需要显式的&lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="f4020d665d9a15a4d0ab442217ea3d38ffe31911" translate="yes" xml:space="preserve">
          <source>Folders of the style introduced by the Courier mail transfer agent are also supported. Any subdirectory of the main mailbox is considered a folder if &lt;code&gt;'.'&lt;/code&gt; is the first character in its name. Folder names are represented by &lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; without the leading &lt;code&gt;'.'&lt;/code&gt;. Each folder is itself a Maildir mailbox but should not contain other folders. Instead, a logical nesting is indicated using &lt;code&gt;'.'&lt;/code&gt; to delimit levels, e.g., &amp;ldquo;Archived.2005.07&amp;rdquo;.</source>
          <target state="translated">还支持使用Courier邮件传输代理引入的样式的文件夹。如果 &lt;code&gt;'.'&lt;/code&gt; ，则主邮箱的任何子目录均被视为文件夹。是其名称中的第一个字符。文件夹名称由&lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt;表示，不带前导 &lt;code&gt;'.'&lt;/code&gt; 。每个文件夹本身就是一个Maildir邮箱，但不应包含其他文件夹。而是使用 &lt;code&gt;'.'&lt;/code&gt; 指示逻辑嵌套。划定级别，例如&amp;ldquo; Archived.2005.07&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e0afbb547de77db1371251680e81a10a8521c254" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; rules on unverifiable transactions (usually, an unverifiable transaction is one resulting from a redirect or a request for an image hosted on another site). If this is false, cookies are &lt;em&gt;never&lt;/em&gt; blocked on the basis of verifiability</source>
          <target state="translated">遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;规则对不可验证的交易（通常，不可验证的交易是重定向或请求托管在另一个站点上的映像所导致的交易）。如果这是错误的，则&lt;em&gt;不会&lt;/em&gt;基于可验证性阻止cookie</target>
        </trans-unit>
        <trans-unit id="46a2e0da6005d5c7eddb823accb719141d484e5c" translate="yes" xml:space="preserve">
          <source>Following the syntax specifications in &lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1808&lt;/strong&gt;&lt;/a&gt;, urlparse recognizes a netloc only if it is properly introduced by &amp;lsquo;//&amp;rsquo;. Otherwise the input is presumed to be a relative URL and thus to start with a path component.</source>
          <target state="translated">遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1808中&lt;/strong&gt;&lt;/a&gt;的语法规范，仅当由'//'正确引入netloc时，urlparse才识别它。否则，假定输入为相对URL，因此从路径组件开始。</target>
        </trans-unit>
        <trans-unit id="f67ed379569ddcc92ff738fa2c112d30bd25f249" translate="yes" xml:space="preserve">
          <source>Following those is a set of examples of using the fundamental parts of the APIs covered in the preceding sections.</source>
          <target state="translated">在这些之后,是一组使用前面几节中所涉及的API基本部分的例子。</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="e52f0c6de209dfb773b81a5673b25d8bbc8e41eb" translate="yes" xml:space="preserve">
          <source>For 200 error codes, the response object is returned immediately.</source>
          <target state="translated">对于200错误代码,立即返回响应对象。</target>
        </trans-unit>
        <trans-unit id="86ecf6649b6cf50b465714b6d4be9d666f6c9256" translate="yes" xml:space="preserve">
          <source>For 8-bit (bytes) patterns:</source>
          <target state="translated">对于8位(字节)模式。</target>
        </trans-unit>
        <trans-unit id="364fc032d2ac2d86022ecf240a005c499b0e698c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; objects, the format codes for hours, minutes, seconds, and microseconds should not be used, as &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; objects have no such values. If they&amp;rsquo;re used anyway, &lt;code&gt;0&lt;/code&gt; is substituted for them.</source>
          <target state="translated">对于&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象，不应使用小时，分钟，秒和微秒的格式代码，因为&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象没有这样的值。如果仍然使用它们，则将 &lt;code&gt;0&lt;/code&gt; 替换为它们。</target>
        </trans-unit>
        <trans-unit id="21d045e0f9184298bfc8cd53780d2b8799a0cad1" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects, the format codes for year, month, and day should not be used, as &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects have no such values. If they&amp;rsquo;re used anyway, &lt;code&gt;1900&lt;/code&gt; is substituted for the year, and &lt;code&gt;1&lt;/code&gt; for the month and day.</source>
          <target state="translated">对于&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象，不应使用年，月和日的格式代码，因为&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象没有这样的值。如果仍然使用它们，则用 &lt;code&gt;1900&lt;/code&gt; 代替年份，用 &lt;code&gt;1&lt;/code&gt; 代替月份和日期。</target>
        </trans-unit>
        <trans-unit id="7908bd03afc2ba909165e823ebd06ea57784d13a" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands &lt;em&gt;base&lt;/em&gt; and &lt;em&gt;exp&lt;/em&gt;, if &lt;em&gt;mod&lt;/em&gt; is present, &lt;em&gt;mod&lt;/em&gt; must also be of integer type and &lt;em&gt;mod&lt;/em&gt; must be nonzero. If &lt;em&gt;mod&lt;/em&gt; is present and &lt;em&gt;exp&lt;/em&gt; is negative, &lt;em&gt;base&lt;/em&gt; must be relatively prime to &lt;em&gt;mod&lt;/em&gt;. In that case, &lt;code&gt;pow(inv_base, -exp, mod)&lt;/code&gt; is returned, where &lt;em&gt;inv_base&lt;/em&gt; is an inverse to &lt;em&gt;base&lt;/em&gt; modulo &lt;em&gt;mod&lt;/em&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;操作数&lt;em&gt;base&lt;/em&gt;和&lt;em&gt;exp&lt;/em&gt;，如果存在&lt;em&gt;mod&lt;/em&gt;，则&lt;em&gt;mod&lt;/em&gt;也必须为整数类型，并且&lt;em&gt;mod&lt;/em&gt;必须为非零。如果存在&lt;em&gt;mod&lt;/em&gt;且&lt;em&gt;exp&lt;/em&gt;为负，则&lt;em&gt;base&lt;/em&gt;必须相对&lt;em&gt;mod&lt;/em&gt;而言为素数。在这种情况下，将返回 &lt;code&gt;pow(inv_base, -exp, mod)&lt;/code&gt; ，其中&lt;em&gt;inv_base&lt;/em&gt;是&lt;em&gt;基本&lt;/em&gt;模&lt;em&gt;mod&lt;/em&gt;的倒数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="704b75eae7e4709ca3714d6d7d487a58699927fc" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.execle&quot;&gt;&lt;code&gt;execle()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execlpe&quot;&gt;&lt;code&gt;execlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.execvpe&quot;&gt;&lt;code&gt;execvpe()&lt;/code&gt;&lt;/a&gt; (note that these all end in &amp;ldquo;e&amp;rdquo;), the &lt;em&gt;env&lt;/em&gt; parameter must be a mapping which is used to define the environment variables for the new process (these are used instead of the current process&amp;rsquo; environment); the functions &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;execl()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execlp&quot;&gt;&lt;code&gt;execlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.execvp&quot;&gt;&lt;code&gt;execvp()&lt;/code&gt;&lt;/a&gt; all cause the new process to inherit the environment of the current process.</source>
          <target state="translated">对于&lt;a href=&quot;#os.execlpe&quot;&gt; &lt;code&gt;execlpe()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#os.execle&quot;&gt; &lt;code&gt;execle()&lt;/code&gt; &lt;/a&gt;，execlpe（），&lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.execvpe&quot;&gt; &lt;code&gt;execvpe()&lt;/code&gt; &lt;/a&gt;（请注意，这些都以&amp;ldquo; e&amp;rdquo;结尾），&lt;em&gt;env&lt;/em&gt;参数必须是用于定义新进程的环境变量的映射（这些用于代替当前流程的环境）；函数&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;execl()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.execlp&quot;&gt; &lt;code&gt;execlp()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.execvp&quot;&gt; &lt;code&gt;execvp()&lt;/code&gt; &lt;/a&gt;都使新进程继承当前进程的环境。</target>
        </trans-unit>
        <trans-unit id="51157755c0e076cf72d6ba4f3983e0a2ccf80593" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt; on some platforms, &lt;em&gt;path&lt;/em&gt; may also be specified as an open file descriptor. This functionality may not be supported on your platform; you can check whether or not it is available using &lt;a href=&quot;#os.supports_fd&quot;&gt;&lt;code&gt;os.supports_fd&lt;/code&gt;&lt;/a&gt;. If it is unavailable, using it will raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于某些平台上的&lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt;，也可以将&lt;em&gt;路径&lt;/em&gt;指定为打开文件描述符。您的平台可能不支持此功能；您可以使用&lt;a href=&quot;#os.supports_fd&quot;&gt; &lt;code&gt;os.supports_fd&lt;/code&gt; &lt;/a&gt;检查它是否可用。如果不可用，使用它将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d87b8bebbe6ef625c185669fd69bb1d18a46801" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.spawnle&quot;&gt;&lt;code&gt;spawnle()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlpe&quot;&gt;&lt;code&gt;spawnlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnve&quot;&gt;&lt;code&gt;spawnve()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.spawnvpe&quot;&gt;&lt;code&gt;spawnvpe()&lt;/code&gt;&lt;/a&gt; (note that these all end in &amp;ldquo;e&amp;rdquo;), the &lt;em&gt;env&lt;/em&gt; parameter must be a mapping which is used to define the environment variables for the new process (they are used instead of the current process&amp;rsquo; environment); the functions &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawnl()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlp&quot;&gt;&lt;code&gt;spawnlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnv&quot;&gt;&lt;code&gt;spawnv()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.spawnvp&quot;&gt;&lt;code&gt;spawnvp()&lt;/code&gt;&lt;/a&gt; all cause the new process to inherit the environment of the current process. Note that keys and values in the &lt;em&gt;env&lt;/em&gt; dictionary must be strings; invalid keys or values will cause the function to fail, with a return value of &lt;code&gt;127&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#os.spawnle&quot;&gt; &lt;code&gt;spawnle()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.spawnlpe&quot;&gt; &lt;code&gt;spawnlpe()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.spawnve&quot;&gt; &lt;code&gt;spawnve()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.spawnvpe&quot;&gt; &lt;code&gt;spawnvpe()&lt;/code&gt; &lt;/a&gt;（请注意，这些都以&amp;ldquo; e&amp;rdquo;结尾），&lt;em&gt;env&lt;/em&gt;参数必须是用于定义新进程的环境变量的映射（它们用于代替当前流程的环境）；函数&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawnl()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.spawnlp&quot;&gt; &lt;code&gt;spawnlp()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.spawnv&quot;&gt; &lt;code&gt;spawnv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.spawnvp&quot;&gt; &lt;code&gt;spawnvp()&lt;/code&gt; &lt;/a&gt;都使新进程继承当前进程的环境。请注意，&lt;em&gt;env&lt;/em&gt;词典中的键和值必须是字符串；无效的键或值将导致函数失败，返回值为 &lt;code&gt;127&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
