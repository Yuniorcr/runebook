<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="20b6a4b3307f202d92fa8064e6e4315d50ae73a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chmod&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.chmod&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="378e0b2877a8d38d64283378190713357b7bc3ef" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.chown&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;uid&lt;/code&gt; ， &lt;code&gt;gid&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="274b00973197b823aae949dcaae896de0441df9b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.exec&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;args&lt;/code&gt; 和 &lt;code&gt;env&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.exec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7b159e28e71480331f48c5a29274f30f16dacee" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fork&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.fork&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f538747e2ad1c4b9f997fc9bff298b3005abf264" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.forkpty&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.forkpty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b615b2db59ea7b4eaf65621d07438e8d93cdf83a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fwalk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;follow_symlinks&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.fwalk&lt;/code&gt; ，其参数为 &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;topdown&lt;/code&gt; ， &lt;code&gt;onerror&lt;/code&gt; ， &lt;code&gt;follow_symlinks&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffe03c0e428f4ba678d3c3035d95471c980b0cea" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.getxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;attribute&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.getxattr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d76717857a00c7bb21d54df919ae81654bbd5b1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.kill&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;pid&lt;/code&gt; ， &lt;code&gt;sig&lt;/code&gt; 参数引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.kill&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed5fc375e226e3e8698afd7fc246479c4d94b3a8" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.killpg&lt;/code&gt; with arguments &lt;code&gt;pgid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;pgid&lt;/code&gt; ， &lt;code&gt;sig&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.killpg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59dc2895ca36fac2e7468e922680db7ebaa3d463" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.link&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;src_dir_fd&lt;/code&gt;, &lt;code&gt;dst_dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.link&lt;/code&gt; 带参数的 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; ， &lt;code&gt;src_dir_fd&lt;/code&gt; ， &lt;code&gt;dst_dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7083acb1dbec7ee4b5630b61dfa858df623a3850" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.listdir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.listdir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3a920136272be815611c2d6dab6cb082f6df88a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.listxattr&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.listxattr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d287f664089f4078a7263a7049218d14460171de" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.lockf&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;fd&lt;/code&gt; ， &lt;code&gt;cmd&lt;/code&gt; ， &lt;code&gt;len&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.lockf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45a386acd2f7fa1fbf919aa594dd61bbb9294416" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.mkdir&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.mkdir&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3b31aaa8953beecb6ffdeee59d2a485f83cbd7b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.posix_spawn&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;argv&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;argv&lt;/code&gt; 和 &lt;code&gt;env&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.posix_spawn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d06868d234daf38f3f2f681166603eb58894c989" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.putenv&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.putenv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="854337e191eb6b8298e72fffaba8e33d9876f525" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.remove&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.remove&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="154433402e6fa5d841660f2d8f4a1b6ab0243e1d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.removexattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;attribute&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.removexattr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275c4a5ee85b9abcc362289e6cba9379af870a49" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.rename&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;src_dir_fd&lt;/code&gt;, &lt;code&gt;dst_dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.rename&lt;/code&gt; 带参数的 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; ， &lt;code&gt;src_dir_fd&lt;/code&gt; ， &lt;code&gt;dst_dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e89464c5128586bbc1c0d89a0e03098ab11ab9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.rmdir&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.rmdir&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ccad36ebce32e09acb40556b57e9566adf00938" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.scandir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.scandir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="006e3a82a1051beb30f3c48da8e5da54a4282e7c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.setxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;attribute&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.setxattr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="334691f608afd7386ed868f781fac6bbbbd543b6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.spawn&lt;/code&gt; with arguments &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;args&lt;/code&gt; ， &lt;code&gt;env&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.spawn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c8b466f84cc3ef5aeabfe12eeac58225928a951" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.startfile&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;operation&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.startfile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9551d50e5a0f710f1d028321bb78204205f9f38" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.symlink&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.symlink&lt;/code&gt; 带参数的 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21b4a379a91dc55d5b77c3a653c22c27c0c4c20f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.system&lt;/code&gt; with argument &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;command&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.system&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1427152b59da45b4f8e37086cd50203f4b006498" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.truncate&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;fd&lt;/code&gt; ， &lt;code&gt;length&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.truncate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ae05ea1bc6d3cd9c474e444a8d9f63ddc9cc1aa" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.truncate&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;length&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.truncate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1712064f134deb811ae656a6409300a5986d52c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.unsetenv&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.unsetenv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01ae9110a5d43d514f3094a8016db7d9a49e4515" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.utime&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;times&lt;/code&gt;, &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;os.utime&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;times&lt;/code&gt; ， &lt;code&gt;ns&lt;/code&gt; ， &lt;code&gt;dir_fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46fc5caa961204a76354d756722f65c387407123" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.walk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;followlinks&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;topdown&lt;/code&gt; ， &lt;code&gt;onerror&lt;/code&gt; ， &lt;code&gt;followlinks&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;os.walk&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b13e5e7e53ca8011d500846f01a305cb24ba3491" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pathlib.Path.glob&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;pattern&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;pathlib.Path.glob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84e7534be8bde82e8940267fbdc1ae3df45a9e0a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pathlib.Path.rglob&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;pattern&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;pathlib.Path.rglob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdfad89ab653d3d9cc0dab43be3eaac363bfafdc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pdb.Pdb&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;pdb.Pdb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99e5e53409656c2149cec3c383ed1d42bcbe1bf1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pickle.find_class&lt;/code&gt; with arguments &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;pickle.find_class&lt;/code&gt; 带参数的 &lt;code&gt;module&lt;/code&gt; ， &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e86db6c09bb7d31f34b954259251378ca4a58e9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;poplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;poplib.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30e2f489285088f500a55e2151fcdae9d42cf742" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pty.spawn&lt;/code&gt; with argument &lt;code&gt;argv&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;argv&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;pty.spawn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9de765e8591c25f9f18e0ee5d8f7018fba0916e4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;resource.prlimit&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;pid&lt;/code&gt; ， &lt;code&gt;resource&lt;/code&gt; ， &lt;code&gt;limits&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;resource.prlimit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c6016ba7df0b35fe3a489b4dbc077ff97161cb3" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;resource.setrlimit&lt;/code&gt; with arguments &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;resource&lt;/code&gt; ， &lt;code&gt;limits&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;resource.setrlimit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a6de05e876adfc755417ecda6a498cfed5086cf" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.chown&lt;/code&gt; ，其参数为 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;user&lt;/code&gt; ， &lt;code&gt;group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549f0ac6513ebcaa80a47a4216141637a41f3b29" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copyfile&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.copyfile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8923d234f5e1efb5c46552ee7803e7767f775326" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copymode&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.copymode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="056b5229130ad3d5648ca9a191fcb25db0204b04" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copystat&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.copystat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ec11a227b843f0eccffd0d9d48026cd47ccfdaa" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copytree&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.copytree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b1f2bd9cb1f51c7860d9296ed4e355042c9671f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.make_archive&lt;/code&gt; with arguments &lt;code&gt;base_name&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;root_dir&lt;/code&gt;, &lt;code&gt;base_dir&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;shutil.make_archive&lt;/code&gt; 带参数 &lt;code&gt;base_name&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;root_dir&lt;/code&gt; ， &lt;code&gt;base_dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e67b64611ff2a90f4f41a8817f49868cb3b05af" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.move&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;src&lt;/code&gt; ， &lt;code&gt;dst&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.move&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b6ab294d1e818bfc0a21642bc9224b317628735" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.rmtree&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;path&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.rmtree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88a07921a67fdb5cf97a0654f27806c1eb74ad5d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.unpack_archive&lt;/code&gt; with arguments &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;extract_dir&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;shutil.unpack_archive&lt;/code&gt; ，其参数为 &lt;code&gt;filename&lt;/code&gt; ， &lt;code&gt;extract_dir&lt;/code&gt; ， &lt;code&gt;format&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25b15f8577cbd0fc414d78d5b41a1ac8e0573fc1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;signal.pthread_kill&lt;/code&gt; with arguments &lt;code&gt;thread_id&lt;/code&gt;, &lt;code&gt;signalnum&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;signal.pthread_kill&lt;/code&gt; 带参数 &lt;code&gt;thread_id&lt;/code&gt; ， &lt;code&gt;signalnum&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a780a3ef482d641b115f37933cb8186f24825db" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;smtplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;smtplib.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72e3e7abfbdd34540c3b592afbc8160df0c27e61" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.__new__&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;.</source>
          <target state="translated">引发一个&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.__new__&lt;/code&gt; ，其参数为 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;family&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;protocol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f13ffb0d7c17142c0d5837a56b05d32e42ae7aef" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.bind&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;address&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.bind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52b5691ba9376ae2c52f23fbd452b354ff224b0e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;address&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba9ec04f23995f6b706abe491c392041f3e18302" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getaddrinfo&lt;/code&gt; with arguments &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;host&lt;/code&gt; ， &lt;code&gt;port&lt;/code&gt; ， &lt;code&gt;family&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;protocol&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.getaddrinfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbaad4be0c50af7d2eea49386900e38cd27ab02d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostbyaddr&lt;/code&gt; with argument &lt;code&gt;ip_address&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;ip_address&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.gethostbyaddr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c476710b9f2e8eb127c60fe270b7d0adb4839a1d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostbyname&lt;/code&gt; with argument &lt;code&gt;hostname&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;hostname&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.gethostbyname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41bde25bc577978d285c312d7eed21cd86f48a4c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostname&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.gethostname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="243615721a7a0f9b8575016d5087c0217e9f5753" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getnameinfo&lt;/code&gt; with argument &lt;code&gt;sockaddr&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;sockaddr&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.getnameinfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8be7f6ac85fa7cb2bd384cf154e3e316edca27a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getservbyname&lt;/code&gt; with arguments &lt;code&gt;servicename&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;servicename&lt;/code&gt; ， &lt;code&gt;protocolname&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.getservbyname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31fd9516e1ea931e96f7d064707ffeeef7556b70" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getservbyport&lt;/code&gt; with arguments &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;port&lt;/code&gt; ， &lt;code&gt;protocolname&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.getservbyport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="158cd9da2db5b46ce03c4f0d0f68b165dfa34894" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sendmsg&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;address&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.sendmsg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd8cfeb15c70ee83a2c70931f6acb79ac2ecbbf5" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sendto&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;address&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.sendto&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55056cfce35597cbbeb72e3c4c0e0adf1dd5f86a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sethostname&lt;/code&gt; with argument &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;name&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;socket.sethostname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a781d737477fda3dca4474d595df4eb9501850e7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sqlite3.connect&lt;/code&gt; with argument &lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;database&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sqlite3.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4925a792ab15ba948f5df10163dff78cf7823812" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.closelog&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;syslog.closelog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a7480dbb0157584fe0fc274b9e791aa642075f7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.openlog&lt;/code&gt; with arguments &lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;logoption&lt;/code&gt;, &lt;code&gt;facility&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;syslog.openlog&lt;/code&gt; 带参数 &lt;code&gt;ident&lt;/code&gt; ， &lt;code&gt;logoption&lt;/code&gt; ， &lt;code&gt;facility&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cf4b7b33ae28857837bfda35af6b2bacadd2b8f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.setlogmask&lt;/code&gt; with argument &lt;code&gt;maskpri&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;syslog.setlogmask&lt;/code&gt; 与参数 &lt;code&gt;maskpri&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4160b5990c945601a8b599351deb25385bd266a6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.syslog&lt;/code&gt; with arguments &lt;code&gt;priority&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;priority&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;syslog.syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="631318cee4026563eef10a46dd35e91230064ed2" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;telnetlib.Telnet.open&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;telnetlib.Telnet.open&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b827dd581199ea8b3e310e0b7982f057a447709" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;telnetlib.Telnet.write&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;buffer&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;telnetlib.Telnet.write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb441af255307fb4987873dc4ba5b5cb29116f46" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;tempfile.mkdtemp&lt;/code&gt; with argument &lt;code&gt;fullpath&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;fullpath&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;tempfile.mkdtemp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549c513d3923079d6bd986fcb1a1d0fb30c3bd50" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;tempfile.mkstemp&lt;/code&gt; with argument &lt;code&gt;fullpath&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;fullpath&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;tempfile.mkstemp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8c911396da30965d0d4925c79c5f27f02ed1d21" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;webbrowser.open&lt;/code&gt; with argument &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;url&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;webbrowser.open&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="becb6b292c48bca62d12e0c6e307fb409006dbb9" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.ConnectRegistry&lt;/code&gt; with arguments &lt;code&gt;computer_name&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;computer_name&lt;/code&gt; ， &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.ConnectRegistry&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38d2b25f921cb04cfabb111d68752863ba88acfd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.CreateKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; 和 &lt;code&gt;access&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.CreateKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1de2fecfbd25187d516ee0903df8df413010d76" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DeleteKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; ， &lt;code&gt;access&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.DeleteKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd56b8a99fd38d26751f2118ed67b08a5113c21" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DeleteValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.DeleteValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5b79c9cdf2353098e6269001a976aebc73258f4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DisableReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.DisableReflectionKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eca81343c80b5da0bb4154b3bfdbcd0a814c523" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnableReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.EnableReflectionKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f71c48ea3d8417ef425fcb7ed978f895b23b59" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnumKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;index&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.EnumKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="909314b840d434b0b4a6f73231e9e50f1abc338e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnumValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;index&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.EnumValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f814a42899ca638d649a0a2208e63755ddc133" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.ExpandEnvironmentStrings&lt;/code&gt; with argument &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;str&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.ExpandEnvironmentStrings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed130a3d35da585f7e58f44493356c1830bc6526" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.LoadKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;.</source>
          <target state="translated">引发带有参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; ， &lt;code&gt;file_name&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.LoadKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d8a3901c5c8a70f425579c18fb423e7cd512407" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.OpenKey/result&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.OpenKey/result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb1d19e696208caec6cc4f604bf9b4face28d793" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.OpenKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; 和 &lt;code&gt;access&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.OpenKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adbea71778cde2fd4167434485b1f3f604cf0577" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.PyHKEY.Detach&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.PyHKEY.Detach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a353604a08dad7c40d5ca74f0d24a5cd63f2ba5e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryInfoKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.QueryInfoKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d401aa7c38103f2bb793cb45fe649d94e4f319ca" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.QueryReflectionKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="389ed35fecc8df9bf935c5b7749495b8fe874201" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;value_name&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;winreg.QueryValue&lt;/code&gt; 带参数的 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; ， &lt;code&gt;value_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d225dc0ccc2502e7092c5a77050f1d789af5d32" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.SaveKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;file_name&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.SaveKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec9964950f335aaa8a619156a2d86be67823b8cd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.SetValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;sub_key&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;winreg.SetValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b31f9833da01faadb2b0fb996ec1059685c9aa6b" translate="yes" xml:space="preserve">
          <source>Raises an auditing event &lt;code&gt;builtins.input/result&lt;/code&gt; with the result after successfully reading input.</source>
          <target state="translated">成功读取输入后，使用结果引发审核事件 &lt;code&gt;builtins.input/result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06077ce794e2fdaba6736617e21ce7a808c6346f" translate="yes" xml:space="preserve">
          <source>Raises an error if a duplicate member name is found instead of creating an alias:</source>
          <target state="translated">如果发现重复的成员名,而不是创建别名,则会引发错误。</target>
        </trans-unit>
        <trans-unit id="ff05810a934c386ddb661bfee62ea3cebdf266d9" translate="yes" xml:space="preserve">
          <source>Raises an exception using one of the 3 forms of the &lt;code&gt;raise&lt;/code&gt; statement, depending on the value of &lt;em&gt;argc&lt;/em&gt;:</source>
          <target state="translated">根据&lt;em&gt;argc&lt;/em&gt;的值，使用 &lt;code&gt;raise&lt;/code&gt; 语句的3种形式之一引发异常：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ba28f92358b5eb9c93f89e4c9613e9169554bc0" translate="yes" xml:space="preserve">
          <source>Raising exceptions with mocks</source>
          <target state="translated">用mocks提出异常</target>
        </trans-unit>
        <trans-unit id="59ea108a0cd83dee0099a55fafd5a1e049f54cd6" translate="yes" xml:space="preserve">
          <source>Random generation</source>
          <target state="translated">随机生成</target>
        </trans-unit>
        <trans-unit id="aa759b82b4d6d1756df7ae1bbf44212e19e1e8bc" translate="yes" xml:space="preserve">
          <source>Random numbers</source>
          <target state="translated">随机数</target>
        </trans-unit>
        <trans-unit id="272eed3efd9e1be092b154f89ad938be8590f835" translate="yes" xml:space="preserve">
          <source>Randomized hashing</source>
          <target state="translated">随机哈希</target>
        </trans-unit>
        <trans-unit id="5a6094c432313c5605d8ee138be752abfaa8b607" translate="yes" xml:space="preserve">
          <source>Randomized hashing is designed for situations where one party, the message preparer, generates all or part of a message to be signed by a second party, the message signer. If the message preparer is able to find cryptographic hash function collisions (i.e., two messages producing the same hash value), then they might prepare meaningful versions of the message that would produce the same hash value and digital signature, but with different results (e.g., transferring $1,000,000 to an account, rather than $10). Cryptographic hash functions have been designed with collision resistance as a major goal, but the current concentration on attacking cryptographic hash functions may result in a given cryptographic hash function providing less collision resistance than expected. Randomized hashing offers the signer additional protection by reducing the likelihood that a preparer can generate two or more messages that ultimately yield the same hash value during the digital signature generation process &amp;mdash; even if it is practical to find collisions for the hash function. However, the use of randomized hashing may reduce the amount of security provided by a digital signature when all portions of the message are prepared by the signer.</source>
          <target state="translated">随机散列是为以下情况设计的：一方（消息准备者）生成要由另一方（消息签名者）签名的全部或部分消息。如果消息准备者能够发现密码哈希函数冲突（即，两条消息产生相同的哈希值），则他们可能会准备有意义的消息版本，这些消息将产生相同的哈希值和数字签名，但结果不同（例如，将$ 1,000,000转移到一个帐户，而不是$ 10）。已经设计了以抗冲突为主要目标的密码散列函数，但是当前集中在攻击密码散列函数上可能导致给定的密码散列函数提供的抗碰撞性低于预期。随机散列可以通过减少准备者可以生成两个或多个消息的可能性，从而为签名者提供额外的保护，这些消息最终会在数字签名生成过程中产生相同的散列值，即使为散列函数查找冲突是可行的。但是，当签名者准备了消息的所有部分时，使用随机散列可能会降低数字签名提供的安全性。</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="89323c437f79f07829673962949a543da59ede1e" translate="yes" xml:space="preserve">
          <source>Range examples:</source>
          <target state="translated">范围例子:</target>
        </trans-unit>
        <trans-unit id="87a5eaaadc19a029bb8b37ebe5ca1eb9e3fabfa6" translate="yes" xml:space="preserve">
          <source>Range objects implement the &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt; ABC, and provide features such as containment tests, element index lookup, slicing and support for negative indices (see &lt;a href=&quot;#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;):</source>
          <target state="translated">范围对象实现&lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; &lt;/a&gt; ABC，并提供诸如包含测试，元素索引查找，切片和对负索引的支持等功能（请参阅&lt;a href=&quot;#typesseq&quot;&gt;序列类型&amp;mdash; list，tuple，range&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="72685baa2f647e006214a79053c591c0a8565a9b" translate="yes" xml:space="preserve">
          <source>Ranges containing absolute values larger than &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt; are permitted but some features (such as &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;) may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">允许包含绝对值大于&lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;的范围，但是某些功能（例如&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;）可能会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46750bd43585be9fb4c7e768a335b1aa32fb5137" translate="yes" xml:space="preserve">
          <source>Ranges implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; sequence operations except concatenation and repetition (due to the fact that range objects can only represent sequences that follow a strict pattern and repetition and concatenation will usually violate that pattern).</source>
          <target state="translated">范围实现除连接和重复之外的所有&lt;a href=&quot;#typesseq-common&quot;&gt;常见&lt;/a&gt;序列操作（由于范围对象只能表示遵循严格模式的序列，而重复和连接通常会违反该模式）。</target>
        </trans-unit>
        <trans-unit id="716cf010adf57500bb3f0b679572b06a5bc48ee3" translate="yes" xml:space="preserve">
          <source>Ranges of characters can be indicated by giving two characters and separating them by a &lt;code&gt;'-'&lt;/code&gt;, for example &lt;code&gt;[a-z]&lt;/code&gt; will match any lowercase ASCII letter, &lt;code&gt;[0-5][0-9]&lt;/code&gt; will match all the two-digits numbers from &lt;code&gt;00&lt;/code&gt; to &lt;code&gt;59&lt;/code&gt;, and &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; will match any hexadecimal digit. If &lt;code&gt;-&lt;/code&gt; is escaped (e.g. &lt;code&gt;[a\-z]&lt;/code&gt;) or if it&amp;rsquo;s placed as the first or last character (e.g. &lt;code&gt;[-a]&lt;/code&gt; or &lt;code&gt;[a-]&lt;/code&gt;), it will match a literal &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">可以通过给出两个字符并用 &lt;code&gt;'-'&lt;/code&gt; 隔开来表示字符范围，例如 &lt;code&gt;[a-z]&lt;/code&gt; 将匹配任何小写的ASCII字母， &lt;code&gt;[0-5][0-9]&lt;/code&gt; 将匹配所有的两位数字 &lt;code&gt;00&lt;/code&gt; 到 &lt;code&gt;59&lt;/code&gt; ，并且 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; 将匹配任何十六进制数字。如果 &lt;code&gt;-&lt;/code&gt; 进行了转义（例如 &lt;code&gt;[a\-z]&lt;/code&gt; ）或将其放置为第一个或最后一个字符（例如 &lt;code&gt;[-a]&lt;/code&gt; 或 &lt;code&gt;[a-]&lt;/code&gt; ），则它将与文字 &lt;code&gt;'-'&lt;/code&gt; 相匹配。</target>
        </trans-unit>
        <trans-unit id="3a9c736b3175d6576311a0ce0ad8c80fa6631f94" translate="yes" xml:space="preserve">
          <source>Rate</source>
          <target state="translated">Rate</target>
        </trans-unit>
        <trans-unit id="abbef9c3268c1d4ea987e7e462d7be3209f1ac4b" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; is actually a mutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-list&quot;&gt;Lists&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;实际上不是可变的序列类型，而是&lt;a href=&quot;stdtypes#typesseq-list&quot;&gt;列表&lt;/a&gt;和&lt;a href=&quot;stdtypes#typesseq&quot;&gt;序列类型-list，tuple，range中&lt;/a&gt;记录的，而不是一个函数。</target>
        </trans-unit>
        <trans-unit id="9cce469c6e429669ba4c57d079475f8f780d1eec" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; is actually an immutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-range&quot;&gt;Ranges&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;不是函数，实际上是不变的序列类型，如&lt;a href=&quot;stdtypes#typesseq-range&quot;&gt;Ranges&lt;/a&gt;和&lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types（列表，元组，range）中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3078547b80644efcb71d3452f708c41bb34c618e" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; is actually an immutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-tuple&quot;&gt;Tuples&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;实际上不是一个函数，而是一个不变的序列类型，如&amp;ldquo; &lt;a href=&quot;stdtypes#typesseq-tuple&quot;&gt;元组&lt;/a&gt;和&lt;a href=&quot;stdtypes#typesseq&quot;&gt;序列类型&amp;mdash; list，tuple，range&amp;rdquo;中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ea2681e0b6a5dc46f1980daa1ae673f6b94d568" translate="yes" xml:space="preserve">
          <source>Rather than serializing all transition data, &lt;code&gt;ZoneInfo&lt;/code&gt; objects are serialized by key, and &lt;code&gt;ZoneInfo&lt;/code&gt; objects constructed from files (even those with a value for &lt;code&gt;key&lt;/code&gt; specified) cannot be pickled.</source>
          <target state="translated">不是序列化所有转换数据， &lt;code&gt;ZoneInfo&lt;/code&gt; 对象是通过键序列化的，并且不能对从文件（甚至是那些具有指定 &lt;code&gt;key&lt;/code&gt; 文件）构造的 &lt;code&gt;ZoneInfo&lt;/code&gt; 对象进行腌制。</target>
        </trans-unit>
        <trans-unit id="056b01b619354da320f406f426bba963a64cf431" translate="yes" xml:space="preserve">
          <source>Raw File I/O</source>
          <target state="translated">原始文件I/O</target>
        </trans-unit>
        <trans-unit id="c7c1a79be24017e3ee6febc2a83a78872f57cd0c" translate="yes" xml:space="preserve">
          <source>Raw I/O</source>
          <target state="translated">原始I/O</target>
        </trans-unit>
        <trans-unit id="1aace7c41f767801df880b70c5702c06530aad5b" translate="yes" xml:space="preserve">
          <source>Raw I/O (also called &lt;em&gt;unbuffered I/O&lt;/em&gt;) is generally used as a low-level building-block for binary and text streams; it is rarely useful to directly manipulate a raw stream from user code. Nevertheless, you can create a raw stream by opening a file in binary mode with buffering disabled:</source>
          <target state="translated">原始I / O（也称为&lt;em&gt;无缓冲I / O&lt;/em&gt;）通常用作二进制和文本流的低级构建块；直接从用户代码操作原始流很少有用。不过，您可以通过在禁用缓冲的情况下以二进制模式打开文件来创建原始流：</target>
        </trans-unit>
        <trans-unit id="a3309699934582b28949b166809ac6b9c5c69ccd" translate="yes" xml:space="preserve">
          <source>Raw String Notation</source>
          <target state="translated">原始字符串符号</target>
        </trans-unit>
        <trans-unit id="7cd206a3bf7f92529ea41aa790f166a382b7ac14" translate="yes" xml:space="preserve">
          <source>Raw binary I/O typically provides low-level access to an underlying OS device or API, and does not try to encapsulate it in high-level primitives (this is left to Buffered I/O and Text I/O, described later in this page).</source>
          <target state="translated">原始二进制 I/O 通常提供对底层 OS 设备或 API 的低级访问,并且不尝试将其封装在高级基元中(这留给缓冲 I/O 和文本 I/O,本页稍后将介绍)。</target>
        </trans-unit>
        <trans-unit id="db4b42089a99a01964661da0872d48d12cfdd821" translate="yes" xml:space="preserve">
          <source>Raw binary streams typically provide low-level access to an underlying OS device or API, and do not try to encapsulate it in high-level primitives (this functionality is done at a higher-level in buffered binary streams and text streams, described later in this page).</source>
          <target state="translated">原始二进制流通常提供对底层 OS 设备或 API 的低级访问,并且不尝试将其封装在高级基元中(该功能在缓冲二进制流和文本流中以更高级别的方式完成,本页面稍后将介绍)。</target>
        </trans-unit>
        <trans-unit id="7a4e0efd7f4e3bcbe0f545193d34aaae5e57a2cd" translate="yes" xml:space="preserve">
          <source>Raw string notation (&lt;code&gt;r&quot;text&quot;&lt;/code&gt;) keeps regular expressions sane. Without it, every backslash (&lt;code&gt;'\'&lt;/code&gt;) in a regular expression would have to be prefixed with another one to escape it. For example, the two following lines of code are functionally identical:</source>
          <target state="translated">原始字符串符号（ &lt;code&gt;r&quot;text&quot;&lt;/code&gt; ）使正则表达式保持理智。没有它，正则表达式中的每个反斜杠（ &lt;code&gt;'\'&lt;/code&gt; ）都必须以另一个反斜杠为前缀来转义。例如，以下两行代码在功能上相同：</target>
        </trans-unit>
        <trans-unit id="32b782deb36c27ece9175526e20725ccdaf40c92" translate="yes" xml:space="preserve">
          <source>RawArray(&amp;lsquo;h&amp;rsquo;, 7)</source>
          <target state="translated">RawArray（'h'，7）</target>
        </trans-unit>
        <trans-unit id="626ffe29095fcf739267ebb6f703c4623c0414ff" translate="yes" xml:space="preserve">
          <source>RawArray(&amp;lsquo;i&amp;rsquo;, (9, 2, 8))</source>
          <target state="translated">RawArray（'i'，（9，2，8））</target>
        </trans-unit>
        <trans-unit id="0aeed3acd8679b1c888b9a52532abe1bdab36ec8" translate="yes" xml:space="preserve">
          <source>RawArray(c_int, (9, 2, 8))</source>
          <target state="translated">RawArray(c_int,(9,2,8))</target>
        </trans-unit>
        <trans-unit id="81de3aa1ac25caa95ccc8ece4bfec2012a8f05ec" translate="yes" xml:space="preserve">
          <source>RawArray(c_short, 7)</source>
          <target state="translated">RawArray(c_short,7)</target>
        </trans-unit>
        <trans-unit id="6b1e8433b45042827ff62732cd187628f20e6272" translate="yes" xml:space="preserve">
          <source>RawConfigParser Objects</source>
          <target state="translated">RawConfigParser对象</target>
        </trans-unit>
        <trans-unit id="b9ef9f0bf1bb2774aecf0bc5eac70a0c3df407d0" translate="yes" xml:space="preserve">
          <source>RawValue(&amp;lsquo;d&amp;rsquo;, 2.4)</source>
          <target state="translated">RawValue（'d'，2.4）</target>
        </trans-unit>
        <trans-unit id="a085643483d1d28e296bba8c245adb06cfe5ee8f" translate="yes" xml:space="preserve">
          <source>RawValue(MyStruct, 4, 6)</source>
          <target state="translated">RawValue(MyStruct,4,6)</target>
        </trans-unit>
        <trans-unit id="3964dfdf161c0a4d57f44d29cea2e5ce7b015c24" translate="yes" xml:space="preserve">
          <source>RawValue(c_double, 2.4)</source>
          <target state="translated">RawValue(c_double,2.4)</target>
        </trans-unit>
        <trans-unit id="46819dee760d23017b083e3721863443e51a0535" translate="yes" xml:space="preserve">
          <source>Re-define the sequences that exist in the mailbox based upon &lt;em&gt;sequences&lt;/em&gt;, a dictionary of names mapped to key lists, like returned by &lt;a href=&quot;#mailbox.MH.get_sequences&quot;&gt;&lt;code&gt;get_sequences()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据序列重新定义邮箱中存在的序列，&lt;em&gt;序列&lt;/em&gt;是映射到键列表的名称的字典，就像&lt;a href=&quot;#mailbox.MH.get_sequences&quot;&gt; &lt;code&gt;get_sequences()&lt;/code&gt; &lt;/a&gt;返回的一样。</target>
        </trans-unit>
        <trans-unit id="1aae033584afaf27ba5a2644cdf43922b9557f6e" translate="yes" xml:space="preserve">
          <source>Re-raises the exception currently on top of the stack.</source>
          <target state="translated">重新引发当前堆栈顶部的异常。</target>
        </trans-unit>
        <trans-unit id="8640dd86f3b4479b018eccf7d047f63477657ebe" translate="yes" xml:space="preserve">
          <source>Re-using old test code</source>
          <target state="translated">重新使用旧的测试代码</target>
        </trans-unit>
        <trans-unit id="a3655682a661b47ceabbe8da87b35c82adcc08b0" translate="yes" xml:space="preserve">
          <source>Reached the buffer size limit while looking for a separator.</source>
          <target state="translated">在寻找分离器时,达到了缓冲区大小的限制。</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="0e4518bbf33bc9f34bd39493aecee4ec5624d1b3" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; items (as machine values) from the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt; and append them to the end of the array. If less than &lt;em&gt;n&lt;/em&gt; items are available, &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; is raised, but the items that were available are still inserted into the array. &lt;em&gt;f&lt;/em&gt; must be a real built-in file object; something else with a &lt;code&gt;read()&lt;/code&gt; method won&amp;rsquo;t do.</source>
          <target state="translated">从&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;&lt;em&gt;f中&lt;/em&gt;读取&lt;em&gt;n&lt;/em&gt;项（作为机器值）并将其附加到数组的末尾。如果少于&lt;em&gt;n&lt;/em&gt;个可用项目，则会&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;，但可用项目仍将插入到数组中。&lt;em&gt;f&lt;/em&gt;必须是真正的内置文件对象；使用 &lt;code&gt;read()&lt;/code&gt; 方法的其他操作将无法执行。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="722da3822c54d77dd0f348629c0ad9bac6162d38" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; items (as machine values) from the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt; and append them to the end of the array. If less than &lt;em&gt;n&lt;/em&gt; items are available, &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; is raised, but the items that were available are still inserted into the array. &lt;em&gt;f&lt;/em&gt; must be a real built-in file object; something else with a &lt;code&gt;read()&lt;/code&gt; method won&amp;rsquo;t do.</source>
          <target state="translated">从&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;&lt;em&gt;f中&lt;/em&gt;读取&lt;em&gt;n&lt;/em&gt;项（作为机器值）并将其附加到数组的末尾。如果少于&lt;em&gt;n个&lt;/em&gt;项目可用，则会引发&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;，但是仍然将可用项目插入到数组中。&lt;em&gt;f&lt;/em&gt;必须是真正的内置文件对象；使用 &lt;code&gt;read()&lt;/code&gt; 方法的其他操作将无法执行。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9fd63bf3dd054ea6e4dbb0bf6660d7d5c8c9d79" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; uncompressed bytes without advancing the file position. At most one single read on the compressed stream is done to satisfy the call. The number of bytes returned may be more or less than requested.</source>
          <target state="translated">读取&lt;em&gt;n个&lt;/em&gt;未压缩的字节，而无需提前文件位置。最多只能对压缩流进行一次读取才能满足调用要求。返回的字节数可能大于或小于请求的字节数。</target>
        </trans-unit>
        <trans-unit id="1ecf8a5092366366f98673883ba56da84a5f1831" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;size&lt;/em&gt; bytes from the audio input and return them as a Python string. Unlike most Unix device drivers, OSS audio devices in blocking mode (the default) will block &lt;a href=&quot;#ossaudiodev.oss_audio_device.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; until the entire requested amount of data is available.</source>
          <target state="translated">从音频输入中读取&lt;em&gt;大小&lt;/em&gt;字节，并将其作为Python字符串返回。与大多数Unix设备驱动程序不同，处于阻止模式（默认）的OSS音频设备将阻止&lt;a href=&quot;#ossaudiodev.oss_audio_device.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; ,&lt;/a&gt;直到请求的全部数据可用为止。</target>
        </trans-unit>
        <trans-unit id="7d7576bc1047472ce41ab965ef4da96edf217ad2" translate="yes" xml:space="preserve">
          <source>Read Transports</source>
          <target state="translated">改为运输</target>
        </trans-unit>
        <trans-unit id="bcac2b94b89c15334aebf939b9f27649cff73927" translate="yes" xml:space="preserve">
          <source>Read a bytes object from the user, with primitive line editing capacity.</source>
          <target state="translated">从用户处读取一个字节对象,具有原始行编辑能力。</target>
        </trans-unit>
        <trans-unit id="5bf01d2b2a3ffc92f6637915b0da38b21df691e1" translate="yes" xml:space="preserve">
          <source>Read a data URL. This kind of URL contains the content encoded in the URL itself. The data URL syntax is specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2397.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2397&lt;/strong&gt;&lt;/a&gt;. This implementation ignores white spaces in base64 encoded data URLs so the URL may be wrapped in whatever source file it comes from. But even though some browsers don&amp;rsquo;t mind about a missing padding at the end of a base64 encoded data URL, this implementation will raise an &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in that case.</source>
          <target state="translated">读取数据URL。这种URL包含在URL本身中编码的内容。数据URL语法在&lt;a href=&quot;https://tools.ietf.org/html/rfc2397.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2397中&lt;/strong&gt;&lt;/a&gt;指定。此实现忽略base64编码的数据URL中的空格，因此该URL可以包装在它来自的任何源文件中。但是，即使某些浏览器不介意在base64编码的数据URL末尾缺少填充，在这种情况下，此实现也会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="665d8414ef46a658946867aba8ac7b8f55e2a618" translate="yes" xml:space="preserve">
          <source>Read a keypress and return the resulting character as a byte string. Nothing is echoed to the console. This call will block if a keypress is not already available, but will not wait for</source>
          <target state="translated">读取一个按键,并将结果作为一个字节字符串返回。没有任何内容会被回传到控制台。如果没有可用的按键,这个调用将阻止,但不会等待</target>
        </trans-unit>
        <trans-unit id="b70aaf6a02c374e2e69473c3abd2416d016ecad9" translate="yes" xml:space="preserve">
          <source>Read a plist data from a bytes object. Return the root object.</source>
          <target state="translated">从字节对象中读取plist数据。返回根对象。</target>
        </trans-unit>
        <trans-unit id="729442432e3bea73e864a90ad683329f1a141062" translate="yes" xml:space="preserve">
          <source>Read a plist file. &lt;em&gt;fp&lt;/em&gt; should be a readable and binary file object. Return the unpacked root object (which usually is a dictionary).</source>
          <target state="translated">读取plist文件。&lt;em&gt;fp&lt;/em&gt;应该是可读的二进制文件对象。返回解压缩的根对象（通常是字典）。</target>
        </trans-unit>
        <trans-unit id="e91234c95e7e365247321ed5c89ff1bd57380573" translate="yes" xml:space="preserve">
          <source>Read a plist file. &lt;em&gt;pathOrFile&lt;/em&gt; may be either a file name or a (readable and binary) file object. Returns the unpacked root object (which usually is a dictionary).</source>
          <target state="translated">读取plist文件。&lt;em&gt;pathOrFile&lt;/em&gt;可以是文件名，也可以是（可读和二进制）文件对象。返回解包的根对象（通常是字典）。</target>
        </trans-unit>
        <trans-unit id="d17bc479e546de7ff883deafc8203e76f0a328da" translate="yes" xml:space="preserve">
          <source>Read a raw token. Ignore the pushback stack, and do not interpret source requests. (This is not ordinarily a useful entry point, and is documented here only for the sake of completeness.)</source>
          <target state="translated">读取一个原始令牌。忽略推送栈,不解释源请求。(这通常不是一个有用的切入点,为了完整起见,这里只做了记录。)</target>
        </trans-unit>
        <trans-unit id="6e656b53db3aedd07c8ef90e1d5712397b704145" translate="yes" xml:space="preserve">
          <source>Read all data until EOF as bytes; block until connection closed.</source>
          <target state="translated">读取所有数据,直到以字节形式读到EOF为止;阻塞直到连接关闭。</target>
        </trans-unit>
        <trans-unit id="eb385b433dc261aeca94f5e4c8c12b73d4692054" translate="yes" xml:space="preserve">
          <source>Read all lines available on the input stream and return them as a list of lines.</source>
          <target state="translated">读取输入流中所有可用的行,并以行列表的形式返回。</target>
        </trans-unit>
        <trans-unit id="eada104490597549a6b5523ffb45caa1528ad4b0" translate="yes" xml:space="preserve">
          <source>Read all the data from the binary file-like object &lt;em&gt;fp&lt;/em&gt;, parse the resulting bytes, and return the message object. &lt;em&gt;fp&lt;/em&gt; must support both the &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;read()&lt;/code&gt; methods.</source>
          <target state="translated">从类似于二进制文件的对象&lt;em&gt;fp中&lt;/em&gt;读取所有数据，解析结果字节，然后返回消息对象。&lt;em&gt;fp&lt;/em&gt;必须同时支持&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;read()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6e652c2d6780e2d096031f76a5ba14fa62cbb797" translate="yes" xml:space="preserve">
          <source>Read all the data from the text-mode file-like object &lt;em&gt;fp&lt;/em&gt;, parse the resulting text, and return the root message object. &lt;em&gt;fp&lt;/em&gt; must support both the &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;io#io.TextIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; methods on file-like objects.</source>
          <target state="translated">从类似于文本模式文件的对象&lt;em&gt;fp中&lt;/em&gt;读取所有数据，解析结果文本，然后返回根消息对象。&lt;em&gt;fp&lt;/em&gt;必须在类似文件的对象上同时支持&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;io#io.TextIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="151332fb9b8beb4e0a8e30f6906bbbc5f48dbfde" translate="yes" xml:space="preserve">
          <source>Read all the files in the archive and check their CRC&amp;rsquo;s and file headers. Return the name of the first bad file, or else return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">读取存档中的所有文件，并检查其CRC和文件头。返回第一个错误文件的名称，否则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1f981e030cc65108801a2bd215b6116ff35e87a" translate="yes" xml:space="preserve">
          <source>Read and parse configuration data from &lt;em&gt;f&lt;/em&gt; which must be an iterable yielding Unicode strings (for example files opened in text mode).</source>
          <target state="translated">从&lt;em&gt;f&lt;/em&gt;读取和解析配置数据，该数据必须是可迭代的产生Unicode字符串（例如，以文本模式打开的文件）。</target>
        </trans-unit>
        <trans-unit id="778d597616c2298f5ca88a05450c7ef2de22081f" translate="yes" xml:space="preserve">
          <source>Read and return &lt;em&gt;size&lt;/em&gt; bytes, or if &lt;em&gt;size&lt;/em&gt; is not given or negative, until EOF or if the read call would block in non-blocking mode.</source>
          <target state="translated">读取并返回&lt;em&gt;大小&lt;/em&gt;字节，或者如果没有给出&lt;em&gt;大小&lt;/em&gt;或为负，则直到EOF或读取调用将在非阻塞模式下阻塞为止。</target>
        </trans-unit>
        <trans-unit id="d84a2f36ea55bca770755460cd5f6842ea390894" translate="yes" xml:space="preserve">
          <source>Read and return a list of lines from the stream. &lt;em&gt;hint&lt;/em&gt; can be specified to control the number of lines read: no more lines will be read if the total size (in bytes/characters) of all lines so far exceeds &lt;em&gt;hint&lt;/em&gt;.</source>
          <target state="translated">从流中读取并返回行列表。可以指定&lt;em&gt;hint&lt;/em&gt;来控制读取的行数：如果到目前为止所有行的总大小（以字节/字符为单位）超过&lt;em&gt;hint，&lt;/em&gt;将不再读取更多行。</target>
        </trans-unit>
        <trans-unit id="1e1f16d0246cfce7e5cd42242a8cdfd52fe0dc68" translate="yes" xml:space="preserve">
          <source>Read and return all the bytes from the stream until EOF, using multiple calls to the stream if necessary.</source>
          <target state="translated">读取并返回流中的所有字节,直到EOF,必要时使用对流的多次调用。</target>
        </trans-unit>
        <trans-unit id="61b4597ddfbabba4eb23399ed051cfc2df36902b" translate="yes" xml:space="preserve">
          <source>Read and return at most &lt;em&gt;size&lt;/em&gt; characters from the stream as a single &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;size&lt;/em&gt; is negative or &lt;code&gt;None&lt;/code&gt;, reads until EOF.</source>
          <target state="translated">作为单个&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;从流中读取并返回最大&lt;em&gt;大小的&lt;/em&gt;字符。如果&lt;em&gt;size&lt;/em&gt;为负数或 &lt;code&gt;None&lt;/code&gt; ，则读取直到EOF。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="032833aa0f34522410b0dd6b09712e09e0b8dee1" translate="yes" xml:space="preserve">
          <source>Read and return one line from the stream. If &lt;em&gt;size&lt;/em&gt; is specified, at most &lt;em&gt;size&lt;/em&gt; bytes will be read.</source>
          <target state="translated">从流中读取并返回一行。如果指定了&lt;em&gt;大小，&lt;/em&gt;则最多将读取&lt;em&gt;大小&lt;/em&gt;字节。</target>
        </trans-unit>
        <trans-unit id="1f93d80f4f50ff298f98fac30a63bf36fbd53ced" translate="yes" xml:space="preserve">
          <source>Read and return the contents of &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt; as a &lt;code&gt;str&lt;/code&gt;. By default, the contents are read as strict UTF-8.</source>
          <target state="translated">阅读和返回的内容&lt;em&gt;资源&lt;/em&gt;内&lt;em&gt;包装&lt;/em&gt;为 &lt;code&gt;str&lt;/code&gt; 。默认情况下，内容被读取为严格的UTF-8。</target>
        </trans-unit>
        <trans-unit id="97dcf057220f3c5d8aa73dc678dd6d41940a6eef" translate="yes" xml:space="preserve">
          <source>Read and return the contents of the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt; as &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="translated">阅读并返回的内容&lt;em&gt;资源&lt;/em&gt;内&lt;em&gt;包装&lt;/em&gt;为 &lt;code&gt;bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be47592d3da6a91fa0c7b65e8dd4d66b69b12c9d" translate="yes" xml:space="preserve">
          <source>Read and return the next &lt;em&gt;nframes&lt;/em&gt; frames from the audio file. The returned data is a string containing for each frame the uncompressed samples of all channels.</source>
          <target state="translated">从音频文件读取并返回下一个&lt;em&gt;nframe&lt;/em&gt;帧。返回的数据是一个字符串，其中包含每个帧的所有通道的未压缩样本。</target>
        </trans-unit>
        <trans-unit id="accd63a3792cc0939b2b953724277a0f3ad00ec5" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes with only one call on the raw stream. If at least one byte is buffered, only buffered bytes are returned. Otherwise, one raw stream read call is made.</source>
          <target state="translated">仅在原始流上调用一次即可读取并返回最大&lt;em&gt;大小的&lt;/em&gt;字节。如果至少有一个字节被缓冲，则仅返回缓冲的字节。否则，将进行一个原始流读取调用。</target>
        </trans-unit>
        <trans-unit id="6d07db2cc7617a3fe8a45a82d4e33150c0ef968f" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes, with at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. This can be useful if you are implementing your own buffering on top of a &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">读取并返回最大&lt;em&gt;大小的&lt;/em&gt;字节，最多调用一次底层原始流的&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）方法。如果您要在&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;对象的顶部实现自己的缓冲，这将很有用。</target>
        </trans-unit>
        <trans-unit id="801839f88f45d74aab9e4937a55def4dc1f3fa7d" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes. If the argument is omitted, &lt;code&gt;None&lt;/code&gt;, or negative, data is read and returned until EOF is reached. An empty &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object is returned if the stream is already at EOF.</source>
          <target state="translated">阅读并返回多达&lt;em&gt;大小&lt;/em&gt;字节。如果省略该参数， &lt;code&gt;None&lt;/code&gt; 或负数，则读取数据并返回数据，直到达到EOF为止。如果流已经在EOF上，则返回一个空&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="269e643c44fc746a6aec1f6ed801592b3e2b769e" translate="yes" xml:space="preserve">
          <source>Read at least one byte of cooked data unless EOF is hit. Return &lt;code&gt;b''&lt;/code&gt; if EOF is hit. Block if no data is immediately available.</source>
          <target state="translated">读取至少一个字节的烹饪数据，除非命中EOF。如果击中EOF，则返回 &lt;code&gt;b''&lt;/code&gt; 。如果没有立即可用的数据，则阻止。</target>
        </trans-unit>
        <trans-unit id="7db014aec0f4b1148afa6c6feaf0ad9880222712" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;buffer_size&lt;/em&gt; bytes from the socket&amp;rsquo;s remote end-point. An empty bytes object implies that the channel has been closed from the other end.</source>
          <target state="translated">从套接字的远程端点读取最多&lt;em&gt;buffer_size&lt;/em&gt;字节。空字节对象表示该通道已从另一端关闭。</target>
        </trans-unit>
        <trans-unit id="22bf38b1194379ba0f960e68a6e61447edc5618e" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;n&lt;/em&gt; bytes from file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt;, leaving the file offset unchanged.</source>
          <target state="translated">从文件描述符&lt;em&gt;fd&lt;/em&gt;的&lt;em&gt;offset&lt;/em&gt;位置最多读取&lt;em&gt;n&lt;/em&gt;个字节，而文件offset保持不变。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="950e8a25f50ef4960b770d71d7ff0642abfb35a5" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;n&lt;/em&gt; bytes from file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">从文件描述符&lt;em&gt;fd&lt;/em&gt;读取最多&lt;em&gt;n&lt;/em&gt;个字节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84fce006d0a1e309d3ec44e51f1cdb77c1f298eb" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;size&lt;/em&gt; bytes from the chunk (less if the read hits the end of the chunk before obtaining &lt;em&gt;size&lt;/em&gt; bytes). If the &lt;em&gt;size&lt;/em&gt; argument is negative or omitted, read all data until the end of the chunk. An empty bytes object is returned when the end of the chunk is encountered immediately.</source>
          <target state="translated">从块读取最多&lt;em&gt;大小的&lt;/em&gt;字节（如果在获取&lt;em&gt;大小&lt;/em&gt;字节之前读取到块的末尾，则读取的字节数较少）。如果&lt;em&gt;size&lt;/em&gt;参数为负或省略，则读取所有数据，直到块末尾为止。当立即遇到块的末尾时，将返回一个空字节对象。</target>
        </trans-unit>
        <trans-unit id="c6cb6b66afb555d54c1da5b4951f06f0d83fa104" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将字节读取到预分配的可写&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状对象&lt;/a&gt;&lt;em&gt;b中，&lt;/em&gt;并返回读取的字节数。例如，&lt;em&gt;b&lt;/em&gt;可以是一个&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="623f707fa12afd59cb42a95e249c0cfa8d84403c" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">将字节读取到预分配的可写&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状对象&lt;/a&gt;&lt;em&gt;b中&lt;/em&gt;，然后返回读取的字节数。例如，&lt;em&gt;b&lt;/em&gt;可以是一个&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。如果对象处于非阻塞模式并且没有字节可用，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40fde32cbda88fe61b04a63e828036182507da5e" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, using at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. Return the number of bytes read.</source>
          <target state="translated">使用至多一个对基础原始流的&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）方法的调用，将&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节&lt;/a&gt;读取到预分配的可写字节状对象&lt;em&gt;b中&lt;/em&gt;。返回读取的字节数。</target>
        </trans-unit>
        <trans-unit id="b3a43499b9715de2c24b65dc12866d334819d59d" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将字节读取到预分配的可写&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状对象&lt;/a&gt;&lt;em&gt;b中，&lt;/em&gt;并返回读取的字节数。例如，&lt;em&gt;b&lt;/em&gt;可能是一个&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab535f65ad4c7bc55d2c0002b5c51e9b2aedd42b" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">将字节读取到预分配的可写&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状对象&lt;/a&gt;&lt;em&gt;b中&lt;/em&gt;，然后返回读取的字节数。例如，&lt;em&gt;b&lt;/em&gt;可能是一个&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。如果对象处于非阻塞模式并且没有字节可用，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c67f4ee8002127ffcd21d02a122a435a1e78d89e" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, using at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. Return the number of bytes read.</source>
          <target state="translated">使用最多一次对基础原始流的&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）方法的调用，将&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节&lt;/a&gt;读取到预分配的可写字节状对象&lt;em&gt;b中&lt;/em&gt;。返回读取的字节数。</target>
        </trans-unit>
        <trans-unit id="11784d641386cbb3b9565cb5e44d47cfb462f62e" translate="yes" xml:space="preserve">
          <source>Read data from the stream until &lt;em&gt;separator&lt;/em&gt; is found.</source>
          <target state="translated">从流中读取数据，直到找到&lt;em&gt;分隔符&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2836a8a7b00fb58916686face31bb01a8f04add3" translate="yes" xml:space="preserve">
          <source>Read everything that can be without blocking in I/O (eager).</source>
          <target state="translated">在I/O中读取一切可以不阻塞的东西(渴望)。</target>
        </trans-unit>
        <trans-unit id="086341b1243ffe085f2b510b8dbe64cd54ef265d" translate="yes" xml:space="preserve">
          <source>Read exactly &lt;em&gt;n&lt;/em&gt; bytes.</source>
          <target state="translated">精确读取&lt;em&gt;n&lt;/em&gt;个字节。</target>
        </trans-unit>
        <trans-unit id="71e0ef19601dc132ab6b288b3cecb7a550fb8ec0" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt; into mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;, leaving the file offset unchanged. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">从&lt;em&gt;偏移量&lt;/em&gt;位置的文件描述符&lt;em&gt;fd&lt;/em&gt;读取到可变&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;&lt;em&gt;缓冲区中&lt;/em&gt;，文件偏移量保持不变。将数据传输到每个缓冲区中，直到将其填满，然后移到序列中的下一个缓冲区以保留其余数据。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdf7536b507a3a4c12adb8c79c16d9dac5da7f3b" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt; into mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;, leaving the file offset unchanged. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">从&lt;em&gt;偏移量&lt;/em&gt;位置的文件描述符&lt;em&gt;fd&lt;/em&gt;读取到可变&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;&lt;em&gt;缓冲区中&lt;/em&gt;，从而使文件偏移量保持不变。将数据传输到每个缓冲区中，直到将其填满为止，然后移至序列中的下一个缓冲区以保留其余数据。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46f1f0afa3b7935125f9a8761dca565440d2922a" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; into a number of mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">从文件描述符&lt;em&gt;fd&lt;/em&gt;读入多个可变&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;&lt;em&gt;缓冲区&lt;/em&gt;。将数据传输到每个缓冲区中，直到将其填满，然后移到序列中的下一个缓冲区以保留其余数据。</target>
        </trans-unit>
        <trans-unit id="fc627d570e3243437eae53bdadff37038c8a1f51" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; into a number of mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">从文件描述符&lt;em&gt;fd&lt;/em&gt;读入许多可变&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;的类似字节的对象&lt;/a&gt;&lt;em&gt;缓冲区&lt;/em&gt;。将数据传输到每个缓冲区中，直到将其填满为止，然后移至序列中的下一个缓冲区以保留其余数据。</target>
        </trans-unit>
        <trans-unit id="370a120715a7c1833cbfdc99def641a60b759335" translate="yes" xml:space="preserve">
          <source>Read into &lt;em&gt;buffer&lt;/em&gt; a complete message of byte data sent from the other end of the connection and return the number of bytes in the message. Blocks until there is something to receive. Raises &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if there is nothing left to receive and the other end was closed.</source>
          <target state="translated">将连接另一端发送的字节数据的完整消息读入&lt;em&gt;缓冲区&lt;/em&gt;，并返回消息中的字节数。阻塞直到有东西要接收为止。如果没有什么可接收的，并且另一端已关闭，则引发&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58fd9f6e88d1c5506b9f30352520459e5d574878" translate="yes" xml:space="preserve">
          <source>Read one line from the input stream and return the decoded data.</source>
          <target state="translated">从输入流中读取一行,并返回解码后的数据。</target>
        </trans-unit>
        <trans-unit id="c530ff788aa04dd6810efcf2ec524d9201915724" translate="yes" xml:space="preserve">
          <source>Read one line, where &amp;ldquo;line&amp;rdquo; is a sequence of bytes ending with &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="translated">读一行，其中&amp;ldquo;行&amp;rdquo;是一个以 &lt;code&gt;\n&lt;/code&gt; 结尾的字节序列。</target>
        </trans-unit>
        <trans-unit id="a11d3494cb085e6bb059cce3b8c7779518c0f535" translate="yes" xml:space="preserve">
          <source>Read one value from the open file and return it. If no valid value is read (e.g. because the data has a different Python version&amp;rsquo;s incompatible marshal format), raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. The file must be a readable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;.</source>
          <target state="translated">从打开的文件中读取一个值，然后将其返回。如果没有读取有效值（例如，因为数据具有不同的Python版本的不兼容封送格式），请引发&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。该文件必须是可读的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f2aad4febf0bfb705d5df3e872623c04614781d" translate="yes" xml:space="preserve">
          <source>Read one value from the open file and return it. If no valid value is read (e.g. because the data has a different Python version&amp;rsquo;s incompatible marshal format), raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. The file must be a readable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;.</source>
          <target state="translated">从打开的文件中读取一个值，然后将其返回。如果没有读取有效值（例如，因为数据具有不同的Python版本的不兼容封送格式），请引发&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。该文件必须是可读的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3cc8c56e2bce4a91f9564fd0a68bebf4f1aae62" translate="yes" xml:space="preserve">
          <source>Read only mode.</source>
          <target state="translated">只读模式。</target>
        </trans-unit>
        <trans-unit id="d62b80a78ee9fd52c9bd1c58e7df70e3d3b9dbc0" translate="yes" xml:space="preserve">
          <source>Read readily available data.</source>
          <target state="translated">阅读现有数据。</target>
        </trans-unit>
        <trans-unit id="c4f07bb853e3e73e2f5713357ac165dd42bb44e7" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;#security-considerations&quot;&gt;Security Considerations&lt;/a&gt; section before using &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;shell=True&lt;/code&gt; 之前，&lt;a href=&quot;#security-considerations&quot;&gt;请&lt;/a&gt;阅读&amp;ldquo; 安全注意事项&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="36a78bd35a074b6a5224921622d62064039708b3" translate="yes" xml:space="preserve">
          <source>Read the Wikipedia article, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;Cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt;, to get the requirements of a cryptographically generator.</source>
          <target state="translated">阅读Wikipedia文章&amp;ldquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;加密安全的伪随机数生成器（CSPRNG）&amp;rdquo;&lt;/a&gt;，以获取加密生成器的要求。</target>
        </trans-unit>
        <trans-unit id="40958a3c19fd0a9db3005203e40c0183c907cf90" translate="yes" xml:space="preserve">
          <source>Read the Wikipedia article, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;Cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt;, to get the requirements of a cryptographically strong generator.</source>
          <target state="translated">阅读Wikipedia文章&amp;ldquo;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;密码安全的伪随机数生成器（CSPRNG）&amp;rdquo;&lt;/a&gt;，以获取密码强的生成器的要求。</target>
        </trans-unit>
        <trans-unit id="a690d2859783c0df3df22c4539d2e42784ae104e" translate="yes" xml:space="preserve">
          <source>Read the current file as bytes.</source>
          <target state="translated">读取当前文件的字节数。</target>
        </trans-unit>
        <trans-unit id="ffe92b56501ebcdcbab2c7c99fbe83d9fbdad392" translate="yes" xml:space="preserve">
          <source>Read the current file as unicode text. Positional and keyword arguments are passed through to &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; (except &lt;code&gt;buffer&lt;/code&gt;, which is implied by the context).</source>
          <target state="translated">以unicode文本读取当前文件。位置参数和关键字参数传递给&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;（上下文暗示的 &lt;code&gt;buffer&lt;/code&gt; 除外）。</target>
        </trans-unit>
        <trans-unit id="ae4d23471fd1abd1d35737496f1afc5caa8f9fa3" translate="yes" xml:space="preserve">
          <source>Read the documentation for your HTTP server and check with your local system administrator to find the directory where CGI scripts should be installed; usually this is in a directory &lt;code&gt;cgi-bin&lt;/code&gt; in the server tree.</source>
          <target state="translated">阅读HTTP服务器的文档，并与您的本地系统管理员联系，以查找应在其中安装CGI脚本的目录。通常这在服务器树的目录 &lt;code&gt;cgi-bin&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a6c0096aa107f685e086ee5056e587ef9245c6fb" translate="yes" xml:space="preserve">
          <source>Read the file &lt;code&gt;list&lt;/code&gt; and add each line that it contains to the list of files and directories to compile. If &lt;code&gt;list&lt;/code&gt; is &lt;code&gt;-&lt;/code&gt;, read lines from &lt;code&gt;stdin&lt;/code&gt;.</source>
          <target state="translated">阅读文件 &lt;code&gt;list&lt;/code&gt; ，并将其中包含的每一行添加到要编译的文件和目录列表中。如果 &lt;code&gt;list&lt;/code&gt; 是 &lt;code&gt;-&lt;/code&gt; ，请从 &lt;code&gt;stdin&lt;/code&gt; 中读取行。</target>
        </trans-unit>
        <trans-unit id="d9043cc7135605ae79c85c6a4222a2b9b7760d02" translate="yes" xml:space="preserve">
          <source>Read the next member from the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarfile&lt;/em&gt; and return it as a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">从&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;对象&lt;em&gt;tarfile中&lt;/em&gt;读取下一个成员，并将其作为&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象返回。</target>
        </trans-unit>
        <trans-unit id="e2e2db3d4342df11e319327d19c3f517416fd093" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;file&lt;/em&gt; and return the reconstituted object hierarchy specified therein. This is equivalent to &lt;code&gt;Unpickler(file).load()&lt;/code&gt;.</source>
          <target state="translated">从打开的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件目标&lt;/a&gt;&lt;em&gt;文件中&lt;/em&gt;读取对象的腌制表示，并返回其中指定的重构对象层次结构。这等效于 &lt;code&gt;Unpickler(file).load()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6be4d006351f062a506f44e5b038af184a623e67" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;file&lt;/em&gt; and return the reconstituted object hierarchy specified therein. This is equivalent to &lt;code&gt;Unpickler(file).load()&lt;/code&gt;.</source>
          <target state="translated">从打开的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件目标&lt;/a&gt;&lt;em&gt;文件中&lt;/em&gt;读取对象的腌制表示，然后返回其中指定的重构对象层次结构。这等效于 &lt;code&gt;Unpickler(file).load()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca7f3209ca328076e8c99b3695b834a977dae426" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open file object given in the constructor, and return the reconstituted object hierarchy specified therein. Bytes past the pickled representation of the object are ignored.</source>
          <target state="translated">从构造函数中给出的打开文件对象中读取对象的腌制表示,并返回其中指定的重组对象层次结构。超过对象的pickled表示的字节将被忽略。</target>
        </trans-unit>
        <trans-unit id="244e9ebb10edf2b477c2a4c43f22d764476ea5ab" translate="yes" xml:space="preserve">
          <source>Read until a given byte string, &lt;em&gt;expected&lt;/em&gt;, is encountered or until &lt;em&gt;timeout&lt;/em&gt; seconds have passed.</source>
          <target state="translated">进行读取，直到遇到给定的&lt;em&gt;预期&lt;/em&gt;字节字符串或&lt;em&gt;超时&lt;/em&gt;秒数为止。</target>
        </trans-unit>
        <trans-unit id="7d24f7fea0df1e214b18d3f53bb4f3190e644dbd" translate="yes" xml:space="preserve">
          <source>Read until newline or EOF and return a single &lt;code&gt;str&lt;/code&gt;. If the stream is already at EOF, an empty string is returned.</source>
          <target state="translated">阅读直到换行符或EOF并返回单个 &lt;code&gt;str&lt;/code&gt; 。如果流已经在EOF处，则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="275ad8a9522498120a9251ff218f6d8a6854e563" translate="yes" xml:space="preserve">
          <source>Read until one from a list of a regular expressions matches.</source>
          <target state="translated">读取,直到正则表达式列表中的一个匹配。</target>
        </trans-unit>
        <trans-unit id="355759e6f9cbb09a4ddd49bcde6c6fe81070120b" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;len&lt;/em&gt; bytes of data from the SSL socket and return the result as a &lt;code&gt;bytes&lt;/code&gt; instance. If &lt;em&gt;buffer&lt;/em&gt; is specified, then read into the buffer instead, and return the number of bytes read.</source>
          <target state="translated">从SSL套接字读取最多&lt;em&gt;len&lt;/em&gt;字节的数据，并将结果作为 &lt;code&gt;bytes&lt;/code&gt; 实例返回。如果&lt;em&gt;缓冲器&lt;/em&gt;被指定，然后读入到缓冲液代替，并返回数目的字节读出。</target>
        </trans-unit>
        <trans-unit id="67c359728ae94f131b3de31cc8fe482af1689b90" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;n&lt;/em&gt; bytes from the memory buffer. If &lt;em&gt;n&lt;/em&gt; is not specified or negative, all bytes are returned.</source>
          <target state="translated">从内存缓冲区读取最多&lt;em&gt;n&lt;/em&gt;个字节。如果未指定&lt;em&gt;n&lt;/em&gt;或为负，则返回所有字节。</target>
        </trans-unit>
        <trans-unit id="66c8dadf4af31035a32dfe0697628b30df8e2340" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;n&lt;/em&gt; bytes. If &lt;em&gt;n&lt;/em&gt; is not provided, or set to &lt;code&gt;-1&lt;/code&gt;, read until EOF and return all read bytes.</source>
          <target state="translated">最多读取&lt;em&gt;n&lt;/em&gt;个字节。如果未提供&lt;em&gt;n&lt;/em&gt;或将其设置为 &lt;code&gt;-1&lt;/code&gt; ，则读取直到EOF并返回所有读取的字节。</target>
        </trans-unit>
        <trans-unit id="be9279935b87c86aa3d872251148831f8eef60b1" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;size&lt;/em&gt; bytes from the object and return them. As a convenience, if &lt;em&gt;size&lt;/em&gt; is unspecified or -1, all bytes until EOF are returned. Otherwise, only one system call is ever made. Fewer than &lt;em&gt;size&lt;/em&gt; bytes may be returned if the operating system call returns fewer than &lt;em&gt;size&lt;/em&gt; bytes.</source>
          <target state="translated">从对象读取最大&lt;em&gt;大小的&lt;/em&gt;字节并返回它们。为了方便起见，如果未指定&lt;em&gt;size&lt;/em&gt;或-1，则返回直到EOF的所有字节。否则，只会进行一次系统调用。如果操作系统调用返回的&lt;em&gt;大小&lt;/em&gt;少于&lt;em&gt;大小&lt;/em&gt;字节，则可能返回少于&lt;em&gt;大小的&lt;/em&gt;字节。</target>
        </trans-unit>
        <trans-unit id="7d7c483daa44c7fc69ec7c033ba33d2f0ecf7b8c" translate="yes" xml:space="preserve">
          <source>Read window related data stored in the file by an earlier &lt;code&gt;putwin()&lt;/code&gt; call. The routine then creates and initializes a new window using that data, returning the new window object.</source>
          <target state="translated">通过更早的 &lt;code&gt;putwin()&lt;/code&gt; 调用读取存储在文件中的窗口相关数据。然后，例程使用该数据创建并初始化新窗口，并返回新的窗口对象。</target>
        </trans-unit>
        <trans-unit id="da08100916e9f503e065d06037cb6883e9110bf4" translate="yes" xml:space="preserve">
          <source>Read-only Transports</source>
          <target state="translated">只读运输</target>
        </trans-unit>
        <trans-unit id="9024b38762e4a2f67f6a66a7cd3c49edf9e41023" translate="yes" xml:space="preserve">
          <source>Read-only access to size in bytes of the shared memory block.</source>
          <target state="translated">以字节为单位只读访问共享内存块的大小。</target>
        </trans-unit>
        <trans-unit id="28e815b1c90cbea2302aea1fb4f0320664d93b86" translate="yes" xml:space="preserve">
          <source>Read-only access to the unique name of the shared memory block.</source>
          <target state="translated">以只读方式访问共享内存块的唯一名称。</target>
        </trans-unit>
        <trans-unit id="a759c19cd2bd30e46f16084fc5f6eb8f05850a3d" translate="yes" xml:space="preserve">
          <source>Read-only attribute containing the &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; packing format used by all currently stored values.</source>
          <target state="translated">只读属性，包含所有当前存储的值使用的&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;打包格式。</target>
        </trans-unit>
        <trans-unit id="c0255693ac4e04ef15e0f7093799a77cddf306f8" translate="yes" xml:space="preserve">
          <source>Read-only attribute returning a list of upcoming events in the order they will be run. Each event is shown as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the following fields: time, priority, action, argument, kwargs.</source>
          <target state="translated">只读属性，按运行顺序返回即将发生的事件的列表。每个事件都显示为具有以下字段的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;：时间，优先级，操作，参数，kwargs。</target>
        </trans-unit>
        <trans-unit id="f0b4adf89bcc6cc89664264e9b0de57168314cac" translate="yes" xml:space="preserve">
          <source>Read-only attribute returning a list of upcoming events in the order they will be run. Each event is shown as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the following fields: time, priority, action, argument, kwargs.</source>
          <target state="translated">只读属性，以将要运行的顺序返回即将发生的事件的列表。每个事件都显示为具有以下字段的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;：时间，优先级，操作，参数，kwargs。</target>
        </trans-unit>
        <trans-unit id="fd7967994dfc943a9d75a158de2c9b6edcab50b2" translate="yes" xml:space="preserve">
          <source>Read-only file system</source>
          <target state="translated">只读文件系统</target>
        </trans-unit>
        <trans-unit id="e14e4cb7a5fc41c26789e4ceb8b7556512ce5b3c" translate="yes" xml:space="preserve">
          <source>Read-only option. The widget periodically increments the value of this option whenever its value is greater than 0 and, in determinate mode, less than maximum. This option may be used by the current theme to provide additional animation effects.</source>
          <target state="translated">只读选项。只要此选项的值大于 0,且在确定模式下小于最大值,小组件就会定期增加其值。当前主题可使用此选项来提供额外的动画效果。</target>
        </trans-unit>
        <trans-unit id="fdd475b101ff224617dbdc559cda3c41a6196b2b" translate="yes" xml:space="preserve">
          <source>Read-only proxy of a mapping. It provides a dynamic view on the mapping&amp;rsquo;s entries, which means that when the mapping changes, the view reflects these changes.</source>
          <target state="translated">映射的只读代理。它提供了映射条目的动态视图，这意味着当映射更改时，该视图将反映这些更改。</target>
        </trans-unit>
        <trans-unit id="617e4fa30ba80f113b7bc6e6c0b28994cdf5dc81" translate="yes" xml:space="preserve">
          <source>Read/write attribute that controls the number of rows returned by &lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt;&lt;code&gt;fetchmany()&lt;/code&gt;&lt;/a&gt;. The default value is 1 which means a single row would be fetched per call.</source>
          <target state="translated">读/写属性，用于控制&lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt; &lt;code&gt;fetchmany()&lt;/code&gt; &lt;/a&gt;返回的行数。默认值为1，这意味着每次调用将提取一行。</target>
        </trans-unit>
        <trans-unit id="c1db1af1a77800e199d231211e0ee56c94656a50" translate="yes" xml:space="preserve">
          <source>Reader Objects</source>
          <target state="translated">读者对象</target>
        </trans-unit>
        <trans-unit id="db2391bcf367fb51145969722a1c93694fa96fd1" translate="yes" xml:space="preserve">
          <source>Reader objects (&lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; instances and objects returned by the &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; function) have the following public methods:</source>
          <target state="translated">阅读器对象（&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; &lt;/a&gt;实例和&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt;函数返回的对象）具有以下公共方法：</target>
        </trans-unit>
        <trans-unit id="36423bc484450ac08875c5c75741a36b238967ce" translate="yes" xml:space="preserve">
          <source>Reader objects have the following public attributes:</source>
          <target state="translated">读者对象有以下公共属性。</target>
        </trans-unit>
        <trans-unit id="3216a8ee62aa836c78abf06d3d2b2c311982c82c" translate="yes" xml:space="preserve">
          <source>Reading Mail with Rmail</source>
          <target state="translated">使用Rmail阅读邮件</target>
        </trans-unit>
        <trans-unit id="0f1c88aeb61edc1aa1f64399ee69112fad93c18f" translate="yes" xml:space="preserve">
          <source>Reading a file with an alternate format:</source>
          <target state="translated">读取另一种格式的文件。</target>
        </trans-unit>
        <trans-unit id="1a2bc35fba7dad0f428a963052db61b92ac210d0" translate="yes" xml:space="preserve">
          <source>Reading and writing &lt;strong&gt;gzip&lt;/strong&gt;-format files.</source>
          <target state="translated">读写&lt;strong&gt;gzip&lt;/strong&gt;格式的文件。</target>
        </trans-unit>
        <trans-unit id="d84f8e2c49c100903904fb63d7379d86751544b5" translate="yes" xml:space="preserve">
          <source>Reading and writing compressed files</source>
          <target state="translated">读写压缩文件</target>
        </trans-unit>
        <trans-unit id="2d4bfaee912bc17ab5a2c37daed14a5b4b6d07f6" translate="yes" xml:space="preserve">
          <source>Reading in a compressed file:</source>
          <target state="translated">在压缩文件中读取。</target>
        </trans-unit>
        <trans-unit id="10300bcc0ccd09bb4fd189b1c4c1aeb7f5446577" translate="yes" xml:space="preserve">
          <source>Reading the &lt;code&gt;port&lt;/code&gt; attribute will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid port is specified in the URL. See section &lt;a href=&quot;#urlparse-result-object&quot;&gt;Structured Parse Results&lt;/a&gt; for more information on the result object.</source>
          <target state="translated">如果在URL中指定了无效的端口，则读取 &lt;code&gt;port&lt;/code&gt; 属性将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。有关结果对象的更多信息，请参见&lt;a href=&quot;#urlparse-result-object&quot;&gt;结构化解析结果&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="e840c99d90d44d7beed3e6b82643eb55b43dcea5" translate="yes" xml:space="preserve">
          <source>Readline configuration</source>
          <target state="translated">读线配置</target>
        </trans-unit>
        <trans-unit id="172081870890f80c50c85609cacec8034dd848d9" translate="yes" xml:space="preserve">
          <source>Readline keybindings may be configured via an initialization file, typically &lt;code&gt;.inputrc&lt;/code&gt; in your home directory. See &lt;a href=&quot;https://tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9&quot;&gt;Readline Init File&lt;/a&gt; in the GNU Readline manual for information about the format and allowable constructs of that file, and the capabilities of the Readline library in general.</source>
          <target state="translated">可以通过初始化文件（通常是主目录中的 &lt;code&gt;.inputrc&lt;/code&gt; )配置Readline键盘绑定。有关该文件的格式和允许的结构以及Readline库的功能的一般信息，请参见GNU Readline手册中的&lt;a href=&quot;https://tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9&quot;&gt;Readline初始化文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10ac791e71e93f862245871c4af29005241b9a34" translate="yes" xml:space="preserve">
          <source>Reads &lt;em&gt;path&lt;/em&gt; as a binary file and returns the bytes from it.</source>
          <target state="translated">将&lt;em&gt;path&lt;/em&gt;读取为二进制文件并从中返回字节。</target>
        </trans-unit>
        <trans-unit id="2f0d14ec42b269211345636b5534da62c18d549b" translate="yes" xml:space="preserve">
          <source>Reads &lt;em&gt;size&lt;/em&gt; bytes from the remote server. You may override this method.</source>
          <target state="translated">从远程服务器读取&lt;em&gt;大小&lt;/em&gt;字节。您可以重写此方法。</target>
        </trans-unit>
        <trans-unit id="c1ce17a8a9a4575f081b7748033ddd36404c0db6" translate="yes" xml:space="preserve">
          <source>Reads and returns at most &lt;em&gt;n&lt;/em&gt; frames of audio, as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">作为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象读取和返回最多&lt;em&gt;n&lt;/em&gt;帧音频。</target>
        </trans-unit>
        <trans-unit id="016f3cb3ac7a6483a9a12e632b5df2abaee0a4b5" translate="yes" xml:space="preserve">
          <source>Reads and returns the response body, or up to the next &lt;em&gt;amt&lt;/em&gt; bytes.</source>
          <target state="translated">读取并返回响应正文，或直到下一个&lt;em&gt;amt&lt;/em&gt;字节。</target>
        </trans-unit>
        <trans-unit id="fed140dfd1d54545cc77cf6a66050b5153d6ac71" translate="yes" xml:space="preserve">
          <source>Reads one line from the remote server. You may override this method.</source>
          <target state="translated">从远程服务器读取一行。你可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="5ffa3183d71464b7a65987dec7e601ad7f53e81a" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;robots.txt&lt;/code&gt; URL and feeds it to the parser.</source>
          <target state="translated">读取 &lt;code&gt;robots.txt&lt;/code&gt; URL，并将其提供给解析器。</target>
        </trans-unit>
        <trans-unit id="0cce7e602b272ec5e4ca4c13ba5491dc9a092ea9" translate="yes" xml:space="preserve">
          <source>Reads the logging configuration from a &lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;-format file. The format of the file should be as described in &lt;a href=&quot;#logging-config-fileformat&quot;&gt;Configuration file format&lt;/a&gt;. This function can be called several times from an application, allowing an end user to select from various pre-canned configurations (if the developer provides a mechanism to present the choices and load the chosen configuration).</source>
          <target state="translated">从&lt;a href=&quot;configparser#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;格式文件中读取日志记录配置。&lt;a href=&quot;#logging-config-fileformat&quot;&gt;文件格式&lt;/a&gt;应与配置文件格式中所述相同。可以从应用程序中多次调用此功能，从而使最终用户可以从各种预先设置的配置中进行选择（如果开发人员提供了一种机制来呈现选择并加载所选的配置）。</target>
        </trans-unit>
        <trans-unit id="94a1c358e9ba85fac3229ed196a115be7045cbf9" translate="yes" xml:space="preserve">
          <source>Reads up to the next len(b) bytes of the response body into the buffer &lt;em&gt;b&lt;/em&gt;. Returns the number of bytes read.</source>
          <target state="translated">将响应主体的下一个len（b）字节读取到缓冲区&lt;em&gt;b中&lt;/em&gt;。返回读取的字节数。</target>
        </trans-unit>
        <trans-unit id="6b7b781423798a78a5487b901d30aec866644103" translate="yes" xml:space="preserve">
          <source>Ready for output: writing will not block</source>
          <target state="translated">准备输出:写入不会阻塞</target>
        </trans-unit>
        <trans-unit id="e410122c8f53dfdabf057b3e096b98c81ad68e74" translate="yes" xml:space="preserve">
          <source>Real also provides defaults for &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.real&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.imag&quot;&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt;&lt;code&gt;conjugate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Real还提供了&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Complex.real&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Complex.imag&quot;&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt; &lt;code&gt;conjugate()&lt;/code&gt; 的&lt;/a&gt;默认值。</target>
        </trans-unit>
        <trans-unit id="6414efc283d993817db64cdec7ef20c4bd2eba0c" translate="yes" xml:space="preserve">
          <source>Real size of the file.</source>
          <target state="translated">文件的实际大小。</target>
        </trans-unit>
        <trans-unit id="6565a5b039a6fd648b22ceea587ede519f134bdb" translate="yes" xml:space="preserve">
          <source>Real world examples of reentrancy are more likely to involve multiple functions calling each other and hence be far more complicated than this example.</source>
          <target state="translated">现实世界中的重入实例更有可能涉及到多个函数的相互调用,因此要比这个例子复杂得多。</target>
        </trans-unit>
        <trans-unit id="2e78773d0218c4431c0d5b19ada30e8c89952290" translate="yes" xml:space="preserve">
          <source>Real-valued distributions</source>
          <target state="translated">实值分布</target>
        </trans-unit>
        <trans-unit id="d51911428c69cc773c6faac0d6e0f78f4fec08a1" translate="yes" xml:space="preserve">
          <source>Reallocate storage for a curses window to adjust its dimensions to the specified values. If either dimension is larger than the current values, the window&amp;rsquo;s data is filled with blanks that have the current background rendition (as set by &lt;a href=&quot;#curses.window.bkgdset&quot;&gt;&lt;code&gt;bkgdset()&lt;/code&gt;&lt;/a&gt;) merged into them.</source>
          <target state="translated">重新为curses窗口分配存储空间，以将其尺寸调整为指定的值。如果任何一个尺寸都大于当前值，则窗口的数据将填充有合并了背景当前&lt;a href=&quot;#curses.window.bkgdset&quot;&gt; &lt;code&gt;bkgdset()&lt;/code&gt; &lt;/a&gt;由bkgdset（）设置）的空白。</target>
        </trans-unit>
        <trans-unit id="acfbb75c08c1128d2822ae8e5c5d5a4e3ab7130c" translate="yes" xml:space="preserve">
          <source>Reason phrase returned by server.</source>
          <target state="translated">服务器返回的原因短语。</target>
        </trans-unit>
        <trans-unit id="3729bf88b61b1fc78b1c2486abb63f7a87daa766" translate="yes" xml:space="preserve">
          <source>Recall that the use of a type alias declares two types to be &lt;em&gt;equivalent&lt;/em&gt; to one another. Doing &lt;code&gt;Alias = Original&lt;/code&gt; will make the static type checker treat &lt;code&gt;Alias&lt;/code&gt; as being &lt;em&gt;exactly equivalent&lt;/em&gt; to &lt;code&gt;Original&lt;/code&gt; in all cases. This is useful when you want to simplify complex type signatures.</source>
          <target state="translated">回想一下，使用类型别名会声明两种类型彼此&lt;em&gt;等效&lt;/em&gt;。在所有情况下，执行 &lt;code&gt;Alias = Original&lt;/code&gt; 将使静态类型检查器将 &lt;code&gt;Alias&lt;/code&gt; 视为&lt;em&gt;等同&lt;/em&gt;于 &lt;code&gt;Original&lt;/code&gt; 。当您要简化复杂的类型签名时，这很有用。</target>
        </trans-unit>
        <trans-unit id="fa1b054549b2e91025585495171c4282ac8e4217" translate="yes" xml:space="preserve">
          <source>Receive a message, calculate the digest of the message using &lt;em&gt;authkey&lt;/em&gt; as the key, and then send the digest back.</source>
          <target state="translated">接收一条消息，使用&lt;em&gt;authkey&lt;/em&gt;作为密钥计算该消息的摘要，然后将摘要发送回去。</target>
        </trans-unit>
        <trans-unit id="7d57ef5a4f2a6abd0b387d37fa4f4ff988c8fbe7" translate="yes" xml:space="preserve">
          <source>Receive data from &lt;em&gt;sock&lt;/em&gt; into the &lt;em&gt;buf&lt;/em&gt; buffer. Modeled after the blocking &lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt;&lt;code&gt;socket.recv_into()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">从&lt;em&gt;sock&lt;/em&gt;接收数据到&lt;em&gt;buf&lt;/em&gt;缓冲区。以阻塞的&lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt; &lt;code&gt;socket.recv_into()&lt;/code&gt; &lt;/a&gt;方法建模。</target>
        </trans-unit>
        <trans-unit id="70d9c71067229336eeee5fadb7b7a0ff772dc759" translate="yes" xml:space="preserve">
          <source>Receive data from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; into a buffer.</source>
          <target state="translated">从&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;接收数据到缓冲区。</target>
        </trans-unit>
        <trans-unit id="9abb4eb4d8e8514335de2fb01dee754d2fe37fde" translate="yes" xml:space="preserve">
          <source>Receive data from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;接收数据。</target>
        </trans-unit>
        <trans-unit id="774ae2c3ec69a2cfb81913d5cee240dad966ffc8" translate="yes" xml:space="preserve">
          <source>Receive data from the socket, writing it into &lt;em&gt;buffer&lt;/em&gt; instead of creating a new bytestring. The return value is a pair &lt;code&gt;(nbytes, address)&lt;/code&gt; where &lt;em&gt;nbytes&lt;/em&gt; is the number of bytes received and &lt;em&gt;address&lt;/em&gt; is the address of the socket sending the data. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">从套接字接收数据，将其写入&lt;em&gt;缓冲区，&lt;/em&gt;而不是创建新的字节串。返回值是一对 &lt;code&gt;(nbytes, address)&lt;/code&gt; ，其中&lt;em&gt;nbytes&lt;/em&gt;是接收的字节数，&lt;em&gt;address&lt;/em&gt;是发送数据的套接字的地址。有关可选参数&lt;em&gt;标志&lt;/em&gt;的含义，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;；它默认为零。 （&lt;em&gt;地址&lt;/em&gt;的格式取决于地址系列-参见上文。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df9ebd8be22851abfc842c7d2c91246bfbb96740" translate="yes" xml:space="preserve">
          <source>Receive data from the socket. The return value is a bytes object representing the data received. The maximum amount of data to be received at once is specified by &lt;em&gt;bufsize&lt;/em&gt;. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero.</source>
          <target state="translated">从套接字接收数据。返回值是一个字节对象，代表接收到的数据。一次要接收的最大数据量由&lt;em&gt;bufsize&lt;/em&gt;指定。有关可选参数&lt;em&gt;标志&lt;/em&gt;的含义，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;；它默认为零。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc433c0c9914f4955ff5a97005a06dd7afb1cef5" translate="yes" xml:space="preserve">
          <source>Receive data from the socket. The return value is a pair &lt;code&gt;(bytes, address)&lt;/code&gt; where &lt;em&gt;bytes&lt;/em&gt; is a bytes object representing the data received and &lt;em&gt;address&lt;/em&gt; is the address of the socket sending the data. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">从套接字接收数据。返回值是一对 &lt;code&gt;(bytes, address)&lt;/code&gt; ，其中&lt;em&gt;字节&lt;/em&gt;是代表接收到的数据的字节对象，而&lt;em&gt;地址&lt;/em&gt;是发送数据的套接字的地址。有关可选参数&lt;em&gt;标志&lt;/em&gt;的含义，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;；它默认为零。（&lt;em&gt;地址&lt;/em&gt;的格式取决于地址系列-参见上文。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce7629e3171b3be5aefc520d8ece4a3ff43dad28" translate="yes" xml:space="preserve">
          <source>Receive normal data (up to &lt;em&gt;bufsize&lt;/em&gt; bytes) and ancillary data from the socket. The &lt;em&gt;ancbufsize&lt;/em&gt; argument sets the size in bytes of the internal buffer used to receive the ancillary data; it defaults to 0, meaning that no ancillary data will be received. Appropriate buffer sizes for ancillary data can be calculated using &lt;a href=&quot;#socket.CMSG_SPACE&quot;&gt;&lt;code&gt;CMSG_SPACE()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.CMSG_LEN&quot;&gt;&lt;code&gt;CMSG_LEN()&lt;/code&gt;&lt;/a&gt;, and items which do not fit into the buffer might be truncated or discarded. The &lt;em&gt;flags&lt;/em&gt; argument defaults to 0 and has the same meaning as for &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从套接字接收普通数据（最多&lt;em&gt;bufsize&lt;/em&gt;字节）和辅助数据。所述&lt;em&gt;ancbufsize&lt;/em&gt;参数设置在用于接收的辅助数据的内部缓冲区的字节大小;它默认为0，表示将不会接收任何辅助数据。可以使用&lt;a href=&quot;#socket.CMSG_SPACE&quot;&gt; &lt;code&gt;CMSG_SPACE()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#socket.CMSG_LEN&quot;&gt; &lt;code&gt;CMSG_LEN()&lt;/code&gt; &lt;/a&gt;来计算辅助数据的适当缓冲区大小，并且不适合缓冲区的项目可能会被截断或丢弃。的&lt;em&gt;标志&lt;/em&gt;参数默认为0，并且具有相同的含义对&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f772d48559fa81da24dc9bb2d05269e73289c1df" translate="yes" xml:space="preserve">
          <source>Receive normal data and ancillary data from the socket, behaving as &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; would, but scatter the non-ancillary data into a series of buffers instead of returning a new bytes object. The &lt;em&gt;buffers&lt;/em&gt; argument must be an iterable of objects that export writable buffers (e.g. &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects); these will be filled with successive chunks of the non-ancillary data until it has all been written or there are no more buffers. The operating system may set a limit (&lt;a href=&quot;os#os.sysconf&quot;&gt;&lt;code&gt;sysconf()&lt;/code&gt;&lt;/a&gt; value &lt;code&gt;SC_IOV_MAX&lt;/code&gt;) on the number of buffers that can be used. The &lt;em&gt;ancbufsize&lt;/em&gt; and &lt;em&gt;flags&lt;/em&gt; arguments have the same meaning as for &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; 的方式&lt;/a&gt;从套接字接收普通数据和辅助数据，但是将非辅助数据分散到一系列缓冲区中，而不是返回新的字节对象。所述&lt;em&gt;缓冲器&lt;/em&gt;参数必须是可迭代的对象，出口可写缓冲液（例如&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;对象）;它们将被连续的非辅助数据块填充，直到全部被写入或不再有缓冲区为止。操作系统可以对可以使用的缓冲区数设置限制（&lt;a href=&quot;os#os.sysconf&quot;&gt; &lt;code&gt;sysconf()&lt;/code&gt; &lt;/a&gt;值 &lt;code&gt;SC_IOV_MAX&lt;/code&gt; ）。该&lt;em&gt;ancbufsize&lt;/em&gt;和&lt;em&gt;标志&lt;/em&gt;参数具有相同的含义为&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8ecb1d042a3b48788104ef92b11c47181ac8e90" translate="yes" xml:space="preserve">
          <source>Receive notification of a processing instruction.</source>
          <target state="translated">接收处理指令的通知。</target>
        </trans-unit>
        <trans-unit id="969730be8780de4bfd4769adb56e080405d6b06e" translate="yes" xml:space="preserve">
          <source>Receive notification of a skipped entity.</source>
          <target state="translated">接收跳过实体的通知。</target>
        </trans-unit>
        <trans-unit id="b0f707ac12424cf8350e1640b548139d4dcbc752" translate="yes" xml:space="preserve">
          <source>Receive notification of character data.</source>
          <target state="translated">接收字符数据的通知。</target>
        </trans-unit>
        <trans-unit id="e1ed75deeb63816becb327823827f361dc002ace" translate="yes" xml:space="preserve">
          <source>Receive notification of ignorable whitespace in element content.</source>
          <target state="translated">接收元素内容中可忽略的空白的通知。</target>
        </trans-unit>
        <trans-unit id="adb5b34aa1bdc2bed0a8cc8e47afe59f239921e0" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of a document.</source>
          <target state="translated">接收文件开始的通知。</target>
        </trans-unit>
        <trans-unit id="ab1f6aa93da5c7054ea80f41cb7b3df8f521f92c" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of a document.</source>
          <target state="translated">接收文件结束的通知。</target>
        </trans-unit>
        <trans-unit id="37059da4d9de61091052afa9ec0f7544b9769490" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;maxfds&lt;/em&gt; file descriptors. Return &lt;code&gt;(msg, list(fds), flags, addr)&lt;/code&gt;. Consult &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; for the documentation of these parameters.</source>
          <target state="translated">最多接收&lt;em&gt;maxfds&lt;/em&gt;文件描述符。返回 &lt;code&gt;(msg, list(fds), flags, addr)&lt;/code&gt; 。有关这些参数的文档，请参考&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62674304a4abc748b1b6aaf5985032b7ad74e50c" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;nbytes&lt;/em&gt; bytes from the socket, storing the data into a buffer rather than creating a new bytestring. If &lt;em&gt;nbytes&lt;/em&gt; is not specified (or 0), receive up to the size available in the given buffer. Returns the number of bytes received. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero.</source>
          <target state="translated">从套接字接收最多&lt;em&gt;nbytes&lt;/em&gt;个字节，将数据存储到缓冲区中，而不是创建一个新的字节串。如果未指定&lt;em&gt;nbytes&lt;/em&gt;（或0），则接收给定缓冲区中的可用大小。返回接收到的字节数。有关可选参数&lt;em&gt;标志&lt;/em&gt;的含义，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;；它默认为零。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87516c95bd3638d0dfe06d89c812ba108573cb6a" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;nbytes&lt;/em&gt; from &lt;em&gt;sock&lt;/em&gt;. Asynchronous version of &lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;socket.recv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从&lt;em&gt;sock&lt;/em&gt;接收最多&lt;em&gt;nbytes&lt;/em&gt;。&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;socket.recv()&lt;/code&gt; 的&lt;/a&gt;异步版本。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d5799828d6f5ec360634fcfaeae8aa75ab1b50b" translate="yes" xml:space="preserve">
          <source>Recent Files</source>
          <target state="translated">最近的文件</target>
        </trans-unit>
        <trans-unit id="3b7d55ef3dcf529e39026fa094b79632e8f36dc7" translate="yes" xml:space="preserve">
          <source>Recent Tcl/Tk manuals on www.tcl.tk.</source>
          <target state="translated">最近的Tcl/Tk手册在www.tcl.tk。</target>
        </trans-unit>
        <trans-unit id="04b2fa57ede9687f28f36d0a6144290c583c1ccc" translate="yes" xml:space="preserve">
          <source>Recent versions of the pickle protocol (from protocol 2 and upwards) feature efficient binary encodings for several common features and built-in types. Also, the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module has a transparent optimizer written in C.</source>
          <target state="translated">pickle协议的最新版本（从协议2起）具有针对几种常见功能和内置类型的有效二进制编码。而且，&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块具有用C编写的透明优化器。</target>
        </trans-unit>
        <trans-unit id="9fb1092f32d4fcbf9e061ffd718d4ec689c6c95e" translate="yes" xml:space="preserve">
          <source>Recipes</source>
          <target state="translated">Recipes</target>
        </trans-unit>
        <trans-unit id="31eccc69d3dfb9a8c5efb2b2336c72cd4a0e6ecd" translate="yes" xml:space="preserve">
          <source>Recipes and best practices</source>
          <target state="translated">食谱和最佳做法</target>
        </trans-unit>
        <trans-unit id="0afefc625b1d6df9032c27d107d3cc92632128b0" translate="yes" xml:space="preserve">
          <source>Reconfigure this text stream using new settings for &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt;, &lt;em&gt;newline&lt;/em&gt;, &lt;em&gt;line_buffering&lt;/em&gt; and &lt;em&gt;write_through&lt;/em&gt;.</source>
          <target state="translated">使用&lt;em&gt;编码&lt;/em&gt;，&lt;em&gt;错误&lt;/em&gt;，&lt;em&gt;换行&lt;/em&gt;，&lt;em&gt;line_buffering&lt;/em&gt;和&lt;em&gt;write_through的&lt;/em&gt;新设置重新配置此文本流。</target>
        </trans-unit>
        <trans-unit id="cc08933b96ad762d14f56ef9bb38f79deb3264c9" translate="yes" xml:space="preserve">
          <source>Record &lt;em&gt;handler&lt;/em&gt; as the function to call when an object of a type matching &lt;em&gt;typekey&lt;/em&gt; is passed to &lt;a href=&quot;#email.contentmanager.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;. For the possible values of &lt;em&gt;typekey&lt;/em&gt;, see &lt;a href=&quot;#email.contentmanager.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将类型匹配的&lt;em&gt;typekey&lt;/em&gt;的对象传递给&lt;a href=&quot;#email.contentmanager.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;时，记录&lt;em&gt;处理程序&lt;/em&gt;作为要调用的函数。有关&lt;em&gt;typekey&lt;/em&gt;的可能值，请参见&lt;a href=&quot;#email.contentmanager.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56d721d9be865cbe675c509ad2dc82f65a32c297" translate="yes" xml:space="preserve">
          <source>Record Objects</source>
          <target state="translated">记录对象</target>
        </trans-unit>
        <trans-unit id="550210dffc16ae75a4266c879b85d63405b131ff" translate="yes" xml:space="preserve">
          <source>Record Separator</source>
          <target state="translated">记录分离器</target>
        </trans-unit>
        <trans-unit id="26602f7b5fcc3eacdb808f9d38dac9fb3601f555" translate="yes" xml:space="preserve">
          <source>Record separator, block-mode terminator</source>
          <target state="translated">记录分离器,块模式终止器</target>
        </trans-unit>
        <trans-unit id="e1b268d35219d40cf6f8bd8c752eb3d2e9da8ddd" translate="yes" xml:space="preserve">
          <source>Record that the package named &lt;em&gt;pkg_name&lt;/em&gt; can be found in the specified &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">记录在指定&lt;em&gt;路径中&lt;/em&gt;可以找到名为&lt;em&gt;pkg_name&lt;/em&gt;的软件包。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f291ab3cd8efd4283efe0205e28a433e3354cc3" translate="yes" xml:space="preserve">
          <source>Record the current and peak size of all traced memory blocks</source>
          <target state="translated">记录所有跟踪的内存块的当前和峰值大小</target>
        </trans-unit>
        <trans-unit id="361236b2995d356a16777babb86909ee78312843" translate="yes" xml:space="preserve">
          <source>Record the function &lt;em&gt;handler&lt;/em&gt; as the handler for &lt;em&gt;key&lt;/em&gt;. For the possible values of &lt;em&gt;key&lt;/em&gt;, see &lt;a href=&quot;#email.contentmanager.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将函数&lt;em&gt;处理程序&lt;/em&gt;记录为&lt;em&gt;key&lt;/em&gt;的处理程序。有关&lt;em&gt;key&lt;/em&gt;的可能值，请参见&lt;a href=&quot;#email.contentmanager.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a4482baecc5c936c327a024735cf6a4b7d357cf" translate="yes" xml:space="preserve">
          <source>Rectangular Turtles as Hanoi discs (shape, shapesize)</source>
          <target state="translated">长方形龟为河内盘(形状、大小)。</target>
        </trans-unit>
        <trans-unit id="00b0621d227157f479fa34a6cf0046e754507f7b" translate="yes" xml:space="preserve">
          <source>RecursionError</source>
          <target state="translated">RecursionError</target>
        </trans-unit>
        <trans-unit id="96ba1b1015be70b0923b099b9a499b43d9c26512" translate="yes" xml:space="preserve">
          <source>Recursive directory creation function. Like &lt;a href=&quot;#os.mkdir&quot;&gt;&lt;code&gt;mkdir()&lt;/code&gt;&lt;/a&gt;, but makes all intermediate-level directories needed to contain the leaf directory.</source>
          <target state="translated">递归目录创建功能。类似于&lt;a href=&quot;#os.mkdir&quot;&gt; &lt;code&gt;mkdir()&lt;/code&gt; &lt;/a&gt;，但是使所有中间级目录都包含叶子目录。</target>
        </trans-unit>
        <trans-unit id="1276ee86cf37b3c2f65fee0e5250c139938fbab4" translate="yes" xml:space="preserve">
          <source>Recursive directory or file renaming function. Works like &lt;a href=&quot;#os.rename&quot;&gt;&lt;code&gt;rename()&lt;/code&gt;&lt;/a&gt;, except creation of any intermediate directories needed to make the new pathname good is attempted first. After the rename, directories corresponding to rightmost path segments of the old name will be pruned away using &lt;a href=&quot;#os.removedirs&quot;&gt;&lt;code&gt;removedirs()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">递归目录或文件重命名功能。像&lt;a href=&quot;#os.rename&quot;&gt; &lt;code&gt;rename()&lt;/code&gt; 一样工作&lt;/a&gt;，除了首先尝试创建使新路径名良好所需的任何中间目录。重命名后，将使用&lt;a href=&quot;#os.removedirs&quot;&gt; &lt;code&gt;removedirs()&lt;/code&gt; &lt;/a&gt;删除与旧名称的最右边路径段相对应的目录。</target>
        </trans-unit>
        <trans-unit id="1727163dd0ed3d846cf01500b450064ac7a6858f" translate="yes" xml:space="preserve">
          <source>Recursive implementation used by &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;. This uses the type of &lt;em&gt;obj&lt;/em&gt; to determine which formatting method to call, passing it &lt;em&gt;obj&lt;/em&gt; and &lt;em&gt;level&lt;/em&gt;. The type-specific methods should call &lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt;&lt;code&gt;repr1()&lt;/code&gt;&lt;/a&gt; to perform recursive formatting, with &lt;code&gt;level - 1&lt;/code&gt; for the value of &lt;em&gt;level&lt;/em&gt; in the recursive call.</source>
          <target state="translated">&lt;a href=&quot;#reprlib.Repr.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;使用的递归实现。这使用&lt;em&gt;obj&lt;/em&gt;的类型来确定要调用的格式化方法，并将&lt;em&gt;obj&lt;/em&gt;和&lt;em&gt;level&lt;/em&gt;传递给它。特定于类型的方法应调用&lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt; &lt;code&gt;repr1()&lt;/code&gt; &lt;/a&gt;以执行递归格式化，其中递归调用中的&lt;em&gt;level&lt;/em&gt;值为 &lt;code&gt;level - 1&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bbd41b3e25dc42209f3e3cf6dfc7788c3c2f7c4" translate="yes" xml:space="preserve">
          <source>Recursive objects (compound objects that, directly or indirectly, contain a reference to themselves) may cause a recursive loop.</source>
          <target state="translated">递归对象(直接或间接包含对自己的引用的复合对象)可能会引起递归循环。</target>
        </trans-unit>
        <trans-unit id="9cf343d35a2951efa9acec2d6f7d08389ad9b862" translate="yes" xml:space="preserve">
          <source>Recursively copy an entire directory tree rooted at &lt;em&gt;src&lt;/em&gt; to a directory named &lt;em&gt;dst&lt;/em&gt; and return the destination directory. &lt;em&gt;dirs_exist_ok&lt;/em&gt; dictates whether to raise an exception in case &lt;em&gt;dst&lt;/em&gt; or any missing parent directory already exists.</source>
          <target state="translated">将整个以&lt;em&gt;src&lt;/em&gt;为根的目录树递归复制到名为&lt;em&gt;dst&lt;/em&gt;的目录，并返回目标目录。&lt;em&gt;dirs_exist_ok&lt;/em&gt;决定是否在&lt;em&gt;dst&lt;/em&gt;或任何丢失的父目录已经存在的情况下引发异常。</target>
        </trans-unit>
        <trans-unit id="180df0d6c8d4c579acdcd7d9396e0718f8e5314d" translate="yes" xml:space="preserve">
          <source>Recursively descend the directory tree named by &lt;em&gt;dir&lt;/em&gt;, compiling all &lt;code&gt;.py&lt;/code&gt; files along the way. Return a true value if all the files compiled successfully, and a false value otherwise.</source>
          <target state="translated">递归地下降由&lt;em&gt;dir&lt;/em&gt;命名的目录树，并编译所有 &lt;code&gt;.py&lt;/code&gt; 文件。如果所有文件编译成功，则返回true，否则返回false。</target>
        </trans-unit>
        <trans-unit id="27119d11be9fa4ec959592d161e4265bff641523" translate="yes" xml:space="preserve">
          <source>Recursively move a file or directory (&lt;em&gt;src&lt;/em&gt;) to another location (&lt;em&gt;dst&lt;/em&gt;) and return the destination.</source>
          <target state="translated">将文件或目录（&lt;em&gt;src&lt;/em&gt;）递归移动到另一个位置（&lt;em&gt;dst&lt;/em&gt;）并返回目标。</target>
        </trans-unit>
        <trans-unit id="f3ca03bf0a62228194dc0b6acc42503eef9450f9" translate="yes" xml:space="preserve">
          <source>Recursively yield all descendant nodes in the tree starting at &lt;em&gt;node&lt;/em&gt; (including &lt;em&gt;node&lt;/em&gt; itself), in no specified order. This is useful if you only want to modify nodes in place and don&amp;rsquo;t care about the context.</source>
          <target state="translated">递归地产生树中所有从&lt;em&gt;节点&lt;/em&gt;（包括&lt;em&gt;节点&lt;/em&gt;本身）开始的后代节点，且不指定顺序。如果您只想在适当位置修改节点，而不关心上下文，则这很有用。</target>
        </trans-unit>
        <trans-unit id="cc9db3a795571c7e71f45670a1da7ff49b5f1557" translate="yes" xml:space="preserve">
          <source>Red</source>
          <target state="translated">Red</target>
        </trans-unit>
        <trans-unit id="86d1aaf14cd279ae2cf1492c578de97ba98cd80c" translate="yes" xml:space="preserve">
          <source>Redirect to the &lt;code&gt;Location:&lt;/code&gt; or &lt;code&gt;URI:&lt;/code&gt; URL. This method is called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; when getting an HTTP &amp;lsquo;moved permanently&amp;rsquo; response.</source>
          <target state="translated">重定向到&amp;ldquo; &lt;code&gt;Location:&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;URI:&lt;/code&gt; &amp;rdquo; URL。当获得HTTP&amp;ldquo;永久移动&amp;rdquo;响应时，父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;会调用此方法。</target>
        </trans-unit>
        <trans-unit id="471b94d402d16a5fe7549d001a68ada1f7ddb16f" translate="yes" xml:space="preserve">
          <source>Redo</source>
          <target state="translated">Redo</target>
        </trans-unit>
        <trans-unit id="fa00e646528931eda76d7105684ee497a84cf30a" translate="yes" xml:space="preserve">
          <source>Redo the last undone change to the current window.</source>
          <target state="translated">对当前窗口重做上次未做的更改。</target>
        </trans-unit>
        <trans-unit id="26744d62a96f1cadd0af20a2e6465fecffeb9384" translate="yes" xml:space="preserve">
          <source>Reduces &lt;em&gt;x&lt;/em&gt; to its simplest form.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;简化为最简单的形式。</target>
        </trans-unit>
        <trans-unit id="d25d695408ce744a2210b44ac61f09f673eda1c2" translate="yes" xml:space="preserve">
          <source>Redundant arguments are skipped, e.g.:</source>
          <target state="translated">跳过多余的参数,例如:。</target>
        </trans-unit>
        <trans-unit id="faf0ccf6987b184ee29bf8360d65c3940cac99c3" translate="yes" xml:space="preserve">
          <source>Reentrancy</source>
          <target state="translated">Reentrancy</target>
        </trans-unit>
        <trans-unit id="31af1e7d9bdf0c23f4f62741ae34245ad0ba7260" translate="yes" xml:space="preserve">
          <source>Reentrant context managers</source>
          <target state="translated">重新加入的背景管理人员</target>
        </trans-unit>
        <trans-unit id="b75a504a3c0ba70ec0c10b2a3af9e5159a4bdcef" translate="yes" xml:space="preserve">
          <source>Reentrant locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">可重入锁也支持&lt;a href=&quot;#with-locks&quot;&gt;上下文管理协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb78d0d5486a369e93ee7a6cdd4b38e67e977db6" translate="yes" xml:space="preserve">
          <source>Ref (reference)</source>
          <target state="translated">参考资料(参考)</target>
        </trans-unit>
        <trans-unit id="b4c48c1a7a47b1d71c279a887e2ffc0a67306f39" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#pickle-picklable&quot;&gt;What can be pickled and unpickled?&lt;/a&gt; to learn what kinds of objects can be pickled.</source>
          <target state="translated">请参阅&lt;a href=&quot;#pickle-picklable&quot;&gt;什么可以腌制和不腌制？&lt;/a&gt;了解可以腌制哪些类型的物体。</target>
        </trans-unit>
        <trans-unit id="8cf6852f041f2f75b501bc94adc79db87ab5b0bf" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;multiprocessing.managers.BaseManager&lt;/code&gt;&lt;/a&gt; for a description of the inherited &lt;em&gt;address&lt;/em&gt; and &lt;em&gt;authkey&lt;/em&gt; optional input arguments and how they may be used to connect to an existing &lt;code&gt;SharedMemoryManager&lt;/code&gt; service from other processes.</source>
          <target state="translated">有关继承的&lt;em&gt;地址&lt;/em&gt;和&lt;em&gt;authkey&lt;/em&gt;可选输入参数的描述，以及如何将它们用于从其他进程连接到现有 &lt;code&gt;SharedMemoryManager&lt;/code&gt; 服务的信息，请参考&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;multiprocessing.managers.BaseManager&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3020876c2b023ee61f4ff34145b247ee239a1340" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib examples&lt;/a&gt; to find out how the &lt;a href=&quot;#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; method can be used for generating the query string of a URL or data for a POST request.</source>
          <target state="translated">请参考&lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib示例，&lt;/a&gt;以了解如何使用&lt;a href=&quot;#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;方法来生成URL的查询字符串或POST请求的数据。</target>
        </trans-unit>
        <trans-unit id="c9cf528cc829e45349c0d15f2db845b85a0259ce" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib examples&lt;/a&gt; to find out how urlencode method can be used for generating query string for a URL or data for POST.</source>
          <target state="translated">请参考&lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib示例，&lt;/a&gt;以了解如何使用urlencode方法生成URL的查询字符串或POST的数据。</target>
        </trans-unit>
        <trans-unit id="ae2245c595777492261bc4133ce898624d7c4f2c" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; 中&lt;/a&gt;相应的属性文档。</target>
        </trans-unit>
        <trans-unit id="e9576a59010d3da190ca3684a799f611a1b6fbcd" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt;&lt;code&gt;IPv4Interface&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt; &lt;code&gt;IPv4Interface&lt;/code&gt; 中&lt;/a&gt;的相应属性文档。</target>
        </trans-unit>
        <trans-unit id="1b85be0aaf5c895e33415ac3f0b5c8f83d27d37a" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; 中&lt;/a&gt;相应的属性文档。</target>
        </trans-unit>
        <trans-unit id="79197749a9a67a030048d0927ceb634ecaa07972" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding method documentation in &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; 中&lt;/a&gt;的相应方法文档。</target>
        </trans-unit>
        <trans-unit id="df17e49138f3f65ca0925aa5f4e03398b9debe72" translate="yes" xml:space="preserve">
          <source>Refer to the section &lt;a href=&quot;#pickle-state&quot;&gt;Handling Stateful Objects&lt;/a&gt; for more information about how to use the methods &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关如何使用方法&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;更多信息，请参见&lt;a href=&quot;#pickle-state&quot;&gt;处理有状态对象&lt;/a&gt;一节。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="2eca1b4d68aeba600d4d3d5d19a63fddf76c2ea9" translate="yes" xml:space="preserve">
          <source>ReferenceError</source>
          <target state="translated">ReferenceError</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="e2c4c767a75ea64177cb183a0c2547b6552dec09" translate="yes" xml:space="preserve">
          <source>Reformat the current blank-line-delimited paragraph in comment block or multiline string or selected line in a string. All lines in the paragraph will be formatted to less than N columns, where N defaults to 72.</source>
          <target state="translated">对注释块或多行字符串或字符串中的选定行中的当前空行限定的段落进行重新格式化。段落中的所有行将被格式化为小于N列,其中N默认为72。</target>
        </trans-unit>
        <trans-unit id="56e3badc4e6c5cc95e0ea5a9a878b9bd09f319d4" translate="yes" xml:space="preserve">
          <source>Refresh</source>
          <target state="translated">Refresh</target>
        </trans-unit>
        <trans-unit id="1a40d6fbcfd5a05686e3eb47a0a8f93b385f5db8" translate="yes" xml:space="preserve">
          <source>Refresh screen.</source>
          <target state="translated">刷新屏幕。</target>
        </trans-unit>
        <trans-unit id="ff94044878bc215938c36be9ee6c2a78ff6b5155" translate="yes" xml:space="preserve">
          <source>Regardless of the system you&amp;rsquo;re running on, you can instantiate all of these classes, since they don&amp;rsquo;t provide any operation that does system calls.</source>
          <target state="translated">无论运行的系统是什么，都可以实例化所有这些类，因为它们不提供任何执行系统调用的操作。</target>
        </trans-unit>
        <trans-unit id="c64942ace4774bf822764bf8de2f43e9d6205ec5" translate="yes" xml:space="preserve">
          <source>Regardless, for maximum interoperability, you may wish to voluntarily adhere to the restriction yourself.</source>
          <target state="translated">无论如何,为了最大限度地实现互操作性,你不妨自己自愿遵守限制。</target>
        </trans-unit>
        <trans-unit id="2257c3081ae3f64a08a00f535816622645cf47db" translate="yes" xml:space="preserve">
          <source>Register &lt;em&gt;func&lt;/em&gt; as a function to be executed at termination. Any optional arguments that are to be passed to &lt;em&gt;func&lt;/em&gt; must be passed as arguments to &lt;a href=&quot;#atexit.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is possible to register the same function and arguments more than once.</source>
          <target state="translated">将&lt;em&gt;func&lt;/em&gt;注册为要在终止时执行的功能。任何要传递给&lt;em&gt;func的&lt;/em&gt;可选参数都必须作为参数传递给&lt;a href=&quot;#atexit.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;。可以多次注册相同的函数和参数。</target>
        </trans-unit>
        <trans-unit id="1cf23139d88e505f3ae5029c24fc6e2e5c9845c0" translate="yes" xml:space="preserve">
          <source>Register &lt;em&gt;subclass&lt;/em&gt; as a &amp;ldquo;virtual subclass&amp;rdquo; of this ABC. For example:</source>
          <target state="translated">将&lt;em&gt;子类&lt;/em&gt;注册为该ABC的&amp;ldquo;虚拟子类&amp;rdquo;。例如：</target>
        </trans-unit>
        <trans-unit id="46544acf16426268f320581723045a91c82f422a" translate="yes" xml:space="preserve">
          <source>Register a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object for control-c handling. Registering a result stores a weak reference to it, so it doesn&amp;rsquo;t prevent the result from being garbage collected.</source>
          <target state="translated">注册一个&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;对象以进行control-c处理。注册结果会对其存储一个弱引用，因此不会阻止结果被垃圾收集。</target>
        </trans-unit>
        <trans-unit id="b9b46ebeff8249fc9c6789f792454d36e4861953" translate="yes" xml:space="preserve">
          <source>Register a &lt;em&gt;defect&lt;/em&gt; on &lt;em&gt;obj&lt;/em&gt;. In the email package, &lt;em&gt;defect&lt;/em&gt; will always be a subclass of &lt;code&gt;Defect&lt;/code&gt;.</source>
          <target state="translated">在&lt;em&gt;obj&lt;/em&gt;上注册&lt;em&gt;缺陷&lt;/em&gt;。在电子邮件包中，&lt;em&gt;缺陷&lt;/em&gt;将始终是 &lt;code&gt;Defect&lt;/code&gt; 的子类。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="164f6bd8d95c5fd4c9678b7c32a2758a86a74a63" translate="yes" xml:space="preserve">
          <source>Register a callback function that will be called after the TLS Client Hello handshake message has been received by the SSL/TLS server when the TLS client specifies a server name indication. The server name indication mechanism is specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc6066.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 6066&lt;/strong&gt;&lt;/a&gt; section 3 - Server Name Indication.</source>
          <target state="translated">注册一个回调函数，当TLS客户机指定服务器名称指示时，SSL / TLS服务器接收到TLS客户机Hello握手消息后将调用该回调函数。服务器名称指示机制在&lt;a href=&quot;https://tools.ietf.org/html/rfc6066.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 6066&lt;/strong&gt;&lt;/a&gt;第3部分-服务器名称指示中指定。</target>
        </trans-unit>
        <trans-unit id="3b3559061218c8902451a453ef6702c1f1345ec0" translate="yes" xml:space="preserve">
          <source>Register a codec search function. Search functions are expected to take one argument, being the encoding name in all lower case letters, and return a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object. In case a search function cannot find a given encoding, it should return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">注册编解码器搜索功能。搜索函数应采用一个参数，即所有小写字母的编码名称，并返回&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;对象。如果搜索功能找不到给定的编码，则应返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b03d910abc654603111bdba5ec907f8cae3a73be" translate="yes" xml:space="preserve">
          <source>Register a fd descriptor with the epoll object.</source>
          <target state="translated">用epoll对象注册一个fd描述符。</target>
        </trans-unit>
        <trans-unit id="dcd44a82c12fc43270246c151369862610370a6d" translate="yes" xml:space="preserve">
          <source>Register a file descriptor with the polling object. Future calls to the &lt;a href=&quot;#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; method will then check whether the file descriptor has any pending I/O events. &lt;em&gt;fd&lt;/em&gt; can be either an integer, or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer. File objects implement &lt;code&gt;fileno()&lt;/code&gt;, so they can also be used as the argument.</source>
          <target state="translated">向轮询对象注册文件描述符。然后，将来对&lt;a href=&quot;#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;方法的调用将检查文件描述符是否具有任何未决的I / O事件。&lt;em&gt;fd&lt;/em&gt;可以是整数，也可以是带有&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法并返回整数的对象。文件对象实现 &lt;code&gt;fileno()&lt;/code&gt; ，因此它们也可用作参数。</target>
        </trans-unit>
        <trans-unit id="37055bd4fc23c0f4fdea4606eace1de43793f75b" translate="yes" xml:space="preserve">
          <source>Register a file object for selection, monitoring it for I/O events.</source>
          <target state="translated">注册一个文件对象进行选择,监控它的I/O事件。</target>
        </trans-unit>
        <trans-unit id="7fd26bcbfcaa91f7175cd5c9e51256abe0c74da5" translate="yes" xml:space="preserve">
          <source>Register a function that can respond to XML-RPC requests. If &lt;em&gt;name&lt;/em&gt; is given, it will be the method name associated with &lt;em&gt;function&lt;/em&gt;, otherwise &lt;code&gt;function.__name__&lt;/code&gt; will be used. &lt;em&gt;name&lt;/em&gt; is a string, and may contain characters not legal in Python identifiers, including the period character.</source>
          <target state="translated">注册一个可以响应XML-RPC请求的函数。如果给定&lt;em&gt;名称&lt;/em&gt;，则将是与&lt;em&gt;function&lt;/em&gt;关联的方法名称，否则将使用 &lt;code&gt;function.__name__&lt;/code&gt; 。&lt;em&gt;name&lt;/em&gt;是一个字符串，并且可能包含Python标识符中不合法的字符，包括句点字符。</target>
        </trans-unit>
        <trans-unit id="932c565191eb5d0a0f44bcd3a47f087684594629" translate="yes" xml:space="preserve">
          <source>Register a new child handler.</source>
          <target state="translated">注册一个新的子处理程序。</target>
        </trans-unit>
        <trans-unit id="3ca76dbaf3b10d5b00ef8023f3d721391c27d096" translate="yes" xml:space="preserve">
          <source>Register a user signal: install a handler for the &lt;em&gt;signum&lt;/em&gt; signal to dump the traceback of all threads, or of the current thread if &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, into &lt;em&gt;file&lt;/em&gt;. Call the previous handler if chain is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">注册用户的信号：安装的处理程序&lt;em&gt;正负号&lt;/em&gt;信号转储全部线程的追踪，或者如果当前线程的&lt;em&gt;all_threads&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; ，到&lt;em&gt;文件&lt;/em&gt;。如果chain为 &lt;code&gt;True&lt;/code&gt; ,则调用上一个处理程序。</target>
        </trans-unit>
        <trans-unit id="b7a88fc1c560d328f89eb19344727dd1b06a1f6a" translate="yes" xml:space="preserve">
          <source>Register an archiver for the format &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">为格式&lt;em&gt;名称&lt;/em&gt;注册一个存档器。</target>
        </trans-unit>
        <trans-unit id="9c69e4c1a6b761b31802eca6d70086c78cac40eb" translate="yes" xml:space="preserve">
          <source>Register an object which is used to expose method names which have not been registered using &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt;. If instance contains a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is called with the requested method name and the parameters from the request; the return value is returned to the client as the result. If instance does not have a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is searched for an attribute matching the name of the requested method; if the requested method name contains periods, each component of the method name is searched for individually, with the effect that a simple hierarchical search is performed. The value found from this search is then called with the parameters from the request, and the return value is passed back to the client.</source>
          <target state="translated">注册一个对象，该对象用于公开尚未使用&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;注册的方法名。如果instance包含 &lt;code&gt;_dispatch()&lt;/code&gt; 方法，则使用请求的方法名称和请求中的参数进行调用；返回值作为结果返回给客户端。如果instance没有 &lt;code&gt;_dispatch()&lt;/code&gt; 方法，则在其中搜索与所请求方法名称匹配的属性；如果请求的方法名称包含句点，则将分别搜索方法名称的每个组成部分，从而执行简单的分层搜索。然后使用请求中的参数调用从此搜索中找到的值，并将返回值传递回客户端。</target>
        </trans-unit>
        <trans-unit id="ed9365f6c69e5a1b24741bf60904088a13744988" translate="yes" xml:space="preserve">
          <source>Register an object which is used to expose method names which have not been registered using &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;instance&lt;/em&gt; contains a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is called with the requested method name and the parameters from the request. Its API is &lt;code&gt;def _dispatch(self, method, params)&lt;/code&gt; (note that &lt;em&gt;params&lt;/em&gt; does not represent a variable argument list). If it calls an underlying function to perform its task, that function is called as &lt;code&gt;func(*params)&lt;/code&gt;, expanding the parameter list. The return value from &lt;code&gt;_dispatch()&lt;/code&gt; is returned to the client as the result. If &lt;em&gt;instance&lt;/em&gt; does not have a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is searched for an attribute matching the name of the requested method.</source>
          <target state="translated">注册一个对象，该对象用于公开尚未使用&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;注册的方法名。如果&lt;em&gt;instance&lt;/em&gt;包含 &lt;code&gt;_dispatch()&lt;/code&gt; 方法，则会使用请求的方法名称和请求中的参数来调用它。它的API是 &lt;code&gt;def _dispatch(self, method, params)&lt;/code&gt; （请注意，&lt;em&gt;params&lt;/em&gt;并不表示变量参数列表）。如果它调用基础函数来执行其任务，则该函数称为 &lt;code&gt;func(*params)&lt;/code&gt; ，从而扩展参数列表。 &lt;code&gt;_dispatch()&lt;/code&gt; 的返回值作为结果返回给客户端。如果&lt;em&gt;实例&lt;/em&gt;没有 &lt;code&gt;_dispatch()&lt;/code&gt; 方法，将搜索与所请求方法名称匹配的属性。</target>
        </trans-unit>
        <trans-unit id="e63339c20e691d44cfc9696ee457196f1582944e" translate="yes" xml:space="preserve">
          <source>Register an open socket to wait for data using streams</source>
          <target state="translated">使用流注册一个开放的套接字来等待数据。</target>
        </trans-unit>
        <trans-unit id="31f209836a9b7ebbeed4270cc1f5fbc1d00b624f" translate="yes" xml:space="preserve">
          <source>Register callables to be executed when a new child process is forked using &lt;a href=&quot;#os.fork&quot;&gt;&lt;code&gt;os.fork()&lt;/code&gt;&lt;/a&gt; or similar process cloning APIs. The parameters are optional and keyword-only. Each specifies a different call point.</source>
          <target state="translated">注册使用&lt;a href=&quot;#os.fork&quot;&gt; &lt;code&gt;os.fork()&lt;/code&gt; &lt;/a&gt;或类似的流程克隆API 派生新的子流程时要执行的可调用对象。参数是可选的，并且仅关键字。每个指定一个不同的呼叫点。</target>
        </trans-unit>
        <trans-unit id="7380a641971d9fdea939efb17a008fb3415a8df4" translate="yes" xml:space="preserve">
          <source>Register handlers for signals &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGTERM&lt;/code&gt; using the &lt;a href=&quot;#asyncio.loop.add_signal_handler&quot;&gt;&lt;code&gt;loop.add_signal_handler()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.loop.add_signal_handler&quot;&gt; &lt;code&gt;loop.add_signal_handler()&lt;/code&gt; &lt;/a&gt;方法注册信号 &lt;code&gt;SIGINT&lt;/code&gt; 和 &lt;code&gt;SIGTERM&lt;/code&gt; 的处理程序：</target>
        </trans-unit>
        <trans-unit id="b91bba2cba69b477fe0d2b0a0843ebcd636def10" translate="yes" xml:space="preserve">
          <source>Register the &lt;em&gt;factory&lt;/em&gt; function with the name &lt;em&gt;name&lt;/em&gt;. The factory function should return an object which implements the &lt;code&gt;DOMImplementation&lt;/code&gt; interface. The factory function can return the same object every time, or a new one for each call, as appropriate for the specific implementation (e.g. if that implementation supports some customization).</source>
          <target state="translated">用名称&lt;em&gt;name&lt;/em&gt;注册&lt;em&gt;工厂&lt;/em&gt;功能。工厂函数应返回一个实现 &lt;code&gt;DOMImplementation&lt;/code&gt; 接口的对象。工厂函数可以每次都返回相同的对象，或者针对特定的实现（例如，如果该实现支持某些自定义），则为每个调用返回一个新对象。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92397a88086429e8a44b3cb946e76aa3d03bea9" translate="yes" xml:space="preserve">
          <source>Register the XML-RPC introspection functions &lt;code&gt;system.listMethods&lt;/code&gt;, &lt;code&gt;system.methodHelp&lt;/code&gt; and &lt;code&gt;system.methodSignature&lt;/code&gt;.</source>
          <target state="translated">注册XML-RPC自省功能 &lt;code&gt;system.listMethods&lt;/code&gt; ， &lt;code&gt;system.methodHelp&lt;/code&gt; 和 &lt;code&gt;system.methodSignature&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f57270a3a2291de58564a8382d4dd27ac258ceb6" translate="yes" xml:space="preserve">
          <source>Register the XML-RPC multicall function &lt;code&gt;system.multicall&lt;/code&gt;.</source>
          <target state="translated">注册XML-RPC多重调用函数 &lt;code&gt;system.multicall&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4718e11bf7cd26056f9aabd4bb5d18f811fd0df3" translate="yes" xml:space="preserve">
          <source>Register the browser type &lt;em&gt;name&lt;/em&gt;. Once a browser type is registered, the &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function can return a controller for that browser type. If &lt;em&gt;instance&lt;/em&gt; is not provided, or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;constructor&lt;/em&gt; will be called without parameters to create an instance when needed. If &lt;em&gt;instance&lt;/em&gt; is provided, &lt;em&gt;constructor&lt;/em&gt; will never be called, and may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">注册浏览器类型&lt;em&gt;名称&lt;/em&gt;。注册浏览器类型后，&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;函数可以返回该浏览器类型的控制器。如果未提供&lt;em&gt;instance&lt;/em&gt;或为 &lt;code&gt;None&lt;/code&gt; ，则在需要时将调用不带参数的&lt;em&gt;构造&lt;/em&gt;函数以创建实例。如果提供了&lt;em&gt;instance&lt;/em&gt;，则&lt;em&gt;构造函数&lt;/em&gt;将永远不会被调用，并且可以为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9feadc6219a888b6af3e0b732a44c86f6e6bc4fe" translate="yes" xml:space="preserve">
          <source>Register the error handling function &lt;em&gt;error_handler&lt;/em&gt; under the name &lt;em&gt;name&lt;/em&gt;. The &lt;em&gt;error_handler&lt;/em&gt; argument will be called during encoding and decoding in case of an error, when &lt;em&gt;name&lt;/em&gt; is specified as the errors parameter.</source>
          <target state="translated">在名称&lt;em&gt;name&lt;/em&gt;下注册错误处理函数&lt;em&gt;error_handler&lt;/em&gt;。如果将&lt;em&gt;name&lt;/em&gt;指定为errors参数，则在发生错误的编码和解码期间将调用&lt;em&gt;error_handler&lt;/em&gt;参数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9353afc89e79764054514b6909c4b75bd875f500" translate="yes" xml:space="preserve">
          <source>Register the read end of &lt;em&gt;pipe&lt;/em&gt; in the event loop.</source>
          <target state="translated">在事件循环中注册&lt;em&gt;管道&lt;/em&gt;的读取端。</target>
        </trans-unit>
        <trans-unit id="03167f901b75de04f1a74c6dda1dfb5372323b7f" translate="yes" xml:space="preserve">
          <source>Register the write end of &lt;em&gt;pipe&lt;/em&gt; in the event loop.</source>
          <target state="translated">在事件循环中注册&lt;em&gt;管道&lt;/em&gt;的写入端。</target>
        </trans-unit>
        <trans-unit id="9afbeb2844d451aa393d0047778bed406865a5a8" translate="yes" xml:space="preserve">
          <source>Registering a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object has no side-effects if control-c handling is not enabled, so test frameworks can unconditionally register all results they create independently of whether or not handling is enabled.</source>
          <target state="translated">如果未启用control-c处理，则注册&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;对象没有副作用，因此测试框架可以无条件地注册其创建的所有结果，而与是否启用处理无关。</target>
        </trans-unit>
        <trans-unit id="f806f73ca1282968116ee369be33ec7b2bc43a1e" translate="yes" xml:space="preserve">
          <source>Registering a file descriptor that&amp;rsquo;s already registered is not an error, and has the same effect as registering the descriptor exactly once.</source>
          <target state="translated">注册已经注册的文件描述符不是错误，并且与只注册一次描述符具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="a8d752e2d66634a0503418efc63377aedf300c3e" translate="yes" xml:space="preserve">
          <source>Registering a file descriptor that&amp;rsquo;s already registered is not an error, but the result is undefined. The appropriate action is to unregister or modify it first. This is an important difference compared with &lt;code&gt;poll()&lt;/code&gt;.</source>
          <target state="translated">注册已经注册的文件描述符不是错误，但是结果是不确定的。适当的操作是先注销或修改它。与 &lt;code&gt;poll()&lt;/code&gt; 相比，这是一个重要的区别。</target>
        </trans-unit>
        <trans-unit id="2b6323e44d8eb9755ce0c51d184939da5a24ae74" translate="yes" xml:space="preserve">
          <source>Registering a new dialect:</source>
          <target state="translated">注册一种新的方言。</target>
        </trans-unit>
        <trans-unit id="c9b0a6a6e0ad10be8bd30c2abdfaa375bab2fed3" translate="yes" xml:space="preserve">
          <source>Registering an adapter callable</source>
          <target state="translated">注册一个可调用的适配器</target>
        </trans-unit>
        <trans-unit id="8b4028ee967be38667ca5b4eb6a3d7780792a90b" translate="yes" xml:space="preserve">
          <source>Registers &lt;em&gt;trace_callback&lt;/em&gt; to be called for each SQL statement that is actually executed by the SQLite backend.</source>
          <target state="translated">注册&lt;em&gt;trace_callback&lt;/em&gt;以为SQLite后端实际执行的每个SQL语句调用。</target>
        </trans-unit>
        <trans-unit id="35efa660a7091cdf25e330f6bae8ae3ece9016c2" translate="yes" xml:space="preserve">
          <source>Registers a callable to convert a bytestring from the database into a custom Python type. The callable will be invoked for all database values that are of the type &lt;em&gt;typename&lt;/em&gt;. Confer the parameter &lt;em&gt;detect_types&lt;/em&gt; of the &lt;a href=&quot;#sqlite3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; function for how the type detection works. Note that &lt;em&gt;typename&lt;/em&gt; and the name of the type in your query are matched in case-insensitive manner.</source>
          <target state="translated">注册一个callable，以将字节串从数据库转换为自定义Python类型。将为&lt;em&gt;typename&lt;/em&gt;类型的所有数据库值调用callable 。赋予参数&lt;em&gt;detect_types&lt;/em&gt;中的&lt;a href=&quot;#sqlite3.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;函数的类型检测是如何工作的。需要注意的是&lt;em&gt;类型名称&lt;/em&gt;和您的查询在不区分大小写的方式匹配类型的名称。</target>
        </trans-unit>
        <trans-unit id="b6e987e63d4340915744a6d25f1e0148affac7a5" translate="yes" xml:space="preserve">
          <source>Registers a callable to convert the custom Python type &lt;em&gt;type&lt;/em&gt; into one of SQLite&amp;rsquo;s supported types. The callable &lt;em&gt;callable&lt;/em&gt; accepts as single parameter the Python value, and must return a value of the following types: int, float, str or bytes.</source>
          <target state="translated">注册一个callable，将自定义Python类型&lt;em&gt;类型&lt;/em&gt;转换为SQLite支持的类型之一。Callable &lt;em&gt;Callable&lt;/em&gt;接受Python值作为单个参数，并且必须返回以下类型的值：int，float，str或bytes。</target>
        </trans-unit>
        <trans-unit id="7f4f4f0d3036b0446492d39636a2ba426bf00bdf" translate="yes" xml:space="preserve">
          <source>Registers a namespace prefix. The registry is global, and any existing mapping for either the given prefix or the namespace URI will be removed. &lt;em&gt;prefix&lt;/em&gt; is a namespace prefix. &lt;em&gt;uri&lt;/em&gt; is a namespace uri. Tags and attributes in this namespace will be serialized with the given prefix, if at all possible.</source>
          <target state="translated">注册名称空间前缀。该注册表是全局注册表，并且将删除给定前缀或名称空间URI的所有现有映射。&lt;em&gt;prefix&lt;/em&gt;是名称空间前缀。&lt;em&gt;uri&lt;/em&gt;是一个名称空间uri。如果可能，将使用给定的前缀序列化该命名空间中的标签和属性。</target>
        </trans-unit>
        <trans-unit id="898448a0347d0a1cccd5de2f6639d1a5dec6c199" translate="yes" xml:space="preserve">
          <source>Registers a type-specific method called by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; to check if two objects of exactly the same &lt;em&gt;typeobj&lt;/em&gt; (not subclasses) compare equal. &lt;em&gt;function&lt;/em&gt; must take two positional arguments and a third msg=None keyword argument just as &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; does. It must raise &lt;a href=&quot;#unittest.TestCase.failureException&quot;&gt;&lt;code&gt;self.failureException(msg)&lt;/code&gt;&lt;/a&gt; when inequality between the first two parameters is detected &amp;ndash; possibly providing useful information and explaining the inequalities in details in the error message.</source>
          <target state="translated">注册一个由&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;调用的特定于类型的方法，以检查两个完全相同的&lt;em&gt;typeobj&lt;/em&gt;（不是子类）的对象是否相等。&lt;em&gt;函数&lt;/em&gt;必须使用两个位置参数和第三个msg = None关键字参数，就像&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;一样。当检测到前两个参数之间的不&lt;a href=&quot;#unittest.TestCase.failureException&quot;&gt; &lt;code&gt;self.failureException(msg)&lt;/code&gt; &lt;/a&gt;时，它必须引发self.failureException（msg）－可能提供有用的信息并在错误消息中详细解释不平等。</target>
        </trans-unit>
        <trans-unit id="3ed4baf6d52295c8cbd61889f5bc71b934277d03" translate="yes" xml:space="preserve">
          <source>Registers an unpack format. &lt;em&gt;name&lt;/em&gt; is the name of the format and &lt;em&gt;extensions&lt;/em&gt; is a list of extensions corresponding to the format, like &lt;code&gt;.zip&lt;/code&gt; for Zip files.</source>
          <target state="translated">注册解压缩格式。&lt;em&gt;name&lt;/em&gt;是格式的名称，&lt;em&gt;扩展名&lt;/em&gt;是与该格式相对应的扩展&lt;em&gt;名&lt;/em&gt;的列表，例如Zip文件的 &lt;code&gt;.zip&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dff8ae65444da1337c633c3a82fc2c97e6c4ebf7" translate="yes" xml:space="preserve">
          <source>Registers the XML-RPC introspection functions &lt;code&gt;system.listMethods&lt;/code&gt;, &lt;code&gt;system.methodHelp&lt;/code&gt; and &lt;code&gt;system.methodSignature&lt;/code&gt;.</source>
          <target state="translated">注册XML-RPC自省函数 &lt;code&gt;system.listMethods&lt;/code&gt; ， &lt;code&gt;system.methodHelp&lt;/code&gt; 和 &lt;code&gt;system.methodSignature&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b24c061372e9006ab3dba21e01332b1f78875c0" translate="yes" xml:space="preserve">
          <source>Registers the XML-RPC multicall function system.multicall.</source>
          <target state="translated">注册XML-RPC多呼函数system.multicall。</target>
        </trans-unit>
        <trans-unit id="21f1b9fba98b063f1e01a48b68deb0fe5c932f64" translate="yes" xml:space="preserve">
          <source>Registers the file handler callback function &lt;em&gt;func&lt;/em&gt;. The &lt;em&gt;file&lt;/em&gt; argument may either be an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (such as a file or socket object), or an integer file descriptor. The &lt;em&gt;mask&lt;/em&gt; argument is an ORed combination of any of the three constants below. The callback is called as follows:</source>
          <target state="translated">注册文件处理程序回调函数&lt;em&gt;func&lt;/em&gt;。该&lt;em&gt;文件&lt;/em&gt;的参数可以是与对象&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法（诸如文件或插座对象），或一个整数文件描述符。的&lt;em&gt;掩模&lt;/em&gt;参数是任何以下三个常量的或运算组合。回调调用如下：</target>
        </trans-unit>
        <trans-unit id="00eb92c8b8f2eb8d829ae3e26e00670e31f68720" translate="yes" xml:space="preserve">
          <source>Registry Handle Objects</source>
          <target state="translated">注册表手柄对象</target>
        </trans-unit>
        <trans-unit id="0d479a6175499f959f3adaaac8b78ac75a72c8cd" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key allow you to access performance data. The data is not actually stored in the registry; the registry functions cause the system to collect the data from its source.</source>
          <target state="translated">从属于该键的注册表项允许您访问性能数据。这些数据实际上并不存储在注册表中;注册表功能使系统从其源头收集数据。</target>
        </trans-unit>
        <trans-unit id="891d33cc3ca4b92db2b616c6c874f3d2eb036366" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the default user configuration for new users on the local computer and the user configuration for the current user.</source>
          <target state="translated">从属于该键的注册表项定义了本地计算机上新用户的默认用户配置和当前用户的用户配置。</target>
        </trans-unit>
        <trans-unit id="0dcd07c12eb2712977e50c638f465638745a96ab" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the physical state of the computer, including data about the bus type, system memory, and installed hardware and software.</source>
          <target state="translated">从属于该键的注册表项定义了计算机的物理状态,包括有关总线类型、系统内存和安装的硬件和软件的数据。</target>
        </trans-unit>
        <trans-unit id="40c4329d727d54c52d160922d278205eca8b3b6d" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the preferences of the current user. These preferences include the settings of environment variables, data about program groups, colors, printers, network connections, and application preferences.</source>
          <target state="translated">从属于该键的注册表项定义了当前用户的偏好。这些偏好包括环境变量的设置、程序组数据、颜色、打印机、网络连接和应用程序偏好。</target>
        </trans-unit>
        <trans-unit id="a734a77cb1b1cd6f9f28fe107f26bfe1d74de18c" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define types (or classes) of documents and the properties associated with those types. Shell and COM applications use the information stored under this key.</source>
          <target state="translated">从属于该键的注册表项定义了文档的类型(或类别)以及与这些类型相关的属性。Shell和COM应用程序使用该键下存储的信息。</target>
        </trans-unit>
        <trans-unit id="769c4ae00ec08ffb7efba4a0686555cb084e381b" translate="yes" xml:space="preserve">
          <source>Regression testing is best confined to dedicated objects or files. There are several options for organizing tests:</source>
          <target state="translated">回归测试最好限制在专用对象或文件中。有几种组织测试的选择。</target>
        </trans-unit>
        <trans-unit id="f9872d9ad98b2ae5a0752ca710959f64efa89b06" translate="yes" xml:space="preserve">
          <source>Regression testing.</source>
          <target state="translated">回归测试。</target>
        </trans-unit>
        <trans-unit id="469415c626b697430fa86fc9993ad32f63927e1f" translate="yes" xml:space="preserve">
          <source>Regular Expression</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="e556cc3de941b0839b7798d403a3735b8507eafa" translate="yes" xml:space="preserve">
          <source>Regular Expression Examples</source>
          <target state="translated">正则表达式示例</target>
        </trans-unit>
        <trans-unit id="2d09d9c65ab0a1e1b60f7fdee405a4cc73b31eb2" translate="yes" xml:space="preserve">
          <source>Regular Expression Objects</source>
          <target state="translated">正则表达式对象</target>
        </trans-unit>
        <trans-unit id="3d255bd9ce32e1d539253422b204d6f8d5be2aa6" translate="yes" xml:space="preserve">
          <source>Regular Expression Syntax</source>
          <target state="translated">正则表达式语法</target>
        </trans-unit>
        <trans-unit id="2dd97ee527b620cafde5e92fbcb2c95497eed93a" translate="yes" xml:space="preserve">
          <source>Regular expressions beginning with &lt;code&gt;'^'&lt;/code&gt; can be used with &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; to restrict the match at the beginning of the string:</source>
          <target state="translated">以 &lt;code&gt;'^'&lt;/code&gt; 开头的正则表达式可与&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;一起使用，以限制字符串开头的匹配项：</target>
        </trans-unit>
        <trans-unit id="6d47a98032e08362b7f130e61db04cff15d0c211" translate="yes" xml:space="preserve">
          <source>Regular expressions can be concatenated to form new regular expressions; if &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt; are both regular expressions, then &lt;em&gt;AB&lt;/em&gt; is also a regular expression. In general, if a string &lt;em&gt;p&lt;/em&gt; matches &lt;em&gt;A&lt;/em&gt; and another string &lt;em&gt;q&lt;/em&gt; matches &lt;em&gt;B&lt;/em&gt;, the string &lt;em&gt;pq&lt;/em&gt; will match AB. This holds unless &lt;em&gt;A&lt;/em&gt; or &lt;em&gt;B&lt;/em&gt; contain low precedence operations; boundary conditions between &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt;; or have numbered group references. Thus, complex expressions can easily be constructed from simpler primitive expressions like the ones described here. For details of the theory and implementation of regular expressions, consult the Friedl book &lt;a href=&quot;#frie09&quot; id=&quot;id1&quot;&gt;[Frie09]&lt;/a&gt;, or almost any textbook about compiler construction.</source>
          <target state="translated">可以将正则表达式连接起来以形成新的正则表达式。如果&lt;em&gt;A&lt;/em&gt;和&lt;em&gt;B&lt;/em&gt;都是正则表达式，则&lt;em&gt;AB&lt;/em&gt;也是正则表达式。通常，如果字符串&lt;em&gt;p&lt;/em&gt;匹配&lt;em&gt;A，&lt;/em&gt;而另一个字符串&lt;em&gt;q&lt;/em&gt;匹配&lt;em&gt;B&lt;/em&gt;，则字符串&lt;em&gt;pq&lt;/em&gt;将匹配AB。除非&lt;em&gt;A&lt;/em&gt;或&lt;em&gt;B&lt;/em&gt;包含低优先级运算，否则这将成立。&lt;em&gt;A&lt;/em&gt;和&lt;em&gt;B&lt;/em&gt;之间&lt;em&gt;的&lt;/em&gt;边界条件&lt;em&gt;&lt;/em&gt;;或具有编号的组引用。因此，可以从简单的原始表达式（如此处所述的表达式）轻松构造复杂的表达式。有关正则表达式的理论和实现的详细信息，请参阅Friedl书&lt;a href=&quot;#frie09&quot; id=&quot;id1&quot;&gt;[Frie09]&lt;/a&gt;或几乎所有有关编译器构造的教科书。</target>
        </trans-unit>
        <trans-unit id="ec9b77a5957eaf418ffffd72a87c45d90f1ded45" translate="yes" xml:space="preserve">
          <source>Regular expressions can contain both special and ordinary characters. Most ordinary characters, like &lt;code&gt;'A'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, or &lt;code&gt;'0'&lt;/code&gt;, are the simplest regular expressions; they simply match themselves. You can concatenate ordinary characters, so &lt;code&gt;last&lt;/code&gt; matches the string &lt;code&gt;'last'&lt;/code&gt;. (In the rest of this section, we&amp;rsquo;ll write RE&amp;rsquo;s in &lt;code&gt;this special style&lt;/code&gt;, usually without quotes, and strings to be matched &lt;code&gt;'in single quotes'&lt;/code&gt;.)</source>
          <target state="translated">正则表达式可以包含特殊字符和普通字符。大多数普通字符（例如 &lt;code&gt;'A'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; 或 &lt;code&gt;'0'&lt;/code&gt; ）是最简单的正则表达式；他们只是匹配自己。您可以连接普通字符，因此 &lt;code&gt;last&lt;/code&gt; 与字符串 &lt;code&gt;'last'&lt;/code&gt; 匹配。 （在本节的其余部分中，我们将以 &lt;code&gt;this special style&lt;/code&gt; 编写RE ，通常不带引号，而字符串要以 &lt;code&gt;'in single quotes'&lt;/code&gt; 进行匹配。）</target>
        </trans-unit>
        <trans-unit id="cd13ca3bb8d1c682d2d59d5f935beea7ebc60be8" translate="yes" xml:space="preserve">
          <source>Regular expressions use the backslash character (&lt;code&gt;'\'&lt;/code&gt;) to indicate special forms or to allow special characters to be used without invoking their special meaning. This collides with Python&amp;rsquo;s usage of the same character for the same purpose in string literals; for example, to match a literal backslash, one might have to write &lt;code&gt;'\\\\'&lt;/code&gt; as the pattern string, because the regular expression must be &lt;code&gt;\\&lt;/code&gt;, and each backslash must be expressed as &lt;code&gt;\\&lt;/code&gt; inside a regular Python string literal. Also, please note that any invalid escape sequences in Python&amp;rsquo;s usage of the backslash in string literals now generate a &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; and in the future this will become a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. This behaviour will happen even if it is a valid escape sequence for a regular expression.</source>
          <target state="translated">正则表达式使用反斜杠字符（ &lt;code&gt;'\'&lt;/code&gt; ）表示特殊形式或允许使用特殊字符而无需调用其特殊含义。这与Python在字符串文字中出于相同目的使用相同字符的目的相冲突。例如，要匹配文字反斜杠，可能必须写 &lt;code&gt;'\\\\'&lt;/code&gt; 作为模式字符串，因为正则表达式必须为 &lt;code&gt;\\&lt;/code&gt; ，并且每个反斜杠必须在正则Python字符串文字中表示为 &lt;code&gt;\\&lt;/code&gt; 。另外，请注意，Python在字符串文字中使用反斜杠的任何无效转义序列现在都会生成&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;，将来，它将变成&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。即使它是正则表达式的有效转义序列，也会发生此行为。</target>
        </trans-unit>
        <trans-unit id="632284d6d44cd285a0879407d2b79c59fd92e9cc" translate="yes" xml:space="preserve">
          <source>Regular file.</source>
          <target state="translated">常规文件。</target>
        </trans-unit>
        <trans-unit id="b83c0cf0d07e7f0c79d79e1c5297b32511a517d3" translate="yes" xml:space="preserve">
          <source>Regular slicing (on the form &lt;code&gt;lower:upper&lt;/code&gt; or &lt;code&gt;lower:upper:step&lt;/code&gt;). Can occur only inside the &lt;em&gt;slice&lt;/em&gt; field of &lt;a href=&quot;#ast.Subscript&quot;&gt;&lt;code&gt;Subscript&lt;/code&gt;&lt;/a&gt;, either directly or as an element of &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">常规切片（格式为 &lt;code&gt;lower:upper&lt;/code&gt; 或 &lt;code&gt;lower:upper:step&lt;/code&gt; ）。只能出现内部的&lt;em&gt;切片&lt;/em&gt;的场&lt;a href=&quot;#ast.Subscript&quot;&gt; &lt;code&gt;Subscript&lt;/code&gt; &lt;/a&gt;，直接或作为的一个元素&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92e74a4e2e893412ec99eec29137ca19143363a0" translate="yes" xml:space="preserve">
          <source>Relationship to other Python modules</source>
          <target state="translated">与其他Python模块的关系</target>
        </trans-unit>
        <trans-unit id="0a306d4bef0fa5b9e7915d6a274854e42f372a74" translate="yes" xml:space="preserve">
          <source>Release a lock, decrementing the recursion level. If after the decrement it is zero, reset the lock to unlocked (not owned by any thread), and if any other threads are blocked waiting for the lock to become unlocked, allow exactly one of them to proceed. If after the decrement the recursion level is still nonzero, the lock remains locked and owned by the calling thread.</source>
          <target state="translated">释放一个锁,递减递增级别。如果递减后为零,则将锁重置为解锁(不为任何线程所拥有),如果有其他线程被阻塞等待解锁,则允许其中一个线程继续。如果在递减之后,递增级别仍然不为零,则锁仍然被锁定,由调用线程拥有。</target>
        </trans-unit>
        <trans-unit id="55e983958dfae1027586eb59fe3a7b345a542b22" translate="yes" xml:space="preserve">
          <source>Release a lock, decrementing the recursion level. If after the decrement the recursion level is zero, reset the lock to unlocked (not owned by any process or thread) and if any other processes or threads are blocked waiting for the lock to become unlocked, allow exactly one of them to proceed. If after the decrement the recursion level is still nonzero, the lock remains locked and owned by the calling process or thread.</source>
          <target state="translated">释放一个锁,递推级别递减。如果递归级别为零,则将锁重置为解锁(不为任何进程或线程所拥有),如果有其他进程或线程被阻塞等待解锁,则允许其中一个进程或线程继续。如果在递减之后,递归级别仍然不为零,则锁仍然被锁定,由调用的进程或线程拥有。</target>
        </trans-unit>
        <trans-unit id="325db7a1cdbf77d318358ad23c85e5e1231225a2" translate="yes" xml:space="preserve">
          <source>Release a lock. This can be called from any process or thread, not only the process or thread which originally acquired the lock.</source>
          <target state="translated">释放锁。这可以从任何进程或线程调用,而不仅仅是最初获得锁的进程或线程。</target>
        </trans-unit>
        <trans-unit id="01dabcc102e3847783d7a1993fb3e86527f38974" translate="yes" xml:space="preserve">
          <source>Release a lock. This can be called from any thread, not only the thread which has acquired the lock.</source>
          <target state="translated">释放锁。这可以从任何线程调用,而不仅仅是获得锁的线程。</target>
        </trans-unit>
        <trans-unit id="a4d4829acf004545312af16978384e5279c0253f" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by &lt;em&gt;n&lt;/em&gt;. When it was zero on entry and other threads are waiting for it to become larger than zero again, wake up &lt;em&gt;n&lt;/em&gt; of those threads.</source>
          <target state="translated">释放信号量，将内部计数器增加&lt;em&gt;n&lt;/em&gt;。当它在进入时为零并且其他线程正在等待它再次变得大于零时，唤醒这些线程中的&lt;em&gt;n个&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f77f1092af6163d0d1eb73d1d4d09fcf952eda4e" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by one. Can wake up a task waiting to acquire the semaphore.</source>
          <target state="translated">释放信号体,使内部计数器递增1。可以唤醒一个等待获取信号体的任务。</target>
        </trans-unit>
        <trans-unit id="9451dc6afbeda9021e289fd403b79c86eee707df" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by one. When it was zero on entry and another thread is waiting for it to become larger than zero again, wake up that thread.</source>
          <target state="translated">释放一个信号体,将内部计数器递增一。当进入时为零,而另一个线程正在等待它再次大于零时,唤醒该线程。</target>
        </trans-unit>
        <trans-unit id="f1fc58a6c69a6005894d2bcaddb143b7922c8c07" translate="yes" xml:space="preserve">
          <source>Release the lock on the mailbox, if any.</source>
          <target state="translated">解除邮箱上的锁,如果有的话。</target>
        </trans-unit>
        <trans-unit id="b5e4913e6b00fb0411556eedb8df5d4e15248e9e" translate="yes" xml:space="preserve">
          <source>Release the lock.</source>
          <target state="translated">松开锁。</target>
        </trans-unit>
        <trans-unit id="902ed4cb647c5987fae4a3f474bae31539906133" translate="yes" xml:space="preserve">
          <source>Release the underlying buffer exposed by the PickleBuffer object.</source>
          <target state="translated">释放PickleBuffer对象暴露的底层缓冲区。</target>
        </trans-unit>
        <trans-unit id="718b6fe96e3c4e49603e32cb056705892983d6b1" translate="yes" xml:space="preserve">
          <source>Release the underlying buffer exposed by the memoryview object. Many objects take special actions when a view is held on them (for example, a &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; would temporarily forbid resizing); therefore, calling release() is handy to remove these restrictions (and free any dangling resources) as soon as possible.</source>
          <target state="translated">释放由memoryview对象公开的基础缓冲区。当持有一个视图时，许多对象会采取特殊的操作（例如，&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;将暂时禁止调整大小）。因此，调用release（）有助于尽快消除这些限制（并释放所有悬空的资源）。</target>
        </trans-unit>
        <trans-unit id="dfdddac609bc6525864a46420d173e2db58b56da" translate="yes" xml:space="preserve">
          <source>Release the underlying lock.</source>
          <target state="translated">释放基础锁。</target>
        </trans-unit>
        <trans-unit id="cee554c3a4338184c2c0a12178930f6283f66e65" translate="yes" xml:space="preserve">
          <source>Release the underlying lock. This method calls the corresponding method on the underlying lock; there is no return value.</source>
          <target state="translated">释放底层锁。本方法调用底层锁上的对应方法,没有返回值。</target>
        </trans-unit>
        <trans-unit id="5b6171647eb49e3293f844f2cd7952949833b937" translate="yes" xml:space="preserve">
          <source>Releases the lock. The lock must have been acquired earlier, but not necessarily by the same thread.</source>
          <target state="translated">释放锁。该锁必须是之前获得的,但不一定是同一线程获得的。</target>
        </trans-unit>
        <trans-unit id="9f09a95b89d92f3fc9ea74fc087dcf0c058b1b66" translate="yes" xml:space="preserve">
          <source>Releases the thread lock acquired with &lt;a href=&quot;#logging.Handler.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">释放通过&lt;a href=&quot;#logging.Handler.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;获得的线程锁。</target>
        </trans-unit>
        <trans-unit id="2dab78af2001df694dd992ceaa491a83fa95e598" translate="yes" xml:space="preserve">
          <source>Reload a previously imported &lt;em&gt;module&lt;/em&gt;. The argument must be a module object, so it must have been successfully imported before. This is useful if you have edited the module source file using an external editor and want to try out the new version without leaving the Python interpreter. The return value is the module object (which can be different if re-importing causes a different object to be placed in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">重新加载先前导入的&lt;em&gt;模块&lt;/em&gt;。参数必须是模块对象，因此它必须已经成功导入。如果您已使用外部编辑器编辑了模块源文件，并且想在不离开Python解释器的情况下尝试新版本，则这将非常有用。返回值是模块对象（如果重新导入导致将另一个对象放置在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;，则可以不同）。</target>
        </trans-unit>
        <trans-unit id="95f9e949daa1abd7b409e941cd024e8e763fdd73" translate="yes" xml:space="preserve">
          <source>Remark: Every sequence of mouse-move-events on a turtle is preceded by a mouse-click event on that turtle.</source>
          <target state="translated">备注。在乌龟上的每一个鼠标移动事件序列之前,都有一个鼠标点击事件在该乌龟上。</target>
        </trans-unit>
        <trans-unit id="0fd7042c55c4be97e3a3234963e74788ed71c483" translate="yes" xml:space="preserve">
          <source>Remembering which future statements the user has entered, so subsequent input can be compiled with these in effect.</source>
          <target state="translated">记住用户输入了哪些未来的语句,所以后续的输入可以用这些语句来编译生效。</target>
        </trans-unit>
        <trans-unit id="a28251e34f334c2e9198cead3c84396b0209045b" translate="yes" xml:space="preserve">
          <source>Remote I/O error</source>
          <target state="translated">远程I/O错误</target>
        </trans-unit>
        <trans-unit id="f7361e6611d8de8bcd908886067c50c68d92c5e2" translate="yes" xml:space="preserve">
          <source>Remote address changed</source>
          <target state="translated">远程地址变更</target>
        </trans-unit>
        <trans-unit id="b95af5b59657ebe99f9655796445d0dfd2105a08" translate="yes" xml:space="preserve">
          <source>Remove (&lt;code&gt;-s&lt;/code&gt;) or append (&lt;code&gt;-p&lt;/code&gt;) the given prefix of paths recorded in the &lt;code&gt;.pyc&lt;/code&gt; files. Cannot be combined with &lt;code&gt;-d&lt;/code&gt;.</source>
          <target state="translated">删除（ &lt;code&gt;-s&lt;/code&gt; ）或附加（ &lt;code&gt;-p&lt;/code&gt; ） &lt;code&gt;.pyc&lt;/code&gt; 文件中记录的路径的给定前缀。不能与 &lt;code&gt;-d&lt;/code&gt; 组合使用。</target>
        </trans-unit>
        <trans-unit id="6f2f29a523b42c7dff73566cc22f5a5f3d6d714b" translate="yes" xml:space="preserve">
          <source>Remove (delete) the directory &lt;em&gt;path&lt;/em&gt;. If the directory does not exist or is not empty, an &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised respectively. In order to remove whole directory trees, &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt;&lt;code&gt;shutil.rmtree()&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="translated">删除（删除）目录&lt;em&gt;路径&lt;/em&gt;。如果目录不存在或不为空，则分别引发&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。为了删除整个目录树，可以使用&lt;a href=&quot;shutil#shutil.rmtree&quot;&gt; &lt;code&gt;shutil.rmtree()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09092b51cc111894ec2a0792cdf12ec52bfefd86" translate="yes" xml:space="preserve">
          <source>Remove (delete) the file &lt;em&gt;path&lt;/em&gt;. If &lt;em&gt;path&lt;/em&gt; is a directory, an &lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt;&lt;code&gt;IsADirectoryError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; to remove directories.</source>
          <target state="translated">Remove (delete) the file &lt;em&gt;path&lt;/em&gt;. If &lt;em&gt;path&lt;/em&gt; is a directory, an &lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt; &lt;code&gt;IsADirectoryError&lt;/code&gt; &lt;/a&gt; is raised. Use &lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt; to remove directories.</target>
        </trans-unit>
        <trans-unit id="54ccd5262122a2bb90c8d8e7c34e44ceabccfb23" translate="yes" xml:space="preserve">
          <source>Remove (delete) the file &lt;em&gt;path&lt;/em&gt;. This function is semantically identical to &lt;a href=&quot;#os.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;; the &lt;code&gt;unlink&lt;/code&gt; name is its traditional Unix name. Please see the documentation for &lt;a href=&quot;#os.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">删除（删除）文件&lt;em&gt;路径&lt;/em&gt;。该函数在语义上与&lt;a href=&quot;#os.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;相同；在 &lt;code&gt;unlink&lt;/code&gt; 名称是它的传统的Unix名称。请参阅&lt;a href=&quot;#os.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;的文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="df4a3ac637d825590d00692389c347fb71446c49" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;.pyc&lt;/code&gt; files on uninstall.</source>
          <target state="translated">卸载时删除 &lt;code&gt;.pyc&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="c5c1787a7462be5a8758ddc2de62b0a3c10ec4a0" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;d[key]&lt;/code&gt; from &lt;em&gt;d&lt;/em&gt;. Raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;key&lt;/em&gt; is not in the map.</source>
          <target state="translated">除去 &lt;code&gt;d[key]&lt;/code&gt; 从&lt;em&gt;d&lt;/em&gt;。如果&lt;em&gt;键&lt;/em&gt;不在地图中，则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90b0e08e343d399962a6bd8d2c41705a75aa6b66" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;callback&lt;/em&gt; from the callbacks list.</source>
          <target state="translated">从回调列表中删除&lt;em&gt;回调&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="84f403853efe764e44908458c87622e6eb6beaeb" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;func&lt;/em&gt; from the list of functions to be run at interpreter shutdown. After calling &lt;a href=&quot;#atexit.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;func&lt;/em&gt; is guaranteed not to be called when the interpreter shuts down, even if it was registered more than once. &lt;a href=&quot;#atexit.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; silently does nothing if &lt;em&gt;func&lt;/em&gt; was not previously registered.</source>
          <target state="translated">从解释器关闭时要运行的功能列表中删除&lt;em&gt;func&lt;/em&gt;。调用&lt;a href=&quot;#atexit.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt;之后，即使解释程序被注册了多次，也保证在解释器关闭时不会调用&lt;em&gt;func&lt;/em&gt;。如果&lt;em&gt;func&lt;/em&gt;先前&lt;a href=&quot;#atexit.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt;静默不执行任何操作。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d3c177647ed076f35c66ee60a80e644088ab631" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;items&lt;/em&gt; from the selection.</source>
          <target state="translated">从选择中删除&lt;em&gt;项目&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6547d9b9085b460bd46210f1be5e085366c204b8" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;label&lt;/em&gt; from the list of labels on the message.</source>
          <target state="translated">从邮件上的标签列表中删除&lt;em&gt;标签&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0ea60577a9b7e090db0bc3612337d5ddc1ef3f63" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;sequence&lt;/em&gt; from the list of sequences that include this message.</source>
          <target state="translated">从包含此消息的序列列表中删除&lt;em&gt;序列&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ca9b7932d8450d599cb6979beda8edf16cbfebf9" translate="yes" xml:space="preserve">
          <source>Remove a child node. &lt;em&gt;oldChild&lt;/em&gt; must be a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;oldChild&lt;/em&gt; is returned on success. If &lt;em&gt;oldChild&lt;/em&gt; will not be used further, its &lt;code&gt;unlink()&lt;/code&gt; method should be called.</source>
          <target state="translated">删除一个子节点。&lt;em&gt;oldChild&lt;/em&gt;必须是此节点的子级；如果不是，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。成功返回&lt;em&gt;oldChild&lt;/em&gt;。如果将不再使用&lt;em&gt;oldChild&lt;/em&gt;，则应调用其 &lt;code&gt;unlink()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e638afc65f07e23d8059456ca5203ff65e8d63b3" translate="yes" xml:space="preserve">
          <source>Remove a file descriptor being tracked by a polling object. Just like the &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; method, &lt;em&gt;fd&lt;/em&gt; can be an integer or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer.</source>
          <target state="translated">删除轮询对象正在跟踪的文件描述符。就像&lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;方法一样，&lt;em&gt;fd&lt;/em&gt;可以是整数，也可以是带有&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法的对象，该方法返回整数。</target>
        </trans-unit>
        <trans-unit id="d406b316abb4db3447872fecf4363a68503730f5" translate="yes" xml:space="preserve">
          <source>Remove a file descriptor being tracked by a polling object. Just like the &lt;a href=&quot;#select.poll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; method, &lt;em&gt;fd&lt;/em&gt; can be an integer or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer.</source>
          <target state="translated">删除轮询对象正在跟踪的文件描述符。就像&lt;a href=&quot;#select.poll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;方法一样，&lt;em&gt;fd&lt;/em&gt;可以是整数，也可以是带有&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法的对象，该方法返回整数。</target>
        </trans-unit>
        <trans-unit id="4acb1e801dd112b656a9906b873c911e3baffd17" translate="yes" xml:space="preserve">
          <source>Remove a handler for a &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">删除&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;处理程序。</target>
        </trans-unit>
        <trans-unit id="f5487a3ec602c3f128da1167605d573da7caf65f" translate="yes" xml:space="preserve">
          <source>Remove a registered file descriptor from the epoll object.</source>
          <target state="translated">从epoll对象中删除一个注册的文件描述符。</target>
        </trans-unit>
        <trans-unit id="2de339515154b23af33759d56687db0b9afa4c8b" translate="yes" xml:space="preserve">
          <source>Remove a registered result. Once a result has been removed then &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; will no longer be called on that result object in response to a control-c.</source>
          <target state="translated">删除注册结果。一旦删除了结果，将不再响应control-c在该结果对象上调用&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e04b32723d8dc93cf14a08faa924d4dc0301551d" translate="yes" xml:space="preserve">
          <source>Remove all elements from the deque leaving it with length 0.</source>
          <target state="translated">从deque中删除所有元素,使其长度为0。</target>
        </trans-unit>
        <trans-unit id="6b09a518a4a9b4d337aff6605fc4365f56b91d14" translate="yes" xml:space="preserve">
          <source>Remove all elements from the set.</source>
          <target state="translated">将所有的元素从集子中移除。</target>
        </trans-unit>
        <trans-unit id="f290d8d2e6e7afb1c339b0bbfd97a9c8e21061c8" translate="yes" xml:space="preserve">
          <source>Remove all items from the dictionary.</source>
          <target state="translated">从字典中删除所有项目。</target>
        </trans-unit>
        <trans-unit id="a70b106bdf49173c73982c4f4890c1bfd2aece77" translate="yes" xml:space="preserve">
          <source>Remove an attribute by name. If there is no matching attribute, a &lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt;&lt;code&gt;NotFoundErr&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">按名称删除属性。如果没有匹配的属性，则会引发&lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt; &lt;code&gt;NotFoundErr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e44bc40606bdaa4ca11f7c736e84089c476e498" translate="yes" xml:space="preserve">
          <source>Remove an attribute by name. Note that it uses a localName, not a qname. No exception is raised if there is no matching attribute.</source>
          <target state="translated">通过名称删除一个属性。注意,它使用的是localName,而不是qname。如果没有匹配的属性,不会出现异常。</target>
        </trans-unit>
        <trans-unit id="469bcb6f3a7989704b2f3003fd50cbe3be114703" translate="yes" xml:space="preserve">
          <source>Remove and return &lt;em&gt;oldAttr&lt;/em&gt; from the attribute list, if present. If &lt;em&gt;oldAttr&lt;/em&gt; is not present, &lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt;&lt;code&gt;NotFoundErr&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">从属性列表中删除并返回&lt;em&gt;oldAttr&lt;/em&gt;（如果存在）。如果不存在&lt;em&gt;oldAttr&lt;/em&gt;，则引发&lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt; &lt;code&gt;NotFoundErr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31ae42d327afacec2d994c0287d142eb91fc9ce1" translate="yes" xml:space="preserve">
          <source>Remove and return a &lt;code&gt;(key, value)&lt;/code&gt; pair from the dictionary. Pairs are returned in</source>
          <target state="translated">从字典中删除并返回 &lt;code&gt;(key, value)&lt;/code&gt; 对。配对返回</target>
        </trans-unit>
        <trans-unit id="2b531f41e80397125057b4d77ec51f25199985f1" translate="yes" xml:space="preserve">
          <source>Remove and return an arbitrary element from the set. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the set is empty.</source>
          <target state="translated">从集合中删除并返回任意元素。如果集合为空，则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7da6e1247e14313ead2c906151c6fa54b3b8670" translate="yes" xml:space="preserve">
          <source>Remove and return an element from the left side of the deque. If no elements are present, raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从双端队列的左侧删除并返回一个元素。如果不存在任何元素，则引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e670a3f5985cfc119644d78b3e84db994738a729" translate="yes" xml:space="preserve">
          <source>Remove and return an element from the right side of the deque. If no elements are present, raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从双端队列的右侧删除并返回一个元素。如果不存在任何元素，则引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dfba53adcb0d3b6fc3163fef06b9e1ac4b32069" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue.</source>
          <target state="translated">从队列中删除并返回一个项目。</target>
        </trans-unit>
        <trans-unit id="c6e8014aef762eb004313f855775293621c0f2fe" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If optional args &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until an item is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; exception if no item was available within that time. Otherwise (block is &lt;code&gt;False&lt;/code&gt;), return an item if one is immediately available, else raise the &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">从队列中删除并返回一个项目。如果可选的args &lt;em&gt;块&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; （默认值）且&lt;em&gt;超时&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; （默认值），则必要时进行阻塞，直到有可用项为止。如果&lt;em&gt;timeout&lt;/em&gt;是一个正数，它将最多阻塞&lt;em&gt;timeout&lt;/em&gt;秒，并引发&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;如果在该时间内没有可用的项目，则抛出Empty异常。否则（block为 &lt;code&gt;False&lt;/code&gt; ），如果有一个立即可用，则返回一个项目，否则引发&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;异常（在这种情况下将忽略&lt;em&gt;超时&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="8f5188be7942eda827c4be37e886678fbe47c0e4" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If optional args &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until an item is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;#queue.Empty&quot;&gt;&lt;code&gt;Empty&lt;/code&gt;&lt;/a&gt; exception if no item was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is false), return an item if one is immediately available, else raise the &lt;a href=&quot;#queue.Empty&quot;&gt;&lt;code&gt;Empty&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">从队列中删除并返回一个项目。如果可选的args &lt;em&gt;块&lt;/em&gt;为true，并且&lt;em&gt;超时&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; （默认值），则必要时进行阻塞，直到有可用项为止。如果&lt;em&gt;超时&lt;/em&gt;为正数，则它最多会阻塞&lt;em&gt;超时&lt;/em&gt;秒，如果在该时间内没有可用的项目，则会引发&lt;a href=&quot;#queue.Empty&quot;&gt; &lt;code&gt;Empty&lt;/code&gt; &lt;/a&gt;异常。否则（&lt;em&gt;块&lt;/em&gt;为false），如果有立即可用的项，则返回一个项，否则引发&lt;a href=&quot;#queue.Empty&quot;&gt; &lt;code&gt;Empty&lt;/code&gt; &lt;/a&gt;异常（在这种情况下将忽略&lt;em&gt;超时&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="4088c96f1ba17057a9e3e69be2cd717210daaaf7" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If queue is empty, wait until an item is available.</source>
          <target state="translated">从队列中移除并返回一个项目。如果队列是空的,则要等到有物品可用。</target>
        </trans-unit>
        <trans-unit id="e2798ddc01b549b242184471dd3b04f03bffd93d" translate="yes" xml:space="preserve">
          <source>Remove any common leading whitespace from every line in &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;文本的&lt;/em&gt;每一行中删除所有常见的前导空格。</target>
        </trans-unit>
        <trans-unit id="1901bbdc80057b98ac9f62bfec2a78cea30ba6e3" translate="yes" xml:space="preserve">
          <source>Remove any deletion marks for the mailbox.</source>
          <target state="translated">删除邮箱的任何删除标记。</target>
        </trans-unit>
        <trans-unit id="faa276c7a3ecba1a269e9f752634eb6ab450d6a4" translate="yes" xml:space="preserve">
          <source>Remove any parents.</source>
          <target state="translated">删除任何父母。</target>
        </trans-unit>
        <trans-unit id="cd474cdf9d281d6e3eb511a782e0bb87e8f7f8c0" translate="yes" xml:space="preserve">
          <source>Remove any unhandled source text from the input buffer.</source>
          <target state="translated">从输入缓冲区中删除任何未处理的源文本。</target>
        </trans-unit>
        <trans-unit id="218d884dd50dc8dcf49c39d48acbbe88b3efc79b" translate="yes" xml:space="preserve">
          <source>Remove attribute &lt;em&gt;attr&lt;/em&gt; from the &amp;ldquo;background&amp;rdquo; set applied to all writes to the current window.</source>
          <target state="translated">从应用于所有当前窗口写入的&amp;ldquo;背景&amp;rdquo;集中删除属性&lt;em&gt;attr&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f1939bdbb558415e500fd3e239783907685058e1" translate="yes" xml:space="preserve">
          <source>Remove directories recursively. Works like &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; except that, if the leaf directory is successfully removed, &lt;a href=&quot;#os.removedirs&quot;&gt;&lt;code&gt;removedirs()&lt;/code&gt;&lt;/a&gt; tries to successively remove every parent directory mentioned in &lt;em&gt;path&lt;/em&gt; until an error is raised (which is ignored, because it generally means that a parent directory is not empty). For example, &lt;code&gt;os.removedirs('foo/bar/baz')&lt;/code&gt; will first remove the directory &lt;code&gt;'foo/bar/baz'&lt;/code&gt;, and then remove &lt;code&gt;'foo/bar'&lt;/code&gt; and &lt;code&gt;'foo'&lt;/code&gt; if they are empty. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if the leaf directory could not be successfully removed.</source>
          <target state="translated">递归删除目录。类似于&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; 的工作方式,&lt;/a&gt;不同之处在于，如果成功删除了叶目录，&lt;a href=&quot;#os.removedirs&quot;&gt; &lt;code&gt;removedirs()&lt;/code&gt; &lt;/a&gt;尝试依次删除&lt;em&gt;路径中&lt;/em&gt;提到的每个父目录，直到引发错误为止（被忽略，因为它通常意味着父目录不为空） ）。例如， &lt;code&gt;os.removedirs('foo/bar/baz')&lt;/code&gt; 将首先删除目录 &lt;code&gt;'foo/bar/baz'&lt;/code&gt; ，然后删除目录 &lt;code&gt;'foo/bar'&lt;/code&gt; 和 &lt;code&gt;'foo'&lt;/code&gt; (如果它们为空）。如果无法成功删除叶目录，则引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8830b3ed7b2b6ea4e93819896c3612feb5403c45" translate="yes" xml:space="preserve">
          <source>Remove element &lt;em&gt;elem&lt;/em&gt; from the set if it is present.</source>
          <target state="translated">从集合中删除元素&lt;em&gt;elem&lt;/em&gt;（如果存在）。</target>
        </trans-unit>
        <trans-unit id="9888fcac5accfc7a8b64af98cef05a92569503a4" translate="yes" xml:space="preserve">
          <source>Remove element &lt;em&gt;elem&lt;/em&gt; from the set. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;elem&lt;/em&gt; is not contained in the set.</source>
          <target state="translated">从集合中删除元素&lt;em&gt;elem&lt;/em&gt;。如果集合中不包含&lt;em&gt;elem，&lt;/em&gt;则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46fb222523969621a21f6c33b70bc80f50eae94a" translate="yes" xml:space="preserve">
          <source>Remove history item specified by its position from the history. The position is zero-based. This calls &lt;code&gt;remove_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">从历史记录中删除由其位置指定的历史记录项目。该位置从零开始。这将在基础库中调用 &lt;code&gt;remove_history()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f1f060055dfc5be6a01d79073813b22ef0c00fc" translate="yes" xml:space="preserve">
          <source>Remove leading # or ## from selected lines.</source>
          <target state="translated">删除所选行中的前导#或##。</target>
        </trans-unit>
        <trans-unit id="e88117b20c99b1cfd4fc97904478939f846183a3" translate="yes" xml:space="preserve">
          <source>Remove modules except for &lt;em&gt;oldmodules&lt;/em&gt; and &lt;code&gt;encodings&lt;/code&gt; in order to preserve internal cache.</source>
          <target state="translated">除去&lt;em&gt;旧&lt;/em&gt;模块和 &lt;code&gt;encodings&lt;/code&gt; 以外的模块，以保留内部缓存。</target>
        </trans-unit>
        <trans-unit id="39143687d06562bc974381cd208300718aae9057" translate="yes" xml:space="preserve">
          <source>Remove named header from the request instance (both from regular and unredirected headers).</source>
          <target state="translated">从请求实例中删除命名头(包括常规头和非重定向头)。</target>
        </trans-unit>
        <trans-unit id="da54f37cf901136049487b5d8c3b565cc2e92d6c" translate="yes" xml:space="preserve">
          <source>Remove the archive format &lt;em&gt;name&lt;/em&gt; from the list of supported formats.</source>
          <target state="translated">从支持的格式列表中删除存档格式&lt;em&gt;名称&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cb6d6cfc9c9b17d28aae0d871bc79d87673c7830" translate="yes" xml:space="preserve">
          <source>Remove the directory by calling &lt;strong&gt;close()&lt;/strong&gt; on the returned object or using it in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">通过在返回的对象上调用&lt;strong&gt;close（）&lt;/strong&gt;或在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中使用它来删除目录。</target>
        </trans-unit>
        <trans-unit id="605c8cdfcaf234da889154b875a4c1cf16b2c877" translate="yes" xml:space="preserve">
          <source>Remove the directory by calling &lt;strong&gt;close()&lt;/strong&gt; on the returned object or using it in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">通过在返回的对象上调用&lt;strong&gt;close（）&lt;/strong&gt;或在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中使用它来删除目录。</target>
        </trans-unit>
        <trans-unit id="1a219e6650b0c2e74baaa254405797ad3caabe43" translate="yes" xml:space="preserve">
          <source>Remove the directory named &lt;em&gt;dirname&lt;/em&gt; on the server.</source>
          <target state="translated">在服务器上删除名为&lt;em&gt;dirname&lt;/em&gt;的目录。</target>
        </trans-unit>
        <trans-unit id="a0726ba95221ef1651c5cdfff5fa801955a269aa" translate="yes" xml:space="preserve">
          <source>Remove the event from the queue. If &lt;em&gt;event&lt;/em&gt; is not an event currently in the queue, this method will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从队列中删除事件。如果&lt;em&gt;event&lt;/em&gt;不是队列中当前的事件，则此方法将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a24d3ea5e0575caadaba7127c684bb9a116e0bc" translate="yes" xml:space="preserve">
          <source>Remove the file named &lt;em&gt;filename&lt;/em&gt; from the server. If successful, returns the text of the response, otherwise raises &lt;a href=&quot;#ftplib.error_perm&quot;&gt;&lt;code&gt;error_perm&lt;/code&gt;&lt;/a&gt; on permission errors or &lt;a href=&quot;#ftplib.error_reply&quot;&gt;&lt;code&gt;error_reply&lt;/code&gt;&lt;/a&gt; on other errors.</source>
          <target state="translated">从服务器中删除名为&lt;em&gt;filename&lt;/em&gt;的文件。如果成功，则返回响应文本，否则将在权限错误时引发&lt;a href=&quot;#ftplib.error_perm&quot;&gt; &lt;code&gt;error_perm&lt;/code&gt; &lt;/a&gt;，在其他错误时引发&lt;a href=&quot;#ftplib.error_reply&quot;&gt; &lt;code&gt;error_reply&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab59243c5f0140e1d9f8f50f8faaa896333624e1" translate="yes" xml:space="preserve">
          <source>Remove the first occurrence of &lt;em&gt;value&lt;/em&gt;. If not found, raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">删除第一次出现的&lt;em&gt;值&lt;/em&gt;。如果未找到，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8410a84caa24fe1396f171fc4f673a31805ea5fd" translate="yes" xml:space="preserve">
          <source>Remove the first occurrence of &lt;em&gt;x&lt;/em&gt; from the array.</source>
          <target state="translated">从数组中删除&lt;em&gt;x&lt;/em&gt;的第一个匹配项。</target>
        </trans-unit>
        <trans-unit id="06b253ee2dacd7c2fac34b37b9786fb546bbfa46" translate="yes" xml:space="preserve">
          <source>Remove the given parameter completely from the &lt;em&gt;Content-Type&lt;/em&gt; header. The header will be re-written in place without the parameter or its value. All values will be quoted as necessary unless &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default is &lt;code&gt;True&lt;/code&gt;). Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative to &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;Content-Type&lt;/em&gt;标头中完全删除给定的参数。标头将在没有参数或其值的情况下被重写。除非&lt;em&gt;requote&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; （默认值为 &lt;code&gt;True&lt;/code&gt; ），否则将根据需要对所有值进行引用。可选&lt;em&gt;标头&lt;/em&gt;指定&lt;em&gt;Content-Type&lt;/em&gt;的替代形式。</target>
        </trans-unit>
        <trans-unit id="eecf14ec682619af0362513d29dbc587c2ed96f0" translate="yes" xml:space="preserve">
          <source>Remove the given parameter completely from the &lt;em&gt;Content-Type&lt;/em&gt; header. The header will be re-written in place without the parameter or its value. Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative to &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">从&lt;em&gt;Content-Type&lt;/em&gt;标头中完全删除给定的参数。标头将在没有参数或其值的情况下被重写。可选&lt;em&gt;标头&lt;/em&gt;指定&lt;em&gt;Content-Type&lt;/em&gt;的替代形式。</target>
        </trans-unit>
        <trans-unit id="a7966794729359a57bb35aa79983ef87245ec907" translate="yes" xml:space="preserve">
          <source>Remove the handler for the &lt;em&gt;sig&lt;/em&gt; signal.</source>
          <target state="translated">删除&lt;em&gt;信号&lt;/em&gt;信号处理程序。</target>
        </trans-unit>
        <trans-unit id="5278cbb01c31e671814ad20e41d470025918680f" translate="yes" xml:space="preserve">
          <source>Remove the module named &lt;em&gt;module_name&lt;/em&gt; from &lt;code&gt;sys.modules&lt;/code&gt; and delete any byte-compiled files of the module.</source>
          <target state="translated">从 &lt;code&gt;sys.modules&lt;/code&gt; 中删除名为&lt;em&gt;module_name&lt;/em&gt;的模块，并删除该模块的所有字节编译文件。</target>
        </trans-unit>
        <trans-unit id="7a87dc1e2478c072cb792ee6591f8dc2d2026140" translate="yes" xml:space="preserve">
          <source>Remove the payload and all of the &lt;code&gt;Content-&lt;/code&gt; headers, leaving all other headers intact and in their original order.</source>
          <target state="translated">删除有效负载和所有 &lt;code&gt;Content-&lt;/code&gt; 标头，并保留所有其他标头并保持其原始顺序。</target>
        </trans-unit>
        <trans-unit id="3bf2bebbd987c72c8779a2b8195a4ca66c985e00" translate="yes" xml:space="preserve">
          <source>Remove the payload and all of the headers.</source>
          <target state="translated">删除有效载荷和所有的头文件。</target>
        </trans-unit>
        <trans-unit id="86612e35ce925f33783538d1a60f6935d18f9d27" translate="yes" xml:space="preserve">
          <source>Remove the specified &lt;em&gt;option&lt;/em&gt; from the specified &lt;em&gt;section&lt;/em&gt;. If the section does not exist, raise &lt;a href=&quot;#configparser.NoSectionError&quot;&gt;&lt;code&gt;NoSectionError&lt;/code&gt;&lt;/a&gt;. If the option existed to be removed, return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从指定的&lt;em&gt;部分中&lt;/em&gt;删除指定的&lt;em&gt;选项&lt;/em&gt;。如果该节不存在，请引发&lt;a href=&quot;#configparser.NoSectionError&quot;&gt; &lt;code&gt;NoSectionError&lt;/code&gt; &lt;/a&gt;。如果存在要删除的选项，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;；否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="167f0847a5baf3fc7c48f947592008cef0611efe" translate="yes" xml:space="preserve">
          <source>Remove the specified &lt;em&gt;section&lt;/em&gt; from the configuration. If the section in fact existed, return &lt;code&gt;True&lt;/code&gt;. Otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">从配置中删除指定的&lt;em&gt;部分&lt;/em&gt;。如果该部分实际上存在，则返回 &lt;code&gt;True&lt;/code&gt; 。否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="931133657f7bdcc0493ec989a46c723f6066810a" translate="yes" xml:space="preserve">
          <source>Remove the value of &lt;em&gt;a&lt;/em&gt; at index &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">除去的值&lt;em&gt;一个&lt;/em&gt;索引&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b870f044d1fabe896b3c74257cc3433e2d316c38" translate="yes" xml:space="preserve">
          <source>Remove this directory. The directory must be empty.</source>
          <target state="translated">删除此目录。该目录必须为空。</target>
        </trans-unit>
        <trans-unit id="3ec51e7bc1c1b4c94fdbd6fd566496777c4b7b30" translate="yes" xml:space="preserve">
          <source>Remove this file or symbolic link. If the path points to a directory, use &lt;a href=&quot;#pathlib.Path.rmdir&quot;&gt;&lt;code&gt;Path.rmdir()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">删除此文件或符号链接。如果路径指向目录，请改用&lt;a href=&quot;#pathlib.Path.rmdir&quot;&gt; &lt;code&gt;Path.rmdir()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a9c625676ef7e3160422e80b7defafd5c2de77" translate="yes" xml:space="preserve">
          <source>Remove trailing space and other whitespace characters after the last non-whitespace character of a line by applying str.rstrip to each line, including lines within multiline strings. Except for Shell windows, remove extra newlines at the end of the file.</source>
          <target state="translated">通过对每一行,包括多行字符串中的行,应用str.rstrip删除行的最后一个非空格字符后的尾部空格和其他空格字符。除Shell窗口外,删除文件末尾的多余换行符。</target>
        </trans-unit>
        <trans-unit id="61b70a5898add9d0be465d7351173d1adbc05a3a" translate="yes" xml:space="preserve">
          <source>Removes &lt;em&gt;subelement&lt;/em&gt; from the element. Unlike the find* methods this method compares elements based on the instance identity, not on tag value or contents.</source>
          <target state="translated">从元素中删除&lt;em&gt;子&lt;/em&gt;元素。与find *方法不同，此方法根据实例标识而不是标签值或内容比较元素。</target>
        </trans-unit>
        <trans-unit id="dd2c5eeb1fd92545e05f12c347fe9049c679df64" translate="yes" xml:space="preserve">
          <source>Removes a named value from a registry key.</source>
          <target state="translated">从注册表键中删除一个命名值。</target>
        </trans-unit>
        <trans-unit id="2ce67754e84de4a54e3b8e15d6cbb0f9657ce225" translate="yes" xml:space="preserve">
          <source>Removes an event from the queue</source>
          <target state="translated">从队列中删除一个事件</target>
        </trans-unit>
        <trans-unit id="6cf7c4eab3edcdb87fd4bba70cca70af76709309" translate="yes" xml:space="preserve">
          <source>Removes event after first occurrence</source>
          <target state="translated">首次发生后删除事件</target>
        </trans-unit>
        <trans-unit id="576937b78ee6da10baced9f64f9e4e1bef3c46e8" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. Per frame, there is a stack of blocks, denoting &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements, and such.</source>
          <target state="translated">从块堆栈中删除一个块。每帧都有一堆块，表示&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;语句等。</target>
        </trans-unit>
        <trans-unit id="c4c0d1d3d20fb8defc53f820513d16ce1de86e34" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. Per frame, there is a stack of blocks, denoting &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements, and such.</source>
          <target state="translated">从块堆栈中删除一个块。每帧都有一堆块，表示&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;语句等。</target>
        </trans-unit>
        <trans-unit id="94357e616c453b1697914dba99e5f151a58631c7" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. The popped block must be an exception handler block, as implicitly created when entering an except handler. In addition to popping extraneous values from the frame stack, the last three popped values are used to restore the exception state.</source>
          <target state="translated">从代码块堆栈中删除一个代码块。被弹出的块必须是一个异常处理程序块,就像输入except处理程序时隐式创建的那样。除了从帧堆栈中弹出无关的值外,最后弹出的三个值还被用来恢复异常状态。</target>
        </trans-unit>
        <trans-unit id="32e6ee1737489b7ed876da2b98bcac7cdbf7e329" translate="yes" xml:space="preserve">
          <source>Removes the extended filesystem attribute &lt;em&gt;attribute&lt;/em&gt; from &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;attribute&lt;/em&gt; should be bytes or str (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface). If it is a string, it is encoded with the filesystem encoding.</source>
          <target state="translated">从&lt;em&gt;path中&lt;/em&gt;删除扩展的文件系统属性&lt;em&gt;属性&lt;/em&gt;。&lt;em&gt;属性&lt;/em&gt;应该是字节或str（直接或通过&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;接口间接）。如果是字符串，则使用文件系统编码进行编码。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa2817427f9f3dd866ffd6171c443159b2bc4d52" translate="yes" xml:space="preserve">
          <source>Removes the handler for process with PID equal to &lt;em&gt;pid&lt;/em&gt;.</source>
          <target state="translated">删除PID等于&lt;em&gt;pid的&lt;/em&gt;进程的处理程序。</target>
        </trans-unit>
        <trans-unit id="2195eae66ec66c6a06d82f02a75084dd7fe366ba" translate="yes" xml:space="preserve">
          <source>Removes the item with the index &lt;em&gt;i&lt;/em&gt; from the array and returns it. The optional argument defaults to &lt;code&gt;-1&lt;/code&gt;, so that by default the last item is removed and returned.</source>
          <target state="translated">从数组中删除索引为&lt;em&gt;i&lt;/em&gt;的项目并返回它。可选参数默认为 &lt;code&gt;-1&lt;/code&gt; ，因此默认情况下将删除并返回最后一项。</target>
        </trans-unit>
        <trans-unit id="0e0efae851aab5bcfc515dd3938067f832c1853f" translate="yes" xml:space="preserve">
          <source>Removes the specified filter &lt;em&gt;filter&lt;/em&gt; from this handler.</source>
          <target state="translated">从此处理程序中删除指定的过滤&lt;em&gt;器&lt;/em&gt;过滤&lt;em&gt;器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ee70f16011ebf7494e0b1b61abda546563eb3852" translate="yes" xml:space="preserve">
          <source>Removes the specified filter &lt;em&gt;filter&lt;/em&gt; from this logger.</source>
          <target state="translated">从此记录器中删除指定的过滤器&lt;em&gt;过滤&lt;/em&gt;器。</target>
        </trans-unit>
        <trans-unit id="2e0ce9ad7005467ffca8b9e62963e55e390d5e75" translate="yes" xml:space="preserve">
          <source>Removes the specified handler &lt;em&gt;hdlr&lt;/em&gt; from this logger.</source>
          <target state="translated">从此记录器中删除指定的处理程序&lt;em&gt;hdlr&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="265ca2b6db6ce5a3ff9aedd63c5a7c72e5e87f5c" translate="yes" xml:space="preserve">
          <source>Removes the tab specified by &lt;em&gt;tab_id&lt;/em&gt;, unmaps and unmanages the associated window.</source>
          <target state="translated">删除由&lt;em&gt;tab_id&lt;/em&gt;指定的选项卡，取消&lt;em&gt;映射&lt;/em&gt;和取消管理关联的窗口。</target>
        </trans-unit>
        <trans-unit id="dc9b4dc7fc4b6baad1b2b196e86a61bc2f5abd7f" translate="yes" xml:space="preserve">
          <source>Removes the top-of-stack (TOS) item.</source>
          <target state="translated">移除栈顶(TOS)项目。</target>
        </trans-unit>
        <trans-unit id="52b1b8dfd7406e85d8a1daa01bbc43035eec9e18" translate="yes" xml:space="preserve">
          <source>Removing the entry or changing its priority is more difficult because it would break the heap structure invariants. So, a possible solution is to mark the entry as removed and add a new entry with the revised priority:</source>
          <target state="translated">删除该条目或改变其优先级比较困难,因为这会破坏堆结构的不变性。所以,一个可能的解决方案是将该条目标记为删除,然后添加一个新的条目,并修改其优先级。</target>
        </trans-unit>
        <trans-unit id="a4b56a0cc5d96f54a8becd3e61fed1905c99964e" translate="yes" xml:space="preserve">
          <source>Rename file &lt;em&gt;fromname&lt;/em&gt; on the server to &lt;em&gt;toname&lt;/em&gt;.</source>
          <target state="translated">将服务器上的文件&lt;em&gt;fromname&lt;/em&gt;重命名为&lt;em&gt;toname&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3549f5dc4a198fde3fea43a3acbf2e27a6ae616f" translate="yes" xml:space="preserve">
          <source>Rename mailbox named &lt;em&gt;oldmailbox&lt;/em&gt; to &lt;em&gt;newmailbox&lt;/em&gt;.</source>
          <target state="translated">将名为&lt;em&gt;oldmailbox的&lt;/em&gt;邮箱重命名为&lt;em&gt;newmailbox&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e60e102fdcd11be474a67a0ae6aacb59d606f78b" translate="yes" xml:space="preserve">
          <source>Rename messages in the mailbox as necessary to eliminate gaps in numbering. Entries in the sequences list are updated correspondingly.</source>
          <target state="translated">根据需要对邮箱中的信息进行重新命名,以消除编号上的空白。序列列表中的条目也会相应更新。</target>
        </trans-unit>
        <trans-unit id="2d670bc87c1937258260ac24646d8260ebfef90c" translate="yes" xml:space="preserve">
          <source>Rename the file or directory &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. If &lt;em&gt;dst&lt;/em&gt; exists, the operation will fail with an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; subclass in a number of cases:</source>
          <target state="translated">将文件或目录&lt;em&gt;src&lt;/em&gt;重命名为&lt;em&gt;dst&lt;/em&gt;。如果存在&lt;em&gt;dst&lt;/em&gt;，则在许多情况下，操作将失败并显示&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;子类：</target>
        </trans-unit>
        <trans-unit id="df48f2215cb7bcf4ad18d6577001b5d552a345db" translate="yes" xml:space="preserve">
          <source>Rename the file or directory &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. If &lt;em&gt;dst&lt;/em&gt; is a directory, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;dst&lt;/em&gt; exists and is a file, it will be replaced silently if the user has permission. The operation may fail if &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; are on different filesystems. If successful, the renaming will be an atomic operation (this is a POSIX requirement).</source>
          <target state="translated">将文件或目录&lt;em&gt;src&lt;/em&gt;重命名为&lt;em&gt;dst&lt;/em&gt;。如果&lt;em&gt;dst&lt;/em&gt;是目录，则将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;dst&lt;/em&gt;存在并且是文件，则在用户具有权限的情况下将无提示地替换它。如果&lt;em&gt;src&lt;/em&gt;和&lt;em&gt;dst&lt;/em&gt;位于不同的文件系统上，则该操作可能会失败。如果成功，重命名将是原子操作（这是POSIX要求）。</target>
        </trans-unit>
        <trans-unit id="ca15c03ebc4130eb60f0346ebdf7c103f14c253c" translate="yes" xml:space="preserve">
          <source>Rename this file or directory to the given &lt;em&gt;target&lt;/em&gt;, and return a new Path instance pointing to &lt;em&gt;target&lt;/em&gt;. If &lt;em&gt;target&lt;/em&gt; points to an existing file or directory, it will be unconditionally replaced.</source>
          <target state="translated">将此文件或目录重命名为给定的&lt;em&gt;目标&lt;/em&gt;，并返回一个指向&lt;em&gt;目标&lt;/em&gt;的新Path实例。如果&lt;em&gt;目标&lt;/em&gt;指向现有文件或目录，则将无条件替换它。</target>
        </trans-unit>
        <trans-unit id="3a70e8665e55521f4679dca75835942f829d258c" translate="yes" xml:space="preserve">
          <source>Rename this file or directory to the given &lt;em&gt;target&lt;/em&gt;, and return a new Path instance pointing to &lt;em&gt;target&lt;/em&gt;. On Unix, if &lt;em&gt;target&lt;/em&gt; exists and is a file, it will be replaced silently if the user has permission. &lt;em&gt;target&lt;/em&gt; can be either a string or another path object:</source>
          <target state="translated">将此文件或目录重命名为给定的&lt;em&gt;目标&lt;/em&gt;，并返回一个指向&lt;em&gt;目标&lt;/em&gt;的新Path实例。在Unix上，如果&lt;em&gt;target&lt;/em&gt;存在并且是文件，则在用户具有权限的情况下将以静默方式替换它。&lt;em&gt;目标&lt;/em&gt;可以是字符串或其他路径对象：</target>
        </trans-unit>
        <trans-unit id="7beca1211087e94de081a0fba1f35fd86889c6c4" translate="yes" xml:space="preserve">
          <source>Render dialog and start event loop.</source>
          <target state="translated">渲染对话框并启动事件循环。</target>
        </trans-unit>
        <trans-unit id="393632077f18c3d18111dce9c307ea45b3af1ad5" translate="yes" xml:space="preserve">
          <source>Render the Dialog window.</source>
          <target state="translated">渲染对话窗口。</target>
        </trans-unit>
        <trans-unit id="642cc0ad199fb1f1297cc368f7bee614268e84be" translate="yes" xml:space="preserve">
          <source>Repeat the last search, if there is one.</source>
          <target state="translated">如果有的话,重复上次的搜索。</target>
        </trans-unit>
        <trans-unit id="36ace2bdb584635d14fad0d615202a773323ceeb" translate="yes" xml:space="preserve">
          <source>Repeated Names Within an Object</source>
          <target state="translated">对象内的重复名称</target>
        </trans-unit>
        <trans-unit id="fdd508fa58b05b01babe8d3e195f6d9725f65d41" translate="yes" xml:space="preserve">
          <source>Repeated elements can be specified one at a time or with the optional keyword-only &lt;em&gt;counts&lt;/em&gt; parameter. For example, &lt;code&gt;sample(['red', 'blue'],
counts=[4, 2], k=5)&lt;/code&gt; is equivalent to &lt;code&gt;sample(['red', 'red', 'red', 'red',
'blue', 'blue'], k=5)&lt;/code&gt;.</source>
          <target state="translated">可以一次指定一个重复的元素，也可以使用可选的仅关键字&lt;em&gt;counts&lt;/em&gt;参数来指定。例如， &lt;code&gt;sample(['red', 'blue'], counts=[4, 2], k=5)&lt;/code&gt; 等价于 &lt;code&gt;sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c9d3258409bffb2c6901c0ff6eadf94763cbc11" translate="yes" xml:space="preserve">
          <source>Repeated names within an object are accepted, and only the value of the last name-value pair is used.</source>
          <target state="translated">接受一个对象内重复的名称,只使用最后一个名称-值对的值。</target>
        </trans-unit>
        <trans-unit id="117a7c2f50c10d9825d29abe655ca86cc048b12f" translate="yes" xml:space="preserve">
          <source>Repeatedly issue a prompt, accept input, parse an initial prefix off the received input, and dispatch to action methods, passing them the remainder of the line as argument.</source>
          <target state="translated">反复发出提示,接受输入,从接收到的输入中解析出一个初始前缀,并派发给动作方法,将行的剩余部分作为参数传递给它们。</target>
        </trans-unit>
        <trans-unit id="f3357dc7c46947a84ac24495ba5860e59fcbcff0" translate="yes" xml:space="preserve">
          <source>Repetition qualifiers (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{m,n}&lt;/code&gt;, etc) cannot be directly nested. This avoids ambiguity with the non-greedy modifier suffix &lt;code&gt;?&lt;/code&gt;, and with other modifiers in other implementations. To apply a second repetition to an inner repetition, parentheses may be used. For example, the expression &lt;code&gt;(?:a{6})*&lt;/code&gt; matches any multiple of six &lt;code&gt;'a'&lt;/code&gt; characters.</source>
          <target state="translated">重复限定符（ &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;{m,n}&lt;/code&gt; 等）不能直接嵌套。这样可以避免与非贪婪修饰符后缀混淆 &lt;code&gt;?&lt;/code&gt; ，以及其他实现中的其他修饰符。为了将第二次重复应用于内部重复，可以使用括号。例如，表达式 &lt;code&gt;(?:a{6})*&lt;/code&gt; 与六个 &lt;code&gt;'a'&lt;/code&gt; 字符的任意倍数匹配。</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="b7089d9919f16da82cdb9ee0a3fa36e6ba9f923a" translate="yes" xml:space="preserve">
          <source>Replace &lt;a href=&quot;optparse#optparse.OptionParser.disable_interspersed_args&quot;&gt;&lt;code&gt;optparse.OptionParser.disable_interspersed_args()&lt;/code&gt;&lt;/a&gt; by using &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过使用&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;来替换&lt;a href=&quot;optparse#optparse.OptionParser.disable_interspersed_args&quot;&gt; &lt;code&gt;optparse.OptionParser.disable_interspersed_args()&lt;/code&gt; &lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="188297a1a244750ef2e20d6adecd870c02622f35" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes by their single-character equivalent. The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to decode percent-encoded sequences into Unicode characters, as accepted by the &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">将 &lt;code&gt;%xx&lt;/code&gt; 转义符替换为其等效的单字符。可选的&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数指定如何将百分号编码的序列解码为Unicode字符，这是&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;方法所接受的。</target>
        </trans-unit>
        <trans-unit id="485a9bdd73438a2fcd5d53c4c7bc0ae1b7b55cbf" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes by their single-octet equivalent, and return a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">将 &lt;code&gt;%xx&lt;/code&gt; 转义符替换为等效的单字节八位字节，并返回一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="dd774f2a30cdee58e01ceb8852288c641349be49" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes with their single-character equivalent. The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to decode percent-encoded sequences into Unicode characters, as accepted by the &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">将 &lt;code&gt;%xx&lt;/code&gt; 转义符替换为其等效的单字符。可选的&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数指定如何将百分比编码的序列解码为Unicode字符，这是&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;方法所接受的。</target>
        </trans-unit>
        <trans-unit id="142c114af7c060cf58d0e0fc125f019a0b55e0c9" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes with their single-octet equivalent, and return a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">将 &lt;code&gt;%xx&lt;/code&gt; 换码符替换为其等效的单字节，并返回一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="25700e4fc44102e4c7ad3282a213ebf980594033" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;(options, args) = parser.parse_args()&lt;/code&gt; with &lt;code&gt;args =
parser.parse_args()&lt;/code&gt; and add additional &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; calls for the positional arguments. Keep in mind that what was previously called &lt;code&gt;options&lt;/code&gt;, now in the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; context is called &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">更换 &lt;code&gt;(options, args) = parser.parse_args()&lt;/code&gt; 与 &lt;code&gt;args = parser.parse_args()&lt;/code&gt; ，并增加额外&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;的位置参数调用。请记住，以前在&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;上下文中称为 &lt;code&gt;options&lt;/code&gt; 现在称为 &lt;code&gt;args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ab449cbdabce126a1477c0f0eeb8b97b8e06c64" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;optparse.Values&lt;/code&gt; with &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;optparse.OptionError&lt;/code&gt; and &lt;code&gt;optparse.OptionValueError&lt;/code&gt; with &lt;code&gt;ArgumentError&lt;/code&gt;.</source>
          <target state="translated">更换 &lt;code&gt;optparse.Values&lt;/code&gt; 与&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;optparse.OptionError&lt;/code&gt; 和 &lt;code&gt;optparse.OptionValueError&lt;/code&gt; 与 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abe3536719584d6172532cd1eb89511d647a474f" translate="yes" xml:space="preserve">
          <source>Replace a header. Replace the first header found in the message that matches &lt;em&gt;_name&lt;/em&gt;, retaining header order and field name case of the original header. If no matching header is found, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">替换标题。替换在消息中找到的与&lt;em&gt;_name&lt;/em&gt;匹配的第一个标头，并保留标头顺序和原始标头的字段名称大小写。如果找不到匹配的标头，请引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="060f12e874cb129aa89e6ab574feced679b45808" translate="yes" xml:space="preserve">
          <source>Replace a header. Replace the first header found in the message that matches &lt;em&gt;_name&lt;/em&gt;, retaining header order and field name case. If no matching header was found, a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">替换标题。替换在消息中找到的与&lt;em&gt;_name&lt;/em&gt;匹配的第一个标头，并保留标头顺序和字段名大小写。如果找不到匹配的标头，则会引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dcbc6a80fb47be8b07d72e4c8da7b648ee78246" translate="yes" xml:space="preserve">
          <source>Replace all &lt;a href=&quot;optparse#optparse.OptionParser.add_option&quot;&gt;&lt;code&gt;optparse.OptionParser.add_option()&lt;/code&gt;&lt;/a&gt; calls with &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">将所有&lt;a href=&quot;optparse#optparse.OptionParser.add_option&quot;&gt; &lt;code&gt;optparse.OptionParser.add_option()&lt;/code&gt; &lt;/a&gt;调用替换为&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="d6a3559c55df79b290eb62bc0b9b34b463dcb016" translate="yes" xml:space="preserve">
          <source>Replace an existing node with a new node. It must be the case that &lt;em&gt;oldChild&lt;/em&gt; is a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">用新节点替换现有节点。一定是&lt;em&gt;oldChild&lt;/em&gt;是此节点的子级；如果不是，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33de5e2e42ff1aa50ef414ec10190acc10653af2" translate="yes" xml:space="preserve">
          <source>Replace callback actions and the &lt;code&gt;callback_*&lt;/code&gt; keyword arguments with &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;action&lt;/code&gt; arguments.</source>
          <target state="translated">用 &lt;code&gt;type&lt;/code&gt; 或 &lt;code&gt;action&lt;/code&gt; 参数替换回调操作和 &lt;code&gt;callback_*&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="aa2066c3c702b4bf15ec261878a19b0754ddfd0f" translate="yes" xml:space="preserve">
          <source>Replace history item specified by its position with &lt;em&gt;line&lt;/em&gt;. The position is zero-based. This calls &lt;code&gt;replace_history_entry()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">将其位置所指定的历史记录项目替换为第&lt;em&gt;行&lt;/em&gt;。该位置从零开始。这将在基础库中调用 &lt;code&gt;replace_history_entry()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6492730bb5212562fc1dceaa4c764e7d20e850a7" translate="yes" xml:space="preserve">
          <source>Replace special characters in &lt;em&gt;string&lt;/em&gt; using the &lt;code&gt;%xx&lt;/code&gt; escape. Letters, digits, and the characters &lt;code&gt;'_.-~'&lt;/code&gt; are never quoted. By default, this function is intended for quoting the path section of URL. The optional &lt;em&gt;safe&lt;/em&gt; parameter specifies additional ASCII characters that should not be quoted &amp;mdash; its default value is &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;%xx&lt;/code&gt; 转义&lt;em&gt;符&lt;/em&gt;替换&lt;em&gt;字符串&lt;/em&gt;中的特殊字符。字母，数字和字符 &lt;code&gt;'_.-~'&lt;/code&gt; 都不会被引用。默认情况下，此函数用于引用URL的路径部分。可选的&lt;em&gt;safe&lt;/em&gt;参数指定不应加引号的其他ASCII字符-其默认值为 &lt;code&gt;'/'&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09110cbd23656fe9566639c3f4322c495deab28c" translate="yes" xml:space="preserve">
          <source>Replace special characters in &lt;em&gt;string&lt;/em&gt; using the &lt;code&gt;%xx&lt;/code&gt; escape. Letters, digits, and the characters &lt;code&gt;'_.-~'&lt;/code&gt; are never quoted. By default, this function is intended for quoting the path section of a URL. The optional &lt;em&gt;safe&lt;/em&gt; parameter specifies additional ASCII characters that should not be quoted &amp;mdash; its default value is &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;%xx&lt;/code&gt; 转义&lt;em&gt;符&lt;/em&gt;替换&lt;em&gt;字符串&lt;/em&gt;中的特殊字符。字母，数字和字符 &lt;code&gt;'_.-~'&lt;/code&gt; 都不会被引用。默认情况下，此函数用于引用URL的路径部分。可选的&lt;em&gt;safe&lt;/em&gt;参数指定不应加引号的其他ASCII字符-其默认值为 &lt;code&gt;'/'&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28841d731e0691f8ec7beb76d15093263abb87fd" translate="yes" xml:space="preserve">
          <source>Replace string names for &lt;code&gt;type&lt;/code&gt; keyword arguments with the corresponding type objects (e.g. int, float, complex, etc).</source>
          <target state="translated">用相应的类型对​​象（例如，int，float，complex等）替换 &lt;code&gt;type&lt;/code&gt; 关键字参数的字符串名称。</target>
        </trans-unit>
        <trans-unit id="0eb96098cc4f15f26a1fb258728741f742595113" translate="yes" xml:space="preserve">
          <source>Replace strings with implicit arguments such as &lt;code&gt;%default&lt;/code&gt; or &lt;code&gt;%prog&lt;/code&gt; with the standard Python syntax to use dictionaries to format strings, that is, &lt;code&gt;%(default)s&lt;/code&gt; and &lt;code&gt;%(prog)s&lt;/code&gt;.</source>
          <target state="translated">用标准Python语法将字符串替换为诸如 &lt;code&gt;%default&lt;/code&gt; 或 &lt;code&gt;%prog&lt;/code&gt; 等隐式参数，以使用字典来格式化字符串，即 &lt;code&gt;%(default)s&lt;/code&gt; 和 &lt;code&gt;%(prog)s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="702545f2eeac5b43ba4add4a280265ded04e23c4" translate="yes" xml:space="preserve">
          <source>Replace the OptionParser constructor &lt;code&gt;version&lt;/code&gt; argument with a call to &lt;code&gt;parser.add_argument('--version', action='version', version='&amp;lt;the version&amp;gt;')&lt;/code&gt;.</source>
          <target state="translated">用对 &lt;code&gt;parser.add_argument('--version', action='version', version='&amp;lt;the version&amp;gt;')&lt;/code&gt; 的调用替换OptionParser构造函数的 &lt;code&gt;version&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="3398802fc0a7efdf238f249130ace0304f8df78a" translate="yes" xml:space="preserve">
          <source>Replace the message corresponding to &lt;em&gt;key&lt;/em&gt; with &lt;em&gt;message&lt;/em&gt;. Raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no message already corresponds to &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">更换对应的消息&lt;em&gt;密钥&lt;/em&gt;与&lt;em&gt;消息&lt;/em&gt;。提出一个&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 异常&lt;/a&gt;异常，如果没有消息已经对应&lt;em&gt;键&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="78bea69c8b3d333e5571ef6247dff7824627342d" translate="yes" xml:space="preserve">
          <source>Replace with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences (only for encoding). Implemented in &lt;a href=&quot;#codecs.namereplace_errors&quot;&gt;&lt;code&gt;namereplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">替换为 &lt;code&gt;\N{...}&lt;/code&gt; 转义序列（仅用于编码）。在&lt;a href=&quot;#codecs.namereplace_errors&quot;&gt; &lt;code&gt;namereplace_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f37a3fbe9b064c37c869154253f825dfdb624eff" translate="yes" xml:space="preserve">
          <source>Replace with a suitable replacement marker; Python will use the official &lt;code&gt;U+FFFD&lt;/code&gt; REPLACEMENT CHARACTER for the built-in codecs on decoding, and &amp;lsquo;?&amp;rsquo; on encoding. Implemented in &lt;a href=&quot;#codecs.replace_errors&quot;&gt;&lt;code&gt;replace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用合适的替换标记物替换；Python将使用官方的 &lt;code&gt;U+FFFD&lt;/code&gt; REPLACEMENT CHARACTER用于解码时的内置编解码器，以及&amp;ldquo;？&amp;rdquo; 关于编码。在&lt;a href=&quot;#codecs.replace_errors&quot;&gt; &lt;code&gt;replace_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a7dfbebd23058d224153efd98659d07afcad6eb" translate="yes" xml:space="preserve">
          <source>Replace with backslashed escape sequences. Implemented in &lt;a href=&quot;#codecs.backslashreplace_errors&quot;&gt;&lt;code&gt;backslashreplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">替换为反斜杠转义序列。在&lt;a href=&quot;#codecs.backslashreplace_errors&quot;&gt; &lt;code&gt;backslashreplace_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7772709acd14a0caec3c6ba7fe906a4d2a65f8b" translate="yes" xml:space="preserve">
          <source>Replace with the appropriate XML character reference (only for encoding). Implemented in &lt;a href=&quot;#codecs.xmlcharrefreplace_errors&quot;&gt;&lt;code&gt;xmlcharrefreplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">替换为适当的XML字符引用（仅用于编码）。在&lt;a href=&quot;#codecs.xmlcharrefreplace_errors&quot;&gt; &lt;code&gt;xmlcharrefreplace_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9ff10cebb05fe0da5c269ee255400e64d007fb6" translate="yes" xml:space="preserve">
          <source>Replace&amp;hellip;</source>
          <target state="translated">Replace&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="adfeea99b36524b65f36da222d7fdbfb5a78050b" translate="yes" xml:space="preserve">
          <source>Replaces &lt;em&gt;item&lt;/em&gt;&amp;rsquo;s child with &lt;em&gt;newchildren&lt;/em&gt;.</source>
          <target state="translated">替代对象&lt;em&gt;项目&lt;/em&gt;的孩子&lt;em&gt;newchildren&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1a8dd1e9936aff1f3d8a37bc9d646b9a3ecc5240" translate="yes" xml:space="preserve">
          <source>Replaces TOS with &lt;code&gt;getattr(TOS, co_names[namei])&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;getattr(TOS, co_names[namei])&lt;/code&gt; 替换TOS 。</target>
        </trans-unit>
        <trans-unit id="32bd1e8eb021cf1315f7e1be4f3e6444e33b8fef" translate="yes" xml:space="preserve">
          <source>Replaces the root element for this tree. This discards the current contents of the tree, and replaces it with the given element. Use with care. &lt;em&gt;element&lt;/em&gt; is an element instance.</source>
          <target state="translated">替换此树的根元素。这将丢弃树的当前内容，并将其替换为给定的元素。小心使用。&lt;em&gt;element&lt;/em&gt;是一个元素实例。</target>
        </trans-unit>
        <trans-unit id="f087390cdd02de76d60e25a903a405417b121ca9" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;os.popen2()&lt;/code&gt;, &lt;code&gt;os.popen3()&lt;/code&gt;</source>
          <target state="translated">替换&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;os.popen()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;os.popen2()&lt;/code&gt; ， &lt;code&gt;os.popen3()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c4c7203f5379e5271cf3141451b2f66414bfadd" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">替换&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eab8aa4065b5ba30b75986bbaf56a4a085d60fd1" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%+f&lt;/code&gt;, &lt;code&gt;%-f&lt;/code&gt;, and &lt;code&gt;% f&lt;/code&gt; and specifying a sign:</source>
          <target state="translated">替换 &lt;code&gt;%+f&lt;/code&gt; ， &lt;code&gt;%-f&lt;/code&gt; 和 &lt;code&gt;% f&lt;/code&gt; 并指定一个符号：</target>
        </trans-unit>
        <trans-unit id="b1366209a48e8554cfeca0b011e295c8c2e0419b" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt;:</source>
          <target state="translated">替换 &lt;code&gt;%s&lt;/code&gt; 和 &lt;code&gt;%r&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="11a979f0e8ac9f783e1634fdb42dc52b2ae1a523" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%x&lt;/code&gt; and &lt;code&gt;%o&lt;/code&gt; and converting the value to different bases:</source>
          <target state="translated">替换 &lt;code&gt;%x&lt;/code&gt; 和 &lt;code&gt;%o&lt;/code&gt; 并将值转换为不同的基数：</target>
        </trans-unit>
        <trans-unit id="a711864ef1543b8f3dbe8280074d35a2e8b910e3" translate="yes" xml:space="preserve">
          <source>Replacing &lt;strong&gt;/bin/sh&lt;/strong&gt; shell command substitution</source>
          <target state="translated">替换&lt;strong&gt;/ bin / sh&lt;/strong&gt; shell命令替换</target>
        </trans-unit>
        <trans-unit id="363e566b19b3e063eefcbb88cb0d02a0cff145e8" translate="yes" xml:space="preserve">
          <source>Replacing Older Functions with the subprocess Module</source>
          <target state="translated">用子进程模块替换旧函数。</target>
        </trans-unit>
        <trans-unit id="e3af979083c8edcab17cd54aa8ab768be8240d6e" translate="yes" xml:space="preserve">
          <source>Replacing any use of &lt;code&gt;try-finally&lt;/code&gt; and flag variables</source>
          <target state="translated">替换使用 &lt;code&gt;try-finally&lt;/code&gt; 和flag变量</target>
        </trans-unit>
        <trans-unit id="2c8419f67528b20da5b283106a7385c2a397c86d" translate="yes" xml:space="preserve">
          <source>Replacing functions from the &lt;code&gt;popen2&lt;/code&gt; module</source>
          <target state="translated">替换 &lt;code&gt;popen2&lt;/code&gt; 模块中的功能</target>
        </trans-unit>
        <trans-unit id="dc1243f55fba7b961640cbbfd4e141a33ea7e522" translate="yes" xml:space="preserve">
          <source>Replacing shell pipeline</source>
          <target state="translated">更换外壳管道</target>
        </trans-unit>
        <trans-unit id="f213b38163d2555242615174ff0914708d54d337" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;a href=&quot;os#os.spawnl&quot;&gt;&lt;code&gt;os.spawn&lt;/code&gt;&lt;/a&gt; family</source>
          <target state="translated">取代&lt;a href=&quot;os#os.spawnl&quot;&gt; &lt;code&gt;os.spawn&lt;/code&gt; &lt;/a&gt;系列</target>
        </trans-unit>
        <trans-unit id="7d688ab4a80b47e137d09bd38e40ba5e8b3889aa" translate="yes" xml:space="preserve">
          <source>Replied</source>
          <target state="translated">Replied</target>
        </trans-unit>
        <trans-unit id="12b497d25addd68bea9aa62cc9ce23112c0cf044" translate="yes" xml:space="preserve">
          <source>Replied to</source>
          <target state="translated">已回复</target>
        </trans-unit>
        <trans-unit id="c327a287c30e712678ed3a5b706a40a1cc31dec1" translate="yes" xml:space="preserve">
          <source>Report that the given example failed. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">报告给定的示例失败。提供此方法是为了允许&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; 的&lt;/a&gt;子类自定义其输出。不应直接调用它。</target>
        </trans-unit>
        <trans-unit id="8afb4877b1c763309b94ffb83ea503cb77ac97f3" translate="yes" xml:space="preserve">
          <source>Report that the given example raised an unexpected exception. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">报告给定的示例引发了意外的异常。提供此方法是为了允许&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; 的&lt;/a&gt;子类自定义其输出。不应直接调用它。</target>
        </trans-unit>
        <trans-unit id="bf1cea3684117db6d9295ef565d00c22dd2a7090" translate="yes" xml:space="preserve">
          <source>Report that the given example ran successfully. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">报告给定的示例已成功运行。提供此方法是为了允许&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; 的&lt;/a&gt;子类自定义其输出。不应直接调用它。</target>
        </trans-unit>
        <trans-unit id="54c2931067a2ac8f78e68dc764080c3d11cead82" translate="yes" xml:space="preserve">
          <source>Report that the test runner is about to process the given example. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">报告测试运行程序将要处理给定的示例。提供此方法是为了允许&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; 的&lt;/a&gt;子类自定义其输出。不应直接调用它。</target>
        </trans-unit>
        <trans-unit id="3f5f1779fb30c60316a19fe768ece4ab18a718ff" translate="yes" xml:space="preserve">
          <source>Reports that the command is not implemented.</source>
          <target state="translated">报告该命令未执行。</target>
        </trans-unit>
        <trans-unit id="9478afd1f1cbbe2570530e14898a3a8702d4a693" translate="yes" xml:space="preserve">
          <source>Repr Objects</source>
          <target state="translated">代表对象</target>
        </trans-unit>
        <trans-unit id="5bc6e28d58c936b1a08407448359ffedd92c1182" translate="yes" xml:space="preserve">
          <source>Represent a single frame in the traceback or stack that is being formatted or printed. It may optionally have a stringified version of the frames locals included in it. If &lt;em&gt;lookup_line&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the source code is not looked up until the &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; has the &lt;code&gt;line&lt;/code&gt; attribute accessed (which also happens when casting it to a tuple). &lt;code&gt;line&lt;/code&gt; may be directly provided, and will prevent line lookups happening at all. &lt;em&gt;locals&lt;/em&gt; is an optional local variable dictionary, and if supplied the variable representations are stored in the summary for later display.</source>
          <target state="translated">表示正在格式化或打印的回溯或堆栈中的单个框架。它可以选择包含其中包含的本地帧的字符串化版本。如果&lt;em&gt;lookup_line&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; ，源代码不抬头，直到&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;有 &lt;code&gt;line&lt;/code&gt; 访问属性（其强制转换为一个元组的时候也发生）。可能会直接提供 &lt;code&gt;line&lt;/code&gt; ，并且根本不会发生线路查找。&lt;em&gt;locals&lt;/em&gt;是可选的局部变量字典，如果提供了变量表示，则将变量表示形式存储在摘要中以供以后显示。</target>
        </trans-unit>
        <trans-unit id="ebe4691e4bae16a26410f71caae3802a8ac0f0f6" translate="yes" xml:space="preserve">
          <source>Represent an address as 16 packed bytes in network (big-endian) order. &lt;em&gt;address&lt;/em&gt; is an integer representation of an IPv6 IP address. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the integer is negative or too large to be an IPv6 IP address.</source>
          <target state="translated">以网络（大端）顺序将地址表示为16个压缩字节。&lt;em&gt;address&lt;/em&gt;是IPv6 IP地址的整数表示。一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;，如果该整数为负或过大是一个IPv6的IP地址被提升。</target>
        </trans-unit>
        <trans-unit id="5d79b21e100f0651a5be0fad288f490f75dab588" translate="yes" xml:space="preserve">
          <source>Represent an address as 4 packed bytes in network (big-endian) order. &lt;em&gt;address&lt;/em&gt; is an integer representation of an IPv4 IP address. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the integer is negative or too large to be an IPv4 IP address.</source>
          <target state="translated">以网络（大端）顺序将地址表示为4个压缩字节。&lt;em&gt;address&lt;/em&gt;是IPv4 IP地址的整数表示。一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;，如果该整数为负或过大是一个IPv4的IP地址被提升。</target>
        </trans-unit>
        <trans-unit id="196cf85693b2e04e03af7b8db9b4362b075f1c0e" translate="yes" xml:space="preserve">
          <source>Represent and manipulate messages.</source>
          <target state="translated">表示和操作信息。</target>
        </trans-unit>
        <trans-unit id="083c9d26131739b5aff9923caafb482b4ec48b58" translate="yes" xml:space="preserve">
          <source>Represent the C &lt;code&gt;bool&lt;/code&gt; datatype (more accurately, &lt;code&gt;_Bool&lt;/code&gt; from C99). Its value can be &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, and the constructor accepts any object that has a truth value.</source>
          <target state="translated">表示C &lt;code&gt;bool&lt;/code&gt; 数据类型（更准确地说，是C99的 &lt;code&gt;_Bool&lt;/code&gt; ）。它的值可以为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; ，并且构造函数接受具有真值的任何对象。</target>
        </trans-unit>
        <trans-unit id="e44a8b6270a810e5ca0b4301005050ce646965d2" translate="yes" xml:space="preserve">
          <source>Represent the path as a &lt;code&gt;file&lt;/code&gt; URI. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the path isn&amp;rsquo;t absolute.</source>
          <target state="translated">将路径表示为 &lt;code&gt;file&lt;/code&gt; URI。如果路径不是绝对的，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="360bc539904b3901915f57b0aead8cb40373f0de" translate="yes" xml:space="preserve">
          <source>Representation</source>
          <target state="translated">Representation</target>
        </trans-unit>
        <trans-unit id="71334c66cce7357a33242f45111c460d2724f54f" translate="yes" xml:space="preserve">
          <source>Representation of comments in the source document.</source>
          <target state="translated">在源文件中体现评论。</target>
        </trans-unit>
        <trans-unit id="908cdb47bf647617261f7fb18e156abd2c7e8e03" translate="yes" xml:space="preserve">
          <source>Represents &lt;code&gt;from x import y&lt;/code&gt;. &lt;code&gt;module&lt;/code&gt; is a raw string of the &amp;lsquo;from&amp;rsquo; name, without any leading dots, or &lt;code&gt;None&lt;/code&gt; for statements such as &lt;code&gt;from . import foo&lt;/code&gt;. &lt;code&gt;level&lt;/code&gt; is an integer holding the level of the relative import (0 means absolute import).</source>
          <target state="translated">表示 &lt;code&gt;from x import y&lt;/code&gt; 。 &lt;code&gt;module&lt;/code&gt; 是'from'名称的原始字符串，没有任何前导点，对于诸如 &lt;code&gt;from . import foo&lt;/code&gt; 这样的语句则为 &lt;code&gt;None&lt;/code&gt; 。导入foo。 &lt;code&gt;level&lt;/code&gt; 是一个保持相对导入级别的整数（0表示绝对导入）。</target>
        </trans-unit>
        <trans-unit id="8c77832392fa7628a1a6833e65f9c3ee398bc703" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;del&lt;/code&gt; statement. &lt;code&gt;targets&lt;/code&gt; is a list of nodes, such as &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Subscript&quot;&gt;&lt;code&gt;Subscript&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">表示 &lt;code&gt;del&lt;/code&gt; 语句。 &lt;code&gt;targets&lt;/code&gt; 是节点列表，例如&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ast.Attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ast.Subscript&quot;&gt; &lt;code&gt;Subscript&lt;/code&gt; &lt;/a&gt;节点。</target>
        </trans-unit>
        <trans-unit id="251caf0ce3c6598751bdfd48226cc20358adbcd7" translate="yes" xml:space="preserve">
          <source>Represents a processing instruction in the XML document; this inherits from the &lt;code&gt;Node&lt;/code&gt; interface and cannot have child nodes.</source>
          <target state="translated">表示XML文档中的处理指令；它继承自 &lt;code&gt;Node&lt;/code&gt; 接口，不能有子节点。</target>
        </trans-unit>
        <trans-unit id="3a84011a230a8f6db84d875433667507e8e18941" translate="yes" xml:space="preserve">
          <source>Represents a reader object that provides APIs to read data from the IO stream.</source>
          <target state="translated">代表一个阅读器对象,提供从IO流中读取数据的API。</target>
        </trans-unit>
        <trans-unit id="6cfc34832a11bb051619fc9790f9df0953623075" translate="yes" xml:space="preserve">
          <source>Represents a writer object that provides APIs to write data to the IO stream.</source>
          <target state="translated">代表一个写入器对象,它提供了向IO流写入数据的API。</target>
        </trans-unit>
        <trans-unit id="85c70c4b26ecde8091c78a5be64cd08937604a4a" translate="yes" xml:space="preserve">
          <source>Represents entries in the Binary table; inserting such an object using &lt;a href=&quot;#msilib.add_data&quot;&gt;&lt;code&gt;add_data()&lt;/code&gt;&lt;/a&gt; reads the file named &lt;em&gt;filename&lt;/em&gt; into the table.</source>
          <target state="translated">表示二进制表中的条目；使用&lt;a href=&quot;#msilib.add_data&quot;&gt; &lt;code&gt;add_data()&lt;/code&gt; &lt;/a&gt;插入这样的对象会将名为&lt;em&gt;filename&lt;/em&gt;的文件读入表中。</target>
        </trans-unit>
        <trans-unit id="ebfc708c405efbbf1192348a4763a9c315bdb0b8" translate="yes" xml:space="preserve">
          <source>Represents the C 16-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_short&quot;&gt;&lt;code&gt;c_short&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 16位带 &lt;code&gt;signed int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_short&quot;&gt; &lt;code&gt;c_short&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="c6bcb428751c6a8e9e9ea3dec6bce63a6f93097c" translate="yes" xml:space="preserve">
          <source>Represents the C 16-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ushort&quot;&gt;&lt;code&gt;c_ushort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 16位 &lt;code&gt;unsigned int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_ushort&quot;&gt; &lt;code&gt;c_ushort&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="e677aaa641998b3b7f81dcb3af7c2c1cc575b407" translate="yes" xml:space="preserve">
          <source>Represents the C 32-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 32位带 &lt;code&gt;signed int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="2afc6de59d69ee744a71e2c8123abd77166620bb" translate="yes" xml:space="preserve">
          <source>Represents the C 32-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_uint&quot;&gt;&lt;code&gt;c_uint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 32位 &lt;code&gt;unsigned int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_uint&quot;&gt; &lt;code&gt;c_uint&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="0404c0259e7891029e732830bcdbe13aff08b1b0" translate="yes" xml:space="preserve">
          <source>Represents the C 64-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_longlong&quot;&gt;&lt;code&gt;c_longlong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 64位带 &lt;code&gt;signed int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_longlong&quot;&gt; &lt;code&gt;c_longlong&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="5579e29300e13296dd2e3bfbbeee1140a6d26a07" translate="yes" xml:space="preserve">
          <source>Represents the C 64-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ulonglong&quot;&gt;&lt;code&gt;c_ulonglong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 64位 &lt;code&gt;unsigned int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_ulonglong&quot;&gt; &lt;code&gt;c_ulonglong&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="92e77e6cc6636b49e24754ab07d11189472a326a" translate="yes" xml:space="preserve">
          <source>Represents the C 8-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_byte&quot;&gt;&lt;code&gt;c_byte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 8位有 &lt;code&gt;signed int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_byte&quot;&gt; &lt;code&gt;c_byte&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="10579ae1b63b51029ea2fcce8f6016c106014413" translate="yes" xml:space="preserve">
          <source>Represents the C 8-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ubyte&quot;&gt;&lt;code&gt;c_ubyte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C 8位 &lt;code&gt;unsigned int&lt;/code&gt; 数据类型。通常是&lt;a href=&quot;#ctypes.c_ubyte&quot;&gt; &lt;code&gt;c_ubyte&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="74e71c8e1541ea5e50299033d15c1ebaed0de7e3" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; datatype. Calling this without an argument creates a &lt;code&gt;NULL&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; pointer.</source>
          <target state="translated">表示C &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;数据类型。在不带参数的情况下调用它会创建一个 &lt;code&gt;NULL&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;指针。</target>
        </trans-unit>
        <trans-unit id="04db1721676e4c8bf60e5b3c4782b78240c1e8b1" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; datatype. Calling this without an argument creates a &lt;code&gt;NULL&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; pointer.</source>
          <target state="translated">表示C &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;数据类型。在不带参数的情况下调用它会创建一个 &lt;code&gt;NULL&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;指针。</target>
        </trans-unit>
        <trans-unit id="dfbc3e30ec72aaf50ceb0c4c2f5ffd9f5589e1ca" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;char *&lt;/code&gt; datatype when it points to a zero-terminated string. For a general character pointer that may also point to binary data, &lt;code&gt;POINTER(c_char)&lt;/code&gt; must be used. The constructor accepts an integer address, or a bytes object.</source>
          <target state="translated">当C &lt;code&gt;char *&lt;/code&gt; 数据类型指向以零结尾的字符串时，表示它。对于也可能指向二进制数据的通用字符指针，必须使用 &lt;code&gt;POINTER(c_char)&lt;/code&gt; 。构造函数接受整数地址或字节对象。</target>
        </trans-unit>
        <trans-unit id="9cdee775f57e8fc1027bf6cb2f8cad47dc4548f4" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;char&lt;/code&gt; datatype, and interprets the value as a single character. The constructor accepts an optional string initializer, the length of the string must be exactly one character.</source>
          <target state="translated">表示C &lt;code&gt;char&lt;/code&gt; 数据类型，并将值解释为单个字符。构造函数接受一个可选的字符串初始值设定项，字符串的长度必须恰好是一个字符。</target>
        </trans-unit>
        <trans-unit id="29c01758c668101f768b0d0eca571df4149bc9e9" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;double&lt;/code&gt; datatype. The constructor accepts an optional float initializer.</source>
          <target state="translated">表示C &lt;code&gt;double&lt;/code&gt; 数据类型。构造函数接受一个可选的float初始化程序。</target>
        </trans-unit>
        <trans-unit id="9eac6288935f4d2aa14ced6c0cd87577a151fa74" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;float&lt;/code&gt; datatype. The constructor accepts an optional float initializer.</source>
          <target state="translated">表示C &lt;code&gt;float&lt;/code&gt; 数据类型。构造函数接受一个可选的float初始化程序。</target>
        </trans-unit>
        <trans-unit id="af5c278a503d85c125db7cf7af20bf9212b7e6b7" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;long double&lt;/code&gt; datatype. The constructor accepts an optional float initializer. On platforms where &lt;code&gt;sizeof(long double) ==
sizeof(double)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_double&quot;&gt;&lt;code&gt;c_double&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C &lt;code&gt;long double&lt;/code&gt; 数据类型。构造函数接受一个可选的float初始化程序。在 &lt;code&gt;sizeof(long double) == sizeof(double)&lt;/code&gt; 它是&lt;a href=&quot;#ctypes.c_double&quot;&gt; &lt;code&gt;c_double&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="ebb2991e44270bf3e743b6df3e6c52ad486aba0a" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed char&lt;/code&gt; datatype, and interprets the value as small integer. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;signed char&lt;/code&gt; 数据类型，并将该值解释为小整数。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="250753a38c9a2f17b0320be37fc295f4ea1d486f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed int&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done. On platforms where &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C &lt;code&gt;signed int&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。在 &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; 平台上，它是&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="7b3bc32cd5d160044207c249d263b1b2ec7f3dbd" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed long long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;signed long long&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="834e455b79030123be959bab4238c40806a0c1f4" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;signed long&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="29e4ece1364aef7993b77e1eb617ca5e4cbbb63f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed short&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;signed short&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="d39dcb8c43511707fd127c6711f2fa9dbe73a9df" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;size_t&lt;/code&gt; datatype.</source>
          <target state="translated">表示C &lt;code&gt;size_t&lt;/code&gt; 数据类型。</target>
        </trans-unit>
        <trans-unit id="d1c72ca6086fa925cb82e1925b2d30d162d3d83f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;ssize_t&lt;/code&gt; datatype.</source>
          <target state="translated">表示C &lt;code&gt;ssize_t&lt;/code&gt; 数据类型。</target>
        </trans-unit>
        <trans-unit id="9faff58ee71e2ddb365084d0ad8fa10c0eb0bdbf" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned char&lt;/code&gt; datatype, it interprets the value as small integer. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;unsigned char&lt;/code&gt; 数据类型，它将值解释为小整数。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="e28d5338f955859ad6fa4b5dc935e11719758a00" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned int&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done. On platforms where &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; it is an alias for &lt;a href=&quot;#ctypes.c_ulong&quot;&gt;&lt;code&gt;c_ulong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示C &lt;code&gt;unsigned int&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。在 &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; 平台上，它是&lt;a href=&quot;#ctypes.c_ulong&quot;&gt; &lt;code&gt;c_ulong&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="1c80b4a935038a9853bccd388f5f6b36d87ec052" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned long long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;unsigned long long&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="9b86a5b6ef36be46af974cca29441da910557668" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;unsigned long&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="3c13e529af5d7ca1af4ba67b7ed6b4054d8c96de" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned short&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">表示C &lt;code&gt;unsigned short&lt;/code&gt; 数据类型。构造函数接受一个可选的整数初始化器；没有溢出检查完成。</target>
        </trans-unit>
        <trans-unit id="1f24369490b1cbe2cb1c8baa14e644f45582675f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;void *&lt;/code&gt; type. The value is represented as integer. The constructor accepts an optional integer initializer.</source>
          <target state="translated">表示C &lt;code&gt;void *&lt;/code&gt; 类型。该值表示为整数。构造函数接受一个可选的整数初始化器。</target>
        </trans-unit>
        <trans-unit id="dfee4618ef3a9a5c9dde6bb69f6bf3763a8e3d33" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;wchar_t *&lt;/code&gt; datatype, which must be a pointer to a zero-terminated wide character string. The constructor accepts an integer address, or a string.</source>
          <target state="translated">表示C &lt;code&gt;wchar_t *&lt;/code&gt; 数据类型，它必须是一个以零结尾的宽字符串的指针。构造函数接受整数地址或字符串。</target>
        </trans-unit>
        <trans-unit id="955bda388da2054d49816a2c0ec481e724e37ed0" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;wchar_t&lt;/code&gt; datatype, and interprets the value as a single character unicode string. The constructor accepts an optional string initializer, the length of the string must be exactly one character.</source>
          <target state="translated">表示C &lt;code&gt;wchar_t&lt;/code&gt; 数据类型，并将该值解释为单个字符的unicode字符串。构造函数接受一个可选的字符串初始值设定项，字符串的长度必须恰好是一个字符。</target>
        </trans-unit>
        <trans-unit id="81ab085580795762893afc75a3039479df0598f8" translate="yes" xml:space="preserve">
          <source>Request Handler Objects</source>
          <target state="translated">请求处理程序对象</target>
        </trans-unit>
        <trans-unit id="e58418a16c7b78fa65efff4326c8cce9fcab3eb3" translate="yes" xml:space="preserve">
          <source>Request Objects</source>
          <target state="translated">请求对象</target>
        </trans-unit>
        <trans-unit id="88ca8be4e86cd81a8e8b1f0dd8c635d7cb471145" translate="yes" xml:space="preserve">
          <source>Request for information about the transport.</source>
          <target state="translated">要求提供有关运输的信息。</target>
        </trans-unit>
        <trans-unit id="679af5d209f3165176d020117ec77d62ccb9e685" translate="yes" xml:space="preserve">
          <source>Request message list, result is in the form &lt;code&gt;(response, ['mesg_num octets',
...], octets)&lt;/code&gt;. If &lt;em&gt;which&lt;/em&gt; is set, it is the message to list.</source>
          <target state="translated">请求消息列表，结果的格式为 &lt;code&gt;(response, ['mesg_num octets', ...], octets)&lt;/code&gt; 。如果&lt;em&gt;它&lt;/em&gt;被设置，它是邮件列表。</target>
        </trans-unit>
        <trans-unit id="795b6eb1b356df6defdaf7b48040b5b1ab2ded1b" translate="yes" xml:space="preserve">
          <source>Request named status conditions for &lt;em&gt;mailbox&lt;/em&gt;.</source>
          <target state="translated">请求&lt;em&gt;邮箱的&lt;/em&gt;命名状态条件。</target>
        </trans-unit>
        <trans-unit id="349577d4bfaa98e578f20f1fe8d1196b1ecb1809" translate="yes" xml:space="preserve">
          <source>Request the Task to be cancelled.</source>
          <target state="translated">要求取消任务。</target>
        </trans-unit>
        <trans-unit id="5f43a53727b15d57439a6e2679987ec5c354c42e" translate="yes" xml:space="preserve">
          <source>Request the size of the file named &lt;em&gt;filename&lt;/em&gt; on the server. On success, the size of the file is returned as an integer, otherwise &lt;code&gt;None&lt;/code&gt; is returned. Note that the &lt;code&gt;SIZE&lt;/code&gt; command is not standardized, but is supported by many common server implementations.</source>
          <target state="translated">请求服务器上名为&lt;em&gt;filename&lt;/em&gt;的文件的大小。成功后，将以整数形式返回文件的大小，否则返回 &lt;code&gt;None&lt;/code&gt; 。请注意， &lt;code&gt;SIZE&lt;/code&gt; 命令不是标准化的，但是许多常见的服务器实现都支持该命令。</target>
        </trans-unit>
        <trans-unit id="9c0edf79e869493af3284f4a90b8286dbe514ab7" translate="yes" xml:space="preserve">
          <source>Request.full_url is a property with setter, getter and a deleter. Getting &lt;a href=&quot;#urllib.request.Request.full_url&quot;&gt;&lt;code&gt;full_url&lt;/code&gt;&lt;/a&gt; returns the original request URL with the fragment, if it was present.</source>
          <target state="translated">Request.full_url是具有setter，getter和Deleter的属性。获取&lt;a href=&quot;#urllib.request.Request.full_url&quot;&gt; &lt;code&gt;full_url&lt;/code&gt; &lt;/a&gt;返回带有片段的原始请求URL（如果存在）。</target>
        </trans-unit>
        <trans-unit id="6624edf6a6f721c8f8feab403a0106284c9b7a1d" translate="yes" xml:space="preserve">
          <source>Requests post-handshake authentication (PHA) from a TLS 1.3 client. PHA can only be initiated for a TLS 1.3 connection from a server-side socket, after the initial TLS handshake and with PHA enabled on both sides, see &lt;a href=&quot;#ssl.SSLContext.post_handshake_auth&quot;&gt;&lt;code&gt;SSLContext.post_handshake_auth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从TLS 1.3客户端请求握手后身份验证（PHA）。在初始TLS握手后，并且在双方均启用了PHA之后，只能从服务器端套接字为TLS 1.3连接启动PHA，请参阅&lt;a href=&quot;#ssl.SSLContext.post_handshake_auth&quot;&gt; &lt;code&gt;SSLContext.post_handshake_auth&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f424f28e26130553fd9b1cb33b7ffd4c171c1290" translate="yes" xml:space="preserve">
          <source>Requests that the underlying shared memory block be destroyed. In order to ensure proper cleanup of resources, &lt;code&gt;unlink()&lt;/code&gt; should be called once (and only once) across all processes which have need for the shared memory block. After requesting its destruction, a shared memory block may or may not be immediately destroyed and this behavior may differ across platforms. Attempts to access data inside the shared memory block after &lt;code&gt;unlink()&lt;/code&gt; has been called may result in memory access errors. Note: the last process relinquishing its hold on a shared memory block may call &lt;code&gt;unlink()&lt;/code&gt; and &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; in either order.</source>
          <target state="translated">请求销毁基础共享内存块。为了确保适当地清理资源，在需要共享内存块的所有进程中，应仅一次（并且仅一次）调用 &lt;code&gt;unlink()&lt;/code&gt; 。在请求销毁它之后，共享内存块可能会立即销毁，也可能不会立即销毁，并且此行为在不同平台之间可能会有所不同。在调用 &lt;code&gt;unlink()&lt;/code&gt; 之后尝试访问共享内存块中的数据可能会导致内存访问错误。注意：放弃对共享内存块的保留的最后一个进程可以按任意顺序调用 &lt;code&gt;unlink()&lt;/code&gt; 和&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f32e5cf5f68b8b47dabad68d3f3f1a96bdf00231" translate="yes" xml:space="preserve">
          <source>Required options are generally considered bad form because users expect &lt;em&gt;options&lt;/em&gt; to be &lt;em&gt;optional&lt;/em&gt;, and thus they should be avoided when possible.</source>
          <target state="translated">必需的选项通常被认为是不好的形式，因为用户期望&lt;em&gt;选项&lt;/em&gt;是&lt;em&gt;可选的&lt;/em&gt;，因此应尽可能避免使用。</target>
        </trans-unit>
        <trans-unit id="42104f584e7185af38136c822b6ca0dc0e1c7e9d" translate="yes" xml:space="preserve">
          <source>Required to create a subkey of a registry key.</source>
          <target state="translated">需要创建一个注册表键的子键。</target>
        </trans-unit>
        <trans-unit id="2424413e00243c15ac9ea4a8f445c65ee83db262" translate="yes" xml:space="preserve">
          <source>Required to create, delete, or set a registry value.</source>
          <target state="translated">需要创建、删除或设置注册表值。</target>
        </trans-unit>
        <trans-unit id="4e039e734b0c82ef1bc9d2b30ebf08a9ad705f5f" translate="yes" xml:space="preserve">
          <source>Required to enumerate the subkeys of a registry key.</source>
          <target state="translated">需要枚举注册表键的子键。</target>
        </trans-unit>
        <trans-unit id="3597453e15c78c45023d9ab068b701b801babefd" translate="yes" xml:space="preserve">
          <source>Required to query the values of a registry key.</source>
          <target state="translated">需要查询注册表键值。</target>
        </trans-unit>
        <trans-unit id="715a438f507d5359881996eead3207ee68d77194" translate="yes" xml:space="preserve">
          <source>Required to request change notifications for a registry key or for subkeys of a registry key.</source>
          <target state="translated">需要为注册表键或注册表键的子键申请更改通知。</target>
        </trans-unit>
        <trans-unit id="fbbabd42d7db228b931c272f5116719cf1328ac2" translate="yes" xml:space="preserve">
          <source>Resent</source>
          <target state="translated">Resent</target>
        </trans-unit>
        <trans-unit id="67a6ff10f1b93d118b60063992189eb08923db8b" translate="yes" xml:space="preserve">
          <source>Reserved</source>
          <target state="translated">Reserved</target>
        </trans-unit>
        <trans-unit id="39ef8a501c8e69a1a3c8d1fc3ebbf4b663515833" translate="yes" xml:space="preserve">
          <source>Reserved for Microsoft compatibility.</source>
          <target state="translated">为微软的兼容性保留。</target>
        </trans-unit>
        <trans-unit id="de3062f48873230d07d0f040f502a6f9de1e3160" translate="yes" xml:space="preserve">
          <source>Reserved for NCS compatibility.</source>
          <target state="translated">为NCS兼容性保留。</target>
        </trans-unit>
        <trans-unit id="83975a32a1f2f4bbed06b220ba258a40a7f5d143" translate="yes" xml:space="preserve">
          <source>Reserved for future definition.</source>
          <target state="translated">留待今后定义。</target>
        </trans-unit>
        <trans-unit id="a94f153c1fc553424928683df2a1ca5095dcc34e" translate="yes" xml:space="preserve">
          <source>Reserved for system use.</source>
          <target state="translated">保留给系统使用。</target>
        </trans-unit>
        <trans-unit id="127546fc47cbe074868b58f77e429324a507632a" translate="yes" xml:space="preserve">
          <source>Reset all Turtles on the Screen to their initial state.</source>
          <target state="translated">将屏幕上的所有Turtles重置为初始状态。</target>
        </trans-unit>
        <trans-unit id="2d048221c86f328b023ed87f28984acf28fd11a1" translate="yes" xml:space="preserve">
          <source>Reset or hard reset (unreliable)</source>
          <target state="translated">重置或硬复位(不可靠</target>
        </trans-unit>
        <trans-unit id="f67091a1660ae88b184292a116a4a61ef5bb724e" translate="yes" xml:space="preserve">
          <source>Reset the context variable to the value it had before the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; that created the &lt;em&gt;token&lt;/em&gt; was used.</source>
          <target state="translated">将上下文变量重置为使用创建&lt;em&gt;令牌&lt;/em&gt;的&lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt;之前的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9de7fd5778a89ce007e6059cb81ef63cf04c0537" translate="yes" xml:space="preserve">
          <source>Reset the decoder to the initial state.</source>
          <target state="translated">将解码器复位到初始状态。</target>
        </trans-unit>
        <trans-unit id="0d49c70cc7cd22fac918ff3bb95936e180d02604" translate="yes" xml:space="preserve">
          <source>Reset the encoder to the initial state. The output is discarded: call &lt;code&gt;.encode(object, final=True)&lt;/code&gt;, passing an empty byte or text string if necessary, to reset the encoder and to get the output.</source>
          <target state="translated">将编码器重置为初始状态。输出将被丢弃：调用 &lt;code&gt;.encode(object, final=True)&lt;/code&gt; ，如有必要，传递一个空字节或文本字符串，以重置编码器并获取输出。</target>
        </trans-unit>
        <trans-unit id="e92b6a1febd7f5a1114ab71f5a057ba12b66f73c" translate="yes" xml:space="preserve">
          <source>Reset the instance. Loses all unprocessed data. This is called implicitly at instantiation time.</source>
          <target state="translated">重置实例。丢失所有未处理的数据。这是在实例化时隐式调用的。</target>
        </trans-unit>
        <trans-unit id="6bff4bc1b2ec48c271201c2d970d26ad64178b2d" translate="yes" xml:space="preserve">
          <source>Reset the internal flag to false. Subsequently, threads calling &lt;a href=&quot;#threading.Event.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; will block until &lt;a href=&quot;#threading.Event.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; is called to set the internal flag to true again.</source>
          <target state="translated">将内部标志重置为false。随后，调用&lt;a href=&quot;#threading.Event.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; 的&lt;/a&gt;线程将阻塞，直到调用&lt;a href=&quot;#threading.Event.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;再次将内部标志设置为true 为止。</target>
        </trans-unit>
        <trans-unit id="0c19a3e96112fba3feedd5e33e26f6546659d001" translate="yes" xml:space="preserve">
          <source>Reset the state after an event is retrieved</source>
          <target state="translated">在事件发生后重置状态</target>
        </trans-unit>
        <trans-unit id="0d633f4e19cee801cd3f67b7cc4865a2a355572e" translate="yes" xml:space="preserve">
          <source>Reset the syslog module values and call the system library &lt;code&gt;closelog()&lt;/code&gt;.</source>
          <target state="translated">重置syslog模块的值，然后调用系统库 &lt;code&gt;closelog()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e34c4f2a32751ad9021deb3a3d894570dd4d915a" translate="yes" xml:space="preserve">
          <source>Reset the time conversion rules used by the library routines. The environment variable &lt;code id=&quot;index-13&quot;&gt;TZ&lt;/code&gt; specifies how this is done. It will also set the variables &lt;code&gt;tzname&lt;/code&gt; (from the &lt;code id=&quot;index-14&quot;&gt;TZ&lt;/code&gt; environment variable), &lt;code&gt;timezone&lt;/code&gt; (non-DST seconds West of UTC), &lt;code&gt;altzone&lt;/code&gt; (DST seconds west of UTC) and &lt;code&gt;daylight&lt;/code&gt; (to 0 if this timezone does not have any daylight saving time rules, or to nonzero if there is a time, past, present or future when daylight saving time applies).</source>
          <target state="translated">重置库例程使用的时间转换规则。环境变量 &lt;code id=&quot;index-13&quot;&gt;TZ&lt;/code&gt; 指定如何完成此操作。它还会将变量 &lt;code&gt;tzname&lt;/code&gt; （来自 &lt;code id=&quot;index-14&quot;&gt;TZ&lt;/code&gt; 环境变量）， &lt;code&gt;timezone&lt;/code&gt; （UTC 以西的非DST秒）， &lt;code&gt;altzone&lt;/code&gt; （UTC以西的DST秒）和 &lt;code&gt;daylight&lt;/code&gt; （如果此时区没有任何夏令时规则，则设置为0）。 ，如果采用夏令时，则设置为非零（如果有时间，过去，现在或将来）。</target>
        </trans-unit>
        <trans-unit id="f5a40addf34d290ead6463e7ee0b47bc992fe551" translate="yes" xml:space="preserve">
          <source>Reset the warnings filter. This discards the effect of all previous calls to &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, including that of the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; command line options and calls to &lt;a href=&quot;#warnings.simplefilter&quot;&gt;&lt;code&gt;simplefilter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重置警告过滤器。这将放弃先前对&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; &lt;/a&gt;的所有调用（包括&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; &lt;/a&gt;命令行选项和对&lt;a href=&quot;#warnings.simplefilter&quot;&gt; &lt;code&gt;simplefilter()&lt;/code&gt; 的&lt;/a&gt;调用）的影响。</target>
        </trans-unit>
        <trans-unit id="171d23d6f2ca421d1f348a2c96b23e87ff54d015" translate="yes" xml:space="preserve">
          <source>Reset the warnings filter. This discards the effect of all previous calls to &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, including that of the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; command line options and calls to &lt;a href=&quot;#warnings.simplefilter&quot;&gt;&lt;code&gt;simplefilter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重置警告过滤器。这将放弃先前对&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; &lt;/a&gt;的所有调用（包括&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; &lt;/a&gt;命令行选项和对&lt;a href=&quot;#warnings.simplefilter&quot;&gt; &lt;code&gt;simplefilter()&lt;/code&gt; 的&lt;/a&gt;调用）的影响。</target>
        </trans-unit>
        <trans-unit id="d7e71f72e32429fd2e53309c697f208362dbb76f" translate="yes" xml:space="preserve">
          <source>Resets all of the flags to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">将所有标志重置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f0d2e32284b8664dd767d4744167c246f91973c" translate="yes" xml:space="preserve">
          <source>Resets all of the traps to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">将所有陷阱重置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cec14b1118db040cd9cad3b5e3f5d5bef19011b" translate="yes" xml:space="preserve">
          <source>Resets an element. This function removes all subelements, clears all attributes, and sets the text and tail attributes to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">重置元素。此函数删除所有子元素，清除所有属性，并将text和tail属性设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc2b17479e9f63ed33d228bfc1309dd6c8ccf270" translate="yes" xml:space="preserve">
          <source>Resets the &lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt;&lt;code&gt;mailfrom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt;&lt;code&gt;rcpttos&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt;&lt;code&gt;received_data&lt;/code&gt;&lt;/a&gt;, but not the greeting.</source>
          <target state="translated">重置&lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt; &lt;code&gt;mailfrom&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt; &lt;code&gt;rcpttos&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt; &lt;code&gt;received_data&lt;/code&gt; &lt;/a&gt;，但不是我的问候。</target>
        </trans-unit>
        <trans-unit id="66f3fb45eae86efcd59bab6111c95e6e1caa63e1" translate="yes" xml:space="preserve">
          <source>Resets the codec buffers used for keeping state.</source>
          <target state="translated">重置用于保持状态的编解码器缓冲区。</target>
        </trans-unit>
        <trans-unit id="f00d828a74e171605d55a26c1bd917706054bbac" translate="yes" xml:space="preserve">
          <source>Resets the pack buffer to the empty string.</source>
          <target state="translated">将包缓冲区重置为空字符串。</target>
        </trans-unit>
        <trans-unit id="044b0da32617b88c959d3de50339a859cd2c2bfd" translate="yes" xml:space="preserve">
          <source>Resets the scheme and fontset of the Tix application to &lt;em&gt;newScheme&lt;/em&gt; and &lt;em&gt;newFontSet&lt;/em&gt;, respectively. This affects only those widgets created after this call. Therefore, it is best to call the resetoptions method before the creation of any widgets in a Tix application.</source>
          <target state="translated">将Tix应用程序的方案和字体集分别重置为&lt;em&gt;newScheme&lt;/em&gt;和&lt;em&gt;newFontSet&lt;/em&gt;。这仅影响在此调用之后创建的那些小部件。因此，最好在Tix应用程序中创建任何窗口小部件之前调用resetoptions方法。</target>
        </trans-unit>
        <trans-unit id="8cae5ff1d026f36112c5fb96e71d4c58a9c342c7" translate="yes" xml:space="preserve">
          <source>Resets the string buffer with the given &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">使用给定&lt;em&gt;数据&lt;/em&gt;重置字符串缓冲区。</target>
        </trans-unit>
        <trans-unit id="73a3fdcc6fbb03a069d656eb3c559cde562b9732" translate="yes" xml:space="preserve">
          <source>Resize the standard and current windows to the specified dimensions, and adjusts other bookkeeping data used by the curses library that record the window dimensions (in particular the SIGWINCH handler).</source>
          <target state="translated">将标准窗口和当前窗口调整为指定的尺寸,并调整curses库使用的其他记录窗口尺寸的记账数据(特别是SIGWINCH处理程序)。</target>
        </trans-unit>
        <trans-unit id="398c98f3fdf5e169462a36c719de19829608f611" translate="yes" xml:space="preserve">
          <source>Resize the stream to the given &lt;em&gt;size&lt;/em&gt; in bytes (or the current position if &lt;em&gt;size&lt;/em&gt; is not specified). The current stream position isn&amp;rsquo;t changed. This resizing can extend or reduce the current file size. In case of extension, the contents of the new file area depend on the platform (on most systems, additional bytes are zero-filled). The new file size is returned.</source>
          <target state="translated">将流调整为给定&lt;em&gt;大小（&lt;/em&gt;以字节为单位）（如果未指定&lt;em&gt;大小，&lt;/em&gt;则调整为当前位置）。当前流的位置不变。调整大小可以扩展或减小当前文件的大小。在扩展的情况下，新文件区域的内容取决于平台（在大多数系统上，其他字节为零填充）。返回新的文件大小。</target>
        </trans-unit>
        <trans-unit id="7a200ae0b8e51597d440a10e995777ad9684ad6e" translate="yes" xml:space="preserve">
          <source>Resizes the map and the underlying file, if any. If the mmap was created with &lt;code&gt;ACCESS_READ&lt;/code&gt; or &lt;code&gt;ACCESS_COPY&lt;/code&gt;, resizing the map will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">调整地图和基础文件的大小（如果有）。如果mmap是使用 &lt;code&gt;ACCESS_READ&lt;/code&gt; 或 &lt;code&gt;ACCESS_COPY&lt;/code&gt; 创建的，则调整地图的大小将引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9b956b5d55f0a3a61228f63920470e1d90b9abda" translate="yes" xml:space="preserve">
          <source>Resolve MRO entries dynamically as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">按照&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 560的&lt;/strong&gt;&lt;/a&gt;规定动态地解析MRO条目。</target>
        </trans-unit>
        <trans-unit id="6ec18bc8e539867393a202a657b119f0742b1f3a" translate="yes" xml:space="preserve">
          <source>Resolve a name to an object.</source>
          <target state="translated">将一个名称解析为一个对象。</target>
        </trans-unit>
        <trans-unit id="538964af9fc9214c2d5ef8bd4f6f1f46a83f010a" translate="yes" xml:space="preserve">
          <source>Resolve a relative module name to an absolute one.</source>
          <target state="translated">将相对的模块名解析为绝对的模块名。</target>
        </trans-unit>
        <trans-unit id="29012c26c4602ab3af44b530bb1f1b649dd1460b" translate="yes" xml:space="preserve">
          <source>Resolve the system identifier of an entity and return either the system identifier to read from as a string, or an InputSource to read from. The default implementation returns &lt;em&gt;systemId&lt;/em&gt;.</source>
          <target state="translated">解析实体的系统标识符，然后返回要从中读取的系统标识符作为字符串，或者返回要从中读取的InputSource。默认实现返回&lt;em&gt;systemId&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="87a1fceda48e4943acc5ca76e4bba664c030543a" translate="yes" xml:space="preserve">
          <source>Resolves &lt;code&gt;__aenter__&lt;/code&gt; and &lt;code&gt;__aexit__&lt;/code&gt; from the object on top of the stack. Pushes &lt;code&gt;__aexit__&lt;/code&gt; and result of &lt;code&gt;__aenter__()&lt;/code&gt; to the stack.</source>
          <target state="translated">从堆栈顶部的对象解析 &lt;code&gt;__aenter__&lt;/code&gt; 和 &lt;code&gt;__aexit__&lt;/code&gt; 。将 &lt;code&gt;__aexit__&lt;/code&gt; 和 &lt;code&gt;__aenter__()&lt;/code&gt; 结果压入堆栈。</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="ad94287ab4f543bf10c68378e7ba19242a3df67f" translate="yes" xml:space="preserve">
          <source>Resource Limits</source>
          <target state="translated">资源限制</target>
        </trans-unit>
        <trans-unit id="eb5ad770f531d81bceb5b4f329f5aee4a234bc5f" translate="yes" xml:space="preserve">
          <source>Resource Usage</source>
          <target state="translated">资源使用</target>
        </trans-unit>
        <trans-unit id="4d2b9449646a0ee5d5e77b1f7dfdbd7898f4fbf0" translate="yes" xml:space="preserve">
          <source>Resource deadlock would occur</source>
          <target state="translated">将出现资源僵局</target>
        </trans-unit>
        <trans-unit id="8f9eda118c3329c901b866254abd2e2e237bf61e" translate="yes" xml:space="preserve">
          <source>ResourceWarning</source>
          <target state="translated">ResourceWarning</target>
        </trans-unit>
        <trans-unit id="5dc2e2738ebfc89ead527da19284b351442393fe" translate="yes" xml:space="preserve">
          <source>ResourceWarning Example</source>
          <target state="translated">资源警告示例</target>
        </trans-unit>
        <trans-unit id="01d682cb3b4c9c7e04aa56b2fcaded504578a20f" translate="yes" xml:space="preserve">
          <source>Resources are roughly akin to files inside directories, though it&amp;rsquo;s important to keep in mind that this is just a metaphor. Resources and packages &lt;strong&gt;do not&lt;/strong&gt; have to exist as physical files and directories on the file system.</source>
          <target state="translated">资源大致类似于目录中的文件，但请记住，这只是一个隐喻，这一点很重要。资源和包&lt;strong&gt;不必&lt;/strong&gt;作为文件系统上的物理文件和目录存在。</target>
        </trans-unit>
        <trans-unit id="952df5c17fa0434c089cd6a9cd4044ee0f9fa218" translate="yes" xml:space="preserve">
          <source>Resources limitations</source>
          <target state="translated">资源限制</target>
        </trans-unit>
        <trans-unit id="3cd523ca42fe0cc464dad9e525f1549425792980" translate="yes" xml:space="preserve">
          <source>Resources usage can be limited using the &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt; function described below. Each resource is controlled by a pair of limits: a soft limit and a hard limit. The soft limit is the current limit, and may be lowered or raised by a process over time. The soft limit can never exceed the hard limit. The hard limit can be lowered to any value greater than the soft limit, but not raised. (Only processes with the effective UID of the super-user can raise a hard limit.)</source>
          <target state="translated">可以使用下面描述的&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; &lt;/a&gt;函数来限制资源使用。每个资源由一对限制控制：一个软限制和一个硬限制。软极限是当前极限，并且可以随着时间的流逝而降低或升高。软限制永远不能超过硬限制。硬限制可以降低到大于软限制的任何值，但不能提高。（只有具有超级用户有效UID的进程才能提出硬限制。）</target>
        </trans-unit>
        <trans-unit id="b134bd555a2f6ec5313c1b2a225b2c17f3409351" translate="yes" xml:space="preserve">
          <source>Restart</source>
          <target state="translated">Restart</target>
        </trans-unit>
        <trans-unit id="03f21bbdceb66c45dcb2adb701db2f44c7357d8c" translate="yes" xml:space="preserve">
          <source>Restart Shell</source>
          <target state="translated">重新启动Shell</target>
        </trans-unit>
        <trans-unit id="0170bf6e5dedfff27ec63e28fb126f1b886f33d5" translate="yes" xml:space="preserve">
          <source>Restart the debugged Python program. If an argument is supplied, it is split with &lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; and the result is used as the new &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;. History, breakpoints, actions and debugger options are preserved. &lt;a href=&quot;#pdbcommand-restart&quot;&gt;&lt;code&gt;restart&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#pdbcommand-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重新启动调试的Python程序。如果提供了参数，则使用&lt;a href=&quot;shlex#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;对其进行拆分，并将结果用作新的&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;。历史记录，断点，操作和调试器选项将保留。&lt;a href=&quot;#pdbcommand-restart&quot;&gt; &lt;code&gt;restart&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;#pdbcommand-run&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="e8fcc6a6eb40e50298cf8a478a3ef3652128987d" translate="yes" xml:space="preserve">
          <source>Restart the shell to clean the environment.</source>
          <target state="translated">重新启动shell清理环境。</target>
        </trans-unit>
        <trans-unit id="d42d159b708025b291e1da2884f94a2352410978" translate="yes" xml:space="preserve">
          <source>Restore a pipeline template to its initial state.</source>
          <target state="translated">将管道模板恢复到初始状态。</target>
        </trans-unit>
        <trans-unit id="b3ec860cbb39734f68116981c7f3157f2a1f0672" translate="yes" xml:space="preserve">
          <source>Restore the state of the terminal modes to what it was at the last call to &lt;a href=&quot;#curses.savetty&quot;&gt;&lt;code&gt;savetty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将终端模式的状态恢复为上次调用&lt;a href=&quot;#curses.savetty&quot;&gt; &lt;code&gt;savetty()&lt;/code&gt; 时的状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="792c573b37fffed7f82b062bf143b623c4aee0ca" translate="yes" xml:space="preserve">
          <source>Restore the terminal to &amp;ldquo;program&amp;rdquo; mode, as previously saved by &lt;a href=&quot;#curses.def_prog_mode&quot;&gt;&lt;code&gt;def_prog_mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将终端恢复为&amp;ldquo;编程&amp;rdquo;模式，如&lt;a href=&quot;#curses.def_prog_mode&quot;&gt; &lt;code&gt;def_prog_mode()&lt;/code&gt; &lt;/a&gt;先前保存的那样。</target>
        </trans-unit>
        <trans-unit id="135c8a8213da8e5c924e31ee56c0f0f870235da7" translate="yes" xml:space="preserve">
          <source>Restore the terminal to &amp;ldquo;shell&amp;rdquo; mode, as previously saved by &lt;a href=&quot;#curses.def_shell_mode&quot;&gt;&lt;code&gt;def_shell_mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将终端恢复到先前由&lt;a href=&quot;#curses.def_shell_mode&quot;&gt; &lt;code&gt;def_shell_mode()&lt;/code&gt; &lt;/a&gt;保存的&amp;ldquo;外壳&amp;rdquo;模式。</target>
        </trans-unit>
        <trans-unit id="128dc033b3de8940ac751576e32635b794a43280" translate="yes" xml:space="preserve">
          <source>Restores registry reflection for the specified disabled key.</source>
          <target state="translated">恢复指定禁用键的注册表反射。</target>
        </trans-unit>
        <trans-unit id="b4c3c9ca59c5924842f244c0b9284beb12cfa8f8" translate="yes" xml:space="preserve">
          <source>Restoring reflection for a key does not affect reflection of any subkeys.</source>
          <target state="translated">恢复一个键的反射不会影响任何子键的反射。</target>
        </trans-unit>
        <trans-unit id="bd0ba95788d644d964009d5cea8331eabcad0285" translate="yes" xml:space="preserve">
          <source>Restrict the process with PID &lt;em&gt;pid&lt;/em&gt; (or the current process if zero) to a set of CPUs. &lt;em&gt;mask&lt;/em&gt; is an iterable of integers representing the set of CPUs to which the process should be restricted.</source>
          <target state="translated">将具有PID &lt;em&gt;pid&lt;/em&gt;的进程（或当前进程，如果为零）限制为一组CPU。&lt;em&gt;mask&lt;/em&gt;是一个整数的可迭代整数，表示应将进程限制在其中的一组CPU。</target>
        </trans-unit>
        <trans-unit id="a4a29805bf07a828822ba0c7adcbce23dc492db0" translate="yes" xml:space="preserve">
          <source>Restricted Enum subclassing</source>
          <target state="translated">受限制的Enum子类</target>
        </trans-unit>
        <trans-unit id="a676ac7e79ad3c5c290bc9102846f4c905e92a43" translate="yes" xml:space="preserve">
          <source>Restricting Globals</source>
          <target state="translated">限制全局</target>
        </trans-unit>
        <trans-unit id="38ad8517f1dfe99e4d87fbdbdd90a3a14b28b872" translate="yes" xml:space="preserve">
          <source>Restrictions</source>
          <target state="translated">Restrictions</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="5fc0d872845900695d1aacbae68cabdda6ce0c26" translate="yes" xml:space="preserve">
          <source>Result of a &lt;a href=&quot;#inspect.Signature.bind&quot;&gt;&lt;code&gt;Signature.bind()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#inspect.Signature.bind_partial&quot;&gt;&lt;code&gt;Signature.bind_partial()&lt;/code&gt;&lt;/a&gt; call. Holds the mapping of arguments to the function&amp;rsquo;s parameters.</source>
          <target state="translated">结果一的&lt;a href=&quot;#inspect.Signature.bind&quot;&gt; &lt;code&gt;Signature.bind()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#inspect.Signature.bind_partial&quot;&gt; &lt;code&gt;Signature.bind_partial()&lt;/code&gt; &lt;/a&gt;调用。保存参数到函数参数的映射。</target>
        </trans-unit>
        <trans-unit id="d0319b4be8f8ccc2e624bd9fc79e89eb10988a19" translate="yes" xml:space="preserve">
          <source>Resulting state</source>
          <target state="translated">结果状态</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="b3bd0b5a70497bec4a02b7eb1cb0d4f37eb71a2a" translate="yes" xml:space="preserve">
          <source>Resume</source>
          <target state="translated">Resume</target>
        </trans-unit>
        <trans-unit id="bf13ff44cb63a5d98e2fca09672119bbe81ec70c" translate="yes" xml:space="preserve">
          <source>Resume receiving.</source>
          <target state="translated">恢复接收。</target>
        </trans-unit>
        <trans-unit id="8d3cbbc0d36eb6d20bd89c0c8f2ff4faa2ee23fe" translate="yes" xml:space="preserve">
          <source>Resume the receiving end. The protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;protocol.data_received()&lt;/code&gt;&lt;/a&gt; method will be called once again if some data is available for reading.</source>
          <target state="translated">恢复接收端。如果可以读取某些数据，则将再次调用该协议的&lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt; &lt;code&gt;protocol.data_received()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="291ae6be2810be551f611099e9b589dcbf775f3d" translate="yes" xml:space="preserve">
          <source>Retrieve CRLs from Windows&amp;rsquo; system cert store. &lt;em&gt;store_name&lt;/em&gt; may be one of &lt;code&gt;CA&lt;/code&gt;, &lt;code&gt;ROOT&lt;/code&gt; or &lt;code&gt;MY&lt;/code&gt;. Windows may provide additional cert stores, too.</source>
          <target state="translated">从Windows的系统证书库中检索CRL。&lt;em&gt;store_name&lt;/em&gt;可以是 &lt;code&gt;CA&lt;/code&gt; ， &lt;code&gt;ROOT&lt;/code&gt; 或 &lt;code&gt;MY&lt;/code&gt; 之一。Windows也可能提供其他证书存储。</target>
        </trans-unit>
        <trans-unit id="649098a342c4ca3d937a57f90e977ebe92cb6e31" translate="yes" xml:space="preserve">
          <source>Retrieve a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the given &lt;em&gt;path_item&lt;/em&gt;.</source>
          <target state="translated">检索给定&lt;em&gt;path_item&lt;/em&gt;的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;查找器&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06b343a0db8a509a67e042a624fd2e09dfe1afe2" translate="yes" xml:space="preserve">
          <source>Retrieve a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the given &lt;em&gt;path_item&lt;/em&gt;.</source>
          <target state="translated">检索给定&lt;em&gt;path_item&lt;/em&gt;的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;查找器&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6554c02652259ef954b1555abdf92c24fa021171" translate="yes" xml:space="preserve">
          <source>Retrieve a file in binary transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command: &lt;code&gt;'RETR filename'&lt;/code&gt;. The &lt;em&gt;callback&lt;/em&gt; function is called for each block of data received, with a single bytes argument giving the data block. The optional &lt;em&gt;blocksize&lt;/em&gt; argument specifies the maximum chunk size to read on the low-level socket object created to do the actual transfer (which will also be the largest size of the data blocks passed to &lt;em&gt;callback&lt;/em&gt;). A reasonable default is chosen. &lt;em&gt;rest&lt;/em&gt; means the same thing as in the &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以二进制传输模式检索文件。&lt;em&gt;cmd&lt;/em&gt;应该是适当的 &lt;code&gt;RETR&lt;/code&gt; 命令： &lt;code&gt;'RETR filename'&lt;/code&gt; 。该&lt;em&gt;回调&lt;/em&gt;函数被调用用于接收，与单个字节参数给出数据块的每个数据块。可选的&lt;em&gt;blocksize&lt;/em&gt;参数指定在创建进行实际传输的低级套接字对象上读取的最大块大小（这也是传递给&lt;em&gt;callback&lt;/em&gt;的数据块的最大大小）。选择一个合理的默认值。&lt;em&gt;rest的&lt;/em&gt;含义与&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;方法相同。</target>
        </trans-unit>
        <trans-unit id="403a1578829a239110dcbec03c2d403a31503e65" translate="yes" xml:space="preserve">
          <source>Retrieve a file or directory listing in ASCII transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt;&lt;code&gt;retrbinary()&lt;/code&gt;&lt;/a&gt;) or a command such as &lt;code&gt;LIST&lt;/code&gt; or &lt;code&gt;NLST&lt;/code&gt; (usually just the string &lt;code&gt;'LIST'&lt;/code&gt;). &lt;code&gt;LIST&lt;/code&gt; retrieves a list of files and information about those files. &lt;code&gt;NLST&lt;/code&gt; retrieves a list of file names. The &lt;em&gt;callback&lt;/em&gt; function is called for each line with a string argument containing the line with the trailing CRLF stripped. The default &lt;em&gt;callback&lt;/em&gt; prints the line to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">以ASCII传输模式检索文件或目录列表。&lt;em&gt;cmd&lt;/em&gt;应该是适当的 &lt;code&gt;RETR&lt;/code&gt; 命令（请参阅&lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt; &lt;code&gt;retrbinary()&lt;/code&gt; &lt;/a&gt;）或诸如 &lt;code&gt;LIST&lt;/code&gt; 或 &lt;code&gt;NLST&lt;/code&gt; 之类的命令（通常只是字符串 &lt;code&gt;'LIST'&lt;/code&gt; ）。 &lt;code&gt;LIST&lt;/code&gt; 检索文件列表以及有关这些文件的信息。 &lt;code&gt;NLST&lt;/code&gt; 检索文件名列表。该&lt;em&gt;回调&lt;/em&gt;函数被调用用于与含有与后CRLF剥离行字符串参数的每一行。默认&lt;em&gt;回调&lt;/em&gt;将行打印到 &lt;code&gt;sys.stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2a88b305ebc7b5b00700b8d401c79669327e470" translate="yes" xml:space="preserve">
          <source>Retrieve a file or directory listing in the encoding specified by the &lt;em&gt;encoding&lt;/em&gt; parameter at initialization. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt;&lt;code&gt;retrbinary()&lt;/code&gt;&lt;/a&gt;) or a command such as &lt;code&gt;LIST&lt;/code&gt; or &lt;code&gt;NLST&lt;/code&gt; (usually just the string &lt;code&gt;'LIST'&lt;/code&gt;). &lt;code&gt;LIST&lt;/code&gt; retrieves a list of files and information about those files. &lt;code&gt;NLST&lt;/code&gt; retrieves a list of file names. The &lt;em&gt;callback&lt;/em&gt; function is called for each line with a string argument containing the line with the trailing CRLF stripped. The default &lt;em&gt;callback&lt;/em&gt; prints the line to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">初始化时，以&lt;em&gt;encoding&lt;/em&gt;参数指定的&lt;em&gt;编码&lt;/em&gt;检索文件或目录列表。&lt;em&gt;cmd&lt;/em&gt;应该是适当的 &lt;code&gt;RETR&lt;/code&gt; 命令（请参阅&lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt; &lt;code&gt;retrbinary()&lt;/code&gt; &lt;/a&gt;）或 &lt;code&gt;LIST&lt;/code&gt; 或 &lt;code&gt;NLST&lt;/code&gt; 之类的命令（通常只是字符串 &lt;code&gt;'LIST'&lt;/code&gt; ）。 &lt;code&gt;LIST&lt;/code&gt; 检索文件列表以及有关这些文件的信息。 &lt;code&gt;NLST&lt;/code&gt; 检索文件名列表。该&lt;em&gt;回调&lt;/em&gt;函数被调用用于与含有与后CRLF剥离行字符串参数的每一行。默认&lt;em&gt;回调&lt;/em&gt;将行打印到 &lt;code&gt;sys.stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34e4ce9007d9fe4d7db869d382b75d7b77760830" translate="yes" xml:space="preserve">
          <source>Retrieve a given field value. The &lt;em&gt;key&lt;/em&gt; argument will be either an integer or a string. If it is an integer, it represents the index of the positional argument in &lt;em&gt;args&lt;/em&gt;; if it is a string, then it represents a named argument in &lt;em&gt;kwargs&lt;/em&gt;.</source>
          <target state="translated">检索给定的字段值。的&lt;em&gt;关键&lt;/em&gt;参数将是一个整数或字符串。如果是整数，则表示&lt;em&gt;args&lt;/em&gt;中的位置参数的索引。如果是字符串，则表示&lt;em&gt;kwargs中&lt;/em&gt;的命名参数。</target>
        </trans-unit>
        <trans-unit id="ddb345d237bdc2e27d9ef8f67a70e7322321eb04" translate="yes" xml:space="preserve">
          <source>Retrieve a module &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the given &lt;em&gt;fullname&lt;/em&gt;.</source>
          <target state="translated">检索给定&lt;em&gt;全名&lt;/em&gt;的模块&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载器&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da3784969075ecad2bec4795269bc2e4297b68a0" translate="yes" xml:space="preserve">
          <source>Retrieve a module &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the given &lt;em&gt;fullname&lt;/em&gt;.</source>
          <target state="translated">检索给定&lt;em&gt;全名&lt;/em&gt;的模块&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;加载器&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8919bef3324bc95bc2bf3497e6f00f66069fe0ac" translate="yes" xml:space="preserve">
          <source>Retrieve an attribute of the font.</source>
          <target state="translated">检索字体的属性。</target>
        </trans-unit>
        <trans-unit id="e555659165e22b46f6feb4470ecdaa9807473caf" translate="yes" xml:space="preserve">
          <source>Retrieve attributes without triggering dynamic lookup via the descriptor protocol, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过描述符协议&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;检索属性而无需触发动态查找。</target>
        </trans-unit>
        <trans-unit id="cb4100592b2231679bc7716f8215bd30fd0fa3df" translate="yes" xml:space="preserve">
          <source>Retrieve attributes without triggering dynamic lookup via the descriptor protocol, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过描述符协议&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;检索属性而无需触发动态查找。</target>
        </trans-unit>
        <trans-unit id="095f446af8551d23d2a1674c7e2a391418e4bf4f" translate="yes" xml:space="preserve">
          <source>Retrieve certificates from Windows&amp;rsquo; system cert store. &lt;em&gt;store_name&lt;/em&gt; may be one of &lt;code&gt;CA&lt;/code&gt;, &lt;code&gt;ROOT&lt;/code&gt; or &lt;code&gt;MY&lt;/code&gt;. Windows may provide additional cert stores, too.</source>
          <target state="translated">从Windows的系统证书库中检索证书。&lt;em&gt;store_name&lt;/em&gt;可以是 &lt;code&gt;CA&lt;/code&gt; ， &lt;code&gt;ROOT&lt;/code&gt; 或 &lt;code&gt;MY&lt;/code&gt; 之一。Windows也可能提供其他证书存储。</target>
        </trans-unit>
        <trans-unit id="24312e283e6a9618ce207282ee3080d2bfc8ce86" translate="yes" xml:space="preserve">
          <source>Retrieve the currently selected item.</source>
          <target state="translated">检索当前选中的项目。</target>
        </trans-unit>
        <trans-unit id="b0de8ed0cc7910fcfaba0e2f18f4aaa4b647ad9e" translate="yes" xml:space="preserve">
          <source>Retrieve the file filter currently in use.</source>
          <target state="translated">检索当前使用的文件过滤器。</target>
        </trans-unit>
        <trans-unit id="8ccfa542fbbdb7bda5d2e0ee405c1ff561d2dfc4" translate="yes" xml:space="preserve">
          <source>Retrieve the next item from the &lt;em&gt;iterator&lt;/em&gt; by calling its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method. If &lt;em&gt;default&lt;/em&gt; is given, it is returned if the iterator is exhausted, otherwise &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">通过调用其&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法从&lt;em&gt;迭代器中&lt;/em&gt;检索下一项。如果给定&lt;em&gt;默认值&lt;/em&gt;，则在迭代器耗尽时返回它，否则引发&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3960139ac0ae3868793691905f6a343b2c0c77ad" translate="yes" xml:space="preserve">
          <source>Retrieve the specified &lt;code&gt;ANNOTATION&lt;/code&gt;s for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">检索指定的 &lt;code&gt;ANNOTATION&lt;/code&gt; S代表&lt;em&gt;邮箱&lt;/em&gt;。该方法是非标准的，但 &lt;code&gt;Cyrus&lt;/code&gt; 服务器支持。</target>
        </trans-unit>
        <trans-unit id="6db53bb97bca1b73a57fd8d7aaab895090eadc3b" translate="yes" xml:space="preserve">
          <source>Retrieve whole message number &lt;em&gt;which&lt;/em&gt;, and set its seen flag. Result is in form &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt;.</source>
          <target state="translated">检索整个消息号&lt;em&gt;，其&lt;/em&gt;，并设置其可见标志。结果的格式为 &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dab3e703a390019191d739774a97d6d6c3d1910" translate="yes" xml:space="preserve">
          <source>Retrieves the contents of &lt;em&gt;url&lt;/em&gt; and places it in &lt;em&gt;filename&lt;/em&gt;. The return value is a tuple consisting of a local filename and either an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; object containing the response headers (for remote URLs) or &lt;code&gt;None&lt;/code&gt; (for local URLs). The caller must then open and read the contents of &lt;em&gt;filename&lt;/em&gt;. If &lt;em&gt;filename&lt;/em&gt; is not given and the URL refers to a local file, the input filename is returned. If the URL is non-local and &lt;em&gt;filename&lt;/em&gt; is not given, the filename is the output of &lt;a href=&quot;tempfile#tempfile.mktemp&quot;&gt;&lt;code&gt;tempfile.mktemp()&lt;/code&gt;&lt;/a&gt; with a suffix that matches the suffix of the last path component of the input URL. If &lt;em&gt;reporthook&lt;/em&gt; is given, it must be a function accepting three numeric parameters: A chunk number, the maximum size chunks are read in and the total size of the download (-1 if unknown). It will be called once at the start and after each chunk of data is read from the network. &lt;em&gt;reporthook&lt;/em&gt; is ignored for local URLs.</source>
          <target state="translated">检索&lt;em&gt;url&lt;/em&gt;的内容并将其放在&lt;em&gt;filename中&lt;/em&gt;。返回值是一个由本地文件名和包含响应头（对于远程URL）或 &lt;code&gt;None&lt;/code&gt; （对于本地URL）的&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;对象组成的元组。然后，调用者必须打开并读取&lt;em&gt;filename&lt;/em&gt;的内容。如果未提供&lt;em&gt;文件名&lt;/em&gt;，并且URL指向本地文件，则返回输入文件名。如果URL非本地和&lt;em&gt;文件名&lt;/em&gt;没有给出，则该文件的输出&lt;a href=&quot;tempfile#tempfile.mktemp&quot;&gt; &lt;code&gt;tempfile.mktemp()&lt;/code&gt; &lt;/a&gt;与输入URL的最后一个路径成分的后缀匹配的后缀。如果报告&lt;em&gt;钩&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;给定，它必须是一个接受三个数字参数的函数：块号，最大块数被读取以及下载的总大小（如果未知，则为-1）。在开始时以及从网络读取每个数据块之后，它将调用一次。对于本地URL，将忽略&lt;em&gt;reporthook&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="385d63055e6af1c2077e2fd207836302b9c7e071" translate="yes" xml:space="preserve">
          <source>Retrieves the message header plus &lt;em&gt;howmuch&lt;/em&gt; lines of the message after the header of message number &lt;em&gt;which&lt;/em&gt;. Result is in form &lt;code&gt;(response, ['line', ...],
octets)&lt;/code&gt;.</source>
          <target state="translated">检索消息首部加上&lt;em&gt;howmuch&lt;/em&gt;的消息号的报头之后的消息的线&lt;em&gt;哪个&lt;/em&gt;。结果的格式为 &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b9010bcfc3cfcd8b404b1f0d738ea82a1a9e695" translate="yes" xml:space="preserve">
          <source>Retrieves the specialized header associated with &lt;em&gt;name&lt;/em&gt; from the registry (using &lt;em&gt;default_class&lt;/em&gt; if &lt;em&gt;name&lt;/em&gt; does not appear in the registry) and composes it with &lt;em&gt;base_class&lt;/em&gt; to produce a class, calls the constructed class&amp;rsquo;s constructor, passing it the same argument list, and finally returns the class instance created thereby.</source>
          <target state="translated">从注册表中检索与&lt;em&gt;名称&lt;/em&gt;关联的专用标头（如果&lt;em&gt;名称&lt;/em&gt;未出现在注册表中，则使用&lt;em&gt;default_class&lt;/em&gt;），并将其与&lt;em&gt;base_class&lt;/em&gt;组合以生成一个类，调用构造的类的构造函数，将其传递给相同的参数列表，最后返回该类由此创建的实例。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b535a36014b3e3d0d355c23706e49c2322351aa" translate="yes" xml:space="preserve">
          <source>Retrieves the type and data for a specified value name associated with an open registry key.</source>
          <target state="translated">检索与打开的注册表键相关联的指定值名称的类型和数据。</target>
        </trans-unit>
        <trans-unit id="c7066d204c02602ef3b97ae65a6595bc017e2020" translate="yes" xml:space="preserve">
          <source>Retrieves the unnamed value for a key, as a string.</source>
          <target state="translated">检索一个键的未命名值,作为一个字符串。</target>
        </trans-unit>
        <trans-unit id="587ed14e9a3d458f00e2e528b8587f02619e6ac3" translate="yes" xml:space="preserve">
          <source>Retrieves the value set by &lt;a href=&quot;#curses.set_escdelay&quot;&gt;&lt;code&gt;set_escdelay()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检索&lt;a href=&quot;#curses.set_escdelay&quot;&gt; &lt;code&gt;set_escdelay()&lt;/code&gt; &lt;/a&gt;设置的值。</target>
        </trans-unit>
        <trans-unit id="fb690ad09aa8321e2219ddb1fecb43562f45b4c9" translate="yes" xml:space="preserve">
          <source>Retrieves the value set by &lt;a href=&quot;#curses.set_tabsize&quot;&gt;&lt;code&gt;set_tabsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检索&lt;a href=&quot;#curses.set_tabsize&quot;&gt; &lt;code&gt;set_tabsize()&lt;/code&gt; &lt;/a&gt;设置的值。</target>
        </trans-unit>
        <trans-unit id="0a12de40909dd920a73fcf3dee7b8791a3030550" translate="yes" xml:space="preserve">
          <source>Retrieving source code</source>
          <target state="translated">检索源代码</target>
        </trans-unit>
        <trans-unit id="8489002e10280e19aeb925f9b1cf2bf436a33f09" translate="yes" xml:space="preserve">
          <source>Retry the request with authentication information, if available.</source>
          <target state="translated">如果有认证信息,请重新尝试请求。</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="92d58116afd8a3734b15b3a4bf9d7a231cbdbab3" translate="yes" xml:space="preserve">
          <source>Return (bytes, is_cryptographic): bytes are &lt;em&gt;num&lt;/em&gt; pseudo-random bytes, is_cryptographic is &lt;code&gt;True&lt;/code&gt; if the bytes generated are cryptographically strong. Raises an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if the operation is not supported by the current RAND method.</source>
          <target state="translated">返回值（字节，is_cryptographic）：字节是&lt;em&gt;num个&lt;/em&gt;伪随机字节，如果生成的字节在密码上很强，则is_cryptographic为 &lt;code&gt;True&lt;/code&gt; 。如果当前RAND方法不支持该操作，则引发&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3498aeacce2a34d6a0b6d6230500f8e683513a49" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object with same year, month and day.</source>
          <target state="translated">返回具有相同年份，月份和&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="70f09a6299864364a55efc6ab7b739eacc94902c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object with same hour, minute, second, microsecond and fold. &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;. See also method &lt;a href=&quot;#datetime.datetime.timetz&quot;&gt;&lt;code&gt;timetz()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回具有相同小时，分钟，秒，微秒和倍数的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象。&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;None&lt;/code&gt; 。另请参见&lt;a href=&quot;#datetime.datetime.timetz&quot;&gt; &lt;code&gt;timetz()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f8f39d2001e59b40bf2e984998187dd7a44afb78" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object with same hour, minute, second, microsecond, fold, and tzinfo attributes. See also method &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回具有相同小时，分钟，秒，微秒，倍数和tzinfo属性的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象。另请参见&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0285753e7269b18b9d11ac29cc151c28e2ca833a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or the sequence of allowed domains (as a tuple).</source>
          <target state="translated">返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;或允许的域序列（作为元组）。</target>
        </trans-unit>
        <trans-unit id="7af064dbad7a00c0b1a87689c780ecae0d15d13a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is a tar archive file, that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module can read.</source>
          <target state="translated">如果&lt;em&gt;name&lt;/em&gt;是&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块可以读取的tar存档文件，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfe065b0df600028f9292a806af50dd8f531add6" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is a tar archive file, that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module can read. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, file, or file-like object.</source>
          <target state="translated">如果&lt;em&gt;name&lt;/em&gt;是&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块可以读取的tar存档文件，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;名称&lt;/em&gt;可以是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，文件或类似文件的对象。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="093368eba3cb25719ed94f851fc393590fdf6de9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is in the set of SMTP service extensions returned by the server, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Case is ignored.</source>
          <target state="translated">如果&lt;em&gt;名称&lt;/em&gt;在服务器返回的SMTP服务扩展集中，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。大小写被忽略。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e94b8938ece9e8b213ea593cb155099ca78f037" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;obj&lt;/em&gt; is true, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. This is equivalent to using the &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">如果&lt;em&gt;obj&lt;/em&gt;为true，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。这等效于使用&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;构造函数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24fd644ca1d49b92dfc4713ccf90fe040848fc46" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a FIFO.</source>
          <target state="translated">如果是FIFO，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81cd5e95f0922a185d61fa908fc4e1e1cdfe7f5f" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a block device.</source>
          <target state="translated">如果它是块设备，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a5e12c63024db3962cbd1c2f1797b30783c11b9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a character device.</source>
          <target state="translated">如果它是字符设备，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f220814202d4e857c68fe2f395e63adc3cf27cc9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a directory.</source>
          <target state="translated">如果它是目录，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6150561205505991387a58a2d577338831483f9c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a hard link.</source>
          <target state="translated">如果是硬链接，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c53122f3b26b98d323738f4ac4df134b1caeaf6e" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a symbolic link.</source>
          <target state="translated">如果它是符号链接，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f23a3800d797c6e6f2d151aebb523b368e45adc6" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is one of character device, block device or FIFO.</source>
          <target state="translated">如果它是字符设备，块设备或FIFO之一，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea6c7e02552f697e35babcdd2d4bfef42f279cb1" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;Tarinfo&lt;/code&gt; object is a regular file.</source>
          <target state="translated">如果 &lt;code&gt;Tarinfo&lt;/code&gt; 对象是常规文件，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2abebad43ed00422c6027529f028a85489fd8b40" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;object&lt;/em&gt; argument appears callable, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not. If this returns &lt;code&gt;True&lt;/code&gt;, it is still possible that a call fails, but if it is &lt;code&gt;False&lt;/code&gt;, calling &lt;em&gt;object&lt;/em&gt; will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果&lt;em&gt;对象&lt;/em&gt;参数可调用，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ;&lt;/a&gt;否则，则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。如果返回 &lt;code&gt;True&lt;/code&gt; ，则调用仍然可能失败，但是如果返回 &lt;code&gt;False&lt;/code&gt; ，则调用&lt;em&gt;对象&lt;/em&gt;将永远不会成功。注意，类是可调用的（调用一个类将返回一个新实例）。如果实例的类具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;方法，则这些实例是可调用的。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a41c1ab09e831d4ee7da0cc2ff95a5a646c80317" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;object&lt;/em&gt; argument appears callable, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not. If this returns &lt;code&gt;True&lt;/code&gt;, it is still possible that a call fails, but if it is &lt;code&gt;False&lt;/code&gt;, calling &lt;em&gt;object&lt;/em&gt; will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果&lt;em&gt;对象&lt;/em&gt;参数可调用，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ;&lt;/a&gt;否则，则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。如果返回 &lt;code&gt;True&lt;/code&gt; ，则调用仍然有可能失败，但是如果返回 &lt;code&gt;False&lt;/code&gt; ，则调用&lt;em&gt;对象&lt;/em&gt;将永远不会成功。注意，类是可调用的（调用一个类将返回一个新实例）。如果实例的类具有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;方法，则这些实例是可调用的。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b250f27498f743473d64af0630b859fa31e2ff93" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the Python interpreter is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;shutting down&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果Python解释器正在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;关闭&lt;/a&gt;，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6384212a3be99a675a4716a4fbd9659b9c06f920" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the Python interpreter is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;shutting down&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果Python解释器正在&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;关闭&lt;/a&gt;，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfe6649437d1f19f39f569f1bb27687988e65f55" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument has a negative sign and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Note that zeros and NaNs can both carry signs.</source>
          <target state="translated">如果参数带有负号，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。请注意，零和NaN都可以携带符号。</target>
        </trans-unit>
        <trans-unit id="f12d5608b79473f8379a1ead78cdeb9bd426454a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a (positive or negative) zero and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数为零（正数或负数），则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="601693ce8ca7356e92f067e8ea52c52cdb12670b" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a (quiet or signaling) NaN and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数是（安静或信令）NaN，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4930ff573a7bad0aecc492db9aebbf1393590af4" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a &lt;em&gt;normal&lt;/em&gt; finite number. Return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if the argument is zero, subnormal, infinite or a NaN.</source>
          <target state="translated">如果参数是一个&lt;em&gt;普通的&lt;/em&gt;有限数，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。如果参数为零，次正规，无限或NaN，则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65323e12210e87344092d755064aa0886a22fb00" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a finite number, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if the argument is an infinity or a NaN.</source>
          <target state="translated">如果参数为有限数，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ;&lt;/a&gt;如果参数为无穷大或NaN ，则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc910198797e97ee0573c35ef24209b1a5e24ac3" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a quiet NaN, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数是一个安静的NaN，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86ba126a70bb610fab44c2dca4a0f2d1c5462567" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a signaling NaN and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数是信号NaN，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="838b03440dd12c5952d25816baf47c64d10abdf4" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is canonical and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Currently, a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance is always canonical, so this operation always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果参数规范，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。当前，&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例始终是规范的，因此此操作始终返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dad937519bc5eb8dff85d0c0be025f80eebe2519" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is either positive or negative infinity and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数是正无穷大或负无穷大，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ,&lt;/a&gt;否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7969a9d1bcae3866adb865cb0ec86c576363c00c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is subnormal, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">如果参数是次正规的，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，否则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97ccedce3e6307e9a0bc7160b29f2555e7299cee" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the transport supports &lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt;&lt;code&gt;write_eof()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not.</source>
          <target state="translated">如果传输支持&lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt; &lt;code&gt;write_eof()&lt;/code&gt; &lt;/a&gt;，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ;&lt;/a&gt;否则，返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26514045ec9a1ff63702fb3558eff12b5735fd29" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the transport supports sending EOF.</source>
          <target state="translated">如果传输支持发送EOF，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46b2d3c933291bb12517fa733d54850c62c10276" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the entire contents of the buffer.</source>
          <target state="translated">返回包含缓冲区全部内容的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c1556ddf94acefe00bb3b6df3badf33a08c7fa8" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;struct#struct.calcsize&quot;&gt;&lt;code&gt;struct.calcsize()&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;nPn{fmt}0n&lt;/code&gt; or, if &lt;code&gt;gettotalrefcount&lt;/code&gt; exists, &lt;code&gt;2PnPn{fmt}0P&lt;/code&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;struct#struct.calcsize&quot;&gt; &lt;code&gt;struct.calcsize()&lt;/code&gt; &lt;/a&gt;，返回nPn &lt;code&gt;nPn{fmt}0n&lt;/code&gt; ，如果存在 &lt;code&gt;2PnPn{fmt}0P&lt;/code&gt; ，则 &lt;code&gt;gettotalrefcount&lt;/code&gt; 2PnPn {fmt} 0P。</target>
        </trans-unit>
        <trans-unit id="316b341c2f5ad47d174f9abfb2aac9792d9b68ca" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;struct#struct.calcsize&quot;&gt;&lt;code&gt;struct.calcsize()&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;nP{fmt}0n&lt;/code&gt; or, if &lt;code&gt;gettotalrefcount&lt;/code&gt; exists, &lt;code&gt;2PnP{fmt}0P&lt;/code&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;struct#struct.calcsize&quot;&gt; &lt;code&gt;struct.calcsize()&lt;/code&gt; &lt;/a&gt;用于 &lt;code&gt;nP{fmt}0n&lt;/code&gt; 或，如果 &lt;code&gt;gettotalrefcount&lt;/code&gt; 存在， &lt;code&gt;2PnP{fmt}0P&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1d847ed232bb9cad52d07be25cff747a7b7f262" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(exitcode, output)&lt;/code&gt; of executing &lt;em&gt;cmd&lt;/em&gt; in a shell.</source>
          <target state="translated">在外壳中返回执行&lt;em&gt;cmd的&lt;/em&gt; &lt;code&gt;(exitcode, output)&lt;/code&gt; 退出代码，输出）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de1dcaa07d00a86d3004a1250464c4533d42159d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(failure_count, test_count)&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;(failure_count, test_count)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a91d7a0d4c56e2705fb7930bba2ebcd2668de723" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Decimal(10)&lt;/code&gt;, the radix (base) in which the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; class does all its arithmetic. Included for compatibility with the specification.</source>
          <target state="translated">返回 &lt;code&gt;Decimal(10)&lt;/code&gt; ，即&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;类在其中进行所有算术运算的基数（基数）。包括在内是为了与规范兼容。</target>
        </trans-unit>
        <trans-unit id="ed8e84ba2b1892a25a3e2e7b13b185f76884fb13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;False&lt;/code&gt; if cookies should not be returned, given cookie domain.</source>
          <target state="translated">如果给定cookie域，则不应返回cookie，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40ddb6e4525f3314dcdd8fb22aec4667c7f51a61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;False&lt;/code&gt; if cookies should not be returned, given cookie path.</source>
          <target state="translated">如果给定cookie路径，不应该返回cookie，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1a79045f8cf2a891e5fa086886c4c8940e81a94" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; to request a normal &lt;code&gt;250 Ok&lt;/code&gt; response; otherwise return the desired response string in &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt; format.</source>
          <target state="translated">返回 &lt;code&gt;None&lt;/code&gt; 以请求正常的 &lt;code&gt;250 Ok&lt;/code&gt; 响应；否则，以&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;格式返回所需的响应字符串。</target>
        </trans-unit>
        <trans-unit id="8c178f2f5253c6efc74e592899d5ef8bd2adda80" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for ignorable characters. The character &lt;em&gt;ch&lt;/em&gt; is ignorable if &lt;em&gt;ch&lt;/em&gt; is a space or tab, otherwise it is not ignorable. Used as a default for parameter &lt;em&gt;charjunk&lt;/em&gt; in &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于可忽略字符返回 &lt;code&gt;True&lt;/code&gt; 。如果&lt;em&gt;ch&lt;/em&gt;是空格或制表符，则字符&lt;em&gt;ch&lt;/em&gt;是可忽略的，否则它是不可忽略的。作为参数的默认&lt;em&gt;charjunk&lt;/em&gt;在&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50ce3787d5c52cc992d4f0d4d3fe8ca17603e1e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for ignorable lines. The line &lt;em&gt;line&lt;/em&gt; is ignorable if &lt;em&gt;line&lt;/em&gt; is blank or contains a single &lt;code&gt;'#'&lt;/code&gt;, otherwise it is not ignorable. Used as a default for parameter &lt;em&gt;linejunk&lt;/em&gt; in &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; in older versions.</source>
          <target state="translated">对于可忽略的行，返回 &lt;code&gt;True&lt;/code&gt; 。线&lt;em&gt;线&lt;/em&gt;是可忽略的，如果&lt;em&gt;线&lt;/em&gt;为空或包含一个 &lt;code&gt;'#'&lt;/code&gt; ，否则就不是忽略。在较早的版本中，它&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;中参数&lt;em&gt;linejunk&lt;/em&gt;的默认值。</target>
        </trans-unit>
        <trans-unit id="adf2a1e3bfbbed0f518f14b41d322ec7ef4029b7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for non-terminal token values.</source>
          <target state="translated">对于非终端令牌值，返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4559a4f32f117e2402898f4b3dc8a930d0fd844" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for terminal token values.</source>
          <target state="translated">对于终端令牌值返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="625136be506a620b8685cf8e1b601a0f137c13b7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &amp;lsquo;header_name&amp;rsquo; is an HTTP/1.1 &amp;ldquo;Hop-by-Hop&amp;rdquo; header, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">如果'header_name'是&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;定义的HTTP / 1.1&amp;ldquo;逐跳&amp;rdquo;标头，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7169a45bbce4543e8eeaf654070e82fb3b3dc82e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#curses.endwin&quot;&gt;&lt;code&gt;endwin()&lt;/code&gt;&lt;/a&gt; has been called (that is, the curses library has been deinitialized).</source>
          <target state="translated">如果已调用&lt;a href=&quot;#curses.endwin&quot;&gt; &lt;code&gt;endwin()&lt;/code&gt; &lt;/a&gt;（即curses库已被初始化），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03489bb44d44ce227ab6538932ea2f7ccc03b9f3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#curses.resize_term&quot;&gt;&lt;code&gt;resize_term()&lt;/code&gt;&lt;/a&gt; would modify the window structure, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;a href=&quot;#curses.resize_term&quot;&gt; &lt;code&gt;resize_term()&lt;/code&gt; &lt;/a&gt;将修改窗口结构，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48bd7e343aad3c970ef39155526a7f32e96f06a9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#importlib.machinery.SourceFileLoader.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; appears to be for a package.</source>
          <target state="translated">如果&lt;a href=&quot;#importlib.machinery.SourceFileLoader.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;似乎是一个包，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f362831e0a56c769ad986dfab464c867f9e279e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;sys.executable interpreter&lt;/code&gt; requires environment variables in order to be able to run at all.</source>
          <target state="translated">如果 &lt;code&gt;sys.executable interpreter&lt;/code&gt; 需要环境变量才能完全运行，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="752d4ae38801a49a32090936d310f759690c334f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;class&lt;/em&gt; is a subclass (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) of &lt;em&gt;classinfo&lt;/em&gt;. A class is considered a subclass of itself. &lt;em&gt;classinfo&lt;/em&gt; may be a tuple of class objects, in which case every entry in &lt;em&gt;classinfo&lt;/em&gt; will be checked. In any other case, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">如果&lt;em&gt;class&lt;/em&gt;是&lt;em&gt;classinfo&lt;/em&gt;的子类（直接，间接或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;虚拟&lt;/a&gt;），则返回 &lt;code&gt;True&lt;/code&gt; 。类被认为是其自身的子类。&lt;em&gt;classinfo&lt;/em&gt;可以是类对象的元组，在这种情况下，将检查&lt;em&gt;classinfo中的&lt;/em&gt;每个条目。在任何其他情况下，都会&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ff57df9b3849ea092c4d7fe6f773a4c0ce7f33d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;class&lt;/em&gt; is a subclass (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) of &lt;em&gt;classinfo&lt;/em&gt;. A class is considered a subclass of itself. &lt;em&gt;classinfo&lt;/em&gt; may be a tuple of class objects, in which case every entry in &lt;em&gt;classinfo&lt;/em&gt; will be checked. In any other case, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">如果&lt;em&gt;class&lt;/em&gt;是&lt;em&gt;classinfo&lt;/em&gt;的子类（直接，间接或&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;虚拟&lt;/a&gt;），则返回 &lt;code&gt;True&lt;/code&gt; 。一个类被认为是它自身的子类。&lt;em&gt;classinfo&lt;/em&gt;可以是类对象的元组，在这种情况下，将检查&lt;em&gt;classinfo中的&lt;/em&gt;每个条目。在任何其他情况下，都会&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3065ecb1059c754989e97319a594623925b2a3dd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;d&lt;/em&gt; has a key &lt;em&gt;key&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;d&lt;/em&gt;有一个&lt;em&gt;键&lt;/em&gt;，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c977adab4811ed32117fab5f86084513622f8bc" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;func&lt;/em&gt; is a &lt;a href=&quot;#coroutine&quot;&gt;coroutine function&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;func&lt;/em&gt;是&lt;a href=&quot;#coroutine&quot;&gt;协程函数，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b21fb1683c7ba03ded90dc10609c46a391b220b2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;key&lt;/em&gt; corresponds to a message, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;key&lt;/em&gt;对应于一条消息，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51fe5e8de7847d7ef04c1a31e8e987d93e6fcf5c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;obj&lt;/em&gt; is a &lt;a href=&quot;#coroutine&quot;&gt;coroutine object&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;obj&lt;/em&gt;是&lt;a href=&quot;#coroutine&quot;&gt;协程对象，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a051d8859c64dd677a9284f5e35c545211efe1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;obj&lt;/em&gt; is either of:</source>
          <target state="translated">如果&lt;em&gt;obj&lt;/em&gt;为以下任意一个，则返回 &lt;code&gt;True&lt;/code&gt; ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="649f832e2bb1e0d42b8abaab3261af8630996ce2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;other&lt;/em&gt; refers to the same node as this node. This is especially useful for DOM implementations which use any sort of proxy architecture (because more than one object can refer to the same node).</source>
          <target state="translated">如果&lt;em&gt;other&lt;/em&gt;指向与此节点相同的节点，则返回 &lt;code&gt;True&lt;/code&gt; 。这对于使用任何类型的代理体系结构的DOM实现特别有用（因为一个以上的对象可以引用同一节点）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc1798c291263774e39cc31309eb6a442ebe1c6d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; directory. This follows symbolic links, so both &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.isdir&quot;&gt;&lt;code&gt;isdir()&lt;/code&gt;&lt;/a&gt; can be true for the same path.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;是&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;目录，则返回 &lt;code&gt;True&lt;/code&gt; 。这遵循符号链接，因此&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.path.isdir&quot;&gt; &lt;code&gt;isdir()&lt;/code&gt; &lt;/a&gt;对于同一路径都可以为true。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b472c3f5f1253bff5bb8ae78f53cbb1fc9bfe58" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; regular file. This follows symbolic links, so both &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.isfile&quot;&gt;&lt;code&gt;isfile()&lt;/code&gt;&lt;/a&gt; can be true for the same path.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;是&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;常规文件，则返回 &lt;code&gt;True&lt;/code&gt; 。这遵循符号链接，因此，对于同一路径，&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.path.isfile&quot;&gt; &lt;code&gt;isfile()&lt;/code&gt; &lt;/a&gt;都可以为true。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5480c1bd7c5cec37d3e846df8d79d8a45f3f379f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an absolute pathname. On Unix, that means it begins with a slash, on Windows that it begins with a (back)slash after chopping off a potential drive letter.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;是绝对路径名，则返回 &lt;code&gt;True&lt;/code&gt; 。在Unix上，这意味着它以斜杠开头，而在Windows上，它是在切断潜在的驱动器号后以（反）斜杠开头。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cb4e4211dae636d6f7d0ca54e9130efeb56e279" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; directory entry that is a symbolic link. Always &lt;code&gt;False&lt;/code&gt; if symbolic links are not supported by the Python runtime.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;引用作为符号链接的&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;目录条目，则返回 &lt;code&gt;True&lt;/code&gt; 。如果Python运行时不支持符号链接，则始终为 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9d366c2ee90a6bf1f27b8185408639c38b13dc1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing path or an open file descriptor. Returns &lt;code&gt;False&lt;/code&gt; for broken symbolic links. On some platforms, this function may return &lt;code&gt;False&lt;/code&gt; if permission is not granted to execute &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; on the requested file, even if the &lt;em&gt;path&lt;/em&gt; physically exists.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;引用现有路径或打开的文件描述符，则返回 &lt;code&gt;True&lt;/code&gt; 。对于断开的符号链接返回 &lt;code&gt;False&lt;/code&gt; 。在某些平台上，即使未实际执行&lt;em&gt;路径&lt;/em&gt;，如果未授予在请求的文件上执行&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; 的&lt;/a&gt;权限，此函数也可能返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b85ad8b340793b75b5e6af29ed537f2d0fa1b50" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing path. Returns &lt;code&gt;True&lt;/code&gt; for broken symbolic links. Equivalent to &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt; on platforms lacking &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;path&lt;/em&gt;引用现有路径，则返回 &lt;code&gt;True&lt;/code&gt; 。对于断开的符号链接返回 &lt;code&gt;True&lt;/code&gt; 。相当于&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;上缺少平台&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32023b4a78c7b7cd7d7e71517a61bcf6812f2d83" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;resource&lt;/em&gt; is enabled and available. The list of available resources is only set when &lt;code&gt;test.regrtest&lt;/code&gt; is executing the tests.</source>
          <target state="translated">如果&lt;em&gt;资源&lt;/em&gt;已启用且可用，则返回 &lt;code&gt;True&lt;/code&gt; 。仅在 &lt;code&gt;test.regrtest&lt;/code&gt; 执行测试时设置可用资源列表。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff995b910c13660621e7bfae722cd1fd7a07287d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;s&lt;/em&gt;是Python&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;关键字，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f58f0a19fce0587b54726ac6f5cc665c58274a2f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python keyword.</source>
          <target state="translated">如果&lt;em&gt;s&lt;/em&gt;是Python关键字，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef24cab9f3a142c963e255e7d92ea844cdee551a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python soft &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;s&lt;/em&gt;是Python软&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;关键字，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a499c4bd3eacc162fdab85413e6e6dab48bb581c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is a NaN (not a number), and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;是一个NaN（不是数字），则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60c76f416db7184a71d8d7311afdd3ee76f4adc2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is a positive or negative infinity, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;是正或负无穷大，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa42da1d0ac9f50b0e111a26bffdf70b02f15c99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is in the underlying dictionary&amp;rsquo;s keys, values or items (in the latter case, &lt;em&gt;x&lt;/em&gt; should be a &lt;code&gt;(key, value)&lt;/code&gt; tuple).</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;在基础字典的键，值或项目中（在后一种情况下，&lt;em&gt;x&lt;/em&gt;应该是 &lt;code&gt;(key, value)&lt;/code&gt; 元组），则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a5f969bb1937197a68e7dd97ca8da6a61ab5d7c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is neither an infinity nor a NaN, and &lt;code&gt;False&lt;/code&gt; otherwise. (Note that &lt;code&gt;0.0&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; considered finite.)</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;既不是无穷大也不是NaN，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。（请注意， &lt;code&gt;0.0&lt;/code&gt; &lt;em&gt;被&lt;/em&gt;认为是有限的。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b05164bae30914c3da7835121d4d0b792d42343" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is the marker indicating the end of input.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;是指示输入结束的标记，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0d7acfa3dc19743e2b760ea0fc1883b90b877e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if Python was not built with &lt;code&gt;-O0&lt;/code&gt; or &lt;code&gt;-Og&lt;/code&gt;.</source>
          <target state="translated">如果Python不是使用 &lt;code&gt;-O0&lt;/code&gt; 或 &lt;code&gt;-Og&lt;/code&gt; 构建的，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf3b40f3033fc53a5903b23da96e8afb6e67874" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a core dump was generated for the process, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果是为过程中产生的核心转储，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b38fff6d322e0b1e38b12de403ff8e4eef1a3231" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a keypress is waiting to be read.</source>
          <target state="translated">如果等待读取按键，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea9a46ca46268d0df7c43b4308e539f6682e3692" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a stopped child has been resumed by delivery of &lt;a href=&quot;signal#signal.SIGCONT&quot;&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;/a&gt; (if the process has been continued from a job control stop), otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果停止孩子已经恢复受送达人&lt;a href=&quot;signal#signal.SIGCONT&quot;&gt; &lt;code&gt;SIGCONT&lt;/code&gt; &lt;/a&gt;（如果该进程已经从作业控制停止持续），否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b106d3a89f7ceaab12c3722c6eaa04053023b8e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are ASCII decimal digits and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII decimal digits are those byte values in the sequence &lt;code&gt;b'0123456789'&lt;/code&gt;.</source>
          <target state="translated">如果序列中的所有字节均为ASCII十进制数字并且序列不为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。ASCII十进制数字是序列 &lt;code&gt;b'0123456789'&lt;/code&gt; 中的那些字节值。</target>
        </trans-unit>
        <trans-unit id="e70957ed3ddefa229a1857ad4b4cb86ef49f5391" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are ASCII whitespace and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII whitespace characters are those byte values in the sequence &lt;code&gt;b' \t\n\r\x0b\f'&lt;/code&gt; (space, tab, newline, carriage return, vertical tab, form feed).</source>
          <target state="translated">如果序列中的所有字节均为ASCII空格且序列不为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。ASCII空格字符是序列 &lt;code&gt;b' \t\n\r\x0b\f'&lt;/code&gt; 中的那些字节值（空格，制表符，换行符，回车，垂直制表符，换页）。</target>
        </trans-unit>
        <trans-unit id="8a2f62dcf0a9e0bad35a7d51cf56250023dbaec0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are alphabetic ASCII characters and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">如果序列中的所有字节均为字母ASCII字符且序列不为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。字母ASCII字符是序列 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 中的那些字节值。</target>
        </trans-unit>
        <trans-unit id="0b991f845eb91665d998b6cfdd099f902cf77362" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are alphabetical ASCII characters or ASCII decimal digits and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. ASCII decimal digits are those byte values in the sequence &lt;code&gt;b'0123456789'&lt;/code&gt;.</source>
          <target state="translated">如果序列中的所有字节都是字母ASCII字符或ASCII十进制数字，并且序列不为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。字母ASCII字符是序列 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 中的那些字节值。ASCII十进制数字是序列 &lt;code&gt;b'0123456789'&lt;/code&gt; 中的那些字节值。</target>
        </trans-unit>
        <trans-unit id="5028a8849455e69d4edb7224b70c2f92e21ce475" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all cased characters &lt;a href=&quot;#id15&quot; id=&quot;id6&quot;&gt;4&lt;/a&gt; in the string are lowercase and there is at least one cased character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果字符串中所有大小写的字符&lt;a href=&quot;#id15&quot; id=&quot;id6&quot;&gt;4&lt;/a&gt;为小写且至少有一个大小写的字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dc757eb2200a3a03f503111a85181c91dd6a935" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all cased characters &lt;a href=&quot;#id15&quot; id=&quot;id7&quot;&gt;4&lt;/a&gt; in the string are uppercase and there is at least one cased character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果字符串中所有大小写的字符&lt;a href=&quot;#id15&quot; id=&quot;id7&quot;&gt;4&lt;/a&gt;为大写且至少有一个大小写的字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8f26261bd7a3382ca9bb8bcb049bf2e27bbc734" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are alphabetic and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic characters are those characters defined in the Unicode character database as &amp;ldquo;Letter&amp;rdquo;, i.e., those with general category property being one of &amp;ldquo;Lm&amp;rdquo;, &amp;ldquo;Lt&amp;rdquo;, &amp;ldquo;Lu&amp;rdquo;, &amp;ldquo;Ll&amp;rdquo;, or &amp;ldquo;Lo&amp;rdquo;. Note that this is different from the &amp;ldquo;Alphabetic&amp;rdquo; property defined in the Unicode Standard.</source>
          <target state="translated">如果字符串中的所有字符都是字母并且至少有一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。字母字符是在Unicode字符数据库中定义为&amp;ldquo;字母&amp;rdquo;的那些字符，即，具有一般类别属性为&amp;ldquo; Lm&amp;rdquo;，&amp;ldquo; Lt&amp;rdquo;，&amp;ldquo; Lu&amp;rdquo;，&amp;ldquo; Ll&amp;rdquo;或&amp;ldquo; Lo&amp;rdquo;之一的那些字符。请注意，这与Unicode标准中定义的&amp;ldquo;字母&amp;rdquo;属性不同。</target>
        </trans-unit>
        <trans-unit id="fef6425a0b8cf0f974d1d87b52c20a297cab19a1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are alphanumeric and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. A character &lt;code&gt;c&lt;/code&gt; is alphanumeric if one of the following returns &lt;code&gt;True&lt;/code&gt;: &lt;code&gt;c.isalpha()&lt;/code&gt;, &lt;code&gt;c.isdecimal()&lt;/code&gt;, &lt;code&gt;c.isdigit()&lt;/code&gt;, or &lt;code&gt;c.isnumeric()&lt;/code&gt;.</source>
          <target state="translated">如果字符串中的所有字符都是字母数字并且至少包含一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。如果以下条件之一返回 &lt;code&gt;True&lt;/code&gt; ,则字符 &lt;code&gt;c&lt;/code&gt; 为字母数字： &lt;code&gt;c.isalpha()&lt;/code&gt; ， &lt;code&gt;c.isdecimal()&lt;/code&gt; ， &lt;code&gt;c.isdigit()&lt;/code&gt; 或 &lt;code&gt;c.isnumeric()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="404a3a332c0a32b30bd18106c5ae19e67f8fd276" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are decimal characters and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Decimal characters are those that can be used to form numbers in base 10, e.g. U+0660, ARABIC-INDIC DIGIT ZERO. Formally a decimal character is a character in the Unicode General Category &amp;ldquo;Nd&amp;rdquo;.</source>
          <target state="translated">如果字符串中的所有字符均为十进制字符且至少包含一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。小数字符是可用于以10为基数的数字，例如U + 0660，ARABIC-INDIC DIGIT ZERO。十进制字符形式上是Unicode通用类别&amp;ldquo; Nd&amp;rdquo;中的字符。</target>
        </trans-unit>
        <trans-unit id="4abe890beec4ea49c091abd01791e2bbac0f19e0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are digits and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Digits include decimal characters and digits that need special handling, such as the compatibility superscript digits. This covers digits which cannot be used to form numbers in base 10, like the Kharosthi numbers. Formally, a digit is a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal.</source>
          <target state="translated">如果字符串中的所有字符都是数字并且至少有一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。数字包括需要特殊处理的十进制字符和数字，例如兼容性上标数字。它涵盖了不能用于​​以10为底的数字的数字，例如Kharosthi数字。形式上，数字是具有属性值Numeric_Type =数字或Numeric_Type =十进制的字符。</target>
        </trans-unit>
        <trans-unit id="324a9f0ccc6e2e02d10da9b23aa540f1970b9fc6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are numeric characters, and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH. Formally, numeric characters are those with the property value Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric.</source>
          <target state="translated">如果字符串中的所有字符均为数字字符，并且至少包含一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。数字字符包括数字字符，以及所有具有Unicode数值属性的字符，例如U + 2155，VULGAR FRACTION IF FTHTH。形式上，数字字符是具有属性值Numeric_Type =数字，Numeric_Type =十进制或Numeric_Type =数字的字符。</target>
        </trans-unit>
        <trans-unit id="684f677786657bf802299eb1fecccfae093a2096" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are printable or the string is empty, &lt;code&gt;False&lt;/code&gt; otherwise. Nonprintable characters are those characters defined in the Unicode character database as &amp;ldquo;Other&amp;rdquo; or &amp;ldquo;Separator&amp;rdquo;, excepting the ASCII space (0x20) which is considered printable. (Note that printable characters in this context are those which should not be escaped when &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; is invoked on a string. It has no bearing on the handling of strings written to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">如果字符串中的所有字符都可打印或字符串为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。不可打印字符是在Unicode字符数据库中定义为&amp;ldquo;其他&amp;rdquo;或&amp;ldquo;分隔符&amp;rdquo;的那些字符，但认为可以打印的ASCII空间（0x20）除外。（请注意，在此上下文中，可打印字符是在字符串上调用&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;时不应转义的那些字符。它与写入&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;的字符串的处理无关。）</target>
        </trans-unit>
        <trans-unit id="1893bdee78843c57671815e1dd818323c359b020" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all elements of the &lt;em&gt;iterable&lt;/em&gt; are true (or if the iterable is empty). Equivalent to:</source>
          <target state="translated">如果&lt;em&gt;iterable的&lt;/em&gt;所有元素都为true（或者iterable为空），则返回 &lt;code&gt;True&lt;/code&gt; 。相当于：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eeeab3236324583fb4707d66d153b80c32530d0d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all tests run so far have passed, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果所有的测试运行至今已经过去了，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="827fb29992cae8affc1fa822f05d388cbc5a79bd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if and only if the internal flag is true.</source>
          <target state="translated">当且仅当内部标志为true时，才返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e5169d4c182a7bfeea529f3a96d03e89950d7db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if any element of the &lt;em&gt;iterable&lt;/em&gt; is true. If the iterable is empty, return &lt;code&gt;False&lt;/code&gt;. Equivalent to:</source>
          <target state="translated">如果&lt;em&gt;iterable的&lt;/em&gt;任何元素为 &lt;code&gt;True&lt;/code&gt; 则返回True。如果iterable为空，则返回 &lt;code&gt;False&lt;/code&gt; 。相当于：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdfd1361e82ebfe985cb800863733008ba0c5482" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if automatic collection is enabled.</source>
          <target state="translated">如果启用了自动收集，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cc2ac0c502014b48f46025706992e8c8303069d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if both pathname arguments refer to the same file or directory. This is determined by the device number and i-node number and raises an exception if an &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; call on either pathname fails.</source>
          <target state="translated">如果两个路径名参数都引用相同的文件或目录，则返回 &lt;code&gt;True&lt;/code&gt; 。这由设备号和&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;节点号确定，如果在任一路径名上的os.stat（）调用失败，都会引发异常。</target>
        </trans-unit>
        <trans-unit id="9674a80ecf3c4e73288695e34894818266635f6e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if both the real and imaginary parts of &lt;em&gt;x&lt;/em&gt; are finite, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;的实部和虚部都是有限的，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84f4da1ed3887e188d14f41af95b69328e530a87" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if cookie has the named cookie-attribute.</source>
          <target state="translated">如果cookie具有命名的cookie属性，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac3123f2eefa65b44bd4446c28edfacfca4e836d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if either the real or the imaginary part of &lt;em&gt;x&lt;/em&gt; is a NaN, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;的实部或虚部是NaN，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ea3723144f92864748951077e84de976e98cf3e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if either the real or the imaginary part of &lt;em&gt;x&lt;/em&gt; is an infinity, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;x&lt;/em&gt;的实部或虚部为无穷大，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bba66cf40bcba9c8e8172f92735b82e8ce48a4c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if its parameter is a dataclass or an instance of one, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果它的参数是数据类或一个实例，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b195f5ca2b0277617928c248a6e6b1607bebbac5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if name binding introduces new namespace.</source>
          <target state="translated">如果名称绑定引入了新的名称空间，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25f1562766109f2357ae9489ed0cdf66e3947c69" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if pathname &lt;em&gt;path&lt;/em&gt; is a &lt;em&gt;mount point&lt;/em&gt;: a point in a file system where a different file system has been mounted. On POSIX, the function checks whether &lt;em&gt;path&lt;/em&gt;&amp;rsquo;s parent, &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt;, is on a different device than &lt;em&gt;path&lt;/em&gt;, or whether &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; and &lt;em&gt;path&lt;/em&gt; point to the same i-node on the same device &amp;mdash; this should detect mount points for all Unix and POSIX variants. It is not able to reliably detect bind mounts on the same filesystem. On Windows, a drive letter root and a share UNC are always mount points, and for any other path &lt;code&gt;GetVolumePathName&lt;/code&gt; is called to see if it is different from the input path.</source>
          <target state="translated">如果路径名&lt;em&gt;path&lt;/em&gt;是&lt;em&gt;安装点，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; ：文件系统中已安装其他文件系统的点。上POSIX，功能检查是否&lt;em&gt;路径&lt;/em&gt;的父， &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; / ..，是一个不同的设备比&lt;em&gt;路径&lt;/em&gt;，或者是否 &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; / ..和&lt;em&gt;路径&lt;/em&gt;指向相同的设备在相同的i节点-这应该检测安装点适用于所有Unix和POSIX变体。它不能可靠地检测同一文件系统上的绑定安装。在Windows上，驱动器号根目录和共享UNC始终是安装点，对于任何其他路径， &lt;code&gt;GetVolumePathName&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; 调用以查看它是否与输入路径不同。</target>
        </trans-unit>
        <trans-unit id="a2e8be67bc6594919ef5dda4afcc87a85660b06e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if pen is down, &lt;code&gt;False&lt;/code&gt; if it&amp;rsquo;s up.</source>
          <target state="translated">如果笔向下，则返回 &lt;code&gt;True&lt;/code&gt; ;如果笔向上，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="233df5d01c348d1977f999387824421590abecca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if running on CPython, not on Windows, and configuration not set with &lt;code&gt;WITH_DOC_STRINGS&lt;/code&gt;.</source>
          <target state="translated">如果在CPython而非Windows上运行，并且未使用 &lt;code&gt;WITH_DOC_STRINGS&lt;/code&gt; 设置配置，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1e671df625dc630f86e972bb438647272dd6b0e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if socket is in blocking mode, &lt;code&gt;False&lt;/code&gt; if in non-blocking.</source>
          <target state="translated">如果套接字处于阻塞模式，则返回 &lt;code&gt;True&lt;/code&gt; ;如果处于非阻塞状态，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="024e94a0c4f86b5f824872147dfdd5dbf780ecbb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if string starts with the &lt;em&gt;prefix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;prefix&lt;/em&gt; can also be a tuple of prefixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test string beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing string at that position.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果字符串开始与&lt;em&gt;前缀&lt;/em&gt;，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;prefix&lt;/em&gt;也可以是要查找的前缀的元组。使用可选的&lt;em&gt;start&lt;/em&gt;，从该位置&lt;em&gt;开始&lt;/em&gt;测试字符串。使用可选的&lt;em&gt;end&lt;/em&gt;，在该位置停止比较字符串。</target>
        </trans-unit>
        <trans-unit id="3f64655e29ef5c69057690b8edee254534078c71" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if strings &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are equal, otherwise &lt;code&gt;False&lt;/code&gt;, in such a way as to reduce the risk of &lt;a href=&quot;https://codahale.com/a-lesson-in-timing-attacks/&quot;&gt;timing attacks&lt;/a&gt;. See &lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt;&lt;code&gt;hmac.compare_digest()&lt;/code&gt;&lt;/a&gt; for additional details.</source>
          <target state="translated">如果字符串&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;相等，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; ，以降低&lt;a href=&quot;https://codahale.com/a-lesson-in-timing-attacks/&quot;&gt;计时攻击&lt;/a&gt;的风险。有关其他详细信息，请参见&lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt; &lt;code&gt;hmac.compare_digest()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="416382c98e8cb009eb71fb8ed7325a915a8282a0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;context&lt;/em&gt; has a value for &lt;em&gt;var&lt;/em&gt; set; return &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;上下文&lt;/em&gt;具有&lt;em&gt;var&lt;/em&gt;集的值，则返回 &lt;code&gt;True&lt;/code&gt; ;否则返回True。否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b7f6077ac9ddcfabad53836b29d2e95cc0123" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;object&lt;/em&gt; argument is an instance of the &lt;em&gt;classinfo&lt;/em&gt; argument, or of a (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) subclass thereof. If &lt;em&gt;object&lt;/em&gt; is not an object of the given type, the function always returns &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;classinfo&lt;/em&gt; is a tuple of type objects (or recursively, other such tuples), return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;object&lt;/em&gt; is an instance of any of the types. If &lt;em&gt;classinfo&lt;/em&gt; is not a type or tuple of types and such tuples, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">如果&lt;em&gt;object&lt;/em&gt;参数是&lt;em&gt;classinfo&lt;/em&gt;参数或其（直接，间接或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;虚拟&lt;/a&gt;）子类的实例，则返回 &lt;code&gt;True&lt;/code&gt; 。如果&lt;em&gt;object&lt;/em&gt;不是给定类型的对象，则该函数始终返回 &lt;code&gt;False&lt;/code&gt; 。如果&lt;em&gt;classinfo&lt;/em&gt;是类型对象的元组（或递归，其他类似的元组），则如果&lt;em&gt;object&lt;/em&gt;是任何类型的实例，则返回 &lt;code&gt;True&lt;/code&gt; 。如果&lt;em&gt;classinfo&lt;/em&gt;不是类型或此类的元组，则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b2d10e2d3746f24c0ca54a6ca3ff32f5708fab9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;object&lt;/em&gt; argument is an instance of the &lt;em&gt;classinfo&lt;/em&gt; argument, or of a (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) subclass thereof. If &lt;em&gt;object&lt;/em&gt; is not an object of the given type, the function always returns &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;classinfo&lt;/em&gt; is a tuple of type objects (or recursively, other such tuples), return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;object&lt;/em&gt; is an instance of any of the types. If &lt;em&gt;classinfo&lt;/em&gt; is not a type or tuple of types and such tuples, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">如果&lt;em&gt;object&lt;/em&gt;参数是&lt;em&gt;classinfo&lt;/em&gt;参数或其（直接，间接或&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;虚拟&lt;/a&gt;）子类的实例，则返回 &lt;code&gt;True&lt;/code&gt; 。如果&lt;em&gt;object&lt;/em&gt;不是给定类型的对象，则该函数始终返回 &lt;code&gt;False&lt;/code&gt; 。如果&lt;em&gt;classinfo&lt;/em&gt;是类型为对象的元组（或递归为其他此类元组），则如果&lt;em&gt;object&lt;/em&gt;是任何类型的实例，则返回 &lt;code&gt;True&lt;/code&gt; 。如果&lt;em&gt;classinfo&lt;/em&gt;不是类型或类型的元组以及此类元组，则会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="946b6e440e6563aef5f308641df0c902820df7db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">如果Future &lt;em&gt;完成，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a36e714f535604a61c0b98c922807226f3b5ef26" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Future was &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">如果Future被&lt;em&gt;取消，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afd13c887cb1e4054589e0f99ba7bc7dc0c23efe" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the OS supports symbolic links, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果操作系统支持符号链接，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7fa73558708cdd39a84d784cdccb26fe3e77f44" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the OS supports xattr, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果操作系统支持xattr，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0738f68c4124a233fc1d65c48dc7ccdb03f8bb1f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the SSL pseudo-random number generator has been seeded with &amp;lsquo;enough&amp;rsquo; randomness, and &lt;code&gt;False&lt;/code&gt; otherwise. You can use &lt;a href=&quot;#ssl.RAND_egd&quot;&gt;&lt;code&gt;ssl.RAND_egd()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;ssl.RAND_add()&lt;/code&gt;&lt;/a&gt; to increase the randomness of the pseudo-random number generator.</source>
          <target state="translated">如果SSL伪随机数生成器已经以&amp;ldquo;足够&amp;rdquo;的随机性播种，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。您可以使用&lt;a href=&quot;#ssl.RAND_egd&quot;&gt; &lt;code&gt;ssl.RAND_egd()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.RAND_add&quot;&gt; &lt;code&gt;ssl.RAND_add()&lt;/code&gt; &lt;/a&gt;来增加伪随机数生成器的随机性。</target>
        </trans-unit>
        <trans-unit id="a45d37d2fe67a5610d1dc89f1f444661be07ea8e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Task is &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">如果任务已&lt;em&gt;取消，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4deefb3f175ed9a524bcfc60e1ae5c9e5e106a0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Task is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">如果任务已&lt;em&gt;完成，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01febc0610b66c1393754b5305bac55d9f1f1cb5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Turtle is shown, &lt;code&gt;False&lt;/code&gt; if it&amp;rsquo;s hidden.</source>
          <target state="translated">如果显示了Turtle，则返回 &lt;code&gt;True&lt;/code&gt; ;如果隐藏，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cd6fe21f3355fce0486fcfb13b3728fee17f9c8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Windows edition returned by &lt;a href=&quot;#platform.win32_edition&quot;&gt;&lt;code&gt;win32_edition()&lt;/code&gt;&lt;/a&gt; is recognized as an IoT edition.</source>
          <target state="translated">如果将&lt;a href=&quot;#platform.win32_edition&quot;&gt; &lt;code&gt;win32_edition()&lt;/code&gt; &lt;/a&gt;返回的Windows版本识别为IoT版本，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b6dc300080ef0aefa018fb531347b881a6625ba" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the binary data ends with the specified &lt;em&gt;suffix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;suffix&lt;/em&gt; can also be a tuple of suffixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果使用指定的二进制数据结束&lt;em&gt;后缀&lt;/em&gt;，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;后缀&lt;/em&gt;也可以是要查找的后缀元组。使用可选的&lt;em&gt;start&lt;/em&gt;，从该位置&lt;em&gt;开始&lt;/em&gt;测试。使用可选的&lt;em&gt;end&lt;/em&gt;，停止在该位置进行比较。</target>
        </trans-unit>
        <trans-unit id="5280ffb5c686cc57f4b9f4025c1a24df8d277466" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the binary data starts with the specified &lt;em&gt;prefix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;prefix&lt;/em&gt; can also be a tuple of prefixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果使用指定的二进制数据开始&lt;em&gt;前缀&lt;/em&gt;，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;prefix&lt;/em&gt;也可以是要查找的前缀的元组。使用可选的&lt;em&gt;start&lt;/em&gt;，从该位置&lt;em&gt;开始&lt;/em&gt;测试。使用可选的&lt;em&gt;end&lt;/em&gt;，停止在该位置进行比较。</target>
        </trans-unit>
        <trans-unit id="317c7030f4a1ba6e44c9e57e1efeecf8685ac29f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block has nested namespaces within it. These can be obtained with &lt;a href=&quot;#symtable.SymbolTable.get_children&quot;&gt;&lt;code&gt;get_children()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果块中具有嵌套的名称空间，则返回 &lt;code&gt;True&lt;/code&gt; 。这些可以通过&lt;a href=&quot;#symtable.SymbolTable.get_children&quot;&gt; &lt;code&gt;get_children()&lt;/code&gt; &lt;/a&gt;获得。</target>
        </trans-unit>
        <trans-unit id="ab991b840752a5503631df9f72ad98714597e0a3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block is a nested class or function.</source>
          <target state="translated">如果块是嵌套的类或函数，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a2ca122782d6df631a87f90c1584e009f8d2418" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block uses &lt;code&gt;exec&lt;/code&gt;.</source>
          <target state="translated">如果该块使用 &lt;code&gt;exec&lt;/code&gt; ,则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2c985d17600cba113035b1275e7366496b1b25d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the buffer is empty and &lt;code&gt;feed_eof()&lt;/code&gt; was called.</source>
          <target state="translated">如果缓冲区为空并且 &lt;code&gt;feed_eof()&lt;/code&gt; 则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ab290da09446169dd628c008272a92a91d8f7b6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the buffer is up to capacity. This method can be overridden to implement custom flushing strategies.</source>
          <target state="translated">如果缓冲区 &lt;code&gt;True&lt;/code&gt; 则返回True。可以重写此方法以实现自定义冲洗策略。</target>
        </trans-unit>
        <trans-unit id="f6f67f8833c2529318d2eac45c9ca007c285e67c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call is currently being executed and cannot be cancelled.</source>
          <target state="translated">如果当前正在执行该调用且无法取消该调用，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b827fb97aa52a92d56d20904f9d9956203b81466" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call was successfully cancelled or finished running.</source>
          <target state="translated">如果呼叫已成功取消或完成运行，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a52df0f6e4edb37f59c125e25109af29db36b7df" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call was successfully cancelled.</source>
          <target state="translated">如果呼叫成功取消，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3060a8b204e7cc1bbcfc6f985693f38687a6f224" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the callback was cancelled.</source>
          <target state="translated">如果回调已取消，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d962cb4845a3404d9c1ba50d3cb0d0456dce252d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a directory.</source>
          <target state="translated">如果当前上下文引用目录，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64b4c3b1c538b37700eeabb657a59ee28a6c5a9a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a file or directory in the zip file.</source>
          <target state="translated">如果当前上下文引用了zip文件中的文件或目录，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="388dff15884ed1203b7091ac5865ee69802ce782" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a file.</source>
          <target state="translated">如果当前上下文引用文件，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dde6804e47237603bfa32f32b2df2406bf247849" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the element has an attribute named by &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">如果元素具有以&lt;em&gt;name&lt;/em&gt;命名的属性，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b361777e74f9561422369b4d220f2d6d6a172ef9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the element has an attribute named by &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localName&lt;/em&gt;.</source>
          <target state="translated">如果元素具有以&lt;em&gt;namespaceURI&lt;/em&gt;和&lt;em&gt;localName&lt;/em&gt;命名的属性，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803037afef330da060f29f737c1a584b3e789010" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event is set.</source>
          <target state="translated">如果设置了事件，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c4f9a0386485e131e282882444699ae888afe11" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is closed.</source>
          <target state="translated">如果事件循环关闭，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbce230766563130bff0c7ae5252ac562117a9dd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is currently running.</source>
          <target state="translated">如果事件循环当前正在运行，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7be3d468d0f51c1b348c6ac8b30aa1f9a19d8c93" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is running.</source>
          <target state="translated">如果事件循环正在运行，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a8060c4cb8fceceb3feebf4dbf5c9e8b0b1408" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop was closed.</source>
          <target state="translated">如果事件循环已关闭，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eeda47e7e6194545f03f862246f96505dfd2c50" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event queue is empty.</source>
          <target state="translated">如果事件队列为空，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88dc76d8a6f0cfba7f1df60f935891b4741b29fe" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the feature identified by the pair of strings &lt;em&gt;feature&lt;/em&gt; and &lt;em&gt;version&lt;/em&gt; is implemented.</source>
          <target state="translated">如果实现了由字符串&lt;em&gt;功能&lt;/em&gt;和&lt;em&gt;版本&lt;/em&gt;对标识的功能，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8effffeb8ba6a8648c53738d6fade8f75cf26a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file descriptor &lt;em&gt;fd&lt;/em&gt; is open and connected to a tty(-like) device, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果文件描述符&lt;em&gt;fd&lt;/em&gt;已打开并连接到tty（-like）设备，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e8d64898cceab3c776d333f06d2ec876974eb0f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file descriptors &lt;em&gt;fp1&lt;/em&gt; and &lt;em&gt;fp2&lt;/em&gt; refer to the same file.</source>
          <target state="translated">如果文件描述符&lt;em&gt;fp1&lt;/em&gt;和&lt;em&gt;fp2&lt;/em&gt;引用同一文件，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69ba83ecda4af20cf29d10182699831c06d627b6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file system for &lt;em&gt;directory&lt;/em&gt; is case-insensitive.</source>
          <target state="translated">如果&lt;em&gt;目录&lt;/em&gt;的文件系统不区分大小写，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754f371f3d7b0d48f0eb29fbe8cfc0780fe0baab" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the float instance is finite with integral value, and &lt;code&gt;False&lt;/code&gt; otherwise:</source>
          <target state="translated">如果float实例是带整数值的有限实例，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8f28dd6a1f500c0dff956dbecbb38d62d0abb6ca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the given integrity check is supported on this system.</source>
          <target state="translated">如果此系统支持给定的完整性检查，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d70207760f1ba8579a4a85195f23c4c400f2e88" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the last line was read from &lt;code&gt;sys.stdin&lt;/code&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果最后一行是读取 &lt;code&gt;sys.stdin&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec0ebd9823fd01a8cb9f9fbebc6231d8fb361728" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the line just read is the first line of its file, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果刚读该行是其文件的第一行，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaea28b7cd854798ec1acb5331ab42abca8c144a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the locals in this table can be optimized.</source>
          <target state="translated">如果可以优化此表中的本地人，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e80ac2852d316967f0e38190133026fdd260262" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the lock is &lt;em&gt;locked&lt;/em&gt;.</source>
          <target state="translated">如果锁已&lt;em&gt;锁定，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ad753ef3d46d91e5defb9e376b956e1c30fa52f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message object has a field named &lt;em&gt;name&lt;/em&gt;. Matching is done case-insensitively and &lt;em&gt;name&lt;/em&gt; should not include the trailing colon. Used for the &lt;code&gt;in&lt;/code&gt; operator, e.g.:</source>
          <target state="translated">如果消息对象具有一个名为&lt;em&gt;name&lt;/em&gt;的字段，则返回 &lt;code&gt;True&lt;/code&gt; 。匹配不区分大小写，并且&lt;em&gt;名称&lt;/em&gt;不应包含结尾的冒号。用于 &lt;code&gt;in&lt;/code&gt; 运算符，例如：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ab6e934c35497ad5700dd522da421b535e6bfee" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message object has a field named &lt;em&gt;name&lt;/em&gt;. Matching is done without regard to case and &lt;em&gt;name&lt;/em&gt; does not include the trailing colon. Used for the &lt;code&gt;in&lt;/code&gt; operator. For example:</source>
          <target state="translated">如果消息对象具有一个名为&lt;em&gt;name&lt;/em&gt;的字段，则返回 &lt;code&gt;True&lt;/code&gt; 。匹配时不考虑大小写，&lt;em&gt;名称&lt;/em&gt;不包括结尾的冒号。用于 &lt;code&gt;in&lt;/code&gt; 运算符。例如：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="813fe3c47deadddecf94a759b6d97eead72cf316" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message&amp;rsquo;s payload is a list of sub-&lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects, otherwise return &lt;code&gt;False&lt;/code&gt;. When &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;, the payload should be a string object (which might be a CTE encoded binary payload). Note that &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;True&lt;/code&gt; does not necessarily mean that &amp;ldquo;msg.get_content_maintype() == &amp;lsquo;multipart&amp;rsquo;&amp;rdquo; will return the &lt;code&gt;True&lt;/code&gt;. For example, &lt;code&gt;is_multipart&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt; when the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is of type &lt;code&gt;message/rfc822&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果该消息的有效载荷子的列表&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象，否则返回 &lt;code&gt;False&lt;/code&gt; 。当&lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;False&lt;/code&gt; 时，有效负载应为字符串对象（可能是CTE编码的二进制有效负载）。请注意，&lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;True&lt;/code&gt; 并不一定意味着&amp;ldquo; msg.get_content_maintype（）=='multipart'&amp;rdquo;将返回 &lt;code&gt;True&lt;/code&gt; 。例如，当&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;的类型为 &lt;code&gt;message/rfc822&lt;/code&gt; 时， &lt;code&gt;is_multipart&lt;/code&gt; 将返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb01e60f9b794c710d6f5ff81a2a0c287d007af1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message&amp;rsquo;s payload is a list of sub-&lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, otherwise return &lt;code&gt;False&lt;/code&gt;. When &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;, the payload should be a string object (which might be a CTE encoded binary payload). (Note that &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;True&lt;/code&gt; does not necessarily mean that &amp;ldquo;msg.get_content_maintype() == &amp;lsquo;multipart&amp;rsquo;&amp;rdquo; will return the &lt;code&gt;True&lt;/code&gt;. For example, &lt;code&gt;is_multipart&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt; when the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; is of type &lt;code&gt;message/rfc822&lt;/code&gt;.)</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果该消息的有效载荷子的列表&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;的对象，否则返回 &lt;code&gt;False&lt;/code&gt; 。当&lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;False&lt;/code&gt; 时，有效负载应为字符串对象（可能是CTE编码的二进制有效负载）。 （请注意，&lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;True&lt;/code&gt; 并不一定意味着&amp;ldquo; msg.get_content_maintype（）=='multipart'&amp;rdquo;将返回 &lt;code&gt;True&lt;/code&gt; 。例如，当&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;message/rfc822&lt;/code&gt; 类型时， &lt;code&gt;is_multipart&lt;/code&gt; 将返回 &lt;code&gt;True&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="612c7a6dfbca4c39860f17766696a23f487a37a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the module specified by &lt;em&gt;fullname&lt;/em&gt; is a package. Raise &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if the module couldn&amp;rsquo;t be found.</source>
          <target state="translated">如果&lt;em&gt;全名&lt;/em&gt;指定的模块是软件包，则返回 &lt;code&gt;True&lt;/code&gt; 。提高&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; &lt;/a&gt;如果模块找不到。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1017fa2989c546c0a297169d43fe0dbc24491027" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the node has any attributes.</source>
          <target state="translated">如果节点具有任何属性，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f37f2fbf4b833170bcbb22938ea6957e1c1a426c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the node has any child nodes.</source>
          <target state="translated">如果该节点有任何子节点，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b0a24bcbf158eec14d1912914f38370e5f6dc9d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object can be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">如果可以在&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表达式中使用该对象，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7246ed0b507d12dce9ed212a48f28e8cfb2a10b2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object can be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">如果可以在&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表达式中使用该对象，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84a94f510472faaf2fdccfe4be7bec17d53e4ad4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果对象是由&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;函数创建的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;协程，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e49cdd044e3c96f756de9313ae6fd35395a89ef" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; (a function defined with an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; syntax).</source>
          <target state="translated">如果对象是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;协程函数&lt;/a&gt;（使用&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;语法定义的函数），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79ad7a4d64c9c8de16e684bf937f339bc0d4be36" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果对象是由&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;函数创建的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;协程，&lt;/a&gt;则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27b835eeb8c673a324011d7b45b1cfd47dfa2392" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; (a function defined with an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; syntax).</source>
          <target state="translated">如果对象是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;协程函数&lt;/a&gt;（使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;语法定义的函数），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f500ea1719ab0fc3a14946a8d2a32a892a9b5db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python function, which includes functions created by a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt; expression.</source>
          <target state="translated">如果对象是Python函数（包括由&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt;表达式创建的函数），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1f4a4571d01be375069fb059a45f7a996a9c186" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python function, which includes functions created by a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt; expression.</source>
          <target state="translated">如果对象是Python函数（包括由&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt;表达式创建的函数），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="493a3b7bb13b994772a705fe495e7b8ce5cb776c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python generator function.</source>
          <target state="translated">如果对象是Python生成器函数，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50eb7a291df64c7ff188bbd834209a0bb5b1eb3f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a bound method written in Python.</source>
          <target state="translated">如果对象是用Python编写的绑定方法，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fe03755a06d2432a5bf344eb33331759993ebd0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a built-in function or a bound built-in method.</source>
          <target state="translated">如果对象是内置函数或绑定的内置方法，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a807200b2fc5a492eb9cecb7fd981c8a76a8392" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a class, whether built-in or created in Python code.</source>
          <target state="translated">如果对象是一个类，无论是内置的还是用Python代码创建的，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58169ae19160a7180104fa0fde33c944c83ef14d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a code.</source>
          <target state="translated">如果对象是代码，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39e01cef77029dd6818c9ab7e114510595c45227" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a data descriptor.</source>
          <target state="translated">如果对象是数据描述符，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01a01ab884f0cb951879ac2bacaecd8a6911aa49" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a frame.</source>
          <target state="translated">如果对象是框架，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="394b4ac03e886a34529ebd34e3fddc902c67dbc5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a generator.</source>
          <target state="translated">如果对象是生成器，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24e6fb864a790b635f71289fd9f8183118a6f4da" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a getset descriptor.</source>
          <target state="translated">如果对象是getset描述符，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c46b54107a298212a17500715000d41e063c736" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a member descriptor.</source>
          <target state="translated">如果对象是成员描述符，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b607199bc1689078ffb298b882d6319270a2b33" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a method descriptor, but not if &lt;a href=&quot;#inspect.ismethod&quot;&gt;&lt;code&gt;ismethod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#inspect.isclass&quot;&gt;&lt;code&gt;isclass()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#inspect.isfunction&quot;&gt;&lt;code&gt;isfunction()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#inspect.isbuiltin&quot;&gt;&lt;code&gt;isbuiltin()&lt;/code&gt;&lt;/a&gt; are true.</source>
          <target state="translated">如果对象是方法描述符，则返回 &lt;code&gt;True&lt;/code&gt; ，但如果&lt;a href=&quot;#inspect.ismethod&quot;&gt; &lt;code&gt;ismethod()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#inspect.isclass&quot;&gt; &lt;code&gt;isclass()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#inspect.isfunction&quot;&gt; &lt;code&gt;isfunction()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#inspect.isbuiltin&quot;&gt; &lt;code&gt;isbuiltin()&lt;/code&gt; &lt;/a&gt;为true，则返回True。</target>
        </trans-unit>
        <trans-unit id="751ca282ae4e2eda7b7edbb6874656c849c97fe0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a module.</source>
          <target state="translated">如果对象是模块，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a06537b0fda2fddcf149ce956dd829f32ac19a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a traceback.</source>
          <target state="translated">如果对象是回溯，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1efb68187f81c1bc8515ded4e3e03a62e928c676" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a user-defined or built-in function or method.</source>
          <target state="translated">如果对象是用户定义的或内置的函数或方法，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ae6724b16f29070aa62f055061ea89666d48a9e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function, for example:</source>
          <target state="translated">如果对象是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数，则返回 &lt;code&gt;True&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="bad4f7008242f2b9e8e41348f0d8584eaeaed9d6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果对象是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;异步发电机迭代&lt;/a&gt;通过创建&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;异步发电机&lt;/a&gt;的功能。</target>
        </trans-unit>
        <trans-unit id="49e3749d09232ec27562fb6f86f4788d5cdd801b" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function, for example:</source>
          <target state="translated">如果对象是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数，则返回 &lt;code&gt;True&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="b5169749a1a8fe2ab06e17d98431534fe948fa55" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果对象是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;异步发电机迭代&lt;/a&gt;通过创建&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;异步发电机&lt;/a&gt;的功能。</target>
        </trans-unit>
        <trans-unit id="5a6271c1db7a23de904a5c8bbf6a5a054332a8b4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an abstract base class.</source>
          <target state="translated">如果对象是抽象基类，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b46162e51c2408b7c91f107bd12ed13de0b12f1f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path is a &lt;em&gt;mount point&lt;/em&gt;: a point in a file system where a different file system has been mounted. On POSIX, the function checks whether &lt;em&gt;path&lt;/em&gt;&amp;rsquo;s parent, &lt;code&gt;path/..&lt;/code&gt;, is on a different device than &lt;em&gt;path&lt;/em&gt;, or whether &lt;code&gt;path/..&lt;/code&gt; and &lt;em&gt;path&lt;/em&gt; point to the same i-node on the same device &amp;mdash; this should detect mount points for all Unix and POSIX variants. Not implemented on Windows.</source>
          <target state="translated">如果路径是&lt;em&gt;安装点，&lt;/em&gt;则返回 &lt;code&gt;True&lt;/code&gt; ：文件系统中已安装其他文件系统的点。上POSIX，功能检查是否&lt;em&gt;路径&lt;/em&gt;的父， &lt;code&gt;path/..&lt;/code&gt; ，是一个不同的设备比&lt;em&gt;路径&lt;/em&gt;，或者是否 &lt;code&gt;path/..&lt;/code&gt; 和&lt;em&gt;路径&lt;/em&gt;指向相同的设备在相同的i节点-这应该检测安装点适用于所有Unix和POSIX变体。在Windows上未实现。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9afb4535b3729c6d0e0d6a0b2e494436d5f60a5d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a FIFO (or a symbolic link pointing to a FIFO), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向FIFO（或指向FIFO的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4feba85341547ec9c8d7c9af03a8598464150c98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a Unix socket (or a symbolic link pointing to a Unix socket), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向Unix套接字（或指向Unix套接字的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="439e7378cd7ac16b088615c73bd4a2778cd5a08d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a block device (or a symbolic link pointing to a block device), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向块设备（或指向块设备的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9311da5b7ba2195f760f72908e165d4a1b0c0ed2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a character device (or a symbolic link pointing to a character device), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向字符设备（或指向字符设备的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddbf12b558df21f01b66142e1fb107f5d0e7ffbf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a directory (or a symbolic link pointing to a directory), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向目录（或指向目录的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc85a37c5205530c84af526e8c77c2fee451f53d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a regular file (or a symbolic link pointing to a regular file), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">如果路径指向常规文件（或指向常规文件的符号链接），则返回 &lt;code&gt;True&lt;/code&gt; ;如果路径指向另一种文件，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9e266e5a48dfbecf6157f1cd37018bb0aafb78b" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a symbolic link, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果路径指向符号链接，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3e7bcc41f3cb8dafc03ff7e8dfd7f64a7697efb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the platform supports creating a TCP socket which can handle both IPv4 and IPv6 connections.</source>
          <target state="translated">如果平台支持创建可以处理IPv4和IPv6连接的TCP套接字，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d19aacc1433bcd8b6c1d1bf2186f75c53e140b17" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited due to a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果进程退出由于信号，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="206ad41a8a79f2d2a04d0aa39b527c05ec952b99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited terminated normally, that is, by calling &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;_exit()&lt;/code&gt;, or by returning from &lt;code&gt;main()&lt;/code&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果退出的进程正常终止（即通过调用 &lt;code&gt;exit()&lt;/code&gt; 或 &lt;code&gt;_exit()&lt;/code&gt; 或从 &lt;code&gt;main()&lt;/code&gt; 返回），则返回 &lt;code&gt;True&lt;/code&gt; 。否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2371ef6d7070d0a2c3ed3aab8cec347fb88ac404" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited using the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;exit(2)&lt;/a&gt;&lt;/em&gt; system call, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果过程中使用的退出&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;出口（2）&lt;/a&gt;&lt;/em&gt;系统调用，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="763539194ddc657f8bfce35a306055e760b7ff85" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process has been continued from a job control stop, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果进程已经从作业控制停止持续，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7913ec047e68c7feb894081fe76b43214c269d2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process has been stopped, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; 如果进程已经停止，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04eb86b3fe6289b4b9cc801209447429ad422429" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process was stopped by delivery of a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果过程是由信号传送将其停止，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="deb7939cbb015824997d14576d407962dbd5b15e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process was terminated by a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果过程是由一个信号终止，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="855aa7ee3f6e65cc92d89f0b17b3352a871f61f4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果队列为空，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35c7d0e384e2716ecb27e9199ee25c2ca9cc9d7a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. Because of multithreading/multiprocessing semantics, this is not reliable.</source>
          <target state="translated">如果队列为空，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。由于多线程/多处理语义，这是不可靠的。</target>
        </trans-unit>
        <trans-unit id="a57ebcf9dc9ed75c53f591ee149aa51b9221f370" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. If empty() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block.</source>
          <target state="translated">如果队列为空，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。如果empty（）返回 &lt;code&gt;False&lt;/code&gt; ，则不能保证对get（）的后续调用不会阻塞。</target>
        </trans-unit>
        <trans-unit id="af743a93284dc926521a9b2024450cd320a56553" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. If empty() returns &lt;code&gt;True&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to put() will not block. Similarly, if empty() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block.</source>
          <target state="translated">如果队列为空，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。如果empty（）返回 &lt;code&gt;True&lt;/code&gt; ，则不能保证后续对put（）的调用都不会阻塞。同样，如果empty（）返回 &lt;code&gt;False&lt;/code&gt; ，则不能保证对get（）的后续调用不会阻塞。</target>
        </trans-unit>
        <trans-unit id="a083c22e4730e61a008e8b51fd350e5a35f29a33" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is full, &lt;code&gt;False&lt;/code&gt; otherwise. Because of multithreading/multiprocessing semantics, this is not reliable.</source>
          <target state="translated">如果队列已满，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。由于多线程/多处理语义，这是不可靠的。</target>
        </trans-unit>
        <trans-unit id="56a9d78ad430b09aab4fd452037022d01388fe62" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is full, &lt;code&gt;False&lt;/code&gt; otherwise. If full() returns &lt;code&gt;True&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block. Similarly, if full() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to put() will not block.</source>
          <target state="translated">如果队列已满，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。如果full（）返回 &lt;code&gt;True&lt;/code&gt; ，则不能保证对get（）的后续调用不会阻塞。同样，如果full（）返回 &lt;code&gt;False&lt;/code&gt; ，则不能保证后续对put（）的调用都不会阻塞。</target>
        </trans-unit>
        <trans-unit id="8ecf2eb7b47c96f882f9b60ec2ec345615a893a1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the running Python interpreter was built from source and is being run from its built location, and not from a location resulting from e.g. running &lt;code&gt;make install&lt;/code&gt; or installing via a binary installer.</source>
          <target state="translated">如果正在运行的Python解释器是从源代码构建的，并且是从其构建位置运行的，而不是从例如运行 &lt;code&gt;make install&lt;/code&gt; 或通过二进制安装程序安装的位置生成的位置，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be82ab611cee8c587ebd3768e948745898d97e2e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the sequence is ASCII titlecase and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. See &lt;a href=&quot;#bytes.title&quot;&gt;&lt;code&gt;bytes.title()&lt;/code&gt;&lt;/a&gt; for more details on the definition of &amp;ldquo;titlecase&amp;rdquo;.</source>
          <target state="translated">如果序列为ASCII标题并且序列不为空，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。有关&amp;ldquo; titlecase&amp;rdquo;定义的更多详细信息，请参见&lt;a href=&quot;#bytes.title&quot;&gt; &lt;code&gt;bytes.title()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c5355077e152a91d7bf3bceb1a280251d1b2a80" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the sequence is empty or all bytes in the sequence are ASCII, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII bytes are in the range 0-0x7F.</source>
          <target state="translated">如果序列为空或序列中的所有字节均为ASCII，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。ASCII字节的范围是0-0x7F。</target>
        </trans-unit>
        <trans-unit id="cfca89450a817b071865e033557c72136d570473" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the server is accepting new connections.</source>
          <target state="translated">如果服务器接受新连接，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41467de2c92a8f2c8121cebc6c6c828a19a0bd3f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the set has no elements in common with &lt;em&gt;other&lt;/em&gt;. Sets are disjoint if and only if their intersection is the empty set.</source>
          <target state="translated">如果集合没有与&lt;em&gt;other&lt;/em&gt;相同的元素，则返回 &lt;code&gt;True&lt;/code&gt; 。当且仅当它们的交集为空集时，集才是不相交的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dc8ba0df0a496b395a7f4f5747bf70303819e76" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the signal handler was removed, or &lt;code&gt;False&lt;/code&gt; if no handler was set for the given signal.</source>
          <target state="translated">如果删除了信号处理程序，则返回 &lt;code&gt;True&lt;/code&gt; ;如果没有为给定信号设置处理程序，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e2d5162d0441a5a54c9201783fdc0b86f2ea87c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified line was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;. Raise a &lt;a href=&quot;#curses.error&quot;&gt;&lt;code&gt;curses.error&lt;/code&gt;&lt;/a&gt; exception if &lt;em&gt;line&lt;/em&gt; is not valid for the given window.</source>
          <target state="translated">如果自上次调用&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;以来修改了指定的行，则返回 &lt;code&gt;True&lt;/code&gt; ；否则返回 &lt;code&gt;False&lt;/code&gt; 。养&lt;a href=&quot;#curses.error&quot;&gt; &lt;code&gt;curses.error&lt;/code&gt; &lt;/a&gt;异常，如果&lt;em&gt;线&lt;/em&gt;是无效的给定的窗口。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f87d91564037c459fa1e2942fb4ed431481bed0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified window was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果自上次调用&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; 之后&lt;/a&gt;修改了指定的窗口，则返回 &lt;code&gt;True&lt;/code&gt; ;否则返回True。否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22f737e6c24d01710b1c7d270b10d5f7006d1909" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stat tuples &lt;em&gt;stat1&lt;/em&gt; and &lt;em&gt;stat2&lt;/em&gt; refer to the same file. These structures may have been returned by &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. This function implements the underlying comparison used by &lt;a href=&quot;#os.path.samefile&quot;&gt;&lt;code&gt;samefile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.sameopenfile&quot;&gt;&lt;code&gt;sameopenfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果stat元组&lt;em&gt;stat1&lt;/em&gt;和&lt;em&gt;stat2&lt;/em&gt;引用同一文件，则返回 &lt;code&gt;True&lt;/code&gt; 。这些结构可能已由&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; 返回&lt;/a&gt;。该函数实现了&lt;a href=&quot;#os.path.samefile&quot;&gt; &lt;code&gt;samefile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.path.sameopenfile&quot;&gt; &lt;code&gt;sameopenfile()&lt;/code&gt; &lt;/a&gt;使用的基础比较。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77cb3324a2e29e3ce81810309a1c90e4e5471d29" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream can be read from. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果可以读取流，则返回 &lt;code&gt;True&lt;/code&gt; 。如果为 &lt;code&gt;False&lt;/code&gt; ，则 &lt;code&gt;read()&lt;/code&gt; 将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="249ad978835f3e95c47acb351c46ec6c76616405" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is closed or in the process of being closed.</source>
          <target state="translated">如果流已关闭或正在关闭，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="604f3e7f6fe3a515ead135deb74f1f599e0ee779" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is interactive (i.e., connected to a terminal/tty device).</source>
          <target state="translated">如果流是交互式的（即，连接到终端/ tty设备），则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e6cd64c153cac17bf0619c32967eaac7a49e4ca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports random access. If &lt;code&gt;False&lt;/code&gt;, &lt;a href=&quot;#io.IOBase.seek&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.IOBase.tell&quot;&gt;&lt;code&gt;tell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果流支持随机访问，则返回 &lt;code&gt;True&lt;/code&gt; 。如果为 &lt;code&gt;False&lt;/code&gt; ，&lt;a href=&quot;#io.IOBase.seek&quot;&gt; &lt;code&gt;seek()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#io.IOBase.tell&quot;&gt; &lt;code&gt;tell()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.IOBase.truncate&quot;&gt; &lt;code&gt;truncate()&lt;/code&gt; &lt;/a&gt;会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50bef7526285e8687107e63ef85d27078093be61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports writing. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果流支持写入，则返回 &lt;code&gt;True&lt;/code&gt; 。如果为 &lt;code&gt;False&lt;/code&gt; ，则 &lt;code&gt;write()&lt;/code&gt; 和&lt;a href=&quot;#io.IOBase.truncate&quot;&gt; &lt;code&gt;truncate()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42bacfe943f46d4a1c2c6cebfb71131a4a06517f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string ends with the specified &lt;em&gt;suffix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;suffix&lt;/em&gt; can also be a tuple of suffixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">返回 &lt;code&gt;True&lt;/code&gt; ，如果使用指定的字符串结尾&lt;em&gt;的后缀&lt;/em&gt;，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;后缀&lt;/em&gt;也可以是要查找的后缀元组。使用可选的&lt;em&gt;start&lt;/em&gt;，从该位置&lt;em&gt;开始&lt;/em&gt;测试。使用可选的&lt;em&gt;end&lt;/em&gt;，停止在该位置进行比较。</target>
        </trans-unit>
        <trans-unit id="c6a017e127b2399897c25fc6396743bb2f3a84e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果字符串是一个用大写字母区分大小写的字符串，并且至少有一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ，例如，大写字符只能跟在无大小写的字符后面，而小写字母只能跟在大写字符后面。否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6264089d8de631c52b76e657bc9db3608da95d5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a valid identifier according to the language definition, section &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;Identifiers and keywords&lt;/a&gt;.</source>
          <target state="translated">如果该字符串是根据语言定义，&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;标识符和关键字&lt;/a&gt;部分的有效标识符，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f808a17463a2dba20777af30cab93a548bb93d2c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a valid identifier according to the language definition, section &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;Identifiers and keywords&lt;/a&gt;.</source>
          <target state="translated">如果字符串是根据语言定义，&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;标识符和关键字&lt;/a&gt;部分确定的有效标识符，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d05aebde61c6a95d1e6831ed8c32ad5910fa404a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is empty or all characters in the string are ASCII, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII characters have code points in the range U+0000-U+007F.</source>
          <target state="translated">如果字符串为空或字符串中的所有字符均为ASCII，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。ASCII字符的代码点范围为U + 0000-U + 007F。</target>
        </trans-unit>
        <trans-unit id="dc5cddb4d7ab01addce901d0aef39f28fc262c98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is a parameter.</source>
          <target state="translated">如果符号是参数，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275cf00809c0de535595a35aabdc067938e6e34f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is assigned to in its block.</source>
          <target state="translated">如果符号已在其块中分配给它，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ef5b3812cba647978613b33bf72340f52a2b222" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is created from an import statement.</source>
          <target state="translated">如果符号是从import语句创建的，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94eb9fabd9ac64fd1a6c1bb78541062b0d8bf653" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is declared global with a global statement.</source>
          <target state="translated">如果使用全局语句将符号声明为全局符号，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d1c9315c7fb03567e13eb4859cc8a14bc92f694" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is global.</source>
          <target state="translated">如果符号是全局符号，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="338df9a9dc2042d16ab26f55265a3900926ac4d7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is local to its block.</source>
          <target state="translated">如果该符号位于其块的本地，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f365021f3648245e9745b0a51ea3e52db5abf0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is nonlocal.</source>
          <target state="translated">如果符号非本地，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fb94a41bcc9e65cbe45318c948a03149c187884" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is referenced in its block, but not assigned to.</source>
          <target state="translated">如果符号在其块中被引用但未被分配，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7f7d811e0cc5c00c3ad870058e02d729fe900ae" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is used in its block.</source>
          <target state="translated">如果符号在其块中使用，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="108e63985b78abe27d0b5422d8a237001f7d2b6a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal can display colors; otherwise, return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果终端可以显示颜色，则返回 &lt;code&gt;True&lt;/code&gt; 。否则，返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91a581cff4955ee811a38b7d1bb908a4c7a7e143" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-character capabilities. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="translated">如果终端具有插入和删除字符功能，则返回 &lt;code&gt;True&lt;/code&gt; 。仅由于历史原因才包含此功能，因为所有现代软件终端仿真器均具有此功能。</target>
        </trans-unit>
        <trans-unit id="85b660374e31a18de50095f39aaef17dac893e97" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-line capabilities, or can simulate them using scrolling regions. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="translated">如果终端具有插入和删除行功能，或者可以使用滚动区域模拟它们，则返回 &lt;code&gt;True&lt;/code&gt; 。仅由于历史原因才包含此功能，因为所有现代软件终端仿真器均具有此功能。</target>
        </trans-unit>
        <trans-unit id="526baa42175cfef3824865478f0b5c21aa7ff75f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is closing or is closed.</source>
          <target state="translated">如果传输正在关闭或已关闭，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46d7e07bad4118b3056cb7ef3de9cc355eaafccd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving new data.</source>
          <target state="translated">如果传输正在接收新数据，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a2b59024a3b8fad0cf8dff67e3984b9188b9b58" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving.</source>
          <target state="translated">如果运输正在接收，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69ddfdebbe14972c98b8094136416df377365ded" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying lock is acquired.</source>
          <target state="translated">如果获取了基础锁，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddc7c3a25e2bee841581fd3f05112cae39dc84ad" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying mapping has a key &lt;em&gt;key&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果基础映射具有&lt;em&gt;键&lt;/em&gt;，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40c12e4849ea909ddeafbc08cb16eb8908555c48" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying transport supports the &lt;a href=&quot;#asyncio.StreamWriter.write_eof&quot;&gt;&lt;code&gt;write_eof()&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果基础传输支持&lt;a href=&quot;#asyncio.StreamWriter.write_eof&quot;&gt; &lt;code&gt;write_eof()&lt;/code&gt; &lt;/a&gt;方法，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="480e290cef60522d2dabd099124ba6a1ba69ec8a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the values &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are close to each other and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;的值彼此接近，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd4dda98a06c458cf6ee795a03d82503663ac9df" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the watcher is ready to use.</source>
          <target state="translated">如果可以使用观察者，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="846770472190bed4fb6d4cee9b0773323b180eaa" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are &lt;a href=&quot;#asyncio.Queue.maxsize&quot;&gt;&lt;code&gt;maxsize&lt;/code&gt;&lt;/a&gt; items in the queue.</source>
          <target state="translated">如果队列中有&lt;a href=&quot;#asyncio.Queue.maxsize&quot;&gt; &lt;code&gt;maxsize&lt;/code&gt; 个&lt;/a&gt;项目，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0086d7c7e020a16f98072f19e5f7b43721a7c0ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are only whitespace characters in the string and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果字符串中只有空格字符并且至少有一个字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="100cc0f7d34467a8c33dd5f16792b23d7e099d02" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a &lt;em&gt;Content-Disposition&lt;/em&gt; header and its (case insensitive) value is &lt;code&gt;attachment&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果存在&lt;em&gt;Content-Disposition&lt;/em&gt;标头且其（不区分大小写）值为 &lt;code&gt;attachment&lt;/code&gt; ，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="88acd12ea431c48306a97ff58c87f31af2378561" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a resource named &lt;em&gt;name&lt;/em&gt; in the package, otherwise &lt;code&gt;False&lt;/code&gt;. Remember that directories are &lt;em&gt;not&lt;/em&gt; resources! &lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements.</source>
          <target state="translated">如果包中有一个名为&lt;em&gt;name&lt;/em&gt;的资源，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。请记住，目录&lt;em&gt;不是&lt;/em&gt;资源！&lt;em&gt;package&lt;/em&gt;是符合 &lt;code&gt;Package&lt;/code&gt; 要求的名称或模块对象。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="996e77f147432092fc3724fe76b70a8bcf929b13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one lowercase ASCII character in the sequence and no uppercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果序列中至少有一个小写ASCII字符且没有大写ASCII字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92f5f2c425e59fd40f969f6febb163b6df2bc469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one uppercase alphabetic ASCII character in the sequence and no lowercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果序列中至少有一个大写字母ASCII字符且没有小写ASCII字符，则返回 &lt;code&gt;True&lt;/code&gt; ,否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f018e81894dfe3df30b71271c53b5877e9f676cb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this archive member is a directory.</source>
          <target state="translated">如果此存档成员是目录，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8a9c00f57e82e4457cc569ce712389ae2b23d86" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a directory or a symbolic link pointing to a directory; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to any other kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">如果此条目是目录或指向目录的符号链接，则返回 &lt;code&gt;True&lt;/code&gt; ;否则，返回True。如果该条目是或指向任何其他类型的文件，或者如果该文件不再存在，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e1f150e38055459612b41872492d702f1c2b4ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a file or a symbolic link pointing to a file; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to a directory or other non-file entry, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">如果此条目是文件或指向文件的符号链接，则返回 &lt;code&gt;True&lt;/code&gt; ;否则，返回True。如果该条目是或指向目录或其他非文件条目，或者不再存在，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebb42a4b63e45194892f25ae4514dfde880e08e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a symbolic link (even if broken); return &lt;code&gt;False&lt;/code&gt; if the entry points to a directory or any kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">如果此条目是符号链接（即使已断开），则返回 &lt;code&gt;True&lt;/code&gt; ;否则，返回True。如果条目指向目录或任何类型的文件，或者不再存在，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18303bf9a32a93e062e86dbfa83352c5ada8906d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a subnet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">如果此网络是&lt;em&gt;other&lt;/em&gt;的子网，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e41b3833822eb6eae12780640abf60dccecc3b9c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a supernet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">如果此网络是&lt;em&gt;other&lt;/em&gt;的超网，则返回 &lt;code&gt;True&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="727954683700e3d8d89d6ef42f609bc102a5fce8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; iff the actual output from an example (&lt;em&gt;got&lt;/em&gt;) matches the expected output (&lt;em&gt;want&lt;/em&gt;). These strings are always considered to match if they are identical; but depending on what option flags the test runner is using, several non-exact match types are also possible. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt; for more information about option flags.</source>
          <target state="translated">如果示例的实际输出（&lt;em&gt;got&lt;/em&gt;）与期望的输出（&lt;em&gt;want&lt;/em&gt;）相匹配，则返回 &lt;code&gt;True&lt;/code&gt; 。如果这些字符串相同，则始终被视为匹配。但是根据测试运行程序使用的选项标记，也可以使用几种非完全匹配类型。有关&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;的更多信息，请参见选项标志部分。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1de22c5a965cc847885b2bf41b6098f143d4b99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, depending on whether the programmer can change the colors displayed by the terminal.</source>
          <target state="translated">根据程序员是否可以更改终端显示的颜色，返回 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b85e75461ec6bb932c4991cae38140b56917a150" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;_testcapi.WITH_PYMALLOC&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;_testcapi.WITH_PYMALLOC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f87f88940a8a96527585959eeaccfdfabb9189c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a % b&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a % b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b8659b23e94903498c5d1ca949ff437497e3767" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a * b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">对于&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;数字，返回 &lt;code&gt;a * b&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51a7f45521ef8ea1606816335e16f763d6b36469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a ** b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">对于&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;数字，返回 &lt;code&gt;a ** b&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="736a5ae90d2d93b5844580bcb72f35a3ece74f1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt; for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; sequences.</source>
          <target state="translated">为&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;序列返回 &lt;code&gt;a + b&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bdefc322a2065725bb27881e4b8aed55310a6b3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">对于&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;数字，返回 &lt;code&gt;a + b&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad7f6b7e97caca43dea5d4f732653e45cff7e53d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a - b&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a - b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e8d55d9372445a7d6ed3dcd75a7c1ab28b4e936" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a / b&lt;/code&gt; where 2/3 is .66 rather than 0. This is also known as &amp;ldquo;true&amp;rdquo; division.</source>
          <target state="translated">返回 &lt;code&gt;a / b&lt;/code&gt; ，其中2/3是.66而不是0。这也称为&amp;ldquo;真&amp;rdquo;除法。</target>
        </trans-unit>
        <trans-unit id="51020df3e8e82f8aac651fa28963a554a44d0f65" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a // b&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a // b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de8819b044ad930fceb726cf1e718b78c3daf32e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a == b&lt;/code&gt;. This function uses an approach designed to prevent timing analysis by avoiding content-based short circuiting behaviour, making it appropriate for cryptography. &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; must both be of the same type: either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (ASCII only, as e.g. returned by &lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt;&lt;code&gt;HMAC.hexdigest()&lt;/code&gt;&lt;/a&gt;), or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a == b&lt;/code&gt; 。此功能使用一种旨在避免时序分析的方法，该方法可避免基于内容的短路行为，从而使其适用于密码学。&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;必须都具有相同的类型：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;（仅ASCII，例如由&lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt; &lt;code&gt;HMAC.hexdigest()&lt;/code&gt; &lt;/a&gt;返回），或类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="287d2f97d6747650012eb4ac11c530ce717136e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a == b&lt;/code&gt;. This function uses an approach designed to prevent timing analysis by avoiding content-based short circuiting behaviour, making it appropriate for cryptography. &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; must both be of the same type: either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (ASCII only, as e.g. returned by &lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt;&lt;code&gt;HMAC.hexdigest()&lt;/code&gt;&lt;/a&gt;), or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a == b&lt;/code&gt; 。此功能使用一种旨在避免时序分析的方法，该方法可避免基于内容的短路行为，从而使其适用于密码学。&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;必须都具有相同的类型：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;（仅ASCII，例如由&lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt; &lt;code&gt;HMAC.hexdigest()&lt;/code&gt; &lt;/a&gt;返回），或类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="deb19c25cf844536fa91896b6bbb9e4bd6fdc581" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a @ b&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;a @ b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca0fbc387e2b6b366d22b4ea94c4199417d1b6ed" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is b&lt;/code&gt;. Tests object identity.</source>
          <target state="translated">返回 &lt;code&gt;a is b&lt;/code&gt; 。测试对象身份。</target>
        </trans-unit>
        <trans-unit id="c1c5a46246b5252e763393003cc6527325480206" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is not b&lt;/code&gt;. Tests object identity.</source>
          <target state="translated">返回 &lt;code&gt;a is not b&lt;/code&gt; 。测试对象身份。</target>
        </trans-unit>
        <trans-unit id="f6800801d1028a90741ea7bdb1f41c5ecc4f2e41" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;atan(y / x)&lt;/code&gt;, in radians. The result is between &lt;code&gt;-pi&lt;/code&gt; and &lt;code&gt;pi&lt;/code&gt;. The vector in the plane from the origin to point &lt;code&gt;(x, y)&lt;/code&gt; makes this angle with the positive X axis. The point of &lt;a href=&quot;#math.atan2&quot;&gt;&lt;code&gt;atan2()&lt;/code&gt;&lt;/a&gt; is that the signs of both inputs are known to it, so it can compute the correct quadrant for the angle. For example, &lt;code&gt;atan(1)&lt;/code&gt; and &lt;code&gt;atan2(1, 1)&lt;/code&gt; are both &lt;code&gt;pi/4&lt;/code&gt;, but &lt;code&gt;atan2(-1,
-1)&lt;/code&gt; is &lt;code&gt;-3*pi/4&lt;/code&gt;.</source>
          <target state="translated">返回弧度 &lt;code&gt;atan(y / x)&lt;/code&gt; 。结果在 &lt;code&gt;-pi&lt;/code&gt; 和 &lt;code&gt;pi&lt;/code&gt; 之间。平面中从原点到点 &lt;code&gt;(x, y)&lt;/code&gt; 的矢量与正X轴成此角度。&lt;a href=&quot;#math.atan2&quot;&gt; &lt;code&gt;atan2()&lt;/code&gt; &lt;/a&gt;的要点是两个输入的正负号都是已知的，因此它可以计算该角度的正确象限。例如， &lt;code&gt;atan(1)&lt;/code&gt; 和 &lt;code&gt;atan2(1, 1)&lt;/code&gt; 均为 &lt;code&gt;pi/4&lt;/code&gt; ，但 &lt;code&gt;atan2(-1, -1)&lt;/code&gt; 为 &lt;code&gt;-3*pi/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf118d728bd236fca66615283e6410c305db6ffd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;dt + offset&lt;/code&gt;. The &lt;em&gt;dt&lt;/em&gt; argument must be an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance, with &lt;code&gt;tzinfo&lt;/code&gt; set to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;dt + offset&lt;/code&gt; 。&lt;em&gt;dt&lt;/em&gt;参数必须是一个已知的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;实例，并且 &lt;code&gt;tzinfo&lt;/code&gt; 设置为 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15b44269fbfae68d389f71e972b7b213e6cb1d28" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;fmod(x, y)&lt;/code&gt;, as defined by the platform C library. Note that the Python expression &lt;code&gt;x % y&lt;/code&gt; may not return the same result. The intent of the C standard is that &lt;code&gt;fmod(x, y)&lt;/code&gt; be exactly (mathematically; to infinite precision) equal to &lt;code&gt;x - n*y&lt;/code&gt; for some integer &lt;em&gt;n&lt;/em&gt; such that the result has the same sign as &lt;em&gt;x&lt;/em&gt; and magnitude less than &lt;code&gt;abs(y)&lt;/code&gt;. Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; returns a result with the sign of &lt;em&gt;y&lt;/em&gt; instead, and may not be exactly computable for float arguments. For example, &lt;code&gt;fmod(-1e-100, 1e100)&lt;/code&gt; is &lt;code&gt;-1e-100&lt;/code&gt;, but the result of Python&amp;rsquo;s &lt;code&gt;-1e-100 % 1e100&lt;/code&gt; is &lt;code&gt;1e100-1e-100&lt;/code&gt;, which cannot be represented exactly as a float, and rounds to the surprising &lt;code&gt;1e100&lt;/code&gt;. For this reason, function &lt;a href=&quot;#math.fmod&quot;&gt;&lt;code&gt;fmod()&lt;/code&gt;&lt;/a&gt; is generally preferred when working with floats, while Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; is preferred when working with integers.</source>
          <target state="translated">返回平台C库定义的 &lt;code&gt;fmod(x, y)&lt;/code&gt; 。请注意，Python表达式 &lt;code&gt;x % y&lt;/code&gt; 可能不会返回相同的结果。 C标准的目的是，对于某些整数&lt;em&gt;n&lt;/em&gt;， &lt;code&gt;fmod(x, y)&lt;/code&gt; 精确地（数学上;以无限的精度）等于 &lt;code&gt;x - n*y&lt;/code&gt; ，以使结果具有与&lt;em&gt;x&lt;/em&gt;相同的符号且幅度小于 &lt;code&gt;abs(y)&lt;/code&gt; 。 Python的 &lt;code&gt;x % y&lt;/code&gt; 返回一个带有&lt;em&gt;y&lt;/em&gt;符号的结果，并且对于浮点参数可能不是完全可计算的。例如， &lt;code&gt;fmod(-1e-100, 1e100)&lt;/code&gt; 是 &lt;code&gt;-1e-100&lt;/code&gt; ，但是Python的 &lt;code&gt;-1e-100 % 1e100&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;是 &lt;code&gt;1e100-1e-100&lt;/code&gt; ，不能完全表示为浮点数，并且四舍五入到令人惊讶的 &lt;code&gt;1e100&lt;/code&gt; 。因此，使用浮点数时通常首选函数&lt;a href=&quot;#math.fmod&quot;&gt; &lt;code&gt;fmod()&lt;/code&gt; &lt;/a&gt;，而使用整数时则首选Python的 &lt;code&gt;x % y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0c34c342bf1cdb471c4ad30d46ee0a24b38bba3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;timedelta(0)&lt;/code&gt; if DST is not in effect. If DST is in effect, return the offset as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object (see &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; for details). Note that DST offset, if applicable, has already been added to the UTC offset returned by &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt;, so there&amp;rsquo;s no need to consult &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; unless you&amp;rsquo;re interested in obtaining DST info separately. For example, &lt;a href=&quot;#datetime.datetime.timetuple&quot;&gt;&lt;code&gt;datetime.timetuple()&lt;/code&gt;&lt;/a&gt; calls its &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute&amp;rsquo;s &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; method to determine how the &lt;code&gt;tm_isdst&lt;/code&gt; flag should be set, and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;tzinfo.fromutc()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; to account for DST changes when crossing time zones.</source>
          <target state="translated">如果DST无效，则返回 &lt;code&gt;timedelta(0)&lt;/code&gt; 。如果DST有效，则将偏移量作为&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;有关详细信息，请参见utcoffset（））。请注意，如果适用，DST偏移量已经添加到&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;返回的UTC偏移量中，因此除非您有兴趣单独获取DST信息，否则无需咨询&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;。例如，&lt;a href=&quot;#datetime.datetime.timetuple&quot;&gt; &lt;code&gt;datetime.timetuple()&lt;/code&gt; &lt;/a&gt;调用其&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性的&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;方法来确定应如何设置 &lt;code&gt;tm_isdst&lt;/code&gt; 标志，而&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;tzinfo.fromutc()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;来说明在穿越时区时DST的变化。</target>
        </trans-unit>
        <trans-unit id="54a6a103dcb4d4513d47166d532b6998059e92f9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x * (2**i)&lt;/code&gt;. This is essentially the inverse of function &lt;a href=&quot;#math.frexp&quot;&gt;&lt;code&gt;frexp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;x * (2**i)&lt;/code&gt; 。这本质上是函数&lt;a href=&quot;#math.frexp&quot;&gt; &lt;code&gt;frexp()&lt;/code&gt; &lt;/a&gt;的逆函数。</target>
        </trans-unit>
        <trans-unit id="46c2a808a3b4e42d1c206b84ac2a59007274b4fb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; raised to the power &lt;code&gt;y&lt;/code&gt;. Exceptional cases follow Annex &amp;lsquo;F&amp;rsquo; of the C99 standard as far as possible. In particular, &lt;code&gt;pow(1.0, x)&lt;/code&gt; and &lt;code&gt;pow(x, 0.0)&lt;/code&gt; always return &lt;code&gt;1.0&lt;/code&gt;, even when &lt;code&gt;x&lt;/code&gt; is a zero or a NaN. If both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are finite, &lt;code&gt;x&lt;/code&gt; is negative, and &lt;code&gt;y&lt;/code&gt; is not an integer then &lt;code&gt;pow(x, y)&lt;/code&gt; is undefined, and raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 提高到 &lt;code&gt;y&lt;/code&gt; 。例外情况请尽可能遵循C99标准的附件&amp;ldquo; F&amp;rdquo;。特别是，即使 &lt;code&gt;x&lt;/code&gt; 为零或NaN ， &lt;code&gt;pow(1.0, x)&lt;/code&gt; 和 &lt;code&gt;pow(x, 0.0)&lt;/code&gt; 始终返回 &lt;code&gt;1.0&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 都是有限的， &lt;code&gt;x&lt;/code&gt; 是负数，并且 &lt;code&gt;y&lt;/code&gt; 不是整数，则 &lt;code&gt;pow(x, y)&lt;/code&gt; 是未定义的，并引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30e0262bd4ba867fedfc52566d1eb09da934fb13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; to the power of &lt;code&gt;y&lt;/code&gt;, reduced modulo &lt;code&gt;modulo&lt;/code&gt; if given.</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 给力 &lt;code&gt;y&lt;/code&gt; ，降低模 &lt;code&gt;modulo&lt;/code&gt; 如果给。</target>
        </trans-unit>
        <trans-unit id="aff49abe7aace93c93fdaf9e73d078aea6b5c05f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; converted to an integer. Equivalent to &lt;code&gt;a.__index__()&lt;/code&gt;.</source>
          <target state="translated">返回&lt;em&gt;一个&lt;/em&gt;转换为整数。等效于 &lt;code&gt;a.__index__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0930bd03f8c629148151e2a195d02f3bd5dfcca" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted left by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">返回&lt;em&gt;一个&lt;/em&gt;左移&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5eed2bc8bd692a94ca6000df75299688109d9db5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted right by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">返回&lt;em&gt;一个&lt;/em&gt;向右移位&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c7fe1aba68758bf4f1738f9b8bc7a70150721bcf" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;; if &lt;em&gt;mod&lt;/em&gt; is present, return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;, modulo &lt;em&gt;mod&lt;/em&gt; (computed more efficiently than &lt;code&gt;pow(base, exp) % mod&lt;/code&gt;). The two-argument form &lt;code&gt;pow(base, exp)&lt;/code&gt; is equivalent to using the power operator: &lt;code&gt;base**exp&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;底数&lt;/em&gt;返回幂&lt;em&gt;指数&lt;/em&gt; ;如果存在&lt;em&gt;mod&lt;/em&gt;，则将&lt;em&gt;base&lt;/em&gt;返回到power &lt;em&gt;exp&lt;/em&gt;，取&lt;em&gt;mod mod&lt;/em&gt;（比 &lt;code&gt;pow(base, exp) % mod&lt;/code&gt; 效率更高）。两个参数的形式 &lt;code&gt;pow(base, exp)&lt;/code&gt; 等效于使用幂运算符： &lt;code&gt;base**exp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f05dcec1a404cde1b0f067a0a964b56a54b5f6ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, minus 1. Here &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms. For small floats &lt;em&gt;x&lt;/em&gt;, the subtraction in &lt;code&gt;exp(x) - 1&lt;/code&gt; can result in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;significant loss of precision&lt;/a&gt;; the &lt;a href=&quot;#math.expm1&quot;&gt;&lt;code&gt;expm1()&lt;/code&gt;&lt;/a&gt; function provides a way to compute this quantity to full precision:</source>
          <target state="translated">将&lt;em&gt;e&lt;/em&gt;返回到幂&lt;em&gt;x&lt;/em&gt;减1。这里&lt;em&gt;e&lt;/em&gt;是自然对数的底数。对于小浮点数&lt;em&gt;x&lt;/em&gt;， &lt;code&gt;exp(x) - 1&lt;/code&gt; 的减法会导致&lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;精度&lt;/a&gt;的显着降低；所述&lt;a href=&quot;#math.expm1&quot;&gt; &lt;code&gt;expm1()&lt;/code&gt; &lt;/a&gt;函数提供了一种方法来计算此量全精度：</target>
        </trans-unit>
        <trans-unit id="32ee926a1638643a39d7bf9127f034473a63db8c" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip; is the base of natural logarithms. This is usually more accurate than &lt;code&gt;math.e ** x&lt;/code&gt; or &lt;code&gt;pow(math.e, x)&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;e&lt;/em&gt;返回到幂&lt;em&gt;x&lt;/em&gt;，其中&lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip;是自然对数的底数。这通常比 &lt;code&gt;math.e ** x&lt;/code&gt; 或 &lt;code&gt;pow(math.e, x)&lt;/code&gt; 更准确。</target>
        </trans-unit>
        <trans-unit id="732dced3493c574a35c934dc77801e477df9f08f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms.</source>
          <target state="translated">将&lt;em&gt;e&lt;/em&gt;提高到幂&lt;em&gt;x&lt;/em&gt;，其中&lt;em&gt;e&lt;/em&gt;是自然对数的底数。</target>
        </trans-unit>
        <trans-unit id="869fbeced7cf7d56291909bf99e10e204c1f7b4e" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;n&lt;/em&gt; independent iterators from a single iterable.</source>
          <target state="translated">从单个可迭代对象返回&lt;em&gt;n个&lt;/em&gt;独立的迭代器。</target>
        </trans-unit>
        <trans-unit id="c556d07cf327b918d111304566842870baf8e5ba" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;num&lt;/em&gt; cryptographically strong pseudo-random bytes. Raises an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if the PRNG has not been seeded with enough data or if the operation is not supported by the current RAND method. &lt;a href=&quot;#ssl.RAND_status&quot;&gt;&lt;code&gt;RAND_status()&lt;/code&gt;&lt;/a&gt; can be used to check the status of the PRNG and &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;RAND_add()&lt;/code&gt;&lt;/a&gt; can be used to seed the PRNG.</source>
          <target state="translated">返回&lt;em&gt;num个具有&lt;/em&gt;加密强度的伪随机字节。如果PRNG尚未&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;足够的数据，或者当前RAND方法不支持该操作，则引发SSLError。&lt;a href=&quot;#ssl.RAND_status&quot;&gt; &lt;code&gt;RAND_status()&lt;/code&gt; &lt;/a&gt;可用于检查PRNG的状态，而&lt;a href=&quot;#ssl.RAND_add&quot;&gt; &lt;code&gt;RAND_add()&lt;/code&gt; &lt;/a&gt;可用于为PRNG设置种子。</target>
        </trans-unit>
        <trans-unit id="ea961a350612f3d66fa5c073a91b1724238c8398" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;number&lt;/em&gt; rounded to &lt;em&gt;ndigits&lt;/em&gt; precision after the decimal point. If &lt;em&gt;ndigits&lt;/em&gt; is omitted or is &lt;code&gt;None&lt;/code&gt;, it returns the nearest integer to its input.</source>
          <target state="translated">返回&lt;em&gt;数字&lt;/em&gt;舍入到&lt;em&gt;小数点&lt;/em&gt;后的n位精度。如果省略&lt;em&gt;ndigits&lt;/em&gt;或为 &lt;code&gt;None&lt;/code&gt; ，则返回与其输入最接近的整数。</target>
        </trans-unit>
        <trans-unit id="085810cdf180f5497ea9c20f653a975570bc3f11" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; negated (&lt;code&gt;-obj&lt;/code&gt;).</source>
          <target state="translated">返回否定的&lt;em&gt;obj&lt;/em&gt;（ &lt;code&gt;-obj&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="250cdc8288e78bea3126de677e49e772ccffc73d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; positive (&lt;code&gt;+obj&lt;/code&gt;).</source>
          <target state="translated">返回&lt;em&gt;obj&lt;/em&gt;正数（ &lt;code&gt;+obj&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="162485b79078b310772c6399823df5089be66a68" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt; allowing individual elements to be repeated more than once.</source>
          <target state="translated">从输入&lt;em&gt;迭代&lt;/em&gt;返回元素的&lt;em&gt;r&lt;/em&gt;长度子序列，允许单个元素重复多次。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beb2a49a419bbc4a0cb02f78c16ab2b81ccac8b5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="translated">从输入&lt;em&gt;iterable&lt;/em&gt;返回元素的&lt;em&gt;r&lt;/em&gt;长度子序列。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be2cf02ce1fad496966b0fcb69eb88045d90fb28" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;rootObject&lt;/em&gt; as an XML plist-formatted bytes object.</source>
          <target state="translated">返回&lt;em&gt;rootObject&lt;/em&gt;作为XML plist格式的字节对象。</target>
        </trans-unit>
        <trans-unit id="8590e9a4a39bb0c52fdd079e36b8b664d3729130" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;value&lt;/em&gt; as a plist-formatted bytes object. See the documentation for &lt;a href=&quot;#plistlib.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments of this function.</source>
          <target state="translated">以plist格式的字节对象返回&lt;em&gt;值&lt;/em&gt;。有关此函数的关键字参数的说明，请参见&lt;a href=&quot;#plistlib.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="ee9d213c3838bd621dcc1a5c2b7e189dc0f8efa1" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;, truncated to an integer.</source>
          <target state="translated">返回&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;，截断为整数。</target>
        </trans-unit>
        <trans-unit id="b21c0fc98d85e9522726bf652b05f15e2bb4d578" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">返回&lt;em&gt;x&lt;/em&gt;除以&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="75f93bb6e6340283ff56059c87016096441b274d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; factorial as an integer. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;x&lt;/em&gt; is not integral or is negative.</source>
          <target state="translated">以整数形式返回&lt;em&gt;x&lt;/em&gt;阶乘。如果&lt;em&gt;x&lt;/em&gt;不是整数或为负数，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3924954b9991e95339b371117a2199ccac8bc1a7" translate="yes" xml:space="preserve">
          <source>Return POSIX timestamp corresponding to the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. The return value is a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; similar to that returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回与&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;实例相对应的POSIX时间戳。返回值是类似于&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e339edf3ad2f542b96afbfe58204eb717ddf220" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;data&amp;rdquo; wrapper object around the bytes object &lt;em&gt;data&lt;/em&gt;. This is used in functions converting from/to plists to represent the &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; type available in plists.</source>
          <target state="translated">返回围绕字节对象&lt;em&gt;data&lt;/em&gt;的&amp;ldquo;数据&amp;rdquo;包装器对象。在用于/转换成函数的函数中使用它来表示函数中可用的 &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="953e72f5dbb9eaca0848a7d75bbb8db154b7b826" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;memory view&amp;rdquo; object created from the given argument. See &lt;a href=&quot;stdtypes#typememoryview&quot;&gt;Memory Views&lt;/a&gt; for more information.</source>
          <target state="translated">返回从给定参数创建的&amp;ldquo;内存视图&amp;rdquo;对象。有关更多信息，请参见&lt;a href=&quot;stdtypes#typememoryview&quot;&gt;内存视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da21208028aeb33a7f885ed091f22144591f0487" translate="yes" xml:space="preserve">
          <source>Return a 2-tuple; the first element is a string containing the command line to be executed (which can be passed to &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;), and the second element is the mailcap entry for a given MIME type. If no matching MIME type can be found, &lt;code&gt;(None, None)&lt;/code&gt; is returned.</source>
          <target state="translated">返回一个2元组；第一个元素是包含要执行的命令行的字符串（可以将其传递给&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;），第二个元素是给定MIME类型的mailcap条目。如果找不到匹配的MIME类型 &lt;code&gt;(None, None)&lt;/code&gt; 则返回（无，无）。</target>
        </trans-unit>
        <trans-unit id="635b899b13bd94715f60b511ac9cb5a316f14d5c" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple &lt;code&gt;(login, account, password)&lt;/code&gt; of authenticators for &lt;em&gt;host&lt;/em&gt;. If the netrc file did not contain an entry for the given host, return the tuple associated with the &amp;lsquo;default&amp;rsquo; entry. If neither matching host nor default entry is available, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">返回&lt;em&gt;host&lt;/em&gt;的身份验证者的三元组 &lt;code&gt;(login, account, password)&lt;/code&gt; 。如果netrc文件不包含给定主机的条目，则返回与&amp;ldquo;默认&amp;rdquo;条目关联的元组。如果没有匹配的主机或默认条目，则返回 &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2237a0a6c86183cf7fdac655f469aada3b908269" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday).</source>
          <target state="translated">返回一个3元组,(ISO年份、ISO周数、ISO工作日)。</target>
        </trans-unit>
        <trans-unit id="3a71c8bfdd881c72898c5c8e376058acde8661bc" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday). The same as &lt;code&gt;self.date().isocalendar()&lt;/code&gt;.</source>
          <target state="translated">返回一个三元组（ISO年，ISO周号，ISO工作日）。与 &lt;code&gt;self.date().isocalendar()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e509d9c26cac9481d3506cb90ab038b89866617" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#asyncio.asyncio.subprocess.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">返回一个&lt;a href=&quot;#asyncio.asyncio.subprocess.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="4c2835f9e9416dd1ecf0859845d4972006ca8a13" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; instance, a wrapped version of &lt;em&gt;file&lt;/em&gt; which provides transparent transcoding. The original file is closed when the wrapped version is closed.</source>
          <target state="translated">返回&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt; &lt;code&gt;StreamRecoder&lt;/code&gt; &lt;/a&gt;实例，该&lt;em&gt;文件&lt;/em&gt;是提供透明转码的&lt;em&gt;文件&lt;/em&gt;的包装版本。关闭包装版本时，将关闭原始文件。</target>
        </trans-unit>
        <trans-unit id="62846974daa9aa01764dbe2a78e5fa987fc1f670" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; given in the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;:</source>
          <target state="translated">返回与格式 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 的&lt;em&gt;date_string&lt;/em&gt;对应的&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72cc8b85c34fd01c2ff68b6de4dd2b1cc0c16fe8" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. This is the inverse of the function &lt;a href=&quot;#datetime.date.isocalendar&quot;&gt;&lt;code&gt;date.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回与年，周和日指定的ISO日历&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;相对应的日期。这是&lt;a href=&quot;#datetime.date.isocalendar&quot;&gt; &lt;code&gt;date.isocalendar()&lt;/code&gt; &lt;/a&gt;函数的逆函数。</target>
        </trans-unit>
        <trans-unit id="4020f5b532f6e1e5dc5692889e99e01e2e58b763" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to &lt;em&gt;date_string&lt;/em&gt;, parsed according to &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">返回与&lt;em&gt;date_string&lt;/em&gt;相对应的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;&lt;em&gt;时间&lt;/em&gt;，并根据&lt;em&gt;format&lt;/em&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="34c60d227cb67dcdaafedc501e0b5538d29aaf54" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对应于&lt;em&gt;DATE_STRING&lt;/em&gt;中的发射的格式之一&lt;a href=&quot;#datetime.date.isoformat&quot;&gt; &lt;code&gt;date.isoformat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt; &lt;code&gt;datetime.isoformat()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2daa194003e3ad2701bc2aa89040c7590209bb33" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. The non-date components of the datetime are populated with their normal default values. This is the inverse of the function &lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt;&lt;code&gt;datetime.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回一个&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对应于年，周，日指定的ISO日历日期。datetime的非日期部分将使用其正常默认值填充。这是函数&lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt; &lt;code&gt;datetime.isocalendar()&lt;/code&gt; &lt;/a&gt;的逆函数。</target>
        </trans-unit>
        <trans-unit id="e94eee910700d004bb911b7793c76bdb274d4475" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object with new &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute &lt;em&gt;tz&lt;/em&gt;, adjusting the date and time data so the result is the same UTC time as &lt;em&gt;self&lt;/em&gt;, but in &lt;em&gt;tz&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="translated">返回一个&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象的新&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性&lt;em&gt;TZ&lt;/em&gt;，调整的日期和时间数据，所以结果是一样的UTC时间的&lt;em&gt;自我&lt;/em&gt;，但在&lt;em&gt;TZ&lt;/em&gt;的本地时间。</target>
        </trans-unit>
        <trans-unit id="e4cf8125664a78af2d348cb489d29f88928a59dc" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;time_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;. Specifically, this function supports strings in the format:</source>
          <target state="translated">返回一个&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对应于&lt;em&gt;TIME_STRING&lt;/em&gt;中的发射的格式之一&lt;a href=&quot;#datetime.time.isoformat&quot;&gt; &lt;code&gt;time.isoformat()&lt;/code&gt; &lt;/a&gt;。具体来说，此函数支持以下格式的字符串：</target>
        </trans-unit>
        <trans-unit id="af8580b588a82089127232a336fc2ec95bfe6501" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; with the same value, except for those attributes given new values by whichever keyword arguments are specified. Note that &lt;code&gt;tzinfo=None&lt;/code&gt; can be specified to create a naive &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; from an aware &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, without conversion of the time data.</source>
          <target state="translated">返回具有相同值的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;，但那些通过指定关键字参数给定新值的属性除外。注意， &lt;code&gt;tzinfo=None&lt;/code&gt; ，可以指定以创建幼稚&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;从感知&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;，没有时间数据的转换。</target>
        </trans-unit>
        <trans-unit id="d2f847c492c1eeb613723482466288822cd37be3" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any surrogateescape encoded text provided to the &lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts binary data.</source>
          <target state="translated">返回一个&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;对象，该对象会将提供给&lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;方法的任何消息，或提供给&lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法的任何代理&lt;em&gt;转义&lt;/em&gt;编码的文本写入&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;类似文件的对象&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;必须支持接受二进制数据的 &lt;code&gt;write&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="59dbe176ef7ee1cc4d733a9c1b782caacc27714e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any surrogateescape encoded text provided to the &lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts binary data.</source>
          <target state="translated">返回一个&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;对象，该对象会将提供给&lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;方法的任何消息，或提供给&lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法的任何代理&lt;em&gt;转义&lt;/em&gt;编码的文本写入&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;类似文件的对象&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;必须支持接受二进制数据的 &lt;code&gt;write&lt;/code&gt; 方法。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
