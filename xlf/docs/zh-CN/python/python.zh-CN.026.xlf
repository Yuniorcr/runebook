<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="d82fa37f6f5ce4f1b03930450505a16588bbb64a" translate="yes" xml:space="preserve">
          <source>This solution requires a running event loop in the main thread to work, as &lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt;&lt;code&gt;SafeChildWatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此解决方案需要主线程中运行的事件循环（如&lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt; &lt;code&gt;SafeChildWatcher&lt;/code&gt; )&lt;/a&gt;才能正常工作。</target>
        </trans-unit>
        <trans-unit id="0b1dd4e320021de44deafa76cdbbf7a1d713f5e8" translate="yes" xml:space="preserve">
          <source>This sorts the profile by cumulative time in a function, and then only prints the ten most significant lines. If you want to understand what algorithms are taking time, the above line is what you would use.</source>
          <target state="translated">这是按函数中的累计时间对配置文件进行排序,然后只打印最重要的十行。如果你想了解哪些算法是需要时间的,上面这行就是你要用的。</target>
        </trans-unit>
        <trans-unit id="87ad4d93ff10f22be77fdd674b33ad9054193f5c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">不推荐使用这种特殊情况，因为当将&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;装饰器应用于抽象方法时，可以正确地将其标识为抽象：</target>
        </trans-unit>
        <trans-unit id="8129c233d78f17359a870def3539e6e911d0906c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">不推荐使用这种特殊情况，因为当将&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;装饰器应用于抽象方法时，现在可以正确地将其标识为抽象：</target>
        </trans-unit>
        <trans-unit id="211e4437395fb7d3eacf45324b984e92d0566c05" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">不建议使用这种特殊情况，因为当将&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;装饰器应用于抽象方法时，现在可以正确地将其标识为抽象：</target>
        </trans-unit>
        <trans-unit id="279114bff60b44dfc0066ad46c397c25064a129c" translate="yes" xml:space="preserve">
          <source>This specification defines a Uniform Resource Name namespace for UUIDs, the internal format of UUIDs, and methods of generating UUIDs.</source>
          <target state="translated">本规范定义了UUIDs的统一资源名称空间、UUIDs的内部格式以及UUIDs的生成方法。</target>
        </trans-unit>
        <trans-unit id="874696978cd5bbb1087717ab3332b7f732497e0c" translate="yes" xml:space="preserve">
          <source>This specifies the HTTP protocol version used in responses. If set to &lt;code&gt;'HTTP/1.1'&lt;/code&gt;, the server will permit HTTP persistent connections; however, your server &lt;em&gt;must&lt;/em&gt; then include an accurate &lt;code&gt;Content-Length&lt;/code&gt; header (using &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt;) in all of its responses to clients. For backwards compatibility, the setting defaults to &lt;code&gt;'HTTP/1.0'&lt;/code&gt;.</source>
          <target state="translated">这指定了响应中使用的HTTP协议版本。如果设置为 &lt;code&gt;'HTTP/1.1'&lt;/code&gt; ，则服务器将允许HTTP持久连接；但是，服务器在对客户端的所有响应中都&lt;em&gt;必须&lt;/em&gt;包含准确的 &lt;code&gt;Content-Length&lt;/code&gt; 标头（使用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;）。为了向后兼容，该设置默认为 &lt;code&gt;'HTTP/1.0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4926906ff6c9d731dd2502d835a0c4a022613e00" translate="yes" xml:space="preserve">
          <source>This specifies the formal syntax and semantics of absolute URLs.</source>
          <target state="translated">这规定了绝对URL的形式语法和语义。</target>
        </trans-unit>
        <trans-unit id="b12ecdf4a18691d61f1d7860cd0959f3b286fd24" translate="yes" xml:space="preserve">
          <source>This specifies the mapping from OMG IDL to Python.</source>
          <target state="translated">这指定了从OMG IDL到Python的映射。</target>
        </trans-unit>
        <trans-unit id="8da551d8221388503358b7d9ca2bc9f174bf5895" translate="yes" xml:space="preserve">
          <source>This specifies the parsing requirements of IPv6 URLs.</source>
          <target state="translated">这规定了IPv6 URL的解析要求。</target>
        </trans-unit>
        <trans-unit id="93065c605eefe1a69ebb1b6bc29b80656e394208" translate="yes" xml:space="preserve">
          <source>This stack model is used so that context managers that acquire their resources in their &lt;code&gt;__init__&lt;/code&gt; method (such as file objects) can be handled correctly.</source>
          <target state="translated">使用此堆栈模型，以便可以正确处理使用 &lt;code&gt;__init__&lt;/code&gt; 方法（例如文件对象）获取资源的上下文管理器。</target>
        </trans-unit>
        <trans-unit id="657b165eabad3ef2110a1d6933accdc767db077c" translate="yes" xml:space="preserve">
          <source>This starts up a background thread to monitor the queue for LogRecords to process.</source>
          <target state="translated">这将启动一个后台线程来监控要处理的LogRecords队列。</target>
        </trans-unit>
        <trans-unit id="cfff9554c5adbc575949e5e35567b44b13814573" translate="yes" xml:space="preserve">
          <source>This statement assumes that you use the appropriate setting for &lt;code&gt;unixfrom&lt;/code&gt;, and that there are no &lt;code&gt;policy&lt;/code&gt; settings calling for automatic adjustments (for example, &lt;code&gt;refold_source&lt;/code&gt; must be &lt;code&gt;none&lt;/code&gt;, which is &lt;em&gt;not&lt;/em&gt; the default). It is also not 100% true, since if the message does not conform to the RFC standards occasionally information about the exact original text is lost during parsing error recovery. It is a goal to fix these latter edge cases when possible.</source>
          <target state="translated">该语句假定您为 &lt;code&gt;unixfrom&lt;/code&gt; 使用了适当的设置，并且没有任何要求自动调整的 &lt;code&gt;policy&lt;/code&gt; 设置（例如， &lt;code&gt;refold_source&lt;/code&gt; 必须为 &lt;code&gt;none&lt;/code&gt; ，这&lt;em&gt;不是&lt;/em&gt;默认值）。这也不是100％正确，因为如果消息不符合RFC标准，则在解析错误恢复期间有时会丢失有关确切原始文本的信息。一个目标是在可能的情况下解决这些后继情况。</target>
        </trans-unit>
        <trans-unit id="5695000d7ff7e5630ab5bb3f278a09531558042e" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">这个静态方法返回一个转换表可用&lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt;，将每个字符映射在&lt;em&gt;从&lt;/em&gt;成在相同位置处的字符&lt;em&gt;到&lt;/em&gt; ; &lt;em&gt;from&lt;/em&gt;和&lt;em&gt;to都&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象，&lt;/a&gt;并且长度相同。</target>
        </trans-unit>
        <trans-unit id="806daec20accc2ba95a0d761aa1cdcf46a17a2f4" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">这个静态方法返回一个转换表可用&lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt;，将每个字符映射在&lt;em&gt;从&lt;/em&gt;成在相同位置处的字符&lt;em&gt;到&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt;和&lt;em&gt;to都&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象，&lt;/a&gt;并且长度相同。</target>
        </trans-unit>
        <trans-unit id="fed93affb82c475aece27560d7f7449f85bbe008" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此静态方法返回可用于&lt;a href=&quot;#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; &lt;/a&gt;的转换表。</target>
        </trans-unit>
        <trans-unit id="ee1038a57ec92220c32f002317d973e94a4e405f" translate="yes" xml:space="preserve">
          <source>This string contains a platform identifier that can be used to append platform-specific components to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, for instance.</source>
          <target state="translated">例如，此字符串包含一个平台标识符，该标识符可用于将特定于平台的组件附加到&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee8ef044d471590e32de3b3a685514869bb11594" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt;&lt;code&gt;HTMLCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt; &lt;code&gt;HTMLCalendar&lt;/code&gt; 的&lt;/a&gt;此子类可以在构造函数中传递一个语言环境名称，并将在指定的语言环境中返回月份和工作日名称。如果此语言环境包括编码，则包含月份和工作日名称的所有字符串将作为Unicode返回。</target>
        </trans-unit>
        <trans-unit id="dbc4f4107eee8222a6f5a5aa58cd266674093796" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar&quot;&gt; &lt;code&gt;TextCalendar&lt;/code&gt; 的&lt;/a&gt;此子类可以在构造函数中传递一个语言环境名称，并将在指定的语言环境中返回月份和工作日名称。如果此语言环境包括编码，则包含月份和工作日名称的所有字符串将作为Unicode返回。</target>
        </trans-unit>
        <trans-unit id="d7ea75922f47bd0999a4871991963c1f8c3f0ce1" translate="yes" xml:space="preserve">
          <source>This support allows immutable sequences, such as &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; instances, to be used as &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; keys and stored in &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">这种支持允许将不可变序列（例如&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;实例）用作&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;键并存储在&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;实例中。</target>
        </trans-unit>
        <trans-unit id="1e24218daa333721903c467af431435be2cb4830" translate="yes" xml:space="preserve">
          <source>This table contains all events raised by &lt;a href=&quot;sys#sys.audit&quot;&gt;&lt;code&gt;sys.audit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt;&lt;code&gt;PySys_Audit()&lt;/code&gt;&lt;/a&gt; calls throughout the CPython runtime and the standard library. These calls were added in 3.8.0 or later.</source>
          <target state="translated">该表包含整个CPython运行时和标准库中&lt;a href=&quot;sys#sys.audit&quot;&gt; &lt;code&gt;sys.audit()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt; &lt;code&gt;PySys_Audit()&lt;/code&gt; &lt;/a&gt;调用引发的所有事件。这些呼叫是在3.8.0或更高版本中添加的。</target>
        </trans-unit>
        <trans-unit id="f02611c8b86086918f9b0d8d6fba08360ccbf3bd" translate="yes" xml:space="preserve">
          <source>This table contains all events raised by &lt;a href=&quot;sys#sys.audit&quot;&gt;&lt;code&gt;sys.audit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_Audit&quot;&gt;&lt;code&gt;PySys_Audit()&lt;/code&gt;&lt;/a&gt; calls throughout the CPython runtime and the standard library. These calls were added in 3.8.0 or later.</source>
          <target state="translated">该表包含整个CPython运行时和标准库中&lt;a href=&quot;sys#sys.audit&quot;&gt; &lt;code&gt;sys.audit()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_Audit&quot;&gt; &lt;code&gt;PySys_Audit()&lt;/code&gt; &lt;/a&gt;调用引发的所有事件。这些呼叫是在3.8.0或更高版本中添加的。</target>
        </trans-unit>
        <trans-unit id="8ff575b6bfca960b011d17b2cb16cbed1b2362fb" translate="yes" xml:space="preserve">
          <source>This table lists the bitwise operations sorted in ascending priority:</source>
          <target state="translated">本表按升序排列列出了位操作。</target>
        </trans-unit>
        <trans-unit id="ad37e36bc7aa1e48e2a868ce67d705d178a74a99" translate="yes" xml:space="preserve">
          <source>This table lists the sequence operations sorted in ascending priority. In the table, &lt;em&gt;s&lt;/em&gt; and &lt;em&gt;t&lt;/em&gt; are sequences of the same type, &lt;em&gt;n&lt;/em&gt;, &lt;em&gt;i&lt;/em&gt;, &lt;em&gt;j&lt;/em&gt; and &lt;em&gt;k&lt;/em&gt; are integers and &lt;em&gt;x&lt;/em&gt; is an arbitrary object that meets any type and value restrictions imposed by &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">下表列出了按优先级升序排列的序列操作。在表中，&lt;em&gt;s&lt;/em&gt;和&lt;em&gt;t&lt;/em&gt;是相同类型的序列，&lt;em&gt;n&lt;/em&gt;，&lt;em&gt;i&lt;/em&gt;，&lt;em&gt;j&lt;/em&gt;和&lt;em&gt;k&lt;/em&gt;是整数，并且&lt;em&gt;x&lt;/em&gt;是满足&lt;em&gt;s&lt;/em&gt;施加的任何类型和值限制的任意对象。</target>
        </trans-unit>
        <trans-unit id="a2aefacd102c9e6656a62a4fcbeeefcf37daf49c" translate="yes" xml:space="preserve">
          <source>This table shows how abstract operations correspond to operator symbols in the Python syntax and the functions in the &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">下表显示了抽象运算如何与Python语法中的&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;和运算符模块中的函数相对应。</target>
        </trans-unit>
        <trans-unit id="b1dd58529875498466717de342c9a860fc1ad5df" translate="yes" xml:space="preserve">
          <source>This table summarizes the comparison operations:</source>
          <target state="translated">本表总结了比较操作。</target>
        </trans-unit>
        <trans-unit id="0b8f0910cff485b75d8a8a9bb0bef70a5b8fa95c" translate="yes" xml:space="preserve">
          <source>This takes a binary file for reading a pickle data stream.</source>
          <target state="translated">这需要一个二进制文件来读取pickle数据流。</target>
        </trans-unit>
        <trans-unit id="900a01a65ca258d685a4183dcedf4ab95f1befd2" translate="yes" xml:space="preserve">
          <source>This takes a binary file for writing a pickle data stream.</source>
          <target state="translated">这需要一个二进制文件来编写pickle数据流。</target>
        </trans-unit>
        <trans-unit id="86e66be62941acf0508da30f994af1c9b7a508e7" translate="yes" xml:space="preserve">
          <source>This tool adds flexibility to existing functions or classes whose output is hardwired to stdout.</source>
          <target state="translated">该工具为现有的函数或类增加了灵活性,这些函数或类的输出是硬连接到stdout的。</target>
        </trans-unit>
        <trans-unit id="0a41260cd31015b90715324793e49b3b05f1940e" translate="yes" xml:space="preserve">
          <source>This type can be used as follows:</source>
          <target state="translated">这种类型可用于以下方面:</target>
        </trans-unit>
        <trans-unit id="4ee65f84be1d10480bc08fe90f21eed2ddbba4bd" translate="yes" xml:space="preserve">
          <source>This type describes the resource names passed into the various functions in this package. This is defined as &lt;code&gt;Union[str, os.PathLike]&lt;/code&gt;.</source>
          <target state="translated">此类型描述传递给此程序包中各个函数的资源名称。这被定义为 &lt;code&gt;Union[str, os.PathLike]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a19b7eb98d6488f6aac8865d83dc8ae338e23ad" translate="yes" xml:space="preserve">
          <source>This type may be used as follows:</source>
          <target state="translated">这种类型可用于以下情况:</target>
        </trans-unit>
        <trans-unit id="b973b124bff356b4f78d8fc39b8c99c1b87b5238" translate="yes" xml:space="preserve">
          <source>This type represents the types &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; of byte sequences.</source>
          <target state="translated">此类型表示字节序列的类型&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc3a76bb6dedb7cdbe1024f060da03de3f0dba7d" translate="yes" xml:space="preserve">
          <source>This type represents the types &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这种类型的代表类型的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4ac703cec9ee3e03481b97675e769369d5ba849" translate="yes" xml:space="preserve">
          <source>This uses datagrams, which are discrete packets of information that may arrive out of order or be lost while in transit. The parameters are the same as for &lt;a href=&quot;#socketserver.TCPServer&quot;&gt;&lt;code&gt;TCPServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这使用数据报，数据报是离散的信息包，可能会无序到达或在传输过程中丢失。参数与&lt;a href=&quot;#socketserver.TCPServer&quot;&gt; &lt;code&gt;TCPServer&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="56aa8f5d34f966fb99b842edc763ce5f7f477da2" translate="yes" xml:space="preserve">
          <source>This uses the Internet TCP protocol, which provides for continuous streams of data between the client and server. If &lt;em&gt;bind_and_activate&lt;/em&gt; is true, the constructor automatically attempts to invoke &lt;a href=&quot;#socketserver.BaseServer.server_bind&quot;&gt;&lt;code&gt;server_bind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.server_activate&quot;&gt;&lt;code&gt;server_activate()&lt;/code&gt;&lt;/a&gt;. The other parameters are passed to the &lt;a href=&quot;#socketserver.BaseServer&quot;&gt;&lt;code&gt;BaseServer&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">这使用Internet TCP协议，该协议在客户端和服务器之间提供连续的数据流。如果&lt;em&gt;bind_and_activate&lt;/em&gt;为true，则构造函数将自动尝试调用&lt;a href=&quot;#socketserver.BaseServer.server_bind&quot;&gt; &lt;code&gt;server_bind()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socketserver.BaseServer.server_activate&quot;&gt; &lt;code&gt;server_activate()&lt;/code&gt; &lt;/a&gt;。其他参数将传递给&lt;a href=&quot;#socketserver.BaseServer&quot;&gt; &lt;code&gt;BaseServer&lt;/code&gt; &lt;/a&gt;基类。</target>
        </trans-unit>
        <trans-unit id="28cf12232e0ad7f17ee9f0ae6d9c93eb3395bad0" translate="yes" xml:space="preserve">
          <source>This uses the entry&amp;rsquo;s name: directories should always end with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">这使用条目的名称：目录应始终以 &lt;code&gt;/&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="a1b2decf1b76038b0a4989697f74a8b441227dc0" translate="yes" xml:space="preserve">
          <source>This utility method may call &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; repeatedly until the predicate is satisfied, or until a timeout occurs. The return value is the last return value of the predicate and will evaluate to &lt;code&gt;False&lt;/code&gt; if the method timed out.</source>
          <target state="translated">该实用程序方法可以重复调用&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;，直到满足该谓词或发生超时为止。返回值是谓词的最后一个返回值，如果该方法超时，则返回值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3dba7730209902073e9f1027bf8339c611419fa6" translate="yes" xml:space="preserve">
          <source>This value is guaranteed by POSIX to be at least 512.</source>
          <target state="translated">这个值由POSIX保证至少是512。</target>
        </trans-unit>
        <trans-unit id="461cfb21d5f19ff778807be8dac3274bf7b6a8f6" translate="yes" xml:space="preserve">
          <source>This value is initially set based on the value of the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;pycache_prefix=PATH&lt;/code&gt; command-line option or the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt;&lt;/a&gt; environment variable (command-line takes precedence). If neither are set, it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">最初基于&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;pycache_prefix=PATH&lt;/code&gt; 命令行选项或&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt; &lt;/a&gt;环境变量的值设置此值（命令行优先）。如果两者均未设置，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e7b218744870e9be21539cb53c8232f7dfdecba" translate="yes" xml:space="preserve">
          <source>This value is initially set based on the value of the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;pycache_prefix=PATH&lt;/code&gt; command-line option or the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt;&lt;/a&gt; environment variable (command-line takes precedence). If neither are set, it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">最初基于&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;pycache_prefix=PATH&lt;/code&gt; 命令行选项或&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt; &lt;/a&gt;环境变量的值设置此值（命令行优先）。如果两者均未设置，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5cb6aae01c156404e71b59a7cc16a2897739ebe" translate="yes" xml:space="preserve">
          <source>This visitor calls &lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt;&lt;code&gt;visit()&lt;/code&gt;&lt;/a&gt; on all children of the node.</source>
          <target state="translated">该访问者在节点的所有子节点上调用&lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt; &lt;code&gt;visit()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48d16e3abf4349547e65c79bfe2cd30b3ecca80f" translate="yes" xml:space="preserve">
          <source>This watcher is used by default.</source>
          <target state="translated">默认情况下使用该观察器。</target>
        </trans-unit>
        <trans-unit id="c18d35e8fcbe18d32af66e12f7c871cec83985e6" translate="yes" xml:space="preserve">
          <source>This way, you can let &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; do the job of calling the appropriate function after argument parsing is complete. Associating functions with actions like this is typically the easiest way to handle the different actions for each of your subparsers. However, if it is necessary to check the name of the subparser that was invoked, the &lt;code&gt;dest&lt;/code&gt; keyword argument to the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; call will work:</source>
          <target state="translated">这样，您可以让&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;完成参数解析后调用适当函数的工作。将函数与这样的动作相关联通常是为每个子解析器处理不同动作的最简单方法。但是，如果有必要检查被调用的子解析器的名称，则&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;调用的 &lt;code&gt;dest&lt;/code&gt; 关键字参数将起作用：</target>
        </trans-unit>
        <trans-unit id="e4e3194f441141c309638c96c8e53e0bd92fa3ad" translate="yes" xml:space="preserve">
          <source>This way, you can use date/timestamps from Python without any additional fiddling in most cases. The format of the adapters is also compatible with the experimental SQLite date/time functions.</source>
          <target state="translated">这样,在大多数情况下,你可以使用Python中的日期/时间戳,而不需要任何额外的摆弄。适配器的格式也与实验性的SQLite日期/时间函数兼容。</target>
        </trans-unit>
        <trans-unit id="5630aa81c7c661cc3164234f583e1b2ab4ae528a" translate="yes" xml:space="preserve">
          <source>This widget accepts the following specific option:</source>
          <target state="translated">此小组件接受以下特定选项。</target>
        </trans-unit>
        <trans-unit id="b7516b8e7c43a47e302154f3f68de21c415616f8" translate="yes" xml:space="preserve">
          <source>This widget accepts the following specific options:</source>
          <target state="translated">此小组件接受以下特定选项。</target>
        </trans-unit>
        <trans-unit id="52f8a705e29799639a562bd8ad8470b5b2529355" translate="yes" xml:space="preserve">
          <source>This widget generates a &lt;strong&gt;&amp;lt;&amp;lt;NotebookTabChanged&amp;gt;&amp;gt;&lt;/strong&gt; virtual event after a new tab is selected.</source>
          <target state="translated">选择新选项卡后，此小部件将生成一个&lt;strong&gt;&amp;lt;&amp;lt; NotebookTabChanged &amp;gt;&amp;gt;&lt;/strong&gt;虚拟事件。</target>
        </trans-unit>
        <trans-unit id="583cc459c26656b6f5fa15adcf419a55eb1a8ea4" translate="yes" xml:space="preserve">
          <source>This widget has neither specific options nor specific methods, besides the ones inherited from &lt;code&gt;ttk.Widget&lt;/code&gt;.</source>
          <target state="translated">除了从 &lt;code&gt;ttk.Widget&lt;/code&gt; 继承的选项外，此小部件既没有特定的选项也没有特定的方法。</target>
        </trans-unit>
        <trans-unit id="cc6727990ae2f38c8adc40d38ee32c2f9a8cccff" translate="yes" xml:space="preserve">
          <source>This widget supports only &amp;ldquo;southeast&amp;rdquo; resizing.</source>
          <target state="translated">此小部件仅支持&amp;ldquo;东南&amp;rdquo;大小调整。</target>
        </trans-unit>
        <trans-unit id="893091dadd2289a375b8c02352c7b0621886804a" translate="yes" xml:space="preserve">
          <source>This will add a header that looks like</source>
          <target state="translated">这将添加一个类似于</target>
        </trans-unit>
        <trans-unit id="f14e86fc21e10a9d916560d64ebdcc9da48c2735" translate="yes" xml:space="preserve">
          <source>This will add to the package&amp;rsquo;s &lt;code&gt;__path__&lt;/code&gt; all subdirectories of directories on &lt;code&gt;sys.path&lt;/code&gt; named after the package. This is useful if one wants to distribute different parts of a single logical package as multiple directories.</source>
          <target state="translated">这会将以软件包名称命名的 &lt;code&gt;sys.path&lt;/code&gt; 上目录的所有子目录添加到软件包的 &lt;code&gt;__path__&lt;/code&gt; 中。如果希望将单个逻辑包的不同部分分发为多个目录，这将很有用。</target>
        </trans-unit>
        <trans-unit id="fb6d4ec5dcc38b1ced4593b66a2139b238f95cf3" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;&quot;SimpleHTTP/&quot; + __version__&lt;/code&gt;, where &lt;code&gt;__version__&lt;/code&gt; is defined at the module level.</source>
          <target state="translated">这将是 &lt;code&gt;&quot;SimpleHTTP/&quot; + __version__&lt;/code&gt; ，其中 &lt;code&gt;__version__&lt;/code&gt; 是在模块级别定义的。</target>
        </trans-unit>
        <trans-unit id="7a74e2ffba13721aff2e34d74a03a08eb350d82d" translate="yes" xml:space="preserve">
          <source>This will copy everything except &lt;code&gt;.pyc&lt;/code&gt; files and files or directories whose name starts with &lt;code&gt;tmp&lt;/code&gt;.</source>
          <target state="translated">这将复制除 &lt;code&gt;.pyc&lt;/code&gt; 文件以及名称以 &lt;code&gt;tmp&lt;/code&gt; 开头的文件或目录以外的所有内容。</target>
        </trans-unit>
        <trans-unit id="56e49294b1d7ce21a415dcf1693ab79057f7c8de" translate="yes" xml:space="preserve">
          <source>This will deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates enough output to a pipe such that it blocks waiting for the OS pipe buffer to accept more data. Use &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; when using pipes to avoid that.</source>
          <target state="translated">当使用 &lt;code&gt;stdout=PIPE&lt;/code&gt; 或 &lt;code&gt;stderr=PIPE&lt;/code&gt; 时，这将导致死锁，并且子进程会向管道生成足够的输出，从而阻塞等待OS管道缓冲区接受更多数据的等待。使用管道时，请使用&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;来避免这种情况。</target>
        </trans-unit>
        <trans-unit id="f66e79b5854a58b1ad3c1f14c288974b4d8104d8" translate="yes" xml:space="preserve">
          <source>This will extend the bindings for the toplevel window containing the notebook as follows:</source>
          <target state="translated">这将扩展包含笔记本的toplevel窗口的绑定,具体如下。</target>
        </trans-unit>
        <trans-unit id="5d9c8b968447210c764e73083a7543273f082164" translate="yes" xml:space="preserve">
          <source>This will import &lt;code&gt;example.py&lt;/code&gt; as a standalone module and run &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; on it. Note that this may not work correctly if the file is part of a package and imports other submodules from that package.</source>
          <target state="translated">这会将 &lt;code&gt;example.py&lt;/code&gt; 导入为独立模块，并在其上运行&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;。请注意，如果文件是程序包的一部分，并且从该程序包导入其他子模块，则此方法可能无法正常工作。</target>
        </trans-unit>
        <trans-unit id="39490d2477cc24388e4a798bb86272c054747d2f" translate="yes" xml:space="preserve">
          <source>This will produce a standalone executable, which can be run on any machine with the appropriate interpreter available. See &lt;a href=&quot;#zipapp-specifying-the-interpreter&quot;&gt;Specifying the Interpreter&lt;/a&gt; for details. It can be shipped to users as a single file.</source>
          <target state="translated">这将产生一个独立的可执行文件，可以在具有适当解释器的任何计算机上运行。有关详细信息，请参见&lt;a href=&quot;#zipapp-specifying-the-interpreter&quot;&gt;指定解释器&lt;/a&gt;。它可以作为单个文件传送给用户。</target>
        </trans-unit>
        <trans-unit id="97484c013cbe0659d7256e11582bf0a3ad503821" translate="yes" xml:space="preserve">
          <source>This will run all tests defined in the named module.</source>
          <target state="translated">这将运行所有在指定模块中定义的测试。</target>
        </trans-unit>
        <trans-unit id="2094ced9ee584cde74f455b9491be9e83a991dc2" translate="yes" xml:space="preserve">
          <source>This will send a request to the server using the HTTP request method &lt;em&gt;method&lt;/em&gt; and the selector &lt;em&gt;url&lt;/em&gt;.</source>
          <target state="translated">这将使用HTTP request方法&lt;em&gt;method&lt;/em&gt;和选择器&lt;em&gt;url&lt;/em&gt;向服务器发送请求。</target>
        </trans-unit>
        <trans-unit id="23b91a0f0ff42f96fa95a59986f06ac3f48f2a85" translate="yes" xml:space="preserve">
          <source>This will set &lt;code&gt;obj.attr&lt;/code&gt; to 5 for the duration of the &lt;code&gt;with&lt;/code&gt; block, restoring the old value at the end of the block. If &lt;code&gt;attr&lt;/code&gt; doesn&amp;rsquo;t exist on &lt;code&gt;obj&lt;/code&gt;, it will be created and then deleted at the end of the block.</source>
          <target state="translated">这将在 &lt;code&gt;with&lt;/code&gt; 块的持续时间内将 &lt;code&gt;obj.attr&lt;/code&gt; 设置为5，以恢复该块末尾的旧值。如果 &lt;code&gt;obj&lt;/code&gt; 上不存在 &lt;code&gt;attr&lt;/code&gt; ，它将在该块的末尾创建并删除。</target>
        </trans-unit>
        <trans-unit id="de375732b809a212afe6d4f9378da4dcd4108925" translate="yes" xml:space="preserve">
          <source>This will set &lt;code&gt;obj[&quot;item&quot;]&lt;/code&gt; to 5 for the duration of the &lt;code&gt;with&lt;/code&gt; block, restoring the old value at the end of the block. If &lt;code&gt;item&lt;/code&gt; doesn&amp;rsquo;t exist on &lt;code&gt;obj&lt;/code&gt;, it will be created and then deleted at the end of the block.</source>
          <target state="translated">这将在 &lt;code&gt;with&lt;/code&gt; 块的持续时间内将 &lt;code&gt;obj[&quot;item&quot;]&lt;/code&gt; 为5，从而在该块的末尾恢复旧值。如果在 &lt;code&gt;obj&lt;/code&gt; 上不存在 &lt;code&gt;item&lt;/code&gt; ，它将被创建，然后在块的末尾删除。</target>
        </trans-unit>
        <trans-unit id="f075685c6e10f2c3bfffdc256e8855b5f859c7c1" translate="yes" xml:space="preserve">
          <source>This will sort all the statistics by file name, and then print out statistics for only the class init methods (since they are spelled with &lt;code&gt;__init__&lt;/code&gt; in them). As one final example, you could try:</source>
          <target state="translated">这将按文件名对所有统计信息进行排序，然后仅输出类初始化方法的统计信息（因为它们中的拼写是 &lt;code&gt;__init__&lt;/code&gt; ）。作为最后一个示例，您可以尝试：</target>
        </trans-unit>
        <trans-unit id="8ccb8cdb74cd1cd8b07da082d3d59c7892819a38" translate="yes" xml:space="preserve">
          <source>This won&amp;rsquo;t display anything unless an example fails, in which case the failing example(s) and the cause(s) of the failure(s) are printed to stdout, and the final line of output is &lt;code&gt;***Test Failed*** N failures.&lt;/code&gt;, where &lt;em&gt;N&lt;/em&gt; is the number of examples that failed.</source>
          <target state="translated">除非示例失败，否则不会显示任何内容，在这种情况下，失败的示例和失败的原因将被打印到stdout，并且输出的最后一行是 &lt;code&gt;***Test Failed*** N failures.&lt;/code&gt; ，其中&lt;em&gt;N&lt;/em&gt;是失败的示例数。</target>
        </trans-unit>
        <trans-unit id="45e4d25dd4f52913e8043d67497db894d9ad0b86" translate="yes" xml:space="preserve">
          <source>This works as class or function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;. With a class, it applies recursively to all methods defined in that class (but not to methods defined in its superclasses or subclasses).</source>
          <target state="translated">这可用作类或函数&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;。对于一个类，它递归地应用于该类中定义的所有方法（但不适用于其超类或子类中定义的方法）。</target>
        </trans-unit>
        <trans-unit id="5c886fb4204cedba7ca0634a4e0a0e9ee1736739" translate="yes" xml:space="preserve">
          <source>This works as class or function &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;. With a class, it applies recursively to all methods defined in that class (but not to methods defined in its superclasses or subclasses).</source>
          <target state="translated">这可以用作类或函数&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;。对于一个类，它递归地应用于该类中定义的所有方法（但不适用于其超类或子类中定义的方法）。</target>
        </trans-unit>
        <trans-unit id="22b71cd883b8cced346581da93f8ff4e43210206" translate="yes" xml:space="preserve">
          <source>This works because the dummy definition of &lt;code&gt;_()&lt;/code&gt; simply returns the string unchanged. And this dummy definition will temporarily override any definition of &lt;code&gt;_()&lt;/code&gt; in the built-in namespace (until the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; command). Take care, though if you have a previous definition of &lt;code&gt;_()&lt;/code&gt; in the local namespace.</source>
          <target state="translated">之所以可行，是因为 &lt;code&gt;_()&lt;/code&gt; 的虚拟定义只是简单地返回了不变的字符串。并且此虚拟定义将临时覆盖内置名称空间中的 &lt;code&gt;_()&lt;/code&gt; 定义（直到&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt;命令）。请注意，即使您在本地名称空间中具有 &lt;code&gt;_()&lt;/code&gt; 的先前定义。</target>
        </trans-unit>
        <trans-unit id="53dfd42c2a2e865ad36bac73aed2be7faf9d1083" translate="yes" xml:space="preserve">
          <source>This works because the dummy definition of &lt;code&gt;_()&lt;/code&gt; simply returns the string unchanged. And this dummy definition will temporarily override any definition of &lt;code&gt;_()&lt;/code&gt; in the built-in namespace (until the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; command). Take care, though if you have a previous definition of &lt;code&gt;_()&lt;/code&gt; in the local namespace.</source>
          <target state="translated">之所以可行，是因为 &lt;code&gt;_()&lt;/code&gt; 的伪定义只是简单地返回了不变的字符串。并且该虚拟定义将临时覆盖内置名称空间中的 &lt;code&gt;_()&lt;/code&gt; 定义（直到&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt;命令）。请注意，即使您在本地名称空间中具有 &lt;code&gt;_()&lt;/code&gt; 的先前定义。</target>
        </trans-unit>
        <trans-unit id="28e244347ead2b1ee157031a5e28d94349b74b67" translate="yes" xml:space="preserve">
          <source>This wrapper may also generate output using the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module to indicate behaviors that are questionable but which may not actually be prohibited by &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. Unless they are suppressed using Python command-line options or the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; API, any such warnings will be written to &lt;code&gt;sys.stderr&lt;/code&gt; (&lt;em&gt;not&lt;/em&gt;&lt;code&gt;wsgi.errors&lt;/code&gt;, unless they happen to be the same object).</source>
          <target state="translated">该包装器还可以使用&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;模块生成输出，以指示可疑的行为，但实际上可能不会被&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;禁止。除非使用Python命令行选项或&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt; API 抑制它们，否则任何此类警告都将写入 &lt;code&gt;sys.stderr&lt;/code&gt; （&lt;em&gt;不是&lt;/em&gt; &lt;code&gt;wsgi.errors&lt;/code&gt; ，除非它们恰好是同一对象）。</target>
        </trans-unit>
        <trans-unit id="150bcb2beea81f0a936d8bb788c5d0ed814a30b2" translate="yes" xml:space="preserve">
          <source>This wraps the decorator with something that wraps the decorated function in &lt;a href=&quot;#typing.no_type_check&quot;&gt;&lt;code&gt;no_type_check()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这将装饰器包装成将装饰的函数包装在&lt;a href=&quot;#typing.no_type_check&quot;&gt; &lt;code&gt;no_type_check()&lt;/code&gt; 中的东西&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d67963b381a87c27dbbc7cb706dcb0aa012e09c" translate="yes" xml:space="preserve">
          <source>This, for example, is true of &lt;code&gt;int.__add__&lt;/code&gt;. An object passing this test has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; method but not a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; method, but beyond that the set of attributes varies. A &lt;a href=&quot;stdtypes#definition.__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt; attribute is usually sensible, and &lt;code&gt;__doc__&lt;/code&gt; often is.</source>
          <target state="translated">例如， &lt;code&gt;int.__add__&lt;/code&gt; 是正确的。通过此测试的对象具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;方法，但没有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;方法，但除此之外，属性集有所不同。一个&lt;a href=&quot;stdtypes#definition.__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt;属性通常是明智的，而且 &lt;code&gt;__doc__&lt;/code&gt; 往往是。</target>
        </trans-unit>
        <trans-unit id="be2b1c03b6a9574d468f089d2e0f324a5fec7c63" translate="yes" xml:space="preserve">
          <source>This, for example, is true of &lt;code&gt;int.__add__&lt;/code&gt;. An object passing this test has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; method but not a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; method, but beyond that the set of attributes varies. A &lt;a href=&quot;stdtypes#definition.__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt; attribute is usually sensible, and &lt;code&gt;__doc__&lt;/code&gt; often is.</source>
          <target state="translated">例如， &lt;code&gt;int.__add__&lt;/code&gt; 就是如此。通过此测试的对象具有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;方法，但没有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;方法，但除此之外，属性集有所不同。一个&lt;a href=&quot;stdtypes#definition.__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt;属性通常是明智的，而且 &lt;code&gt;__doc__&lt;/code&gt; 往往是。</target>
        </trans-unit>
        <trans-unit id="778e46a17402881cd5c7f2ae7c1daa725c393ac4" translate="yes" xml:space="preserve">
          <source>Though &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; objects support similar operations, they are optimized for fast fixed-length operations and incur O(n) memory movement costs for &lt;code&gt;pop(0)&lt;/code&gt; and &lt;code&gt;insert(0, v)&lt;/code&gt; operations which change both the size and position of the underlying data representation.</source>
          <target state="translated">尽管&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;对象支持类似的操作，但它们针对快速定长操作进行了优化，并且会为 &lt;code&gt;pop(0)&lt;/code&gt; 和 &lt;code&gt;insert(0, v)&lt;/code&gt; 操作产生O（n）内存移动成本，这会改变基础数据表示的大小和位置。</target>
        </trans-unit>
        <trans-unit id="faed24ed478ce5898f638da7d1d34a4be16100bc" translate="yes" xml:space="preserve">
          <source>Though being an exception (a subclass of &lt;a href=&quot;#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;), an &lt;a href=&quot;#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; can also function as a non-exceptional file-like return value (the same thing that &lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; returns). This is useful when handling exotic HTTP errors, such as requests for authentication.</source>
          <target state="translated">尽管是一个异常（&lt;a href=&quot;#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;的子类），但&lt;a href=&quot;#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;也可以用作非异常的类文件的返回值（与&lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;返回的相同）。在处理异常的HTTP错误（例如身份验证请求）时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="37862647125cefc1069254a47f843e7cb021912f" translate="yes" xml:space="preserve">
          <source>Though less common than in the past, an antivirus or firewall program may stop the connection. If the program cannot be taught to allow the connection, then it must be turned off for IDLE to work. It is safe to allow this internal connection because no data is visible on external ports. A similar problem is a network mis-configuration that blocks connections.</source>
          <target state="translated">虽然比过去少见,但杀毒软件或防火墙程序可能会阻止连接。如果不能教程序允许连接,那么必须关闭IDLE才能工作。允许这种内部连接是安全的,因为外部端口上看不到任何数据。类似的问题是网络配置错误,阻止了连接。</target>
        </trans-unit>
        <trans-unit id="2289f1cd884268a19420d727637bb78981c8aef8" translate="yes" xml:space="preserve">
          <source>Though not often needed, this function can be useful when installing modules for shared use, especially if some of the users may not have permission to write the byte-code cache files in the directory containing the source code.</source>
          <target state="translated">虽然不经常需要,但这个功能在安装共享模块时还是很有用的,特别是当一些用户可能没有权限在包含源代码的目录中写入字节码缓存文件时。</target>
        </trans-unit>
        <trans-unit id="23b26ebf82d42c0319c71cda81eb0f398c8fe706" translate="yes" xml:space="preserve">
          <source>Though the cycle detector will catch these, destruction of the frames (and local variables) can be made deterministic by removing the cycle in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause. This is also important if the cycle detector was disabled when Python was compiled or using &lt;a href=&quot;gc#gc.disable&quot;&gt;&lt;code&gt;gc.disable()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">尽管循环检测器将捕获这些，但可以通过在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;子句中删除循环来确定是否破坏了帧（和局部变量）。如果在编译Python或使用&lt;a href=&quot;gc#gc.disable&quot;&gt; &lt;code&gt;gc.disable()&lt;/code&gt; &lt;/a&gt;时禁用了循环检测器，这也很重要。例如：</target>
        </trans-unit>
        <trans-unit id="cf7e1c66c6ada18069caf896cccc97ab158d2d18" translate="yes" xml:space="preserve">
          <source>Though the cycle detector will catch these, destruction of the frames (and local variables) can be made deterministic by removing the cycle in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause. This is also important if the cycle detector was disabled when Python was compiled or using &lt;a href=&quot;gc#gc.disable&quot;&gt;&lt;code&gt;gc.disable()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">尽管循环检测器将捕获这些，但可以通过在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;子句中删除循环来确定破坏帧（和局部变量）的确定性。如果在编译Python或使用&lt;a href=&quot;gc#gc.disable&quot;&gt; &lt;code&gt;gc.disable()&lt;/code&gt; &lt;/a&gt;时禁用了循环检测器，这也很重要。例如：</target>
        </trans-unit>
        <trans-unit id="cf42dd33cbcf5b9ff936c0cccb336c422f5ed971" translate="yes" xml:space="preserve">
          <source>Thread ID (if available).</source>
          <target state="translated">线程ID(如果有)。</target>
        </trans-unit>
        <trans-unit id="938645778639684fb490a1e1f85f069cfc3de40c" translate="yes" xml:space="preserve">
          <source>Thread Objects</source>
          <target state="translated">线程对象</target>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="translated">螺纹安全</target>
        </trans-unit>
        <trans-unit id="2b65dfc26516296f295014a75cea6189d943e440" translate="yes" xml:space="preserve">
          <source>Thread has two arguments before the &lt;em&gt;search_criterion&lt;/em&gt; argument(s); a &lt;em&gt;threading_algorithm&lt;/em&gt;, and the searching &lt;em&gt;charset&lt;/em&gt;. Note that unlike &lt;code&gt;search&lt;/code&gt;, the searching &lt;em&gt;charset&lt;/em&gt; argument is mandatory. There is also a &lt;code&gt;uid thread&lt;/code&gt; command which corresponds to &lt;code&gt;thread&lt;/code&gt; the way that &lt;code&gt;uid
search&lt;/code&gt; corresponds to &lt;code&gt;search&lt;/code&gt;. The &lt;code&gt;thread&lt;/code&gt; command first searches the mailbox for messages that match the given searching criteria using the charset argument for the interpretation of strings in the searching criteria. It then returns the matching messages threaded according to the specified threading algorithm.</source>
          <target state="translated">线程在&lt;em&gt;search_criterion&lt;/em&gt;参数之前有两个参数。一个&lt;em&gt;threading_algorithm&lt;/em&gt;和搜索&lt;em&gt;字符集&lt;/em&gt;。需要注意的是不同 &lt;code&gt;search&lt;/code&gt; ，搜索&lt;em&gt;字符集&lt;/em&gt;的说法是强制性的。还有一个 &lt;code&gt;uid thread&lt;/code&gt; 命令，该命令与 &lt;code&gt;uid search&lt;/code&gt; 对应于 &lt;code&gt;search&lt;/code&gt; 的方式对应于 &lt;code&gt;thread&lt;/code&gt; 。该 &lt;code&gt;thread&lt;/code&gt; 命令首先搜索匹配使用字符串的搜索标准的解释的字符集参数给定的搜索条件的邮件的邮箱。然后，它将根据指定的线程算法返回匹配的消息。</target>
        </trans-unit>
        <trans-unit id="b0c8f67df305f12d7329c3e923eae3a187448dc1" translate="yes" xml:space="preserve">
          <source>Thread members consist of zero or more messages numbers, delimited by spaces, indicating successive parent and child.</source>
          <target state="translated">线程成员由0个或更多的消息号组成,用空格分隔,表示连续的父线和子线。</target>
        </trans-unit>
        <trans-unit id="2b72f7882340b8b87302b6a71686a5d8011d1cb7" translate="yes" xml:space="preserve">
          <source>Thread name (if available).</source>
          <target state="translated">线程名称(如果有)。</target>
        </trans-unit>
        <trans-unit id="bede3e862826945fddf6112e7c769b9a3aeb8189" translate="yes" xml:space="preserve">
          <source>Thread safety of proxies</source>
          <target state="translated">代理人的螺纹安全</target>
        </trans-unit>
        <trans-unit id="b335fb76cc5d7a0a38d14693a22dd2234bea40d3" translate="yes" xml:space="preserve">
          <source>Thread-Local Data</source>
          <target state="translated">线程本地数据</target>
        </trans-unit>
        <trans-unit id="179f9004b4c06ae6f5f6ff596023c3d673097c0e" translate="yes" xml:space="preserve">
          <source>Thread-local data is data whose values are thread specific. To manage thread-local data, just create an instance of &lt;a href=&quot;#threading.local&quot;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/a&gt; (or a subclass) and store attributes on it:</source>
          <target state="translated">线程本地数据是其值是特定于线程的数据。要管理线程局部数据，只需创建&lt;a href=&quot;#threading.local&quot;&gt; &lt;code&gt;local&lt;/code&gt; &lt;/a&gt;（或子类）实例并在其上存储属性：</target>
        </trans-unit>
        <trans-unit id="8ff556a54faf6fae983bf1ab3aff7d6d5d26751b" translate="yes" xml:space="preserve">
          <source>Thread-specific CPU-time clock.</source>
          <target state="translated">线程专用的CPU时间时钟。</target>
        </trans-unit>
        <trans-unit id="08db9139992ea95ca14b3bce8c69ce7fca532f88" translate="yes" xml:space="preserve">
          <source>Thread/Process Pool</source>
          <target state="translated">线程/流程池</target>
        </trans-unit>
        <trans-unit id="f4ccad88952fdcd6a1fc61663ba8a6b67b062047" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor</source>
          <target state="translated">ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="1fe04156ec5ffd3ad976e6549621d5b8412d5037" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor Example</source>
          <target state="translated">ThreadPoolExecutor示例</target>
        </trans-unit>
        <trans-unit id="e18220b1afceba219a85fd8b489ed2e3a72478ca" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor now reuses idle worker threads before starting &lt;em&gt;max_workers&lt;/em&gt; worker threads too.</source>
          <target state="translated">现在，ThreadPoolExecutor &lt;em&gt;也会&lt;/em&gt;在启动&lt;em&gt;max_workers&lt;/em&gt;工作线程之前重用空闲的工作线程。</target>
        </trans-unit>
        <trans-unit id="61d127f225cf326a27d514f202864103d01109cd" translate="yes" xml:space="preserve">
          <source>Threading-like synchronization primitives that can be used in Tasks.</source>
          <target state="translated">可在任务中使用的类似线程的同步基元。</target>
        </trans-unit>
        <trans-unit id="da12000dd2decc4919042e0d96f21afbb897e6e5" translate="yes" xml:space="preserve">
          <source>Threads interact strangely with interrupts: the &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception will be received by an arbitrary thread. (When the &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module is available, interrupts always go to the main thread.)</source>
          <target state="translated">线程与中断进行奇怪的交互：任意线程都会收到&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;异常。（当&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块可用时，中断总是转到主线程。）</target>
        </trans-unit>
        <trans-unit id="53c7f0ab74cff52794e9a24116f9afa5b47c92b2" translate="yes" xml:space="preserve">
          <source>Three classes are provided by the &lt;a href=&quot;#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt; module, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; is the base class:</source>
          <target state="translated">&lt;a href=&quot;#module-imaplib&quot;&gt; &lt;code&gt;imaplib&lt;/code&gt; &lt;/a&gt;模块提供了三个类，&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;是基类：</target>
        </trans-unit>
        <trans-unit id="e709dbe2f34341a73307670a231b6cadb5fc57d7" translate="yes" xml:space="preserve">
          <source>Three conversion flags are currently supported: &lt;code&gt;'!s'&lt;/code&gt; which calls &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on the value, &lt;code&gt;'!r'&lt;/code&gt; which calls &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'!a'&lt;/code&gt; which calls &lt;a href=&quot;functions#ascii&quot;&gt;&lt;code&gt;ascii()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当前支持三个转换标志： &lt;code&gt;'!s'&lt;/code&gt; 调用值的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;'!r'&lt;/code&gt; 调用&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;'!a'&lt;/code&gt; 调用&lt;a href=&quot;functions#ascii&quot;&gt; &lt;code&gt;ascii()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d0ca76daa80652b92bb2e247e6f8c4265a8798c" translate="yes" xml:space="preserve">
          <source>Three exceptions are defined as attributes of the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;类的属性定义了三个例外：</target>
        </trans-unit>
        <trans-unit id="2f64dfe21491c30d5d1a7eadfd5dd3fae4531abe" translate="yes" xml:space="preserve">
          <source>Three locking mechanisms are used&amp;mdash;dot locking and, if available, the &lt;code&gt;flock()&lt;/code&gt; and &lt;code&gt;lockf()&lt;/code&gt; system calls.</source>
          <target state="translated">使用了三种锁定机制-点锁定以及 &lt;code&gt;flock()&lt;/code&gt; 和 &lt;code&gt;lockf()&lt;/code&gt; 系统调用（如果有）。</target>
        </trans-unit>
        <trans-unit id="e50506efbf25f33d49dafed0e71ca3b1a26feb7c" translate="yes" xml:space="preserve">
          <source>Three locking mechanisms are used&amp;mdash;dot locking and, if available, the &lt;code&gt;flock()&lt;/code&gt; and &lt;code&gt;lockf()&lt;/code&gt; system calls. For MH mailboxes, locking the mailbox means locking the &lt;code&gt;.mh_sequences&lt;/code&gt; file and, only for the duration of any operations that affect them, locking individual message files.</source>
          <target state="translated">使用了三种锁定机制-点锁定以及 &lt;code&gt;flock()&lt;/code&gt; 和 &lt;code&gt;lockf()&lt;/code&gt; 系统调用（如果有）。对于MH邮箱，锁定邮箱意味着锁定 &lt;code&gt;.mh_sequences&lt;/code&gt; 文件，并且仅在影响它们的任何操作期​​间，锁定单个消息文件。</target>
        </trans-unit>
        <trans-unit id="0e1bc8847535475eab42cce197ae5be27e727ae7" translate="yes" xml:space="preserve">
          <source>Three or more alphanumerics giving the timezone abbreviations. These will be propagated into time.tzname</source>
          <target state="translated">三个或更多的字母数字表示时区的缩写。这些将被传播到time.tzname中。</target>
        </trans-unit>
        <trans-unit id="3e70d460192969efb710a023585a04b40999ef18" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;opname&lt;/em&gt; is found.</source>
          <target state="translated">如果找到&lt;em&gt;opname，&lt;/em&gt;则抛出&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ef9926e86eae8834900c13e52e1577c082afc28" translate="yes" xml:space="preserve">
          <source>Thus, an alternative way to get the version number is through the &lt;code&gt;Distribution&lt;/code&gt; instance:</source>
          <target state="translated">因此，获取版本号的另一种方法是通过 &lt;code&gt;Distribution&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="1a3ede7623f4e752d108f2c9edace3b95a9d7fcf" translate="yes" xml:space="preserve">
          <source>Thus, by default &lt;a href=&quot;#email.iterators.typed_subpart_iterator&quot;&gt;&lt;code&gt;typed_subpart_iterator()&lt;/code&gt;&lt;/a&gt; returns each subpart that has a MIME type of &lt;em&gt;text/*&lt;/em&gt;.</source>
          <target state="translated">因此，默认情况下，&lt;a href=&quot;#email.iterators.typed_subpart_iterator&quot;&gt; &lt;code&gt;typed_subpart_iterator()&lt;/code&gt; &lt;/a&gt;返回MIME类型为&lt;em&gt;text / *的&lt;/em&gt;每个子部分。</target>
        </trans-unit>
        <trans-unit id="d36d700dcdbb23ba6f79231791253efb769470c2" translate="yes" xml:space="preserve">
          <source>Thus, the set of channel events is larger than the basic socket events. The full set of methods that can be overridden in your subclass follows:</source>
          <target state="translated">因此,通道事件集比基本的套接字事件更大。在你的子类中可以重写的全部方法如下。</target>
        </trans-unit>
        <trans-unit id="439af098feeff071c8e795106894bf846b6f7af0" translate="yes" xml:space="preserve">
          <source>Thus, this is only useful to call Python C api functions directly.</source>
          <target state="translated">因此,这只对直接调用Python C api函数有用。</target>
        </trans-unit>
        <trans-unit id="205b4cecce0161369a95283ab9503c6dc691808a" translate="yes" xml:space="preserve">
          <source>Thus, when the &lt;code&gt;incremental&lt;/code&gt; key of a configuration dict is present and is &lt;code&gt;True&lt;/code&gt;, the system will completely ignore any &lt;code&gt;formatters&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt; entries, and process only the &lt;code&gt;level&lt;/code&gt; settings in the &lt;code&gt;handlers&lt;/code&gt; entries, and the &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;propagate&lt;/code&gt; settings in the &lt;code&gt;loggers&lt;/code&gt; and &lt;code&gt;root&lt;/code&gt; entries.</source>
          <target state="translated">因此，当 &lt;code&gt;incremental&lt;/code&gt; 的结构字典的键存在，并且是 &lt;code&gt;True&lt;/code&gt; ，则系统将完全忽略任何 &lt;code&gt;formatters&lt;/code&gt; 和 &lt;code&gt;filters&lt;/code&gt; 条目，并且仅处理的 &lt;code&gt;level&lt;/code&gt; ，在设置 &lt;code&gt;handlers&lt;/code&gt; 的条目，以及 &lt;code&gt;level&lt;/code&gt; 和 &lt;code&gt;propagate&lt;/code&gt; 在设置 &lt;code&gt;loggers&lt;/code&gt; 和 &lt;code&gt;root&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="e488ae72b0720c1cf599c3f8e575a2ab8f87d840" translate="yes" xml:space="preserve">
          <source>Tidy up any resources used by the handler. This version does no output but removes the handler from an internal list of handlers which is closed when &lt;a href=&quot;#logging.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; is called. Subclasses should ensure that this gets called from overridden &lt;a href=&quot;#logging.Handler.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">整理处理程序使用的所有资源。此版本不输出，但从处理程序的内部列表中删除该处理程序，该内部列表在调用&lt;a href=&quot;#logging.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt;时关闭。子类应确保从重写的&lt;a href=&quot;#logging.Handler.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法中调用此方法。</target>
        </trans-unit>
        <trans-unit id="f88f6e9627dc95497340bc4623c37e38fe730a30" translate="yes" xml:space="preserve">
          <source>Time &lt;em&gt;number&lt;/em&gt; executions of the main statement. This executes the setup statement once, and then returns the time it takes to execute the main statement a number of times, measured in seconds as a float. The argument is the number of times through the loop, defaulting to one million. The main statement, the setup statement and the timer function to be used are passed to the constructor.</source>
          <target state="translated">主语句的时间&lt;em&gt;编号&lt;/em&gt;执行。这将一次执行setup语句，然后返回执行主语句所需的时间，以秒为单位，以浮点数为单位。参数是循环的次数，默认为一百万次。将要使用的主语句，设置语句和计时器函数传递给构造函数。</target>
        </trans-unit>
        <trans-unit id="c8b70bcd70c5d7f90b7b14b7ade5bf89ef3ddfba" translate="yes" xml:space="preserve">
          <source>Time access and conversions.</source>
          <target state="translated">时间访问和转换。</target>
        </trans-unit>
        <trans-unit id="52eae1cacab4ca0975e99ce3b040b93af31bb3d3" translate="yes" xml:space="preserve">
          <source>Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded.</source>
          <target state="translated">日志记录创建的时间,相对于日志模块加载的时间,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="f1ad4dba9062b623c7954b6e7744f90380675e5e" translate="yes" xml:space="preserve">
          <source>Time of file creation.</source>
          <target state="translated">档案建立的时间。</target>
        </trans-unit>
        <trans-unit id="bf5b7ea4cfe40f929342452c57b6445e307ff98f" translate="yes" xml:space="preserve">
          <source>Time of last access.</source>
          <target state="translated">最后一次访问的时间。</target>
        </trans-unit>
        <trans-unit id="d3ed1832d868c8126249a2fb407fc69507dfb189" translate="yes" xml:space="preserve">
          <source>Time of last modification.</source>
          <target state="translated">最后一次修改的时间。</target>
        </trans-unit>
        <trans-unit id="06be3d8bc306bea5d95f138ab46fafcf17e3ac5c" translate="yes" xml:space="preserve">
          <source>Time of most recent access expressed in nanoseconds as an integer.</source>
          <target state="translated">最近一次访问的时间,以纳秒为整数表示。</target>
        </trans-unit>
        <trans-unit id="a91619cf232ee7d5db5c8c4a6764e8af43c69992" translate="yes" xml:space="preserve">
          <source>Time of most recent access expressed in seconds.</source>
          <target state="translated">最近一次访问的时间,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="65e24f26ea5afb8877a5f8b52e25e32bd4b54487" translate="yes" xml:space="preserve">
          <source>Time of most recent content modification expressed in nanoseconds as an integer.</source>
          <target state="translated">最近一次内容修改的时间,以纳秒为整数表示。</target>
        </trans-unit>
        <trans-unit id="1841767b9a4fbb8ae7c08bde8eb680a307282894" translate="yes" xml:space="preserve">
          <source>Time of most recent content modification expressed in seconds.</source>
          <target state="translated">最近一次内容修改的时间,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="4c626f3136dcc7541eda5dfb73988281d101ad42" translate="yes" xml:space="preserve">
          <source>Time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created (as returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">创建&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 的&lt;/a&gt;时间（由&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;返回）。</target>
        </trans-unit>
        <trans-unit id="6debd785c2cf241c1ce1926887a0186d4daccd0e" translate="yes" xml:space="preserve">
          <source>Time whose absolute value is the time the system has been running and not suspended, providing accurate uptime measurement, both absolute and interval.</source>
          <target state="translated">时间的绝对值是指系统运行和未暂停的时间,提供准确的正常运行时间测量,包括绝对值和时间间隔。</target>
        </trans-unit>
        <trans-unit id="0374b215fe391453f39d42861a7e9596d4318c9a" translate="yes" xml:space="preserve">
          <source>Time zone name (empty string if the object is naive).</source>
          <target state="translated">时区名称(如果对象为naive,则为空字符串)。</target>
        </trans-unit>
        <trans-unit id="ee8f614d144ab47b670e20f7522453fc38517d98" translate="yes" xml:space="preserve">
          <source>Time zone name (no characters if no time zone exists).</source>
          <target state="translated">时区名称(如果不存在时区,则无字符)。</target>
        </trans-unit>
        <trans-unit id="c0a6ab1356e2277d077fbe00d29afd20e33697b8" translate="yes" xml:space="preserve">
          <source>Time zone offset indicating a positive or negative time difference from UTC/GMT of the form +HHMM or -HHMM, where H represents decimal hour digits and M represents decimal minute digits [-23:59, +23:59].</source>
          <target state="translated">时区偏移表示与UTC/GMT的正负时差,形式为+HHMM或-HHMM,其中H代表十进制小时数,M代表十进制分钟数[-23:59,+23:59]。</target>
        </trans-unit>
        <trans-unit id="0f2b93745cd2c3c48a46f80e6d71e4bf3caf8d57" translate="yes" xml:space="preserve">
          <source>TimePeriod</source>
          <target state="translated">TimePeriod</target>
        </trans-unit>
        <trans-unit id="5c415f11b847d7f607026be69aa759761b622f69" translate="yes" xml:space="preserve">
          <source>TimedRotatingFileHandler</source>
          <target state="translated">TimedRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="ef4cedb55c675ccac18ae381902542c90951f8e7" translate="yes" xml:space="preserve">
          <source>Timeout duration, measured in seconds, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if no timeout is desired. If &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt;&lt;code&gt;handle_request()&lt;/code&gt;&lt;/a&gt; receives no incoming requests within the timeout period, the &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt;&lt;code&gt;handle_timeout()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">超时持续时间，以秒为单位，或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;如果没有超时是期望的。如果&lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt; &lt;code&gt;handle_request()&lt;/code&gt; &lt;/a&gt;在超时时间内未收到任何传入请求，则将&lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt; &lt;code&gt;handle_timeout()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="07b0e9b677614df40c96ed5c03037d21c2ed7656" translate="yes" xml:space="preserve">
          <source>Timeout in seconds for network requests going to the Internet.</source>
          <target state="translated">网络请求进入互联网的超时时间,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="130d46192a8b7232c53a533ef412e1247760e214" translate="yes" xml:space="preserve">
          <source>Timeout in seconds for tests using a network server listening on the network local loopback interface like &lt;code&gt;127.0.0.1&lt;/code&gt;.</source>
          <target state="translated">使用网络服务器在网络本地回送接口（如 &lt;code&gt;127.0.0.1&lt;/code&gt; )上侦听的测试超时时间（以秒为单位）。</target>
        </trans-unit>
        <trans-unit id="3a2345456807fdaf84e00252cabb595f9279bbea" translate="yes" xml:space="preserve">
          <source>Timeout in seconds to detect when a test hangs.</source>
          <target state="translated">检测测试挂起时的超时时间(秒)。</target>
        </trans-unit>
        <trans-unit id="93ea4bea7de09278df65a41998484bea21720b1c" translate="yes" xml:space="preserve">
          <source>Timeout in seconds to mark a test as failed if the test takes &amp;ldquo;too long&amp;rdquo;.</source>
          <target state="translated">如果测试花费&amp;ldquo;太长&amp;rdquo;的时间（以秒为单位），则将测试标记为失败。</target>
        </trans-unit>
        <trans-unit id="62b298628f356f1c619e3be00ab4ff94e5bcd4d8" translate="yes" xml:space="preserve">
          <source>Timeout in seconds.</source>
          <target state="translated">超时,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="0c4d8969a977fe6296c7be7be0d35706e4b5dae6" translate="yes" xml:space="preserve">
          <source>Timeouts and the &lt;code&gt;accept&lt;/code&gt; method</source>
          <target state="translated">超时和 &lt;code&gt;accept&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="18be0279503ee7ac0781f0c9d62872c701d2ba10" translate="yes" xml:space="preserve">
          <source>Timeouts and the &lt;code&gt;connect&lt;/code&gt; method</source>
          <target state="translated">超时和 &lt;code&gt;connect&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="10d608010dbfc49424751fd4de41b0163424a0ca" translate="yes" xml:space="preserve">
          <source>Timer Objects</source>
          <target state="translated">计时器对象</target>
        </trans-unit>
        <trans-unit id="9cfb3d400f6dd144e8358401419c34c90ce26960" translate="yes" xml:space="preserve">
          <source>Timer expired</source>
          <target state="translated">计时器过期</target>
        </trans-unit>
        <trans-unit id="72b74f80a56c06d5f082e3b0803cdaf543886ab5" translate="yes" xml:space="preserve">
          <source>Timer signal from &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm(2)&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">来自&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm（2）的&lt;/a&gt;&lt;/em&gt;计时器信号。</target>
        </trans-unit>
        <trans-unit id="3207535b8ec3c551c140c60e1b7a5b653785fe05" translate="yes" xml:space="preserve">
          <source>Timers are started, as with threads, by calling their &lt;code&gt;start()&lt;/code&gt; method. The timer can be stopped (before its action has begun) by calling the &lt;a href=&quot;#threading.Timer.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; method. The interval the timer will wait before executing its action may not be exactly the same as the interval specified by the user.</source>
          <target state="translated">与线程一样，通过调用其 &lt;code&gt;start()&lt;/code&gt; 方法来启动计时器。可以通过调用&lt;a href=&quot;#threading.Timer.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;方法停止计时器（在其动作开始之前）。计时器在执行其操作之前将等待的时间间隔可能与用户指定的时间间隔不完全相同。</target>
        </trans-unit>
        <trans-unit id="29a8e31d470212c9df5fdd31f48fc0b710230ac9" translate="yes" xml:space="preserve">
          <source>Timestamps:</source>
          <target state="translated">Timestamps:</target>
        </trans-unit>
        <trans-unit id="0fd467e1a208fce272fd82f9bdf44518884e63c1" translate="yes" xml:space="preserve">
          <source>Timezone Constants</source>
          <target state="translated">时区常数</target>
        </trans-unit>
        <trans-unit id="4a652adeb3e347a238e20df919ff0ab254549331" translate="yes" xml:space="preserve">
          <source>Tix Commands</source>
          <target state="translated">Tix命令</target>
        </trans-unit>
        <trans-unit id="96b7c5068376e645877a22b7d58d1ed12ad0e604" translate="yes" xml:space="preserve">
          <source>Tix Development Applications</source>
          <target state="translated">Tix开发应用</target>
        </trans-unit>
        <trans-unit id="faefa845bbb0a4cb46a5b93beb369c79040a72c9" translate="yes" xml:space="preserve">
          <source>Tix Homepage</source>
          <target state="translated">Tix主页</target>
        </trans-unit>
        <trans-unit id="4d60340b76e67777555c745a3f74999b7294f26b" translate="yes" xml:space="preserve">
          <source>Tix Man Pages</source>
          <target state="translated">Tix Man页面</target>
        </trans-unit>
        <trans-unit id="21b1387290c95ae82430ce78110fe98b586bc58e" translate="yes" xml:space="preserve">
          <source>Tix Programming Guide</source>
          <target state="translated">Tix编程指南</target>
        </trans-unit>
        <trans-unit id="a19554031210fa636ae40e5156d263fd0b198f94" translate="yes" xml:space="preserve">
          <source>Tix Widgets</source>
          <target state="translated">Tix Widgets</target>
        </trans-unit>
        <trans-unit id="acd857e62f1a6ec2d1a38841f59d2e3c13b47c92" translate="yes" xml:space="preserve">
          <source>Tix applications for development of Tix and Tkinter programs. Tide applications work under Tk or Tkinter, and include &lt;strong&gt;TixInspect&lt;/strong&gt;, an inspector to remotely modify and debug Tix/Tk/Tkinter applications.</source>
          <target state="translated">用于开发Tix和Tkinter程序的Tix应用程序。潮汐应用程序可以在Tk或Tkinter下运行，并包括&lt;strong&gt;TixInspect&lt;/strong&gt;（检查器），用于远程修改和调试Tix / Tk / Tkinter应用程序。</target>
        </trans-unit>
        <trans-unit id="82a910b990158307c49830b03ec2b10728632a22" translate="yes" xml:space="preserve">
          <source>Tix maintains a list of directories under which the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt; methods will search for image files. The standard bitmap directory is &lt;code&gt;$TIX_LIBRARY/bitmaps&lt;/code&gt;. The &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method adds &lt;em&gt;directory&lt;/em&gt; into this list. By using this method, the image files of an applications can also be located using the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tix维护目录列表，在该目录下，&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;方法将搜索图像文件。标准位图目录为 &lt;code&gt;$TIX_LIBRARY/bitmaps&lt;/code&gt; 。该&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;方法添加&lt;em&gt;目录&lt;/em&gt;到这个列表。通过使用此方法，还可以使用&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;方法定位应用程序的图像文件。</target>
        </trans-unit>
        <trans-unit id="eb5cc0f84fc345c602dd1accf23180e03ce108cd" translate="yes" xml:space="preserve">
          <source>Tk</source>
          <target state="translated">Tk</target>
        </trans-unit>
        <trans-unit id="c0bdbcbd85b143d1bbb028bb2fa4b753ca6134ed" translate="yes" xml:space="preserve">
          <source>Tk (C)</source>
          <target state="translated">Tk(C)</target>
        </trans-unit>
        <trans-unit id="f509dfaac06925adf03162aba9fd793afe243fc6" translate="yes" xml:space="preserve">
          <source>Tk Option Data Types</source>
          <target state="translated">Tk期权数据类型</target>
        </trans-unit>
        <trans-unit id="c53a361a926e329bf6ffb89e220c7fec5f066070" translate="yes" xml:space="preserve">
          <source>Tk Widget Styling Support</source>
          <target state="translated">支持Tk小部件样式</target>
        </trans-unit>
        <trans-unit id="af7fb30a52b23b5f1a4ce655dbbf5d8f1a0c77d6" translate="yes" xml:space="preserve">
          <source>Tk Widgets (C and Tcl)</source>
          <target state="translated">Tk Widgets (C和Tcl)</target>
        </trans-unit>
        <trans-unit id="72cfa7078e79e3f8fa74407e53e2484711fe9f52" translate="yes" xml:space="preserve">
          <source>Tk allows you to register and unregister a callback function which will be called from the Tk mainloop when I/O is possible on a file descriptor. Only one handler may be registered per file descriptor. Example code:</source>
          <target state="translated">Tk允许你注册和取消注册一个回调函数,当一个文件描述符上可能出现I/O时,该函数将被Tk主循环调用。每个文件描述符只能注册一个处理函数。示例代码:</target>
        </trans-unit>
        <trans-unit id="f9c74172242e29fa205d5a14dd18143d03ec1b82" translate="yes" xml:space="preserve">
          <source>Tk code:</source>
          <target state="translated">Tk代码:</target>
        </trans-unit>
        <trans-unit id="db9c46d3406df20ff79ee0d05fc1e0523161511a" translate="yes" xml:space="preserve">
          <source>Tk commands</source>
          <target state="translated">Tk命令</target>
        </trans-unit>
        <trans-unit id="9ab67afb1158f1675f3559e0d1e76cc6b3ded22f" translate="yes" xml:space="preserve">
          <source>Tk scripts are Tcl programs. Like all Tcl programs, Tk scripts are just lists of tokens separated by spaces. A Tk widget is just its &lt;em&gt;class&lt;/em&gt;, the &lt;em&gt;options&lt;/em&gt; that help configure it, and the &lt;em&gt;actions&lt;/em&gt; that make it do useful things.</source>
          <target state="translated">Tk脚本是Tcl程序。像所有Tcl程序一样，Tk脚本只是用空格分隔的标记列表。传统知识小部件就是它的&lt;em&gt;类&lt;/em&gt;时，&lt;em&gt;选择&lt;/em&gt;的是帮助配置它，并且&lt;em&gt;操作&lt;/em&gt;，使得它做有用的事情。</target>
        </trans-unit>
        <trans-unit id="c3b5d25f755fd5c2e9a68aade852dda180798ca5" translate="yes" xml:space="preserve">
          <source>Tk uses a list font name format, such as &lt;code&gt;{courier 10 bold}&lt;/code&gt;. Font sizes with positive numbers are measured in points; sizes with negative numbers are measured in pixels.</source>
          <target state="translated">Tk使用列表字体名称格式，例如 &lt;code&gt;{courier 10 bold}&lt;/code&gt; 。带正数的字体大小以磅为单位；负数的大小以像素为单位。</target>
        </trans-unit>
        <trans-unit id="cb67a9e7545ab841eae0703e7e11ff4949e8a6ee" translate="yes" xml:space="preserve">
          <source>Tk was written by John Ousterhout while at Berkeley.</source>
          <target state="translated">Tk是John Ousterhout在伯克利时写的。</target>
        </trans-unit>
        <trans-unit id="06adfc0de33394d65018332de578e6cb394c00e1" translate="yes" xml:space="preserve">
          <source>Tkinter 8.5 reference: a GUI for Python</source>
          <target state="translated">Tkinter 8.5参考:Python的GUI。</target>
        </trans-unit>
        <trans-unit id="c043cdde636e2a3943dc76b169fd5e748c94f38e" translate="yes" xml:space="preserve">
          <source>Tkinter Dialogs</source>
          <target state="translated">Tkinter对话框</target>
        </trans-unit>
        <trans-unit id="6ec43006272d1fcfb847df256c67b8a2a6239c06" translate="yes" xml:space="preserve">
          <source>Tkinter Event Field</source>
          <target state="translated">Tkinter事件领域</target>
        </trans-unit>
        <trans-unit id="0fbf57570a8e11effb5b92aa3ee08d4bf37542b4" translate="yes" xml:space="preserve">
          <source>Tkinter Life Preserver</source>
          <target state="translated">Tkinter生命保护器</target>
        </trans-unit>
        <trans-unit id="9fa021c29a03731a173c392e3231b31c2bd9095b" translate="yes" xml:space="preserve">
          <source>Tkinter Modules</source>
          <target state="translated">Tkinter模块</target>
        </trans-unit>
        <trans-unit id="b5e71015433233c51b605020e48525d57df3c1e7" translate="yes" xml:space="preserve">
          <source>Tkinter docs from effbot</source>
          <target state="translated">来自effbot的Tkinter文档</target>
        </trans-unit>
        <trans-unit id="06a7380bcaaa1bbf89848533bffc7cff78689da8" translate="yes" xml:space="preserve">
          <source>Tkinter documentation:</source>
          <target state="translated">Tkinter文档。</target>
        </trans-unit>
        <trans-unit id="9e17c9f8fb8d293677aac656ba3e78bca997570a" translate="yes" xml:space="preserve">
          <source>Tkinter standard dialog module</source>
          <target state="translated">Tkinter标准对话模块</target>
        </trans-unit>
        <trans-unit id="2fec54ef5f25c7f02d2146e6f287430766b4fc73" translate="yes" xml:space="preserve">
          <source>Tkinter was written by Steen Lumholt and Guido van Rossum.</source>
          <target state="translated">Tkinter由Steen Lumholt和Guido van Rossum编写。</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="879c4af9add81e668a804e6ea9a1c5883dd416eb" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;#numbers.Complex&quot;&gt;&lt;code&gt;Complex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; adds the operations that work on real numbers.</source>
          <target state="translated">在&lt;a href=&quot;#numbers.Complex&quot;&gt; &lt;code&gt;Complex&lt;/code&gt; 上&lt;/a&gt;，&lt;a href=&quot;#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;添加了对实数进行运算的运算。</target>
        </trans-unit>
        <trans-unit id="3bd521cceedef31b3760ed9bdf91114918bc9e2e" translate="yes" xml:space="preserve">
          <source>To access all registered implementations, use the read-only &lt;code&gt;registry&lt;/code&gt; attribute:</source>
          <target state="translated">要访问所有已注册的实现，请使用只读 &lt;code&gt;registry&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="971e053b3ed2cc0c24e71a6572574d038bc6457b" translate="yes" xml:space="preserve">
          <source>To access an XML-RPC server through a HTTP proxy, you need to define a custom transport. The following example shows how:</source>
          <target state="translated">要通过HTTP代理访问XML-RPC服务器,你需要定义一个自定义传输。下面的例子说明了如何定义。</target>
        </trans-unit>
        <trans-unit id="e8d808ebfcaa2c8f47d64d028fa1df61739005e6" translate="yes" xml:space="preserve">
          <source>To access the individual &amp;ldquo;parts&amp;rdquo; (components) of a path, use the following property:</source>
          <target state="translated">要访问路径的各个&amp;ldquo;部分&amp;rdquo;（组件），请使用以下属性：</target>
        </trans-unit>
        <trans-unit id="8a1f25391bef338f3d0259b12755749577aa4d1e" translate="yes" xml:space="preserve">
          <source>To accommodate reproducible processing of SMIME-signed messages &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; disables header folding for message parts of type &lt;code&gt;multipart/signed&lt;/code&gt; and all subparts.</source>
          <target state="translated">为了适应SMIME签名消息的可重复处理，&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;禁用了 &lt;code&gt;multipart/signed&lt;/code&gt; 类型的消息部分和所有子部分的报头折叠。</target>
        </trans-unit>
        <trans-unit id="a9a65729549bdc5d764fa4370cbc185392d0a035" translate="yes" xml:space="preserve">
          <source>To achieve this, &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; supports some important concepts in an object-oriented way:</source>
          <target state="translated">为了实现这一点，&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;以面向对象的方式支持一些重要的概念：</target>
        </trans-unit>
        <trans-unit id="f7545737cb159edd448e66fa7291368d57e7a6c9" translate="yes" xml:space="preserve">
          <source>To actually run a coroutine, asyncio provides three main mechanisms:</source>
          <target state="translated">为了实际运行一个coroutine,asyncio提供了三个主要机制。</target>
        </trans-unit>
        <trans-unit id="528b73f2343087db111a62659169143d06137936" translate="yes" xml:space="preserve">
          <source>To add cleanup code that must be run even in the case of an exception, use &lt;code&gt;addModuleCleanup&lt;/code&gt;:</source>
          <target state="translated">要添加即使在发生异常情况下也必须运行的清理代码，请使用 &lt;code&gt;addModuleCleanup&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c8af2ff6b8a2161b58de4c051f7dc4e1c09233ad" translate="yes" xml:space="preserve">
          <source>To add overloaded implementations to the function, use the &lt;code&gt;register()&lt;/code&gt; attribute of the generic function. It is a decorator. For functions annotated with types, the decorator will infer the type of the first argument automatically:</source>
          <target state="translated">要将重载的实现添加到函数中，请使用泛型函数的 &lt;code&gt;register()&lt;/code&gt; 属性。它是一个装饰。对于带有类型注释的函数，装饰器将自动推断第一个参数的类型：</target>
        </trans-unit>
        <trans-unit id="2f52605c001c2892c529e8e6e5591f7c13dce1a1" translate="yes" xml:space="preserve">
          <source>To align the end of a structure to the alignment requirement of a particular type, end the format with the code for that type with a repeat count of zero. See &lt;a href=&quot;#struct-examples&quot;&gt;Examples&lt;/a&gt;.</source>
          <target state="translated">要将结构的末尾与特定类型的对齐要求对齐，请使用该重复类型为零的该类型的代码结束格式。参见&lt;a href=&quot;#struct-examples&quot;&gt;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50a21e33352bea2bc96629d7a87f8894180a870a" translate="yes" xml:space="preserve">
          <source>To allow access to the original function for introspection and other purposes (e.g. bypassing a caching decorator such as &lt;a href=&quot;#functools.lru_cache&quot;&gt;&lt;code&gt;lru_cache()&lt;/code&gt;&lt;/a&gt;), this function automatically adds a &lt;code&gt;__wrapped__&lt;/code&gt; attribute to the wrapper that refers to the function being wrapped.</source>
          <target state="translated">为了允许出于自省和其他目的（例如，绕过诸如&lt;a href=&quot;#functools.lru_cache&quot;&gt; &lt;code&gt;lru_cache()&lt;/code&gt; 之&lt;/a&gt;类的缓存装饰器）的访问原始函数，此函数自动向包装器添加 &lt;code&gt;__wrapped__&lt;/code&gt; 属性，该属性引用被包装的函数。</target>
        </trans-unit>
        <trans-unit id="d7e3f6ae6bebf84a668a5d330c26e9a9f0e8c8ca" translate="yes" xml:space="preserve">
          <source>To also capture standard error in the result, use &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt;:</source>
          <target state="translated">要还捕获结果中的标准错误，请使用 &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b40c02aa20e39d67b9f645180128720b8df1859c" translate="yes" xml:space="preserve">
          <source>To avoid confusing existing tools that analyze import statements and expect to find the modules they&amp;rsquo;re importing.</source>
          <target state="translated">为了避免混淆分析导入语句并期望找到要导入的模块的现有工具。</target>
        </trans-unit>
        <trans-unit id="6fcd2ea1ec6b9fcb7a6ad1afd985d7ecdf73f53a" translate="yes" xml:space="preserve">
          <source>To avoid the task &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancellation&lt;/code&gt;&lt;/a&gt;, wrap it in &lt;a href=&quot;#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了避免&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancellation&lt;/code&gt; &lt;/a&gt;任务，请将其包装在&lt;a href=&quot;#asyncio.shield&quot;&gt; &lt;code&gt;shield()&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb7ed6c5f7af9fa2f11429ad240931ae400cd1a3" translate="yes" xml:space="preserve">
          <source>To be called just before drawing a shape to be filled.</source>
          <target state="translated">要在绘制要填充的形状之前调用。</target>
        </trans-unit>
        <trans-unit id="64d8c5cc57d55c3231722a4a870d260dd19d6c3e" translate="yes" xml:space="preserve">
          <source>To be directly usable as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, &lt;code&gt;os.DirEntry&lt;/code&gt; implements the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">为了直接用作&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径类对象&lt;/a&gt;， &lt;code&gt;os.DirEntry&lt;/code&gt; 实现了&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="53d877d48e3eeb459e4ec2e50eab07db6370a32d" translate="yes" xml:space="preserve">
          <source>To be directly usable as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, &lt;code&gt;os.DirEntry&lt;/code&gt; implements the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">为了直接用作类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;， &lt;code&gt;os.DirEntry&lt;/code&gt; 实现了&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="2aca75b7a1203ce8695faba0b01214c1fb557382" translate="yes" xml:space="preserve">
          <source>To be on the safe side, if you must pass a string gotten from a form to a shell command, you should make sure the string contains only alphanumeric characters, dashes, underscores, and periods.</source>
          <target state="translated">为了安全起见,如果你必须将从表单中得到的字符串传递给shell命令,你应该确保字符串只包含字母数字字符、破折号、下划线和句号。</target>
        </trans-unit>
        <trans-unit id="1c9976abfa62062ca46d0102679c057214fc0d8e" translate="yes" xml:space="preserve">
          <source>To be secure against &lt;a href=&quot;https://en.wikipedia.org/wiki/Brute-force_attack&quot;&gt;brute-force attacks&lt;/a&gt;, tokens need to have sufficient randomness. Unfortunately, what is considered sufficient will necessarily increase as computers get more powerful and able to make more guesses in a shorter period. As of 2015, it is believed that 32 bytes (256 bits) of randomness is sufficient for the typical use-case expected for the &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">为了防止&lt;a href=&quot;https://en.wikipedia.org/wiki/Brute-force_attack&quot;&gt;暴力攻击&lt;/a&gt;，令牌必须具有足够的随机性。不幸的是，随着计算机变得越来越强大并且能够在较短的时间内做出更多的猜测，被认为足够的东西必然会增加。截至2015年，据信对于&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;模块预期的典型用例，随机性足以满足32个字节（256位）的需求。</target>
        </trans-unit>
        <trans-unit id="f7b8e37c3ead7bb7e82354e263d6bbb12e469ece" translate="yes" xml:space="preserve">
          <source>To build a functioning &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; subclass your input methods &lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt;&lt;code&gt;collect_incoming_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt;&lt;code&gt;found_terminator()&lt;/code&gt;&lt;/a&gt; must handle the data that the channel receives asynchronously. The methods are described below.</source>
          <target state="translated">要构建功能正常的&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;子类，您的输入方法&lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt; &lt;code&gt;collect_incoming_data()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt; &lt;code&gt;found_terminator()&lt;/code&gt; &lt;/a&gt;必须处理通道异步接收的数据。方法如下所述。</target>
        </trans-unit>
        <trans-unit id="45163f5e6e9d3d755a0aa4e4a2cad96a7b22f1a9" translate="yes" xml:space="preserve">
          <source>To build asynchronous handlers, use the &lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt;&lt;code&gt;ThreadingMixIn&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">要构建异步处理程序，请使用&lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt; &lt;code&gt;ThreadingMixIn&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="c0f3473b7a087f24c025a3a486b154bb9e21ac1a" translate="yes" xml:space="preserve">
          <source>To calculate hash of some data, you should first construct a hash object by calling the appropriate constructor function (&lt;a href=&quot;#hashlib.blake2b&quot;&gt;&lt;code&gt;blake2b()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#hashlib.blake2s&quot;&gt;&lt;code&gt;blake2s()&lt;/code&gt;&lt;/a&gt;), then update it with the data by calling &lt;code&gt;update()&lt;/code&gt; on the object, and, finally, get the digest out of the object by calling &lt;code&gt;digest()&lt;/code&gt; (or &lt;code&gt;hexdigest()&lt;/code&gt; for hex-encoded string).</source>
          <target state="translated">要计算某些数据的哈希，您应该首先通过调用适当的构造函数（&lt;a href=&quot;#hashlib.blake2b&quot;&gt; &lt;code&gt;blake2b()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#hashlib.blake2s&quot;&gt; &lt;code&gt;blake2s()&lt;/code&gt; &lt;/a&gt;）来构造一个哈希对象，然后通过在对象上调用 &lt;code&gt;update()&lt;/code&gt; 来使用数据更新它，最后，获得通过调用 &lt;code&gt;digest()&lt;/code&gt; （或十六进制编码的字符串的 &lt;code&gt;hexdigest()&lt;/code&gt; )来提取对象的摘要。</target>
        </trans-unit>
        <trans-unit id="8c8e11f7a995dea282995d88782e0aabb4b1ae1b" translate="yes" xml:space="preserve">
          <source>To cancel a running Task use the &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; method. Calling it will cause the Task to throw a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception into the wrapped coroutine. If a coroutine is awaiting on a Future object during cancellation, the Future object will be cancelled.</source>
          <target state="translated">要取消正在运行的Task，请使用&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;方法。调用它将导致Task向包装的协程中抛出&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;异常。如果协程在取消过程中等待Future对象，则Future对象将被取消。</target>
        </trans-unit>
        <trans-unit id="8e63c10e490c41b2c85c5886452a96e3ecc37d68" translate="yes" xml:space="preserve">
          <source>To change this default behavior, another value can be supplied using the &lt;code&gt;prog=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要更改此默认行为，可以使用&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;prog=&lt;/code&gt; 参数提供另一个值：</target>
        </trans-unit>
        <trans-unit id="b6e34501a464650fe6316c88682b19ff1b8ffe1a" translate="yes" xml:space="preserve">
          <source>To check that a module&amp;rsquo;s docstrings are up-to-date by verifying that all interactive examples still work as documented.</source>
          <target state="translated">通过验证所有交互式示例是否仍按文档说明工作，以检查模块的文档字符串是否最新。</target>
        </trans-unit>
        <trans-unit id="203e5ed47bfbabd7adfd3c9726f43e77f390c583" translate="yes" xml:space="preserve">
          <source>To check what font a Button uses by default:</source>
          <target state="translated">检查按钮默认使用的字体。</target>
        </trans-unit>
        <trans-unit id="b839a91668c3944755e3b7d093c803d5bfd881aa" translate="yes" xml:space="preserve">
          <source>To check whether a particular function accepts &lt;code&gt;False&lt;/code&gt; for its &lt;em&gt;follow_symlinks&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_follow_symlinks&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if you may specify &lt;code&gt;follow_symlinks=False&lt;/code&gt; when calling &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; on the local platform:</source>
          <target state="translated">要检查特定功能是否接受 &lt;code&gt;False&lt;/code&gt; 其&lt;em&gt;follow_symlinks&lt;/em&gt;参数，使用 &lt;code&gt;in&lt;/code&gt; 操作上 &lt;code&gt;supports_follow_symlinks&lt;/code&gt; 。例如，如果您在本地平台上调用&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;时可以指定 &lt;code&gt;follow_symlinks=False&lt;/code&gt; ，则该表达式的值为 &lt;code&gt;True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6a19f8267a804bed2cc6e4cb5709e33adda2cd86" translate="yes" xml:space="preserve">
          <source>To check whether a particular function accepts an open file descriptor for its &lt;em&gt;dir_fd&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_dir_fd&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; accepts open file descriptors for &lt;em&gt;dir_fd&lt;/em&gt; on the local platform:</source>
          <target state="translated">要检查特定功能是否接受其打开文件描述符&lt;em&gt;dir_fd&lt;/em&gt;参数，使用 &lt;code&gt;in&lt;/code&gt; 操作上 &lt;code&gt;supports_dir_fd&lt;/code&gt; 。作为一个例子，这个表达式的值为 &lt;code&gt;True&lt;/code&gt; ，如果&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;接受打开的文件描述符&lt;em&gt;dir_fd&lt;/em&gt;本地平台上：</target>
        </trans-unit>
        <trans-unit id="9a5093ea51a15238b4b1605167c69ad6fd7b7468" translate="yes" xml:space="preserve">
          <source>To check which implementation will the generic function choose for a given type, use the &lt;code&gt;dispatch()&lt;/code&gt; attribute:</source>
          <target state="translated">要检查通用函数将为给定类型选择哪种实现，请使用 &lt;code&gt;dispatch()&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="cffbae74923f0c8f4bcee465ec4c25d8823c6b00" translate="yes" xml:space="preserve">
          <source>To choose a sample from a range of integers, use a &lt;a href=&quot;stdtypes#range&quot;&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/a&gt; object as an argument. This is especially fast and space efficient for sampling from a large population: &lt;code&gt;sample(range(10000000), k=60)&lt;/code&gt;.</source>
          <target state="translated">要从整数范围中选择样本，请使用&lt;a href=&quot;stdtypes#range&quot;&gt; &lt;code&gt;range()&lt;/code&gt; &lt;/a&gt;对象作为参数。这对于从大量人口中采样特别快速且节省空间： &lt;code&gt;sample(range(10000000), k=60)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b7dd8c80cfe20bb2e14df7147ef117b8925618f" translate="yes" xml:space="preserve">
          <source>To choose between &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt;, consider whether one state change can be interesting for only one or several waiting threads. E.g. in a typical producer-consumer situation, adding one item to the buffer only needs to wake up one consumer thread.</source>
          <target state="translated">要在&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;之间进行选择，请考虑一种状态更改是否仅对一个或多个等待线程有意义。例如，在典型的生产者-消费者情况下，向缓冲区添加一项仅需要唤醒一个消费者线程。</target>
        </trans-unit>
        <trans-unit id="41195aa7846cfb32030566deca5632cd7690db94" translate="yes" xml:space="preserve">
          <source>To clarify the above rules, here&amp;rsquo;s some example Python code, equivalent to the built-in hash, for computing the hash of a rational number, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">为了阐明上述规则，下面是一些示例Python代码，等效于内置哈希，用于计算有理数&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;的哈希：</target>
        </trans-unit>
        <trans-unit id="5b14bc137208bc1c60d307e4cf65b6dfa3f703a0" translate="yes" xml:space="preserve">
          <source>To collect the inner text of an element, see &lt;a href=&quot;#xml.etree.ElementTree.Element.itertext&quot;&gt;&lt;code&gt;itertext()&lt;/code&gt;&lt;/a&gt;, for example &lt;code&gt;&quot;&quot;.join(element.itertext())&lt;/code&gt;.</source>
          <target state="translated">要收集元素的内部文本，请参见&lt;a href=&quot;#xml.etree.ElementTree.Element.itertext&quot;&gt; &lt;code&gt;itertext()&lt;/code&gt; &lt;/a&gt;，例如 &lt;code&gt;&quot;&quot;.join(element.itertext())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90f8874e7ddc4712ffa50b77f81e993f131bedbd" translate="yes" xml:space="preserve">
          <source>To compile the executable, you can either just use the standard MSVC command line tools, or you can take advantage of the fact that distutils knows how to compile Python source:</source>
          <target state="translated">要编译可执行文件,你可以直接使用标准的 MSVC 命令行工具,也可以利用 distutils 知道如何编译 Python 源码这一事实。</target>
        </trans-unit>
        <trans-unit id="f05187baf6012be5553f969aef8548cf6b88338a" translate="yes" xml:space="preserve">
          <source>To compute the product of an iterable with itself, specify the number of repetitions with the optional &lt;em&gt;repeat&lt;/em&gt; keyword argument. For example, &lt;code&gt;product(A, repeat=4)&lt;/code&gt; means the same as &lt;code&gt;product(A, A, A, A)&lt;/code&gt;.</source>
          <target state="translated">要计算自身的可乘积，请使用可选的&lt;em&gt;repeat&lt;/em&gt;关键字参数指定重复次数。例如， &lt;code&gt;product(A, repeat=4)&lt;/code&gt; 表示与 &lt;code&gt;product(A, A, A, A)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e49a1c57330c177b754abd74b01b2d48765dccf" translate="yes" xml:space="preserve">
          <source>To configure return values on methods of &lt;em&gt;instances&lt;/em&gt; on the patched class you must do this on the &lt;code&gt;return_value&lt;/code&gt;. For example:</source>
          <target state="translated">要在修补的类的&lt;em&gt;实例&lt;/em&gt;方法上配置返回值，必须在 &lt;code&gt;return_value&lt;/code&gt; 上执行此操作。例如：</target>
        </trans-unit>
        <trans-unit id="eaae56af4b61d6444086b8fd2c7dd4d70db5a251" translate="yes" xml:space="preserve">
          <source>To configure the tree column heading, call this with column = &amp;ldquo;#0&amp;rdquo;.</source>
          <target state="translated">要配置树的列标题，请使用column =&amp;ldquo;＃0&amp;rdquo;进行调用。</target>
        </trans-unit>
        <trans-unit id="40e519f199f0660c1da27aa291b04f750c9d1934" translate="yes" xml:space="preserve">
          <source>To configure the tree column, call this with column = &amp;ldquo;#0&amp;rdquo;</source>
          <target state="translated">要配置树列，请使用column =&amp;ldquo;＃0&amp;rdquo;进行调用</target>
        </trans-unit>
        <trans-unit id="22dec9507a65d01d963843a88d1fb9139886cc92" translate="yes" xml:space="preserve">
          <source>To convert a dictionary to a named tuple, use the double-star-operator (as described in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;Unpacking Argument Lists&lt;/a&gt;):</source>
          <target state="translated">要将字典转换为命名的元组，请使用double-star-operator（如&amp;ldquo; &lt;a href=&quot;https://docs.python.org/3.8/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;解压缩参数列表&amp;rdquo;中所述&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="9edc33eaf040525095ed5a4c96668d2991bae3d7" translate="yes" xml:space="preserve">
          <source>To convert a dictionary to a named tuple, use the double-star-operator (as described in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;Unpacking Argument Lists&lt;/a&gt;):</source>
          <target state="translated">要将字典转换为命名的元组，请使用double-star-operator（如&amp;ldquo;&lt;a href=&quot;https://docs.python.org/3.9/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;解压缩参数列表&amp;rdquo;中所述&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="aca86a0be8c48cdfd48ca2728336953279aaed88" translate="yes" xml:space="preserve">
          <source>To copy all mail from a Babyl mailbox to an MH mailbox, converting all of the format-specific information that can be converted:</source>
          <target state="translated">要将Babyl邮箱中的所有邮件复制到MH邮箱中,转换所有可以转换的特定格式信息。</target>
        </trans-unit>
        <trans-unit id="a7a4d66aac534d7a89b1d842a9b4699051775cbd" translate="yes" xml:space="preserve">
          <source>To create a heap, use a list initialized to &lt;code&gt;[]&lt;/code&gt;, or you can transform a populated list into a heap via function &lt;a href=&quot;#heapq.heapify&quot;&gt;&lt;code&gt;heapify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要创建堆，请使用初始化为 &lt;code&gt;[]&lt;/code&gt; 的列表，或者可以通过函数&lt;a href=&quot;#heapq.heapify&quot;&gt; &lt;code&gt;heapify()&lt;/code&gt; &lt;/a&gt;将填充的列表转换为堆。</target>
        </trans-unit>
        <trans-unit id="a67c0ed9117c7f46c3f4e7b0dc05a0ed833eaec5" translate="yes" xml:space="preserve">
          <source>To create one&amp;rsquo;s own manager, one creates a subclass of &lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; and uses the &lt;a href=&quot;#multiprocessing.managers.BaseManager.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; classmethod to register new types or callables with the manager class. For example:</source>
          <target state="translated">要创建自己的管理器，可以创建&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;的子类，并使用&lt;a href=&quot;#multiprocessing.managers.BaseManager.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;类方法向管理器类注册新类型或可调用对象。例如：</target>
        </trans-unit>
        <trans-unit id="def08ca7414daf6c9ffb9d1b7d48a4054a6f3646" translate="yes" xml:space="preserve">
          <source>To define a generic function, decorate it with the &lt;code&gt;@singledispatch&lt;/code&gt; decorator. Note that the dispatch happens on the type of the first argument, create your function accordingly:</source>
          <target state="translated">要定义通用函数，请使用 &lt;code&gt;@singledispatch&lt;/code&gt; 装饰器对其进行装饰。请注意，分派发生在第一个参数的类型上，请相应地创建函数：</target>
        </trans-unit>
        <trans-unit id="ec0a2fc9637c4cdce9a5093c1c6fc720d969cd66" translate="yes" xml:space="preserve">
          <source>To define a generic method, decorate it with the &lt;code&gt;@singledispatchmethod&lt;/code&gt; decorator. Note that the dispatch happens on the type of the first non-self or non-cls argument, create your function accordingly:</source>
          <target state="translated">要定义通用方法，请使用 &lt;code&gt;@singledispatchmethod&lt;/code&gt; 装饰器对其进行装饰。请注意，调度是根据第一个非自身或非cls参数的类型进行的，请相应地创建函数：</target>
        </trans-unit>
        <trans-unit id="53e197460df6a7ae10480906b29b24cc193de048" translate="yes" xml:space="preserve">
          <source>To define a union, use e.g. &lt;code&gt;Union[int, str]&lt;/code&gt;. Details:</source>
          <target state="translated">要定义一个并集，请使用例如 &lt;code&gt;Union[int, str]&lt;/code&gt; 。细节：</target>
        </trans-unit>
        <trans-unit id="c3927e01fc5b5632db956bd430c64a9a003d5d89" translate="yes" xml:space="preserve">
          <source>To demonstrate several uses of the &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; function and its parameters, let&amp;rsquo;s fetch information about a project from &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt;:</source>
          <target state="translated">为了演示&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; &lt;/a&gt;函数及其参数的几种用法，让我们从&lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt;获取有关项目的信息：</target>
        </trans-unit>
        <trans-unit id="424ceed038a8907eb2e5c3e3261ed2cb0006ff29" translate="yes" xml:space="preserve">
          <source>To determine whether a particular function permits specifying an open file descriptor for its &lt;em&gt;path&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_fd&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.chdir&quot;&gt;&lt;code&gt;os.chdir()&lt;/code&gt;&lt;/a&gt; accepts open file descriptors for &lt;em&gt;path&lt;/em&gt; on your local platform:</source>
          <target state="translated">要确定特定函数是否允许为其&lt;em&gt;路径&lt;/em&gt;参数指定打开文件描述符，请在 &lt;code&gt;supports_fd&lt;/code&gt; 上使用 &lt;code&gt;in&lt;/code&gt; 运算符。例如，如果&lt;a href=&quot;#os.chdir&quot;&gt; &lt;code&gt;os.chdir()&lt;/code&gt; &lt;/a&gt;接受本地平台上&lt;em&gt;路径的&lt;/em&gt;打开文件描述符，则此表达式的计算结果为 &lt;code&gt;True&lt;/code&gt; ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1054223eda970969071e95bb7d866ebfd8c752ad" translate="yes" xml:space="preserve">
          <source>To disable autodetected proxy pass an empty dictionary.</source>
          <target state="translated">要禁用自动检测代理,需要传递一个空字典。</target>
        </trans-unit>
        <trans-unit id="f9cab41974091422ee9f72c252520e5936e0afb6" translate="yes" xml:space="preserve">
          <source>To do just the former:</source>
          <target state="translated">要做的只是前者。</target>
        </trans-unit>
        <trans-unit id="c80beb2d9874cb37ef475b5e1a40bd3aa13b619d" translate="yes" xml:space="preserve">
          <source>To document when incompatible changes were introduced, and when they will be &amp;mdash; or were &amp;mdash; made mandatory. This is a form of executable documentation, and can be inspected programmatically via importing &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; and examining its contents.</source>
          <target state="translated">记录何时引入了不兼容的更改，以及何时将（或将其）强制性更改。这是可执行文档的一种形式，可以通过导入&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;并检查其内容进行编程检查。</target>
        </trans-unit>
        <trans-unit id="2bebf05987b55dff22afd0eef3267ff60584d0ea" translate="yes" xml:space="preserve">
          <source>To ease the use of various types of files, the argparse module provides the factory FileType which takes the &lt;code&gt;mode=&lt;/code&gt;, &lt;code&gt;bufsize=&lt;/code&gt;, &lt;code&gt;encoding=&lt;/code&gt; and &lt;code&gt;errors=&lt;/code&gt; arguments of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. For example, &lt;code&gt;FileType('w')&lt;/code&gt; can be used to create a writable file:</source>
          <target state="translated">为了简化各种文件的使用，argparse模块提供了工厂FileType，它使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数的 &lt;code&gt;mode=&lt;/code&gt; ， &lt;code&gt;bufsize=&lt;/code&gt; ， &lt;code&gt;encoding=&lt;/code&gt; 和 &lt;code&gt;errors=&lt;/code&gt; 参数。例如， &lt;code&gt;FileType('w')&lt;/code&gt; 可用于创建可写文件：</target>
        </trans-unit>
        <trans-unit id="7c54845e78ca91a3d466e12c51c7e58cd7c952c9" translate="yes" xml:space="preserve">
          <source>To enable easier handling of syslog messages in the face of all these differing daemon behaviours, the appending of the NUL byte has been made configurable, through the use of a class-level attribute, &lt;code&gt;append_nul&lt;/code&gt;. This defaults to &lt;code&gt;True&lt;/code&gt; (preserving the existing behaviour) but can be set to &lt;code&gt;False&lt;/code&gt; on a &lt;code&gt;SysLogHandler&lt;/code&gt; instance in order for that instance to &lt;em&gt;not&lt;/em&gt; append the NUL terminator.</source>
          <target state="translated">为了在面对所有这些不同的守护程序行为时能够更轻松地处理syslog消息，通过使用类级属性 &lt;code&gt;append_nul&lt;/code&gt; ，可以将NUL字节的附加设置为可配置的。默认为 &lt;code&gt;True&lt;/code&gt; （保留现有行为），但可以在 &lt;code&gt;SysLogHandler&lt;/code&gt; 实例上将其设置为 &lt;code&gt;False&lt;/code&gt; ，以使该实例&lt;em&gt;不&lt;/em&gt;附加NUL终止符。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc49076076cfe4da08bd1523950aa22f8527f645" translate="yes" xml:space="preserve">
          <source>To enable registering lambdas and pre-existing functions, the &lt;code&gt;register()&lt;/code&gt; attribute can be used in a functional form:</source>
          <target state="translated">要启用注册lambda和预先存在的功能，可以以功能形式使用 &lt;code&gt;register()&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="c127349c822a4f335881123ec8ddf1bf0af08254" translate="yes" xml:space="preserve">
          <source>To enable the Python Development Mode without installing debug hooks on memory allocators, set the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONMALLOC&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONMALLOC&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">要启用Python开发模式而不在内存分配器上安装调试钩子，请将&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONMALLOC&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONMALLOC&lt;/code&gt; &lt;/a&gt;环境变量设置为 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6d29707b8a46ad95075a2f46ea912153c6feb3e" translate="yes" xml:space="preserve">
          <source>To enable this feature, simply add this to the top of your CGI script:</source>
          <target state="translated">要启用这个功能,只需在你的CGI脚本顶部添加这个。</target>
        </trans-unit>
        <trans-unit id="83bc49702d610686bdeda107bfc7569cda15cc78" translate="yes" xml:space="preserve">
          <source>To enable, pass a &lt;em&gt;depth&lt;/em&gt; value greater than zero; this sets the number of frames whose information will be captured. To disable, pass set &lt;em&gt;depth&lt;/em&gt; to zero.</source>
          <target state="translated">要启用，请传递大于零的&lt;em&gt;深度&lt;/em&gt;值；这设置了将捕获其信息的帧数。要禁用，请将设置&lt;em&gt;深度&lt;/em&gt;设置为零。</target>
        </trans-unit>
        <trans-unit id="668347bab37e711c30026491f866da05c6606f00" translate="yes" xml:space="preserve">
          <source>To encode &lt;code&gt;str&lt;/code&gt; filenames to &lt;code&gt;bytes&lt;/code&gt;, use &lt;a href=&quot;#os.fsencode&quot;&gt;&lt;code&gt;fsencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要将 &lt;code&gt;str&lt;/code&gt; 文件名编码为 &lt;code&gt;bytes&lt;/code&gt; ，请使用&lt;a href=&quot;#os.fsencode&quot;&gt; &lt;code&gt;fsencode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ce50989ce66ad69407e9680bd28212c88a6fa36" translate="yes" xml:space="preserve">
          <source>To ensure that &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;future statements&lt;/a&gt; run under releases prior to 2.1 at least yield runtime exceptions (the import of &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; will fail, because there was no module of that name prior to 2.1).</source>
          <target state="translated">为确保&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;将来的语句&lt;/a&gt;在2.1之前的发行版下运行，至少会产生运行时异常（&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;的导入将失败，因为在2.1之前没有该名称的模块）。</target>
        </trans-unit>
        <trans-unit id="08b2c8e368b6b95903d3fe48002c97fc7e6f09aa" translate="yes" xml:space="preserve">
          <source>To ensure that &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#future&quot;&gt;future statements&lt;/a&gt; run under releases prior to 2.1 at least yield runtime exceptions (the import of &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; will fail, because there was no module of that name prior to 2.1).</source>
          <target state="translated">为确保&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#future&quot;&gt;将来的语句&lt;/a&gt;在2.1之前的版本下运行，至少会产生运行时异常（&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;的导入将失败，因为在2.1之前没有该名称的模块）。</target>
        </trans-unit>
        <trans-unit id="ad4b05251097cbcad85d3ec00b6a8d792705b9f3" translate="yes" xml:space="preserve">
          <source>To ensure validity of the created memory mapping the file specified by the descriptor &lt;em&gt;fileno&lt;/em&gt; is internally automatically synchronized with physical backing store on Mac OS X and OpenVMS.</source>
          <target state="translated">为了确保创建的内存映射的有效性，描述符&lt;em&gt;文件no&lt;/em&gt;指定的&lt;em&gt;文件&lt;/em&gt;在内部自动与Mac OS X和OpenVMS上的物理后备存储同步。</target>
        </trans-unit>
        <trans-unit id="ec99a7a8d8cca50de20982646e9d30ebc48118e8" translate="yes" xml:space="preserve">
          <source>To enumerate all distinct multisets of a given size over a given set of elements, see &lt;a href=&quot;itertools#itertools.combinations_with_replacement&quot;&gt;&lt;code&gt;itertools.combinations_with_replacement()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要枚举给定元素集上给定大小的所有不同多集，请参阅&lt;a href=&quot;itertools#itertools.combinations_with_replacement&quot;&gt; &lt;code&gt;itertools.combinations_with_replacement()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="898a56a1cfb92055d38cc5a56c7cdec6b0701f08" translate="yes" xml:space="preserve">
          <source>To estimate the distribution for a model than isn&amp;rsquo;t easy to solve analytically, &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; can generate input samples for a &lt;a href=&quot;https://en.wikipedia.org/wiki/Monte_Carlo_method&quot;&gt;Monte Carlo simulation&lt;/a&gt;:</source>
          <target state="translated">为了估算模型的分布，这在解析上&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt;解决，NormalDist可以为&lt;a href=&quot;https://en.wikipedia.org/wiki/Monte_Carlo_method&quot;&gt;Monte Carlo模拟&lt;/a&gt;生成输入样本：</target>
        </trans-unit>
        <trans-unit id="2437b05ca67db6b8d2019788d70624cc8482ee86" translate="yes" xml:space="preserve">
          <source>To extend this to recognize other objects, subclass and implement a &lt;a href=&quot;#json.JSONEncoder.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt; method with another method that returns a serializable object for &lt;code&gt;o&lt;/code&gt; if possible, otherwise it should call the superclass implementation (to raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">要扩展它以识别其他对象，请子类化并实现&lt;a href=&quot;#json.JSONEncoder.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt;方法，并使用另一个方法（如果可能的话）为 &lt;code&gt;o&lt;/code&gt; 返回可序列化的对象，否则应调用超类实现（引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0b9e1f981c214898a9d71b2ad2be102d9cb21352" translate="yes" xml:space="preserve">
          <source>To extract the filename and numbers from a string like</source>
          <target state="translated">要从一个字符串中提取文件名和数字,如</target>
        </trans-unit>
        <trans-unit id="64c57258a9a2df67300aa5e1b50e7550f07b07d6" translate="yes" xml:space="preserve">
          <source>To fill in &lt;em&gt;fmt&lt;/em&gt;, execute &lt;code&gt;fmt % part_info&lt;/code&gt;, where &lt;code&gt;part_info&lt;/code&gt; is a dictionary composed of the following keys and values:</source>
          <target state="translated">要填写&lt;em&gt;fmt&lt;/em&gt;，请执行 &lt;code&gt;fmt % part_info&lt;/code&gt; ，其中 &lt;code&gt;part_info&lt;/code&gt; 是由以下键和值组成的字典：</target>
        </trans-unit>
        <trans-unit id="7958039c320a93b4dae438db3d31f1e69c695544" translate="yes" xml:space="preserve">
          <source>To find out the correct calling convention you have to look into the C header file or the documentation for the function you want to call.</source>
          <target state="translated">要找出正确的调用惯例,你必须查看C头文件或你要调用的函数的文档。</target>
        </trans-unit>
        <trans-unit id="b76d7e840b24dc0f55fd8a37a5d7e8f61bf8991d" translate="yes" xml:space="preserve">
          <source>To find out what card the pair consists of, one could use the &lt;a href=&quot;#re.Match.group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; method of the match object in the following manner:</source>
          <target state="translated">要找出这对组成的卡，可以按以下方式使用match对象的&lt;a href=&quot;#re.Match.group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="cba99c69fa84b2f2263e7863f73140aabcbd1b17" translate="yes" xml:space="preserve">
          <source>To find the handler, look for the following keys in the registry, stopping with the first one found:</source>
          <target state="translated">要找到处理程序,请在注册表中查找以下键,从找到的第一个键开始查找。</target>
        </trans-unit>
        <trans-unit id="a06e17885d0bbc13034b00f92ad215110abd6ebf" translate="yes" xml:space="preserve">
          <source>To find the handler, obtain the type of &lt;em&gt;obj&lt;/em&gt; (&lt;code&gt;typ = type(obj)&lt;/code&gt;), and look for the following keys in the registry, stopping with the first one found:</source>
          <target state="translated">要找到处理程序，请获取&lt;em&gt;obj&lt;/em&gt;（ &lt;code&gt;typ = type(obj)&lt;/code&gt; ）的类型，然后在注册表中查找以下项，并从找到的第一个项开始停止：</target>
        </trans-unit>
        <trans-unit id="fa5f6e01845faa817f7bbcccd8a26a392e5b5f5b" translate="yes" xml:space="preserve">
          <source>To find the name of the file containing the object.</source>
          <target state="translated">要找到包含对象的文件名。</target>
        </trans-unit>
        <trans-unit id="7ba93089e99aaca64717295e4916acb713510642" translate="yes" xml:space="preserve">
          <source>To force a recompile of all the &lt;code&gt;.py&lt;/code&gt; files in the &lt;code&gt;Lib/&lt;/code&gt; subdirectory and all its subdirectories:</source>
          <target state="translated">强制重新编译 &lt;code&gt;Lib/&lt;/code&gt; 子目录及其所有子目录中的所有 &lt;code&gt;.py&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="35bebc28881a876ed876e6f04e3b4c2f536762a9" translate="yes" xml:space="preserve">
          <source>To format only a tuple you should therefore provide a singleton tuple whose only element is the tuple to be formatted.</source>
          <target state="translated">因此,要只格式化一个元组,你应该提供一个单人元组,其唯一的元素就是要格式化的元组。</target>
        </trans-unit>
        <trans-unit id="332786b03f1a7ce007ac7b10bd4b080b17a03a5c" translate="yes" xml:space="preserve">
          <source>To generate a hash of a password using the strongest available method and check it against the original:</source>
          <target state="translated">使用最强的可用方法生成密码的哈希值,并与原始密码进行核对。</target>
        </trans-unit>
        <trans-unit id="06c31764bc0616e4052301f18b4bda631b48f9b9" translate="yes" xml:space="preserve">
          <source>To get an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object, call &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要获取&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象，请调用fromtimestamp（）：</target>
        </trans-unit>
        <trans-unit id="f6536929738b6302b242f75ab30f3360374015a5" translate="yes" xml:space="preserve">
          <source>To get at submitted form data, use the &lt;code&gt;FieldStorage&lt;/code&gt; class. If the form contains non-ASCII characters, use the &lt;em&gt;encoding&lt;/em&gt; keyword parameter set to the value of the encoding defined for the document. It is usually contained in the META tag in the HEAD section of the HTML document or by the &lt;em&gt;Content-Type&lt;/em&gt; header). This reads the form contents from the standard input or the environment (depending on the value of various environment variables set according to the CGI standard). Since it may consume standard input, it should be instantiated only once.</source>
          <target state="translated">要获取提交的表单数据，请使用 &lt;code&gt;FieldStorage&lt;/code&gt; 类。如果表单包含非ASCII字符，请使用设置为文档定义的编码值的&lt;em&gt;encoding&lt;/em&gt;关键字参数设置。它通常包含在HTML文档的HEAD部分的META标记中或&lt;em&gt;Content-Type&lt;/em&gt;标头中。这将从标准输入或环境中读取表单内容（取决于根据CGI标准设置的各种环境变量的值）。由于它可能消耗标准输入，因此只能实例化一次。</target>
        </trans-unit>
        <trans-unit id="ab0473a669281e7d941bb9f45175bd85a5a4f97c" translate="yes" xml:space="preserve">
          <source>To get at the &amp;ldquo;64-bitness&amp;rdquo; of the current interpreter, it is more reliable to query the &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">为了获得当前解释器的&amp;ldquo; 64位&amp;rdquo;，查询&lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;属性更加可靠：</target>
        </trans-unit>
        <trans-unit id="cbc6bb2323f202cb1f1a72bf35bb7dcec42b3136" translate="yes" xml:space="preserve">
          <source>To get at the toplevel window that contains a given widget, you can often just refer to the widget&amp;rsquo;s master. Of course if the widget has been packed inside of a frame, the master won&amp;rsquo;t represent a toplevel window. To get at the toplevel window that contains an arbitrary widget, you can call the &lt;code&gt;_root()&lt;/code&gt; method. This method begins with an underscore to denote the fact that this function is part of the implementation, and not an interface to Tk functionality.</source>
          <target state="translated">要获得包含给定窗口小部件的顶层窗口，通常可以仅参考窗口小部件的主窗口。当然，如果小部件已包装在框架内，则主部件将不代表顶层窗口。要进入包含任意窗口小部件的顶层窗口，可以调用 &lt;code&gt;_root()&lt;/code&gt; 方法。此方法以下划线开头，表示该功能是实现的一部分，而不是Tk功能的接口。</target>
        </trans-unit>
        <trans-unit id="7cbd4a63827073f5739e1664d7bb9679b9a9e8fa" translate="yes" xml:space="preserve">
          <source>To get fine-grained control over the copied region, the second form of &lt;a href=&quot;#curses.window.overlay&quot;&gt;&lt;code&gt;overlay()&lt;/code&gt;&lt;/a&gt; can be used. &lt;em&gt;sminrow&lt;/em&gt; and &lt;em&gt;smincol&lt;/em&gt; are the upper-left coordinates of the source window, and the other variables mark a rectangle in the destination window.</source>
          <target state="translated">为了获得对复制区域的细粒度控制，可以使用&lt;a href=&quot;#curses.window.overlay&quot;&gt; &lt;code&gt;overlay()&lt;/code&gt; &lt;/a&gt;的第二种形式。&lt;em&gt;sminrow&lt;/em&gt;和&lt;em&gt;smincol&lt;/em&gt;是源窗口的左上坐标，其他变量在目标窗口中标记一个矩形。</target>
        </trans-unit>
        <trans-unit id="b1f50e6db25d673b2592cd594d33fefebf9e6b13" translate="yes" xml:space="preserve">
          <source>To get fine-grained control over the copied region, the second form of &lt;a href=&quot;#curses.window.overwrite&quot;&gt;&lt;code&gt;overwrite()&lt;/code&gt;&lt;/a&gt; can be used. &lt;em&gt;sminrow&lt;/em&gt; and &lt;em&gt;smincol&lt;/em&gt; are the upper-left coordinates of the source window, the other variables mark a rectangle in the destination window.</source>
          <target state="translated">要获得对复制区域的细粒度控制，可以使用第二种形式的&lt;a href=&quot;#curses.window.overwrite&quot;&gt; &lt;code&gt;overwrite()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;sminrow&lt;/em&gt;和&lt;em&gt;smincol&lt;/em&gt;是源窗口的左上坐标，其他变量在目标窗口中标记一个矩形。</target>
        </trans-unit>
        <trans-unit id="28c7761539a23e6461abc6d90290b5c162e222dd" translate="yes" xml:space="preserve">
          <source>To get interpolation, use &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要获得插值，请使用&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="897f9f1483241234fc1680d5c01aaac400825b5f" translate="yes" xml:space="preserve">
          <source>To get started, here is a simple callback that shows the values it gets passed:</source>
          <target state="translated">要开始,这里有一个简单的回调,显示它被传递的值。</target>
        </trans-unit>
        <trans-unit id="9a15fb1b51bc74d10a0368adfb2541b410554600" translate="yes" xml:space="preserve">
          <source>To get the full set of requirements for a distribution, use the &lt;code&gt;requires()&lt;/code&gt; function:</source>
          <target state="translated">要获得分发的全部要求，请使用 &lt;code&gt;requires()&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="ac4c75c92e6f6f900761b506c028a1a4ab5d16ff" translate="yes" xml:space="preserve">
          <source>To give a field a default value, you can assign to it in the class body:</source>
          <target state="translated">要给一个字段一个默认值,你可以在类体中给它赋值。</target>
        </trans-unit>
        <trans-unit id="ec8970880073f2a4193628e073a34bef2505adc6" translate="yes" xml:space="preserve">
          <source>To give a widget to the packer (geometry manager), you call pack with optional arguments. In Tkinter, the Pack class holds all this functionality, and the various forms of the pack command are implemented as methods. All widgets in &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; are subclassed from the Packer, and so inherit all the packing methods. See the &lt;a href=&quot;tkinter.tix#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module documentation for additional information on the Form geometry manager.</source>
          <target state="translated">要将小部件提供给打包程序（几何管理器），请调用带有可选参数的pack。在Tkinter中，Pack类拥有所有这些功能，并且pack命令的各种形式都作为方法来实现。&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;中的所有小部件都是Packer的子类，因此继承了所有包装方法。有关表单几何管理器的其他信息，请参见&lt;a href=&quot;tkinter.tix#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;模块文档。</target>
        </trans-unit>
        <trans-unit id="15b1f3430d82190dc49a1cc998bb829e9af91209" translate="yes" xml:space="preserve">
          <source>To give the &lt;a href=&quot;#module-timeit&quot;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; module access to functions you define, you can pass a &lt;em&gt;setup&lt;/em&gt; parameter which contains an import statement:</source>
          <target state="translated">要使&lt;a href=&quot;#module-timeit&quot;&gt; &lt;code&gt;timeit&lt;/code&gt; &lt;/a&gt;模块可以访问您定义的函数，可以传递一个包含导入语句的&lt;em&gt;设置&lt;/em&gt;参数：</target>
        </trans-unit>
        <trans-unit id="da2a8f38b351487cbd3ba16c13bda7764e126ce4" translate="yes" xml:space="preserve">
          <source>To handle signals and to execute subprocesses, the event loop must be run in the main thread.</source>
          <target state="translated">为了处理信号和执行子进程,事件循环必须在主线程中运行。</target>
        </trans-unit>
        <trans-unit id="685b9a90ebbf94251071857ab67987648cbe32d1" translate="yes" xml:space="preserve">
          <source>To help find the line number of the object within its file.</source>
          <target state="translated">帮助查找对象在其文件中的行号。</target>
        </trans-unit>
        <trans-unit id="1e7a15938006fe056a0713c11808a9df9019ee29" translate="yes" xml:space="preserve">
          <source>To help keep Python 2 / Python 3 code in sync an &lt;code&gt;_order_&lt;/code&gt; attribute can be provided. It will be checked against the actual order of the enumeration and raise an error if the two do not match:</source>
          <target state="translated">为了帮助保持Python 2 / Python 3代码同步，可以提供 &lt;code&gt;_order_&lt;/code&gt; 属性。将根据枚举的实际顺序对其进行检查，如果两者不匹配，则会引发错误：</target>
        </trans-unit>
        <trans-unit id="eec8921c87539961c80aa82a8464e7801a7c0417" translate="yes" xml:space="preserve">
          <source>To help measure the effectiveness of the cache and tune the &lt;em&gt;maxsize&lt;/em&gt; parameter, the wrapped function is instrumented with a &lt;code&gt;cache_info()&lt;/code&gt; function that returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; showing &lt;em&gt;hits&lt;/em&gt;, &lt;em&gt;misses&lt;/em&gt;, &lt;em&gt;maxsize&lt;/em&gt; and &lt;em&gt;currsize&lt;/em&gt;. In a multi-threaded environment, the hits and misses are approximate.</source>
          <target state="translated">为了帮助衡量缓存的有效性并调整&lt;em&gt;maxsize&lt;/em&gt;参数，已包装的函数将通过 &lt;code&gt;cache_info()&lt;/code&gt; 函数进行检测，该函数返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组，其中&lt;/a&gt;显示&lt;em&gt;hits&lt;/em&gt;，&lt;em&gt;misses&lt;/em&gt;，&lt;em&gt;maxsize&lt;/em&gt;和&lt;em&gt;currsize&lt;/em&gt;。在多线程环境中，命中率和未命中率是近似的。</target>
        </trans-unit>
        <trans-unit id="c340b25ec6098ae69fa3b09838bf2442ac5dfcf2" translate="yes" xml:space="preserve">
          <source>To help measure the effectiveness of the cache and tune the &lt;em&gt;maxsize&lt;/em&gt; parameter, the wrapped function is instrumented with a &lt;code&gt;cache_info()&lt;/code&gt; function that returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; showing &lt;em&gt;hits&lt;/em&gt;, &lt;em&gt;misses&lt;/em&gt;, &lt;em&gt;maxsize&lt;/em&gt; and &lt;em&gt;currsize&lt;/em&gt;. In a multi-threaded environment, the hits and misses are approximate.</source>
          <target state="translated">为了帮助衡量缓存的有效性并调整&lt;em&gt;maxsize&lt;/em&gt;参数，已包装的函数配有 &lt;code&gt;cache_info()&lt;/code&gt; 函数，该函数返回一个显示&lt;em&gt;命中&lt;/em&gt;，&lt;em&gt;未命中&lt;/em&gt;，&lt;em&gt;maxsize&lt;/em&gt;和&lt;em&gt;currsize&lt;/em&gt;的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;。在多线程环境中，命中率和未命中率是近似的。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3fadbfda6fb4b04ad37db994c48401a0680ed3" translate="yes" xml:space="preserve">
          <source>To ignore certain arguments you can pass in objects that compare equal to &lt;em&gt;everything&lt;/em&gt;. Calls to &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; will then succeed no matter what was passed in.</source>
          <target state="translated">要忽略某些参数，您可以传入比较&lt;em&gt;所有&lt;/em&gt;对象的对象。不管传入了什么，对&lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;调用都将成功。</target>
        </trans-unit>
        <trans-unit id="ed0a50ba92595cd542bd7bee7fb484c8f05170bb" translate="yes" xml:space="preserve">
          <source>To illustrate, the following examples all return a dictionary equal to &lt;code&gt;{&quot;one&quot;: 1, &quot;two&quot;: 2, &quot;three&quot;: 3}&lt;/code&gt;:</source>
          <target state="translated">为了说明，以下示例均返回等于 &lt;code&gt;{&quot;one&quot;: 1, &quot;two&quot;: 2, &quot;three&quot;: 3}&lt;/code&gt; 的字典：</target>
        </trans-unit>
        <trans-unit id="478307dcfca982cb8b33f10a2361f937679e0acd" translate="yes" xml:space="preserve">
          <source>To implement &lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; slicing, use a similar approach applying &lt;a href=&quot;#collections.deque.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; to bring a target element to the left side of the deque. Remove old entries with &lt;a href=&quot;#collections.deque.popleft&quot;&gt;&lt;code&gt;popleft()&lt;/code&gt;&lt;/a&gt;, add new entries with &lt;a href=&quot;#collections.deque.extend&quot;&gt;&lt;code&gt;extend()&lt;/code&gt;&lt;/a&gt;, and then reverse the rotation. With minor variations on that approach, it is easy to implement Forth style stack manipulations such as &lt;code&gt;dup&lt;/code&gt;, &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;swap&lt;/code&gt;, &lt;code&gt;over&lt;/code&gt;, &lt;code&gt;pick&lt;/code&gt;, &lt;code&gt;rot&lt;/code&gt;, and &lt;code&gt;roll&lt;/code&gt;.</source>
          <target state="translated">要实现&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;切片，请使用类似的方法应用&lt;a href=&quot;#collections.deque.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;将目标元素移到双端队列的左侧。与删除旧条目&lt;a href=&quot;#collections.deque.popleft&quot;&gt; &lt;code&gt;popleft()&lt;/code&gt; &lt;/a&gt;，以添加新条目&lt;a href=&quot;#collections.deque.extend&quot;&gt; &lt;code&gt;extend()&lt;/code&gt; &lt;/a&gt;，再反向旋转。对该方法进行细微的改动，就很容易实现Forth样式的堆栈操作，例如 &lt;code&gt;dup&lt;/code&gt; ， &lt;code&gt;drop&lt;/code&gt; ， &lt;code&gt;swap&lt;/code&gt; ， &lt;code&gt;over&lt;/code&gt; ， &lt;code&gt;pick&lt;/code&gt; ， &lt;code&gt;rot&lt;/code&gt; 和 &lt;code&gt;roll&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2168141fc28490c67d1b6910596eb2e7720cb5bd" translate="yes" xml:space="preserve">
          <source>To implement a new event loop policy, it is recommended to subclass &lt;a href=&quot;#asyncio.DefaultEventLoopPolicy&quot;&gt;&lt;code&gt;DefaultEventLoopPolicy&lt;/code&gt;&lt;/a&gt; and override the methods for which custom behavior is wanted, e.g.:</source>
          <target state="translated">为了实现新的事件循环策略，建议将&lt;a href=&quot;#asyncio.DefaultEventLoopPolicy&quot;&gt; &lt;code&gt;DefaultEventLoopPolicy&lt;/code&gt; &lt;/a&gt;子类化并覆盖需要自定义行为的方法，例如：</target>
        </trans-unit>
        <trans-unit id="cefc74e4478b86927f72685a3f4bbbb20664083e" translate="yes" xml:space="preserve">
          <source>To implement a service, you must derive a class from &lt;a href=&quot;#socketserver.BaseRequestHandler&quot;&gt;&lt;code&gt;BaseRequestHandler&lt;/code&gt;&lt;/a&gt; and redefine its &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method. You can then run various versions of the service by combining one of the server classes with your request handler class. The request handler class must be different for datagram or stream services. This can be hidden by using the handler subclasses &lt;a href=&quot;#socketserver.StreamRequestHandler&quot;&gt;&lt;code&gt;StreamRequestHandler&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socketserver.DatagramRequestHandler&quot;&gt;&lt;code&gt;DatagramRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要实现服务，必须从&lt;a href=&quot;#socketserver.BaseRequestHandler&quot;&gt; &lt;code&gt;BaseRequestHandler&lt;/code&gt; &lt;/a&gt;派生一个类并重新定义其&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法。然后，您可以通过将服务器类之一与请求处理程序类组合来运行各种版本的服务。对于数据报或流服务，请求处理程序类必须不同。这可以通过使用处理程序子类&lt;a href=&quot;#socketserver.StreamRequestHandler&quot;&gt; &lt;code&gt;StreamRequestHandler&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#socketserver.DatagramRequestHandler&quot;&gt; &lt;code&gt;DatagramRequestHandler&lt;/code&gt; &lt;/a&gt;来隐藏。</target>
        </trans-unit>
        <trans-unit id="1785768c210239642eb9d634452c652d2df3cf43" translate="yes" xml:space="preserve">
          <source>To import a Python source file directly, use the following recipe (Python 3.5 and newer only):</source>
          <target state="translated">要直接导入Python源文件,请使用以下配方 (仅限Python 3.5和更新版本)。</target>
        </trans-unit>
        <trans-unit id="0a158457267508cf938f916c4c196f27b6dc6670" translate="yes" xml:space="preserve">
          <source>To include a text document, use the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element, and set the &lt;strong&gt;parse&lt;/strong&gt; attribute to &amp;ldquo;text&amp;rdquo;:</source>
          <target state="translated">要包含文本文档，请使用 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; 元素，并将&lt;strong&gt;parse&lt;/strong&gt;属性设置为&amp;ldquo; text&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="103c745176746075c187f9dacccc25564fca2bc7" translate="yes" xml:space="preserve">
          <source>To interoperate with networking interfaces such as the socket module, addresses must be converted to strings or integers. This is handled using the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; builtin functions:</source>
          <target state="translated">要与套接字模块之类的网络接口进行互操作，必须将地址转换为字符串或整数。这是使用&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;内置函数处理的：</target>
        </trans-unit>
        <trans-unit id="66bda8be924c407f66490a684c3b21482c6ac623" translate="yes" xml:space="preserve">
          <source>To lock the lock, a thread calls its &lt;a href=&quot;#threading.RLock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; method; this returns once the thread owns the lock. To unlock the lock, a thread calls its &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call pairs may be nested; only the final &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; (the &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; of the outermost pair) resets the lock to unlocked and allows another thread blocked in &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; to proceed.</source>
          <target state="translated">要锁定该锁，线程将调用其&lt;a href=&quot;#threading.RLock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;方法。一旦线程拥有锁，它将返回。要解锁锁，线程将调用其&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;方法。&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;调用对可以嵌套；只有最后的&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;（最外面的一对的&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;）将锁重置为解锁状态，并允许被&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;阻塞的另一个线程继续进行。</target>
        </trans-unit>
        <trans-unit id="b784db9baba0395d4c3539a334c8993acd6900c8" translate="yes" xml:space="preserve">
          <source>To loop over the standard input, or the list of files given on the command line, see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">要遍历标准输入或命令行上给定的文件列表，请参见&lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="98a046cb12aaa67ff00dce659507a1d1bdf50a19" translate="yes" xml:space="preserve">
          <source>To maintain compatibility with other platforms, not only the &lt;code id=&quot;index-3&quot;&gt;LANG&lt;/code&gt; variable is tested, but a list of variables given as envvars parameter. The first found to be defined will be used. &lt;em&gt;envvars&lt;/em&gt; defaults to the search path used in GNU gettext; it must always contain the variable name &lt;code&gt;'LANG'&lt;/code&gt;. The GNU gettext search path contains &lt;code&gt;'LC_ALL'&lt;/code&gt;, &lt;code&gt;'LC_CTYPE'&lt;/code&gt;, &lt;code&gt;'LANG'&lt;/code&gt; and &lt;code&gt;'LANGUAGE'&lt;/code&gt;, in that order.</source>
          <target state="translated">为了保持与其他平台的兼容性，不仅要测试 &lt;code id=&quot;index-3&quot;&gt;LANG&lt;/code&gt; 变量，还要测试作为envvars参数给出的变量列表。将使用发现的第一个。&lt;em&gt;envvars&lt;/em&gt;默认为GNU gettext中使用的搜索路径；它必须始终包含变量名 &lt;code&gt;'LANG'&lt;/code&gt; 。GNU gettext搜索路径 &lt;code&gt;'LC_ALL'&lt;/code&gt; 顺序包含'LC_ALL'， &lt;code&gt;'LC_CTYPE'&lt;/code&gt; ， &lt;code&gt;'LANG'&lt;/code&gt; 和 &lt;code&gt;'LANGUAGE'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="221a715c7e9bbc3c8f73812058613b8e009601f2" translate="yes" xml:space="preserve">
          <source>To make a more general purpose &lt;code&gt;AutoNumber&lt;/code&gt;, add &lt;code&gt;*args&lt;/code&gt; to the signature:</source>
          <target state="translated">要创建更通用的 &lt;code&gt;AutoNumber&lt;/code&gt; ，请在签名中添加 &lt;code&gt;*args&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1c14afdac812af227b88c86198941007cf0dd14f" translate="yes" xml:space="preserve">
          <source>To make a widget in Tk, the command is always of the form:</source>
          <target state="translated">要在Tk中制作一个widget,命令的形式总是这样。</target>
        </trans-unit>
        <trans-unit id="417627c112a69f8b699c74dadfa73e7deb1493a2" translate="yes" xml:space="preserve">
          <source>To make it easier to specify the format of input and output records, specific formatting parameters are grouped together into dialects. A dialect is a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class having a set of specific methods and a single &lt;code&gt;validate()&lt;/code&gt; method. When creating &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects, the programmer can specify a string or a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class as the dialect parameter. In addition to, or instead of, the &lt;em&gt;dialect&lt;/em&gt; parameter, the programmer can also specify individual formatting parameters, which have the same names as the attributes defined below for the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">为了更轻松地指定输入和输出记录的格式，将特定的格式设置参数组合为方言。方言是&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;类的子类，它具有一组特定方法和一个 &lt;code&gt;validate()&lt;/code&gt; 方法。创建&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;器对象时，程序员可以将字符串或&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;类的子类指定为方言参数。除了或代替&lt;em&gt;方言&lt;/em&gt;参数，程序员还可以指定各个格式设置参数，这些参数的名称与下面为&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;类定义的属性相同。</target>
        </trans-unit>
        <trans-unit id="fb0b20d767110eb1725af8275114eae06d1e185d" translate="yes" xml:space="preserve">
          <source>To make the application directly executable on POSIX, specify an interpreter to use.</source>
          <target state="translated">要使应用程序直接在POSIX上执行,请指定使用的解释器。</target>
        </trans-unit>
        <trans-unit id="3fca3ce87f48e2116a1eb0698d70c15c55057dc4" translate="yes" xml:space="preserve">
          <source>To make use of this reference material, there will be times when you will need to know how to read short passages of Tk and how to identify the various parts of a Tk command. (See section &lt;a href=&quot;#tkinter-basic-mapping&quot;&gt;Mapping Basic Tk into Tkinter&lt;/a&gt; for the &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; equivalents of what&amp;rsquo;s below.)</source>
          <target state="translated">为了利用此参考资料，有时您需要了解如何阅读Tk的短文以及如何识别Tk命令的各个部分。（有关以下内容的&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;等效信息，请参见将&lt;a href=&quot;#tkinter-basic-mapping&quot;&gt;基本Tk映射到Tkinter&lt;/a&gt;一节。）</target>
        </trans-unit>
        <trans-unit id="484e44f760bfbe435b83b25b84c0b182802fc132" translate="yes" xml:space="preserve">
          <source>To map anonymous memory, -1 should be passed as the fileno along with the length.</source>
          <target state="translated">要映射匿名内存,应将-1和长度一起作为fileno传递。</target>
        </trans-unit>
        <trans-unit id="e2e1faf71792fd171bb7d18670aacf92d65ddab9" translate="yes" xml:space="preserve">
          <source>To match a literal &lt;code&gt;']'&lt;/code&gt; inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both &lt;code&gt;[()[\]{}]&lt;/code&gt; and &lt;code&gt;[]()[{}]&lt;/code&gt; will both match a parenthesis.</source>
          <target state="translated">要在集合中匹配文字 &lt;code&gt;']'&lt;/code&gt; ，请在其前面加上反斜杠，或将其放在集合的开头。例如， &lt;code&gt;[()[\]{}]&lt;/code&gt; 和 &lt;code&gt;[]()[{}]&lt;/code&gt; 都将与括号匹配。</target>
        </trans-unit>
        <trans-unit id="618708a8fc1d746e948f62210d44b1f5af8f8644" translate="yes" xml:space="preserve">
          <source>To measure the execution time of the first statement, use the &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#timeit.Timer.repeat&quot;&gt;&lt;code&gt;repeat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#timeit.Timer.autorange&quot;&gt;&lt;code&gt;autorange()&lt;/code&gt;&lt;/a&gt; methods are convenience methods to call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; multiple times.</source>
          <target state="translated">要测量第一条语句的执行时间，请使用&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;方法。在&lt;a href=&quot;#timeit.Timer.repeat&quot;&gt; &lt;code&gt;repeat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#timeit.Timer.autorange&quot;&gt; &lt;code&gt;autorange()&lt;/code&gt; &lt;/a&gt;方法是方便的方法来调用&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;多次。</target>
        </trans-unit>
        <trans-unit id="1877606d3808c148650a0894f86dec786878b4b9" translate="yes" xml:space="preserve">
          <source>To obtain a hexadecimal string representation for a float, use the &lt;a href=&quot;stdtypes#float.hex&quot;&gt;&lt;code&gt;float.hex()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">若要获取浮点数的十六进制字符串表示形式，请使用&lt;a href=&quot;stdtypes#float.hex&quot;&gt; &lt;code&gt;float.hex()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="61455195f543a7d8dd71efcc31b21d9861f799c4" translate="yes" xml:space="preserve">
          <source>To open the key, use the &lt;a href=&quot;#winreg.CreateKey&quot;&gt;&lt;code&gt;CreateKey()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#winreg.OpenKey&quot;&gt;&lt;code&gt;OpenKey()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">要打开键，请使用&lt;a href=&quot;#winreg.CreateKey&quot;&gt; &lt;code&gt;CreateKey()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#winreg.OpenKey&quot;&gt; &lt;code&gt;OpenKey()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f456a6710b9e6585a204a095080c291aedbb463b" translate="yes" xml:space="preserve">
          <source>To override the basic Tk widgets, the import should follow the Tk import:</source>
          <target state="translated">要覆盖基本的Tk小部件,导入时应遵循Tk导入。</target>
        </trans-unit>
        <trans-unit id="bf838250004c5e59d72bbbdebbb5c5977c45e02d" translate="yes" xml:space="preserve">
          <source>To override the comparisons (presumably for speed, as the semantics are fixed), redefine &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;, then the other operations will automatically follow suit.</source>
          <target state="translated">要覆盖比较（假定速度是固定的，因为语义是固定的），请重新定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;，然后其他操作将自动跟随。</target>
        </trans-unit>
        <trans-unit id="26c57cc65cd485fdca61260fb6b91eb1f51ff39b" translate="yes" xml:space="preserve">
          <source>To override the comparisons (presumably for speed, as the semantics are fixed), redefine &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;, then the other operations will automatically follow suit.</source>
          <target state="translated">要覆盖比较（假定速度是固定的，因为语义是固定的），请重新定义&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;，然后其他操作将自动跟随。</target>
        </trans-unit>
        <trans-unit id="e1904b2c6725763e667f2f07e78ab2eded89803e" translate="yes" xml:space="preserve">
          <source>To perform regression testing by verifying that interactive examples from a test file or a test object work as expected.</source>
          <target state="translated">通过验证来自测试文件或测试对象的交互式示例是否按预期工作来执行回归测试。</target>
        </trans-unit>
        <trans-unit id="b46749e5ac61308154978bbff6f9776b88f8bb48" translate="yes" xml:space="preserve">
          <source>To pickle objects that have an external persistent ID, the pickler must have a custom &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; method that takes an object as an argument and returns either &lt;code&gt;None&lt;/code&gt; or the persistent ID for that object. When &lt;code&gt;None&lt;/code&gt; is returned, the pickler simply pickles the object as normal. When a persistent ID string is returned, the pickler will pickle that object, along with a marker so that the unpickler will recognize it as a persistent ID.</source>
          <target state="translated">要使具有外部持久性ID的对象腌制，选择器必须具有一个自定义的&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;方法，该方法将对象作为参数并返回 &lt;code&gt;None&lt;/code&gt; 或该对象的持久性ID。当返回 &lt;code&gt;None&lt;/code&gt; 时，拾取器仅按常规对对象进行酸洗。返回持久性ID字符串后，腌制人员将腌制该对象以及标记，以便取消腌制人员将其识别为持久性ID。</target>
        </trans-unit>
        <trans-unit id="464cddfc71cabb999b36dc4463a388c3b896939d" translate="yes" xml:space="preserve">
          <source>To post an article from a binary file (this assumes that the article has valid headers, and that you have right to post on the particular newsgroup):</source>
          <target state="translated">从二进制文件中发布文章(假设文章有有效的标题,并且你有权利在特定的新闻组中发布)。</target>
        </trans-unit>
        <trans-unit id="3ea7701325362cf111507ae07ad956de8d76b901" translate="yes" xml:space="preserve">
          <source>To prevent the DocTestFinder from extracting DocTests from objects that are imported from other modules. (Contained objects with modules other than &lt;em&gt;module&lt;/em&gt; are ignored.)</source>
          <target state="translated">防止DocTestFinder从其他模块导入的对象中提取DocTest。（包含模块以外的&lt;em&gt;模块的&lt;/em&gt;包含对象将被忽略。）</target>
        </trans-unit>
        <trans-unit id="75ce79c23ae1627c624827192c59627f01d4d32c" translate="yes" xml:space="preserve">
          <source>To process this file, load it as usual, and pass the root element to the &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">要处理此文件，请照常加载它，并将根元素传递给&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;模块：</target>
        </trans-unit>
        <trans-unit id="0378c517bb3f44a4de23c24714950e30345fceb7" translate="yes" xml:space="preserve">
          <source>To profile a function that takes a single argument, you can do:</source>
          <target state="translated">要对一个只取一个参数的函数进行剖析,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="5449841f06bad5a2670dfafc51300c84788e53c9" translate="yes" xml:space="preserve">
          <source>To programmatically import a module, use &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要以编程方式导入模块，请使用&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="235b35cc854fb6c40fcb5bc32127ed15360a7207" translate="yes" xml:space="preserve">
          <source>To reduce interpreter startup overhead, the Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; function is not resolved until this function is first called. If the function cannot be resolved, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">为了减少解释器的启动开销，直到首次调用此函数后，才解析Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; 函数。如果无法解析该函数​​，则会引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f671170832a277ad19c6673cec3b9e9d7f73479" translate="yes" xml:space="preserve">
          <source>To remove a &lt;code&gt;side_effect&lt;/code&gt;, and return to the default behaviour, set the &lt;code&gt;side_effect&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">要删除 &lt;code&gt;side_effect&lt;/code&gt; 并返回默认行为，请将 &lt;code&gt;side_effect&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c0a6df24f5dba94f71f5eb8abe853277fe5f8b69" translate="yes" xml:space="preserve">
          <source>To remove a collation, call &lt;code&gt;create_collation&lt;/code&gt; with &lt;code&gt;None&lt;/code&gt; as callable:</source>
          <target state="translated">要删除排序规则，请调用 &lt;code&gt;create_collation&lt;/code&gt; 其中 &lt;code&gt;None&lt;/code&gt; 为可调用项：</target>
        </trans-unit>
        <trans-unit id="deb986b44a469cfc418c4db889efbebd3d498e8b" translate="yes" xml:space="preserve">
          <source>To remove all commands from a breakpoint, type &lt;code&gt;commands&lt;/code&gt; and follow it immediately with &lt;code&gt;end&lt;/code&gt;; that is, give no commands.</source>
          <target state="translated">要从断点删除所有命令，请键入 &lt;code&gt;commands&lt;/code&gt; 并在命令后立即加上 &lt;code&gt;end&lt;/code&gt; ; 也就是说，不要给出任何命令。</target>
        </trans-unit>
        <trans-unit id="d3e77a28a57d567fcb960445b706ccb578026b25" translate="yes" xml:space="preserve">
          <source>To replace the shebang line on an existing archive, create a modified archive using the &lt;a href=&quot;#zipapp.create_archive&quot;&gt;&lt;code&gt;create_archive()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">要替换现有存档上的shebang行，请使用&lt;a href=&quot;#zipapp.create_archive&quot;&gt; &lt;code&gt;create_archive()&lt;/code&gt; &lt;/a&gt;函数创建修改后的存档：</target>
        </trans-unit>
        <trans-unit id="a0fb9eb465366c5feaf1e2c7608a6a11085a2ed6" translate="yes" xml:space="preserve">
          <source>To retrieve a field whose name is stored in a string, use the &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">要检索名称存储在字符串中的字段，请使用&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="0f5192f40799a0b5249f8f65a07b092775843f9c" translate="yes" xml:space="preserve">
          <source>To retrieve data after executing a SELECT statement, you can either treat the cursor as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;, call the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt;&lt;code&gt;fetchone()&lt;/code&gt;&lt;/a&gt; method to retrieve a single matching row, or call &lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt;&lt;code&gt;fetchall()&lt;/code&gt;&lt;/a&gt; to get a list of the matching rows.</source>
          <target state="translated">要在执行SELECT语句后检索数据，可以将游标视为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;，可以调用游标的&lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt; &lt;code&gt;fetchone()&lt;/code&gt; &lt;/a&gt;方法来检索单个匹配行，也可以调用&lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt; &lt;code&gt;fetchall()&lt;/code&gt; &lt;/a&gt;来获取匹配行的列表。</target>
        </trans-unit>
        <trans-unit id="6c1ea8cf4d7e5a8411a92698b71e9192fbc3224c" translate="yes" xml:space="preserve">
          <source>To retrieve data after executing a SELECT statement, you can either treat the cursor as an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;, call the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt;&lt;code&gt;fetchone()&lt;/code&gt;&lt;/a&gt; method to retrieve a single matching row, or call &lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt;&lt;code&gt;fetchall()&lt;/code&gt;&lt;/a&gt; to get a list of the matching rows.</source>
          <target state="translated">要在执行SELECT语句后检索数据，可以将游标视为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;，可以调用游标的&lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt; &lt;code&gt;fetchone()&lt;/code&gt; &lt;/a&gt;方法来检索单个匹配行，也可以调用&lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt; &lt;code&gt;fetchall()&lt;/code&gt; &lt;/a&gt;来获取匹配行的列表。</target>
        </trans-unit>
        <trans-unit id="fa0d39041d8f8095fbf0fa33c3d912798a2630dc" translate="yes" xml:space="preserve">
          <source>To reverse this encoding process, &lt;a href=&quot;#urllib.parse.parse_qs&quot;&gt;&lt;code&gt;parse_qs()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.parse.parse_qsl&quot;&gt;&lt;code&gt;parse_qsl()&lt;/code&gt;&lt;/a&gt; are provided in this module to parse query strings into Python data structures.</source>
          <target state="translated">为了反转此编码过程，此模块中提供了&lt;a href=&quot;#urllib.parse.parse_qs&quot;&gt; &lt;code&gt;parse_qs()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#urllib.parse.parse_qsl&quot;&gt; &lt;code&gt;parse_qsl()&lt;/code&gt; &lt;/a&gt;来将查询字符串解析为Python数据结构。</target>
        </trans-unit>
        <trans-unit id="95afd35e46114bc381b797d3696a69c9479e1723" translate="yes" xml:space="preserve">
          <source>To schedule a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-callback&quot;&gt;callback&lt;/a&gt; from another OS thread, the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt; method should be used. Example:</source>
          <target state="translated">要安排来自另一个OS线程的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-callback&quot;&gt;回调&lt;/a&gt;，应使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;方法。例子：</target>
        </trans-unit>
        <trans-unit id="46f1ad4c5c8298c7c978bfa9952bc941076ec95b" translate="yes" xml:space="preserve">
          <source>To schedule a callback from a different OS thread, the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt; method should be used. Example:</source>
          <target state="translated">要安排来自其他OS线程的回调，应使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;方法。例：</target>
        </trans-unit>
        <trans-unit id="8f0884ec1f5594a6a040aa5eeeff821ee386f563" translate="yes" xml:space="preserve">
          <source>To schedule a coroutine object from a different OS thread, the &lt;a href=&quot;asyncio-task#asyncio.run_coroutine_threadsafe&quot;&gt;&lt;code&gt;run_coroutine_threadsafe()&lt;/code&gt;&lt;/a&gt; function should be used. It returns a &lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt;&lt;code&gt;concurrent.futures.Future&lt;/code&gt;&lt;/a&gt; to access the result:</source>
          <target state="translated">要从其他OS线程安排协程对象，应使用&lt;a href=&quot;asyncio-task#asyncio.run_coroutine_threadsafe&quot;&gt; &lt;code&gt;run_coroutine_threadsafe()&lt;/code&gt; &lt;/a&gt;函数。它返回&lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt; &lt;code&gt;concurrent.futures.Future&lt;/code&gt; &lt;/a&gt;以访问结果：</target>
        </trans-unit>
        <trans-unit id="1f6627de8dbbc9c12a86f34fd1b5fe034f34a62d" translate="yes" xml:space="preserve">
          <source>To see if a given string is a valid hand, one could do the following:</source>
          <target state="translated">要查看一个给定的字符串是否为有效手牌,可以做如下操作。</target>
        </trans-unit>
        <trans-unit id="e0943fae7c35b5498e405be59003cb18933c3cc3" translate="yes" xml:space="preserve">
          <source>To select a start method you use the &lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt;&lt;code&gt;set_start_method()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; clause of the main module. For example:</source>
          <target state="translated">要选择启动方法，请在主模块的 &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 子句中使用set_start_method &lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt; &lt;code&gt;set_start_method()&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="7b599b4912ffb321a32eeeee3be0d641b6372a13" translate="yes" xml:space="preserve">
          <source>To send a configuration to the socket, read in the configuration file and send it to the socket as a sequence of bytes preceded by a four-byte length string packed in binary using &lt;code&gt;struct.pack('&amp;gt;L', n)&lt;/code&gt;.</source>
          <target state="translated">要将配置发送到套接字，请读入配置文件，并将其作为字节序列发送到套接字，然后以 &lt;code&gt;struct.pack('&amp;gt;L', n)&lt;/code&gt; 打包成二进制形式的四字节长度字符串。</target>
        </trans-unit>
        <trans-unit id="10c9c2df671deeca1fe90d00e167dfed20eaa838" translate="yes" xml:space="preserve">
          <source>To send the output of &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;sys.stderr&lt;/em&gt;:</source>
          <target state="translated">要将&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;的输出发送到&lt;em&gt;sys.stderr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="368af95afe3dde84ad97245ab11827291359580c" translate="yes" xml:space="preserve">
          <source>To send the output of &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; to a file on disk, redirect the output to a regular file:</source>
          <target state="translated">要将&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;的输出发送到磁盘上的文件，请将输出重定向到常规文件：</target>
        </trans-unit>
        <trans-unit id="760c34de5354bcacaf1f6c0b875ba4fca40a85c7" translate="yes" xml:space="preserve">
          <source>To serialize an object hierarchy, you simply call the &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; function. Similarly, to de-serialize a data stream, you call the &lt;a href=&quot;#pickle.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt; function. However, if you want more control over serialization and de-serialization, you can create a &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; object, respectively.</source>
          <target state="translated">要序列化对象层次结构，只需调用&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;函数。同样，要反序列化数据流，请调用&lt;a href=&quot;#pickle.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;函数。但是，如果要更多地控制序列化和反序列化，则可以分别创建&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a02536d7456d8606cd89506bca4a517540363eb4" translate="yes" xml:space="preserve">
          <source>To set a POINTER type field to &lt;code&gt;NULL&lt;/code&gt;, you can assign &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">要将POINTER类型字段设置为 &lt;code&gt;NULL&lt;/code&gt; ，可以指定 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="096472e03fc776b0c758257a75507213a0525c42" translate="yes" xml:space="preserve">
          <source>To set the system to ignore the system data and use the tzdata package instead, set &lt;code&gt;PYTHONTZPATH=&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">要将系统设置为忽略系统数据并使用tzdata包，请设置 &lt;code&gt;PYTHONTZPATH=&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94089b856a9740ad3b8dc05c41cca98f65149300" translate="yes" xml:space="preserve">
          <source>To show the individual process IDs involved, here is an expanded example:</source>
          <target state="translated">为了显示所涉及的各个流程ID,这里是一个扩展的例子。</target>
        </trans-unit>
        <trans-unit id="0c86f19a38fdf4f3f2888e7254bd241904a08f10" translate="yes" xml:space="preserve">
          <source>To shuffle an immutable sequence and return a new shuffled list, use &lt;code&gt;sample(x, k=len(x))&lt;/code&gt; instead.</source>
          <target state="translated">要随机播放不可变序列并返回新的随机播放列表，请改用 &lt;code&gt;sample(x, k=len(x))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad3933308c92befa869f265838a9e8cdec721d4d" translate="yes" xml:space="preserve">
          <source>To simplify access to the various codec components, the module provides these additional functions which use &lt;a href=&quot;#codecs.lookup&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; for the codec lookup:</source>
          <target state="translated">为了简化对各种编解码器组件的访问，该模块提供了以下附加功能，这些功能使用&lt;a href=&quot;#codecs.lookup&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;进行编解码器查找：</target>
        </trans-unit>
        <trans-unit id="7aabdf8b0670313243d3ad3253be2cbd8d7f5c13" translate="yes" xml:space="preserve">
          <source>To simplify and standardize error handling, codecs may implement different error handling schemes by accepting the &lt;em&gt;errors&lt;/em&gt; string argument. The following string values are defined and implemented by all standard Python codecs:</source>
          <target state="translated">为了简化和标准化错误处理，编解码器可以通过接受&lt;em&gt;errors&lt;/em&gt;字符串参数来实现不同的错误处理方案。以下字符串值由所有标准Python编解码器定义和实现：</target>
        </trans-unit>
        <trans-unit id="0a8769fc8be4940cb808b1153502d24a60ed8f26" translate="yes" xml:space="preserve">
          <source>To simplify token stream handling, all &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#operators&quot;&gt;operator&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#delimiters&quot;&gt;delimiter&lt;/a&gt; tokens and &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; are returned using the generic &lt;a href=&quot;token#token.OP&quot;&gt;&lt;code&gt;OP&lt;/code&gt;&lt;/a&gt; token type. The exact type can be determined by checking the &lt;code&gt;exact_type&lt;/code&gt; property on the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; returned from &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize.tokenize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了简化令牌流的处理，所有&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#operators&quot;&gt;运算符&lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#delimiters&quot;&gt;定界符&lt;/a&gt;令牌以及&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;均使用通用&lt;a href=&quot;token#token.OP&quot;&gt; &lt;code&gt;OP&lt;/code&gt; &lt;/a&gt;令牌类型返回。可以通过检查从&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize.tokenize()&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;上的 &lt;code&gt;exact_type&lt;/code&gt; 属性来确定确切类型。</target>
        </trans-unit>
        <trans-unit id="ea672bbb45b01e2318383dead50026a12f2d14f6" translate="yes" xml:space="preserve">
          <source>To simplify token stream handling, all &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#operators&quot;&gt;operator&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#delimiters&quot;&gt;delimiter&lt;/a&gt; tokens and &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; are returned using the generic &lt;a href=&quot;token#token.OP&quot;&gt;&lt;code&gt;OP&lt;/code&gt;&lt;/a&gt; token type. The exact type can be determined by checking the &lt;code&gt;exact_type&lt;/code&gt; property on the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; returned from &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize.tokenize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了简化令牌流的处理，使用通用&lt;a href=&quot;token#token.OP&quot;&gt; &lt;code&gt;OP&lt;/code&gt; &lt;/a&gt;令牌类型返回所有&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#operators&quot;&gt;运算符&lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#delimiters&quot;&gt;定界符&lt;/a&gt;令牌和&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;。可以通过检查从&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize.tokenize()&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;上的 &lt;code&gt;exact_type&lt;/code&gt; 属性来确定确切类型。</target>
        </trans-unit>
        <trans-unit id="c99360216ba373c1bc65a90076c1777659e276a7" translate="yes" xml:space="preserve">
          <source>To specify a variable-length tuple of homogeneous type, use literal ellipsis, e.g. &lt;code&gt;Tuple[int, ...]&lt;/code&gt;. A plain &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;code&gt;Tuple[Any, ...]&lt;/code&gt;, and in turn to &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要指定同构类型的变长元组，请使用文字省略号，例如 &lt;code&gt;Tuple[int, ...]&lt;/code&gt; 。一个普通的&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;等效于 &lt;code&gt;Tuple[Any, ...]&lt;/code&gt; ，然后等效于&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b814a7a26e755324d50e482a1e951755b0c61cc2" translate="yes" xml:space="preserve">
          <source>To specify the use of a secure protocol (TLS), pass in a tuple to the &lt;em&gt;secure&lt;/em&gt; argument. This will only be used when authentication credentials are supplied. The tuple should be either an empty tuple, or a single-value tuple with the name of a keyfile, or a 2-value tuple with the names of the keyfile and certificate file. (This tuple is passed to the &lt;a href=&quot;smtplib#smtplib.SMTP.starttls&quot;&gt;&lt;code&gt;smtplib.SMTP.starttls()&lt;/code&gt;&lt;/a&gt; method.)</source>
          <target state="translated">要指定使用安全协议（TLS），请将元组传递给&lt;em&gt;secure&lt;/em&gt;参数。仅在提供身份验证凭据时使用。该元组应该是一个空元组，或者是一个具有密钥文件名的单值元组，或者是一个具有密钥文件和证书文件名的二值元组。（此元组传递到&lt;a href=&quot;smtplib#smtplib.SMTP.starttls&quot;&gt; &lt;code&gt;smtplib.SMTP.starttls()&lt;/code&gt; &lt;/a&gt;方法。）</target>
        </trans-unit>
        <trans-unit id="d5b3104139b01eeac04cf9e042a54bbc4242a857" translate="yes" xml:space="preserve">
          <source>To start using Ttk, import its module:</source>
          <target state="translated">要开始使用Ttk,请导入它的模块。</target>
        </trans-unit>
        <trans-unit id="51c216987f5aa2dbd2061c95ac950a3b4802975d" translate="yes" xml:space="preserve">
          <source>To summarize the interface (&lt;code&gt;key&lt;/code&gt; is a string, &lt;code&gt;data&lt;/code&gt; is an arbitrary object):</source>
          <target state="translated">总结一下接口（ &lt;code&gt;key&lt;/code&gt; 是一个字符串， &lt;code&gt;data&lt;/code&gt; 是一个任意对象）：</target>
        </trans-unit>
        <trans-unit id="00362506e0ca02815d8f1fdbc1235c68ab4941ab" translate="yes" xml:space="preserve">
          <source>To support SMTP (&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;), &lt;code&gt;Address&lt;/code&gt; handles one special case: if &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; are both the empty string (or &lt;code&gt;None&lt;/code&gt;), then the string value of the &lt;code&gt;Address&lt;/code&gt; is &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">为了支持SMTP（&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;）， &lt;code&gt;Address&lt;/code&gt; 处理一个特殊情况：如果 &lt;code&gt;username&lt;/code&gt; 和 &lt;code&gt;domain&lt;/code&gt; 均为空字符串（或 &lt;code&gt;None&lt;/code&gt; ），则的字符串值 &lt;code&gt;Address&lt;/code&gt; 是 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4d801175c02a7134e5a67b972b015f82efd457d" translate="yes" xml:space="preserve">
          <source>To support a wide variety of use cases, the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor (and the convenience functions) accept a large number of optional arguments. For most typical use cases, many of these arguments can be safely left at their default values. The arguments that are most commonly needed are:</source>
          <target state="translated">为了支持各种用例，&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;构造函数（和便利函数）接受大量可选参数。对于大多数典型用例，可以安全地将其中许多参数保留为其默认值。最常用的参数是：</target>
        </trans-unit>
        <trans-unit id="7b9ef99554dda06486dfe4f9aad3a9b5884ad664" translate="yes" xml:space="preserve">
          <source>To support easier conversion of result objects between &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, all return values from URL parsing functions provide either an &lt;code&gt;encode()&lt;/code&gt; method (when the result contains &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data) or a &lt;code&gt;decode()&lt;/code&gt; method (when the result contains &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data). The signatures of these methods match those of the corresponding &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; methods (except that the default encoding is &lt;code&gt;'ascii'&lt;/code&gt; rather than &lt;code&gt;'utf-8'&lt;/code&gt;). Each produces a value of a corresponding type that contains either &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data (for &lt;code&gt;encode()&lt;/code&gt; methods) or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data (for &lt;code&gt;decode()&lt;/code&gt; methods).</source>
          <target state="translated">为了支持之间结果对象的更容易转换&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;，从URL解析函数所有返回值提供任一种 &lt;code&gt;encode()&lt;/code&gt; 方法（当结果包含&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据）或 &lt;code&gt;decode()&lt;/code&gt; 方法（当结果包含&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;数据）。这些方法的签名与相应的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;方法的签名匹配（除了默认编码是 &lt;code&gt;'ascii'&lt;/code&gt; 而不是 &lt;code&gt;'utf-8'&lt;/code&gt; ）。每个产生一个对应类型的值，该值包含&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;数据（用于 &lt;code&gt;encode()&lt;/code&gt; 方法）或&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据（适用于 &lt;code&gt;decode()&lt;/code&gt; 方法）。</target>
        </trans-unit>
        <trans-unit id="8faa414aa237c45d91492c0790eb5c1446c7200f" translate="yes" xml:space="preserve">
          <source>To support more specific error reporting from class constructors, the module defines the following exceptions:</source>
          <target state="translated">为了支持类构造函数更具体的错误报告,该模块定义了以下异常。</target>
        </trans-unit>
        <trans-unit id="c16d8b4d0edbd20bc5f883f1830e6a64819d7f59" translate="yes" xml:space="preserve">
          <source>To suppress stdout or stderr, supply a value of &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要禁止stdout或stderr，请提供&lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="93fe155fd74b1d1e9076d9feef1c801042fda3b0" translate="yes" xml:space="preserve">
          <source>To test for the presence of SSL support in a Python installation, user code should use the following idiom:</source>
          <target state="translated">要测试在Python安装中是否存在SSL支持,用户代码应该使用以下成语。</target>
        </trans-unit>
        <trans-unit id="ad05b0e475f3d0aee3f7e6301c1f32c33536da4a" translate="yes" xml:space="preserve">
          <source>To test warnings raised by code, use the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager. With it you can temporarily mutate the warnings filter to facilitate your testing. For instance, do the following to capture all raised warnings to check:</source>
          <target state="translated">要测试代码引发的警告，请使用&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;上下文管理器。有了它，您可以临时更改警告过滤器以方便您的测试。例如，执行以下操作以捕获所有引发的警告以进行检查：</target>
        </trans-unit>
        <trans-unit id="10561bf3f9f3d0097e11aeeaa24a8823dff2df5a" translate="yes" xml:space="preserve">
          <source>To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.</source>
          <target state="translated">在法律允许的范围内,作者已将本软件的所有版权及相关权利和邻接权利献给了全球公共领域。本软件的发布不作任何保证。</target>
        </trans-unit>
        <trans-unit id="b957c8b22524d7f45637f1438f30d19ffc30d3b7" translate="yes" xml:space="preserve">
          <source>To trace most memory blocks allocated by Python, the module should be started as early as possible by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;, or by using &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc&lt;/code&gt; command line option. The &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;tracemalloc.start()&lt;/code&gt;&lt;/a&gt; function can be called at runtime to start tracing Python memory allocations.</source>
          <target state="translated">要跟踪Python分配的大多数内存块，应通过将&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt; &lt;/a&gt;环境变量设置为 &lt;code&gt;1&lt;/code&gt; 或使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tracemalloc&lt;/code&gt; 命令行选项来尽早启动模块。所述&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;tracemalloc.start()&lt;/code&gt; &lt;/a&gt;函数可以在运行时被调用，以开始跟踪的Python内存分配。</target>
        </trans-unit>
        <trans-unit id="400cf417dbbda3fb20aee227a05f8104ab61b0ba" translate="yes" xml:space="preserve">
          <source>To trace most memory blocks allocated by Python, the module should be started as early as possible by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;, or by using &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc&lt;/code&gt; command line option. The &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;tracemalloc.start()&lt;/code&gt;&lt;/a&gt; function can be called at runtime to start tracing Python memory allocations.</source>
          <target state="translated">要跟踪Python分配的大多数内存块，应通过将&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt; &lt;/a&gt;环境变量设置为 &lt;code&gt;1&lt;/code&gt; 或使用&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tracemalloc&lt;/code&gt; 命令行选项来尽早启动该模块。所述&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;tracemalloc.start()&lt;/code&gt; &lt;/a&gt;函数可以在运行时被调用，以开始跟踪的Python内存分配。</target>
        </trans-unit>
        <trans-unit id="ff0166cdb02b5e12ebef3a005fdba865bacd0e2c" translate="yes" xml:space="preserve">
          <source>To translate a numeric error code to an error message, use &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要将数字错误代码转换为错误消息，请使用&lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edd9ff074077e2c43f498ff1fbd6b93370923415" translate="yes" xml:space="preserve">
          <source>To understand the format, see the following example (it is not intended to do anything useful):</source>
          <target state="translated">要了解格式,请看下面的例子(它并不是要做什么有用的事情)。</target>
        </trans-unit>
        <trans-unit id="2ee0a4c14f5a2b2eff92e0263151ad18d468b505" translate="yes" xml:space="preserve">
          <source>To unpickle external objects, the unpickler must have a custom &lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt;&lt;code&gt;persistent_load()&lt;/code&gt;&lt;/a&gt; method that takes a persistent ID object and returns the referenced object.</source>
          <target state="translated">要解除对外部对象的修补，取消修补程序必须具有一个自定义的&lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt; &lt;code&gt;persistent_load()&lt;/code&gt; &lt;/a&gt;方法，该方法接受一个持久ID对象并返回引用的对象。</target>
        </trans-unit>
        <trans-unit id="a889b3e0dad6034036148442c4d89cb44da6c12c" translate="yes" xml:space="preserve">
          <source>To update the file in place, do the replacement in memory using a &lt;code&gt;BytesIO&lt;/code&gt; object, and then overwrite the source afterwards. Note that there is a risk when overwriting a file in place that an error will result in the loss of the original file. This code does not protect against such errors, but production code should do so. Also, this method will only work if the archive fits in memory:</source>
          <target state="translated">要就地更新文件，请使用 &lt;code&gt;BytesIO&lt;/code&gt; 对象在内存中进行替换，然后再覆盖源。请注意，在原地覆盖文件时存在错误会导致原始文件丢失的风险。该代码无法防止此类错误，但是生产代码应这样做。此外，仅当存档适合内存时，此方法才有效：</target>
        </trans-unit>
        <trans-unit id="20049dbc724846c3441fcf908b5e5814f37f9291" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt;, you must have the Tix widgets installed, usually alongside your installation of the Tk widgets. To test your installation, try the following:</source>
          <target state="translated">要使用&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;，必须安装Tix窗口小部件，通常同时安装Tk窗口小部件。要测试您的安装，请尝试以下操作：</target>
        </trans-unit>
        <trans-unit id="c80b24bc87319ccdb03a02574403ef35e2701467" translate="yes" xml:space="preserve">
          <source>To use a custom &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; subclass, specify it with the &lt;code&gt;cls&lt;/code&gt; kwarg; otherwise &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; is used. Additional keyword arguments will be passed to the constructor of the class.</source>
          <target state="translated">要使用自定义&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;子类，请使用 &lt;code&gt;cls&lt;/code&gt; kwarg 指定它；否则使用&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;。其他关键字参数将传递给该类的构造函数。</target>
        </trans-unit>
        <trans-unit id="a97a53a9d579579b044ea3cdec56452a32f4bec6" translate="yes" xml:space="preserve">
          <source>To use a custom &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass (e.g. one that overrides the &lt;code&gt;default()&lt;/code&gt; method to serialize additional types), specify it with the &lt;em&gt;cls&lt;/em&gt; kwarg; otherwise &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">要使用自定义&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;子类（例如，一个覆盖 &lt;code&gt;default()&lt;/code&gt; 方法以序列化其他类型的子类），请使用&lt;em&gt;cls&lt;/em&gt; kwarg 指定它；否则使用&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38ce15cd49858ae2aef9bf6dd093452e9c81953e" translate="yes" xml:space="preserve">
          <source>To use a custom SMTPChannel implementation you need to override the &lt;a href=&quot;#smtpd.SMTPServer.channel_class&quot;&gt;&lt;code&gt;SMTPServer.channel_class&lt;/code&gt;&lt;/a&gt; of your &lt;a href=&quot;#smtpd.SMTPServer&quot;&gt;&lt;code&gt;SMTPServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要使用自定义SMTPChannel实现，您需要覆盖&lt;a href=&quot;#smtpd.SMTPServer.channel_class&quot;&gt; &lt;code&gt;SMTPServer.channel_class&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#smtpd.SMTPServer&quot;&gt; &lt;code&gt;SMTPServer&lt;/code&gt; .channel_class&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d50f707cfc603f844f47e754486a7e1138485664" translate="yes" xml:space="preserve">
          <source>To use compound turtle shapes, which consist of several polygons of different color, you must use the helper class &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; explicitly as described below:</source>
          <target state="translated">要使用由多个不同颜色的多边形组成的复合乌龟形状，必须按如下所述明确使用辅助类&lt;a href=&quot;#turtle.Shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c1ba519887a8ab65c40b47b31ca3ead5d8a9aff8" translate="yes" xml:space="preserve">
          <source>To use multiple turtles on a screen one has to use the object-oriented interface.</source>
          <target state="translated">要在一个屏幕上使用多个海龟,就必须使用面向对象的界面。</target>
        </trans-unit>
        <trans-unit id="b992ab6d688ed006c9a1f3c48e6d6442838b0dd7" translate="yes" xml:space="preserve">
          <source>To use the module, you must first create a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object that represents the database. Here the data will be stored in the &lt;code&gt;example.db&lt;/code&gt; file:</source>
          <target state="translated">要使用该模块，必须首先创建一个代表数据库的&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;对象。这里的数据将存储在 &lt;code&gt;example.db&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="135aae4c52ce4b15c7c009fef1b0ca569c8aa602" translate="yes" xml:space="preserve">
          <source>To use them call &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; as normal and keep a reference to the returned &lt;code&gt;patcher&lt;/code&gt; object. You can then call &lt;code&gt;start()&lt;/code&gt; to put the patch in place and &lt;code&gt;stop()&lt;/code&gt; to undo it.</source>
          <target state="translated">要使用它们，请&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt; &lt;code&gt;patch.object()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;，patch.object（）或&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;并保留对返回的补丁 &lt;code&gt;patcher&lt;/code&gt; 对象的引用。然后，您可以调用 &lt;code&gt;start()&lt;/code&gt; 将补丁放在适当位置，然后调用 &lt;code&gt;stop()&lt;/code&gt; 撤消该补丁。</target>
        </trans-unit>
        <trans-unit id="a04d85e7d8581cce27cdcbf35c1285f6123cef95" translate="yes" xml:space="preserve">
          <source>To validate a certificate for a particular service, you can use the &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">要验证特定服务的证书，可以使用&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6d5b36de85176d50bc616ddcb26662c16f18cfb1" translate="yes" xml:space="preserve">
          <source>To view the current settings, the common usage is:</source>
          <target state="translated">要查看当前的设置,常用的方法是。</target>
        </trans-unit>
        <trans-unit id="25c39d00c5f33d8ae92f80d44fd42daec3d39b6c" translate="yes" xml:space="preserve">
          <source>To work with plist data in bytes objects, use &lt;a href=&quot;#plistlib.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#plistlib.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要在字节对象中使用plist数据，请使用&lt;a href=&quot;#plistlib.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#plistlib.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="297905026d890e2e8243355af0ec2cc27371102f" translate="yes" xml:space="preserve">
          <source>To write or read binary data from/to the standard streams, use the underlying binary &lt;a href=&quot;io#io.TextIOBase.buffer&quot;&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/a&gt; object. For example, to write bytes to &lt;a href=&quot;#sys.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;sys.stdout.buffer.write(b'abc')&lt;/code&gt;.</source>
          <target state="translated">要从标准流写入二进制数据或从标准流读取二进制数据，请使用基础二进制&lt;a href=&quot;io#io.TextIOBase.buffer&quot;&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;/a&gt;对象。例如，要将字节写入&lt;a href=&quot;#sys.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt;，请使用 &lt;code&gt;sys.stdout.buffer.write(b'abc')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb59b39ce1834db13694efdf0cd6ff6ff02425e2" translate="yes" xml:space="preserve">
          <source>To write out and to parse a plist file, use the &lt;a href=&quot;#plistlib.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">要写出并解析plist文件，请使用&lt;a href=&quot;#plistlib.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="1745bc6607fc215c3c7c61823c82138e48f4028e" translate="yes" xml:space="preserve">
          <source>To write tutorial documentation for a package, liberally illustrated with input-output examples. Depending on whether the examples or the expository text are emphasized, this has the flavor of &amp;ldquo;literate testing&amp;rdquo; or &amp;ldquo;executable documentation&amp;rdquo;.</source>
          <target state="translated">编写软件包的教程文档，并通过输入输出示例进行详细说明。根据是强调示例还是说明性文本，这具有&amp;ldquo;识字测试&amp;rdquo;或&amp;ldquo;可执行文档&amp;rdquo;的风格。</target>
        </trans-unit>
        <trans-unit id="d25dd12b45e6a81f010b0a56a4dc0f0982041292" translate="yes" xml:space="preserve">
          <source>Toggle Tabs</source>
          <target state="translated">切换标签</target>
        </trans-unit>
        <trans-unit id="49eebd44a0b7cae07bba108684454fac421ae217" translate="yes" xml:space="preserve">
          <source>Toggle automatically opening the stack viewer on an unhandled exception.</source>
          <target state="translated">切换在未处理的异常时自动打开堆栈查看器。</target>
        </trans-unit>
        <trans-unit id="709be1c4e06ce937ce109134ee51b54aed0e03b8" translate="yes" xml:space="preserve">
          <source>Toggle the selection state of each item in &lt;em&gt;items&lt;/em&gt;.</source>
          <target state="translated">切换中的每个项目的选择状态&lt;em&gt;的项目&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="caebd5b8cbddc4475c405e61e04e4190e27500f7" translate="yes" xml:space="preserve">
          <source>Toggles the window between normal size and maximum height. The initial size defaults to 40 lines by 80 chars unless changed on the General tab of the Configure IDLE dialog. The maximum height for a screen is determined by momentarily maximizing a window the first time one is zoomed on the screen. Changing screen settings may invalidate the saved height. This toggle has no effect when a window is maximized.</source>
          <target state="translated">在正常大小和最大高度之间切换窗口。除非在 &quot;配置IDLE &quot;对话框的 &quot;常规 &quot;选项卡上更改,否则初始大小默认为40行乘80字符。屏幕的最大高度是通过在第一次放大屏幕时瞬间最大化窗口来确定的。更改屏幕设置可能会使保存的高度无效。当窗口最大化时,此切换没有效果。</target>
        </trans-unit>
        <trans-unit id="9646975b29962e37360aeb91034e6c068784a045" translate="yes" xml:space="preserve">
          <source>Token used to determine end of file. This will be set to the empty string (&lt;code&gt;''&lt;/code&gt;), in non-POSIX mode, and to &lt;code&gt;None&lt;/code&gt; in POSIX mode.</source>
          <target state="translated">用于确定文件结尾的令牌。这将被设置为空字符串（ &lt;code&gt;''&lt;/code&gt; ），在非POSIX模式，并以 &lt;code&gt;None&lt;/code&gt; 在POSIX模式。</target>
        </trans-unit>
        <trans-unit id="16cae5602b3caafdaf94aff5138d6f4e7306ce60" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;!=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;!=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="b86dac8050e2e0fe59bbfbb856d1dab55acb93ce" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;%&quot;&lt;/code&gt;.</source>
          <target state="translated">令牌值 &lt;code&gt;&quot;%&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbfdb248d8cd19bbbcc877609c920721d1ea70a1" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;%=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;%=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="5fad4c655b643193212ddd54e05c2200a0585d87" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="09ea8c1d8139ee92700420a6e9d9a1fe6f2d7a7d" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;amp;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;amp;=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="7577e9265009c87a3fbed49dfd6cc843a2b2cbf6" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="6a1c7e1c71d9be05a6b8a4e4b94f866389399156" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="51c75daa104193ecf006b0fcd0aadf86d0bb470d" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&amp;gt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&amp;gt;=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="975cfb9e99e1b1719af82b61c50c79dbf15855c2" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="e3b1a1065dcde8b9a95d5840358ce973e13029e6" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="27117e7427212a73cef9306bfd8d32904b077760" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="37f9fe9280b0caf0120b0d333b0582b40ed8e8d7" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&amp;lt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&amp;lt;=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="096dbca2d8035996074e27220e8dbd83ef780dba" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="d5c708b45d8f39bd617325c25f4812de96617673" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;(&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;(&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="18327d5eff01310d0a4402b710af59731824b495" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;)&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;)&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="9c76b270805b1a4fa9b7663756b8fc11eb6237ae" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;*&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="be3fb52143c54c07d78aef84da8b6ce63c06b07c" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;**&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;**&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="8ea8a289233c29e8390a3cba1410ef72f6df77a7" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;**=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;**=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="f7bb9643b98a9563af63301ae2f5eb1e0c81c1e3" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;*=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="85b32e10c19b5c0b632e41089d8b9ef29c3c0408" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;+&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;+&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="461a49ce243ba233541ce7431045e91176eb3c59" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;+=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;+=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="888610ba8dd07985852c6773f5fdd60c98169a40" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;,&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="d65b027b57b9b44eb9e73b20963ab437d175e245" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="48d463c1e62f59c507e1b5f21ca75187a7778fe0" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="aba8dee4771b2b55437288b8c0addbf948bf04ef" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="1e4dade593aea62b538b7b875cba862f012392de" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;.&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;.&quot;&lt;/code&gt; 令牌值。。</target>
        </trans-unit>
        <trans-unit id="d422d21de323ce3dd3f982de5e81088eac87e43e" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;...&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="87e36640edaae52f4602e5ec159d6a25665979d3" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="66a85deaaa8f44db29f357d74508240dac8dc497" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;//&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;//&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="6ba39f80bb6b9c1266313b252b2ede42343eef14" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;//=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;//=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="f91c0679dbf2b6feb2d90e59560fb27b78fb5cb0" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;/=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="27fb4ca487ea2d2acd87d0144dc37e9417b0e6b5" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;:&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;:&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="e9b88acce02e2c44cfc438ec17a090e8b03f750b" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;:=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;:=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="176ba72e65d2cc2ac3a0ef119f5ee7765b2a7859" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;;&quot;&lt;/code&gt; 令牌值 。</target>
        </trans-unit>
        <trans-unit id="0e2e7402f6cb7fba9d35c8cf4b7b59a836554560" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;=&quot;&lt;/code&gt;.</source>
          <target state="translated">令牌值 &lt;code&gt;&quot;=&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83b85c1df0e5fa0d285d34b19a3f75ae2d068e4b" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;==&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;==&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="21ebe9b60a4cd36259d42529870d893bf45d707f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;@&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="562d37d12791923832dab094f3c882df283ae94f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;@=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="04694683cab263b7e5328a88ef1cdfb9a7206b7e" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;[&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;[&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="171228101c615a61a16687264fc8b959bfa3898f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;]&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;]&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="b96129d765f2fc721f957ea503b8f940483e945a" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;^&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="98dd6ae68dc4fc9f5ac457b18e21de6926cb5f6f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;^=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;^=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="a719a03c56326a85b3001ccfd9ce0f5734172538" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;{&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;{&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="9a5f9e1fed1309f30c9042e1ad1355103d6fa147" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;|&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;|&quot;&lt;/code&gt; 令牌值 。</target>
        </trans-unit>
        <trans-unit id="342f63c931b36b96537e06cc7417b755a05e7fd5" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;|=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;|=&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="f773a07b06f7fd17273f93d0ffb58f47f64e4626" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;}&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;}&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="f8f4c1b4ddcdb8a2fd9b6e54c8fec3a038ecb05a" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;~&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;~&quot;&lt;/code&gt; 令牌值。</target>
        </trans-unit>
        <trans-unit id="6c65b7769f5f6a2e3a25c7cb7dd686f45caf915a" translate="yes" xml:space="preserve">
          <source>Token value indicating that a type comment was recognized. Such tokens are only produced when &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt; is invoked with &lt;code&gt;type_comments=True&lt;/code&gt;.</source>
          <target state="translated">表示已识别类型注释的令牌值。仅当使用 &lt;code&gt;type_comments=True&lt;/code&gt; 调用&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;时，才会生成此类令牌。</target>
        </trans-unit>
        <trans-unit id="ccbde560ca6e91456cf2373616b13efcf7e6c048" translate="yes" xml:space="preserve">
          <source>Token value that indicates the encoding used to decode the source bytes into text. The first token returned by &lt;a href=&quot;tokenize#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize.tokenize()&lt;/code&gt;&lt;/a&gt; will always be an &lt;code&gt;ENCODING&lt;/code&gt; token.</source>
          <target state="translated">令牌值，指示用于将源字节解码为文本的编码。&lt;a href=&quot;tokenize#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize.tokenize()&lt;/code&gt; &lt;/a&gt;返回的第一个令牌始终是 &lt;code&gt;ENCODING&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="4f82464b470b42b75fa84935a9a5e610016164d1" translate="yes" xml:space="preserve">
          <source>Token value used to indicate a comment.</source>
          <target state="translated">用来表示评论的标记值。</target>
        </trans-unit>
        <trans-unit id="78d296a14bd59029382660ecee684a6365dfd786" translate="yes" xml:space="preserve">
          <source>Token value used to indicate a non-terminating newline. The &lt;a href=&quot;#token.NEWLINE&quot;&gt;&lt;code&gt;NEWLINE&lt;/code&gt;&lt;/a&gt; token indicates the end of a logical line of Python code; &lt;code&gt;NL&lt;/code&gt; tokens are generated when a logical line of code is continued over multiple physical lines.</source>
          <target state="translated">用于指示非终止换行符的令牌值。所述&lt;a href=&quot;#token.NEWLINE&quot;&gt; &lt;code&gt;NEWLINE&lt;/code&gt; &lt;/a&gt;令牌表示的Python代码的逻辑行的末尾; 当逻辑代码行在多个物理行上连续时，会生成 &lt;code&gt;NL&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="abd739ad8bf24203062992f9c33379060ce2b2cd" translate="yes" xml:space="preserve">
          <source>Tokenize a source reading unicode strings instead of bytes.</source>
          <target state="translated">对读取unicode字符串而不是字节的源进行标记化。</target>
        </trans-unit>
        <trans-unit id="ba1bab500a51a619a214fb93843a992431974a3a" translate="yes" xml:space="preserve">
          <source>Tokenizing Input</source>
          <target state="translated">标记化输入</target>
        </trans-unit>
        <trans-unit id="4113b4c9ebd053469430304ab17dc16ea1d01df9" translate="yes" xml:space="preserve">
          <source>Too many links</source>
          <target state="translated">链接太多</target>
        </trans-unit>
        <trans-unit id="c8452b0c049e050b8a8d8e298315154b410bb14f" translate="yes" xml:space="preserve">
          <source>Too many open files</source>
          <target state="translated">打开的文件太多</target>
        </trans-unit>
        <trans-unit id="81e6c84235179bef6a424ade0379cdb4a2f8f2b6" translate="yes" xml:space="preserve">
          <source>Too many references: cannot splice</source>
          <target state="translated">参考文献太多:无法拼接</target>
        </trans-unit>
        <trans-unit id="9370b2a9a4016e2eac0b29188fd6198e7257fcbe" translate="yes" xml:space="preserve">
          <source>Too many symbolic links encountered</source>
          <target state="translated">遇到太多的符号链接</target>
        </trans-unit>
        <trans-unit id="21b53b1f02559d44a4e57d2971766159ebf6282f" translate="yes" xml:space="preserve">
          <source>Too many users</source>
          <target state="translated">用户太多</target>
        </trans-unit>
        <trans-unit id="f26fcae8618d0de222fcbf33470328838b85c473" translate="yes" xml:space="preserve">
          <source>Tools for creating, reading, and managing collections of messages on disk using a variety standard formats.</source>
          <target state="translated">使用各种标准格式创建、读取和管理磁盘上的信息集合的工具。</target>
        </trans-unit>
        <trans-unit id="e69f8935b44be8243365f3e9e267b01513883107" translate="yes" xml:space="preserve">
          <source>Tools for working with and analyzing pickled data.</source>
          <target state="translated">用于处理和分析腌制数据的工具。</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="30836d81384a3e0017ea997c2799917650592d98" translate="yes" xml:space="preserve">
          <source>Top highlight</source>
          <target state="translated">最大亮点</target>
        </trans-unit>
        <trans-unit id="64deb39c4d87a95e799339a7c956a3d522c74200" translate="yes" xml:space="preserve">
          <source>Top level directory of project (defaults to start directory)</source>
          <target state="translated">项目的顶层目录(默认为起始目录)。</target>
        </trans-unit>
        <trans-unit id="b163017dd0043c42725ceb7fbdb1aa05a5ece865" translate="yes" xml:space="preserve">
          <source>Top-down search of area under mouse for target widget</source>
          <target state="translated">自上而下搜索鼠标下的目标小部件区域</target>
        </trans-unit>
        <trans-unit id="42508320b4ccd94890ce331a9785cdd5bc246821" translate="yes" xml:space="preserve">
          <source>Top-level Non-Object, Non-Array Values</source>
          <target state="translated">顶层非对象、非数组值</target>
        </trans-unit>
        <trans-unit id="1dfe8eaa64f9cad312ff5671ef0af2ab7a99ff2a" translate="yes" xml:space="preserve">
          <source>Toplevel widget of Tix which represents mostly the main window of an application. It has an associated Tcl interpreter.</source>
          <target state="translated">Tix的Toplevel部件,它主要代表应用程序的主窗口。它有一个相关的Tcl解释器。</target>
        </trans-unit>
        <trans-unit id="05837bfda0ec899c7721328f0212d46820110de7" translate="yes" xml:space="preserve">
          <source>Total number of frames that composed the traceback before truncation. This attribute can be set to &lt;code&gt;None&lt;/code&gt; if the information is not available.</source>
          <target state="translated">截断前构成回溯的帧总数。如果该信息不可用，则可以将此属性设置为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bec97d5be9912db81f4f9ca403f9d466e4c61a3d" translate="yes" xml:space="preserve">
          <source>Total size of memory blocks in bytes (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">内存块的总大小，以字节为单位（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="75a7a310270ee5111fd87b87c27f5254e87ed4ed" translate="yes" xml:space="preserve">
          <source>Total size of memory blocks in bytes in the new snapshot (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been released in the new snapshot.</source>
          <target state="translated">新快照（ &lt;code&gt;int&lt;/code&gt; ）中内存块的总大小（以字节为单位）：如果已在新快照中释放了内存块，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59b7ba7c881f0eee6a7d633e606139640e9a2656" translate="yes" xml:space="preserve">
          <source>Touch all locations in ancestors of the window that have been changed in the window.</source>
          <target state="translated">触摸窗口祖先中所有在窗口中被改变的位置。</target>
        </trans-unit>
        <trans-unit id="fc109642a782197e3f6c4d5776543cdb3ce34fc1" translate="yes" xml:space="preserve">
          <source>Touch each location in the window that has been touched in any of its ancestor windows. This routine is called by &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;, so it should almost never be necessary to call it manually.</source>
          <target state="translated">触摸其任何祖先窗口中已触摸的窗口中的每个位置。这个例程由&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;调用，因此几乎永远不需要手动调用它。</target>
        </trans-unit>
        <trans-unit id="dc2fd1e096e6ef9ba0534d8c7883f9f02b4d25c0" translate="yes" xml:space="preserve">
          <source>Touch the entire window, causing it to be completely redrawn on the next &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">触摸整个窗口，使其在下一次&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;调用中完全重绘。</target>
        </trans-unit>
        <trans-unit id="86581fcb8efd9c5b78a214474ef387ed93f67805" translate="yes" xml:space="preserve">
          <source>Towers of Hanoi</source>
          <target state="translated">河内塔</target>
        </trans-unit>
        <trans-unit id="2f38169a712e499b917900e244feafc980a814f4" translate="yes" xml:space="preserve">
          <source>Trace</source>
          <target state="translated">Trace</target>
        </trans-unit>
        <trans-unit id="729d0a3affdedff054a2ee5841a6ac39141fe3f0" translate="yes" xml:space="preserve">
          <source>Trace functions should have three arguments: &lt;em&gt;frame&lt;/em&gt;, &lt;em&gt;event&lt;/em&gt;, and &lt;em&gt;arg&lt;/em&gt;. &lt;em&gt;frame&lt;/em&gt; is the current stack frame. &lt;em&gt;event&lt;/em&gt; is a string: &lt;code&gt;'call'&lt;/code&gt;, &lt;code&gt;'line'&lt;/code&gt;, &lt;code&gt;'return'&lt;/code&gt;, &lt;code&gt;'exception'&lt;/code&gt; or &lt;code&gt;'opcode'&lt;/code&gt;. &lt;em&gt;arg&lt;/em&gt; depends on the event type.</source>
          <target state="translated">跟踪函数应具有三个参数：&lt;em&gt;frame&lt;/em&gt;，&lt;em&gt;event&lt;/em&gt;和&lt;em&gt;arg&lt;/em&gt;。&lt;em&gt;frame&lt;/em&gt;是当前的堆栈帧。&lt;em&gt;event&lt;/em&gt;是一个字符串： &lt;code&gt;'call'&lt;/code&gt; ， &lt;code&gt;'line'&lt;/code&gt; ， &lt;code&gt;'return'&lt;/code&gt; ， &lt;code&gt;'exception'&lt;/code&gt; 或 &lt;code&gt;'opcode'&lt;/code&gt; 。&lt;em&gt;arg&lt;/em&gt;取决于事件类型。</target>
        </trans-unit>
        <trans-unit id="cca95e549ae0599cf6045d07c596c4b7642f3723" translate="yes" xml:space="preserve">
          <source>Trace of a memory block.</source>
          <target state="translated">记忆块的痕迹。</target>
        </trans-unit>
        <trans-unit id="73df02b52d2db987ebcc21c2fe2978cd599e8c7e" translate="yes" xml:space="preserve">
          <source>Traceback</source>
          <target state="translated">Traceback</target>
        </trans-unit>
        <trans-unit id="1a915c9c47f65dc32b432643b8b0acf75347e53a" translate="yes" xml:space="preserve">
          <source>Traceback Examples</source>
          <target state="translated">回溯实例</target>
        </trans-unit>
        <trans-unit id="ce11c2ebf77907c8459174d3b9b1486ef8e6b046" translate="yes" xml:space="preserve">
          <source>Traceback where an object was allocated</source>
          <target state="translated">回溯对象的分配位置</target>
        </trans-unit>
        <trans-unit id="f97c295c1a3039941729feab98e098409fe68202" translate="yes" xml:space="preserve">
          <source>Traceback where the memory block was allocated, &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">分配内存块的&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="215f86e5666b2b6438b7dcad21a57321b228f03b" translate="yes" xml:space="preserve">
          <source>Traceback where the memory blocks were allocated, &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">分配内存块的&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="ddf046523d04587bec23897cf0fd9f9c5d47f3d5" translate="yes" xml:space="preserve">
          <source>TracebackException Objects</source>
          <target state="translated">回溯异常对象</target>
        </trans-unit>
        <trans-unit id="a74a9e1b5688ce3aa1134bcee9d6faead806e5df" translate="yes" xml:space="preserve">
          <source>Tracebacks of traces are limited to &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; frames. Use the &lt;em&gt;nframe&lt;/em&gt; parameter of the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; function to store more frames.</source>
          <target state="translated">跟踪的回溯仅限于&lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt;帧。使用&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;函数的&lt;em&gt;nframe&lt;/em&gt;参数存储更多帧。</target>
        </trans-unit>
        <trans-unit id="20d9eefaebb02bf1f35e2c2af8f942a78a015d4e" translate="yes" xml:space="preserve">
          <source>Traces of all memory blocks allocated by Python: sequence of &lt;a href=&quot;#tracemalloc.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">Python分配的所有内存块的&lt;a href=&quot;#tracemalloc.Trace&quot;&gt; &lt;code&gt;Trace&lt;/code&gt; &lt;/a&gt;：跟踪实例的序列。</target>
        </trans-unit>
        <trans-unit id="7bf75e7c8b0f02ab018d760d1e9e5211c51a7a30" translate="yes" xml:space="preserve">
          <source>Tracking all Calls</source>
          <target state="translated">追踪所有电话</target>
        </trans-unit>
        <trans-unit id="e1e96da1294b28f1d2a1b0c918ca3c4901dc294f" translate="yes" xml:space="preserve">
          <source>Tracking order of calls and less verbose call assertions</source>
          <target state="translated">跟踪调用顺序和较少言语的调用断言。</target>
        </trans-unit>
        <trans-unit id="3b612e72ed8b42ec172f3e6dbff27929a0f89575" translate="yes" xml:space="preserve">
          <source>Traditional Chinese</source>
          <target state="translated">中国传统</target>
        </trans-unit>
        <trans-unit id="3a41258116450da3b7bae163878df53968a02aa3" translate="yes" xml:space="preserve">
          <source>Transcode CGI variables from &lt;code&gt;os.environ&lt;/code&gt; to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;bytes in unicode&amp;rdquo; strings, returning a new dictionary. This function is used by &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wsgiref.handlers.IISCGIHandler&quot;&gt;&lt;code&gt;IISCGIHandler&lt;/code&gt;&lt;/a&gt; in place of directly using &lt;code&gt;os.environ&lt;/code&gt;, which is not necessarily WSGI-compliant on all platforms and web servers using Python 3 &amp;ndash; specifically, ones where the OS&amp;rsquo;s actual environment is Unicode (i.e. Windows), or ones where the environment is bytes, but the system encoding used by Python to decode it is anything other than ISO-8859-1 (e.g. Unix systems using UTF-8).</source>
          <target state="translated">将CGI变量从 &lt;code&gt;os.environ&lt;/code&gt; 转换为&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; &amp;ldquo; unicode中的字节&amp;rdquo;字符串，返回新的字典。&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#wsgiref.handlers.IISCGIHandler&quot;&gt; &lt;code&gt;IISCGIHandler&lt;/code&gt; &lt;/a&gt;使用此函数来代替直接使用 &lt;code&gt;os.environ&lt;/code&gt; ，在使用Python 3的所有平台和Web服务器上（特别是在操作系统的实际环境是Unicode（即Windows）的平台和Web服务器上，不一定都符合WSGI）。环境是字节，但是Python用来解码的系统编码不是ISO-8859-1（例如，使用UTF-8的Unix系统）。</target>
        </trans-unit>
        <trans-unit id="3494f1691e673629d7c793b2bb30afd3bb7d7eac" translate="yes" xml:space="preserve">
          <source>Transferring files</source>
          <target state="translated">传输文件</target>
        </trans-unit>
        <trans-unit id="2cff264a027be4797d3845ae78c3ed06983f0e0b" translate="yes" xml:space="preserve">
          <source>Transfers the callback stack to a fresh &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; instance and returns it. No callbacks are invoked by this operation - instead, they will now be invoked when the new stack is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement).</source>
          <target state="translated">将回调栈转移到一个新的&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;实例并返回它。此操作不会调用任何回调-而是现在在关闭新堆栈时（在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的末尾显式或隐式）将调用它们。</target>
        </trans-unit>
        <trans-unit id="3b0300f14835699f5ce3da82f440a599b15cea8e" translate="yes" xml:space="preserve">
          <source>Transfers the callback stack to a fresh &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; instance and returns it. No callbacks are invoked by this operation - instead, they will now be invoked when the new stack is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement).</source>
          <target state="translated">将回调栈转移到一个新的&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;实例并返回它。此操作不会调用任何回调-而是现在在关闭新堆栈时（在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的末尾显式或隐式）将调用它们。</target>
        </trans-unit>
        <trans-unit id="f6cc813676e43d2fcd0dd59a95a03fc47ef50a4a" translate="yes" xml:space="preserve">
          <source>Transform a function into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">将一个函数转换为一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;单调度&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;通用函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68d7c454c7c648a0031f942af1d9bdcc4f0f15d5" translate="yes" xml:space="preserve">
          <source>Transform a function into a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">将一个函数转换为一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-single-dispatch&quot;&gt;单派发的&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generic-function&quot;&gt;泛型函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29e2be1612d0aa8942c71595cd96e42d73362205" translate="yes" xml:space="preserve">
          <source>Transform a method into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">将方法转换为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;单调度&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;通用函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0eebf3498068208b85ef1cb74b1a9703b5aedc5" translate="yes" xml:space="preserve">
          <source>Transform a method into a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">将方法转换为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-single-dispatch&quot;&gt;单调度&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generic-function&quot;&gt;通用函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77d6e14d23f99b7595d3a17519773f7c518841e6" translate="yes" xml:space="preserve">
          <source>Transform a method into a class method.</source>
          <target state="translated">将一个方法转化为一个类方法。</target>
        </trans-unit>
        <trans-unit id="bd552dd114347d110fdd0f27b833906c1a1deaeb" translate="yes" xml:space="preserve">
          <source>Transform a method into a static method.</source>
          <target state="translated">将一个方法转化为一个静态方法。</target>
        </trans-unit>
        <trans-unit id="57af29cae6b948bcecd8e9b79ac28cd65f1862f9" translate="yes" xml:space="preserve">
          <source>Transform a method of a class into a property whose value is computed once and then cached as a normal attribute for the life of the instance. Similar to &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;, with the addition of caching. Useful for expensive computed properties of instances that are otherwise effectively immutable.</source>
          <target state="translated">将类的方法转换为属性，该属性的值将被计算一次，然后在实例生命周期中作为常规属性进行缓存。与&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;相似，但增加了缓存。对于实例有效的不可变的昂贵的计算属性很有用。</target>
        </trans-unit>
        <trans-unit id="f2245bfdf04797ba4ad3df2d8c1aa548c557eab0" translate="yes" xml:space="preserve">
          <source>Transform an old-style comparison function to a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt;. Used with tools that accept key functions (such as &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nlargest&quot;&gt;&lt;code&gt;heapq.nlargest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt;&lt;code&gt;heapq.nsmallest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;itertools#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;). This function is primarily used as a transition tool for programs being converted from Python 2 which supported the use of comparison functions.</source>
          <target state="translated">将旧式比较功能转换为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;键功能&lt;/a&gt;。与接受关键功能的工具一起使用（例如&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;heapq#heapq.nlargest&quot;&gt; &lt;code&gt;heapq.nlargest()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt; &lt;code&gt;heapq.nsmallest()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;itertools#itertools.groupby&quot;&gt; &lt;code&gt;itertools.groupby()&lt;/code&gt; &lt;/a&gt;）。该函数主要用作从Python 2转换而来的程序的过渡工具，该程序支持使用比较函数。</target>
        </trans-unit>
        <trans-unit id="beb4930deb71e66b49c0181768fce3a666b0b731" translate="yes" xml:space="preserve">
          <source>Transform an old-style comparison function to a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt;. Used with tools that accept key functions (such as &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nlargest&quot;&gt;&lt;code&gt;heapq.nlargest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt;&lt;code&gt;heapq.nsmallest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;itertools#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;). This function is primarily used as a transition tool for programs being converted from Python 2 which supported the use of comparison functions.</source>
          <target state="translated">将旧式比较功能转换为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-key-function&quot;&gt;键功能&lt;/a&gt;。与接受关键功能的工具一起使用（例如&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;heapq#heapq.nlargest&quot;&gt; &lt;code&gt;heapq.nlargest()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt; &lt;code&gt;heapq.nsmallest()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;itertools#itertools.groupby&quot;&gt; &lt;code&gt;itertools.groupby()&lt;/code&gt; &lt;/a&gt;）。该函数主要用作从Python 2转换而来的程序的转换工具，该程序支持使用比较函数。</target>
        </trans-unit>
        <trans-unit id="0d475eafab57f0600a394b645fd9f36b3327943b" translate="yes" xml:space="preserve">
          <source>Transform list &lt;em&gt;x&lt;/em&gt; into a heap, in-place, in linear time.</source>
          <target state="translated">将列表&lt;em&gt;x&lt;/em&gt;在线性时间内就地转换为堆。</target>
        </trans-unit>
        <trans-unit id="6fe84a1868be82491d31f1d9d8079682b81776df" translate="yes" xml:space="preserve">
          <source>Transforms a string to one that can be used in locale-aware comparisons. For example, &lt;code&gt;strxfrm(s1) &amp;lt; strxfrm(s2)&lt;/code&gt; is equivalent to &lt;code&gt;strcoll(s1, s2) &amp;lt; 0&lt;/code&gt;. This function can be used when the same string is compared repeatedly, e.g. when collating a sequence of strings.</source>
          <target state="translated">将字符串转换为可用于区域设置比较的字符串。例如， &lt;code&gt;strxfrm(s1) &amp;lt; strxfrm(s2)&lt;/code&gt; 等同于 &lt;code&gt;strcoll(s1, s2) &amp;lt; 0&lt;/code&gt; 。当重复比较同一字符串时（例如，整理字符串序列时），可以使用此功能。</target>
        </trans-unit>
        <trans-unit id="59eb997dbc4748a8f708bc6652221a97c4a5cc52" translate="yes" xml:space="preserve">
          <source>Transforms the option name &lt;em&gt;option&lt;/em&gt; as found in an input file or as passed in by client code to the form that should be used in the internal structures. The default implementation returns a lower-case version of &lt;em&gt;option&lt;/em&gt;; subclasses may override this or client code can set an attribute of this name on instances to affect this behavior.</source>
          <target state="translated">将在输入文件中找到或由客户端代码传递的选项名称&lt;em&gt;选项&lt;/em&gt;转换为应在内部结构中使用的形式。默认实现返回&lt;em&gt;option&lt;/em&gt;的小写版本；子类可以覆盖此属性，或者客户端代码可以在实例上设置此名称的属性以影响此行为。</target>
        </trans-unit>
        <trans-unit id="7a83d63b28fa4225a56bc0566e8e33c1cf91e595" translate="yes" xml:space="preserve">
          <source>Translate a host name to IPv4 address format, extended interface. Return a triple &lt;code&gt;(hostname, aliaslist, ipaddrlist)&lt;/code&gt; where &lt;em&gt;hostname&lt;/em&gt; is the primary host name responding to the given &lt;em&gt;ip_address&lt;/em&gt;, &lt;em&gt;aliaslist&lt;/em&gt; is a (possibly empty) list of alternative host names for the same address, and &lt;em&gt;ipaddrlist&lt;/em&gt; is a list of IPv4 addresses for the same interface on the same host (often but not always a single address). &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; does not support IPv6 name resolution, and &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">将主机名转换为IPv4地址格式的扩展接口。返回一个三元组 &lt;code&gt;(hostname, aliaslist, ipaddrlist)&lt;/code&gt; ，其中&lt;em&gt;主机名&lt;/em&gt;是响应给定&lt;em&gt;ip_address&lt;/em&gt;的主要主机名，&lt;em&gt;aliaslist&lt;/em&gt;是该地址的替代主机名的列表（可能为空），而&lt;em&gt;ipaddrlist&lt;/em&gt;是该IP地址的IPv4地址列表同一主机上的相同接口（通常但不总是一个地址）。&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;不支持IPv6名称解析，而应使用&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt;来支持IPv4 / v6双栈。</target>
        </trans-unit>
        <trans-unit id="70d07b15ee9a4f6a42ff4435887b259bd202d514" translate="yes" xml:space="preserve">
          <source>Translate a host name to IPv4 address format. The IPv4 address is returned as a string, such as &lt;code&gt;'100.50.200.5'&lt;/code&gt;. If the host name is an IPv4 address itself it is returned unchanged. See &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; for a more complete interface. &lt;a href=&quot;#socket.gethostbyname&quot;&gt;&lt;code&gt;gethostbyname()&lt;/code&gt;&lt;/a&gt; does not support IPv6 name resolution, and &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">将主机名转换为IPv4地址格式。IPv4地址以字符串形式返回，例如 &lt;code&gt;'100.50.200.5'&lt;/code&gt; 。如果主机名本身是IPv4地址，则返回原样。有关更完整的界面，请参见&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#socket.gethostbyname&quot;&gt; &lt;code&gt;gethostbyname()&lt;/code&gt; &lt;/a&gt;不支持IPv6名称解析，而应使用&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt;来支持IPv4 / v6双栈。</target>
        </trans-unit>
        <trans-unit id="e008d42be736fc0c81a4d9b6b6bedd2f1699d3e4" translate="yes" xml:space="preserve">
          <source>Translate a socket address &lt;em&gt;sockaddr&lt;/em&gt; into a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt;. Depending on the settings of &lt;em&gt;flags&lt;/em&gt;, the result can contain a fully-qualified domain name or numeric address representation in &lt;em&gt;host&lt;/em&gt;. Similarly, &lt;em&gt;port&lt;/em&gt; can contain a string port name or a numeric port number.</source>
          <target state="translated">将套接字地址&lt;em&gt;sockaddr&lt;/em&gt;转换为2元组 &lt;code&gt;(host, port)&lt;/code&gt; 。根据&lt;em&gt;标志&lt;/em&gt;的设置，结果可以在&lt;em&gt;host中&lt;/em&gt;包含标准域名或数字地址表示形式。同样，&lt;em&gt;端口&lt;/em&gt;可以包含字符串端口名称或数字端口号。</target>
        </trans-unit>
        <trans-unit id="043a7fd2528ceea779160e39be4de88da98043fe" translate="yes" xml:space="preserve">
          <source>Translate an Internet port number and protocol name to a service name for that service. The optional protocol name, if given, should be &lt;code&gt;'tcp'&lt;/code&gt; or &lt;code&gt;'udp'&lt;/code&gt;, otherwise any protocol will match.</source>
          <target state="translated">将Internet端口号和协议名称转换为该服务的服务名称。可选协议名称（如果提供）应为 &lt;code&gt;'tcp'&lt;/code&gt; 或 &lt;code&gt;'udp'&lt;/code&gt; ，否则任何协议都将匹配。</target>
        </trans-unit>
        <trans-unit id="9c6347fecd97c9239fbe8e190539881f5b00aaad" translate="yes" xml:space="preserve">
          <source>Translate an Internet protocol name (for example, &lt;code&gt;'icmp'&lt;/code&gt;) to a constant suitable for passing as the (optional) third argument to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function. This is usually only needed for sockets opened in &amp;ldquo;raw&amp;rdquo; mode (&lt;a href=&quot;#socket.SOCK_RAW&quot;&gt;&lt;code&gt;SOCK_RAW&lt;/code&gt;&lt;/a&gt;); for the normal socket modes, the correct protocol is chosen automatically if the protocol is omitted or zero.</source>
          <target state="translated">将Internet协议名称（例如 &lt;code&gt;'icmp'&lt;/code&gt; ）转换为适合作为（可选的）第三个参数传递给&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;函数的常量。通常只有在&amp;ldquo;原始&amp;rdquo;模式（&lt;a href=&quot;#socket.SOCK_RAW&quot;&gt; &lt;code&gt;SOCK_RAW&lt;/code&gt; &lt;/a&gt;）中打开的套接字才需要使用此方法。对于正常的套接字模式，如果协议省略或为零，则会自动选择正确的协议。</target>
        </trans-unit>
        <trans-unit id="2c2ac3cca9292668377fba4ee4623c03c2cd3d27" translate="yes" xml:space="preserve">
          <source>Translate an Internet service name and protocol name to a port number for that service. The optional protocol name, if given, should be &lt;code&gt;'tcp'&lt;/code&gt; or &lt;code&gt;'udp'&lt;/code&gt;, otherwise any protocol will match.</source>
          <target state="translated">将Internet服务名称和协议名称转换为该服务的端口号。可选协议名称（如果提供）应为 &lt;code&gt;'tcp'&lt;/code&gt; 或 &lt;code&gt;'udp'&lt;/code&gt; ，否则任何协议都将匹配。</target>
        </trans-unit>
        <trans-unit id="c6167576bbe6424a770750fda6b310cd33b5754d" translate="yes" xml:space="preserve">
          <source>Translate the &lt;em&gt;host&lt;/em&gt;/&lt;em&gt;port&lt;/em&gt; argument into a sequence of 5-tuples that contain all the necessary arguments for creating a socket connected to that service. &lt;em&gt;host&lt;/em&gt; is a domain name, a string representation of an IPv4/v6 address or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;port&lt;/em&gt; is a string service name such as &lt;code&gt;'http'&lt;/code&gt;, a numeric port number or &lt;code&gt;None&lt;/code&gt;. By passing &lt;code&gt;None&lt;/code&gt; as the value of &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;, you can pass &lt;code&gt;NULL&lt;/code&gt; to the underlying C API.</source>
          <target state="translated">将&lt;em&gt;主机&lt;/em&gt; / &lt;em&gt;端口&lt;/em&gt;参数转换为5元组的序列，其中包含创建连接到该服务的套接字所需的所有必要参数。&lt;em&gt;host&lt;/em&gt;是域名，是IPv4 / v6地址的字符串表示形式或 &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;port&lt;/em&gt;是字符串服务名称，例如 &lt;code&gt;'http'&lt;/code&gt; ，数字端口号或 &lt;code&gt;None&lt;/code&gt; 。通过将 &lt;code&gt;None&lt;/code&gt; 作为&lt;em&gt;host&lt;/em&gt;和&lt;em&gt;port&lt;/em&gt;的值传递，可以将 &lt;code&gt;NULL&lt;/code&gt; 传递给基础C API。</target>
        </trans-unit>
        <trans-unit id="57cc23b1ca1f4bdb359fda45a6c0cfa2bf20d929" translate="yes" xml:space="preserve">
          <source>Translation classes are what actually implement the translation of original source file message strings to translated message strings. The base class used by all translation classes is &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt;; this provides the basic interface you can use to write your own specialized translation classes. Here are the methods of &lt;code&gt;NullTranslations&lt;/code&gt;:</source>
          <target state="translated">转换类实际上是实现原始源文件消息字符串到已翻译消息字符串的转换的类。所有翻译类使用的基类是&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;。这提供了基本的界面，您可以用来编写自己的专用翻译类。这是 &lt;code&gt;NullTranslations&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="a38cacbb1ca124ad8f23834d55a6a98f51f54e09" translate="yes" xml:space="preserve">
          <source>Translation of docstrings into different languages</source>
          <target state="translated">将docstrings翻译成不同的语言</target>
        </trans-unit>
        <trans-unit id="5819361fc7a2ef298014871c32b98dcda96e637b" translate="yes" xml:space="preserve">
          <source>Transparent Content Negotiation in HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 2295&lt;/strong&gt;&lt;/a&gt;, Section 8.1 (Experimental)</source>
          <target state="translated">HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 2295中的&lt;/strong&gt;&lt;/a&gt;透明内容协商，第8.1节（实验性）</target>
        </trans-unit>
        <trans-unit id="75c3fa4a53fd401b2229a7f0ebc604eeac4ea1cb" translate="yes" xml:space="preserve">
          <source>Transparent Content Negotiation in HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2295&lt;/strong&gt;&lt;/a&gt;, Section 8.1 (Experimental)</source>
          <target state="translated">HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2295中的&lt;/strong&gt;&lt;/a&gt;透明内容协商，第8.1节（实验性）</target>
        </trans-unit>
        <trans-unit id="013dfe5673d630bea0c413d2532e94026706f073" translate="yes" xml:space="preserve">
          <source>Transparently opens files compressed with gzip and bzip2 (recognized by the extensions &lt;code&gt;'.gz'&lt;/code&gt; and &lt;code&gt;'.bz2'&lt;/code&gt;) using the &lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; modules. If the filename extension is not &lt;code&gt;'.gz'&lt;/code&gt; or &lt;code&gt;'.bz2'&lt;/code&gt;, the file is opened normally (ie, using &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; without any decompression).</source>
          <target state="translated">使用&lt;a href=&quot;gzip#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;模块透明地打开使用gzip和bzip2压缩的文件（扩展名为 &lt;code&gt;'.gz'&lt;/code&gt; 和 &lt;code&gt;'.bz2'&lt;/code&gt; 识别）。如果文件扩展名不是 &lt;code&gt;'.gz'&lt;/code&gt; 或 &lt;code&gt;'.bz2'&lt;/code&gt; ，则文件将正常打开（即，使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;而不进行任何解压缩）。</target>
        </trans-unit>
        <trans-unit id="8ba05920f9cac3c752bf58531bc3aff23fb4f8d5" translate="yes" xml:space="preserve">
          <source>Transport endpoint is already connected</source>
          <target state="translated">传输端点已经连接</target>
        </trans-unit>
        <trans-unit id="42b6cb1e2709a84c628f001deda5c6f4c66e6e2f" translate="yes" xml:space="preserve">
          <source>Transport endpoint is not connected</source>
          <target state="translated">传输端点未连接</target>
        </trans-unit>
        <trans-unit id="fe569542c10e401dbb4be544f1e89297055140e3" translate="yes" xml:space="preserve">
          <source>Transport objects are always instantiated by an &lt;a href=&quot;asyncio-eventloop#asyncio-event-loop&quot;&gt;asyncio event loop&lt;/a&gt;.</source>
          <target state="translated">传输对象始终由&lt;a href=&quot;asyncio-eventloop#asyncio-event-loop&quot;&gt;asyncio事件循环&lt;/a&gt;实例化。</target>
        </trans-unit>
        <trans-unit id="fbd2edc0da02a266d5cdec2e57c47c688da6fda8" translate="yes" xml:space="preserve">
          <source>Transports</source>
          <target state="translated">Transports</target>
        </trans-unit>
        <trans-unit id="4761cb167f0448d6e20290552ca05bb90b3bb24d" translate="yes" xml:space="preserve">
          <source>Transports Hierarchy</source>
          <target state="translated">交通运输层次结构</target>
        </trans-unit>
        <trans-unit id="c1d7e246eaa462ae433bf46e7c1126b7c1acd3ea" translate="yes" xml:space="preserve">
          <source>Transports and Protocols</source>
          <target state="translated">运输和协议</target>
        </trans-unit>
        <trans-unit id="264cb105f9be5010db06f954d5f74816deacc8c2" translate="yes" xml:space="preserve">
          <source>Transports and Protocols are used by the &lt;strong&gt;low-level&lt;/strong&gt; event loop APIs such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;. They use callback-based programming style and enable high-performance implementations of network or IPC protocols (e.g. HTTP).</source>
          <target state="translated">&lt;strong&gt;底层&lt;/strong&gt;事件循环API（例如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; )&lt;/a&gt;使用传输和协议。它们使用基于回调的编程风格，并实现网络或IPC协议（例如HTTP）的高性能实现。</target>
        </trans-unit>
        <trans-unit id="a77987d2d7a6956f8a337ae29fb7fb8773743f16" translate="yes" xml:space="preserve">
          <source>Transports are classes provided by &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; in order to abstract various kinds of communication channels.</source>
          <target state="translated">传输是&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;提供的类，用于抽象各种通信渠道。</target>
        </trans-unit>
        <trans-unit id="303f4351f2c69150d0eddec52cfeb625b2371c1e" translate="yes" xml:space="preserve">
          <source>Transports returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;返回的传输：</target>
        </trans-unit>
        <trans-unit id="d9873fba572493e3eaa82cea5f269402afce8d20" translate="yes" xml:space="preserve">
          <source>Transports that can Send data (TCP and Unix connections, pipes, etc). Returned from methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;, etc:</source>
          <target state="translated">可以发送数据的传输（TCP和Unix连接，管道等）。从诸如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;等方法返回：</target>
        </trans-unit>
        <trans-unit id="a051bdcbc525919b993b381956fc20546b16e4a1" translate="yes" xml:space="preserve">
          <source>Transports that can receive data (TCP and Unix connections, pipes, etc). Returned from methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;, etc:</source>
          <target state="translated">可以接收数据的传输（TCP和Unix连接，管道等）。从&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;等方法返回：</target>
        </trans-unit>
        <trans-unit id="509f851ebb0250fc3a0869d4049ba708e0505ba6" translate="yes" xml:space="preserve">
          <source>Trashed</source>
          <target state="translated">Trashed</target>
        </trans-unit>
        <trans-unit id="e28f72c47fa3b5ed393703d102760467590a1188" translate="yes" xml:space="preserve">
          <source>Tree heading area.</source>
          <target state="translated">树木标题区。</target>
        </trans-unit>
        <trans-unit id="6881932baff27b84638af452003fe7547ebad2f3" translate="yes" xml:space="preserve">
          <source>Tree mode</source>
          <target state="translated">树形模式</target>
        </trans-unit>
        <trans-unit id="baf786d49c14bdaf0256d96340c5f4e28abb53d2" translate="yes" xml:space="preserve">
          <source>TreeBuilder Objects</source>
          <target state="translated">TreeBuilder对象</target>
        </trans-unit>
        <trans-unit id="d78dca84fb22f51e97d39c20a021d39026e0b47d" translate="yes" xml:space="preserve">
          <source>Treeview</source>
          <target state="translated">Treeview</target>
        </trans-unit>
        <trans-unit id="cd6a940383f49ad00c6557c201e300253f2a02b1" translate="yes" xml:space="preserve">
          <source>Tries to compile &lt;em&gt;source&lt;/em&gt;, which should be a string of Python code and return a code object if &lt;em&gt;source&lt;/em&gt; is valid Python code. In that case, the filename attribute of the code object will be &lt;em&gt;filename&lt;/em&gt;, which defaults to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;. Returns &lt;code&gt;None&lt;/code&gt; if &lt;em&gt;source&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; valid Python code, but is a prefix of valid Python code.</source>
          <target state="translated">尝试编译&lt;em&gt;source&lt;/em&gt;，它应该是一串Python代码，如果&lt;em&gt;source&lt;/em&gt;是有效的Python代码，则返回一个代码对象。在这种情况下，代码对象的filename属性将是&lt;em&gt;filename&lt;/em&gt;，默认为 &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; 。返回 &lt;code&gt;None&lt;/code&gt; 如果&lt;em&gt;来源&lt;/em&gt;是&lt;em&gt;不是&lt;/em&gt;有效的Python代码，但有效的Python代码前缀。</target>
        </trans-unit>
        <trans-unit id="54f73f8dd5429f4a01f4af96bdf0dbb59c9d9b9f" translate="yes" xml:space="preserve">
          <source>Tries to create a socket; on failure, uses an exponential back-off algorithm. On initial failure, the handler will drop the message it was trying to send. When subsequent messages are handled by the same instance, it will not try connecting until some time has passed. The default parameters are such that the initial delay is one second, and if after that delay the connection still can&amp;rsquo;t be made, the handler will double the delay each time up to a maximum of 30 seconds.</source>
          <target state="translated">尝试创建一个套接字；故障时，使用指数补偿算法。初始失败时，处理程序将删除其尝试发送的消息。当后续消息由同一实例处理时，它将不会尝试连接，直到经过一段时间。默认参数是初始延迟为一秒钟，如果在此延迟之后仍无法建立连接，则处理程序将每次将延迟加倍，最多不超过30秒。</target>
        </trans-unit>
        <trans-unit id="723b7551d8d8f217ec734b051a205c9a9d64447b" translate="yes" xml:space="preserve">
          <source>Tries to determine the default locale settings and returns them as a tuple of the form &lt;code&gt;(language code, encoding)&lt;/code&gt;.</source>
          <target state="translated">尝试确定默认的语言环境设置，并将其作为形式 &lt;code&gt;(language code, encoding)&lt;/code&gt; 的元组返回。</target>
        </trans-unit>
        <trans-unit id="f6e122f407603681d635913886b1cca45552154d" translate="yes" xml:space="preserve">
          <source>Tries to determine the libc version against which the file executable (defaults to the Python interpreter) is linked. Returns a tuple of strings &lt;code&gt;(lib,
version)&lt;/code&gt; which default to the given parameters in case the lookup fails.</source>
          <target state="translated">尝试确定链接文件可执行文件（默认为Python解释器）的libc版本。返回一个字符串元组 &lt;code&gt;(lib, version)&lt;/code&gt; ，如果查找失败，则默认为给定参数。</target>
        </trans-unit>
        <trans-unit id="db9365ac0a5ac052a881974fe2bdebad1f76b2bc" translate="yes" xml:space="preserve">
          <source>Trigger the termination of the dialog window.</source>
          <target state="translated">触发对话窗口的终止。</target>
        </trans-unit>
        <trans-unit id="b9e4c026492c440bf32166e0789393487d03b254" translate="yes" xml:space="preserve">
          <source>Trigonometric functions</source>
          <target state="translated">三角函数</target>
        </trans-unit>
        <trans-unit id="94503f7ff8b00ca0e33985b5db4eb1f04f5842aa" translate="yes" xml:space="preserve">
          <source>Triple quoted strings may span multiple lines - all associated whitespace will be included in the string literal.</source>
          <target state="translated">三引号的字符串可以跨越多行--所有相关的空白都将包含在字符串文字中。</target>
        </trans-unit>
        <trans-unit id="ce93d3947ad07eda86b0f4a04d88b4fde0c3e713" translate="yes" xml:space="preserve">
          <source>Triple quoted: &lt;code&gt;'''Three single quotes'''&lt;/code&gt;, &lt;code&gt;&quot;&quot;&quot;Three double quotes&quot;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">三引号： &lt;code&gt;'''Three single quotes'''&lt;/code&gt; ， &lt;code&gt;&quot;&quot;&quot;Three double quotes&quot;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e3160154fa07738c0749f5a1674876dac0991b9" translate="yes" xml:space="preserve">
          <source>Triple quoted: &lt;code&gt;b'''3 single quotes'''&lt;/code&gt;, &lt;code&gt;b&quot;&quot;&quot;3 double quotes&quot;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">三引号： &lt;code&gt;b'''3 single quotes'''&lt;/code&gt; ， &lt;code&gt;b&quot;&quot;&quot;3 double quotes&quot;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="9799c2f01a14841243adfd69d6831aa48fd1922c" translate="yes" xml:space="preserve">
          <source>Truncate the file corresponding to &lt;em&gt;path&lt;/em&gt;, so that it is at most &lt;em&gt;length&lt;/em&gt; bytes in size.</source>
          <target state="translated">截断与&lt;em&gt;path&lt;/em&gt;对应的文件，以使其最大&lt;em&gt;为&lt;/em&gt;字节大小。</target>
        </trans-unit>
        <trans-unit id="af680e38ac0cf3f9223497dde47b36e539f5b3b2" translate="yes" xml:space="preserve">
          <source>Truncate the file corresponding to file descriptor &lt;em&gt;fd&lt;/em&gt;, so that it is at most &lt;em&gt;length&lt;/em&gt; bytes in size. As of Python 3.3, this is equivalent to &lt;code&gt;os.truncate(fd, length)&lt;/code&gt;.</source>
          <target state="translated">截断与文件描述符&lt;em&gt;fd&lt;/em&gt;对应的文件，以使其最大&lt;em&gt;为&lt;/em&gt;字节大小。从Python 3.3开始，这等效于 &lt;code&gt;os.truncate(fd, length)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf21e5053e591409eb8326bfa9935e23594fdb97" translate="yes" xml:space="preserve">
          <source>Truth Test</source>
          <target state="translated">真理测试</target>
        </trans-unit>
        <trans-unit id="f768c2b1817c6d2e7da4fa131e14ada17a4413ca" translate="yes" xml:space="preserve">
          <source>Truth Value Testing</source>
          <target state="translated">真值测试</target>
        </trans-unit>
        <trans-unit id="042c862e4467d7d057cced262e6869dd75c22b7d" translate="yes" xml:space="preserve">
          <source>Try again</source>
          <target state="translated">再试一次</target>
        </trans-unit>
        <trans-unit id="65e343170835a746169f1c7b9ad30abe19ddd1b7" translate="yes" xml:space="preserve">
          <source>Try to find a library and return a pathname. &lt;em&gt;name&lt;/em&gt; is the library name without any prefix like &lt;code&gt;lib&lt;/code&gt;, suffix like &lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt; or version number (this is the form used for the posix linker option &lt;code&gt;-l&lt;/code&gt;). If no library can be found, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">尝试查找库并返回路径名。&lt;em&gt;name&lt;/em&gt;是没有任何前缀的库名，例如 &lt;code&gt;lib&lt;/code&gt; ，后缀 &lt;code&gt;.so&lt;/code&gt; ， &lt;code&gt;.dylib&lt;/code&gt; 或版本号（这是posix链接器选项 &lt;code&gt;-l&lt;/code&gt; 所使用的形式）。如果找不到库，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a562fe84656e778191318907a6802010662517ce" translate="yes" xml:space="preserve">
          <source>Try to find a library and return a pathname. &lt;em&gt;name&lt;/em&gt; is the library name without any prefix like &lt;em&gt;lib&lt;/em&gt;, suffix like &lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt; or version number (this is the form used for the posix linker option &lt;code&gt;-l&lt;/code&gt;). If no library can be found, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">尝试查找库并返回路径名。&lt;em&gt;name&lt;/em&gt;是没有任何前缀的库名，例如&lt;em&gt;lib&lt;/em&gt;，后缀 &lt;code&gt;.so&lt;/code&gt; ， &lt;code&gt;.dylib&lt;/code&gt; 或版本号（这是posix链接器选项 &lt;code&gt;-l&lt;/code&gt; 所使用的形式）。如果找不到库，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed2c04bc7d24d737144826a2ba71c94163776043" translate="yes" xml:space="preserve">
          <source>Try to get source code for the given object and display it.</source>
          <target state="translated">尝试获取给定对象的源代码并显示出来。</target>
        </trans-unit>
        <trans-unit id="2516887d302ab812a8c194feed3c558ddefb62c8" translate="yes" xml:space="preserve">
          <source>Try to guess which module an object was defined in.</source>
          <target state="translated">尝试猜测一个对象被定义在哪个模块中。</target>
        </trans-unit>
        <trans-unit id="ebd1d1f612e596ce7c3de763a40fa459d5004d6e" translate="yes" xml:space="preserve">
          <source>Try to match &lt;em&gt;reference&lt;/em&gt; as well as possible to a portion of &lt;em&gt;fragment&lt;/em&gt; (which should be the longer fragment). This is (conceptually) done by taking slices out of &lt;em&gt;fragment&lt;/em&gt;, using &lt;a href=&quot;#audioop.findfactor&quot;&gt;&lt;code&gt;findfactor()&lt;/code&gt;&lt;/a&gt; to compute the best match, and minimizing the result. The fragments should both contain 2-byte samples. Return a tuple &lt;code&gt;(offset, factor)&lt;/code&gt; where &lt;em&gt;offset&lt;/em&gt; is the (integer) offset into &lt;em&gt;fragment&lt;/em&gt; where the optimal match started and &lt;em&gt;factor&lt;/em&gt; is the (floating-point) factor as per &lt;a href=&quot;#audioop.findfactor&quot;&gt;&lt;code&gt;findfactor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尝试使&lt;em&gt;引用&lt;/em&gt;尽可能匹配&lt;em&gt;片段&lt;/em&gt;的一部分（应该是更长的片段）。这是（概念）采取切片出来做&lt;em&gt;片段&lt;/em&gt;，使用&lt;a href=&quot;#audioop.findfactor&quot;&gt; &lt;code&gt;findfactor()&lt;/code&gt; &lt;/a&gt;来计算的最佳匹配，并最小化的结果。片段都应包含2个字节的样本。返回一个元组 &lt;code&gt;(offset, factor)&lt;/code&gt; ，其中&lt;em&gt;offset&lt;/em&gt;是&lt;em&gt;片段&lt;/em&gt;的（整数）偏移量，其中开始最佳匹配，而&lt;em&gt;factor&lt;/em&gt;是根据&lt;a href=&quot;#audioop.findfactor&quot;&gt; &lt;code&gt;findfactor()&lt;/code&gt; &lt;/a&gt;的（浮点数）因子。</target>
        </trans-unit>
        <trans-unit id="9ac78d12a16aa80098bb54153e110d21246ae88e" translate="yes" xml:space="preserve">
          <source>Try to match a single dict with the supplied arguments.</source>
          <target state="translated">试着用提供的参数来匹配一个dict。</target>
        </trans-unit>
        <trans-unit id="b42726f25482d59cf0996a89fcd7e965117f2de5" translate="yes" xml:space="preserve">
          <source>Try to match a single stored value (&lt;em&gt;dv&lt;/em&gt;) with a supplied value (&lt;em&gt;v&lt;/em&gt;).</source>
          <target state="translated">尝试将单个存储值（&lt;em&gt;dv&lt;/em&gt;）与提供的值（&lt;em&gt;v&lt;/em&gt;）相匹配。</target>
        </trans-unit>
        <trans-unit id="d185a34ec17e724666e5fcb4d5595d842b8d7712" translate="yes" xml:space="preserve">
          <source>Try to maximize code reuse. On occasion, tests will vary by something as small as what type of input is used. Minimize code duplication by subclassing a basic test class with a class that specifies the input:</source>
          <target state="translated">尽量提高代码复用率。偶尔,测试会因为小到使用什么类型的输入而有所不同。通过将一个基本的测试类与一个指定输入的类进行子类化,尽量减少代码重复。</target>
        </trans-unit>
        <trans-unit id="24c4d4b0384c5e8113577a77c50cd02909ab1752" translate="yes" xml:space="preserve">
          <source>Try to set the audio sampling rate to &lt;em&gt;samplerate&lt;/em&gt; samples per second. Returns the rate actually set. Most sound devices don&amp;rsquo;t support arbitrary sampling rates. Common rates are:</source>
          <target state="translated">尝试设置音频采样率，以&lt;em&gt;采样率&lt;/em&gt;每秒采样。返回实际设置的速率。大多数声音设备不支持任意采样率。常见费率是：</target>
        </trans-unit>
        <trans-unit id="dfd9bba471282a5364090df5e871704f1989384f" translate="yes" xml:space="preserve">
          <source>Try to set the current audio format to &lt;em&gt;format&lt;/em&gt;&amp;mdash;see &lt;a href=&quot;#ossaudiodev.oss_audio_device.getfmts&quot;&gt;&lt;code&gt;getfmts()&lt;/code&gt;&lt;/a&gt; for a list. Returns the audio format that the device was set to, which may not be the requested format. May also be used to return the current audio format&amp;mdash;do this by passing an &amp;ldquo;audio format&amp;rdquo; of &lt;code&gt;AFMT_QUERY&lt;/code&gt;.</source>
          <target state="translated">尝试设置当前的音频格式来&lt;em&gt;格式化&lt;/em&gt; -见&lt;a href=&quot;#ossaudiodev.oss_audio_device.getfmts&quot;&gt; &lt;code&gt;getfmts()&lt;/code&gt; &lt;/a&gt;的列表。返回设备设置的音频格式，可能不是请求的格式。也可以用于返回当前的音频格式，方法是传递 &lt;code&gt;AFMT_QUERY&lt;/code&gt; 的&amp;ldquo;音频格式&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="01dc1292ce86f3caf0848ae2f322f3751399a279" translate="yes" xml:space="preserve">
          <source>Try to switch to UTF-8 mode. Returns the server response if successful, raises &lt;a href=&quot;#poplib.error_proto&quot;&gt;&lt;code&gt;error_proto&lt;/code&gt;&lt;/a&gt; if not. Specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc6856.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6856&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">尝试切换到UTF-8模式。如果成功，则返回服务器响应，否则返回&lt;a href=&quot;#poplib.error_proto&quot;&gt; &lt;code&gt;error_proto&lt;/code&gt; &lt;/a&gt;。在&lt;a href=&quot;https://tools.ietf.org/html/rfc6856.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6856中&lt;/strong&gt;&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="f88c14e9f4900c12d35e50c8cd7af56fcc2bdc2e" translate="yes" xml:space="preserve">
          <source>Trying to unparse a highly complex expression would result with &lt;a href=&quot;exceptions#RecursionError&quot;&gt;&lt;code&gt;RecursionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尝试解析非常复杂的表达式会导致&lt;a href=&quot;exceptions#RecursionError&quot;&gt; &lt;code&gt;RecursionError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f09fbf303e9d03d520306ba22518da9d405b4d0" translate="yes" xml:space="preserve">
          <source>Ttk Notebook widget manages a collection of windows and displays a single one at a time. Each child window is associated with a tab, which the user may select to change the currently-displayed window.</source>
          <target state="translated">Ttk Notebook widget管理一个窗口的集合,并且一次只显示一个窗口。每个子窗口都与一个标签相关联,用户可以选择它来改变当前显示的窗口。</target>
        </trans-unit>
        <trans-unit id="0c1d99a87ace6521e39f8ca7d4263b05f86c18f3" translate="yes" xml:space="preserve">
          <source>Ttk Styling</source>
          <target state="translated">Ttk造型</target>
        </trans-unit>
        <trans-unit id="a8b856639e268ec85b1013167342e759670b03a1" translate="yes" xml:space="preserve">
          <source>Ttk Widgets</source>
          <target state="translated">Ttk Widgets</target>
        </trans-unit>
        <trans-unit id="f3f01ae23b415dd491c9f60cdd3716bbb3432178" translate="yes" xml:space="preserve">
          <source>Ttk code:</source>
          <target state="translated">Ttk代码:</target>
        </trans-unit>
        <trans-unit id="3b50c205ffc8d2593d73a3ea0a223ad651b40604" translate="yes" xml:space="preserve">
          <source>Ttk comes with 18 widgets, twelve of which already existed in tkinter: &lt;code&gt;Button&lt;/code&gt;, &lt;code&gt;Checkbutton&lt;/code&gt;, &lt;code&gt;Entry&lt;/code&gt;, &lt;code&gt;Frame&lt;/code&gt;, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;LabelFrame&lt;/code&gt;, &lt;code&gt;Menubutton&lt;/code&gt;, &lt;code&gt;PanedWindow&lt;/code&gt;, &lt;code&gt;Radiobutton&lt;/code&gt;, &lt;code&gt;Scale&lt;/code&gt;, &lt;code&gt;Scrollbar&lt;/code&gt;, and &lt;a href=&quot;#tkinter.ttk.Spinbox&quot;&gt;&lt;code&gt;Spinbox&lt;/code&gt;&lt;/a&gt;. The other six are new: &lt;a href=&quot;#tkinter.ttk.Combobox&quot;&gt;&lt;code&gt;Combobox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Notebook&quot;&gt;&lt;code&gt;Notebook&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Progressbar&quot;&gt;&lt;code&gt;Progressbar&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Separator&lt;/code&gt;, &lt;code&gt;Sizegrip&lt;/code&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview&quot;&gt;&lt;code&gt;Treeview&lt;/code&gt;&lt;/a&gt;. And all them are subclasses of &lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ttk带有18个小部件，其中12个已在 &lt;code&gt;Checkbutton&lt;/code&gt; 存在： &lt;code&gt;Button&lt;/code&gt; ，Checkbutton， &lt;code&gt;Entry&lt;/code&gt; ， &lt;code&gt;Frame&lt;/code&gt; ， &lt;code&gt;Label&lt;/code&gt; ， &lt;code&gt;LabelFrame&lt;/code&gt; ， &lt;code&gt;Menubutton&lt;/code&gt; ， &lt;code&gt;PanedWindow&lt;/code&gt; ， &lt;code&gt;Radiobutton&lt;/code&gt; ， &lt;code&gt;Scale&lt;/code&gt; ， &lt;code&gt;Scrollbar&lt;/code&gt; 和&lt;a href=&quot;#tkinter.ttk.Spinbox&quot;&gt; &lt;code&gt;Spinbox&lt;/code&gt; &lt;/a&gt;。其他六个是新的：&lt;a href=&quot;#tkinter.ttk.Combobox&quot;&gt; &lt;code&gt;Combobox&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Sizegrip&lt;/code&gt; ，&lt;a href=&quot;#tkinter.ttk.Notebook&quot;&gt; &lt;code&gt;Notebook&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.ttk.Progressbar&quot;&gt; &lt;code&gt;Progressbar&lt;/code&gt; &lt;/a&gt;栏， &lt;code&gt;Separator&lt;/code&gt; ，Sizegrip和&lt;a href=&quot;#tkinter.ttk.Treeview&quot;&gt; &lt;code&gt;Treeview&lt;/code&gt; &lt;/a&gt;。它们都是&lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt; &lt;code&gt;Widget&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="62d5887076eeffca16e822f085d3a6fac34dfe1c" translate="yes" xml:space="preserve">
          <source>Tuple comparison breaks for (priority, task) pairs if the priorities are equal and the tasks do not have a default comparison order.</source>
          <target state="translated">如果优先级相同且任务没有默认的比较顺序,则(优先级,任务)对的元组比较中断。</target>
        </trans-unit>
        <trans-unit id="576f22e6784b810efe039380014c1113e2fb6f11" translate="yes" xml:space="preserve">
          <source>Tuple containing two dictionaries, mapping MIME types to a list of filename extensions: the first dictionary is for the non-standards types and the second one is for the standard types. They are initialized by &lt;a href=&quot;#mimetypes.common_types&quot;&gt;&lt;code&gt;common_types&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mimetypes.types_map&quot;&gt;&lt;code&gt;types_map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">元组包含两个字典，将MIME类型映射到文件扩展名列表：第一个字典用于非标准类型，第二个字典用于标准类型。它们由&lt;a href=&quot;#mimetypes.common_types&quot;&gt; &lt;code&gt;common_types&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#mimetypes.types_map&quot;&gt; &lt;code&gt;types_map&lt;/code&gt; &lt;/a&gt;初始化。</target>
        </trans-unit>
        <trans-unit id="35d389092135e415451df1c6a4fe91d613237182" translate="yes" xml:space="preserve">
          <source>Tuple containing two dictionaries, mapping filename extensions to MIME types: the first dictionary is for the non-standards types and the second one is for the standard types. They are initialized by &lt;a href=&quot;#mimetypes.common_types&quot;&gt;&lt;code&gt;common_types&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mimetypes.types_map&quot;&gt;&lt;code&gt;types_map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">元组包含两个字典，将文件扩展名映射到MIME类型：第一个字典用于非标准类型，第二个字典用于标准类型。它们由&lt;a href=&quot;#mimetypes.common_types&quot;&gt; &lt;code&gt;common_types&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#mimetypes.types_map&quot;&gt; &lt;code&gt;types_map&lt;/code&gt; &lt;/a&gt;初始化。</target>
        </trans-unit>
        <trans-unit id="d3c38138d37b7093520517627a140d12972e280c" translate="yes" xml:space="preserve">
          <source>Tuple of strings listing the field names. Useful for introspection and for creating new named tuple types from existing named tuples.</source>
          <target state="translated">列出字段名的字符串元组。用于自省和从现有命名元组中创建新的命名元组类型。</target>
        </trans-unit>
        <trans-unit id="f79c109bcba03e38eac40e1e4bcb6c02a02072c0" translate="yes" xml:space="preserve">
          <source>Tuple type; &lt;code&gt;Tuple[X, Y]&lt;/code&gt; is the type of a tuple of two items with the first item of type X and the second of type Y. The type of the empty tuple can be written as &lt;code&gt;Tuple[()]&lt;/code&gt;.</source>
          <target state="translated">元组类型； &lt;code&gt;Tuple[X, Y]&lt;/code&gt; 是两个项目的元组的类型，第一个项目的类型为X，第二个项目的类型为Y。空元组的类型可以写为 &lt;code&gt;Tuple[()]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="538a8ce3fbdcaee00a14353bd57bcf3600c6e0d0" translate="yes" xml:space="preserve">
          <source>Tuples</source>
          <target state="translated">Tuples</target>
        </trans-unit>
        <trans-unit id="48434af86ae5af781700a355a8ecb54f31e4d982" translate="yes" xml:space="preserve">
          <source>Tuples are immutable sequences, typically used to store collections of heterogeneous data (such as the 2-tuples produced by the &lt;a href=&quot;functions#enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; built-in). Tuples are also used for cases where an immutable sequence of homogeneous data is needed (such as allowing storage in a &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instance).</source>
          <target state="translated">元组是不可变的序列，通常用于存储异构数据的集合（例如内置的&lt;a href=&quot;functions#enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt;生成的2元组）。元组还用于需要不变数据的同类数据序列的情况（例如允许存储在&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;实例中）。</target>
        </trans-unit>
        <trans-unit id="0b386e8529fb736e9c4bd36aeb1f72fafbe39613" translate="yes" xml:space="preserve">
          <source>Tuples implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; sequence operations.</source>
          <target state="translated">元组实现所有&lt;a href=&quot;#typesseq-common&quot;&gt;常见的&lt;/a&gt;序列操作。</target>
        </trans-unit>
        <trans-unit id="820108fe4042aed941be834adbd58d5bd8b622c9" translate="yes" xml:space="preserve">
          <source>Tuples may be constructed in a number of ways:</source>
          <target state="translated">图元组可以用多种方式构建。</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="bfddc6585154e8980d7d9f2464ddd6bcffde4f0c" translate="yes" xml:space="preserve">
          <source>Turn &lt;em&gt;all&lt;/em&gt; tabs into the correct number of spaces.</source>
          <target state="translated">关闭&lt;em&gt;所有&lt;/em&gt;标签到正确数量的空格。</target>
        </trans-unit>
        <trans-unit id="d432c331d5bf77692c8000616daf70b03f0e4997" translate="yes" xml:space="preserve">
          <source>Turn &lt;em&gt;leading&lt;/em&gt; stretches of spaces into tabs. (Note: We recommend using 4 space blocks to indent Python code.)</source>
          <target state="translated">将&lt;em&gt;前导&lt;/em&gt;空格变成制表符。（注意：我们建议使用4个空格来缩进Python代码。）</target>
        </trans-unit>
        <trans-unit id="81f0849860783f08e07acdaa613f08c3820b9ee6" translate="yes" xml:space="preserve">
          <source>Turn a 10-tuple as returned by &lt;a href=&quot;#email.utils.parsedate_tz&quot;&gt;&lt;code&gt;parsedate_tz()&lt;/code&gt;&lt;/a&gt; into a UTC timestamp (seconds since the Epoch). If the timezone item in the tuple is &lt;code&gt;None&lt;/code&gt;, assume local time.</source>
          <target state="translated">将&lt;a href=&quot;#email.utils.parsedate_tz&quot;&gt; &lt;code&gt;parsedate_tz()&lt;/code&gt; &lt;/a&gt;返回的10元组转换为UTC时间戳（距离纪元以来的秒数）。如果元组中的时区项为 &lt;code&gt;None&lt;/code&gt; ，则假定为本地时间。</target>
        </trans-unit>
        <trans-unit id="cb07ad334e657f4211d17464bcc2a73ca9e67cdd" translate="yes" xml:space="preserve">
          <source>Turn off the standout attribute. On some terminals this has the side effect of turning off all attributes.</source>
          <target state="translated">关闭突出的属性。在某些终端上,这有关闭所有属性的副作用。</target>
        </trans-unit>
        <trans-unit id="e0db49dc317a6c62e6f369a19109f78316e0ad8d" translate="yes" xml:space="preserve">
          <source>Turn on attribute &lt;em&gt;A_STANDOUT&lt;/em&gt;.</source>
          <target state="translated">打开属性&lt;em&gt;A_STANDOUT&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4d2f56812568c7f5b2fa977fd2479da08dd9b77d" translate="yes" xml:space="preserve">
          <source>Turn turtle animation on/off and set delay for update drawings. If &lt;em&gt;n&lt;/em&gt; is given, only each n-th regular screen update is really performed. (Can be used to accelerate the drawing of complex graphics.) When called without arguments, returns the currently stored value of n. Second argument sets delay value (see &lt;a href=&quot;#turtle.delay&quot;&gt;&lt;code&gt;delay()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">打开/关闭乌龟动画并设置更新图纸的延迟。如果给出&lt;em&gt;n&lt;/em&gt;，则仅真正执行每个第n次常规屏幕更新。（可用于加速复杂图形的绘制。）不带参数调用时，返回当前存储的n值。第二个参数设置延迟值（请参阅&lt;a href=&quot;#turtle.delay&quot;&gt; &lt;code&gt;delay()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f3940b4ff2adb1c60ab4ae7e097adb391cb0745c" translate="yes" xml:space="preserve">
          <source>Turn turtle left by &lt;em&gt;angle&lt;/em&gt; units. (Units are by default degrees, but can be set via the &lt;a href=&quot;#turtle.degrees&quot;&gt;&lt;code&gt;degrees()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#turtle.radians&quot;&gt;&lt;code&gt;radians()&lt;/code&gt;&lt;/a&gt; functions.) Angle orientation depends on the turtle mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以&lt;em&gt;角度&lt;/em&gt;单位向左转乌龟。（单位默认为度，但可以通过&lt;a href=&quot;#turtle.degrees&quot;&gt; &lt;code&gt;degrees()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#turtle.radians&quot;&gt; &lt;code&gt;radians()&lt;/code&gt; &lt;/a&gt;函数进行设置。）角度方向取决于乌龟模式，请参见&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="292661246e0c70041c546baddc46aed04e518e00" translate="yes" xml:space="preserve">
          <source>Turn turtle right by &lt;em&gt;angle&lt;/em&gt; units. (Units are by default degrees, but can be set via the &lt;a href=&quot;#turtle.degrees&quot;&gt;&lt;code&gt;degrees()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#turtle.radians&quot;&gt;&lt;code&gt;radians()&lt;/code&gt;&lt;/a&gt; functions.) Angle orientation depends on the turtle mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以&lt;em&gt;角度&lt;/em&gt;单位向右转乌龟。（单位默认为度，但可以通过&lt;a href=&quot;#turtle.degrees&quot;&gt; &lt;code&gt;degrees()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#turtle.radians&quot;&gt; &lt;code&gt;radians()&lt;/code&gt; &lt;/a&gt;函数进行设置。）角度方向取决于乌龟模式，请参见&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9d856f25af2d9e07b1ef5aad4d012d7376ee596" translate="yes" xml:space="preserve">
          <source>Turtle Demo</source>
          <target state="translated">海龟演示</target>
        </trans-unit>
        <trans-unit id="a0f41b1533a18c5574ab4500b21ca24174591f8f" translate="yes" xml:space="preserve">
          <source>Turtle can draw intricate shapes using programs that repeat simple moves.</source>
          <target state="translated">乌龟可以用重复简单动作的程序画出复杂的形状。</target>
        </trans-unit>
        <trans-unit id="2a24632f3c5d3eafd2990df1fdd275b46a5d8158" translate="yes" xml:space="preserve">
          <source>Turtle graphics in a Tk window.</source>
          <target state="translated">Tk窗口中的海龟图形。</target>
        </trans-unit>
        <trans-unit id="9a1e38be75dff4a2c0ae0ad9aea10e788d28916e" translate="yes" xml:space="preserve">
          <source>Turtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967.</source>
          <target state="translated">海龟图形是向孩子们介绍编程的一种流行方式。它是Wally Feurzeig、Seymour Papert和Cynthia Solomon在1967年开发的原始Logo编程语言的一部分。</target>
        </trans-unit>
        <trans-unit id="1ff814f0448dd7def11d04fd02e9cec44e3bbdd3" translate="yes" xml:space="preserve">
          <source>Turtle methods</source>
          <target state="translated">海龟方法</target>
        </trans-unit>
        <trans-unit id="96e24697788c1f2b6cc2700df67b60ac33f0a382" translate="yes" xml:space="preserve">
          <source>Turtle motion</source>
          <target state="translated">海龟运动</target>
        </trans-unit>
        <trans-unit id="8796c60dd399ec39ec33b95027adedef2da97f8e" translate="yes" xml:space="preserve">
          <source>Turtle star</source>
          <target state="translated">龟星</target>
        </trans-unit>
        <trans-unit id="9c0710f6fc26113ca313f375ee77130470a4e349" translate="yes" xml:space="preserve">
          <source>Turtle state</source>
          <target state="translated">龟国</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="3a397d7ece111012b516d309689206d97d75d9f3" translate="yes" xml:space="preserve">
          <source>Tutorial material on using curses with Python, by Andrew Kuchling and Eric Raymond.</source>
          <target state="translated">关于用Python使用诅咒的教程资料,作者是Andrew Kuchling和Eric Raymond。</target>
        </trans-unit>
        <trans-unit id="4e8be26c995d9e54216ed6645e9836123debd695" translate="yes" xml:space="preserve">
          <source>Tutorial, reference and examples for learning SQL syntax.</source>
          <target state="translated">学习SQL语法的教程、参考和示例。</target>
        </trans-unit>
        <trans-unit id="d05acac61e27dac1572bffb3b8de9b3cf7fd0e3b" translate="yes" xml:space="preserve">
          <source>Two additional functions are defined for more general manipulation of the file&amp;rsquo;s mode:</source>
          <target state="translated">定义了两个附加功能，用于对文件模式进行更常规的操作：</target>
        </trans-unit>
        <trans-unit id="f5778fbfb9d58d541f9dff34e99f07ac44ecd72a" translate="yes" xml:space="preserve">
          <source>Two additional methods are supported:</source>
          <target state="translated">另外还支持两种方法。</target>
        </trans-unit>
        <trans-unit id="74fbbe6b7f586a0aa1c11ad358017225d3404209" translate="yes" xml:space="preserve">
          <source>Two auditing events are raised because the underlying API consists of two calls, each of which must raise its own event.</source>
          <target state="translated">由于底层API由两个调用组成,每个调用都必须引发自己的事件,所以会引发两个审计事件。</target>
        </trans-unit>
        <trans-unit id="8e33dd2ef0fd579bfd7e4e16fef3331e9ee5d62c" translate="yes" xml:space="preserve">
          <source>Two class attributes can be modified, to improve performance, or possibly even to conserve memory.</source>
          <target state="translated">可以修改两个类的属性,以提高性能,甚至可能是为了节省内存。</target>
        </trans-unit>
        <trans-unit id="aca3088aa647ffc33767d19b51e8acc79673c470" translate="yes" xml:space="preserve">
          <source>Two example scripts &lt;code&gt;tdemo_nim.py&lt;/code&gt; and &lt;code&gt;tdemo_round_dance.py&lt;/code&gt; have been added to the &lt;code&gt;Lib/turtledemo&lt;/code&gt; directory.</source>
          <target state="translated">两个示例脚本 &lt;code&gt;tdemo_nim.py&lt;/code&gt; 和 &lt;code&gt;tdemo_round_dance.py&lt;/code&gt; 已添加到 &lt;code&gt;Lib/turtledemo&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="3215c5c671bb59cb7f259dffd760947f8afd0e5e" translate="yes" xml:space="preserve">
          <source>Two functions are provided which allow an application to determine if an ST was created as an expression or a suite. Neither of these functions can be used to determine if an ST was created from source code via &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; or from a parse tree via &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提供了两个功能，这些功能使应用程序可以确定将ST创建为表达式还是套件。这两个函数都不能用于确定ST是通过&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;还是&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;从源代码创建的，还是通过&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;从解析树创建的。</target>
        </trans-unit>
        <trans-unit id="63ba6e77a40ef9371295e90d99cc0d1db0adadfd" translate="yes" xml:space="preserve">
          <source>Two input methods has been added &lt;code&gt;Screen.textinput()&lt;/code&gt; and &lt;code&gt;Screen.numinput()&lt;/code&gt;. These popup input dialogs and return strings and numbers respectively.</source>
          <target state="translated">添加了两个输入方法 &lt;code&gt;Screen.textinput()&lt;/code&gt; 和 &lt;code&gt;Screen.numinput()&lt;/code&gt; 。这些弹出输入对话框并分别返回字符串和数字。</target>
        </trans-unit>
        <trans-unit id="8a4d24f36d4d5b93fc0a050914dae06ceeb82597" translate="yes" xml:space="preserve">
          <source>Two methods are offered to support tracking whether enqueued tasks have been fully processed by daemon consumer threads.</source>
          <target state="translated">提供了两种方法来支持跟踪enqueued任务是否已被守护进程消费者线程完全处理。</target>
        </trans-unit>
        <trans-unit id="bd3d5af48f3448d7859d083f308cded341e694d8" translate="yes" xml:space="preserve">
          <source>Two methods support conversion to and from hexadecimal strings. Since Python&amp;rsquo;s floats are stored internally as binary numbers, converting a float to or from a &lt;em&gt;decimal&lt;/em&gt; string usually involves a small rounding error. In contrast, hexadecimal strings allow exact representation and specification of floating-point numbers. This can be useful when debugging, and in numerical work.</source>
          <target state="translated">有两种方法支持与十六进制字符串之间的转换。由于Python的浮点数在内部存储为二进制数，因此，将浮点数转换为&lt;em&gt;十进制&lt;/em&gt;字符串或从&lt;em&gt;十进制&lt;/em&gt;字符串转换通常会产生较小的舍入误差。相反，十六进制字符串允许精确表示和指定浮点数。这在调试和数值工作时很有用。</target>
        </trans-unit>
        <trans-unit id="872eb4299a16afe1171ea96869c4a6a12570000d" translate="yes" xml:space="preserve">
          <source>Two module-level constants are defined for the &lt;code&gt;f_flag&lt;/code&gt; attribute&amp;rsquo;s bit-flags: if &lt;code&gt;ST_RDONLY&lt;/code&gt; is set, the filesystem is mounted read-only, and if &lt;code&gt;ST_NOSUID&lt;/code&gt; is set, the semantics of setuid/setgid bits are disabled or not supported.</source>
          <target state="translated">为 &lt;code&gt;f_flag&lt;/code&gt; 属性的位标志定义了两个模块级常量：如果设置了 &lt;code&gt;ST_RDONLY&lt;/code&gt; ，则文件系统以只读方式安装；如果设置了 &lt;code&gt;ST_NOSUID&lt;/code&gt; ，则禁用或不支持setuid / setgid位的语义。</target>
        </trans-unit>
        <trans-unit id="be1b45cb0ecebb3689d6d197233fac8a8c5b7cdb" translate="yes" xml:space="preserve">
          <source>Two more operations with the same syntactic priority, &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#not-in&quot;&gt;&lt;code&gt;not in&lt;/code&gt;&lt;/a&gt;, are supported by types that are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; or implement the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;可迭代&lt;/a&gt;的类型或实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;方法的类型支持另外两个具有相同语法优先级的操作&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#not-in&quot;&gt; &lt;code&gt;not in&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57484ab1c96de366c7659613da4a7a19820bbb45" translate="yes" xml:space="preserve">
          <source>Two more operations with the same syntactic priority, &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#not-in&quot;&gt;&lt;code&gt;not in&lt;/code&gt;&lt;/a&gt;, are supported by types that are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; or implement the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;可重复&lt;/a&gt;的类型或实现&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;方法的类型支持另外两个具有相同语法优先级的操作&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#not-in&quot;&gt; &lt;code&gt;not in&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fdf7de28689c34cb727db34c6fd3d72b113d5340" translate="yes" xml:space="preserve">
          <source>Two problems often exist with deep copy operations that don&amp;rsquo;t exist with shallow copy operations:</source>
          <target state="translated">深层复制操作通常存在两个问题，浅层复制操作通常不存在两个问题：</target>
        </trans-unit>
        <trans-unit id="b2b86a9fb4ed899789b8e540b927de2494814ac0" translate="yes" xml:space="preserve">
          <source>Two, the components to implement &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; are exposed in this package, making it easier for users to create their own custom objects (known generically as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;) to participate in the import process.</source>
          <target state="translated">第二，实现&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;的组件在此包中公开，从而使用户可以更轻松地创建自己的自定义对象（通常称为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;）以参与导入过程。</target>
        </trans-unit>
        <trans-unit id="4baa17858ab79243a22b590fac0cb9c8e0e73f55" translate="yes" xml:space="preserve">
          <source>Two, the components to implement &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; are exposed in this package, making it easier for users to create their own custom objects (known generically as an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;) to participate in the import process.</source>
          <target state="translated">第二，实现&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;的组件在此包中公开，从而使用户可以更轻松地创建自己的自定义对象（通常称为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;）以参与导入过程。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="fb42e6da9092ad24cf8712d8f033b482720c8ba7" translate="yes" xml:space="preserve">
          <source>Type Mapping</source>
          <target state="translated">类型映射</target>
        </trans-unit>
        <trans-unit id="f14b280e5383b1f17a84d6b572438fadbd026be6" translate="yes" xml:space="preserve">
          <source>Type Name</source>
          <target state="translated">类型名称</target>
        </trans-unit>
        <trans-unit id="d2f9a9762f1f9c0b60540d7712d38a39e49c34fd" translate="yes" xml:space="preserve">
          <source>Type Objects</source>
          <target state="translated">类型对象</target>
        </trans-unit>
        <trans-unit id="58cf557846d7f65d34e8a92739eef2665164fad4" translate="yes" xml:space="preserve">
          <source>Type aliases</source>
          <target state="translated">类型别名</target>
        </trans-unit>
        <trans-unit id="3904b98c101001c9fda3dac293772c6839673461" translate="yes" xml:space="preserve">
          <source>Type aliases are useful for simplifying complex type signatures. For example:</source>
          <target state="translated">类型别名对于简化复杂的类型签名很有用。例如:</target>
        </trans-unit>
        <trans-unit id="fe2526f8a28470f60a37f388a8f0ef0c6f6542f1" translate="yes" xml:space="preserve">
          <source>Type code</source>
          <target state="translated">类型代码</target>
        </trans-unit>
        <trans-unit id="08d7f20ec3a1f2c32685f21a24578ef7bfd33afb" translate="yes" xml:space="preserve">
          <source>Type conversions</source>
          <target state="translated">类型转换</target>
        </trans-unit>
        <trans-unit id="adcfc2aff0b9f03c65af390bc572e32e3fde7685" translate="yes" xml:space="preserve">
          <source>Type objects represent the various object types. An object&amp;rsquo;s type is accessed by the built-in function &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt;. There are no special operations on types. The standard module &lt;a href=&quot;types#module-types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; defines names for all standard built-in types.</source>
          <target state="translated">类型对象代表各种对象类型。内置函数&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;可访问对象的类型。类型上没有特殊的操作。标准模块&lt;a href=&quot;types#module-types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt;为所有标准内置类型定义名称。</target>
        </trans-unit>
        <trans-unit id="aa32bfc1d6a5fce412d12cc5f6131574b940d465" translate="yes" xml:space="preserve">
          <source>Type of &lt;em&gt;section&lt;/em&gt; is not checked which lets users create non-string named sections. This behaviour is unsupported and may cause internal errors.</source>
          <target state="translated">未检查&lt;em&gt;节的&lt;/em&gt;类型，这使用户可以创建非字符串命名节。不支持此行为，并且可能会导致内部错误。</target>
        </trans-unit>
        <trans-unit id="8f8b3b37475e6f3fa8cee7c6299d976516072c02" translate="yes" xml:space="preserve">
          <source>Type of compression for the archive member.</source>
          <target state="translated">归档成员的压缩类型。</target>
        </trans-unit>
        <trans-unit id="b02de00fc7c13da0d493703834670f2d1b7600d4" translate="yes" xml:space="preserve">
          <source>Type of device if an inode device.</source>
          <target state="translated">设备类型,如果是inode设备。</target>
        </trans-unit>
        <trans-unit id="11d984e097d6ee06063e87e1e2de5c09652bbf3c" translate="yes" xml:space="preserve">
          <source>Type of interval</source>
          <target state="translated">区间类型</target>
        </trans-unit>
        <trans-unit id="294a0ffbd46fd4e89c9826ea69865fc9375f0653" translate="yes" xml:space="preserve">
          <source>Type of method</source>
          <target state="translated">方法类型</target>
        </trans-unit>
        <trans-unit id="6ddf33ad1a33d0bab4a03b93d6faf8800f5bf097" translate="yes" xml:space="preserve">
          <source>Type variable.</source>
          <target state="translated">类型可变。</target>
        </trans-unit>
        <trans-unit id="24577861cc8fef54c83c65aaf45d45975c7ced44" translate="yes" xml:space="preserve">
          <source>Type variables exist primarily for the benefit of static type checkers. They serve as the parameters for generic types as well as for generic function definitions. See &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; for more information on generic types. Generic functions work as follows:</source>
          <target state="translated">类型变量的存在主要是为了使静态类型检查器受益。它们充当通用类型以及通用函数定义的参数。有关泛型类型的更多信息，请参见&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;。通用函数的工作方式如下：</target>
        </trans-unit>
        <trans-unit id="baf680aae15157638dae127ad7434adccbdefecc" translate="yes" xml:space="preserve">
          <source>Type variables exist primarily for the benefit of static type checkers. They serve as the parameters for generic types as well as for generic function definitions. See class Generic for more information on generic types. Generic functions work as follows:</source>
          <target state="translated">类型变量的存在主要是为了静态类型检查器的利益。它们作为通用类型和通用函数定义的参数。关于泛型的更多信息请参见类Generic。通用函数的工作原理如下。</target>
        </trans-unit>
        <trans-unit id="abd88df25ccb148cda7f9f5350705633e0c6805c" translate="yes" xml:space="preserve">
          <source>Type variables may be marked covariant or contravariant by passing &lt;code&gt;covariant=True&lt;/code&gt; or &lt;code&gt;contravariant=True&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; for more details. By default type variables are invariant. Alternatively, a type variable may specify an upper bound using &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt;. This means that an actual type substituted (explicitly or implicitly) for the type variable must be a subclass of the boundary type, see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">类型变量可以通过传递 &lt;code&gt;covariant=True&lt;/code&gt; 或 &lt;code&gt;contravariant=True&lt;/code&gt; 来标记为协变或逆变。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;。默认情况下，类型变量是不变的。或者，类型变量可以使用 &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt; 指定上限。这意味着（用显式或隐式）替换类型变量的实际类型必须是边界类型的子类，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fe184b1e7c4b63f5282ac233036dbefeef8903a" translate="yes" xml:space="preserve">
          <source>Type variables may be marked covariant or contravariant by passing &lt;code&gt;covariant=True&lt;/code&gt; or &lt;code&gt;contravariant=True&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; for more details. By default type variables are invariant. Alternatively, a type variable may specify an upper bound using &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt;. This means that an actual type substituted (explicitly or implicitly) for the type variable must be a subclass of the boundary type, see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">通过传递 &lt;code&gt;covariant=True&lt;/code&gt; 或 &lt;code&gt;contravariant=True&lt;/code&gt; 变量= True，可以将类型变量标记为协变或逆变。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;。默认情况下，类型变量是不变的。或者，类型变量可以使用 &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt; 指定上限。这意味着（用显式或隐式）替换类型变量的实际类型必须是边界类型的子类，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="a6be1034d703cbdf5582dfd0bbf7526f130e553d" translate="yes" xml:space="preserve">
          <source>Typed version of &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;collections.namedtuple()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;collections.namedtuple()&lt;/code&gt; 的&lt;/a&gt;类型化版本。</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="e2e596d43ca753aabf829e5d2f7b47881bc072ed" translate="yes" xml:space="preserve">
          <source>Types and members</source>
          <target state="translated">类型和成员</target>
        </trans-unit>
        <trans-unit id="df88a44cd87ff57172e226ab3e76d8e0cb3d63d4" translate="yes" xml:space="preserve">
          <source>Types are written like this: &lt;code&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">类型是这样写的： &lt;code&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d5e7cdf61e73f46e18d9cee2a01332da9df6522" translate="yes" xml:space="preserve">
          <source>Types that are conformable (e.g. that can be marshalled through XML), include the following (and except where noted, they are unmarshalled as the same Python type):</source>
          <target state="translated">可适配的类型 (例如,可以通过 XML 调集),包括以下类型 (除非有说明,否则它们不会被调集为同一个 Python 类型)。</target>
        </trans-unit>
        <trans-unit id="ffa096628994d74c4f106032627242fbdd4a6146" translate="yes" xml:space="preserve">
          <source>Typical use of these names is for &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt; checks.</source>
          <target state="translated">这些名称的典型用法是用于&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; &lt;/a&gt;检查。</target>
        </trans-unit>
        <trans-unit id="a453b951365e1cf38b6e3dbd7827785d21193262" translate="yes" xml:space="preserve">
          <source>Typical use:</source>
          <target state="translated">典型用途:</target>
        </trans-unit>
        <trans-unit id="edcc18ac436a03bd44d6ef6223e83024174e89fd" translate="yes" xml:space="preserve">
          <source>Typical uses:</source>
          <target state="translated">典型用途:</target>
        </trans-unit>
        <trans-unit id="ac8bd79c1f65ce75577f89953181b5836814ced2" translate="yes" xml:space="preserve">
          <source>Typically Futures are used to enable low-level callback-based code (e.g. in protocols implemented using asyncio &lt;a href=&quot;asyncio-protocol#asyncio-transports-protocols&quot;&gt;transports&lt;/a&gt;) to interoperate with high-level async/await code.</source>
          <target state="translated">通常，Future用于启用基于低级回调的代码（例如，在使用asyncio &lt;a href=&quot;asyncio-protocol#asyncio-transports-protocols&quot;&gt;传输&lt;/a&gt;实现的协议中）以与高级async / await代码进行互操作。</target>
        </trans-unit>
        <trans-unit id="aa0d8913086c02de73375f9a037bf2d54a4d4b86" translate="yes" xml:space="preserve">
          <source>Typically, &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; is a list of directory names as strings. This module also allows an item of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; to be a string naming a ZIP file archive. The ZIP archive can contain a subdirectory structure to support package imports, and a path within the archive can be specified to only import from a subdirectory. For example, the path &lt;code&gt;example.zip/lib/&lt;/code&gt; would only import from the &lt;code&gt;lib/&lt;/code&gt; subdirectory within the archive.</source>
          <target state="translated">通常，&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;是字符串形式的目录名称列表。该模块还允许&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;项成为命名ZIP文件存档的字符串。ZIP归档文件可以包含一个子目录结构以支持程序包导入，并且可以指定归档文件中的路径以仅从子目录导入。例如，路径 &lt;code&gt;example.zip/lib/&lt;/code&gt; 将仅从存档中的 &lt;code&gt;lib/&lt;/code&gt; 子目录导入。</target>
        </trans-unit>
        <trans-unit id="307c90d60f24c34409c0cbbb907e2ebee94f9501" translate="yes" xml:space="preserve">
          <source>Typically, a mail user agent application moves all of the messages in the &lt;code&gt;new&lt;/code&gt; subdirectory to the &lt;code&gt;cur&lt;/code&gt; subdirectory after the first time the user opens and closes the mailbox, recording that the messages are old whether or not they&amp;rsquo;ve actually been read. Each message in &lt;code&gt;cur&lt;/code&gt; has an &amp;ldquo;info&amp;rdquo; section added to its file name to store information about its state. (Some mail readers may also add an &amp;ldquo;info&amp;rdquo; section to messages in &lt;code&gt;new&lt;/code&gt;.) The &amp;ldquo;info&amp;rdquo; section may take one of two forms: it may contain &amp;ldquo;2,&amp;rdquo; followed by a list of standardized flags (e.g., &amp;ldquo;2,FR&amp;rdquo;) or it may contain &amp;ldquo;1,&amp;rdquo; followed by so-called experimental information. Standard flags for Maildir messages are as follows:</source>
          <target state="translated">通常，邮件用户代理应用程序在用户第一次打开和关闭邮箱之后，将 &lt;code&gt;new&lt;/code&gt; 子目录中的所有消息都移至 &lt;code&gt;cur&lt;/code&gt; 子目录中，记录该消息是旧的，而不管它们是否已被实际读取。 &lt;code&gt;cur&lt;/code&gt; 中的每个消息都在其文件名中添加了一个&amp;ldquo; info&amp;rdquo;部分，以存储有关其状态的信息。 （某些邮件阅读器可能还会在 &lt;code&gt;new&lt;/code&gt; 邮件中添加&amp;ldquo;信息&amp;rdquo;部分。）&amp;ldquo;信息&amp;rdquo;部分可能采用以下两种形式之一：可能包含&amp;ldquo; 2&amp;rdquo;，后跟一系列标准化标志（例如，&amp;ldquo; 2&amp;rdquo; FR&amp;rdquo;），也可以包含&amp;ldquo; 1&amp;rdquo;，后跟所谓的实验信息。 Maildir消息的标准标志如下：</target>
        </trans-unit>
        <trans-unit id="c9569066be942f47eac360ee7e9604e189cacf75" translate="yes" xml:space="preserve">
          <source>Typically, clamping occurs when an exponent falls outside the context&amp;rsquo;s &lt;code&gt;Emin&lt;/code&gt; and &lt;code&gt;Emax&lt;/code&gt; limits. If possible, the exponent is reduced to fit by adding zeros to the coefficient.</source>
          <target state="translated">通常，当指数超出上下文的 &lt;code&gt;Emin&lt;/code&gt; 和 &lt;code&gt;Emax&lt;/code&gt; 限制时，就会发生钳位。如果可能，通过将零加到系数上来减小指数以适合。</target>
        </trans-unit>
        <trans-unit id="16226deec705b103a976d79100c8b31ccbd60936" translate="yes" xml:space="preserve">
          <source>Typically, this routine is used to process each portion of a request URI path, for example to treat the path as a series of dictionary keys. This routine modifies the passed-in environment to make it suitable for invoking another WSGI application that is located at the target URI. For example, if there is a WSGI application at &lt;code&gt;/foo&lt;/code&gt;, and the request URI path is &lt;code&gt;/foo/bar/baz&lt;/code&gt;, and the WSGI application at &lt;code&gt;/foo&lt;/code&gt; calls &lt;a href=&quot;#wsgiref.util.shift_path_info&quot;&gt;&lt;code&gt;shift_path_info()&lt;/code&gt;&lt;/a&gt;, it will receive the string &amp;ldquo;bar&amp;rdquo;, and the environment will be updated to be suitable for passing to a WSGI application at &lt;code&gt;/foo/bar&lt;/code&gt;. That is, &lt;code&gt;SCRIPT_NAME&lt;/code&gt; will change from &lt;code&gt;/foo&lt;/code&gt; to &lt;code&gt;/foo/bar&lt;/code&gt;, and &lt;code&gt;PATH_INFO&lt;/code&gt; will change from &lt;code&gt;/bar/baz&lt;/code&gt; to &lt;code&gt;/baz&lt;/code&gt;.</source>
          <target state="translated">通常，此例程用于处理请求URI路径的每个部分，例如，将该路径视为一系列字典键。该例程修改了传入的环境，使其适合于调用位于目标URI处的另一个WSGI应用程序。例如，如果在 &lt;code&gt;/foo&lt;/code&gt; 处有一个WSGI应用程序，并且请求URI路径是 &lt;code&gt;/foo/bar/baz&lt;/code&gt; ，并且在 &lt;code&gt;/foo&lt;/code&gt; 处的WSGI应用程序调用&lt;a href=&quot;#wsgiref.util.shift_path_info&quot;&gt; &lt;code&gt;shift_path_info()&lt;/code&gt; &lt;/a&gt;，它将接收字符串&amp;ldquo; bar&amp;rdquo;和环境将更新为适合传递到 &lt;code&gt;/foo/bar&lt;/code&gt; 的WSGI应用程序。也就是说， &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 将从 &lt;code&gt;/foo&lt;/code&gt; 更改为 &lt;code&gt;/foo/bar&lt;/code&gt; ，并且 &lt;code&gt;PATH_INFO&lt;/code&gt; 将从 &lt;code&gt;/bar/baz&lt;/code&gt; 更改为 &lt;code&gt;/baz&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c25227e4d8caebe673fedb75cae4fb249b96c0f" translate="yes" xml:space="preserve">
          <source>Typically, you should use an &amp;ldquo;/usr/bin/env python2&amp;rdquo; or &amp;ldquo;/usr/bin/env python3&amp;rdquo;, depending on whether your code is written for Python 2 or 3.</source>
          <target state="translated">通常，应使用&amp;ldquo; / usr / bin / env python2&amp;rdquo;或&amp;ldquo; / usr / bin / env python3&amp;rdquo;，具体取决于您的代码是针对Python 2还是3编写的。</target>
        </trans-unit>
        <trans-unit id="e713da74eea6cd17134e526d4f4bfa85ea29e095" translate="yes" xml:space="preserve">
          <source>U16, utf16</source>
          <target state="translated">U16,utf16</target>
        </trans-unit>
        <trans-unit id="c72fcac268773b2862516cee4a159e76b48faf49" translate="yes" xml:space="preserve">
          <source>U32, utf32</source>
          <target state="translated">U32、utf32</target>
        </trans-unit>
        <trans-unit id="f11edf3411c63e0f8d0db9d99f22c6d068007f5f" translate="yes" xml:space="preserve">
          <source>U7, unicode-1-1-utf-7</source>
          <target state="translated">U7,unicode-1-1-utf-7。</target>
        </trans-unit>
        <trans-unit id="d24ccdbf9775e02769365300203e1554ee400e3d" translate="yes" xml:space="preserve">
          <source>U8, UTF, utf8, cp65001</source>
          <target state="translated">U8、UTF、utf8、cp65001。</target>
        </trans-unit>
        <trans-unit id="6acf01764f7a6626f0891a32f61a073dc0762d8b" translate="yes" xml:space="preserve">
          <source>UDP Echo Client</source>
          <target state="translated">UDP回音客户端</target>
        </trans-unit>
        <trans-unit id="343e5cce60ceccd79ae37a898828ecb0fca0950a" translate="yes" xml:space="preserve">
          <source>UDP Echo Server</source>
          <target state="translated">UDP回音服务器</target>
        </trans-unit>
        <trans-unit id="ba2e61c0219a993878c029ea5544b89e5fd3ae93" translate="yes" xml:space="preserve">
          <source>ULP stands for &amp;ldquo;Unit in the Last Place&amp;rdquo;.</source>
          <target state="translated">ULP代表&amp;ldquo;最后的单位&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7d0bd1a5584aa8e277199b8bce0be0eebe6eae7c" translate="yes" xml:space="preserve">
          <source>UNC drive names are not considered:</source>
          <target state="translated">不考虑UNC驱动器名称。</target>
        </trans-unit>
        <trans-unit id="0d532d59e790c855bac6f2fd3a3d63a663ac152d" translate="yes" xml:space="preserve">
          <source>UNC shares always have a root:</source>
          <target state="translated">联创股份总是有一个根。</target>
        </trans-unit>
        <trans-unit id="1754f7546fc5579a80084a7fbd2c4dbd78786101" translate="yes" xml:space="preserve">
          <source>UNC shares are also considered drives:</source>
          <target state="translated">联创股份也被认为是驱动器。</target>
        </trans-unit>
        <trans-unit id="46423b62f1108237d6637f21aa348b01ed444951" translate="yes" xml:space="preserve">
          <source>URL Parsing</source>
          <target state="translated">URL解析</target>
        </trans-unit>
        <trans-unit id="ac79cb4725903fc4cbc65532def1e7734288ed43" translate="yes" xml:space="preserve">
          <source>URL Quoting</source>
          <target state="translated">URL引用</target>
        </trans-unit>
        <trans-unit id="c4b7ac1e2711f01d24c210e143cb9a34515550f7" translate="yes" xml:space="preserve">
          <source>URL linking to a comment from the server explaining the function of this cookie, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">链接到服务器上解释此cookie功能的注释的URL或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39ca3350b8900002d53d7c65c147fe5c8b6f43b0" translate="yes" xml:space="preserve">
          <source>URL of the resource retrieved, commonly used to determine if a redirect was followed.</source>
          <target state="translated">检索到的资源的URL,通常用于确定是否有重定向。</target>
        </trans-unit>
        <trans-unit id="8681bd94130610c53bd7f38805813627eb6cdf42" translate="yes" xml:space="preserve">
          <source>URL opening with automatic cookie handling.</source>
          <target state="translated">URL打开,自动处理cookie。</target>
        </trans-unit>
        <trans-unit id="8c6ff6209d4df1bcf1d35de653b99ca192c7aa0c" translate="yes" xml:space="preserve">
          <source>URL scheme specifier</source>
          <target state="translated">URL方案指定器</target>
        </trans-unit>
        <trans-unit id="8fedebad85ba6d8c62697769bc62126e584a5f4b" translate="yes" xml:space="preserve">
          <source>URL with no fragment</source>
          <target state="translated">没有碎片的URL</target>
        </trans-unit>
        <trans-unit id="5575b942a5f6d8077af646b856fee8b432912c99" translate="yes" xml:space="preserve">
          <source>UTC is Coordinated Universal Time (formerly known as Greenwich Mean Time, or GMT). The acronym UTC is not a mistake but a compromise between English and French.</source>
          <target state="translated">UTC是协调世界时间(以前称为格林威治时间,或GMT)。UTC的缩写不是错误,而是英语和法语的折衷。</target>
        </trans-unit>
        <trans-unit id="7bd3d96c46d2e3221efb69d9b12e15082127b8e4" translate="yes" xml:space="preserve">
          <source>UTC offset in the form &lt;code&gt;&amp;plusmn;HHMM[SS[.ffffff]]&lt;/code&gt; (empty string if the object is naive).</source>
          <target state="translated">UTC偏移量，格式为 &lt;code&gt;&amp;plusmn;HHMM[SS[.ffffff]]&lt;/code&gt; （如果对象是天真对象，则为空字符串）。</target>
        </trans-unit>
        <trans-unit id="de4a45e716017695cfee4bc84f1a4e0c8e1e9b9a" translate="yes" xml:space="preserve">
          <source>UTF-16BE</source>
          <target state="translated">UTF-16BE</target>
        </trans-unit>
        <trans-unit id="6af12beb19d40aa853839c482e864ce703f4d2a9" translate="yes" xml:space="preserve">
          <source>UTF-16LE</source>
          <target state="translated">UTF-16LE</target>
        </trans-unit>
        <trans-unit id="9e4d8d4f017185a065b570c771eb332a1c842bec" translate="yes" xml:space="preserve">
          <source>UTF-32BE</source>
          <target state="translated">UTF-32BE</target>
        </trans-unit>
        <trans-unit id="35cabe85c31dfe3f6b86974de33fef51a0f7276a" translate="yes" xml:space="preserve">
          <source>UTF-32LE</source>
          <target state="translated">UTF-32LE</target>
        </trans-unit>
        <trans-unit id="715c491a11c1b08bfcd9854613597d9d8b9e6f02" translate="yes" xml:space="preserve">
          <source>UUID: &lt;code&gt;{FB605B73-AAC2-49A6-9A2F-25416AEA0573}&lt;/code&gt;</source>
          <target state="translated">UUID: &lt;code&gt;{FB605B73-AAC2-49A6-9A2F-25416AEA0573}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="515451058797b204e188dd70f8d20f32dacca327" translate="yes" xml:space="preserve">
          <source>Ukrainian</source>
          <target state="translated">Ukrainian</target>
        </trans-unit>
        <trans-unit id="180209844089ebe0890b16d2a26e4bdbe691991b" translate="yes" xml:space="preserve">
          <source>Ultimately, the responsibility of how to interpret the annotations (if at all) is the responsibility of the tool or library encountering the &lt;code&gt;Annotated&lt;/code&gt; type. A tool or library encountering an &lt;code&gt;Annotated&lt;/code&gt; type can scan through the annotations to determine if they are of interest (e.g., using &lt;code&gt;isinstance()&lt;/code&gt;).</source>
          <target state="translated">最终，如何解释注释（如果有的话）的责任是遇到 &lt;code&gt;Annotated&lt;/code&gt; 类型的工具或库的责任。遇到带 &lt;code&gt;Annotated&lt;/code&gt; 类型的工具或库可以浏览注释以确定它们是否有意义（例如，使用 &lt;code&gt;isinstance()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="21c390ed919f285d1fbd2bc30ead55ffc59b9262" translate="yes" xml:space="preserve">
          <source>Unary addition and subtraction are shortcuts for adding an empty counter or subtracting from an empty counter.</source>
          <target state="translated">单元加减法是加空计数器或减空计数器的快捷方式。</target>
        </trans-unit>
        <trans-unit id="76f4685e58374089d5c55b4161cd981dc6132724" translate="yes" xml:space="preserve">
          <source>Unary numeric methods: &lt;code&gt;__neg__&lt;/code&gt;, &lt;code&gt;__pos__&lt;/code&gt; and &lt;code&gt;__invert__&lt;/code&gt;</source>
          <target state="translated">一元数值方法： &lt;code&gt;__neg__&lt;/code&gt; ， &lt;code&gt;__pos__&lt;/code&gt; 和 &lt;code&gt;__invert__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ec04384d60dde2abd489f1b93a17f46f88408ec" translate="yes" xml:space="preserve">
          <source>Unary operations take the top of the stack, apply the operation, and push the result back on the stack.</source>
          <target state="translated">单元操作取堆栈的顶部,应用操作,并将结果推回堆栈。</target>
        </trans-unit>
        <trans-unit id="4a4dc37257d5fdb377e941ad74421dd9833ea063" translate="yes" xml:space="preserve">
          <source>Unary operator tokens. &lt;a href=&quot;#ast.Not&quot;&gt;&lt;code&gt;Not&lt;/code&gt;&lt;/a&gt; is the &lt;code&gt;not&lt;/code&gt; keyword, &lt;a href=&quot;#ast.Invert&quot;&gt;&lt;code&gt;Invert&lt;/code&gt;&lt;/a&gt; is the &lt;code&gt;~&lt;/code&gt; operator.</source>
          <target state="translated">一元运算符。&lt;a href=&quot;#ast.Not&quot;&gt; &lt;code&gt;Not&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;not&lt;/code&gt; 关键字，&lt;a href=&quot;#ast.Invert&quot;&gt; &lt;code&gt;Invert&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;~&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="af724c9a541ce2ab11909206f58df607bfbac91b" translate="yes" xml:space="preserve">
          <source>UnboundLocalError</source>
          <target state="translated">UnboundLocalError</target>
        </trans-unit>
        <trans-unit id="0bbb24dbe913bf1acad1b3813b19242195efde3d" translate="yes" xml:space="preserve">
          <source>Uncomment Region</source>
          <target state="translated">未评论地区</target>
        </trans-unit>
        <trans-unit id="09163dc46bc3ebc70b19a70c153e7b0ff2a536a0" translate="yes" xml:space="preserve">
          <source>Unconditionally skip the decorated test. &lt;em&gt;reason&lt;/em&gt; should describe why the test is being skipped.</source>
          <target state="translated">无条件跳过装饰测试。&lt;em&gt;原因&lt;/em&gt;应说明为何跳过测试。</target>
        </trans-unit>
        <trans-unit id="b33dbdee390d46cbc4b2f0c8d71034b96e387e3a" translate="yes" xml:space="preserve">
          <source>Under System Preferences: Dock, one can set &amp;ldquo;Prefer tabs when opening documents&amp;rdquo; to &amp;ldquo;Always&amp;rdquo;. This setting is not compatible with the tk/tkinter GUI framework used by IDLE, and it breaks a few IDLE features.</source>
          <target state="translated">在&amp;ldquo;系统偏好设置：基座&amp;rdquo;下，可以将&amp;ldquo;打开文档时首选选项卡&amp;rdquo;设置为&amp;ldquo;始终&amp;rdquo;。此设置与IDLE使用的tk / tkinter GUI框架不兼容，并且破坏了一些IDLE功能。</target>
        </trans-unit>
        <trans-unit id="09ff4fd5fd078f6a770a49eda709711308d815f4" translate="yes" xml:space="preserve">
          <source>Under Unix, graphical browsers are preferred under X11, but text-mode browsers will be used if graphical browsers are not available or an X11 display isn&amp;rsquo;t available. If text-mode browsers are used, the calling process will block until the user exits the browser.</source>
          <target state="translated">在Unix下，图形浏览器是X11的首选，但如果图形浏览器不可用或X11显示器不可用，则将使用文本模式浏览器。如果使用文本模式浏览器，则调用过程将一直阻塞，直到用户退出浏览器为止。</target>
        </trans-unit>
        <trans-unit id="cc774a2bad012898ce4ca44d59cd0ee58a92ba80" translate="yes" xml:space="preserve">
          <source>Under Windows the small integer returned by this method cannot be used where a file descriptor can be used (such as &lt;a href=&quot;os#os.fdopen&quot;&gt;&lt;code&gt;os.fdopen()&lt;/code&gt;&lt;/a&gt;). Unix does not have this limitation.</source>
          <target state="translated">在Windows下，不能在可以使用文件描述符的地方使用此方法返回的小整数（例如&lt;a href=&quot;os#os.fdopen&quot;&gt; &lt;code&gt;os.fdopen()&lt;/code&gt; &lt;/a&gt;）。Unix没有此限制。</target>
        </trans-unit>
        <trans-unit id="43487233aaa2dc1293a621ac76f9af16f9598bae" translate="yes" xml:space="preserve">
          <source>Under Windows, if the &lt;em&gt;winerror&lt;/em&gt; constructor argument is an integer, the &lt;a href=&quot;#OSError.errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; attribute is determined from the Windows error code, and the &lt;em&gt;errno&lt;/em&gt; argument is ignored. On other platforms, the &lt;em&gt;winerror&lt;/em&gt; argument is ignored, and the &lt;a href=&quot;#OSError.winerror&quot;&gt;&lt;code&gt;winerror&lt;/code&gt;&lt;/a&gt; attribute does not exist.</source>
          <target state="translated">在Windows下，如果&lt;em&gt;winerror&lt;/em&gt;构造函数参数是整数，则&lt;a href=&quot;#OSError.errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;属性由Windows错误代码确定，而&lt;em&gt;errno&lt;/em&gt;参数将被忽略。在其他平台上，将忽略&lt;em&gt;winerror&lt;/em&gt;参数，并且&lt;a href=&quot;#OSError.winerror&quot;&gt; &lt;code&gt;winerror&lt;/code&gt; &lt;/a&gt;属性不存在。</target>
        </trans-unit>
        <trans-unit id="122a25820ac6c0450f8cdb99f851d87ee3865318" translate="yes" xml:space="preserve">
          <source>Under Windows, this gives you the native Windows error code. The &lt;a href=&quot;#OSError.errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; attribute is then an approximate translation, in POSIX terms, of that native error code.</source>
          <target state="translated">在Windows下，这将为您提供本机Windows错误代码。该&lt;a href=&quot;#OSError.errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;属性是那么近似翻译，在POSIX术语，那本地错误代码。</target>
        </trans-unit>
        <trans-unit id="84a4f0c399ddd6228df271cff58e6d0b91d19d11" translate="yes" xml:space="preserve">
          <source>Under all platforms, you can override the character encoding by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONIOENCODING&quot; id=&quot;index-32&quot;&gt;&lt;code&gt;PYTHONIOENCODING&lt;/code&gt;&lt;/a&gt; environment variable before starting Python or by using the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; command line option and &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUTF8&quot; id=&quot;index-33&quot;&gt;&lt;code&gt;PYTHONUTF8&lt;/code&gt;&lt;/a&gt; environment variable. However, for the Windows console, this only applies when &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO&quot; id=&quot;index-34&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSSTDIO&lt;/code&gt;&lt;/a&gt; is also set.</source>
          <target state="translated">在所有平台上，您可以通过在启动Python之前设置&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONIOENCODING&quot; id=&quot;index-32&quot;&gt; &lt;code&gt;PYTHONIOENCODING&lt;/code&gt; &lt;/a&gt;环境变量或使用新的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; 命令行选项和&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUTF8&quot; id=&quot;index-33&quot;&gt; &lt;code&gt;PYTHONUTF8&lt;/code&gt; &lt;/a&gt;环境变量来覆盖字符编码。但是，对于Windows控制台，这仅在还设置了&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO&quot; id=&quot;index-34&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSSTDIO&lt;/code&gt; &lt;/a&gt;时适用。</target>
        </trans-unit>
        <trans-unit id="2046c226117f68ba6beddec1fe7aaa2a0f58d806" translate="yes" xml:space="preserve">
          <source>Under all platforms, you can override the character encoding by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONIOENCODING&quot; id=&quot;index-33&quot;&gt;&lt;code&gt;PYTHONIOENCODING&lt;/code&gt;&lt;/a&gt; environment variable before starting Python or by using the new &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; command line option and &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONUTF8&quot; id=&quot;index-34&quot;&gt;&lt;code&gt;PYTHONUTF8&lt;/code&gt;&lt;/a&gt; environment variable. However, for the Windows console, this only applies when &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO&quot; id=&quot;index-35&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSSTDIO&lt;/code&gt;&lt;/a&gt; is also set.</source>
          <target state="translated">在所有平台上，您可以通过在启动Python之前设置&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONIOENCODING&quot; id=&quot;index-33&quot;&gt; &lt;code&gt;PYTHONIOENCODING&lt;/code&gt; &lt;/a&gt;环境变量或使用新的&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; 命令行选项和&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONUTF8&quot; id=&quot;index-34&quot;&gt; &lt;code&gt;PYTHONUTF8&lt;/code&gt; &lt;/a&gt;环境变量来覆盖字符编码。但是，对于Windows控制台，这仅在还设置了&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO&quot; id=&quot;index-35&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSSTDIO&lt;/code&gt; &lt;/a&gt;时适用。</target>
        </trans-unit>
        <trans-unit id="86c529a5c56c8e1acf4f20d73e1f5a6a05aad70c" translate="yes" xml:space="preserve">
          <source>Under composition</source>
          <target state="translated">构成项下</target>
        </trans-unit>
        <trans-unit id="3bb49fa79f069f1e503b56cda42fc86a007f633b" translate="yes" xml:space="preserve">
          <source>Under some conditions &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; as well as the original values &lt;code&gt;__stdin__&lt;/code&gt;, &lt;code&gt;__stdout__&lt;/code&gt; and &lt;code&gt;__stderr__&lt;/code&gt; can be &lt;code&gt;None&lt;/code&gt;. It is usually the case for Windows GUI apps that aren&amp;rsquo;t connected to a console and Python apps started with &lt;strong&gt;pythonw&lt;/strong&gt;.</source>
          <target state="translated">在一些条件下 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 以及原始值 &lt;code&gt;__stdin__&lt;/code&gt; ， &lt;code&gt;__stdout__&lt;/code&gt; 和 &lt;code&gt;__stderr__&lt;/code&gt; 可以是 &lt;code&gt;None&lt;/code&gt; 。未连接到控制台的Windows GUI应用程序和以&lt;strong&gt;pythonw&lt;/strong&gt;开头的Python应用程序通常是这种情况。</target>
        </trans-unit>
        <trans-unit id="793bf299721caabec9e054ab03d026686481a8fa" translate="yes" xml:space="preserve">
          <source>Under the covers, &lt;a href=&quot;#doctest.DocTestSuite&quot;&gt;&lt;code&gt;DocTestSuite()&lt;/code&gt;&lt;/a&gt; creates a &lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; out of &lt;code&gt;doctest.DocTestCase&lt;/code&gt; instances, and &lt;code&gt;DocTestCase&lt;/code&gt; is a subclass of &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;DocTestCase&lt;/code&gt; isn&amp;rsquo;t documented here (it&amp;rsquo;s an internal detail), but studying its code can answer questions about the exact details of &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; integration.</source>
          <target state="translated">在&lt;a href=&quot;#doctest.DocTestSuite&quot;&gt; &lt;code&gt;DocTestSuite()&lt;/code&gt; &lt;/a&gt;，DocTestSuite（）在 &lt;code&gt;doctest.DocTestCase&lt;/code&gt; 实例之外创建了&lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; &lt;/a&gt;，而 &lt;code&gt;DocTestCase&lt;/code&gt; 是&lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;的子类。 &lt;code&gt;DocTestCase&lt;/code&gt; 不在这里（它是一个内部的细节）的记载，但研究它的代码可以回答有关的具体细节问题，&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的集成。</target>
        </trans-unit>
        <trans-unit id="f37c5cd1f45c987d07df9e3363045593abcab226" translate="yes" xml:space="preserve">
          <source>Underline mode</source>
          <target state="translated">下划线模式</target>
        </trans-unit>
        <trans-unit id="cdc95b3422722b03a214a7379a614933ad297732" translate="yes" xml:space="preserve">
          <source>Underlying encoded files are always opened in binary mode. No automatic conversion of &lt;code&gt;'\n'&lt;/code&gt; is done on reading and writing. The &lt;em&gt;mode&lt;/em&gt; argument may be any binary mode acceptable to the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function; the &lt;code&gt;'b'&lt;/code&gt; is automatically added.</source>
          <target state="translated">底层编码文件始终以二进制模式打开。读写时不会自动转换 &lt;code&gt;'\n'&lt;/code&gt; 。所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何二进制模式可接受的内置&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; 的&lt;/a&gt;功能; 在 &lt;code&gt;'b'&lt;/code&gt; 被自动添加。</target>
        </trans-unit>
        <trans-unit id="1c426c5d3245f89c66b8d44eb9a7418a57214883" translate="yes" xml:space="preserve">
          <source>Underlying file descriptor.</source>
          <target state="translated">基本文件描述符:</target>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="facdf490605511ac7953e25b9d58432a61076c4e" translate="yes" xml:space="preserve">
          <source>Undo (repeatedly) the last turtle action(s). Number of available undo actions is determined by the size of the undobuffer.</source>
          <target state="translated">撤销(重复)上一个海龟动作。可用的撤销操作的数量由 undobuffer 的大小决定。</target>
        </trans-unit>
        <trans-unit id="12ffa2fcbfc6a89513586da0ea5253ed26d4950d" translate="yes" xml:space="preserve">
          <source>Undo the last change to the current window. A maximum of 1000 changes may be undone.</source>
          <target state="translated">撤销对当前窗口的最后一次更改。最多可以撤销1000次更改。</target>
        </trans-unit>
        <trans-unit id="5173f55ca599f2baa4e8cf060601f130743f6e5c" translate="yes" xml:space="preserve">
          <source>Undocumented Modules</source>
          <target state="translated">未记录的模块</target>
        </trans-unit>
        <trans-unit id="7afa636f1dcd288a19ebf51b051831aa190255a4" translate="yes" xml:space="preserve">
          <source>Unescape &lt;code&gt;'&amp;amp;amp;'&lt;/code&gt;, &lt;code&gt;'&amp;amp;lt;'&lt;/code&gt;, and &lt;code&gt;'&amp;amp;gt;'&lt;/code&gt; in a string of data.</source>
          <target state="translated">转义 &lt;code&gt;'&amp;amp;amp;'&lt;/code&gt; ， &lt;code&gt;'&amp;amp;lt;'&lt;/code&gt; 和 &lt;code&gt;'&amp;amp;gt;'&lt;/code&gt; 在数据字符串中。</target>
        </trans-unit>
        <trans-unit id="1ae07519eb339aa0a6d65a7ecc51b6a9a2141e8c" translate="yes" xml:space="preserve">
          <source>Unfinished errata to &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2965的&lt;/strong&gt;&lt;/a&gt;未完成勘误表。</target>
        </trans-unit>
        <trans-unit id="760f925ad5f161e1f96d23cf3994740c822322b1" translate="yes" xml:space="preserve">
          <source>Unfortunately, a CGI script will generally not run when you try it from the command line, and a script that works perfectly from the command line may fail mysteriously when run from the server. There&amp;rsquo;s one reason why you should still test your script from the command line: if it contains a syntax error, the Python interpreter won&amp;rsquo;t execute it at all, and the HTTP server will most likely send a cryptic error to the client.</source>
          <target state="translated">不幸的是，当您从命令行尝试运行CGI脚本时，通常不会运行它，而从服务器运行时，在命令行中完美运行的脚本可能会神秘地失败。为什么仍然要从命令行测试脚本是有一个原因的：如果脚本包含语法错误，Python解释器将根本不会执行该脚本，并且HTTP服务器很可能会向客户端发送一个隐式错误。</target>
        </trans-unit>
        <trans-unit id="4cb76619273a40dbd3b69446939d186f550fa921" translate="yes" xml:space="preserve">
          <source>Unfortunately, in the current implementation of &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; it is not possible to hand over an arbitrary Python variable to a widget through a &lt;code&gt;variable&lt;/code&gt; or &lt;code&gt;textvariable&lt;/code&gt; option. The only kinds of variables for which this works are variables that are subclassed from a class called Variable, defined in &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不幸的是，在当前的&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;实现中，不可能通过 &lt;code&gt;variable&lt;/code&gt; 或 &lt;code&gt;textvariable&lt;/code&gt; 选项将任意Python变量移交给小部件。唯一适用于此类型的变量是从&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; 中&lt;/a&gt;定义的名为Variable的类中继承的变量。</target>
        </trans-unit>
        <trans-unit id="6c4109db22111ac0157ddd1a1b60ab5ea903954f" translate="yes" xml:space="preserve">
          <source>Unfreeze the objects in the permanent generation, put them back into the oldest generation.</source>
          <target state="translated">解冻永久一代中的对象,把它们放回最老一代。</target>
        </trans-unit>
        <trans-unit id="e7fc7822d3ca51d28bdd7a9ee19f9336a4230d3b" translate="yes" xml:space="preserve">
          <source>Unicode character</source>
          <target state="translated">统一码字符</target>
        </trans-unit>
        <trans-unit id="9e8265bf80e6bc5985b5427e35abc3cdd9d7da17" translate="yes" xml:space="preserve">
          <source>Unicode issues</source>
          <target state="translated">统一码问题</target>
        </trans-unit>
        <trans-unit id="b5b526768b1969cfa8a08fe014a311e1718f9ed9" translate="yes" xml:space="preserve">
          <source>UnicodeDecodeError</source>
          <target state="translated">UnicodeDecodeError</target>
        </trans-unit>
        <trans-unit id="f9973e2691d99be91e5b5ef9ad2cbe53ffe3fadc" translate="yes" xml:space="preserve">
          <source>UnicodeEncodeError</source>
          <target state="translated">UnicodeEncodeError</target>
        </trans-unit>
        <trans-unit id="58283ecfa32971a53446570a674574fdd0222dda" translate="yes" xml:space="preserve">
          <source>UnicodeError</source>
          <target state="translated">UnicodeError</target>
        </trans-unit>
        <trans-unit id="f1716ad72e62babae0b6ebd36034174f931ab674" translate="yes" xml:space="preserve">
          <source>UnicodeError.encoding</source>
          <target state="translated">UnicodeError.encoding</target>
        </trans-unit>
        <trans-unit id="fe9d3d97c338283ce266f47d2b1d395c73fb7f1d" translate="yes" xml:space="preserve">
          <source>UnicodeError.end</source>
          <target state="translated">UnicodeError.end</target>
        </trans-unit>
        <trans-unit id="656ba97916742be36d330b15af168cbc79f8a2ab" translate="yes" xml:space="preserve">
          <source>UnicodeError.object</source>
          <target state="translated">UnicodeError.object</target>
        </trans-unit>
        <trans-unit id="14cca87e64dbb585003f7df820b8f5a57f0aab80" translate="yes" xml:space="preserve">
          <source>UnicodeError.reason</source>
          <target state="translated">UnicodeError.reason</target>
        </trans-unit>
        <trans-unit id="3b8f61fae443c3cca69d6e573eb7e4f82cd7d379" translate="yes" xml:space="preserve">
          <source>UnicodeError.start</source>
          <target state="translated">UnicodeError.start</target>
        </trans-unit>
        <trans-unit id="86ef62e8ac070df397f526dd95d38ffc3c15aeee" translate="yes" xml:space="preserve">
          <source>UnicodeTranslateError</source>
          <target state="translated">UnicodeTranslateError</target>
        </trans-unit>
        <trans-unit id="b71d2cc5fd619eca3b73d5c3091b18067741280b" translate="yes" xml:space="preserve">
          <source>UnicodeWarning</source>
          <target state="translated">UnicodeWarning</target>
        </trans-unit>
        <trans-unit id="23e60ae32a7af57bd10051941d5faa9269e1cbba" translate="yes" xml:space="preserve">
          <source>Unified Chinese</source>
          <target state="translated">统一中文</target>
        </trans-unit>
        <trans-unit id="48bf340eb1af34013d116721a6b365f7bd850c4d" translate="yes" xml:space="preserve">
          <source>Unified diffs are a compact way of showing just the lines that have changed plus a few lines of context. The changes are shown in an inline style (instead of separate before/after blocks). The number of context lines is set by &lt;em&gt;n&lt;/em&gt; which defaults to three.</source>
          <target state="translated">统一差异是仅显示已更改的行以及上下文的几行的紧凑方式。更改以内联样式显示（而不是单独的before / after块）。上下文行的数量由&lt;em&gt;n&lt;/em&gt;设置，默认为3。</target>
        </trans-unit>
        <trans-unit id="b23a036b5a5fc3d186211fcee99032ae543b0068" translate="yes" xml:space="preserve">
          <source>Union type; &lt;code&gt;Union[X, Y]&lt;/code&gt; means either X or Y.</source>
          <target state="translated">联合类型； &lt;code&gt;Union[X, Y]&lt;/code&gt; 表示X或Y。</target>
        </trans-unit>
        <trans-unit id="0eb559f7d253f052b5fc0c24eb1006d8b21bb4e2" translate="yes" xml:space="preserve">
          <source>Unions of a single argument vanish, e.g.:</source>
          <target state="translated">单一论点的联合体消失,如。</target>
        </trans-unit>
        <trans-unit id="e074348d912505b595223b5c9df37529adad25df" translate="yes" xml:space="preserve">
          <source>Unions of unions are flattened, e.g.:</source>
          <target state="translated">工会的工会是扁平化的,如。</target>
        </trans-unit>
        <trans-unit id="a6013fd2beb609fb6c408bc5428b39a0ba92fa33" translate="yes" xml:space="preserve">
          <source>UniqueAddressHeader</source>
          <target state="translated">UniqueAddressHeader</target>
        </trans-unit>
        <trans-unit id="8cadb2b420289f9e588a18d9273812d40cde290f" translate="yes" xml:space="preserve">
          <source>UniqueDateHeader</source>
          <target state="translated">UniqueDateHeader</target>
        </trans-unit>
        <trans-unit id="f6e35626af402641832362022f7bb51f7666a5d5" translate="yes" xml:space="preserve">
          <source>UniqueSingleAddressHeader</source>
          <target state="translated">UniqueSingleAddressHeader</target>
        </trans-unit>
        <trans-unit id="5e5b15a19084f3693eb1aaa731c3bfb0eff4150a" translate="yes" xml:space="preserve">
          <source>UniqueUnstructuredHeader</source>
          <target state="translated">UniqueUnstructuredHeader</target>
        </trans-unit>
        <trans-unit id="3db9bdfab0f022f13a4bb48d254cae9da8cb6639" translate="yes" xml:space="preserve">
          <source>Unit separator</source>
          <target state="translated">单元分离器</target>
        </trans-unit>
        <trans-unit id="dc4f2bd7bfcffb7a6d6e83447eac85d3afa07920" translate="yes" xml:space="preserve">
          <source>Unittest API</source>
          <target state="translated">Unittest API</target>
        </trans-unit>
        <trans-unit id="e675c3dd2d602712e85f0cdbca3a0feb954afda6" translate="yes" xml:space="preserve">
          <source>Unittest supports simple test discovery. In order to be compatible with test discovery, all of the test files must be &lt;a href=&quot;https://docs.python.org/3.8/tutorial/modules.html#tut-modules&quot;&gt;modules&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/tutorial/modules.html#tut-packages&quot;&gt;packages&lt;/a&gt; (including &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;) importable from the top-level directory of the project (this means that their filenames must be valid &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;identifiers&lt;/a&gt;).</source>
          <target state="translated">Unittest支持简单的测试发现。为了与测试发现兼容，所有测试文件都必须是可从项目的顶级目录导入的&lt;a href=&quot;https://docs.python.org/3.8/tutorial/modules.html#tut-modules&quot;&gt;模块&lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/tutorial/modules.html#tut-packages&quot;&gt;包&lt;/a&gt;（包括&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;名称空间包&lt;/a&gt;）（这意味着它们的文件名必须是有效的&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;标识符&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cda17c4e2fe131b144d141e5a91058b9f4de3b1a" translate="yes" xml:space="preserve">
          <source>Unittest supports simple test discovery. In order to be compatible with test discovery, all of the test files must be &lt;a href=&quot;https://docs.python.org/3.9/tutorial/modules.html#tut-modules&quot;&gt;modules&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/tutorial/modules.html#tut-packages&quot;&gt;packages&lt;/a&gt; (including &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;) importable from the top-level directory of the project (this means that their filenames must be valid &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;identifiers&lt;/a&gt;).</source>
          <target state="translated">Unittest支持简单的测试发现。为了与测试发现兼容，所有测试文件必须是可从项目的顶级目录导入的&lt;a href=&quot;https://docs.python.org/3.9/tutorial/modules.html#tut-modules&quot;&gt;模块&lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/tutorial/modules.html#tut-packages&quot;&gt;包&lt;/a&gt;（包括&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;名称空间包&lt;/a&gt;）（这意味着它们的文件名必须是有效的&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;标识符&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6f5a7f4e3781a69dbf9bc8bde34477a22943eb3a" translate="yes" xml:space="preserve">
          <source>Unittest supports skipping individual test methods and even whole classes of tests. In addition, it supports marking a test as an &amp;ldquo;expected failure,&amp;rdquo; a test that is broken and will fail, but shouldn&amp;rsquo;t be counted as a failure on a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Unittest支持跳过单个测试方法甚至整个测试类别。另外，它支持将测试标记为&amp;ldquo;预期失败&amp;rdquo;，即已损坏且将失败的测试，但不应将其视为&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;上的失败。</target>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="61269b47d1912b3422eba3f73aece2ef97a5b744" translate="yes" xml:space="preserve">
          <source>Unix Platforms</source>
          <target state="translated">Unix平台</target>
        </trans-unit>
        <trans-unit id="0e13810f1a14b62c949e081b6a7b9339dcbb5a03" translate="yes" xml:space="preserve">
          <source>Unix Signals</source>
          <target state="translated">Unix信号</target>
        </trans-unit>
        <trans-unit id="6816141193a0e3dc3b48a84b10bea2489b164992" translate="yes" xml:space="preserve">
          <source>Unix Sockets</source>
          <target state="translated">Unix套接字</target>
        </trans-unit>
        <trans-unit id="1bdb0064b2fcd2fcd102a38464d440d9eff8fea9" translate="yes" xml:space="preserve">
          <source>Unix Specific Services</source>
          <target state="translated">Unix特定服务</target>
        </trans-unit>
        <trans-unit id="847c5fad076a68d49660f9eb9a8817b853479991" translate="yes" xml:space="preserve">
          <source>Unix V7 synonym for &lt;a href=&quot;#stat.S_IRUSR&quot;&gt;&lt;code&gt;S_IRUSR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Unix V7的&lt;a href=&quot;#stat.S_IRUSR&quot;&gt; &lt;code&gt;S_IRUSR&lt;/code&gt; &lt;/a&gt;同义词。</target>
        </trans-unit>
        <trans-unit id="5c559c0bd7b52c6d5fcd6c4cdfa0164567d71c81" translate="yes" xml:space="preserve">
          <source>Unix V7 synonym for &lt;a href=&quot;#stat.S_IWUSR&quot;&gt;&lt;code&gt;S_IWUSR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Unix V7的&lt;a href=&quot;#stat.S_IWUSR&quot;&gt; &lt;code&gt;S_IWUSR&lt;/code&gt; &lt;/a&gt;同义词。</target>
        </trans-unit>
        <trans-unit id="46b7a407dbe01720c5581466e65e5d6766b08dcd" translate="yes" xml:space="preserve">
          <source>Unix V7 synonym for &lt;a href=&quot;#stat.S_IXUSR&quot;&gt;&lt;code&gt;S_IXUSR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Unix V7的&lt;a href=&quot;#stat.S_IXUSR&quot;&gt; &lt;code&gt;S_IXUSR&lt;/code&gt; &lt;/a&gt;同义词。</target>
        </trans-unit>
        <trans-unit id="082c2a1389c9c2ea8c60ebb7f7c8a999f936e231" translate="yes" xml:space="preserve">
          <source>Unix shell-style path expansion.</source>
          <target state="translated">Unix shell风格的路径扩展。</target>
        </trans-unit>
        <trans-unit id="32e32465c877196c71d88374d755b3b7baedfc11" translate="yes" xml:space="preserve">
          <source>Unix signals</source>
          <target state="translated">Unix信号</target>
        </trans-unit>
        <trans-unit id="5e4a3d86de027e8272c31e5a7f66ec8b0b49bbef" translate="yes" xml:space="preserve">
          <source>UnknownHandler Objects</source>
          <target state="translated">未知的Handler对象</target>
        </trans-unit>
        <trans-unit id="4cd89cfc1a4e26f640c99600149f2caa1d397d8a" translate="yes" xml:space="preserve">
          <source>Unless explicitly noted, these functions support &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt;. Behaviour with other types (whether in the numeric tower or not) is currently unsupported. Collections with a mix of types are also undefined and implementation-dependent. If your input data consists of mixed types, you may be able to use &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; to ensure a consistent result, for example: &lt;code&gt;map(float, input_data)&lt;/code&gt;.</source>
          <target state="translated">除非明确指出，否则这些函数支持&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;。当前不支持其他类型的行为（无论是否在数字塔中）。混合类型的集合也是未定义的，并且依赖于实现。如果输入数据包含混合类型，则可以使用&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;来确保结果一致，例如： &lt;code&gt;map(float, input_data)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b245a8781f57e2ee32cd0bd7e365277ad5f0b91" translate="yes" xml:space="preserve">
          <source>Unless intentionally delayed, login is normally performed during the &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; object initialization and separately calling this function is unnecessary. To force authentication to be delayed, you must not set &lt;em&gt;user&lt;/em&gt; or &lt;em&gt;password&lt;/em&gt; when creating the object, and must set &lt;em&gt;usenetrc&lt;/em&gt; to False.</source>
          <target state="translated">除非有意延迟，否则通常在&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;对象初始化期间执行登录，并且不需要单独调用此函数。要强制延迟身份验证，创建对象时不得设置&lt;em&gt;用户&lt;/em&gt;或&lt;em&gt;密码&lt;/em&gt;，并且必须将&lt;em&gt;usenetrc&lt;/em&gt;设置为False。</target>
        </trans-unit>
        <trans-unit id="d7daaf11df16b200f419dc320e67a326ec4d10c2" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the connection will be open even after an exception is raised.</source>
          <target state="translated">除非另有说明,否则即使发生异常,连接也会被打开。</target>
        </trans-unit>
        <trans-unit id="7339f074fcb0ea2ac52be61a728102c0e5798d94" translate="yes" xml:space="preserve">
          <source>Unless stated otherwise, all network methods accepting other network/address objects will raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the argument&amp;rsquo;s IP version is incompatible to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">除非另有说明，否则如果参数的IP版本与 &lt;code&gt;self&lt;/code&gt; 不兼容，则接受其他网络/地址对象的所有网络方法都将引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="993ab4594b8b02fc5860d357a6b3b9b2b3ab001e" translate="yes" xml:space="preserve">
          <source>Unless the &lt;code&gt;--without-pip&lt;/code&gt; option is given, &lt;a href=&quot;ensurepip#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; will be invoked to bootstrap &lt;code&gt;pip&lt;/code&gt; into the virtual environment.</source>
          <target state="translated">除非给出 &lt;code&gt;--without-pip&lt;/code&gt; 选项，&lt;a href=&quot;ensurepip#module-ensurepip&quot;&gt; &lt;code&gt;ensurepip&lt;/code&gt; &lt;/a&gt;将调用surepip来将 &lt;code&gt;pip&lt;/code&gt; 引导到虚拟环境中。</target>
        </trans-unit>
        <trans-unit id="c4a782d6fa682b46e8e886c88894b4beb34c1b11" translate="yes" xml:space="preserve">
          <source>Unless the &lt;em&gt;_charset&lt;/em&gt; argument is explicitly set to &lt;code&gt;None&lt;/code&gt;, the MIMEText object created will have both a &lt;em&gt;Content-Type&lt;/em&gt; header with a &lt;code&gt;charset&lt;/code&gt; parameter, and a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. This means that a subsequent &lt;code&gt;set_payload&lt;/code&gt; call will not result in an encoded payload, even if a charset is passed in the &lt;code&gt;set_payload&lt;/code&gt; command. You can &amp;ldquo;reset&amp;rdquo; this behavior by deleting the &lt;code&gt;Content-Transfer-Encoding&lt;/code&gt; header, after which a &lt;code&gt;set_payload&lt;/code&gt; call will automatically encode the new payload (and add a new &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header).</source>
          <target state="translated">除非&lt;em&gt;_charset&lt;/em&gt;参数显式设置为 &lt;code&gt;None&lt;/code&gt; ，否则创建的MIMEText对象将具有带有 &lt;code&gt;charset&lt;/code&gt; 参数的&lt;em&gt;Content-Type&lt;/em&gt;标头和&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头。这意味着即使在 &lt;code&gt;set_payload&lt;/code&gt; 命令中传递了字符集，后续的 &lt;code&gt;set_payload&lt;/code&gt; 调用也不会导致编码的有效载荷。您可以通过删除 &lt;code&gt;Content-Transfer-Encoding&lt;/code&gt; 标头来&amp;ldquo;重置&amp;rdquo;此行为，此后 &lt;code&gt;set_payload&lt;/code&gt; 调用将自动对新的有效负载进行编码（并添加新的&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41468c42a8b09a43651139d245a1d58ff2225ad6" translate="yes" xml:space="preserve">
          <source>Unless you set the &lt;a href=&quot;#weakref.finalize.atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; attribute to &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, a finalizer will be called when the program exits if it is still alive. For instance</source>
          <target state="translated">除非将&lt;a href=&quot;#weakref.finalize.atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;属性设置为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，否则如果程序仍然存在，则在退出程序时将调用终结器。例如</target>
        </trans-unit>
        <trans-unit id="8ac92788612719ddd5c97ea10f0326dfc1c7c844" translate="yes" xml:space="preserve">
          <source>Unless you wish to use &lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt;&lt;code&gt;has_extn()&lt;/code&gt;&lt;/a&gt; before sending mail, it should not be necessary to call this method explicitly. It will be implicitly called by &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; when necessary.</source>
          <target state="translated">除非您希望在发送邮件之前使用&lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt; &lt;code&gt;has_extn()&lt;/code&gt; &lt;/a&gt;，否则不必显式调用此方法。必要时将由&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;隐式调用它。</target>
        </trans-unit>
        <trans-unit id="9e0c258f7bb0ea2dfce26a7399ef9cf54157425d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#asyncio.BoundedSemaphore&quot;&gt;&lt;code&gt;BoundedSemaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; allows making more &lt;code&gt;release()&lt;/code&gt; calls than &lt;code&gt;acquire()&lt;/code&gt; calls.</source>
          <target state="translated">与&lt;a href=&quot;#asyncio.BoundedSemaphore&quot;&gt; &lt;code&gt;BoundedSemaphore&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#asyncio.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;允许进行更多的 &lt;code&gt;release()&lt;/code&gt; 调用，而不是 &lt;code&gt;acquire()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="33618204c6228bb2f08249a4999150db6c1a3c5a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;wait()&lt;/code&gt; does not cancel the futures when a timeout occurs.</source>
          <target state="translated">与&lt;a href=&quot;#asyncio.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; &lt;/a&gt;不同， &lt;code&gt;wait()&lt;/code&gt; 不会在发生超时时取消期货。</target>
        </trans-unit>
        <trans-unit id="67e1ebd0e3d2c8e2ee24effe1aafb7d36dfc4f44" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#bytes.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; when a delimiter string &lt;em&gt;sep&lt;/em&gt; is given, this method returns an empty list for the empty string, and a terminal line break does not result in an extra line:</source>
          <target state="translated">与&lt;a href=&quot;#bytes.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;不同，当给定分隔符字符串&lt;em&gt;sep时&lt;/em&gt;，此方法返回空字符串的空列表，并且终端换行不会导致多余的行：</target>
        </trans-unit>
        <trans-unit id="ca1293cddc7f4a5a7d63761eedfd744e93178c07" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#str.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; when a delimiter string &lt;em&gt;sep&lt;/em&gt; is given, this method returns an empty list for the empty string, and a terminal line break does not result in an extra line:</source>
          <target state="translated">与&lt;a href=&quot;#str.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;不同，当给定分隔符字符串&lt;em&gt;sep时&lt;/em&gt;，此方法返回空字符串的空列表，并且终端换行不会导致多余的行：</target>
        </trans-unit>
        <trans-unit id="b3e82dc45fec18fee8381940667b7739fe395eba" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#str.swapcase&quot;&gt;&lt;code&gt;str.swapcase()&lt;/code&gt;&lt;/a&gt;, it is always the case that &lt;code&gt;bin.swapcase().swapcase() == bin&lt;/code&gt; for the binary versions. Case conversions are symmetrical in ASCII, even though that is not generally true for arbitrary Unicode code points.</source>
          <target state="translated">与&lt;a href=&quot;#str.swapcase&quot;&gt; &lt;code&gt;str.swapcase()&lt;/code&gt; &lt;/a&gt;不同，对于二进制版本， &lt;code&gt;bin.swapcase().swapcase() == bin&lt;/code&gt; 总是这样。大小写转换是ASCII对称的，即使对于任意Unicode代码点通常也不是这样。</target>
        </trans-unit>
        <trans-unit id="0c95a6d7a10d383afd78d9c0e2a9a3a25e57da5e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt;, the user of &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; is responsible for deleting the temporary file when done with it.</source>
          <target state="translated">与&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;的用户负责在完成临时文件后将其删除。</target>
        </trans-unit>
        <trans-unit id="d713f1bbd5fe8d9d3ef65d626ba711d216ccc024" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; allows you to define a</source>
          <target state="translated">与&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;允许您定义一个</target>
        </trans-unit>
        <trans-unit id="5c886da08a6499e65a78a1b5c0d1665bb125f558" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, with &lt;code&gt;SimpleNamespace&lt;/code&gt; you can add and remove attributes. If a &lt;code&gt;SimpleNamespace&lt;/code&gt; object is initialized with keyword arguments, those are directly added to the underlying namespace.</source>
          <target state="translated">与&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;不同，使用 &lt;code&gt;SimpleNamespace&lt;/code&gt; 可以添加和删除属性。如果使用关键字参数初始化 &lt;code&gt;SimpleNamespace&lt;/code&gt; 对象，则将它们直接添加到基础名称空间。</target>
        </trans-unit>
        <trans-unit id="596d48dc2d054d385685290e71d4024b5251eff2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;, JSON is not a framed protocol, so trying to serialize multiple objects with repeated calls to &lt;a href=&quot;#json.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; using the same &lt;em&gt;fp&lt;/em&gt; will result in an invalid JSON file.</source>
          <target state="translated">与&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;不同，JSON不是框架协议，因此，尝试使用同一&lt;em&gt;fp&lt;/em&gt;重复调用&lt;a href=&quot;#json.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;来序列化多个对象将导致无效的JSON文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75c3001ddb5896b3f0beaf0cf2b3057b6d86a8ca" translate="yes" xml:space="preserve">
          <source>Unlike GNU &lt;code&gt;getopt()&lt;/code&gt;, after a non-option argument, all further arguments are considered also non-options. This is similar to the way non-GNU Unix systems work.</source>
          <target state="translated">与GNU &lt;code&gt;getopt()&lt;/code&gt; 不同，在非选项参数之后，所有其他参数也被视为非选项。这类似于非GNU Unix系统的工作方式。</target>
        </trans-unit>
        <trans-unit id="1dec49b182e8d7603947a0985b2ecf4c1b9d6835" translate="yes" xml:space="preserve">
          <source>Unlike Java abstract methods, these abstract methods may have an implementation. This implementation can be called via the &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; mechanism from the class that overrides it. This could be useful as an end-point for a super-call in a framework that uses cooperative multiple-inheritance.</source>
          <target state="translated">与Java抽象方法不同，这些抽象方法可能具有实现。可以通过覆盖它的类的&lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;机制调用此实现。在使用协作式多重继承的框架中，这可用作超级调用的端点。</target>
        </trans-unit>
        <trans-unit id="5f16780c200014deeda946367354cdafa913c303" translate="yes" xml:space="preserve">
          <source>Unlike a dictionary, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects do not raise an error when you try to get or delete a key that isn&amp;rsquo;t in the wrapped header list. Getting a nonexistent header just returns &lt;code&gt;None&lt;/code&gt;, and deleting a nonexistent header does nothing.</source>
          <target state="translated">与字典不同，当您尝试获取或删除包装的标题列表中没有的键时，&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;对象不会引发错误。获取不存在的标头只会返回 &lt;code&gt;None&lt;/code&gt; ，而删除不存在的标头则无济于事。</target>
        </trans-unit>
        <trans-unit id="1c6f6aee98d471465b243d4e2fd41bf6e3854779" translate="yes" xml:space="preserve">
          <source>Unlike a unix shell, Python does not do any &lt;em&gt;automatic&lt;/em&gt; path expansions. Functions such as &lt;a href=&quot;#os.path.expanduser&quot;&gt;&lt;code&gt;expanduser()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.expandvars&quot;&gt;&lt;code&gt;expandvars()&lt;/code&gt;&lt;/a&gt; can be invoked explicitly when an application desires shell-like path expansion. (See also the &lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; module.)</source>
          <target state="translated">与unix shell不同，Python不执行任何&lt;em&gt;自动&lt;/em&gt;路径扩展。当应用程序需要类似shell的路径扩展时，可以显式调用诸如&lt;a href=&quot;#os.path.expanduser&quot;&gt; &lt;code&gt;expanduser()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.path.expandvars&quot;&gt; &lt;code&gt;expandvars()&lt;/code&gt; 之类的&lt;/a&gt;函数。（另请参见&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;模块。）</target>
        </trans-unit>
        <trans-unit id="e7bd162bae41d85a4f9b40addad75b0dfc5f8ca4" translate="yes" xml:space="preserve">
          <source>Unlike hardware based binary floating point, the decimal module has a user alterable precision (defaulting to 28 places) which can be as large as needed for a given problem:</source>
          <target state="translated">与基于硬件的二进制浮点运算不同,十进制模块具有用户可改变的精度(默认为28位),它可以根据给定问题的需要而变大。</target>
        </trans-unit>
        <trans-unit id="3ed2b66476f9ed547b34b80c9bc1ba9db01e1b4b" translate="yes" xml:space="preserve">
          <source>Unlike normal generators, async generators cannot return a value, so there is no &lt;code&gt;ReturnType&lt;/code&gt; type parameter. As with &lt;a href=&quot;#typing.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;SendType&lt;/code&gt; behaves contravariantly.</source>
          <target state="translated">与普通生成器不同，异步生成器无法返回值，因此没有 &lt;code&gt;ReturnType&lt;/code&gt; 类型参数。与&lt;a href=&quot;#typing.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; 一样&lt;/a&gt;， &lt;code&gt;SendType&lt;/code&gt; 的行为也相反。</target>
        </trans-unit>
        <trans-unit id="02e5049358a9b6f903a818d8a1d172b104aa9a7e" translate="yes" xml:space="preserve">
          <source>Unlike other asyncio functions this function requires the &lt;em&gt;loop&lt;/em&gt; argument to be passed explicitly.</source>
          <target state="translated">与其他异步函数不同，此函数要求显式传递&lt;em&gt;loop&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="daabe887cf8afd0ee7dd85b067f7ffc7a6ff2139" translate="yes" xml:space="preserve">
          <source>Unlike other operations, if the length of the coefficient after the quantize operation would be greater than precision, then an &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt; is signaled. This guarantees that, unless there is an error condition, the quantized exponent is always equal to that of the right-hand operand.</source>
          <target state="translated">与其他操作不同，如果量化操作之后的系数长度大于精度，则会发出&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;信号。这样可以确保，除非有错误情况，否则量化的指数始终等于右侧操作数的指数。</target>
        </trans-unit>
        <trans-unit id="f8eddae08f6656a48c18c114d2d80555ac88cc50" translate="yes" xml:space="preserve">
          <source>Unlike other representations of messages, file-like representations are not necessarily independent of the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance that created them or of the underlying mailbox. More specific documentation is provided by each subclass.</source>
          <target state="translated">与消息的其他表示形式不同，类似文件的表示形式不一定独立于创建它们的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;实例或基础邮箱。每个子类都提供了更具体的文档。</target>
        </trans-unit>
        <trans-unit id="1729cdad2c6448823f2a52f8dea629abf34cbd9d" translate="yes" xml:space="preserve">
          <source>Unlike pickle, deserializing untrusted JSON does not in itself create an arbitrary code execution vulnerability.</source>
          <target state="translated">与pickle不同,反序列化不受信任的JSON本身并不会产生任意代码执行漏洞。</target>
        </trans-unit>
        <trans-unit id="c027bbb86d577787589ae4a2296400dfbc620f5d" translate="yes" xml:space="preserve">
          <source>Unlike some other popen functions, this implementation will never implicitly call a system shell. This means that all characters, including shell metacharacters, can safely be passed to child processes. If the shell is invoked explicitly, via &lt;code&gt;shell=True&lt;/code&gt;, it is the application&amp;rsquo;s responsibility to ensure that all whitespace and metacharacters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities.</source>
          <target state="translated">与其他一些popen函数不同，此实现绝不会隐式调用系统外壳程序。这意味着所有字符，包括外壳元字符，都可以安全地传递给子进程。如果通过 &lt;code&gt;shell=True&lt;/code&gt; 显式调用了shell ，则应用程序有责任确保所有空白和元字符都被正确引用，以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell注入&lt;/a&gt;漏洞。</target>
        </trans-unit>
        <trans-unit id="326e5cb29ac1685ac6b6540756008303df0cd9e9" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; function, it does not make sense for the &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; functions to have &lt;em&gt;key&lt;/em&gt; or &lt;em&gt;reversed&lt;/em&gt; arguments because that would lead to an inefficient design (successive calls to bisect functions would not &amp;ldquo;remember&amp;rdquo; all of the previous key lookups).</source>
          <target state="translated">与&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;函数不同，&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;函数具有&lt;em&gt;键&lt;/em&gt;或&lt;em&gt;反向&lt;/em&gt;参数是没有意义的，因为这会导致效率低下的设计（对bisect函数的成功调用不会&amp;ldquo;记住&amp;rdquo;所有先前的键查找） 。</target>
        </trans-unit>
        <trans-unit id="3793d0204514f0cecb268eaedd5865f0bf82163f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module, the &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module does not support leap seconds.</source>
          <target state="translated">与&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;模块不同，&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;时间模块不支持leap秒。</target>
        </trans-unit>
        <trans-unit id="b6e58a4913f53cdae8b1ea35f09013530b7aa1c4" translate="yes" xml:space="preserve">
          <source>Unlike the C function of the same name, &lt;a href=&quot;#time.asctime&quot;&gt;&lt;code&gt;asctime()&lt;/code&gt;&lt;/a&gt; does not add a trailing newline.</source>
          <target state="translated">与同名的C函数不同，&lt;a href=&quot;#time.asctime&quot;&gt; &lt;code&gt;asctime()&lt;/code&gt; &lt;/a&gt;不会添加尾随换行符。</target>
        </trans-unit>
        <trans-unit id="f224bbef952cee89d776f9978fc11e4d77aacd93" translate="yes" xml:space="preserve">
          <source>Unlike the built-in &lt;code&gt;**&lt;/code&gt; operator, &lt;a href=&quot;#math.pow&quot;&gt;&lt;code&gt;math.pow()&lt;/code&gt;&lt;/a&gt; converts both its arguments to type &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Use &lt;code&gt;**&lt;/code&gt; or the built-in &lt;a href=&quot;functions#pow&quot;&gt;&lt;code&gt;pow()&lt;/code&gt;&lt;/a&gt; function for computing exact integer powers.</source>
          <target state="translated">与内置 &lt;code&gt;**&lt;/code&gt; 运算符不同，&lt;a href=&quot;#math.pow&quot;&gt; &lt;code&gt;math.pow()&lt;/code&gt; &lt;/a&gt;会将其两个参数都转换为&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;类型。使用 &lt;code&gt;**&lt;/code&gt; 或内置的&lt;a href=&quot;functions#pow&quot;&gt; &lt;code&gt;pow()&lt;/code&gt; &lt;/a&gt;函数来计算精确的整数幂。</target>
        </trans-unit>
        <trans-unit id="41e1fdb4abd6dd67c502fc5584b98310de24db38" translate="yes" xml:space="preserve">
          <source>Unlike the other methods, callbacks added this way cannot suppress exceptions (as they are never passed the exception details).</source>
          <target state="translated">与其他方法不同的是,以这种方式添加的回调不能抑制异常(因为它们从不传递异常细节)。</target>
        </trans-unit>
        <trans-unit id="200b8c21994a17a42d1321647abef543d47f7741" translate="yes" xml:space="preserve">
          <source>Unlike the standard library threading &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt;, the size of the queue is always known and can be returned by calling the &lt;a href=&quot;#asyncio.Queue.qsize&quot;&gt;&lt;code&gt;qsize()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">与标准库线程&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;，该队列的大小始终是已知的，可以通过调用&lt;a href=&quot;#asyncio.Queue.qsize&quot;&gt; &lt;code&gt;qsize()&lt;/code&gt; &lt;/a&gt;方法来返回。</target>
        </trans-unit>
        <trans-unit id="99e8b687ce1472cf64f559941f128998de28a367" translate="yes" xml:space="preserve">
          <source>Unlike with dictionaries, keyword arguments are not supported.</source>
          <target state="translated">与字典不同,不支持关键字参数。</target>
        </trans-unit>
        <trans-unit id="b295b1626651c0f81546df6b37a5a08b3d17b159" translate="yes" xml:space="preserve">
          <source>Unlinks all of the specified &lt;em&gt;items&lt;/em&gt; from the tree.</source>
          <target state="translated">从树中取消所有指定&lt;em&gt;项&lt;/em&gt;的链接。</target>
        </trans-unit>
        <trans-unit id="228d085fb175c515aa2497f02a042daa9633e64b" translate="yes" xml:space="preserve">
          <source>Unlocks the specified bytes, which must have been previously locked.</source>
          <target state="translated">解锁指定的字节,该字节必须是之前锁定的。</target>
        </trans-unit>
        <trans-unit id="048eced2fb1660f6cbfc326ec3236a428f12a1cc" translate="yes" xml:space="preserve">
          <source>Unmatched square brackets in the &lt;code&gt;netloc&lt;/code&gt; attribute will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;netloc&lt;/code&gt; 属性中不匹配的方括号将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4b43c42ceb925094a8a1fcebdac4099acaace32" translate="yes" xml:space="preserve">
          <source>Unofficial XML-RPC Errata</source>
          <target state="translated">非官方的XML-RPC勘误表</target>
        </trans-unit>
        <trans-unit id="e180d436cafe3018c8820226a888ae5caa7011f1" translate="yes" xml:space="preserve">
          <source>Unpack an archive. &lt;em&gt;filename&lt;/em&gt; is the full path of the archive.</source>
          <target state="translated">解压缩档案。&lt;em&gt;filename&lt;/em&gt;是档案的完整路径。</target>
        </trans-unit>
        <trans-unit id="d093e02eacf25883f9dd3d7f93c744854d7c18ee" translate="yes" xml:space="preserve">
          <source>Unpack from &lt;em&gt;buffer&lt;/em&gt; starting at position &lt;em&gt;offset&lt;/em&gt;, according to the format string &lt;em&gt;format&lt;/em&gt;. The result is a tuple even if it contains exactly one item. The buffer&amp;rsquo;s size in bytes, starting at position &lt;em&gt;offset&lt;/em&gt;, must be at least the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据格式字符串&lt;em&gt;格式&lt;/em&gt;，从位置&lt;em&gt;偏移&lt;/em&gt;处开始从&lt;em&gt;缓冲区&lt;/em&gt;解压缩。结果是一个元组，即使它只包含一个项目。从位置&lt;em&gt;偏移量&lt;/em&gt;开始的缓冲区大小（以字节为单位）必须至少为格式要求的大小，如&lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt;所反映。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2fa5bd12750940524bd0d1cfbac26ffee31f5657" translate="yes" xml:space="preserve">
          <source>Unpack from the buffer &lt;em&gt;buffer&lt;/em&gt; (presumably packed by &lt;code&gt;pack(format, ...)&lt;/code&gt;) according to the format string &lt;em&gt;format&lt;/em&gt;. The result is a tuple even if it contains exactly one item. The buffer&amp;rsquo;s size in bytes must match the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据格式字符串&lt;em&gt;format&lt;/em&gt;从缓冲区&lt;em&gt;缓冲区&lt;/em&gt;解压缩（大概由 &lt;code&gt;pack(format, ...)&lt;/code&gt; 打包）。结果是一个元组，即使它只包含一个项目。缓冲区大小（以字节为单位）必须与格式要求的大小匹配，如&lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt;所反映。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2adde7706bee77bb5b34b7f4130eb67fec002267" translate="yes" xml:space="preserve">
          <source>Unpacked fields can be named by assigning them to variables or by wrapping the result in a named tuple:</source>
          <target state="translated">未打包的字段可以通过将它们分配给变量或将结果包装成一个命名元组来命名。</target>
        </trans-unit>
        <trans-unit id="4d79ef8abbb1d3bae278d963c12afbc654d35da6" translate="yes" xml:space="preserve">
          <source>Unpacker Objects</source>
          <target state="translated">拆包机对象</target>
        </trans-unit>
        <trans-unit id="0861b7332a50e0249c0fdf3780673bf2dce97c44" translate="yes" xml:space="preserve">
          <source>Unpacks TOS into &lt;em&gt;count&lt;/em&gt; individual values, which are put onto the stack right-to-left.</source>
          <target state="translated">将TOS打包成&lt;em&gt;计数的&lt;/em&gt;各个值，这些值从右到左放入堆栈中。</target>
        </trans-unit>
        <trans-unit id="b02e0fc33103f5359830c43333262a8e84c26205" translate="yes" xml:space="preserve">
          <source>Unpacks a double-precision floating point number, similarly to &lt;a href=&quot;#xdrlib.Unpacker.unpack_float&quot;&gt;&lt;code&gt;unpack_float()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解压双精度浮点数，类似于&lt;a href=&quot;#xdrlib.Unpacker.unpack_float&quot;&gt; &lt;code&gt;unpack_float()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8df6c980c62c8f14de2fd87d0d289322eb884d40" translate="yes" xml:space="preserve">
          <source>Unpacks a single-precision floating point number.</source>
          <target state="translated">解开一个单精度浮点数的包装。</target>
        </trans-unit>
        <trans-unit id="4b95c1bc4e94907b6abeef024e6d5b6bf5bb8a71" translate="yes" xml:space="preserve">
          <source>Unpacks and returns (as a list) a fixed length array of homogeneous items. &lt;em&gt;n&lt;/em&gt; is number of list elements to expect in the buffer. As above, &lt;em&gt;unpack_item&lt;/em&gt; is the function used to unpack each element.</source>
          <target state="translated">解包并返回固定长度的同类项目数组（作为列表）。&lt;em&gt;n&lt;/em&gt;是期望在缓冲区中的列表元素的数量。如上所述，&lt;em&gt;unpack_item&lt;/em&gt;是用于解压缩每个元素的函数。</target>
        </trans-unit>
        <trans-unit id="c2c5b548d5976f90964462cd30f8809920479b37" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a fixed length opaque data stream, similarly to &lt;a href=&quot;#xdrlib.Unpacker.unpack_fstring&quot;&gt;&lt;code&gt;unpack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解压缩并返回固定长度的不透明数据流，类似于&lt;a href=&quot;#xdrlib.Unpacker.unpack_fstring&quot;&gt; &lt;code&gt;unpack_fstring()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2df57ac4a973e9ba3f6bd5eaedcc74a144ce664b" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a fixed length string. &lt;em&gt;n&lt;/em&gt; is the number of characters expected. Padding with null bytes to guaranteed 4 byte alignment is assumed.</source>
          <target state="translated">解压缩并返回固定长度的字符串。&lt;em&gt;n&lt;/em&gt;是预期的字符数。假定使用空字节填充以保证4字节对齐。</target>
        </trans-unit>
        <trans-unit id="73c5115d1baf6a3ec3a1fff4ab85bc77008c5914" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a list of homogeneous items. The list is unpacked one element at a time by first unpacking an unsigned integer flag. If the flag is &lt;code&gt;1&lt;/code&gt;, then the item is unpacked and appended to the list. A flag of &lt;code&gt;0&lt;/code&gt; indicates the end of the list. &lt;em&gt;unpack_item&lt;/em&gt; is the function that is called to unpack the items.</source>
          <target state="translated">解包并返回同类项目列表。通过首先解压缩无符号整数标志来一次将列表解压缩一个元素。如果标志为 &lt;code&gt;1&lt;/code&gt; ，则将商品解压缩并附加到列表中。标志 &lt;code&gt;0&lt;/code&gt; 表示列表的末尾。&lt;em&gt;unpack_item&lt;/em&gt;是用来解压缩项目的函数。</target>
        </trans-unit>
        <trans-unit id="6cc4a7d8ee8262fa9d412c53ecbce94d54254aba" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a variable length &lt;em&gt;list&lt;/em&gt; of homogeneous items. First, the length of the list is unpacked as an unsigned integer, then each element is unpacked as in &lt;a href=&quot;#xdrlib.Unpacker.unpack_farray&quot;&gt;&lt;code&gt;unpack_farray()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">解压缩并返回可变长度的同类项目&lt;em&gt;列表&lt;/em&gt;。首先，将列表的长度解压缩为无符号整数，然后像上面的&lt;a href=&quot;#xdrlib.Unpacker.unpack_farray&quot;&gt; &lt;code&gt;unpack_farray()&lt;/code&gt; &lt;/a&gt;一样解压缩每个元素。</target>
        </trans-unit>
        <trans-unit id="a7799cee99003d765f6427b7c1ace2dfb316c858" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a variable length byte stream, similarly to &lt;a href=&quot;#xdrlib.Unpacker.unpack_string&quot;&gt;&lt;code&gt;unpack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解压缩并返回可变长度的字节流，类似于&lt;a href=&quot;#xdrlib.Unpacker.unpack_string&quot;&gt; &lt;code&gt;unpack_string()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34766fddbfbc6bc1488290d0daec6b714af30a9b" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a variable length opaque data string, similarly to &lt;a href=&quot;#xdrlib.Unpacker.unpack_string&quot;&gt;&lt;code&gt;unpack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解压缩并返回可变长度的不透明数据字符串，类似于&lt;a href=&quot;#xdrlib.Unpacker.unpack_string&quot;&gt; &lt;code&gt;unpack_string()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba0b788676d3b41a1c5127c92dde79d487ede145" translate="yes" xml:space="preserve">
          <source>Unpacks and returns a variable length string. The length of the string is first unpacked as an unsigned integer, then the string data is unpacked with &lt;a href=&quot;#xdrlib.Unpacker.unpack_fstring&quot;&gt;&lt;code&gt;unpack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解压缩并返回可变长度的字符串。首先将字符串的长度解压缩为无符号整数，然后使用&lt;a href=&quot;#xdrlib.Unpacker.unpack_fstring&quot;&gt; &lt;code&gt;unpack_fstring()&lt;/code&gt; &lt;/a&gt;解压缩字符串数据。</target>
        </trans-unit>
        <trans-unit id="c49374747ec36dbc7532cb94438254109ce2de2f" translate="yes" xml:space="preserve">
          <source>Unparse an &lt;a href=&quot;#ast.AST&quot;&gt;&lt;code&gt;ast.AST&lt;/code&gt;&lt;/a&gt; object and generate a string with code that would produce an equivalent &lt;a href=&quot;#ast.AST&quot;&gt;&lt;code&gt;ast.AST&lt;/code&gt;&lt;/a&gt; object if parsed back with &lt;a href=&quot;#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析一个&lt;a href=&quot;#ast.AST&quot;&gt; &lt;code&gt;ast.AST&lt;/code&gt; &lt;/a&gt;对象，并生成一个包含代码的字符串，如果使用&lt;a href=&quot;#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;进行解析，该代码将产生等效的&lt;a href=&quot;#ast.AST&quot;&gt; &lt;code&gt;ast.AST&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="c3ee08b55fbca7f6d37e79386552db63d6525e57" translate="yes" xml:space="preserve">
          <source>Unregister a file object from selection, removing it from monitoring. A file object shall be unregistered prior to being closed.</source>
          <target state="translated">解除对文件对象的选择登记,将其从监控中删除。文件对象在关闭前应解除登记。</target>
        </trans-unit>
        <trans-unit id="84737bad5fde4cf5467cba5b10bfa3fac33dbc22" translate="yes" xml:space="preserve">
          <source>Unregister a user signal: uninstall the handler of the &lt;em&gt;signum&lt;/em&gt; signal installed by &lt;a href=&quot;#faulthandler.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. Return &lt;code&gt;True&lt;/code&gt; if the signal was registered, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">注销的用户信号：卸载的处理程序&lt;em&gt;正负号&lt;/em&gt;由安装信号&lt;a href=&quot;#faulthandler.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;。如果信号已注册，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0eeb11afbb54691f5e0783b93bd21e3897e4d244" translate="yes" xml:space="preserve">
          <source>Unregister an unpack format. &lt;em&gt;name&lt;/em&gt; is the name of the format.</source>
          <target state="translated">取消注册解压缩格式。&lt;em&gt;name&lt;/em&gt;是格式的名称。</target>
        </trans-unit>
        <trans-unit id="b7b92c7cba3823febabcbe4aaa8633bbc550444a" translate="yes" xml:space="preserve">
          <source>Unregisters a file handler.</source>
          <target state="translated">解除注册一个文件处理程序。</target>
        </trans-unit>
        <trans-unit id="74697c9d7cd4ab04d68ab2fdf2b669960bc37a75" translate="yes" xml:space="preserve">
          <source>Unsafe usage of the GIL</source>
          <target state="translated">GIL的不安全使用</target>
        </trans-unit>
        <trans-unit id="fe99f3a697d86fd74d01d0ec29562a573d784a93" translate="yes" xml:space="preserve">
          <source>Unset (delete) the environment variable named &lt;em&gt;key&lt;/em&gt;. Such changes to the environment affect subprocesses started with &lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">取消设置（删除）名为&lt;em&gt;key&lt;/em&gt;的环境变量。对环境的此类更改会影响以&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.fork&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt;开头的子流程。</target>
        </trans-unit>
        <trans-unit id="8f11e903da2827da2ff494dc45518a52073a6deb" translate="yes" xml:space="preserve">
          <source>Unset the flag(s) specified by &lt;em&gt;flag&lt;/em&gt; without changing other flags. To remove more than one flag at a time, &lt;em&gt;flag&lt;/em&gt; maybe a string of more than one character.</source>
          <target state="translated">取消设置标志指定的&lt;em&gt;标志，&lt;/em&gt;而不更改其他标志。要一次删除多个标志，&lt;em&gt;标志&lt;/em&gt;可能是一个以上字符的字符串。</target>
        </trans-unit>
        <trans-unit id="c9423b5564c4d3ab497eed5796bde589630c032b" translate="yes" xml:space="preserve">
          <source>Unset the flag(s) specified by &lt;em&gt;flag&lt;/em&gt; without changing other flags. To remove more than one flag at a time, &lt;em&gt;flag&lt;/em&gt; maybe a string of more than one character. If &amp;ldquo;info&amp;rdquo; contains experimental information rather than flags, the current &amp;ldquo;info&amp;rdquo; is not modified.</source>
          <target state="translated">取消设置标志指定的&lt;em&gt;标志，&lt;/em&gt;而不更改其他标志。要一次删除多个标志，&lt;em&gt;标志&lt;/em&gt;可能是一个以上字符的字符串。如果&amp;ldquo;信息&amp;rdquo;包含实验信息而不是标志，则不会修改当前的&amp;ldquo;信息&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8b5ce3b0587e5dfc574c05a997b77253d37b5a96" translate="yes" xml:space="preserve">
          <source>Unsigned, 16-bit big-endian audio</source>
          <target state="translated">无符号的16位大段音频。</target>
        </trans-unit>
        <trans-unit id="3cf888094dce0dff5dc88fdc3a8fdf414a7518f5" translate="yes" xml:space="preserve">
          <source>Unsigned, 16-bit little-endian audio</source>
          <target state="translated">无符号,16位小安迪音频</target>
        </trans-unit>
        <trans-unit id="3a6c3f57facb20b402f0b1be0b10f27489e6c0cc" translate="yes" xml:space="preserve">
          <source>Unsigned, 8-bit audio</source>
          <target state="translated">无符号,8位音频</target>
        </trans-unit>
        <trans-unit id="0eebb997e8491e1bc2700306d597290b18c9bdb9" translate="yes" xml:space="preserve">
          <source>Unsubscribe from old mailbox.</source>
          <target state="translated">从旧邮箱退订。</target>
        </trans-unit>
        <trans-unit id="d4c4c55a3d374ba63645f299181454728fde4b94" translate="yes" xml:space="preserve">
          <source>Untabify Region</source>
          <target state="translated">解除标签化区域</target>
        </trans-unit>
        <trans-unit id="6124f32fdf4ba4b9425841e4026583849d20ed0f" translate="yes" xml:space="preserve">
          <source>Until Python 3.8, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; lacked a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在python 3.8之前，&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;缺少&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="dfe20dc7f16ab68a7c4453b184c25a263736c687" translate="yes" xml:space="preserve">
          <source>Until Python 3.8, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; lacked a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在python 3.8之前，&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;缺少&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2038bdec9210202d0d9d74839e3925ff0cd91ba1" translate="yes" xml:space="preserve">
          <source>Up</source>
          <target state="translated">Up</target>
        </trans-unit>
        <trans-unit id="3b0b27ec87edd9e5b151e783684c3250b5138da3" translate="yes" xml:space="preserve">
          <source>Up to the prompt, the output from the above is:</source>
          <target state="translated">到提示,上面的输出是。</target>
        </trans-unit>
        <trans-unit id="5c35290c06ff39f7f8240e3f8c98ffb7469e01ce" translate="yes" xml:space="preserve">
          <source>Up-arrow</source>
          <target state="translated">Up-arrow</target>
        </trans-unit>
        <trans-unit id="0a4cd8f9b0c49335833b73322f5129a273d0a57f" translate="yes" xml:space="preserve">
          <source>Update &lt;code id=&quot;index-3&quot;&gt;LINES&lt;/code&gt; and &lt;code id=&quot;index-4&quot;&gt;COLS&lt;/code&gt;. Useful for detecting manual screen resize.</source>
          <target state="translated">更新 &lt;code id=&quot;index-3&quot;&gt;LINES&lt;/code&gt; 和 &lt;code id=&quot;index-4&quot;&gt;COLS&lt;/code&gt; 。用于检测手动屏幕调整大小。</target>
        </trans-unit>
        <trans-unit id="6cc3833644a8b3574bfb4234d0fb0ff4bb3d0c1b" translate="yes" xml:space="preserve">
          <source>Update &lt;em&gt;environ&lt;/em&gt; with trivial defaults for testing purposes.</source>
          <target state="translated">为了测试目的，使用简单的默认值更新&lt;em&gt;环境&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7d43ded4f21a448758ca9de774778892a8573fef" translate="yes" xml:space="preserve">
          <source>Update a &lt;em&gt;wrapper&lt;/em&gt; function to look like the &lt;em&gt;wrapped&lt;/em&gt; function. The optional arguments are tuples to specify which attributes of the original function are assigned directly to the matching attributes on the wrapper function and which attributes of the wrapper function are updated with the corresponding attributes from the original function. The default values for these arguments are the module level constants &lt;code&gt;WRAPPER_ASSIGNMENTS&lt;/code&gt; (which assigns to the wrapper function&amp;rsquo;s &lt;code&gt;__module__&lt;/code&gt;, &lt;code&gt;__name__&lt;/code&gt;, &lt;code&gt;__qualname__&lt;/code&gt;, &lt;code&gt;__annotations__&lt;/code&gt; and &lt;code&gt;__doc__&lt;/code&gt;, the documentation string) and &lt;code&gt;WRAPPER_UPDATES&lt;/code&gt; (which updates the wrapper function&amp;rsquo;s &lt;code&gt;__dict__&lt;/code&gt;, i.e. the instance dictionary).</source>
          <target state="translated">更新&lt;em&gt;包装&lt;/em&gt;函数，使其看起来像&lt;em&gt;包装&lt;/em&gt;函数。可选参数是元组，用于指定将原始函数的哪些属性直接分配给包装函数上的匹配属性，以及使用原始函数中的相应属性更新包装函数的哪些属性。这些参数的默认值是模块级常量 &lt;code&gt;WRAPPER_ASSIGNMENTS&lt;/code&gt; （分配给包装函数的 &lt;code&gt;__module__&lt;/code&gt; ， &lt;code&gt;__name__&lt;/code&gt; ， &lt;code&gt;__qualname__&lt;/code&gt; ， &lt;code&gt;__annotations__&lt;/code&gt; 和 &lt;code&gt;__doc__&lt;/code&gt; ，文档字符串）和 &lt;code&gt;WRAPPER_UPDATES&lt;/code&gt; （这将更新包装函数的 &lt;code&gt;__dict__&lt;/code&gt; ，即实例字典）。</target>
        </trans-unit>
        <trans-unit id="c8eaa3caae0035d8d2b93d9ea5157036f5e890f4" translate="yes" xml:space="preserve">
          <source>Update and return a dictionary representing the current local symbol table. Free variables are returned by &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; when it is called in function blocks, but not in class blocks. Note that at the module level, &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#globals&quot;&gt;&lt;code&gt;globals()&lt;/code&gt;&lt;/a&gt; are the same dictionary.</source>
          <target state="translated">更新并返回代表当前本地符号表的字典。当在功能块中调用免费变量时，它是由&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;返回的，而在类块中则没有。请注意，在模块级别，&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#globals&quot;&gt; &lt;code&gt;globals()&lt;/code&gt; &lt;/a&gt;是同一词典。</target>
        </trans-unit>
        <trans-unit id="6e881f9b576f8d197b4c916699604917c6bea3ff" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;is_authenticated&lt;/code&gt; flag for the given &lt;em&gt;uri&lt;/em&gt; or list of URIs.</source>
          <target state="translated">为给定的&lt;em&gt;uri&lt;/em&gt;或URI列表更新 &lt;code&gt;is_authenticated&lt;/code&gt; 标志。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="676722049af84191150c39b99ccf011847f430a6" translate="yes" xml:space="preserve">
          <source>Update the current cursor position of all the ancestors of the window to reflect the current cursor position of the window.</source>
          <target state="translated">更新窗口所有祖先的当前光标位置,以反映窗口的当前光标位置。</target>
        </trans-unit>
        <trans-unit id="6c67b9370f6773373a2ad4a9d82d3d4b78ed6025" translate="yes" xml:space="preserve">
          <source>Update the current file selection to &lt;em&gt;file&lt;/em&gt;.</source>
          <target state="translated">将当前文件选择更新为&lt;em&gt;file&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="919dc08005fb86feaa413a4235e9bce2c6e74486" translate="yes" xml:space="preserve">
          <source>Update the dictionary &lt;em&gt;d&lt;/em&gt; with keys and values from &lt;em&gt;other&lt;/em&gt;, which may be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;mapping&lt;/a&gt; or an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; of key/value pairs. The values of &lt;em&gt;other&lt;/em&gt; take priority when &lt;em&gt;d&lt;/em&gt; and &lt;em&gt;other&lt;/em&gt; share keys.</source>
          <target state="translated">使用来自&lt;em&gt;other的&lt;/em&gt;键和值更新字典&lt;em&gt;d&lt;/em&gt;，键和值可以是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;映射&lt;/a&gt;或键/值对的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;迭代&lt;/a&gt;。当&lt;em&gt;d&lt;/em&gt;和&lt;em&gt;其他&lt;/em&gt;共享密钥时，&lt;em&gt;other&lt;/em&gt;的值具有优先权。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f52facdafd3c7b416be3ca2987e689c01a20aeb" translate="yes" xml:space="preserve">
          <source>Update the dictionary with the key/value pairs from &lt;em&gt;other&lt;/em&gt;, overwriting existing keys. Return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">使用来自&lt;em&gt;其他&lt;/em&gt;的键/值对更新字典，覆盖现有键。不返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="844dd4fa8e5519fd020d3adb913a31ce577cec8e" translate="yes" xml:space="preserve">
          <source>Update the display immediately (sync actual screen with previous drawing/deleting methods).</source>
          <target state="translated">立即更新显示(与之前的绘制/删除方法同步实际画面)。</target>
        </trans-unit>
        <trans-unit id="c72f3ad02a5bd1086e31aa55dc65f7726c021bb9" translate="yes" xml:space="preserve">
          <source>Update the hash object with the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. Repeated calls are equivalent to a single call with the concatenation of all the arguments: &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; is equivalent to &lt;code&gt;m.update(a+b)&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;更新哈希对象。重复调用等效于将所有参数串联在一起的单个调用： &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; 等同于 &lt;code&gt;m.update(a+b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9534f94ddfcd737e337a0d4a5d2e9412c424077" translate="yes" xml:space="preserve">
          <source>Update the hash object with the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. Repeated calls are equivalent to a single call with the concatenation of all the arguments: &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; is equivalent to &lt;code&gt;m.update(a+b)&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;更新哈希对象。重复调用等效于将所有参数串联在一起的单个调用： &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; 等同于 &lt;code&gt;m.update(a+b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64c77d232184003c8e5ef8dfe4a062a6ffc29da4" translate="yes" xml:space="preserve">
          <source>Update the hmac object with &lt;em&gt;msg&lt;/em&gt;. Repeated calls are equivalent to a single call with the concatenation of all the arguments: &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; is equivalent to &lt;code&gt;m.update(a + b)&lt;/code&gt;.</source>
          <target state="translated">用&lt;em&gt;msg&lt;/em&gt;更新hmac对象。重复调用等效于将所有参数串联在一起的单个调用： &lt;code&gt;m.update(a); m.update(b)&lt;/code&gt; 等同于 &lt;code&gt;m.update(a + b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49fcb28da96252d3143add7d524b059fc11f4dbf" translate="yes" xml:space="preserve">
          <source>Update the physical screen. The curses library keeps two data structures, one representing the current physical screen contents and a virtual screen representing the desired next state. The &lt;a href=&quot;#curses.doupdate&quot;&gt;&lt;code&gt;doupdate()&lt;/code&gt;&lt;/a&gt; ground updates the physical screen to match the virtual screen.</source>
          <target state="translated">更新物理屏幕。curses库保留两个数据结构，一个代表当前的物理屏幕内容，另一个代表所需的下一个状态的虚拟屏幕。该&lt;a href=&quot;#curses.doupdate&quot;&gt; &lt;code&gt;doupdate()&lt;/code&gt; &lt;/a&gt;地更新物理屏幕相匹配的虚拟屏幕。</target>
        </trans-unit>
        <trans-unit id="916502e64e45e8917403b3f7e2e4cb9240ec037b" translate="yes" xml:space="preserve">
          <source>Update the set, adding elements from all others.</source>
          <target state="translated">更新集合,从所有其他元素中添加元素。</target>
        </trans-unit>
        <trans-unit id="ac6527f15e4975da015ccaa43d3d4bfa51b09597" translate="yes" xml:space="preserve">
          <source>Update the set, keeping only elements found in either set, but not in both.</source>
          <target state="translated">更新集合,只保留在任一集合中找到的元素,但不保留在两个集合中找到的元素。</target>
        </trans-unit>
        <trans-unit id="1efb006f7c16e37178e13286e3116f97a446042c" translate="yes" xml:space="preserve">
          <source>Update the set, keeping only elements found in it and all others.</source>
          <target state="translated">更新集合,只保留其中的元素,其他的全部保留。</target>
        </trans-unit>
        <trans-unit id="e5f938e1032dfc279fd2d4c9bbde2ed0d316e18d" translate="yes" xml:space="preserve">
          <source>Update the set, removing elements found in others.</source>
          <target state="translated">更新集子,删除在其他集子中发现的元素。</target>
        </trans-unit>
        <trans-unit id="8f6ad5a4c112a979bb39e0daf27f6f78eab18230" translate="yes" xml:space="preserve">
          <source>Update the values in the Morsel dictionary with the values in the dictionary &lt;em&gt;values&lt;/em&gt;. Raise an error if any of the keys in the &lt;em&gt;values&lt;/em&gt; dict is not a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">用字典值中的值更新Morsel字典中的&lt;em&gt;值&lt;/em&gt;。如果&lt;em&gt;值&lt;/em&gt; dict 中的任何键不是有效的&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="403f8c83e34150e4e050e7802c9ae3b5c02baa0b" translate="yes" xml:space="preserve">
          <source>Updates the virtual screen after changes in the panel stack. This does not call &lt;a href=&quot;curses#curses.doupdate&quot;&gt;&lt;code&gt;curses.doupdate()&lt;/code&gt;&lt;/a&gt;, so you&amp;rsquo;ll have to do this yourself.</source>
          <target state="translated">面板集中的更改后更新虚拟屏幕。这不会调用&lt;a href=&quot;curses#curses.doupdate&quot;&gt; &lt;code&gt;curses.doupdate()&lt;/code&gt; &lt;/a&gt;，因此您必须自己执行此操作。</target>
        </trans-unit>
        <trans-unit id="5fbbdb84597aa8a194e7826194c031e681da3e5b" translate="yes" xml:space="preserve">
          <source>Updating Code For New Versions of Dependencies</source>
          <target state="translated">为新版本的依赖关系更新代码</target>
        </trans-unit>
        <trans-unit id="6cfc0fe1e7552b2208957be5568c4b831410776d" translate="yes" xml:space="preserve">
          <source>Upgrade an existing connection to TLS.</source>
          <target state="translated">将现有连接升级为TLS。</target>
        </trans-unit>
        <trans-unit id="c033cfa69d72d0506f0739c3dd946dac4f60d820" translate="yes" xml:space="preserve">
          <source>Upgrade an existing transport-based connection to TLS.</source>
          <target state="translated">将现有的基于传输的连接升级为TLS。</target>
        </trans-unit>
        <trans-unit id="8e7085c36826f39b955d3407ed1c8e8be7dce597" translate="yes" xml:space="preserve">
          <source>Upgrades the core venv dependency packages (currently &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;setuptools&lt;/code&gt;) in the environment. This is done by shelling out to the &lt;code&gt;pip&lt;/code&gt; executable in the environment.</source>
          <target state="translated">升级环境中的核心venv依赖软件包（当前为 &lt;code&gt;pip&lt;/code&gt; 和 &lt;code&gt;setuptools&lt;/code&gt; ）。这是通过在环境中使用 &lt;code&gt;pip&lt;/code&gt; 可执行文件完成的。</target>
        </trans-unit>
        <trans-unit id="93c2d8026e88b79d364deb29293028e59014ecd4" translate="yes" xml:space="preserve">
          <source>Upgrading optparse code</source>
          <target state="translated">升级 optparse 代码</target>
        </trans-unit>
        <trans-unit id="6885989b161691127084226c65d60813ef15d1e3" translate="yes" xml:space="preserve">
          <source>Upon startup with the &lt;code&gt;-s&lt;/code&gt; option, IDLE will execute the file referenced by the environment variables &lt;code id=&quot;index-5&quot;&gt;IDLESTARTUP&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt;. IDLE first checks for &lt;code&gt;IDLESTARTUP&lt;/code&gt;; if &lt;code&gt;IDLESTARTUP&lt;/code&gt; is present the file referenced is run. If &lt;code&gt;IDLESTARTUP&lt;/code&gt; is not present, IDLE checks for &lt;code&gt;PYTHONSTARTUP&lt;/code&gt;. Files referenced by these environment variables are convenient places to store functions that are used frequently from the IDLE shell, or for executing import statements to import common modules.</source>
          <target state="translated">使用 &lt;code&gt;-s&lt;/code&gt; 选项启动时，IDLE将执行环境变量 &lt;code id=&quot;index-5&quot;&gt;IDLESTARTUP&lt;/code&gt; 或&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;引用的文件。 IDLE首先检查 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ；如果存在 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ，则运行引用的文件。如果不存在 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ，则IDLE检查 &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; 。这些环境变量引用的文件是存储IDLE shell经常使用的函数或执行导入语句以导入公共模块的便利位置。</target>
        </trans-unit>
        <trans-unit id="d3381a97387d24f932c2e625415ecf85f4dee6af" translate="yes" xml:space="preserve">
          <source>Upon startup with the &lt;code&gt;-s&lt;/code&gt; option, IDLE will execute the file referenced by the environment variables &lt;code id=&quot;index-5&quot;&gt;IDLESTARTUP&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt;. IDLE first checks for &lt;code&gt;IDLESTARTUP&lt;/code&gt;; if &lt;code&gt;IDLESTARTUP&lt;/code&gt; is present the file referenced is run. If &lt;code&gt;IDLESTARTUP&lt;/code&gt; is not present, IDLE checks for &lt;code&gt;PYTHONSTARTUP&lt;/code&gt;. Files referenced by these environment variables are convenient places to store functions that are used frequently from the IDLE shell, or for executing import statements to import common modules.</source>
          <target state="translated">使用 &lt;code&gt;-s&lt;/code&gt; 选项启动时，IDLE将执行环境变量 &lt;code id=&quot;index-5&quot;&gt;IDLESTARTUP&lt;/code&gt; 或&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;引用的文件。IDLE首先检查 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ；如果存在 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ，则运行引用的文件。如果不存在 &lt;code&gt;IDLESTARTUP&lt;/code&gt; ，则IDLE检查 &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; 。这些环境变量引用的文件是存储IDLE shell经常使用的函数或执行导入语句以导入公共模块的便利位置。</target>
        </trans-unit>
        <trans-unit id="ceeef23b43f204cd4fc87f8a0c602258f435ad5b" translate="yes" xml:space="preserve">
          <source>Upon unpickling, if the class defines &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;, it is called with the unpickled state. In that case, there is no requirement for the state object to be a dictionary. Otherwise, the pickled state must be a dictionary and its items are assigned to the new instance&amp;rsquo;s dictionary.</source>
          <target state="translated">&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;后，如果类定义了__setstate __（），则会以未拾取状态调用它。在那种情况下，不需要状态对象是字典。否则，腌制状态必须是字典，并且其项将分配给新实例的字典。</target>
        </trans-unit>
        <trans-unit id="442c0ca432bba7bb5e9fddb35000be1fc0080e00" translate="yes" xml:space="preserve">
          <source>Upper left of keypad</source>
          <target state="translated">键盘左上方</target>
        </trans-unit>
        <trans-unit id="26be040f98d4f92519d4f55adbafdaf27d0bf91c" translate="yes" xml:space="preserve">
          <source>Upper right of keypad</source>
          <target state="translated">键盘右上方</target>
        </trans-unit>
        <trans-unit id="5d6984e58af99ef5098428fe251573a59542bd1a" translate="yes" xml:space="preserve">
          <source>Upper-left corner</source>
          <target state="translated">左上角</target>
        </trans-unit>
        <trans-unit id="f899c21125a124680149002a215b010390a14035" translate="yes" xml:space="preserve">
          <source>Upper-right corner</source>
          <target state="translated">右上角</target>
        </trans-unit>
        <trans-unit id="412e31909b8ad1417c4a39495653fdeba58cd034" translate="yes" xml:space="preserve">
          <source>Urdu</source>
          <target state="translated">Urdu</target>
        </trans-unit>
        <trans-unit id="6c0f6c90b039eb2f8ccf225a7eea7326a1231177" translate="yes" xml:space="preserve">
          <source>Urgent data for read</source>
          <target state="translated">急需读取的数据</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="c54d06d3411c536072cc47249dd128a605cc382d" translate="yes" xml:space="preserve">
          <source>Usage as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;:</source>
          <target state="translated">用作&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d47d72011e547326fb4d40672ef000db79836cb3" translate="yes" xml:space="preserve">
          <source>Usage as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;:</source>
          <target state="translated">用作&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8e06c218123ecda4e08d6b8f0a242dd0c07ffde1" translate="yes" xml:space="preserve">
          <source>Usage example: &lt;code&gt;fi =
fileinput.FileInput(openhook=fileinput.hook_encoded(&quot;utf-8&quot;,
&quot;surrogateescape&quot;))&lt;/code&gt;</source>
          <target state="translated">用法示例： &lt;code&gt;fi = fileinput.FileInput(openhook=fileinput.hook_encoded(&quot;utf-8&quot;, &quot;surrogateescape&quot;))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23a84570fc52dfd991c6774587f13dbfa3c6b304" translate="yes" xml:space="preserve">
          <source>Usage example: &lt;code&gt;fi = fileinput.FileInput(openhook=fileinput.hook_compressed)&lt;/code&gt;</source>
          <target state="translated">用法示例： &lt;code&gt;fi = fileinput.FileInput(openhook=fileinput.hook_compressed)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30417f716d6267476ad9fad028a2fc6e463880c9" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;KabulTz&lt;/code&gt; from above:</source>
          <target state="translated">从上方使用 &lt;code&gt;KabulTz&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd2184f1d367ba383d26c0e300960fadb0d8272b" translate="yes" xml:space="preserve">
          <source>Usage of the DOM interface in Python is straight-forward. The following mapping rules apply:</source>
          <target state="translated">在Python中DOM接口的使用是直接的。以下是适用的映射规则。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="4b1f7ccf5dd79f8ee16571bf32c1e6c4007733ce" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#asyncio.WriteTransport.get_write_buffer_limits&quot;&gt;&lt;code&gt;get_write_buffer_limits()&lt;/code&gt;&lt;/a&gt; to get the limits.</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.WriteTransport.get_write_buffer_limits&quot;&gt; &lt;code&gt;get_write_buffer_limits()&lt;/code&gt; &lt;/a&gt;获取限制。</target>
        </trans-unit>
        <trans-unit id="0bcdd77ca18769c76d2f648e31dbca518354ce9b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#asyncio.WriteTransport.set_write_buffer_limits&quot;&gt;&lt;code&gt;set_write_buffer_limits()&lt;/code&gt;&lt;/a&gt; to set the limits.</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.WriteTransport.set_write_buffer_limits&quot;&gt; &lt;code&gt;set_write_buffer_limits()&lt;/code&gt; &lt;/a&gt;设置限制。</target>
        </trans-unit>
        <trans-unit id="5ff19ffa16005ed393bb50a2fc301ae7c8434921" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;#subprocess.Popen.stdin&quot;&gt;&lt;code&gt;.stdin.write&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.Popen.stdout&quot;&gt;&lt;code&gt;.stdout.read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#subprocess.Popen.stderr&quot;&gt;&lt;code&gt;.stderr.read&lt;/code&gt;&lt;/a&gt; to avoid deadlocks due to any of the other OS pipe buffers filling up and blocking the child process.</source>
          <target state="translated">使用&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#subprocess.Popen.stdin&quot;&gt; &lt;code&gt;.stdin.write&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#subprocess.Popen.stdout&quot;&gt; &lt;code&gt;.stdout.read&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#subprocess.Popen.stderr&quot;&gt; &lt;code&gt;.stderr.read&lt;/code&gt; &lt;/a&gt;来避免死锁，这是因为其他任何OS管道缓冲区都已填满并阻塞了子进程。</target>
        </trans-unit>
        <trans-unit id="dd81adbbc79cd205fc1bc2737ce1e2085e7810fe" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#tokenize.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; to open Python source files: it uses &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt; to detect the file encoding.</source>
          <target state="translated">使用&lt;a href=&quot;#tokenize.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;打开Python源文件：它使用&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;检测文件编码。</target>
        </trans-unit>
        <trans-unit id="b5b266fadd2e7245f37c616a8922563663fb3b4d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#tracemalloc.Snapshot.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; to reload the snapshot.</source>
          <target state="translated">使用&lt;a href=&quot;#tracemalloc.Snapshot.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;重新加载快照。</target>
        </trans-unit>
        <trans-unit id="5773877b49b43db6bf7c94187009bb8144711130" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; as the value if you want &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; to create mocks for you. In this case the created mocks are passed into a decorated function by keyword, and a dictionary is returned when &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; is used as a context manager.</source>
          <target state="translated">如果要让&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt;为您创建模拟，请使用&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;作为值。在这种情况下，创建的&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt;通过关键字传递到修饰的函数中，并且当patch.multiple（）用作上下文管理器时，将返回字典。</target>
        </trans-unit>
        <trans-unit id="801ec70715ed39b5c5c242a01eb2e137022a3645" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; to indicate that a value could be any type in a typesafe manner. Use &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; to indicate that a value is dynamically typed.</source>
          <target state="translated">使用&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;以类型安全的方式指示值可以是任何类型。使用&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;表示值是动态键入的。</target>
        </trans-unit>
        <trans-unit id="4d55b6e9ca90a032f6af3085cee74e97a5a82792" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt;&lt;code&gt;functools.cmp_to_key()&lt;/code&gt;&lt;/a&gt; to convert an old-style &lt;em&gt;cmp&lt;/em&gt; function to a &lt;em&gt;key&lt;/em&gt; function.</source>
          <target state="translated">使用&lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt; &lt;code&gt;functools.cmp_to_key()&lt;/code&gt; &lt;/a&gt;将旧式&lt;em&gt;cmp&lt;/em&gt;函数转换为&lt;em&gt;键&lt;/em&gt;函数。</target>
        </trans-unit>
        <trans-unit id="0ae804c4e2566a021e2b7df1cb5f86d33af4f596" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#asyncio-pass-keywords&quot;&gt;to pass keyword arguments&lt;/a&gt; to &lt;em&gt;callback&lt;/em&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#asyncio-pass-keywords&quot;&gt;将关键字参数传递&lt;/a&gt;给&lt;em&gt;callback&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7faa606e98b27a2cbd434b59751dcf554bb80399" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#asyncio-pass-keywords&quot;&gt;to pass keyword arguments&lt;/a&gt; to &lt;em&gt;func&lt;/em&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#asyncio-pass-keywords&quot;&gt;将关键字参数传递&lt;/a&gt;给&lt;em&gt;func&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="caa6b6a91146066a6ab2e2391258412526412a60" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;importlib#importlib.util.module_from_spec&quot;&gt;&lt;code&gt;importlib.util.module_from_spec()&lt;/code&gt;&lt;/a&gt; to create a new module if you wish to set the various import-controlled attributes.</source>
          <target state="translated">如果要设置各种导入控制的属性，请使用&lt;a href=&quot;importlib#importlib.util.module_from_spec&quot;&gt; &lt;code&gt;importlib.util.module_from_spec()&lt;/code&gt; &lt;/a&gt;创建一个新模块。</target>
        </trans-unit>
        <trans-unit id="6be4f4ccdec4c24fadfe09779a33e3199c2a99e4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;math#math.ulp&quot;&gt;&lt;code&gt;math.ulp(0.0)&lt;/code&gt;&lt;/a&gt; to get the smallest positive &lt;em&gt;denormalized&lt;/em&gt; representable float.</source>
          <target state="translated">使用&lt;a href=&quot;math#math.ulp&quot;&gt; &lt;code&gt;math.ulp(0.0)&lt;/code&gt; &lt;/a&gt;来获得最小的正&lt;em&gt;非标准化可&lt;/em&gt;表示浮点数。</target>
        </trans-unit>
        <trans-unit id="92571159e076392f54e9a058f2068114f55f5d84" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;pickletools#pickletools.optimize&quot;&gt;&lt;code&gt;pickletools.optimize()&lt;/code&gt;&lt;/a&gt; if you need more compact pickles.</source>
          <target state="translated">如果您需要更紧凑的泡菜，请使用&lt;a href=&quot;pickletools#pickletools.optimize&quot;&gt; &lt;code&gt;pickletools.optimize()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="977759ccf7fc3d35b1728ab61d457345039786ef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;threading#threading.get_ident&quot;&gt;&lt;code&gt;threading.get_ident()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;threading#threading.Thread.ident&quot;&gt;&lt;code&gt;ident&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt; objects to get a suitable value for &lt;em&gt;thread_id&lt;/em&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;threading#threading.get_ident&quot;&gt; &lt;code&gt;threading.get_ident()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;threading#threading.Thread.ident&quot;&gt; &lt;code&gt;ident&lt;/code&gt; &lt;/a&gt;属性来获取&lt;em&gt;thread_id&lt;/em&gt;的合适值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f310326200524afa7764d68027ab6eeaeafc777" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Text&lt;/code&gt; to indicate that a value must contain a unicode string in a manner that is compatible with both Python 2 and Python 3:</source>
          <target state="translated">使用 &lt;code&gt;Text&lt;/code&gt; 表示值必须以与Python 2和Python 3兼容的方式包含unicode字符串。</target>
        </trans-unit>
        <trans-unit id="fea35a235eec9b227adb5fcb0a0c00435b41bfcb" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;N&lt;/em&gt; workers to compile the files within the given directory. If &lt;code&gt;0&lt;/code&gt; is used, then the result of &lt;a href=&quot;os#os.cpu_count&quot;&gt;&lt;code&gt;os.cpu_count()&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">使用&lt;em&gt;N个&lt;/em&gt;工作程序来编译给定目录中的文件。如果使用 &lt;code&gt;0&lt;/code&gt; ，则将使用&lt;a href=&quot;os#os.cpu_count&quot;&gt; &lt;code&gt;os.cpu_count()&lt;/code&gt; &lt;/a&gt;的结果。</target>
        </trans-unit>
        <trans-unit id="495d495d7facfbe6f23a76a082fc3a5f0950c5d6" translate="yes" xml:space="preserve">
          <source>Use RPOP authentication (similar to UNIX r-commands) to log into POP3 server.</source>
          <target state="translated">使用RPOP认证(类似于UNIX的r命令)来登录POP3服务器。</target>
        </trans-unit>
        <trans-unit id="f4e7f3e06376e3f4d8475ec58362eb2b2060abb3" translate="yes" xml:space="preserve">
          <source>Use a comma-separated list of &lt;code&gt;key: value&lt;/code&gt; pairs within braces: &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; or &lt;code&gt;{4098: 'jack', 4127: 'sjoerd'}&lt;/code&gt;</source>
          <target state="translated">使用逗号分隔的 &lt;code&gt;key: value&lt;/code&gt; 列表：大括号内的值对： &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; 或 &lt;code&gt;{4098: 'jack', 4127: 'sjoerd'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a14a9c5d9439258788566c63ffdb820f13b119c1" translate="yes" xml:space="preserve">
          <source>Use a comma-separated list of elements within braces: &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt;</source>
          <target state="translated">大括号内使用逗号分隔的元素列表： &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca50d93aa7b66037fe8330b7c294589afa919be" translate="yes" xml:space="preserve">
          <source>Use a dict comprehension: &lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;{x: x ** 2 for x in range(10)}&lt;/code&gt;</source>
          <target state="translated">使用dict理解： &lt;code&gt;{}&lt;/code&gt; ， &lt;code&gt;{x: x ** 2 for x in range(10)}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a5be9a59141dd9bb7d182b14d93b2b1bd339016" translate="yes" xml:space="preserve">
          <source>Use a set comprehension: &lt;code&gt;{c for c in 'abracadabra' if c not in 'abc'}&lt;/code&gt;</source>
          <target state="translated">使用设定的理解： &lt;code&gt;{c for c in 'abracadabra' if c not in 'abc'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38ed25f85936d5ec93f7f6baaff0782bf76ef725" translate="yes" xml:space="preserve">
          <source>Use and behaviors of the &lt;em&gt;timeout&lt;/em&gt; argument are the same as in &lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt;&lt;code&gt;Lock.acquire()&lt;/code&gt;&lt;/a&gt;. Note that some of these behaviors of &lt;em&gt;timeout&lt;/em&gt; differ from the implemented behaviors in &lt;a href=&quot;threading#threading.RLock.acquire&quot;&gt;&lt;code&gt;threading.RLock.acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;超时&lt;/em&gt;参数的用法和行为与&lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt; &lt;code&gt;Lock.acquire()&lt;/code&gt; &lt;/a&gt;中的相同。请注意，其中一些&lt;em&gt;超时&lt;/em&gt;行为与&lt;a href=&quot;threading#threading.RLock.acquire&quot;&gt; &lt;code&gt;threading.RLock.acquire()&lt;/code&gt; 中&lt;/a&gt;的已实现行为不同。</target>
        </trans-unit>
        <trans-unit id="b8f6b7836c3c9781322ac632c3472944cbf5882e" translate="yes" xml:space="preserve">
          <source>Use of Basic HTTP Authentication:</source>
          <target state="translated">使用基本的HTTP认证。</target>
        </trans-unit>
        <trans-unit id="06b1cfba601081732eb4d25b9f84434e8e55c28d" translate="yes" xml:space="preserve">
          <source>Use of a configuration file where logging configuration is just part of the overall application configuration.</source>
          <target state="translated">使用配置文件,日志配置只是整个应用程序配置的一部分。</target>
        </trans-unit>
        <trans-unit id="a7aa6e5161d91c7285f5b1ed3868d5a6211a2320" translate="yes" xml:space="preserve">
          <source>Use of a configuration read from a file, and then modified by the using application (e.g. based on command-line parameters or other aspects of the runtime environment) before being passed to &lt;code&gt;fileConfig&lt;/code&gt;.</source>
          <target state="translated">使用从文件读取的配置，然后由使用的应用程序（例如，基于命令行参数或运行时环境的其他方面）进行修改，然后 &lt;code&gt;fileConfig&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28af66b770f56fa6175a1ed4bd8aca50a0212688" translate="yes" xml:space="preserve">
          <source>Use of the &lt;em&gt;requote&lt;/em&gt; parameter with &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects is deprecated.</source>
          <target state="translated">不建议在&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象中使用&lt;em&gt;requote&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="f8807a8f268cd5a3fec930a6e701e4eec1a5a268" translate="yes" xml:space="preserve">
          <source>Use of the functions above is more portable than use of the first set of flags:</source>
          <target state="translated">使用上述函数比使用第一组标志更方便。</target>
        </trans-unit>
        <trans-unit id="0ee11de24afff11a85727ddbffb864bb44227fcd" translate="yes" xml:space="preserve">
          <source>Use of this function may introduce a security hole in your program. By the time you get around to doing anything with the file name it returns, someone else may have beaten you to the punch. &lt;a href=&quot;#tempfile.mktemp&quot;&gt;&lt;code&gt;mktemp()&lt;/code&gt;&lt;/a&gt; usage can be replaced easily with &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt;&lt;code&gt;NamedTemporaryFile()&lt;/code&gt;&lt;/a&gt;, passing it the &lt;code&gt;delete=False&lt;/code&gt; parameter:</source>
          <target state="translated">使用此功能可能会在程序中引入安全漏洞。当您开始使用返回的文件名执行任何操作时，可能有人被您打败了。&lt;a href=&quot;#tempfile.mktemp&quot;&gt; &lt;code&gt;mktemp()&lt;/code&gt; &lt;/a&gt;用法可以很容易地用&lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt; &lt;code&gt;NamedTemporaryFile()&lt;/code&gt; &lt;/a&gt;替换，并向其传递 &lt;code&gt;delete=False&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="f802f95d5b72b7e3d461f9294f782b8fe070b88f" translate="yes" xml:space="preserve">
          <source>Use of this setting requires a valid set of CA certificates to be passed, either to &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt; or as a value of the &lt;code&gt;ca_certs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用此设置需要将一组有效的CA证书传递给&lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt; &lt;/a&gt;或作为&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;ca_certs&lt;/code&gt; 参数的值。</target>
        </trans-unit>
        <trans-unit id="086661bc0d18c4e4d7976acf67e710dca98ca570" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; method rather than &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt;&lt;code&gt;process.stdin.write()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt;&lt;code&gt;await process.stdout.read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt;&lt;code&gt;await process.stderr.read&lt;/code&gt;&lt;/a&gt;. This avoids deadlocks due to streams pausing reading or writing and blocking the child process.</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;方法而不是&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt; &lt;code&gt;process.stdin.write()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt; &lt;code&gt;await process.stdout.read()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt; &lt;code&gt;await process.stderr.read&lt;/code&gt; &lt;/a&gt;。这样可以避免由于流暂停读取或写入以及阻塞子进程而导致的死锁。</target>
        </trans-unit>
        <trans-unit id="15cd98149cc9f937cb92cf3ef933c1d25a1d0470" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#typing.NewType&quot;&gt;&lt;code&gt;NewType()&lt;/code&gt;&lt;/a&gt; helper function to create distinct types:</source>
          <target state="translated">使用&lt;a href=&quot;#typing.NewType&quot;&gt; &lt;code&gt;NewType()&lt;/code&gt; &lt;/a&gt;帮助函数创建不同的类型：</target>
        </trans-unit>
        <trans-unit id="fa0f4760d676107d72f2532d197197a7035768be" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function (with the &lt;code&gt;doseq&lt;/code&gt; parameter set to &lt;code&gt;True&lt;/code&gt;) to convert such dictionaries into query strings.</source>
          <target state="translated">使用&lt;a href=&quot;#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;函数（将该 &lt;code&gt;doseq&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; ）将此类词典转换为查询字符串。</target>
        </trans-unit>
        <trans-unit id="e77864b913c6ed2d3f7946296e1c4dd7eaea83b6" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function to convert such lists of pairs into query strings.</source>
          <target state="translated">使用&lt;a href=&quot;#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;函数将这样的配对列表转换为查询字符串。</target>
        </trans-unit>
        <trans-unit id="624745c3dc94a2bef660c402897876197714f9db" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W error&lt;/code&gt;&lt;/a&gt; command line option or set the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-1&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;error&lt;/code&gt; to treat warnings as errors.</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W error&lt;/code&gt; &lt;/a&gt;命令行选项或将&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-1&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; &lt;/a&gt;环境变量设置为 &lt;code&gt;error&lt;/code&gt; ,以将警告视为错误。</target>
        </trans-unit>
        <trans-unit id="ebe5f8c7c68a5eb4c363855f9e618e8fc09e455f" translate="yes" xml:space="preserve">
          <source>Use the &lt;em&gt;headers&lt;/em&gt; argument to the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; constructor, or:</source>
          <target state="translated">使用&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; s&lt;/a&gt;构造函数的&lt;em&gt;headers&lt;/em&gt;参数，或：</target>
        </trans-unit>
        <trans-unit id="397b1bdc25c901492de8340e267b2d32924dd46a" translate="yes" xml:space="preserve">
          <source>Use the config() method to update multiple attrs subsequent to object creation</source>
          <target state="translated">在创建对象后使用config()方法更新多个attrs。</target>
        </trans-unit>
        <trans-unit id="269f723392451288e2d733a8ac1b951a0f732cfc" translate="yes" xml:space="preserve">
          <source>Use the following functions to convert between time representations:</source>
          <target state="translated">使用以下函数在时间表示法之间进行转换。</target>
        </trans-unit>
        <trans-unit id="8b0e3f6f824fb870d980396594c6ee74a24533bb" translate="yes" xml:space="preserve">
          <source>Use the high median when your data are discrete and you prefer the median to be an actual data point rather than interpolated.</source>
          <target state="translated">当您的数据是离散的,并且您希望中值是一个实际的数据点而不是插值时,请使用高中值。</target>
        </trans-unit>
        <trans-unit id="cc76d8aaa9d87f83107351e712614efa5b9a4366" translate="yes" xml:space="preserve">
          <source>Use the high-level &lt;a href=&quot;#asyncio.create_task&quot;&gt;&lt;code&gt;asyncio.create_task()&lt;/code&gt;&lt;/a&gt; function to create Tasks, or the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt;&lt;code&gt;loop.create_task()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt;&lt;code&gt;ensure_future()&lt;/code&gt;&lt;/a&gt; functions. Manual instantiation of Tasks is discouraged.</source>
          <target state="translated">使用高级&lt;a href=&quot;#asyncio.create_task&quot;&gt; &lt;code&gt;asyncio.create_task()&lt;/code&gt; &lt;/a&gt;函数创建任务，或使用低级&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt; &lt;code&gt;loop.create_task()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt; &lt;code&gt;ensure_future()&lt;/code&gt; &lt;/a&gt;函数。不建议手动实例化Task。</target>
        </trans-unit>
        <trans-unit id="ac8913b6579e52d49bb894464f33a8f70139a5e9" translate="yes" xml:space="preserve">
          <source>Use the low median when your data are discrete and you prefer the median to be an actual data point rather than interpolated.</source>
          <target state="translated">当您的数据是离散的,并且您希望中值是一个实际的数据点而不是插值时,请使用低中值。</target>
        </trans-unit>
        <trans-unit id="38fc6d08600772eccde5630b8b2095c84488dee1" translate="yes" xml:space="preserve">
          <source>Use the more secure APOP authentication to log into the POP3 server.</source>
          <target state="translated">使用更安全的APOP认证来登录POP3服务器。</target>
        </trans-unit>
        <trans-unit id="0c2845b8ec29e4c6963ceba130325e617d9cc8d5" translate="yes" xml:space="preserve">
          <source>Use the real uid/gid to test for access to &lt;em&gt;path&lt;/em&gt;. Note that most operations will use the effective uid/gid, therefore this routine can be used in a suid/sgid environment to test if the invoking user has the specified access to &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;mode&lt;/em&gt; should be &lt;a href=&quot;#os.F_OK&quot;&gt;&lt;code&gt;F_OK&lt;/code&gt;&lt;/a&gt; to test the existence of &lt;em&gt;path&lt;/em&gt;, or it can be the inclusive OR of one or more of &lt;a href=&quot;#os.R_OK&quot;&gt;&lt;code&gt;R_OK&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.W_OK&quot;&gt;&lt;code&gt;W_OK&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.X_OK&quot;&gt;&lt;code&gt;X_OK&lt;/code&gt;&lt;/a&gt; to test permissions. Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if access is allowed, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not. See the Unix man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/access(2)&quot;&gt;access(2)&lt;/a&gt;&lt;/em&gt; for more information.</source>
          <target state="translated">使用真实的uid / gid测试对&lt;em&gt;path的&lt;/em&gt;访问。请注意，大多数操作将使用有效的uid / gid，因此可以在suid / sgid环境中使用此例程来测试调用用户是否具有对&lt;em&gt;path&lt;/em&gt;的指定访问权限。&lt;em&gt;mode&lt;/em&gt;应该为&lt;a href=&quot;#os.F_OK&quot;&gt; &lt;code&gt;F_OK&lt;/code&gt; &lt;/a&gt;来测试&lt;em&gt;path&lt;/em&gt;的存在，或者可以为&lt;a href=&quot;#os.R_OK&quot;&gt; &lt;code&gt;R_OK&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.W_OK&quot;&gt; &lt;code&gt;W_OK&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.X_OK&quot;&gt; &lt;code&gt;X_OK&lt;/code&gt; 中&lt;/a&gt;的一个或多个来包含或测试权限。如果允许访问，则返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; ;&lt;/a&gt;否则，则返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。有关更多信息，请参见Unix手册页&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/access(2)&quot;&gt;access（2）&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="62d360059b352a3db9e680b1043a8ec5f3406a4a" translate="yes" xml:space="preserve">
          <source>Use the server&amp;rsquo;s cipher ordering preference, rather than the client&amp;rsquo;s. This option has no effect on client sockets and SSLv2 server sockets.</source>
          <target state="translated">使用服务器的密码排序首选项，而不是客户端的密码。此选项对客户端套接字和SSLv2服务器套接字无效。</target>
        </trans-unit>
        <trans-unit id="8de5b3b768e02c520630dfc4e4662871b8e86cb2" translate="yes" xml:space="preserve">
          <source>Use the specified date/time format, as accepted by &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;接受的指定日期/时间格式。</target>
        </trans-unit>
        <trans-unit id="c2201f34bb8cca334db23ea9d46313e59f85d0d4" translate="yes" xml:space="preserve">
          <source>Use the specified format string for the handler.</source>
          <target state="translated">为处理程序使用指定的格式字符串。</target>
        </trans-unit>
        <trans-unit id="213c03b10565262fbdcced639b5887e0adcb2562" translate="yes" xml:space="preserve">
          <source>Use the specified stream to initialize the StreamHandler. Note that this argument is incompatible with &lt;em&gt;filename&lt;/em&gt; - if both are present, a &lt;code&gt;ValueError&lt;/code&gt; is raised.</source>
          <target state="translated">使用指定的流初始化StreamHandler。请注意，此参数与&lt;em&gt;文件名&lt;/em&gt;不兼容-如果两者都存在，则会引发 &lt;code&gt;ValueError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26bb8fc2a3dadbf252bc5cf4692acd775945e4ab" translate="yes" xml:space="preserve">
          <source>Use the type constructor: &lt;code&gt;dict()&lt;/code&gt;, &lt;code&gt;dict([('foo', 100), ('bar', 200)])&lt;/code&gt;, &lt;code&gt;dict(foo=100, bar=200)&lt;/code&gt;</source>
          <target state="translated">使用类型构造函数： &lt;code&gt;dict()&lt;/code&gt; ， &lt;code&gt;dict([('foo', 100), ('bar', 200)])&lt;/code&gt; ， &lt;code&gt;dict(foo=100, bar=200)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46d5843d57501d9dc62ef5d4dbfa23e57389ac53" translate="yes" xml:space="preserve">
          <source>Use the type constructor: &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;set('foobar')&lt;/code&gt;, &lt;code&gt;set(['a', 'b', 'foo'])&lt;/code&gt;</source>
          <target state="translated">使用类型构造函数： &lt;code&gt;set()&lt;/code&gt; ， &lt;code&gt;set('foobar')&lt;/code&gt; ， &lt;code&gt;set(['a', 'b', 'foo'])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2fd056e5e1d4febf6b91464a41740d353dee2ec" translate="yes" xml:space="preserve">
          <source>Use this at the end of &lt;code&gt;test_main&lt;/code&gt; whenever sub-processes are started. This will help ensure that no extra children (zombies) stick around to hog resources and create problems when looking for refleaks.</source>
          <target state="translated">每当子进程启动时，在 &lt;code&gt;test_main&lt;/code&gt; 的末尾使用它。这将有助于确保没有多余的孩子（僵尸）四处寻找生猪的资源，并且在寻找补习时不会造成麻烦。</target>
        </trans-unit>
        <trans-unit id="286f91c9a880de7bf2bb606d7ce509a86af31f09" translate="yes" xml:space="preserve">
          <source>Use this check to guard CPython&amp;rsquo;s implementation-specific tests or to run them only on the implementations guarded by the arguments:</source>
          <target state="translated">使用此检查可以保护CPython的特定于实现的测试，或者仅在由参数保护的实现上运行它们：</target>
        </trans-unit>
        <trans-unit id="ce127e7831cfc938739483bdfbe497d108a0f467" translate="yes" xml:space="preserve">
          <source>Use this function to calculate the variance from the entire population. To estimate the variance from a sample, the &lt;a href=&quot;#statistics.variance&quot;&gt;&lt;code&gt;variance()&lt;/code&gt;&lt;/a&gt; function is usually a better choice.</source>
          <target state="translated">使用此函数可计算整个总体的方差。要估计样本的&lt;a href=&quot;#statistics.variance&quot;&gt; &lt;code&gt;variance()&lt;/code&gt; &lt;/a&gt;通常最好使用variance（）函数。</target>
        </trans-unit>
        <trans-unit id="113c4cd7a277e177b4ab8b221b14cfbf88cf5706" translate="yes" xml:space="preserve">
          <source>Use this function when your data is a sample from a population. To calculate the variance from the entire population, see &lt;a href=&quot;#statistics.pvariance&quot;&gt;&lt;code&gt;pvariance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当数据是总体样本时，请使用此功能。要计算整个总体的方差，请参见&lt;a href=&quot;#statistics.pvariance&quot;&gt; &lt;code&gt;pvariance()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1722f7fbf19d23d96b7db6a746432471393e9f3d" translate="yes" xml:space="preserve">
          <source>Use this metaclass to create an ABC. An ABC can be subclassed directly, and then acts as a mix-in class. You can also register unrelated concrete classes (even built-in classes) and unrelated ABCs as &amp;ldquo;virtual subclasses&amp;rdquo; &amp;ndash; these and their descendants will be considered subclasses of the registering ABC by the built-in &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt; function, but the registering ABC won&amp;rsquo;t show up in their MRO (Method Resolution Order) nor will method implementations defined by the registering ABC be callable (not even via &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt;). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">使用此元类创建一个ABC。ABC可以直接子类化，然后充当混合类。您还可以将不相关的具体类（甚至是内置类）和不相关的ABC注册为&amp;ldquo;虚拟子类&amp;rdquo; &amp;ndash;内置的&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; &lt;/a&gt;函数会将这些类及其后代视为注册ABC的子类，但注册ABC胜出不会显示在其MRO（方法解析顺序）中，也不会调用通过注册ABC定义的方法实现（甚至不能通过&lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1个&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bdab79877c9aff2232b3c33a22d6693c69abec8" translate="yes" xml:space="preserve">
          <source>Used as the return value of the callback function in &lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt;&lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用作&lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt; &lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt; &lt;/a&gt;中的回调函数的返回值。</target>
        </trans-unit>
        <trans-unit id="f82127a2c2d7d75bf1de72d48006249872b07dda" translate="yes" xml:space="preserve">
          <source>Used by class Screen, which thus automatically provides a ScrolledCanvas as playground for the turtles.</source>
          <target state="translated">由类Screen使用,从而自动提供一个ScrolledCanvas作为海龟的游乐场。</target>
        </trans-unit>
        <trans-unit id="1e979fe09b6bd0f001f9f5432c729b3ccb465bc9" translate="yes" xml:space="preserve">
          <source>Used by queue consumers. For each &lt;a href=&quot;#asyncio.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; used to fetch a task, a subsequent call to &lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; tells the queue that the processing on the task is complete.</source>
          <target state="translated">由队列使用者使用。对于用于提取任务的每个&lt;a href=&quot;#asyncio.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，随后对&lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; 的&lt;/a&gt;调用将告诉队列该任务的处理已完成。</target>
        </trans-unit>
        <trans-unit id="7a8582ae1f2665fbf84f38cb456084728c223988" translate="yes" xml:space="preserve">
          <source>Used for half-delay mode, which is similar to cbreak mode in that characters typed by the user are immediately available to the program. However, after blocking for &lt;em&gt;tenths&lt;/em&gt; tenths of seconds, raise an exception if nothing has been typed. The value of &lt;em&gt;tenths&lt;/em&gt; must be a number between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;. Use &lt;a href=&quot;#curses.nocbreak&quot;&gt;&lt;code&gt;nocbreak()&lt;/code&gt;&lt;/a&gt; to leave half-delay mode.</source>
          <target state="translated">用于半延迟模式，与cbreak模式类似，因为用户键入的字符可立即用于程序。但是，在&lt;em&gt;十分之&lt;/em&gt;一秒之后，如果没有输入任何内容，则引发异常。&lt;em&gt;十分之一&lt;/em&gt;的值必须是 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;255&lt;/code&gt; 之间的数字。使用&lt;a href=&quot;#curses.nocbreak&quot;&gt; &lt;code&gt;nocbreak()&lt;/code&gt; &lt;/a&gt;离开半延迟模式。</target>
        </trans-unit>
        <trans-unit id="f06f022628c2d1b93ae2cc8948d4d0af4d5ae00a" translate="yes" xml:space="preserve">
          <source>Used for implementing formatted literal strings (f-strings). Pops an optional &lt;em&gt;fmt_spec&lt;/em&gt; from the stack, then a required &lt;em&gt;value&lt;/em&gt;. &lt;em&gt;flags&lt;/em&gt; is interpreted as follows:</source>
          <target state="translated">用于实现格式化的文字字符串（f字符串）。从堆栈中&lt;em&gt;弹出&lt;/em&gt;一个可选的&lt;em&gt;fmt_spec&lt;/em&gt;，然后是一个必需的&lt;em&gt;值&lt;/em&gt;。&lt;em&gt;标志&lt;/em&gt;的解释如下：</target>
        </trans-unit>
        <trans-unit id="fcc54f6a9aa92d7a088351515d65a7c819a35b89" translate="yes" xml:space="preserve">
          <source>Used internally for PIL-style arrays. The value is informational only.</source>
          <target state="translated">内部用于PIL类型的数组。该值只提供信息。</target>
        </trans-unit>
        <trans-unit id="6491331167a81c53e5c33555dd1c8389a48d8445" translate="yes" xml:space="preserve">
          <source>Used to communicate with horizontal scrollbars.</source>
          <target state="translated">用于与水平滚动条通信。</target>
        </trans-unit>
        <trans-unit id="c64f9f83dce5dde840388bdaecc8458dccd14e03" translate="yes" xml:space="preserve">
          <source>Used to communicate with vertical scrollbars. For some more information, see above.</source>
          <target state="translated">用于与垂直滚动条通信。更多信息,请参见上文。</target>
        </trans-unit>
        <trans-unit id="bf4ad9ddaa5df0e2aafe056836983124424bd313" translate="yes" xml:space="preserve">
          <source>Used to compare</source>
          <target state="translated">用于比较</target>
        </trans-unit>
        <trans-unit id="91a1d8f2678510dd75c3aa4dbdec84d9816a43ed" translate="yes" xml:space="preserve">
          <source>Used to compute initial rollover time</source>
          <target state="translated">用于计算初始翻转时间</target>
        </trans-unit>
        <trans-unit id="08a327ec030bd193b20ca54e75819675f7371b1c" translate="yes" xml:space="preserve">
          <source>Used to indicate a set of characters. In a set:</source>
          <target state="translated">用于表示一组字符。在一组。</target>
        </trans-unit>
        <trans-unit id="f0e9f07f7d6a756d8e0d078a5e0fe1a3f6b1b536" translate="yes" xml:space="preserve">
          <source>Useful constants representing internal nodes of the parse tree.</source>
          <target state="translated">代表解析树内部节点的有用常量。</target>
        </trans-unit>
        <trans-unit id="87be7f67261e2f0fefc8a90dca21ae95816dbf29" translate="yes" xml:space="preserve">
          <source>Useful constants representing leaf nodes of the parse tree and functions for testing node values.</source>
          <target state="translated">代表解析树叶子节点的有用常量和测试节点值的函数。</target>
        </trans-unit>
        <trans-unit id="ba015f21c7d53068a8d1713a783f9a4aa518b47d" translate="yes" xml:space="preserve">
          <source>Useful example of &lt;a href=&quot;#module-atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; to read and write &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; history files.</source>
          <target state="translated">&lt;a href=&quot;#module-atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; 的&lt;/a&gt;有用示例，用于读取和写入&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;历史记录文件。</target>
        </trans-unit>
        <trans-unit id="819cd88d697fb04114357734d0a4953e1648cc70" translate="yes" xml:space="preserve">
          <source>Useful handlers included with the logging module.</source>
          <target state="translated">日志模块中包含有用的处理程序。</target>
        </trans-unit>
        <trans-unit id="bffb7bde8fb1030560f8c81be752d28554cebade" translate="yes" xml:space="preserve">
          <source>User ID of the user who originally stored this member.</source>
          <target state="translated">最初存储该成员的用户ID。</target>
        </trans-unit>
        <trans-unit id="f30e1fe7c0b6acd8745b10a765a7f4fb5c5ee0d0" translate="yes" xml:space="preserve">
          <source>User code can define additional warning categories by subclassing one of the standard warning categories. A warning category must always be a subclass of the &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">用户代码可以通过将标准警告类别之一子类化来定义其他警告类别。警告类别必须始终是&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;类的子类。</target>
        </trans-unit>
        <trans-unit id="dd76a6ef01344dc63fffbe020875acc447df8daf" translate="yes" xml:space="preserve">
          <source>User code can raise built-in exceptions. This can be used to test an exception handler or to report an error condition &amp;ldquo;just like&amp;rdquo; the situation in which the interpreter raises the same exception; but beware that there is nothing to prevent user code from raising an inappropriate error.</source>
          <target state="translated">用户代码可以引发内置异常。这可以用来测试异常处理程序或报告错误条件，就像解释器引发相同异常的情况一样。但请注意，没有什么可以防止用户代码引发不适当的错误。</target>
        </trans-unit>
        <trans-unit id="9f14b6f0b236ede7621ba0fdd6909e518df52703" translate="yes" xml:space="preserve">
          <source>User code does not normally need to call &lt;code&gt;auth&lt;/code&gt; directly, but can instead call the &lt;a href=&quot;#smtplib.SMTP.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; method, which will try each of the above mechanisms in turn, in the order listed. &lt;code&gt;auth&lt;/code&gt; is exposed to facilitate the implementation of authentication methods not (or not yet) supported directly by &lt;a href=&quot;#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用户代码通常不需要直接调用 &lt;code&gt;auth&lt;/code&gt; ，而是可以调用&lt;a href=&quot;#smtplib.SMTP.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;方法，该方法将按列出的顺序依次尝试上述每种机制。公开 &lt;code&gt;auth&lt;/code&gt; 是为了促进&lt;a href=&quot;#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;不直接（或尚未）支持的身份验证方法的实现。</target>
        </trans-unit>
        <trans-unit id="84a81fa60a53fd3f70212f8a883a1173635ab4b0" translate="yes" xml:space="preserve">
          <source>User command interpreter</source>
          <target state="translated">用户命令解释器</target>
        </trans-unit>
        <trans-unit id="e5adf91ece726624b104dd2485c2a839a6328d16" translate="yes" xml:space="preserve">
          <source>User defined flags for file.</source>
          <target state="translated">用户自定义文件的标志。</target>
        </trans-unit>
        <trans-unit id="837ac2f806f11ca580d1c3781163b0e72e002397" translate="yes" xml:space="preserve">
          <source>User defined generic type aliases are also supported. Examples:</source>
          <target state="translated">也支持用户定义的通用类型别名。例如:</target>
        </trans-unit>
        <trans-unit id="b74dd2344f56ad9942272568c160da474cef5e98" translate="yes" xml:space="preserve">
          <source>User defined value.</source>
          <target state="translated">用户定义值。</target>
        </trans-unit>
        <trans-unit id="dae4b56a599d30541843d6111db279c8f6e56e71" translate="yes" xml:space="preserve">
          <source>User home directory</source>
          <target state="translated">用户主目录</target>
        </trans-unit>
        <trans-unit id="050950cdf0452013f4526d6003822fc72d925c74" translate="yes" xml:space="preserve">
          <source>User id of the owner.</source>
          <target state="translated">业主的用户ID。</target>
        </trans-unit>
        <trans-unit id="e1f63eb061937021f51dba01e97a48c55059e9c6" translate="yes" xml:space="preserve">
          <source>User identifier of the file owner.</source>
          <target state="translated">文件所有者的用户标识符。</target>
        </trans-unit>
        <trans-unit id="542fc71480dec743e60c20434ec6dd5838fc4b52" translate="yes" xml:space="preserve">
          <source>User name</source>
          <target state="translated">用户名称</target>
        </trans-unit>
        <trans-unit id="1e3704b9f36dfd77d888c25db447d4825601916a" translate="yes" xml:space="preserve">
          <source>User name or comment field</source>
          <target state="translated">用户名称或评论栏</target>
        </trans-unit>
        <trans-unit id="10ef42a45644103797c878bfd194ec705ff80ac2" translate="yes" xml:space="preserve">
          <source>User name.</source>
          <target state="translated">用户名称:</target>
        </trans-unit>
        <trans-unit id="1c40247837db435c6ac2d3e4807fdb9eaa3fcfec" translate="yes" xml:space="preserve">
          <source>User output in Shell</source>
          <target state="translated">Shell中的用户输出</target>
        </trans-unit>
        <trans-unit id="1fa0023bf437bb34f21239d1a3a528a2484c4b30" translate="yes" xml:space="preserve">
          <source>User-defined generic types</source>
          <target state="translated">用户定义的通用类型</target>
        </trans-unit>
        <trans-unit id="096a2210b655aeab11edc5d2a988883921409748" translate="yes" xml:space="preserve">
          <source>User-defined objects</source>
          <target state="translated">用户定义的对象</target>
        </trans-unit>
        <trans-unit id="9c3179efdafa77e4e40bdd02934bf184434188e0" translate="yes" xml:space="preserve">
          <source>User-defined signal 1.</source>
          <target state="translated">用户自定义信号1。</target>
        </trans-unit>
        <trans-unit id="8377c5e3ae0d4764e95e0051fad273030d085fc1" translate="yes" xml:space="preserve">
          <source>User-defined signal 2.</source>
          <target state="translated">用户自定义信号2。</target>
        </trans-unit>
        <trans-unit id="d237d99366c12cd2bbf976603224da547f3ec351" translate="yes" xml:space="preserve">
          <source>UserDict objects</source>
          <target state="translated">UserDict对象</target>
        </trans-unit>
        <trans-unit id="43496013c3e57310ccf58d32810be25b59dbdc0f" translate="yes" xml:space="preserve">
          <source>UserList objects</source>
          <target state="translated">用户列表对象</target>
        </trans-unit>
        <trans-unit id="fdbfc8c4e254851301cd44b01a7f822ceaae5ea4" translate="yes" xml:space="preserve">
          <source>UserString objects</source>
          <target state="translated">UserString对象</target>
        </trans-unit>
        <trans-unit id="d7c41484c828a997d0c616496cb5a9ba5f11a17d" translate="yes" xml:space="preserve">
          <source>UserWarning</source>
          <target state="translated">UserWarning</target>
        </trans-unit>
        <trans-unit id="a53964d7702a603f5cc33f3432206f51279cc2ec" translate="yes" xml:space="preserve">
          <source>Users are expected to subclass &lt;a href=&quot;#xml.sax.handler.ContentHandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to support their application. The following methods are called by the parser on the appropriate events in the input document:</source>
          <target state="translated">用户应&lt;a href=&quot;#xml.sax.handler.ContentHandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;子类以支持其应用程序。解析器在输入文档中的相应事件上调用以下方法：</target>
        </trans-unit>
        <trans-unit id="45a5cf6473d9786c93e12f2179a5a34390bce117" translate="yes" xml:space="preserve">
          <source>Uses an incremental decoder to iteratively decode the input provided by &lt;em&gt;iterator&lt;/em&gt;. This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;. The &lt;em&gt;errors&lt;/em&gt; argument (as well as any other keyword argument) is passed through to the incremental decoder.</source>
          <target state="translated">使用增量解码器对&lt;em&gt;iterator&lt;/em&gt;提供的输入进行迭代解码。此函数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;。的&lt;em&gt;误差&lt;/em&gt;参数（以及任何其他关键字参数）通过以增量解码器通过。</target>
        </trans-unit>
        <trans-unit id="f2afb048c0c5ee80a6cab60018630eb3a6a62b53" translate="yes" xml:space="preserve">
          <source>Uses an incremental decoder to iteratively decode the input provided by &lt;em&gt;iterator&lt;/em&gt;. This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;. The &lt;em&gt;errors&lt;/em&gt; argument (as well as any other keyword argument) is passed through to the incremental decoder.</source>
          <target state="translated">使用增量解码器迭代解码&lt;em&gt;iterator&lt;/em&gt;提供的输入。此函数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;。的&lt;em&gt;误差&lt;/em&gt;参数（以及任何其他关键字参数）通过以增量解码器通过。</target>
        </trans-unit>
        <trans-unit id="97ee2b4b00c59db46e2110ba3dfbbe7fc0fb5b55" translate="yes" xml:space="preserve">
          <source>Uses an incremental encoder to iteratively encode the input provided by &lt;em&gt;iterator&lt;/em&gt;. This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;. The &lt;em&gt;errors&lt;/em&gt; argument (as well as any other keyword argument) is passed through to the incremental encoder.</source>
          <target state="translated">使用增量编码器对&lt;em&gt;iterator&lt;/em&gt;提供的输入进行迭代编码。此函数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;。的&lt;em&gt;误差&lt;/em&gt;参数（以及任何其他关键字参数）通过以增量编码器通过。</target>
        </trans-unit>
        <trans-unit id="3c7c1bda0c9869e5a64dd786b5c0e23a68919047" translate="yes" xml:space="preserve">
          <source>Uses an incremental encoder to iteratively encode the input provided by &lt;em&gt;iterator&lt;/em&gt;. This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;. The &lt;em&gt;errors&lt;/em&gt; argument (as well as any other keyword argument) is passed through to the incremental encoder.</source>
          <target state="translated">使用增量编码器对&lt;em&gt;iterator&lt;/em&gt;提供的输入进行迭代编码。此函数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;。的&lt;em&gt;误差&lt;/em&gt;参数（以及任何其他关键字参数）通过以增量编码器通过。</target>
        </trans-unit>
        <trans-unit id="1796fd07c3abc6b437c002199b8dec150da9d3ce" translate="yes" xml:space="preserve">
          <source>Uses the most efficient &lt;em&gt;selector&lt;/em&gt; available for the given platform. It is also possible to manually configure the exact selector implementation to be used:</source>
          <target state="translated">使用给定平台上最有效的&lt;em&gt;选择器&lt;/em&gt;。也可以手动配置要使用的确切选择器实现：</target>
        </trans-unit>
        <trans-unit id="f0e598218cf75820dbb2cd3bea919913cabb5e7e" translate="yes" xml:space="preserve">
          <source>Using 2to3</source>
          <target state="translated">使用2至3</target>
        </trans-unit>
        <trans-unit id="b22ccfadca9ffaf0ddcc4fc0358c97c924012086" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt;&lt;code&gt;BZ2Compressor&lt;/code&gt;&lt;/a&gt; for incremental compression:</source>
          <target state="translated">使用&lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt; &lt;code&gt;BZ2Compressor&lt;/code&gt; &lt;/a&gt;进行增量压缩：</target>
        </trans-unit>
        <trans-unit id="7eebc61ad3858b05e62f7bd808af37d63075ffd3" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#bz2.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bz2.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; to demonstrate round-trip compression:</source>
          <target state="translated">使用&lt;a href=&quot;#bz2.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#bz2.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;演示往返压缩：</target>
        </trans-unit>
        <trans-unit id="2029fedc2458a13f77c1f9a3bf4c5809903fcd63" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43d26a426ee79b95bc796073c23282baef718e71" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; would look like:</source>
          <target state="translated">使用&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;看起来像：</target>
        </trans-unit>
        <trans-unit id="3332153ff30b7216dceddba7970328bb03f8b0c5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt; with an algorithm provided by OpenSSL:</source>
          <target state="translated">将&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;与OpenSSL提供的算法结合使用：</target>
        </trans-unit>
        <trans-unit id="ad62c774eb93ab84a6850c05f0ec364f019a5e7b" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#module-json.tool&quot;&gt;&lt;code&gt;json.tool&lt;/code&gt;&lt;/a&gt; from the shell to validate and pretty-print:</source>
          <target state="translated">从外壳使用&lt;a href=&quot;#module-json.tool&quot;&gt; &lt;code&gt;json.tool&lt;/code&gt; &lt;/a&gt;进行验证并进行漂亮打印：</target>
        </trans-unit>
        <trans-unit id="d464f393105084bac6303efd2c33e015be5fe683" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4e7ad4acf32468f4df31858e1a7c38b2a8027571" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; to check if a user is authorized to e.g. open a file before actually doing so using &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; creates a security hole, because the user might exploit the short time interval between checking and opening the file to manipulate it. It&amp;rsquo;s preferable to use &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt; techniques. For example:</source>
          <target state="translated">在实际使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;之前使用&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;检查用户是否被授权打开文件，这会造成安全漏洞，因为用户可能会利用检查和打开文件之间的较短时间间隔来进行操作。最好使用&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt;技术。例如：</target>
        </trans-unit>
        <trans-unit id="63d8dc5be3ecbd899690945c88764160cbddb011" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; to check if a user is authorized to e.g. open a file before actually doing so using &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; creates a security hole, because the user might exploit the short time interval between checking and opening the file to manipulate it. It&amp;rsquo;s preferable to use &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt; techniques. For example:</source>
          <target state="translated">在实际使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;之前，使用&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;检查用户是否被授权例如打开文件会造成安全漏洞，因为用户可能会利用检查和打开文件之间的较短时间间隔来进行操作。最好使用&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt;技术。例如：</target>
        </trans-unit>
        <trans-unit id="05e46086069a4eb6aba79398aaeef75e0337d56c" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.listdir&quot;&gt;&lt;code&gt;listdir()&lt;/code&gt;&lt;/a&gt; can significantly increase the performance of code that also needs file type or file attribute information, because &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; objects expose this information if the operating system provides it when scanning a directory. All &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; methods may perform a system call, but &lt;a href=&quot;#os.DirEntry.is_dir&quot;&gt;&lt;code&gt;is_dir()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.DirEntry.is_file&quot;&gt;&lt;code&gt;is_file()&lt;/code&gt;&lt;/a&gt; usually only require a system call for symbolic links; &lt;a href=&quot;#os.DirEntry.stat&quot;&gt;&lt;code&gt;os.DirEntry.stat()&lt;/code&gt;&lt;/a&gt; always requires a system call on Unix but only requires one for symbolic links on Windows.</source>
          <target state="translated">使用&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#os.listdir&quot;&gt; &lt;code&gt;listdir()&lt;/code&gt; &lt;/a&gt;可以显着提高还需要文件类型或文件属性信息的代码的性能，因为如果操作系统在扫描目录时提供了&lt;a href=&quot;#os.DirEntry&quot;&gt; &lt;code&gt;os.DirEntry&lt;/code&gt; &lt;/a&gt;对象，则os.DirEntry对象将公开此信息。所有的&lt;a href=&quot;#os.DirEntry&quot;&gt; &lt;code&gt;os.DirEntry&lt;/code&gt; &lt;/a&gt;方法都可以执行系统调用，但是&lt;a href=&quot;#os.DirEntry.is_dir&quot;&gt; &lt;code&gt;is_dir()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.DirEntry.is_file&quot;&gt; &lt;code&gt;is_file()&lt;/code&gt; &lt;/a&gt;通常只需要系统调用即可进行符号链接。&lt;a href=&quot;#os.DirEntry.stat&quot;&gt; &lt;code&gt;os.DirEntry.stat()&lt;/code&gt; &lt;/a&gt;在Unix上始终需要系统调用，而在Windows上只需要一个系统链接即可。</target>
        </trans-unit>
        <trans-unit id="43f15eefbfb3d963e7a0530dd61833be3ae7e150" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt; ensured we could accurately record the peak during the computation of &lt;code&gt;small_sum&lt;/code&gt;, even though it is much smaller than the overall peak size of memory blocks since the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; call. Without the call to &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;second_peak&lt;/code&gt; would still be the peak from the computation &lt;code&gt;large_sum&lt;/code&gt; (that is, equal to &lt;code&gt;first_peak&lt;/code&gt;). In this case, both peaks are much higher than the final memory usage, and which suggests we could optimise (by removing the unnecessary call to &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, and writing &lt;code&gt;sum(range(...))&lt;/code&gt;).</source>
          <target state="translated">使用&lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; 可以&lt;/a&gt;确保我们可以在 &lt;code&gt;small_sum&lt;/code&gt; 的计算过程中准确记录峰，即使该峰比自&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;调用以来内存块的总峰大小小得多。如果没有调用&lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;second_peak&lt;/code&gt; 仍将是计算 &lt;code&gt;large_sum&lt;/code&gt; 的峰值（即等于 &lt;code&gt;first_peak&lt;/code&gt; ）。在这种情况下，两个峰值都比最终的内存使用量高得多，这表明我们可以进行优化（通过删除对&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;的不必要调用，并写入 &lt;code&gt;sum(range(...))&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3883f28289ce4c7d604b31aff5ba0b408a5bf2f7" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; to return a sequence of values:</source>
          <target state="translated">使用&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt;返回值序列：</target>
        </trans-unit>
        <trans-unit id="ea0de95702cc7230baa48c3cfd3852b48dab7f01" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e3aeddb8fef1ed2a7cff5e13174b13353739c23" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; would look like:</source>
          <target state="translated">使用&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;看起来像：</target>
        </trans-unit>
        <trans-unit id="2689ab8940d02d7de1ca68e6a4b43fe67530d0bc" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; as a context manager is a great way to ensure your file handles are closed properly and is becoming common:</source>
          <target state="translated">使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;作为上下文管理器是一种确保正确关闭文件句柄并使其变得常见的好方法：</target>
        </trans-unit>
        <trans-unit id="75ece5db0a196d8368913a7d8ebe30c4301fe19a" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; as the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt;, it is easy to group a sequence of key-value pairs into a dictionary of lists:</source>
          <target state="translated">使用&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;作为&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;，可以很容易地将一组键值对组合成一个列表字典：</target>
        </trans-unit>
        <trans-unit id="0fff5ca8530b544b1b162b66bc324c7e008c1fcb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ZoneInfo&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;ZoneInfo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6ff2511d6a7f0fa504c9e9bb252e706108d932f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;datetime.strptime(date_string, format)&lt;/code&gt; is equivalent to:</source>
          <target state="translated">使用 &lt;code&gt;datetime.strptime(date_string, format)&lt;/code&gt; 等效于：</target>
        </trans-unit>
        <trans-unit id="65a8720d7908df41079a6d71b6ca8cbf5c0d7f39" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;importlib.metadata&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;importlib.metadata&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1c396214dc747fc568a18547cde7d0930db839" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;loop.create_connection()&lt;/code&gt; to &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;connect a socket&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;loop.create_connection()&lt;/code&gt; 来&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;连接插座&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ce11a3954da4ad24f2eda9c45c6a6a5ff16cff8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;loop.create_connection()&lt;/code&gt; to implement &lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;an echo-client&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;loop.create_connection()&lt;/code&gt; 实现&lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;echo-client&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a0274be181e65043a1f3ce90fd4b35a6ce24d25" translate="yes" xml:space="preserve">
          <source>Using Early Data in HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc8470.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 8470&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">在HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc8470.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 8470中&lt;/strong&gt;&lt;/a&gt;使用早期数据&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e73e77844e32168a133432fdc484125ad1e928e" translate="yes" xml:space="preserve">
          <source>Using Mock</source>
          <target state="translated">使用模拟</target>
        </trans-unit>
        <trans-unit id="988ffa6cf84925a7e2f11a2d4da93941ab8db1b3" translate="yes" xml:space="preserve">
          <source>Using Tix</source>
          <target state="translated">使用Tix</target>
        </trans-unit>
        <trans-unit id="a3b39b06fc36d238ca9fd0e34aa3702c74df4872" translate="yes" xml:space="preserve">
          <source>Using Ttk</source>
          <target state="translated">使用Ttk</target>
        </trans-unit>
        <trans-unit id="6f2bfcfa7f0c89ae800d87806ee91ffdff6c2390" translate="yes" xml:space="preserve">
          <source>Using UTF-8 as the Default Source Encoding</source>
          <target state="translated">使用UTF-8作为默认的源码。</target>
        </trans-unit>
        <trans-unit id="7b4dafbddf83b4c5d5c51b21c48f00b8d136bed2" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;cumulative distribution function (cdf)&lt;/a&gt;, compute the probability that a random variable &lt;em&gt;X&lt;/em&gt; will be less than or equal to &lt;em&gt;x&lt;/em&gt;. Mathematically, it is written &lt;code&gt;P(X &amp;lt;= x)&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;累积分布函数（cdf）&lt;/a&gt;，计算随机变量&lt;em&gt;X&lt;/em&gt;小于或等于&lt;em&gt;x&lt;/em&gt;的概率。在数学上，它写为 &lt;code&gt;P(X &amp;lt;= x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba910e1ce5f13f1f4ea2ed92206f282bf3b88194" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Probability_density_function&quot;&gt;probability density function (pdf)&lt;/a&gt;, compute the relative likelihood that a random variable &lt;em&gt;X&lt;/em&gt; will be near the given value &lt;em&gt;x&lt;/em&gt;. Mathematically, it is the limit of the ratio &lt;code&gt;P(x &amp;lt;=
X &amp;lt; x+dx) / dx&lt;/code&gt; as &lt;em&gt;dx&lt;/em&gt; approaches zero.</source>
          <target state="translated">使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Probability_density_function&quot;&gt;概率密度函数（pdf）&lt;/a&gt;，计算随机变量&lt;em&gt;X&lt;/em&gt;将接近给定值&lt;em&gt;x&lt;/em&gt;的相对可能性。在数学上，当&lt;em&gt;dx&lt;/em&gt;接近零时，它是比率 &lt;code&gt;P(x &amp;lt;= X &amp;lt; x+dx) / dx&lt;/code&gt; 的极限。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50e9189c5263c54e966ddb0c0fcbf7b491be40a3" translate="yes" xml:space="preserve">
          <source>Using a callable:</source>
          <target state="translated">使用一个可调用的。</target>
        </trans-unit>
        <trans-unit id="75220b874a1b14dcc1d9274c28e10a2768d28bff" translate="yes" xml:space="preserve">
          <source>Using a context manager as a function decorator</source>
          <target state="translated">将上下文管理器用作函数装饰器</target>
        </trans-unit>
        <trans-unit id="4d5214967f9aa69db8719e748debbab68f82aea5" translate="yes" xml:space="preserve">
          <source>Using a custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用自定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fde5f9719816f30ae38224d7025284ea600fd7a7" translate="yes" xml:space="preserve">
          <source>Using a custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用自定义&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de60096a210691c18ae3d3da4e5e7f7f31853253" translate="yes" xml:space="preserve">
          <source>Using a custom timer</source>
          <target state="translated">使用自定义定时器</target>
        </trans-unit>
        <trans-unit id="9ca12f2496ddb81117cd62c302718c441b5e7172" translate="yes" xml:space="preserve">
          <source>Using a descriptive string</source>
          <target state="translated">使用描述性字符串</target>
        </trans-unit>
        <trans-unit id="afb7c939cdae700f3a6eb60d7fb5128652ab012f" translate="yes" xml:space="preserve">
          <source>Using a generic class without specifying type parameters assumes &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; for each position. In the following example, &lt;code&gt;MyIterable&lt;/code&gt; is not generic but implicitly inherits from &lt;code&gt;Iterable[Any]&lt;/code&gt;:</source>
          <target state="translated">在不指定类型参数的情况下使用泛型类时，每个位置均假定为&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;。在以下示例中， &lt;code&gt;MyIterable&lt;/code&gt; 不是通用的，而是隐式继承自 &lt;code&gt;Iterable[Any]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d307c55b385e0819ab9d20174ffebefe22e8b6b6" translate="yes" xml:space="preserve">
          <source>Using a list comprehension: &lt;code&gt;[x for x in iterable]&lt;/code&gt;</source>
          <target state="translated">使用列表推导： &lt;code&gt;[x for x in iterable]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9615543c2d928cf50040f980706115431fc8728d" translate="yes" xml:space="preserve">
          <source>Using a pair of parentheses to denote the empty tuple: &lt;code&gt;()&lt;/code&gt;</source>
          <target state="translated">使用一对圆括号表示空元组：（ &lt;code&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bc851502c6676f542b9ab198cbf3f862b23400c" translate="yes" xml:space="preserve">
          <source>Using a pair of square brackets to denote the empty list: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">使用一对方括号表示空白列表： &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5a75250125304baf8a8f8d2739eb842d37fc846" translate="yes" xml:space="preserve">
          <source>Using a pool of workers</source>
          <target state="translated">使用一个工人库</target>
        </trans-unit>
        <trans-unit id="8383415a2a10a3f8f1036870f131e3fe6f99e151" translate="yes" xml:space="preserve">
          <source>Using a remote manager</source>
          <target state="translated">使用远程管理器</target>
        </trans-unit>
        <trans-unit id="f23700feacc3a477143f8b09438dc2426f25eecd" translate="yes" xml:space="preserve">
          <source>Using a separate test for &amp;ldquo;liveness&amp;rdquo; creates race conditions in threaded applications; another thread can cause a weak reference to become invalidated before the weak reference is called; the idiom shown above is safe in threaded applications as well as single-threaded applications.</source>
          <target state="translated">使用单独的&amp;ldquo;活动性&amp;rdquo;测试会在线程应用程序中创建竞争条件。在调用弱引用之前，另一个线程可能导致弱引用变得无效；上面显示的成语在线程应用程序和单线程应用程序中都是安全的。</target>
        </trans-unit>
        <trans-unit id="38537e54bac1a305fb2ceea706898c0b3eab781f" translate="yes" xml:space="preserve">
          <source>Using a string as the value would look like:</source>
          <target state="translated">使用字符串作为值是这样的。</target>
        </trans-unit>
        <trans-unit id="a0514595eb268ee9e74173dda1049b389b853d97" translate="yes" xml:space="preserve">
          <source>Using a trailing comma for a singleton tuple: &lt;code&gt;a,&lt;/code&gt; or &lt;code&gt;(a,)&lt;/code&gt;</source>
          <target state="translated">对单例元组使用尾随逗号： &lt;code&gt;a,&lt;/code&gt; 或 &lt;code&gt;(a,)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac783cf466229eb8f1ea0637db6e6bae53f92af8" translate="yes" xml:space="preserve">
          <source>Using a value in the configuration dict lets configurations to be sent over the wire as pickled dicts to a socket listener. Thus, the logging verbosity of a long-running application can be altered over time with no need to stop and restart the application.</source>
          <target state="translated">在配置dict中使用一个值,可以将配置以pickled dict的形式通过线缆发送到socket监听器。这样一来,一个长期运行的应用程序的日志字数就可以随着时间的推移而改变,而不需要停止和重新启动应用程序。</target>
        </trans-unit>
        <trans-unit id="2f653044b0deb519381cad92e86f64dbb241a7b3" translate="yes" xml:space="preserve">
          <source>Using adapters to store additional Python types in SQLite databases</source>
          <target state="translated">使用适配器在SQLite数据库中存储额外的Python类型。</target>
        </trans-unit>
        <trans-unit id="8ed960171bb00be50b6cf25e8e3d2d57ed5e8c5b" translate="yes" xml:space="preserve">
          <source>Using an auto-numbering &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; would look like:</source>
          <target state="translated">使用自动编号&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;看起来像：</target>
        </trans-unit>
        <trans-unit id="65a99d80248d09ce12fe7957e9d28ac5caabeb35" translate="yes" xml:space="preserve">
          <source>Using an auto-numbering &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; would look like:</source>
          <target state="translated">使用自动编号&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;看起来像：</target>
        </trans-unit>
        <trans-unit id="d9684f34bd96b132133b1597608ee067cffce7c3" translate="yes" xml:space="preserve">
          <source>Using any of these methods signifies to the user that these values are not important, and also enables one to add, remove, or reorder members without having to renumber the remaining members.</source>
          <target state="translated">使用这些方法中的任何一种,都向用户表示这些值并不重要,而且还可以添加、删除或重新排列成员,而不必对其余成员重新编号。</target>
        </trans-unit>
        <trans-unit id="6ef4f4199027402c151a50d927a41c2996ff8f9f" translate="yes" xml:space="preserve">
          <source>Using automatic values</source>
          <target state="translated">使用自动值</target>
        </trans-unit>
        <trans-unit id="8e18b23aa8166ee94001b3c568e708c504704e7c" translate="yes" xml:space="preserve">
          <source>Using dataclasses, &lt;em&gt;if&lt;/em&gt; this code was valid:</source>
          <target state="translated">&lt;em&gt;如果&lt;/em&gt;此代码有效，&lt;em&gt;则&lt;/em&gt;使用数据类：</target>
        </trans-unit>
        <trans-unit id="121ccf7d7533afb43d6d034aec33aed44552426e" translate="yes" xml:space="preserve">
          <source>Using default factory functions is a way to create new instances of mutable types as default values for fields:</source>
          <target state="translated">使用默认工厂函数是一种创建新的可变类型实例作为字段默认值的方法。</target>
        </trans-unit>
        <trans-unit id="8e6559d2f6f048a1637ae00fb7cb017f563475f7" translate="yes" xml:space="preserve">
          <source>Using different digest sizes</source>
          <target state="translated">使用不同大小的消化器</target>
        </trans-unit>
        <trans-unit id="255ce6190840fec731e885d587707ae723af9b80" translate="yes" xml:space="preserve">
          <source>Using events</source>
          <target state="translated">使用事件</target>
        </trans-unit>
        <trans-unit id="de77a822ff9b97844fd2f5eef17f93a224452770" translate="yes" xml:space="preserve">
          <source>Using importlib.metadata</source>
          <target state="translated">使用importlib.metadata</target>
        </trans-unit>
        <trans-unit id="94dd17d3eee91a6f460b34718a819c2ee9b54b47" translate="yes" xml:space="preserve">
          <source>Using locks, conditions, and semaphores in the &lt;code&gt;with&lt;/code&gt; statement</source>
          <target state="translated">在 &lt;code&gt;with&lt;/code&gt; 语句中使用锁，条件和信号量</target>
        </trans-unit>
        <trans-unit id="72adde2953e72ee1f91517e883fc94f79d9bef65" translate="yes" xml:space="preserve">
          <source>Using long option names is equally easy:</source>
          <target state="translated">使用长的期权名称同样简单。</target>
        </trans-unit>
        <trans-unit id="f99afb1c0580e5c9200f58e2effc9e111e841402" translate="yes" xml:space="preserve">
          <source>Using maildir format</source>
          <target state="translated">使用maildir格式</target>
        </trans-unit>
        <trans-unit id="c3e9900bea0722fcf9bc91bc0b782f7afce3e773" translate="yes" xml:space="preserve">
          <source>Using partial objects is usually more convenient than using lambdas, as asyncio can render partial objects better in debug and error messages.</source>
          <target state="translated">使用部分对象通常比使用lambdas更方便,asyncio可以在调试和错误信息中更好地渲染部分对象。</target>
        </trans-unit>
        <trans-unit id="799ae737f71621b7f1a5b1c9102fbd2295987f9d" translate="yes" xml:space="preserve">
          <source>Using screen events</source>
          <target state="translated">使用屏幕事件</target>
        </trans-unit>
        <trans-unit id="c0f796650a131fcb2aa652625b99a9658f346ae5" translate="yes" xml:space="preserve">
          <source>Using separate &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; instances instead of reusing a single instance avoids that problem:</source>
          <target state="translated">使用单独的&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;实例而不是重用单个实例可以避免该问题：</target>
        </trans-unit>
        <trans-unit id="3442d5c13fd47976c3bf0ec76271111a44909d9e" translate="yes" xml:space="preserve">
          <source>Using shortcut methods</source>
          <target state="translated">使用快捷方法</target>
        </trans-unit>
        <trans-unit id="c2d8da51afc83980ac89c6ca94ec45396b00f1ac" translate="yes" xml:space="preserve">
          <source>Using sqlite3 efficiently</source>
          <target state="translated">高效使用sqlite3</target>
        </trans-unit>
        <trans-unit id="320599014228e813440efb4020e5b50ef5441b66" translate="yes" xml:space="preserve">
          <source>Using square brackets, separating items with commas: &lt;code&gt;[a]&lt;/code&gt;, &lt;code&gt;[a, b, c]&lt;/code&gt;</source>
          <target state="translated">使用方括号，用逗号分隔项目： &lt;code&gt;[a]&lt;/code&gt; ， &lt;code&gt;[a, b, c]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d8c6027625bc1e5d809004bd3a7dfcd28685592" translate="yes" xml:space="preserve">
          <source>Using sysconfig as a script</source>
          <target state="translated">将sysconfig作为脚本使用</target>
        </trans-unit>
        <trans-unit id="c598912622c37d39a35330e55608828824a76ad7" translate="yes" xml:space="preserve">
          <source>Using the &amp;ldquo;&lt;code&gt;**&lt;/code&gt;&amp;rdquo; pattern in large directory trees may consume an inordinate amount of time.</source>
          <target state="translated">在大型目录树中使用&amp;ldquo; &lt;code&gt;**&lt;/code&gt; &amp;rdquo;模式可能会花费过多时间。</target>
        </trans-unit>
        <trans-unit id="20b1a4d90df2ea292b0302f5e727d9dd477ac602" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#module-zipapp&quot;&gt;&lt;code&gt;zipapp&lt;/code&gt;&lt;/a&gt; module, it is possible to create self-contained Python programs, which can be distributed to end users who only need to have a suitable version of Python installed on their system. The key to doing this is to bundle all of the application&amp;rsquo;s dependencies into the archive, along with the application code.</source>
          <target state="translated">使用&lt;a href=&quot;#module-zipapp&quot;&gt; &lt;code&gt;zipapp&lt;/code&gt; &lt;/a&gt;模块，可以创建自包含的Python程序，这些程序可以分发给只需要在系统上安装合适版本的Python的最终用户。这样做的关键是将所有应用程序的依赖项以及应用程序代码一起捆绑到存档中。</target>
        </trans-unit>
        <trans-unit id="7864597e7acea55d09dd94985971ff805ed9a8a0" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt;&lt;code&gt;Process.terminate&lt;/code&gt;&lt;/a&gt; method to stop a process is liable to cause any shared resources (such as locks, semaphores, pipes and queues) currently being used by the process to become broken or unavailable to other processes.</source>
          <target state="translated">使用&lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt; &lt;code&gt;Process.terminate&lt;/code&gt; &lt;/a&gt;方法停止一个进程很容易导致该进程当前正在使用的任何共享资源（例如锁，信号灯，管道和队列）损坏或对其他进程不可用。</target>
        </trans-unit>
        <trans-unit id="b726411759353a962ae614ca51a43d068731b30e" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple()&lt;/code&gt;&lt;/a&gt; built-in: &lt;code&gt;tuple()&lt;/code&gt; or &lt;code&gt;tuple(iterable)&lt;/code&gt;</source>
          <target state="translated">使用内置的&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple()&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;tuple()&lt;/code&gt; 或 &lt;code&gt;tuple(iterable)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0ec3b2c78661be37f08ee0e348df3f3bf59e0b9" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;devmode#devmode&quot;&gt;Python开发模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b90745245f4a0f18b1bf49ea4cccb202e2b1025" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt; Python command line option.</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;dev&lt;/code&gt; Python命令行选项。</target>
        </trans-unit>
        <trans-unit id="0fd2d05a10558a5e6e11eb83de43bd2b9e3020b5" translate="yes" xml:space="preserve">
          <source>Using the Ttk widgets gives the application an improved look and feel. As discussed above, there are differences in how the styling is coded.</source>
          <target state="translated">使用Ttk小组件可以给应用程序带来更好的外观和感觉。如上所述,风格的编码方式是有差异的。</target>
        </trans-unit>
        <trans-unit id="a8b1f1cc65fb2aeb01222b99772f21a79b8f9f1c" translate="yes" xml:space="preserve">
          <source>Using the cgi module</source>
          <target state="translated">使用cgi模块</target>
        </trans-unit>
        <trans-unit id="414513cd2ccd5f659d92ac7be558ff20be654791" translate="yes" xml:space="preserve">
          <source>Using the comma as a thousands separator:</source>
          <target state="translated">用逗号作为千位分隔符。</target>
        </trans-unit>
        <trans-unit id="4be88d9241472398fa24fa0cf31272713a8b4373" translate="yes" xml:space="preserve">
          <source>Using the connection as a context manager</source>
          <target state="translated">将连接作为上下文管理器使用</target>
        </trans-unit>
        <trans-unit id="3f82472d95e0faa8f20343f14d65c9d0b7f0391e" translate="yes" xml:space="preserve">
          <source>Using the file after calling &lt;code&gt;flush()&lt;/code&gt; or &lt;code&gt;close()&lt;/code&gt; on the &lt;a href=&quot;#mailbox.MMDF&quot;&gt;&lt;code&gt;MMDF&lt;/code&gt;&lt;/a&gt; instance may yield unpredictable results or raise an exception.</source>
          <target state="translated">在&lt;a href=&quot;#mailbox.MMDF&quot;&gt; &lt;code&gt;MMDF&lt;/code&gt; &lt;/a&gt;实例上调用 &lt;code&gt;flush()&lt;/code&gt; 或 &lt;code&gt;close()&lt;/code&gt; 之后使用该文件可能会产生不可预测的结果或引发异常。</target>
        </trans-unit>
        <trans-unit id="99db02a945df11fe3bf69aa645bc3e8c058040d1" translate="yes" xml:space="preserve">
          <source>Using the file after calling &lt;code&gt;flush()&lt;/code&gt; or &lt;code&gt;close()&lt;/code&gt; on the &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; instance may yield unpredictable results or raise an exception.</source>
          <target state="translated">在&lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt;实例上调用 &lt;code&gt;flush()&lt;/code&gt; 或 &lt;code&gt;close()&lt;/code&gt; 之后使用该文件可能会产生不可预测的结果或引发异常。</target>
        </trans-unit>
        <trans-unit id="657776931d7a6faef6a4a5155f927f48b4e36008" translate="yes" xml:space="preserve">
          <source>Using the nonstandard &lt;code&gt;execute()&lt;/code&gt;, &lt;code&gt;executemany()&lt;/code&gt; and &lt;code&gt;executescript()&lt;/code&gt; methods of the &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object, your code can be written more concisely because you don&amp;rsquo;t have to create the (often superfluous) &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; objects explicitly. Instead, the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; objects are created implicitly and these shortcut methods return the cursor objects. This way, you can execute a &lt;code&gt;SELECT&lt;/code&gt; statement and iterate over it directly using only a single call on the &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">使用非标准 &lt;code&gt;execute()&lt;/code&gt; ， &lt;code&gt;executemany()&lt;/code&gt; 和 &lt;code&gt;executescript()&lt;/code&gt; 的方法&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;，因为你没有创建（通常是多余的），你的代码可以更简洁书写物体&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;明确对象。而是隐式创建&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;对象，并且这些快捷方式方法返回游标对象。这样，您可以执行 &lt;code&gt;SELECT&lt;/code&gt; 语句并直接使用&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;对象上的单个调用直接对其进行迭代。</target>
        </trans-unit>
        <trans-unit id="47aee112b6935fb523810f9a1f409db0f6fb290a" translate="yes" xml:space="preserve">
          <source>Using the standard (non-&lt;code&gt;compat32&lt;/code&gt;) policies, the returned value is an instance of a subclass of &lt;a href=&quot;email.headerregistry#email.headerregistry.BaseHeader&quot;&gt;&lt;code&gt;email.headerregistry.BaseHeader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用标准（非 &lt;code&gt;compat32&lt;/code&gt; ）策略，返回的值是&lt;a href=&quot;email.headerregistry#email.headerregistry.BaseHeader&quot;&gt; &lt;code&gt;email.headerregistry.BaseHeader&lt;/code&gt; &lt;/a&gt;的子类的实例。</target>
        </trans-unit>
        <trans-unit id="fc3fe35d196e1ad26b58992b8e30d0a618b3d15e" translate="yes" xml:space="preserve">
          <source>Using the subprocess Module</source>
          <target state="translated">使用子进程模块</target>
        </trans-unit>
        <trans-unit id="05aa4e92daaabfec4cab2e49b437833277ca4e0d" translate="yes" xml:space="preserve">
          <source>Using the type constructor: &lt;code&gt;list()&lt;/code&gt; or &lt;code&gt;list(iterable)&lt;/code&gt;</source>
          <target state="translated">使用类型构造函数： &lt;code&gt;list()&lt;/code&gt; 或 &lt;code&gt;list(iterable)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dcc39a1df1cb3105fe567a435d77e0613cb83af" translate="yes" xml:space="preserve">
          <source>Using these ASCII based operations to manipulate binary data that is not stored in an ASCII based format may lead to data corruption.</source>
          <target state="translated">使用这些基于ASCII的操作来操作不是以ASCII格式存储的二进制数据,可能会导致数据损坏。</target>
        </trans-unit>
        <trans-unit id="10ffcc30a6ebac687ec14a0dec9c03c4874f525e" translate="yes" xml:space="preserve">
          <source>Using these methods you can write nice compact code:</source>
          <target state="translated">使用这些方法你可以写出漂亮的紧凑的代码。</target>
        </trans-unit>
        <trans-unit id="c82a820d85f9921e73994a56e494b8359a6094ae" translate="yes" xml:space="preserve">
          <source>Using this attribute you can control what objects are returned for the &lt;code&gt;TEXT&lt;/code&gt; data type. By default, this attribute is set to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module will return Unicode objects for &lt;code&gt;TEXT&lt;/code&gt;. If you want to return bytestrings instead, you can set it to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用此属性，您可以控制针对 &lt;code&gt;TEXT&lt;/code&gt; 数据类型返回哪些对象。默认情况下，此属性设置为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块将为 &lt;code&gt;TEXT&lt;/code&gt; 返回Unicode对象。如果要返回字节串，则可以将其设置为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1b9a713e833be9fa7e8044191db6abaec6fbce" translate="yes" xml:space="preserve">
          <source>Using this constructor may change the semantics of your datetimes in surprising ways, only use it if you know that you need to.</source>
          <target state="translated">使用这个构造函数可能会以令人惊讶的方式改变你的datetimes的语义,只有在你知道需要时才使用它。</target>
        </trans-unit>
        <trans-unit id="88d5a4c73559123ffb06df00d967f9cd0b062c9f" translate="yes" xml:space="preserve">
          <source>Using this decorator requires that the class&amp;rsquo;s metaclass is &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; or is derived from it. A class that has a metaclass derived from &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; cannot be instantiated unless all of its abstract methods and properties are overridden. The abstract methods can be called using any of the normal &amp;lsquo;super&amp;rsquo; call mechanisms. &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt; may be used to declare abstract methods for properties and descriptors.</source>
          <target state="translated">使用此装饰器要求该类的元类为&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;或从其派生。除非实例化了所有抽象方法和属性，否则无法实例化具有从&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;派生的元类的类。可以使用任何正常的&amp;ldquo;超级&amp;rdquo;调用机制来调用抽象方法。&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; &lt;/a&gt;可用于声明属性和描述符的抽象方法。</target>
        </trans-unit>
        <trans-unit id="04978a627ce1975c2d08d1fe862ff2c396639ee3" translate="yes" xml:space="preserve">
          <source>Using type-specific formatting:</source>
          <target state="translated">使用特定类型的格式。</target>
        </trans-unit>
        <trans-unit id="6a192d773066b752e8add03087aaa95e9d5840fd" translate="yes" xml:space="preserve">
          <source>Usually an IFF-type file consists of one or more chunks. The proposed usage of the &lt;a href=&quot;#chunk.Chunk&quot;&gt;&lt;code&gt;Chunk&lt;/code&gt;&lt;/a&gt; class defined here is to instantiate an instance at the start of each chunk and read from the instance until it reaches the end, after which a new instance can be instantiated. At the end of the file, creating a new instance will fail with an &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">通常，IFF类型的文件包含一个或多个块。此处定义的&lt;a href=&quot;#chunk.Chunk&quot;&gt; &lt;code&gt;Chunk&lt;/code&gt; &lt;/a&gt;类的建议用法是在每个块的开头实例化一个实例，并从该实例读取直到到达末尾，然后可以实例化新实例。在文件末尾，创建新实例将失败，并出现&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="42f0c83d353a2c88d75349acfedbc55986b5c477" translate="yes" xml:space="preserve">
          <source>Usually message passing between processes is done using queues or by using &lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; objects returned by &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常，使用队列或使用&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe()&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;对象来完成进程之间的消息传递。</target>
        </trans-unit>
        <trans-unit id="55c3035b6a0c2c422567b7b94ec5c3d81b6f4353" translate="yes" xml:space="preserve">
          <source>Usually this option consists of the method &lt;code&gt;Scrollbar.set()&lt;/code&gt; of some scrollbar. This will cause the scrollbar to be updated whenever the view in the window changes.</source>
          <target state="translated">通常，此选项由某些滚动条的 &lt;code&gt;Scrollbar.set()&lt;/code&gt; 方法组成。每当窗口中的视图更改时，这将导致滚动条被更新。</target>
        </trans-unit>
        <trans-unit id="948448f0d7e18600e63d50ac1f18a1bd083aad1f" translate="yes" xml:space="preserve">
          <source>Usually you can use &lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt;&lt;code&gt;TestCase.skipTest()&lt;/code&gt;&lt;/a&gt; or one of the skipping decorators instead of raising this directly.</source>
          <target state="translated">通常，您可以使用&lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt; &lt;code&gt;TestCase.skipTest()&lt;/code&gt; &lt;/a&gt;或跳过的修饰符之一，而不是直接引发此修饰符。</target>
        </trans-unit>
        <trans-unit id="7159aa4ebaad10cbad60df9f2f47fdab12006d8d" translate="yes" xml:space="preserve">
          <source>Usually you use the transformer like this:</source>
          <target state="translated">通常你使用的变压器是这样的。</target>
        </trans-unit>
        <trans-unit id="3c8bb6feca38dd5baf6726db91fee35d699471bf" translate="yes" xml:space="preserve">
          <source>Usually your SQL operations will need to use values from Python variables. You shouldn&amp;rsquo;t assemble your query using Python&amp;rsquo;s string operations because doing so is insecure; it makes your program vulnerable to an SQL injection attack (see &lt;a href=&quot;https://xkcd.com/327/&quot;&gt;https://xkcd.com/327/&lt;/a&gt; for humorous example of what can go wrong).</source>
          <target state="translated">通常，您的SQL操作将需要使用Python变量中的值。您不应该使用Python的字符串操作来汇编查询，因为这样做是不安全的。它使您的程序容易受到SQL注入攻击（请参见&lt;a href=&quot;https://xkcd.com/327/&quot;&gt;https://xkcd.com/327/，&lt;/a&gt;以获取可能出问题的幽默示例）。</target>
        </trans-unit>
        <trans-unit id="1e88facb0b543dc9f14acbae6cf0f5ff030076b1" translate="yes" xml:space="preserve">
          <source>Usually, a timeout using &lt;a href=&quot;#test.support.INTERNET_TIMEOUT&quot;&gt;&lt;code&gt;INTERNET_TIMEOUT&lt;/code&gt;&lt;/a&gt; should not mark a test as failed, but skip the test instead: see &lt;a href=&quot;#test.support.socket_helper.transient_internet&quot;&gt;&lt;code&gt;transient_internet()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常，使用&lt;a href=&quot;#test.support.INTERNET_TIMEOUT&quot;&gt; &lt;code&gt;INTERNET_TIMEOUT&lt;/code&gt; &lt;/a&gt;的超时不应将测试标记为失败，而应跳过测试：请参见&lt;a href=&quot;#test.support.socket_helper.transient_internet&quot;&gt; &lt;code&gt;transient_internet()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18aef760d202fd986f9f4b8de779ecd32a97e992" translate="yes" xml:space="preserve">
          <source>Usually, ctypes does strict type checking. This means, if you have &lt;code&gt;POINTER(c_int)&lt;/code&gt; in the &lt;code&gt;argtypes&lt;/code&gt; list of a function or as the type of a member field in a structure definition, only instances of exactly the same type are accepted. There are some exceptions to this rule, where ctypes accepts other objects. For example, you can pass compatible array instances instead of pointer types. So, for &lt;code&gt;POINTER(c_int)&lt;/code&gt;, ctypes accepts an array of c_int:</source>
          <target state="translated">通常，ctypes进行严格的类型检查。这意味着，如果您在函数的 &lt;code&gt;argtypes&lt;/code&gt; 列表中具有 &lt;code&gt;POINTER(c_int)&lt;/code&gt; ，或者在结构定义中作为成员字段的类型，则仅接受完全相同类型的实例。该规则有一些例外，其中ctypes接受其他对象。例如，您可以传递兼容的数组实例而不是指针类型。因此，对于 &lt;code&gt;POINTER(c_int)&lt;/code&gt; ，ctypes接受一个c_int数组：</target>
        </trans-unit>
        <trans-unit id="4d36432a5729065510c52d7569f55dee8f7e78b0" translate="yes" xml:space="preserve">
          <source>Usually, the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#subscriptions&quot;&gt;subscription&lt;/a&gt; of container objects calls the method &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; of the object. However, the subscription of some containers&amp;rsquo; classes may call the classmethod &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; of the class instead. The classmethod &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; should return a &lt;code&gt;GenericAlias&lt;/code&gt; object.</source>
          <target state="translated">通常，&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#subscriptions&quot;&gt;订阅&lt;/a&gt;容器对象会调用对象的方法&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;。但是，某些容器类的预订可能改为调用该类的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt;方法。类方法&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt;应该返回 &lt;code&gt;GenericAlias&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="46defc487dd609e5e11afede6e42ed7efb746478" translate="yes" xml:space="preserve">
          <source>Usually, the number of elements output matches the input iterable. However, if the keyword argument &lt;em&gt;initial&lt;/em&gt; is provided, the accumulation leads off with the &lt;em&gt;initial&lt;/em&gt; value so that the output has one more element than the input iterable.</source>
          <target state="translated">通常，输出的元素数与输入的可迭代数匹配。但是，如果提供了关键字参数&lt;em&gt;initial&lt;/em&gt;，则累加会以&lt;em&gt;初始&lt;/em&gt;值开始，从而使输出的元素比可迭代的输入多。</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="fdb7e6fac588b967be8115ae1239c9f13b01bc33" translate="yes" xml:space="preserve">
          <source>Utilities for working with ASCII characters, regardless of your locale settings.</source>
          <target state="translated">用于处理ASCII字符的实用程序,无论你的语言设置如何。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
