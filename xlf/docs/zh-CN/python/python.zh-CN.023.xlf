<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="78c60cbccd7a51f00d2d498ba443cdd533a6176c" translate="yes" xml:space="preserve">
          <source>The easiest way to provide your own policy is to override this class and call its methods in your overridden implementations before adding your own additional checks:</source>
          <target state="translated">提供你自己的策略的最简单的方法是重写这个类,并在你的重载实现中调用它的方法,然后再添加你自己的附加检查。</target>
        </trans-unit>
        <trans-unit id="6c33291f3e651294d4ee970ee9b4832d9009fad1" translate="yes" xml:space="preserve">
          <source>The editing features described in previous subsections work when entering code interactively. IDLE&amp;rsquo;s Shell window also responds to the following keys.</source>
          <target state="translated">交互式输入代码时，前几小节中描述的编辑功能起作用。IDLE的&amp;ldquo;外壳&amp;rdquo;窗口还响应以下键。</target>
        </trans-unit>
        <trans-unit id="08a9deab57a6e87ba13c9cef116a534a382e5487" translate="yes" xml:space="preserve">
          <source>The effects of round-off error can be amplified by the addition or subtraction of nearly offsetting quantities resulting in loss of significance. Knuth provides two instructive examples where rounded floating point arithmetic with insufficient precision causes the breakdown of the associative and distributive properties of addition:</source>
          <target state="translated">四舍五入误差的影响会被放大,因为近乎抵消的量的加法或减法会导致意义损失。Knuth提供了两个具有指导意义的例子,在这两个例子中,精度不够的四舍五入浮点算术导致了加法的关联性和分布性的破坏。</target>
        </trans-unit>
        <trans-unit id="af646cedcd480fc2845b3a6b4f0d2380953bd50c" translate="yes" xml:space="preserve">
          <source>The element name, attribute names, and attribute values can be either bytestrings or Unicode strings. &lt;em&gt;parent&lt;/em&gt; is the parent element. &lt;em&gt;tag&lt;/em&gt; is the subelement name. &lt;em&gt;attrib&lt;/em&gt; is an optional dictionary, containing element attributes. &lt;em&gt;extra&lt;/em&gt; contains additional attributes, given as keyword arguments. Returns an element instance.</source>
          <target state="translated">元素名称，属性名称和属性值可以是字节字符串或Unicode字符串。&lt;em&gt;parent&lt;/em&gt;是父元素。&lt;em&gt;tag&lt;/em&gt;是子元素名称。&lt;em&gt;attrib&lt;/em&gt;是可选字典，包含元素属性。&lt;em&gt;extra&lt;/em&gt;包含作为关键字参数给出的其他属性。返回一个元素实例。</target>
        </trans-unit>
        <trans-unit id="3d0be1524ec53ac85afea89617259f2a7e5f14e4" translate="yes" xml:space="preserve">
          <source>The element name, attribute names, and attribute values can be either bytestrings or Unicode strings. &lt;em&gt;tag&lt;/em&gt; is the element name. &lt;em&gt;attrib&lt;/em&gt; is an optional dictionary, containing element attributes. &lt;em&gt;extra&lt;/em&gt; contains additional attributes, given as keyword arguments.</source>
          <target state="translated">元素名称，属性名称和属性值可以是字节字符串或Unicode字符串。&lt;em&gt;tag&lt;/em&gt;是元素名称。&lt;em&gt;attrib&lt;/em&gt;是可选字典，包含元素属性。&lt;em&gt;extra&lt;/em&gt;包含作为关键字参数给出的其他属性。</target>
        </trans-unit>
        <trans-unit id="cdb4dcd901151ab5c9a7f2175c497daa8c2b36c5" translate="yes" xml:space="preserve">
          <source>The element named by the model name was declared to have a content model of &lt;code&gt;ANY&lt;/code&gt;.</source>
          <target state="translated">由模型名称命名的元素被声明为具有 &lt;code&gt;ANY&lt;/code&gt; 的内容模型。</target>
        </trans-unit>
        <trans-unit id="534871b2bf6d13b459184db326339923a278d5b6" translate="yes" xml:space="preserve">
          <source>The element type name. In a namespace-using document it may have colons in it. The value is a string.</source>
          <target state="translated">元素类型名称。在使用命名空间的文档中,它可能有冒号。值是一个字符串。</target>
        </trans-unit>
        <trans-unit id="34e66592bc4e2c1b0614156015fd164a4e4c8c82" translate="yes" xml:space="preserve">
          <source>The email package calls this method with a list of strings, each string ending with the line separation characters found in the source being parsed. The first line includes the field header name and separator. All whitespace in the source is preserved. The method should return the &lt;code&gt;(name, value)&lt;/code&gt; tuple that is to be stored in the &lt;code&gt;Message&lt;/code&gt; to represent the parsed header.</source>
          <target state="translated">电子邮件包使用字符串列表来调用此方法，每个字符串都以要在源中找到的行分隔字符结尾。第一行包括字段标题名称和分隔符。源中的所有空格都将保留。该方法应返回 &lt;code&gt;(name, value)&lt;/code&gt; 元组，该元组将存储在 &lt;code&gt;Message&lt;/code&gt; 中以表示已解析的标头。</target>
        </trans-unit>
        <trans-unit id="3438c25b441b90b95233d8048c7ba543c03b2ff7" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; currently stored in the &lt;code&gt;Message&lt;/code&gt; for a given header. The method should return a string that represents that header &amp;ldquo;folded&amp;rdquo; correctly (according to the policy settings) by composing the &lt;em&gt;name&lt;/em&gt; with the &lt;em&gt;value&lt;/em&gt; and inserting &lt;a href=&quot;#email.policy.Policy.linesep&quot;&gt;&lt;code&gt;linesep&lt;/code&gt;&lt;/a&gt; characters at the appropriate places. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; for a discussion of the rules for folding email headers.</source>
          <target state="translated">电子邮件包使用给定标题的当前存储在 &lt;code&gt;Message&lt;/code&gt; 的&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值来&lt;/em&gt;调用此方法。该方法应返回一个字符串，该字符串表示该标题已正确折叠（根据策略设置），方法是将&lt;em&gt;名称&lt;/em&gt;与&lt;em&gt;值&lt;/em&gt;组成，并在适当的位置插入&lt;a href=&quot;#email.policy.Policy.linesep&quot;&gt; &lt;code&gt;linesep&lt;/code&gt; &lt;/a&gt;。有关折叠电子邮件标题的规则的讨论，请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb63a95898c5c4fb4763a2febdcbf523de818d32" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; currently stored in the &lt;code&gt;Message&lt;/code&gt; when that header is requested by the application program, and whatever the method returns is what is passed back to the application as the value of the header being retrieved. Note that there may be more than one header with the same name stored in the &lt;code&gt;Message&lt;/code&gt;; the method is passed the specific name and value of the header destined to be returned to the application.</source>
          <target state="translated">当应用程序请求该标头时，电子邮件程序包将使用当前存储在 &lt;code&gt;Message&lt;/code&gt; 中的&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值来&lt;/em&gt;调用此方法，并且该方法返回的内容将作为被检索标头的值传递回应用程序。注意，可以存在多于一个的报头和存储在相同名称的 &lt;code&gt;Message&lt;/code&gt; ;该方法将传递给标头的特定名称和值，该标头和值将返回给应用程序。</target>
        </trans-unit>
        <trans-unit id="b640d8f2580ab201b636d35ed547ad20d6e09b6b" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the name and value provided by the application program when the application program is modifying a &lt;code&gt;Message&lt;/code&gt; programmatically (as opposed to a &lt;code&gt;Message&lt;/code&gt; created by a parser). The method should return the &lt;code&gt;(name, value)&lt;/code&gt; tuple that is to be stored in the &lt;code&gt;Message&lt;/code&gt; to represent the header.</source>
          <target state="translated">当应用程序以编程方式修改 &lt;code&gt;Message&lt;/code&gt; 时（与解析器创建的 &lt;code&gt;Message&lt;/code&gt; 相反），电子邮件包将使用应用程序提供的名称和值来调用此方法。该方法应返回 &lt;code&gt;(name, value)&lt;/code&gt; 元组，该元组将存储在 &lt;code&gt;Message&lt;/code&gt; 中以表示标头。</target>
        </trans-unit>
        <trans-unit id="8f240002ee824e034224951554eb1c96d1d49a99" translate="yes" xml:space="preserve">
          <source>The email package does its best to hide the details of the various governing RFCs from the application. Conceptually the application should be able to treat the email message as a structured tree of unicode text and binary attachments, without having to worry about how these are represented when serialized. In practice, however, it is often necessary to be aware of at least some of the rules governing MIME messages and their structure, specifically the names and nature of the MIME &amp;ldquo;content types&amp;rdquo; and how they identify multipart documents. For the most part this knowledge should only be required for more complex applications, and even then it should only be the high level structure in question, and not the details of how those structures are represented. Since MIME content types are used widely in modern internet software (not just email), this will be a familiar concept to many programmers.</source>
          <target state="translated">电子邮件包会尽力隐藏应用程序中各种管理RFC的详细信息。从概念上讲，该应用程序应该能够将电子邮件视为Unicode文本和二进制附件的结构化树，而不必担心序列化时它们如何表示。但是，实际上，通常有必要至少了解一些控制MIME消息及其结构的规则，尤其是MIME&amp;ldquo;内容类型&amp;rdquo;的名称和性质以及它们如何标识多部分文档。在大多数情况下，仅对于更复杂的应用程序才需要此知识，即使如此，它也仅应是有问题的高层结构，而不是这些结构如何表示的细节。由于MIME内容类型广泛用于现代互联网软件（而不仅仅是电子邮件），这将是许多程序员熟悉的概念。</target>
        </trans-unit>
        <trans-unit id="101c5ba6b37aa8005a49597770b8d1f23548c119" translate="yes" xml:space="preserve">
          <source>The encoded data will have newlines every 76 characters as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html#section-6.8&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2045 section 6.8&lt;/strong&gt;&lt;/a&gt;, which was the de facto standard base64 specification when the XML-RPC spec was written.</source>
          <target state="translated">按照&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html#section-6.8&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2045第6.8节的规定&lt;/strong&gt;&lt;/a&gt;，编码后的数据每76个字符将有换行符，这是编写XML-RPC规范时的事实上的标准base64规范。</target>
        </trans-unit>
        <trans-unit id="79fd1f20636ced312cd94cdc52fdef0b7a8bfe16" translate="yes" xml:space="preserve">
          <source>The encoded value of the cookie &amp;mdash; this is what should be sent.</source>
          <target state="translated">Cookie的编码值-这就是应该发送的值。</target>
        </trans-unit>
        <trans-unit id="96b435363fcdcb22ea2d43ea881834604e657ced" translate="yes" xml:space="preserve">
          <source>The encoder must be able to handle zero length input and return an empty object of the output object type in this situation.</source>
          <target state="translated">编码器必须能够处理零长度输入,并在这种情况下返回一个输出对象类型的空对象。</target>
        </trans-unit>
        <trans-unit id="1631cb3d0d8698dbeb4af6cf19ae8b8843f6321c" translate="yes" xml:space="preserve">
          <source>The encoding attribute of the &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; is ignored if the &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; also contains a character stream.</source>
          <target state="translated">如果&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;也包含字符流，则将忽略&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;的编码属性。</target>
        </trans-unit>
        <trans-unit id="8d5827c34a301ab6bf0ace40ea931ae2aac9ab7c" translate="yes" xml:space="preserve">
          <source>The encoding must be a string acceptable for an XML encoding declaration (see section 4.3.3 of the XML recommendation).</source>
          <target state="translated">编码必须是XML编码声明可以接受的字符串(见XML建议的4.3.3节)。</target>
        </trans-unit>
        <trans-unit id="6a2f46957b3ba99c6e50d62370c70192d43b8f63" translate="yes" xml:space="preserve">
          <source>The encoding name included in the XML output should conform to the appropriate standards. For example, &amp;ldquo;UTF-8&amp;rdquo; is valid, but &amp;ldquo;UTF8&amp;rdquo; is not valid in an XML document&amp;rsquo;s declaration, even though Python accepts it as an encoding name. See &lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt; and &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;.</source>
          <target state="translated">XML输出中包含的编码名称应符合适当的标准。例如，&amp;ldquo; UTF-8&amp;rdquo;有效，但在XML文档的声明中&amp;ldquo; UTF8&amp;rdquo;无效，即使Python接受它作为编码名称。参见&lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt;和&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb0d09476afe905814a4dfa19f625362273705bd" translate="yes" xml:space="preserve">
          <source>The encoding string included in XML output should conform to the appropriate standards. For example, &amp;ldquo;UTF-8&amp;rdquo; is valid, but &amp;ldquo;UTF8&amp;rdquo; is not. See &lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt; and &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;.</source>
          <target state="translated">XML输出中包含的编码字符串应符合适当的标准。例如，&amp;ldquo; UTF-8&amp;rdquo;有效，但&amp;ldquo; UTF8&amp;rdquo;无效。参见&lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt;和&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="896c3228e957e8bc5147701e30cd58b086cc96dd" translate="yes" xml:space="preserve">
          <source>The end user guide for installing Python packages</source>
          <target state="translated">安装Python包的终端用户指南</target>
        </trans-unit>
        <trans-unit id="d5f67970109087508d1d4050202b6e61741b9f1a" translate="yes" xml:space="preserve">
          <source>The end-point value &lt;code&gt;b&lt;/code&gt; may or may not be included in the range depending on floating-point rounding in the equation &lt;code&gt;a + (b-a) * random()&lt;/code&gt;.</source>
          <target state="translated">根据方程式 &lt;code&gt;a + (b-a) * random()&lt;/code&gt; 中的浮点舍入，端点值 &lt;code&gt;b&lt;/code&gt; 可以包含或可以不包含在该范围内。</target>
        </trans-unit>
        <trans-unit id="a7d3c35f0e85c1a6bf781b776ea72d3b7217b57e" translate="yes" xml:space="preserve">
          <source>The entire Python program exits when no alive non-daemon threads are left.</source>
          <target state="translated">当没有活着的非守护进程线程时,整个Python程序就会退出。</target>
        </trans-unit>
        <trans-unit id="1295da24b6424a5f2becb1d572a40d22568b6040" translate="yes" xml:space="preserve">
          <source>The entire set of key/value pairs are placed into a dictionary and set as the &amp;ldquo;protected&amp;rdquo; &lt;code&gt;_info&lt;/code&gt; instance variable.</source>
          <target state="translated">将整个键/值对集合放入字典中，并设置为&amp;ldquo;受保护的&amp;rdquo; &lt;code&gt;_info&lt;/code&gt; 实例变量。</target>
        </trans-unit>
        <trans-unit id="f626d177c89f813c8672bbbbf5ed6f0e7658688e" translate="yes" xml:space="preserve">
          <source>The entity body for the request, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">请求的实体主体，如果未指定，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10c3943f73ea65136af21ded034c30fd235e6dc9" translate="yes" xml:space="preserve">
          <source>The entries &lt;em&gt;exampleturtle&lt;/em&gt; and &lt;em&gt;examplescreen&lt;/em&gt; define the names of these objects as they occur in the docstrings. The transformation of method-docstrings to function-docstrings will delete these names from the docstrings.</source>
          <target state="translated">条目&lt;em&gt;exampleturtle&lt;/em&gt;和&lt;em&gt;examplescreen&lt;/em&gt;定义了这些对象在文档字符串中出现的名称。将方法文档字符串转换为功能文档字符串会从文档字符串中删除这些名称。</target>
        </trans-unit>
        <trans-unit id="2d3bf2bcd11a295a8919305fa1689658a574d326" translate="yes" xml:space="preserve">
          <source>The entries are separated by one or more newlines. Now we convert the string into a list with each nonempty line having its own entry:</source>
          <target state="translated">这些条目由一个或多个换行符分隔。现在我们将字符串转换成一个列表,每个非空行都有自己的条目。</target>
        </trans-unit>
        <trans-unit id="a046690533f2ceb581ea9120c3d79e1cf1efa2ca" translate="yes" xml:space="preserve">
          <source>The entry&amp;rsquo;s base filename, relative to the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument.</source>
          <target state="translated">条目的基本文件名，相对于&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="85163f028cbe41023b8741f26141bdf866b4ffad" translate="yes" xml:space="preserve">
          <source>The entry&amp;rsquo;s full path name: equivalent to &lt;code&gt;os.path.join(scandir_path,
entry.name)&lt;/code&gt; where &lt;em&gt;scandir_path&lt;/em&gt; is the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument. The path is only absolute if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument was absolute. If the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument was a &lt;a href=&quot;#path-fd&quot;&gt;file descriptor&lt;/a&gt;, the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attribute is the same as the &lt;a href=&quot;#os.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">条目的完整路径名：等效于 &lt;code&gt;os.path.join(scandir_path, entry.name)&lt;/code&gt; ，其中&lt;em&gt;scandir_path&lt;/em&gt;是&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数。仅当&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数为绝对值时，该路径才是绝对&lt;em&gt;路径&lt;/em&gt;。如果&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数是&lt;a href=&quot;#path-fd&quot;&gt;文件描述符&lt;/a&gt;，则&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;属性与&lt;a href=&quot;#os.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性相同。</target>
        </trans-unit>
        <trans-unit id="6af325104c8e57bb1184ac87ae3edda497672155" translate="yes" xml:space="preserve">
          <source>The enum members have &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;values&lt;/em&gt; (the name of &lt;code&gt;Color.RED&lt;/code&gt; is &lt;code&gt;RED&lt;/code&gt;, the value of &lt;code&gt;Color.BLUE&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;, etc.)</source>
          <target state="translated">枚举成员具有&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值&lt;/em&gt;（ &lt;code&gt;Color.RED&lt;/code&gt; 的名称为 &lt;code&gt;RED&lt;/code&gt; ， &lt;code&gt;Color.BLUE&lt;/code&gt; 的值为 &lt;code&gt;3&lt;/code&gt; ，依此类推）</target>
        </trans-unit>
        <trans-unit id="e4cc568c813d1cdfe613369fc63617a986880d21" translate="yes" xml:space="preserve">
          <source>The equality operation for &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; checks for matching order.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;的相等操作检查匹配的订单。</target>
        </trans-unit>
        <trans-unit id="cb1db0558f0a93652ed687f8a8a1425bb424eec1" translate="yes" xml:space="preserve">
          <source>The equivalent operation using the &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module is somewhat longer, and allows the intermediate internal parse tree to be retained as an ST object:</source>
          <target state="translated">使用&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块的等效操作更长一些，并且允许将内部内部解析树保留为ST对象：</target>
        </trans-unit>
        <trans-unit id="20d51c761b7e7fd34e36d41458d9971587168a68" translate="yes" xml:space="preserve">
          <source>The equivalent regular expression would be</source>
          <target state="translated">相应的正则表达式为</target>
        </trans-unit>
        <trans-unit id="417fb3947ac5e64f68d7832fa02e6981fc975ca4" translate="yes" xml:space="preserve">
          <source>The equivalent to the built-in &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; that uses the formatting imposed by the instance.</source>
          <target state="translated">与使用实例施加的格式的内置&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;等效。</target>
        </trans-unit>
        <trans-unit id="140dbe22d5460219ceb93bdba6b9eac6084d4dcb" translate="yes" xml:space="preserve">
          <source>The error code.</source>
          <target state="translated">错误代码:</target>
        </trans-unit>
        <trans-unit id="3387baccbf0f6b7105d8a7d8370887d7ee98efc1" translate="yes" xml:space="preserve">
          <source>The error message or diagnostic string.</source>
          <target state="translated">错误信息或诊断字符串。</target>
        </trans-unit>
        <trans-unit id="b195b26d47178842e7757e9f55d9d77dfe1a846b" translate="yes" xml:space="preserve">
          <source>The error raised for bad ZIP files.</source>
          <target state="translated">对坏的ZIP文件提出的错误。</target>
        </trans-unit>
        <trans-unit id="01d21ac2a73f61496f718d2bb37954e437ac49a3" translate="yes" xml:space="preserve">
          <source>The error raised when a ZIP file would require ZIP64 functionality but that has not been enabled.</source>
          <target state="translated">当ZIP文件需要ZIP64功能,但未被启用时,会出现错误。</target>
        </trans-unit>
        <trans-unit id="a2b36dbb8bd95a7886aaee9447c81bc891531ec5" translate="yes" xml:space="preserve">
          <source>The error response body. This should be an HTTP response body bytestring. It defaults to the plain text, &amp;ldquo;A server error occurred. Please contact the administrator.&amp;rdquo;</source>
          <target state="translated">错误响应主体。这应该是HTTP响应正文字节串。默认为纯文本&amp;ldquo;发生服务器错误。请与管理员联系。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b073172d27313054835e89372929b95496f3e307" translate="yes" xml:space="preserve">
          <source>The error setting of the decoder or encoder.</source>
          <target state="translated">解码器或编码器的错误设置。</target>
        </trans-unit>
        <trans-unit id="052c1e179a0c79f767c6604197b82ab12f14cc1d" translate="yes" xml:space="preserve">
          <source>The event loop is the core of every asyncio application. Event loops run asynchronous tasks and callbacks, perform network IO operations, and run subprocesses.</source>
          <target state="translated">事件循环是每个asyncio应用的核心。事件循环运行异步任务和回调,执行网络IO操作,并运行子进程。</target>
        </trans-unit>
        <trans-unit id="20660ae21639a13bb9cdcdb9cc1ae330bad31fc2" translate="yes" xml:space="preserve">
          <source>The events have the following meaning:</source>
          <target state="translated">这些事件具有以下含义:</target>
        </trans-unit>
        <trans-unit id="7d8e48b282637e6b7ae111368c295425b248fd49" translate="yes" xml:space="preserve">
          <source>The exact functionality is system dependent.</source>
          <target state="translated">具体功能取决于系统。</target>
        </trans-unit>
        <trans-unit id="325e0452fd2926eb393f8ebf3681a81d525396d6" translate="yes" xml:space="preserve">
          <source>The exact meaning and resolution of the &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt; attributes depend on the operating system and the file system. For example, on Windows systems using the FAT or FAT32 file systems, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt; has 2-second resolution, and &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt; has only 1-day resolution. See your operating system documentation for details.</source>
          <target state="translated">&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt; &lt;code&gt;st_ctime&lt;/code&gt; &lt;/a&gt;属性的确切含义和解析度取决于操作系统和文件系统。例如，在使用FAT或FAT32文件系统的Windows系统上，&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;具有2秒的分辨率，而&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; &lt;/a&gt;仅具有1天的分辨率。有关详细信息，请参见您的操作系统文档。</target>
        </trans-unit>
        <trans-unit id="38f4793ab661ef074bccde7fedd44e2caaaf1c00" translate="yes" xml:space="preserve">
          <source>The exact output format is implementation dependent. In this version, it&amp;rsquo;s written as an ordinary XML file.</source>
          <target state="translated">确切的输出格式取决于实现。在此版本中，它是作为普通XML文件编写的。</target>
        </trans-unit>
        <trans-unit id="9df7a5622dfa1e314fc973d30f87d7dc1d47ea52" translate="yes" xml:space="preserve">
          <source>The exact token type names can be displayed using the &lt;a href=&quot;#cmdoption-tokenize-e&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">可以使用&lt;a href=&quot;#cmdoption-tokenize-e&quot;&gt; &lt;code&gt;-e&lt;/code&gt; &lt;/a&gt;选项显示确切的令牌类型名称：</target>
        </trans-unit>
        <trans-unit id="d4e55e4f1f047d534549d94721436aa9890d2906" translate="yes" xml:space="preserve">
          <source>The exactness carries over into arithmetic. In decimal floating point, &lt;code&gt;0.1
+ 0.1 + 0.1 - 0.3&lt;/code&gt; is exactly equal to zero. In binary floating point, the result is &lt;code&gt;5.5511151231257827e-017&lt;/code&gt;. While near to zero, the differences prevent reliable equality testing and differences can accumulate. For this reason, decimal is preferred in accounting applications which have strict equality invariants.</source>
          <target state="translated">精确度会延续到算术运算中。在十进制浮点数中， &lt;code&gt;0.1 + 0.1 + 0.1 - 0.3&lt;/code&gt; 完全等于零。在二进制浮点数中，结果为 &lt;code&gt;5.5511151231257827e-017&lt;/code&gt; 。当接近零时，差异会阻止可靠的相等性测试，并且差异会累积。因此，在具有严格相等不变性的会计应用程序中，首选十进制。</target>
        </trans-unit>
        <trans-unit id="368a4f8d51918859c50dacebe141ec8fb33b0cfc" translate="yes" xml:space="preserve">
          <source>The example above shows part of the implementation of &lt;a href=&quot;collections#collections.Counter&quot;&gt;&lt;code&gt;collections.Counter&lt;/code&gt;&lt;/a&gt;. A different &lt;code&gt;__missing__&lt;/code&gt; method is used by &lt;a href=&quot;collections#collections.defaultdict&quot;&gt;&lt;code&gt;collections.defaultdict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上面的示例显示了&lt;a href=&quot;collections#collections.Counter&quot;&gt; &lt;code&gt;collections.Counter&lt;/code&gt; 的&lt;/a&gt;部分实现。&lt;a href=&quot;collections#collections.defaultdict&quot;&gt; &lt;code&gt;collections.defaultdict&lt;/code&gt; &lt;/a&gt;使用不同的 &lt;code&gt;__missing__&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6c4257b7bd5948bf81998e31354c476d75868ec9" translate="yes" xml:space="preserve">
          <source>The example above uses a very &amp;ldquo;nonrandom&amp;rdquo; stream of data (a stream of &lt;code&gt;b&amp;rdquo;z&amp;rdquo;&lt;/code&gt; chunks). Random data tends to compress poorly, while ordered, repetitive data usually yields a high compression ratio.</source>
          <target state="translated">上面的示例使用了非常&amp;ldquo;非随机&amp;rdquo;的数据流（ &lt;code&gt;b&amp;rdquo;z&amp;rdquo;&lt;/code&gt; 块的流）。随机数据倾向于压缩较差，而有序的重复数据通常会产生较高的压缩率。</target>
        </trans-unit>
        <trans-unit id="1267a760796a415fef6f4e4d1d4ca429236931c8" translate="yes" xml:space="preserve">
          <source>The example also includes a basic record and playback facility implemented with the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; method which is responsible for converting the input to lowercase and writing the commands to a file. The &lt;code&gt;do_playback()&lt;/code&gt; method reads the file and adds the recorded commands to the &lt;code&gt;cmdqueue&lt;/code&gt; for immediate playback:</source>
          <target state="translated">该示例还包括使用&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;方法实现的基本记录和回放功能，该功能负责将输入转换为小写并将命令写入文件。所述 &lt;code&gt;do_playback()&lt;/code&gt; 方法读取该文件，并将该记录的命令到 &lt;code&gt;cmdqueue&lt;/code&gt; 立即播放：</target>
        </trans-unit>
        <trans-unit id="7b737e4581b9ae3288063ada39c5b91ad8523116" translate="yes" xml:space="preserve">
          <source>The example below defines a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass capturing time zone information for Kabul, Afghanistan, which used +4 UTC until 1945 and then +4:30 UTC thereafter:</source>
          <target state="translated">以下示例定义了一个捕获阿富汗喀布尔时区信息的&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类，该类使用+4 UTC直到1945年，然后使用+4：30 UTC：</target>
        </trans-unit>
        <trans-unit id="80f9b52354f157c05b33826ceabd33e38abbf32d" translate="yes" xml:space="preserve">
          <source>The example below would like to show how to register a pickle function and how it will be used:</source>
          <target state="translated">下面的例子想告诉大家如何注册pickle函数以及如何使用它。</target>
        </trans-unit>
        <trans-unit id="f23e546d4eedcd0835e69c312998d72018282090" translate="yes" xml:space="preserve">
          <source>The example&amp;rsquo;s actual output.</source>
          <target state="translated">该示例的实际输出。</target>
        </trans-unit>
        <trans-unit id="0e8a68c5bb27e57e61ade020d47d64138b073ee1" translate="yes" xml:space="preserve">
          <source>The example&amp;rsquo;s indentation in the containing string, i.e., the number of space characters that precede the example&amp;rsquo;s first prompt.</source>
          <target state="translated">示例在包含的字符串中的缩进，即示例的第一个提示之前的空格字符数。</target>
        </trans-unit>
        <trans-unit id="9bf28d77364e14c64c07990a46b33865cddc4a3c" translate="yes" xml:space="preserve">
          <source>The examples above use integers for enumeration values. Using integers is short and handy (and provided by default by the &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;), but not strictly enforced. In the vast majority of use-cases, one doesn&amp;rsquo;t care what the actual value of an enumeration is. But if the value &lt;em&gt;is&lt;/em&gt; important, enumerations can have arbitrary values.</source>
          <target state="translated">上面的示例将整数用作枚举值。使用整数既方便又快捷（默认情况下由&lt;a href=&quot;#functional-api&quot;&gt;Functional API提供&lt;/a&gt;），但并未严格执行。在绝大多数用例中，人们并不关心枚举的实际值是多少。但是，如果该值&lt;em&gt;很&lt;/em&gt;重要，则枚举可以具有任意值。</target>
        </trans-unit>
        <trans-unit id="7fc5a1f6e5e16fd1c43d25e60bde4d2913909e68" translate="yes" xml:space="preserve">
          <source>The examples are run in the namespace &lt;code&gt;test.globs&lt;/code&gt;. If &lt;em&gt;clear_globs&lt;/em&gt; is true (the default), then this namespace will be cleared after the test runs, to help with garbage collection. If you would like to examine the namespace after the test completes, then use &lt;em&gt;clear_globs=False&lt;/em&gt;.</source>
          <target state="translated">这些示例在名称空间 &lt;code&gt;test.globs&lt;/code&gt; 中运行。如果&lt;em&gt;clear_globs&lt;/em&gt;为true（默认设置），则在测试运行后将清除此命名空间，以帮助进行垃圾回收。如果您想在测试完成后检查名称空间，请使用&lt;em&gt;clear_globs = False&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="823e2bd7f9e34fbe4a8d02393f5bc3f7b60e03c1" translate="yes" xml:space="preserve">
          <source>The exception (or &lt;code&gt;None&lt;/code&gt; if no exception was set) is returned only if the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">仅当Future &lt;em&gt;完成&lt;/em&gt;时才返回异常（如果没有设置异常，则返回 &lt;code&gt;None&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f398fd082f435634395bcad6277043303156476f" translate="yes" xml:space="preserve">
          <source>The exception codes defined in the DOM recommendation map to the exceptions described above according to this table:</source>
          <target state="translated">根据本表,DOM建议中定义的例外代码与上面描述的例外情况相对应。</target>
        </trans-unit>
        <trans-unit id="761f0c94b4f4af1545fc471496949910ccb868b5" translate="yes" xml:space="preserve">
          <source>The exception message generated by the example, if the example is expected to generate an exception; or &lt;code&gt;None&lt;/code&gt; if it is not expected to generate an exception. This exception message is compared against the return value of &lt;a href=&quot;traceback#traceback.format_exception_only&quot;&gt;&lt;code&gt;traceback.format_exception_only()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#doctest.Example.exc_msg&quot;&gt;&lt;code&gt;exc_msg&lt;/code&gt;&lt;/a&gt; ends with a newline unless it&amp;rsquo;s &lt;code&gt;None&lt;/code&gt;. The constructor adds a newline if needed.</source>
          <target state="translated">如果预期示例将产生异常，则由示例产生的异常消息；或 &lt;code&gt;None&lt;/code&gt; ，如果它预计不会产生异常。将此异常消息与&lt;a href=&quot;traceback#traceback.format_exception_only&quot;&gt; &lt;code&gt;traceback.format_exception_only()&lt;/code&gt; &lt;/a&gt;的返回值进行比较。&lt;a href=&quot;#doctest.Example.exc_msg&quot;&gt; &lt;code&gt;exc_msg&lt;/code&gt; &lt;/a&gt;以换行符结尾，除非它为 &lt;code&gt;None&lt;/code&gt; 。如果需要，构造函数会添加换行符。</target>
        </trans-unit>
        <trans-unit id="16fb466df1ef569cc795696df9b928061a52e60d" translate="yes" xml:space="preserve">
          <source>The exception object has a single attribute &lt;code&gt;value&lt;/code&gt;, which is given as an argument when constructing the exception, and defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">异常对象具有单个属性 &lt;code&gt;value&lt;/code&gt; ，该属性值在构造异常时作为参数提供，默认为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="967015b7587a452e7a6969f9fcdf9472b004aa13" translate="yes" xml:space="preserve">
          <source>The exception passed in should never be reraised explicitly - instead, this method should return a false value to indicate that the method completed successfully and does not want to suppress the raised exception. This allows context management code to easily detect whether or not an &lt;a href=&quot;#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method has actually failed.</source>
          <target state="translated">传入的异常永远不应显式引发-相反，此方法应返回false值，以指示该方法已成功完成，并且不想抑制引发的异常。这使上下文管理代码可以轻松检测&lt;a href=&quot;#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法是否实际上已失败。</target>
        </trans-unit>
        <trans-unit id="cb4e339c8d30fe262a428d0d8ad73a99d4beb69c" translate="yes" xml:space="preserve">
          <source>The exception raised when Expat reports an error. See section &lt;a href=&quot;#expaterror-objects&quot;&gt;ExpatError Exceptions&lt;/a&gt; for more information on interpreting Expat errors.</source>
          <target state="translated">Expat报告错误时引发的异常。有关解释Expat错误的更多信息，请参见&lt;a href=&quot;#expaterror-objects&quot;&gt;ExpatError异常&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="5eb7279a402a5d146f2e0d67cb68745febd71c19" translate="yes" xml:space="preserve">
          <source>The exception raised will likely be an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; but it could be something else.</source>
          <target state="translated">引发的异常可能是&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; ,&lt;/a&gt;但也可能是其他异常。</target>
        </trans-unit>
        <trans-unit id="9439b68fdd4692f623f1d833b070e00895671a64" translate="yes" xml:space="preserve">
          <source>The exception to this is if the mock has a name. This allows you to prevent the &amp;ldquo;parenting&amp;rdquo; if for some reason you don&amp;rsquo;t want it to happen.</source>
          <target state="translated">例外情况是，模拟对象有名称。如果出于某种原因您不希望发生这种情况，这可以防止发生&amp;ldquo;育儿&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="44273158bebd408d0ca1686e330e8221aed6bf91" translate="yes" xml:space="preserve">
          <source>The execution time of &lt;em&gt;setup&lt;/em&gt; is excluded from the overall timed execution run.</source>
          <target state="translated">&lt;em&gt;设置&lt;/em&gt;的执行时间不包括在整体定时执行运行中。</target>
        </trans-unit>
        <trans-unit id="8d5a336dad5945abfb44492ff957a88e5c60afa7" translate="yes" xml:space="preserve">
          <source>The execution time of the I/O selector is logged if it takes too long to perform an I/O operation.</source>
          <target state="translated">如果I/O选择器执行I/O操作的时间过长,则记录其执行时间。</target>
        </trans-unit>
        <trans-unit id="056d4e2c3774cbd88921f11b4e8d264ee0e9d283" translate="yes" xml:space="preserve">
          <source>The exit status or error message that is passed to the constructor. (Defaults to &lt;code&gt;None&lt;/code&gt;.)</source>
          <target state="translated">传递给构造函数的退出状态或错误消息。（默认为 &lt;code&gt;None&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="dc5be0b65bb8c374ab86c659a4b84daa7fc4f814" translate="yes" xml:space="preserve">
          <source>The expected output for an exception must start with a traceback header, which may be either of the following two lines, indented the same as the first line of the example:</source>
          <target state="translated">异常的预期输出必须以跟踪头开始,它可以是下面两行中的任何一行,缩进的位置与示例的第一行相同。</target>
        </trans-unit>
        <trans-unit id="c46a79830e587beeb1c2d33f69db71dc6d8a9e7f" translate="yes" xml:space="preserve">
          <source>The expected output from running the example&amp;rsquo;s source code (either from stdout, or a traceback in case of exception). &lt;a href=&quot;#doctest.Example.want&quot;&gt;&lt;code&gt;want&lt;/code&gt;&lt;/a&gt; ends with a newline unless no output is expected, in which case it&amp;rsquo;s an empty string. The constructor adds a newline when necessary.</source>
          <target state="translated">运行示例源代码的预期输出（来自stdout或在异常情况下的回溯）。&lt;a href=&quot;#doctest.Example.want&quot;&gt; &lt;code&gt;want&lt;/code&gt; &lt;/a&gt;以换行符结尾，除非没有预期的输出，在这种情况下，它是一个空字符串。构造函数在必要时添加换行符。</target>
        </trans-unit>
        <trans-unit id="1dab8d87c095f36844379c2f05305caab6d7338e" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;t2 - t3&lt;/code&gt; will always be equal to the expression &lt;code&gt;t2 + (-t3)&lt;/code&gt; except when t3 is equal to &lt;code&gt;timedelta.max&lt;/code&gt;; in that case the former will produce a result while the latter will overflow.</source>
          <target state="translated">表达式 &lt;code&gt;t2 - t3&lt;/code&gt; 始终等于表达式 &lt;code&gt;t2 + (-t3)&lt;/code&gt; -t3 ），除非t3等于 &lt;code&gt;timedelta.max&lt;/code&gt; ; 在这种情况下，前者将产生结果，而后者将溢出。</target>
        </trans-unit>
        <trans-unit id="8705600e71bb79cd85436c8e2641d3a03b2276dd" translate="yes" xml:space="preserve">
          <source>The expression following &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; must be an exception or &lt;code&gt;None&lt;/code&gt;. It will be set as &lt;code&gt;__cause__&lt;/code&gt; on the raised exception. Setting &lt;code&gt;__cause__&lt;/code&gt; also implicitly sets the &lt;code&gt;__suppress_context__&lt;/code&gt; attribute to &lt;code&gt;True&lt;/code&gt;, so that using &lt;code&gt;raise new_exc from None&lt;/code&gt; effectively replaces the old exception with the new one for display purposes (e.g. converting &lt;a href=&quot;#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;), while leaving the old exception available in &lt;code&gt;__context__&lt;/code&gt; for introspection when debugging.</source>
          <target state="translated">以下表达式&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;必须是异常或 &lt;code&gt;None&lt;/code&gt; 。在引发的异常上，它将被设置为 &lt;code&gt;__cause__&lt;/code&gt; 。设置 &lt;code&gt;__cause__&lt;/code&gt; 也会将 &lt;code&gt;__suppress_context__&lt;/code&gt; 属性隐式设置为 &lt;code&gt;True&lt;/code&gt; ，因此使用 &lt;code&gt;raise new_exc from None&lt;/code&gt; 有效地将旧异常替换为新异常，以进行显示（例如，将&lt;a href=&quot;#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;转换为&lt;a href=&quot;#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;），同时在调试时将旧异常保留在 &lt;code&gt;__context__&lt;/code&gt; 中进行自省。</target>
        </trans-unit>
        <trans-unit id="68242bce693e0838b62d91b18afaa2311c8f7356" translate="yes" xml:space="preserve">
          <source>The expression following &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; must be an exception or &lt;code&gt;None&lt;/code&gt;. It will be set as &lt;code&gt;__cause__&lt;/code&gt; on the raised exception. Setting &lt;code&gt;__cause__&lt;/code&gt; also implicitly sets the &lt;code&gt;__suppress_context__&lt;/code&gt; attribute to &lt;code&gt;True&lt;/code&gt;, so that using &lt;code&gt;raise new_exc from None&lt;/code&gt; effectively replaces the old exception with the new one for display purposes (e.g. converting &lt;a href=&quot;#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;), while leaving the old exception available in &lt;code&gt;__context__&lt;/code&gt; for introspection when debugging.</source>
          <target state="translated">以下表达式&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#from&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;必须是异常或 &lt;code&gt;None&lt;/code&gt; 。在引发的异常上，它将被设置为 &lt;code&gt;__cause__&lt;/code&gt; 。设置 &lt;code&gt;__cause__&lt;/code&gt; 也会隐式地将 &lt;code&gt;__suppress_context__&lt;/code&gt; 属性设置为 &lt;code&gt;True&lt;/code&gt; ，以便使用 &lt;code&gt;raise new_exc from None&lt;/code&gt; 将引起的new_exc有效地替换为新的旧异常以用于显示（例如，将&lt;a href=&quot;#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;转换为&lt;a href=&quot;#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;），同时在调试时将旧的异常保留在 &lt;code&gt;__context__&lt;/code&gt; 中进行自省。</target>
        </trans-unit>
        <trans-unit id="77e08f5c9069670de504969f5f7ccf6331f6b9ce" translate="yes" xml:space="preserve">
          <source>The expression is in the syntax suitable for the &lt;code&gt;regex()&lt;/code&gt; function from the C library, which might differ from the syntax used in &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该表达式的语法适合C库中的 &lt;code&gt;regex()&lt;/code&gt; 函数，该语法可能与&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; 中&lt;/a&gt;使用的语法不同。</target>
        </trans-unit>
        <trans-unit id="c63cc66a535039b3f2bae8483c016e26a4fade05" translate="yes" xml:space="preserve">
          <source>The expression&amp;rsquo;s behaviour can be modified by specifying a &lt;em&gt;flags&lt;/em&gt; value. Values can be any of the following variables, combined using bitwise OR (the &lt;code&gt;|&lt;/code&gt; operator).</source>
          <target state="translated">可以通过指定&lt;em&gt;标志&lt;/em&gt;值来修改表达式的行为。值可以是以下任何变量，可以使用按位或（ &lt;code&gt;|&lt;/code&gt; 运算符）组合。</target>
        </trans-unit>
        <trans-unit id="93fe9e394c294b7387fcfa2d42a16831c1ddb5a7" translate="yes" xml:space="preserve">
          <source>The extended tools offer the same high performance as the underlying toolset. The superior memory performance is kept by processing elements one at a time rather than bringing the whole iterable into memory all at once. Code volume is kept small by linking the tools together in a functional style which helps eliminate temporary variables. High speed is retained by preferring &amp;ldquo;vectorized&amp;rdquo; building blocks over the use of for-loops and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s which incur interpreter overhead.</source>
          <target state="translated">扩展工具提供与基础工具集相同的高性能。通过一次处理一个元素，而不是一次将整个可迭代对象全部放入内存，可以保持卓越的内存性能。通过以一种功能样式将工具链接在一起，可以减少代码量，这有助于消除临时变量。通过使用&amp;ldquo;向量化&amp;rdquo;构建块，而不是使用for循环和&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;，可以保持高速，这会导致解释器开销。</target>
        </trans-unit>
        <trans-unit id="e296d1537f8fe0b7eb07da189e2a5c508bfe5ffb" translate="yes" xml:space="preserve">
          <source>The extended tools offer the same high performance as the underlying toolset. The superior memory performance is kept by processing elements one at a time rather than bringing the whole iterable into memory all at once. Code volume is kept small by linking the tools together in a functional style which helps eliminate temporary variables. High speed is retained by preferring &amp;ldquo;vectorized&amp;rdquo; building blocks over the use of for-loops and &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s which incur interpreter overhead.</source>
          <target state="translated">扩展工具提供了与基础工具集相同的高性能。通过一次处理一个元素，而不是一次将整个可迭代对象全部放入内存，可以保持卓越的内存性能。通过以功能样式将工具链接在一起，可以减少代码量，这有助于消除临时变量。通过使用&amp;ldquo;向量化&amp;rdquo;构建块而不是使用for循环和&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;来保持高速，这会产生解释器开销。</target>
        </trans-unit>
        <trans-unit id="f2e36429012b6a62032d18db64413f54c62b905a" translate="yes" xml:space="preserve">
          <source>The extraction in zipfile module might fail due to some pitfalls listed below.</source>
          <target state="translated">由于下面列出的一些陷阱,在zip文件模块中提取可能会失败。</target>
        </trans-unit>
        <trans-unit id="4fedb89b337393b16b1bba324c08f1822e44a807" translate="yes" xml:space="preserve">
          <source>The fact that &lt;code&gt;Type[C]&lt;/code&gt; is covariant implies that all subclasses of &lt;code&gt;C&lt;/code&gt; should implement the same constructor signature and class method signatures as &lt;code&gt;C&lt;/code&gt;. The type checker should flag violations of this, but should also allow constructor calls in subclasses that match the constructor calls in the indicated base class. How the type checker is required to handle this particular case may change in future revisions of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">事实上， &lt;code&gt;Type[C]&lt;/code&gt; 是协变意味着所有子类 &lt;code&gt;C&lt;/code&gt; 要实现相同的构造函数的签名和类方法签名为 &lt;code&gt;C&lt;/code&gt; 。类型检查器应标记对此行为的违反，但也应允许子类中的构造函数调用与指示的基类中的构造函数调用匹配。在以后的&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;修订版中，如何要求类型检查器处理这种特定情况可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="28ec65a4d201d4d2ca5fe997a58b19245ad33e30" translate="yes" xml:space="preserve">
          <source>The fact that standard Python has a frozen module and a frozen package (indicated by the negative &lt;code&gt;size&lt;/code&gt; member) is not well known, it is only used for testing. Try it out with &lt;code&gt;import __hello__&lt;/code&gt; for example.</source>
          <target state="translated">标准Python具有冻结的模块和冻结的软件包（由negative &lt;code&gt;size&lt;/code&gt; 成员指示）的事实是众所周知的，它仅用于测试。例如，使用 &lt;code&gt;import __hello__&lt;/code&gt; 进行尝试。</target>
        </trans-unit>
        <trans-unit id="9dac46a441d5e72f6712035d99797ee965eb1bab" translate="yes" xml:space="preserve">
          <source>The factory has the following signature:</source>
          <target state="translated">该厂有以下签名:</target>
        </trans-unit>
        <trans-unit id="8d779be886850f3923e598392c5fdf6aff33f4b0" translate="yes" xml:space="preserve">
          <source>The factory method of &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; is here overridden to create a UDP socket (&lt;a href=&quot;socket#socket.SOCK_DGRAM&quot;&gt;&lt;code&gt;socket.SOCK_DGRAM&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">此处重写&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; &lt;/a&gt;的工厂方法以创建UDP套接字（&lt;a href=&quot;socket#socket.SOCK_DGRAM&quot;&gt; &lt;code&gt;socket.SOCK_DGRAM&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="77d68cc31e2812d769a8a7e134820d797b4ff412" translate="yes" xml:space="preserve">
          <source>The false value of the &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt; type. Assignments to &lt;code&gt;False&lt;/code&gt; are illegal and raise a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;类型的假值。分配给 &lt;code&gt;False&lt;/code&gt; 是非法的，并引发&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c398d0a8157f47bce0b9136a5d6e426f6c205b0e" translate="yes" xml:space="preserve">
          <source>The family of protocols to which the server&amp;rsquo;s socket belongs. Common examples are &lt;a href=&quot;socket#socket.AF_INET&quot;&gt;&lt;code&gt;socket.AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt;&lt;code&gt;socket.AF_UNIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">服务器套接字所属的协议系列。常见的示例是&lt;a href=&quot;socket#socket.AF_INET&quot;&gt; &lt;code&gt;socket.AF_INET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt; &lt;code&gt;socket.AF_UNIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7188cd9594911bcd5eab7fcf3154e9fac54fc86a" translate="yes" xml:space="preserve">
          <source>The fault handler is called on catastrophic cases and therefore can only use signal-safe functions (e.g. it cannot allocate memory on the heap). Because of this limitation traceback dumping is minimal compared to normal Python tracebacks:</source>
          <target state="translated">故障处理程序在灾难性的情况下被调用,因此只能使用信号安全的函数 (例如,它不能在堆上分配内存)。由于这个限制,与普通的Python回溯相比,回溯转储是最小的。</target>
        </trans-unit>
        <trans-unit id="aee0bd171455a1448e4fe84e8a54699f4edda95b" translate="yes" xml:space="preserve">
          <source>The fault handler is compatible with system fault handlers like Apport or the Windows fault handler. The module uses an alternative stack for signal handlers if the &lt;code&gt;sigaltstack()&lt;/code&gt; function is available. This allows it to dump the traceback even on a stack overflow.</source>
          <target state="translated">故障处理程序与Apport或Windows故障处理程序等系统故障处理程序兼容。如果 &lt;code&gt;sigaltstack()&lt;/code&gt; 函数可用，则模块将备用堆栈用作信号处理程序。这使它即使在堆栈溢出时也可以转储回溯。</target>
        </trans-unit>
        <trans-unit id="b6b64a8d474bdfb3f601c33aa7ab1c0f65b1af78" translate="yes" xml:space="preserve">
          <source>The field type must be a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type like &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt;, or any other derived &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type: structure, union, array, pointer.</source>
          <target state="translated">字段类型必须是&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;类型，例如&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;，或任何其他派生的&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;类型：结构，联合，数组，指针。</target>
        </trans-unit>
        <trans-unit id="53b6c519d9cc69ec98567c08f6e4fa682bc959ee" translate="yes" xml:space="preserve">
          <source>The fields &lt;code&gt;ru_utime&lt;/code&gt; and &lt;code&gt;ru_stime&lt;/code&gt; of the return value are floating point values representing the amount of time spent executing in user mode and the amount of time spent executing in system mode, respectively. The remaining values are integers. Consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrusage(2)&quot;&gt;getrusage(2)&lt;/a&gt;&lt;/em&gt; man page for detailed information about these values. A brief summary is presented here:</source>
          <target state="translated">返回值的字段 &lt;code&gt;ru_utime&lt;/code&gt; 和 &lt;code&gt;ru_stime&lt;/code&gt; 是浮点值，分别表示在用户模式下执行所花费的时间和在系统模式下执行所花费的时间。其余值为整数。有关这些值的详细信息，请查阅&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrusage(2)&quot;&gt;getrusage（2）&lt;/a&gt;&lt;/em&gt;手册页。这里有一个简短的摘要：</target>
        </trans-unit>
        <trans-unit id="7c0e7a9b930aacec36d9f5dfb5ae8968c5cdb619" translate="yes" xml:space="preserve">
          <source>The fields listed in this variable must be structure or union type fields. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; will create descriptors in the structure type that allows accessing the nested fields directly, without the need to create the structure or union field.</source>
          <target state="translated">此变量中列出的字段必须是结构或联合类型字段。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;将以结构类型创建描述符，该描述符允许直接访问嵌套字段，而无需创建结构或联合字段。</target>
        </trans-unit>
        <trans-unit id="49d3ffb20600ae906d592727228c4b314bf7b93a" translate="yes" xml:space="preserve">
          <source>The fields of the return value each describe how a particular system resource has been used, e.g. amount of time spent running is user mode or number of times the process was swapped out of main memory. Some values are dependent on the clock tick internal, e.g. the amount of memory the process is using.</source>
          <target state="translated">返回值的字段分别描述了某一特定系统资源的使用情况,例如,运行在用户模式下所花费的时间,或进程从主内存中交换出来的次数。有些值取决于内部的时钟刻度,例如进程使用的内存量。</target>
        </trans-unit>
        <trans-unit id="d4a8d9c00fb9d3badfff43f650201a575fe2a0f4" translate="yes" xml:space="preserve">
          <source>The file extension of the final component, if any:</source>
          <target state="translated">最后的文件扩展名(如果有的话);</target>
        </trans-unit>
        <trans-unit id="d0114120d1c89a385da27d07f78b44e470d40fc6" translate="yes" xml:space="preserve">
          <source>The file is a snapshot file.</source>
          <target state="translated">该文件是一个快照文件。</target>
        </trans-unit>
        <trans-unit id="a6176b9e04bfbfddfce8592a319fadaf7ad306a6" translate="yes" xml:space="preserve">
          <source>The file is now non-inheritable.</source>
          <target state="translated">现在这个文件是不可继承的。</target>
        </trans-unit>
        <trans-unit id="2776c6bc9673d40e5b7bff3091258d276b726028" translate="yes" xml:space="preserve">
          <source>The file is opened and then closed. The optional parameters have the same meaning as in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该文件被打开，然后关闭。可选参数的含义与&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; 中的&lt;/a&gt;含义相同。</target>
        </trans-unit>
        <trans-unit id="cfcbd03a414732fbc2abf88348cc273cba1d3bb2" translate="yes" xml:space="preserve">
          <source>The file is overwritten if it already exists, thus wiping all the cookies it contains. Saved cookies can be restored later using the &lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt;&lt;code&gt;revert()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">如果该文件已经存在，则会被覆盖，从而清除其中包含的所有cookie。以后可以使用&lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt; &lt;code&gt;revert()&lt;/code&gt; &lt;/a&gt;方法还原保存的cookie 。</target>
        </trans-unit>
        <trans-unit id="ca8bc2b3859735a59f7c5727ee833f2c2996847f" translate="yes" xml:space="preserve">
          <source>The file is read and scanned in chunks of &lt;em&gt;chunksize&lt;/em&gt; bytes.</source>
          <target state="translated">该文件被读出并在块扫描&lt;em&gt;CHUNKSIZE&lt;/em&gt;字节。</target>
        </trans-unit>
        <trans-unit id="584531cc428f460d16ee3b493d1ccde738f49bc0" translate="yes" xml:space="preserve">
          <source>The file is stored compressed (Mac OS X 10.6+).</source>
          <target state="translated">文件被压缩存储(Mac OS X 10.6+)。</target>
        </trans-unit>
        <trans-unit id="2a6be25ba740062f6f2dbf5af7928dcd58c0349b" translate="yes" xml:space="preserve">
          <source>The file may be archived.</source>
          <target state="translated">该文件可以存档。</target>
        </trans-unit>
        <trans-unit id="7e106002d1dd5d4cf8bd7c146bae64e3ff7f7f8d" translate="yes" xml:space="preserve">
          <source>The file may not be changed.</source>
          <target state="translated">文件不得更改。</target>
        </trans-unit>
        <trans-unit id="70ef31fa917154dc071d61c035311872073ab6ed" translate="yes" xml:space="preserve">
          <source>The file may not be renamed or deleted.</source>
          <target state="translated">该文件不得重命名或删除。</target>
        </trans-unit>
        <trans-unit id="1c7fbbc2ba48b35481b7eda3d7ce8a87c73ded62" translate="yes" xml:space="preserve">
          <source>The file may only be appended to.</source>
          <target state="translated">该文件只能附加到:</target>
        </trans-unit>
        <trans-unit id="2a32edd222a3bd6c55ca9732d33c575dc042d587" translate="yes" xml:space="preserve">
          <source>The file name of the importer&amp;rsquo;s associated ZIP file, without a possible subpath.</source>
          <target state="translated">导入程序的关联ZIP文件的文件名，没有可能的子路径。</target>
        </trans-unit>
        <trans-unit id="22d881f57735735b7beb6cd26cea8ae5f33f6cf5" translate="yes" xml:space="preserve">
          <source>The file name. This is the file descriptor of the file when no name is given in the constructor.</source>
          <target state="translated">文件名。当在构造函数中没有给出文件名时,这是文件的文件描述符。</target>
        </trans-unit>
        <trans-unit id="80e34d3d98320355b57f01ca1f7d293ca570add4" translate="yes" xml:space="preserve">
          <source>The file path of the null device. For example: &lt;code&gt;'/dev/null'&lt;/code&gt; for POSIX, &lt;code&gt;'nul'&lt;/code&gt; for Windows. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">空设备的文件路径。例如：POSIX为 &lt;code&gt;'/dev/null'&lt;/code&gt; &lt;code&gt;'nul'&lt;/code&gt; ，Windows 为'nul'。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9db19e8d7b718718ef1be032413eab83e5e95bd6" translate="yes" xml:space="preserve">
          <source>The file selected by the above constructor must have been created by the corresponding version of &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;. To be specific, there is &lt;em&gt;no&lt;/em&gt; file compatibility guaranteed with future versions of this profiler, and there is no compatibility with files produced by other profilers, or the same profiler run on a different operating system. If several files are provided, all the statistics for identical functions will be coalesced, so that an overall view of several processes can be considered in a single report. If additional files need to be combined with data in an existing &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#pstats.Stats.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">由上述构造函数选择的文件必须已经由&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;的相应版本创建。具体而言，&lt;em&gt;不能&lt;/em&gt;保证此探查器的未来版本具有文件兼容性，也不能与其他探查器生成的文件或与在不同操作系统上运行的同一探查器兼容。如果提供了多个文件，则将合并相同功能的所有统计信息，以便可以在单个报告中考虑多个过程的整体视图。如果需要将其他文件与现有&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;对象中的数据合并，则可以使用&lt;a href=&quot;#pstats.Stats.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="713611df88c51a63c43837f66ca9e56dec2977b1" translate="yes" xml:space="preserve">
          <source>The file should not be displayed in a GUI (Mac OS X 10.5+).</source>
          <target state="translated">该文件不应该在GUI(Mac OS X 10.5+)中显示。</target>
        </trans-unit>
        <trans-unit id="72a6a7edb309ffffc9ff50c4223a156901528c2e" translate="yes" xml:space="preserve">
          <source>The file system encoding must guarantee to successfully decode all bytes below 128. If the file system encoding fails to provide this guarantee, API functions may raise UnicodeErrors.</source>
          <target state="translated">文件系统编码必须保证成功解码所有低于128的字节。如果文件系统编码不能提供这个保证,API函数可能会引发UnicodeErrors。</target>
        </trans-unit>
        <trans-unit id="94792315cec8c9be1d87163086775ef5d07712b0" translate="yes" xml:space="preserve">
          <source>The file upload draft standard entertains the possibility of uploading multiple files from one field (using a recursive &lt;em&gt;multipart/*&lt;/em&gt; encoding). When this occurs, the item will be a dictionary-like &lt;code&gt;FieldStorage&lt;/code&gt; item. This can be determined by testing its &lt;code&gt;type&lt;/code&gt; attribute, which should be &lt;em&gt;multipart/form-data&lt;/em&gt; (or perhaps another MIME type matching &lt;em&gt;multipart/*&lt;/em&gt;). In this case, it can be iterated over recursively just like the top-level form object.</source>
          <target state="translated">文件上传草案标准具有从一个字段上传多个文件的可能性（使用递归&lt;em&gt;multipart / *&lt;/em&gt;编码）。发生这种情况时，该项目将是类似于字典的 &lt;code&gt;FieldStorage&lt;/code&gt; 项目。这可以通过测试其 &lt;code&gt;type&lt;/code&gt; 属性来确定，该属性应该是&lt;em&gt;multipart / form-data&lt;/em&gt;（或者可能是另一个匹配&lt;em&gt;multipart / *的&lt;/em&gt; MIME类型）。在这种情况下，可以像顶级表单对象一样递归地对其进行迭代。</target>
        </trans-unit>
        <trans-unit id="01c3cef533c6e179cf68ea7712d222e220b7be4d" translate="yes" xml:space="preserve">
          <source>The files &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; can also be invoked as a script to profile another script. For example:</source>
          <target state="translated">也可以将文件&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt;用作脚本来对另一个脚本进行概要分析。例如：</target>
        </trans-unit>
        <trans-unit id="a703e11dae059161ce34a8e26e190e5aa60fdce6" translate="yes" xml:space="preserve">
          <source>The files are added to the CAB file in the order they appear in the list. All files are added into a single CAB file, using the MSZIP compression algorithm.</source>
          <target state="translated">文件按其在列表中出现的顺序添加到CAB文件中。使用MSZIP压缩算法将所有文件添加到一个CAB文件中。</target>
        </trans-unit>
        <trans-unit id="628200e3be239ea4113714e001538bfc9cba8656" translate="yes" xml:space="preserve">
          <source>The final block shows a simple way to run the tests. &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; provides a command-line interface to the test script. When run from the command line, the above script produces an output that looks like this:</source>
          <target state="translated">最后一块显示了一种运行测试的简单方法。&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;提供测试脚本的命令行界面。从命令行运行时，上面的脚本产生的输出如下所示：</target>
        </trans-unit>
        <trans-unit id="cde464fe0dc63abb87ca4aee7a531390b4905635" translate="yes" xml:space="preserve">
          <source>The final list of fields is, in order, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt;. The final type of &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;, as specified in class &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">字段的最终列表按顺序是 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;z&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; 的最终类型为 &lt;code&gt;int&lt;/code&gt; ，如类 &lt;code&gt;C&lt;/code&gt; 中所指定。</target>
        </trans-unit>
        <trans-unit id="d814d211e8c60b1de47f81cd19922cc90ce77a99" translate="yes" xml:space="preserve">
          <source>The final path component, without its suffix:</source>
          <target state="translated">最后的路径组件,不含后缀。</target>
        </trans-unit>
        <trans-unit id="19a9fd943d48e088d27c035c23e17046cb6ea3d1" translate="yes" xml:space="preserve">
          <source>The final path component.</source>
          <target state="translated">最后的路径组件。</target>
        </trans-unit>
        <trans-unit id="cc0b59ae33b229e5d52ff81dd24e96cfff04266c" translate="yes" xml:space="preserve">
          <source>The final prediction goes to the largest posterior. This is known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_a_posteriori_estimation&quot;&gt;maximum a posteriori&lt;/a&gt; or MAP:</source>
          <target state="translated">最终预测将到达最大的后验。这称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_a_posteriori_estimation&quot;&gt;最大后验&lt;/a&gt;或MAP：</target>
        </trans-unit>
        <trans-unit id="80e06e46879bab91c1fc77685094ac909d2a64d5" translate="yes" xml:space="preserve">
          <source>The finalizer can be called directly as well. However the finalizer will invoke the callback at most once.</source>
          <target state="translated">定型器也可以直接调用。但是定型器最多调用一次回调。</target>
        </trans-unit>
        <trans-unit id="324b78c6634c0758c37a7197ebd0b45ebca8cff7" translate="yes" xml:space="preserve">
          <source>The finder will cache the directory contents as necessary, making stat calls for each module search to verify the cache is not outdated. Because cache staleness relies upon the granularity of the operating system&amp;rsquo;s state information of the file system, there is a potential race condition of searching for a module, creating a new file, and then searching for the module the new file represents. If the operations happen fast enough to fit within the granularity of stat calls, then the module search will fail. To prevent this from happening, when you create a module dynamically, make sure to call &lt;a href=&quot;#importlib.invalidate_caches&quot;&gt;&lt;code&gt;importlib.invalidate_caches()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找器将根据需要缓存目录内容，对每个模块进行统计调用以验证缓存是否过时。由于缓存的陈旧性取决于文件系统的操作系统状态信息的粒度，因此存在潜在的竞争条件，即搜索模块，创建新文件，然后搜索新文件代表的模块。如果操作发生得足够快以适合stat调用的粒度，则模块搜索将失败。为了防止这种情况发生，在动态创建模块时，请确保调用&lt;a href=&quot;#importlib.invalidate_caches&quot;&gt; &lt;code&gt;importlib.invalidate_caches()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02b87a907d4c2d81f667613e2387e3b1c465d816" translate="yes" xml:space="preserve">
          <source>The fine print:</source>
          <target state="translated">细则。</target>
        </trans-unit>
        <trans-unit id="aa3c351870f273c37e4f66d5a29426ed1177d605" translate="yes" xml:space="preserve">
          <source>The firing of low-level events at certain times or in certain connection states tells the asynchronous loop that certain higher-level events have taken place. For example, if we have asked for a socket to connect to another host, we know that the connection has been made when the socket becomes writable for the first time (at this point you know that you may write to it with the expectation of success). The implied higher-level events are:</source>
          <target state="translated">在某些时间或某些连接状态下,低级事件的触发告诉异步循环,某些高级事件已经发生。例如,如果我们要求一个套接字连接到另一个主机,当套接字第一次变成可写时,我们就知道连接已经建立了(此时你知道你可以向它写,并期望成功)。隐含的高层事件有</target>
        </trans-unit>
        <trans-unit id="feeadec3b2801616fe6a8b3a64c74c94879374e9" translate="yes" xml:space="preserve">
          <source>The first argument is a list of regular expressions, either compiled (&lt;a href=&quot;re#re-objects&quot;&gt;regex objects&lt;/a&gt;) or uncompiled (byte strings). The optional second argument is a timeout, in seconds; the default is to block indefinitely.</source>
          <target state="translated">第一个参数是正则表达式的列表，这些正则表达式可以是已编译（&lt;a href=&quot;re#re-objects&quot;&gt;正则表达式对象&lt;/a&gt;）或未编译（字节字符串）。可选的第二个参数是超时，以秒为单位；默认为无限期阻止。</target>
        </trans-unit>
        <trans-unit id="1c6b514b7c6b751da2eb0e1ffc8d72e9f29203f5" translate="yes" xml:space="preserve">
          <source>The first argument provides the initial value for the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; attribute; it defaults to &lt;code&gt;None&lt;/code&gt;. All remaining arguments are treated the same as if they were passed to the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; constructor, including keyword arguments.</source>
          <target state="translated">第一个参数提供&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;属性的初始值；它默认为 &lt;code&gt;None&lt;/code&gt; 。其余所有参数（包括关键字参数）的处理方式与传递给&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;构造函数的方式相同。</target>
        </trans-unit>
        <trans-unit id="0b5c0bc7f1b890f1aac7d2eb44e6058e2fc445d1" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;Annotated&lt;/code&gt; must be a valid type</source>
          <target state="translated">带 &lt;code&gt;Annotated&lt;/code&gt; 的第一个参数必须是有效类型</target>
        </trans-unit>
        <trans-unit id="205e58d9499aafe9cdb607f8d35493057d84cfb1" translate="yes" xml:space="preserve">
          <source>The first argument to the callback signifies what kind of operation is to be authorized. The second and third argument will be arguments or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; depending on the first argument. The 4th argument is the name of the database (&amp;ldquo;main&amp;rdquo;, &amp;ldquo;temp&amp;rdquo;, etc.) if applicable. The 5th argument is the name of the inner-most trigger or view that is responsible for the access attempt or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if this access attempt is directly from input SQL code.</source>
          <target state="translated">回调的第一个参数表示要授权哪种操作。根据第一个参数，第二个和第三个参数将为参数或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。第四个参数是数据库的名称（&amp;ldquo; main&amp;rdquo;，&amp;ldquo; temp&amp;rdquo;等）（如果适用）。第5个参数是负责访问尝试的最内部触发器或视图的名称，如果此访问尝试直接来自输入SQL代码，则为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71a29578a01ad10028e29ebf89ef4d001c2a9cfe" translate="yes" xml:space="preserve">
          <source>The first call will actually sort the list by function name, and the second call will print out the statistics. The following are some interesting calls to experiment with:</source>
          <target state="translated">第一个调用实际上是按函数名称对列表进行排序,第二个调用将打印出统计结果。下面是一些有趣的调用,可以进行实验。</target>
        </trans-unit>
        <trans-unit id="030d76d81608222603d09c4d4d4c94ee206bc1ca" translate="yes" xml:space="preserve">
          <source>The first child of the node, if there are any, or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">节点的第一个子节点（如果有）或 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="325d7875dfe1839450d2dfe98a6d36a120b66778" translate="yes" xml:space="preserve">
          <source>The first example shows the most common usage of &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">第一个示例显示了&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;的最常见用法：</target>
        </trans-unit>
        <trans-unit id="a0844f898e5a6d666859ba6ad5c4b6c9abec5cec" translate="yes" xml:space="preserve">
          <source>The first form is intended for backward compatibility only. It assumes that some part of the dotted name is a package, and the rest is an object somewhere within that package, possibly nested inside other objects. Because the place where the package stops and the object hierarchy starts can&amp;rsquo;t be inferred by inspection, repeated attempts to import must be done with this form.</source>
          <target state="translated">第一种形式仅用于向后兼容。它假定点名的某些部分是一个程序包，其余部分是该程序包中某个位置的对象，可能嵌套在其他对象中。由于无法通过检查推断出程序包停止的位置和对象层次结构的开始位置，因此必须使用此表单重复尝试导入。</target>
        </trans-unit>
        <trans-unit id="385191c7e22d5d00e8c01f733769abf79ae0e9cf" translate="yes" xml:space="preserve">
          <source>The first four lines correspond to the arguments of the &lt;code&gt;Screen.setup()&lt;/code&gt; method.</source>
          <target state="translated">前四行对应于 &lt;code&gt;Screen.setup()&lt;/code&gt; 方法的参数。</target>
        </trans-unit>
        <trans-unit id="42f8632ad7c20d5fdbbd018b653108a6af8d9377" translate="yes" xml:space="preserve">
          <source>The first function notation is supported by all platforms that define &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义&lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; 的&lt;/a&gt;所有平台均支持第一种功能符号。</target>
        </trans-unit>
        <trans-unit id="43529dac190a43326357cd2f5a9d21f0ccec3671" translate="yes" xml:space="preserve">
          <source>The first group of options define test semantics, controlling aspects of how doctest decides whether actual output matches an example&amp;rsquo;s expected output:</source>
          <target state="translated">第一组选项定义测试语义，控制doctest如何确定实际输出是否与示例的预期输出匹配的方面：</target>
        </trans-unit>
        <trans-unit id="a61627c597bc87ccaa5b8516aab05143b8e515c1" translate="yes" xml:space="preserve">
          <source>The first index of invalid data in &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;中无效数据的第一个索引。</target>
        </trans-unit>
        <trans-unit id="54ec8104a8dcb6fdc67594e88b1749c9e091d524" translate="yes" xml:space="preserve">
          <source>The first item is an integer containing a combination of direction flags for the parameter:</source>
          <target state="translated">第一项是一个整数,包含参数的方向标志组合。</target>
        </trans-unit>
        <trans-unit id="0ca4b9ef66540ab18c3155d91436466ad9c2f991" translate="yes" xml:space="preserve">
          <source>The first letter can be either of &lt;code&gt;'-'&lt;/code&gt; (which means the command reads its standard input), &lt;code&gt;'f'&lt;/code&gt; (which means the commands reads a given file on the command line) or &lt;code&gt;'.'&lt;/code&gt; (which means the commands reads no input, and hence must be first.)</source>
          <target state="translated">第一个字母可以是 &lt;code&gt;'-'&lt;/code&gt; （表示命令读取标准输入）， &lt;code&gt;'f'&lt;/code&gt; （表示命令在命令行读取给定文件）或 &lt;code&gt;'.'&lt;/code&gt; （这意味着命令不读取任何输入，因此必须是第一个。）</target>
        </trans-unit>
        <trans-unit id="71c4ea972d5bdb15f737a2bfb933afebcd39c2f7" translate="yes" xml:space="preserve">
          <source>The first line indicates that 197 calls were monitored. Of those calls, 192 were &lt;em&gt;primitive&lt;/em&gt;, meaning that the call was not induced via recursion. The next line: &lt;code&gt;Ordered by: standard name&lt;/code&gt;, indicates that the text string in the far right column was used to sort the output. The column headings include:</source>
          <target state="translated">第一行表示已监视197个呼叫。在这些调用中，有192个是&lt;em&gt;原始&lt;/em&gt;调用，这意味着该调用不是通过递归进行的。下一行： &lt;code&gt;Ordered by: standard name&lt;/code&gt; 以下顺序排序：标准名称，指示最右边一列中的文本字符串用于对输出进行排序。列标题包括：</target>
        </trans-unit>
        <trans-unit id="88b750bdde2a92f041228f07e4bb845b9726c8f5" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;em&gt;function&lt;/em&gt;, is the function which raised the exception; it depends on the platform and implementation. The second parameter, &lt;em&gt;path&lt;/em&gt;, will be the path name passed to &lt;em&gt;function&lt;/em&gt;. The third parameter, &lt;em&gt;excinfo&lt;/em&gt;, will be the exception information returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;. Exceptions raised by &lt;em&gt;onerror&lt;/em&gt; will not be caught.</source>
          <target state="translated">第一个参数&lt;em&gt;function&lt;/em&gt;是引发异常的函数。这取决于平台和实现。第二个参数&lt;em&gt;path&lt;/em&gt;将是传递给&lt;em&gt;function&lt;/em&gt;的路径名。第三个参数&lt;em&gt;excinfo&lt;/em&gt;将是&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;返回的异常信息。由&lt;em&gt;onerror&lt;/em&gt;引发的异常不会被捕获。</target>
        </trans-unit>
        <trans-unit id="773640730c7cf1ed138ed10047b4279b77d04ee8" translate="yes" xml:space="preserve">
          <source>The first part of this documentation covers the features of &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; that defines the features that are common to all policy objects, including &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;. This includes certain hook methods that are called internally by the email package, which a custom policy could override to obtain different behavior. The second part describes the concrete classes &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;, which implement the hooks that provide the standard behavior and the backward compatible behavior and features, respectively.</source>
          <target state="translated">本文档的第一部分介绍&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;的功能，Policy是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;，定义了所有策略对象（包括&lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; )所共有的功能&lt;/a&gt;。这包括电子邮件程序包内部调用的某些挂钩方法，自定义策略可以覆盖某些挂钩方法以获得不同的行为。第二部分描述了具体的类&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; &lt;/a&gt;，它们实现了分别提供标准行为和向后兼容行为和功能的钩子。</target>
        </trans-unit>
        <trans-unit id="32b51c927e3745d5600cabacbd64411238176bea" translate="yes" xml:space="preserve">
          <source>The first part of this documentation covers the features of &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; that defines the features that are common to all policy objects, including &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;. This includes certain hook methods that are called internally by the email package, which a custom policy could override to obtain different behavior. The second part describes the concrete classes &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;, which implement the hooks that provide the standard behavior and the backward compatible behavior and features, respectively.</source>
          <target state="translated">本文档的第一部分介绍&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;的功能，Policy是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;，定义了所有策略对象（包括&lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; )所共有的功能&lt;/a&gt;。这包括电子邮件程序包内部调用的某些挂钩方法，自定义策略可以覆盖某些挂钩方法以获得不同的行为。第二部分描述了具体的类&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; &lt;/a&gt;，它们实现了分别提供标准行为和向后兼容行为和功能的钩子。</target>
        </trans-unit>
        <trans-unit id="260b4cde00c691683b690b8fefbfeb939e1a12af" translate="yes" xml:space="preserve">
          <source>The first seven arguments are (&lt;code&gt;args&lt;/code&gt;, &lt;code&gt;varargs&lt;/code&gt;, &lt;code&gt;varkw&lt;/code&gt;, &lt;code&gt;defaults&lt;/code&gt;, &lt;code&gt;kwonlyargs&lt;/code&gt;, &lt;code&gt;kwonlydefaults&lt;/code&gt;, &lt;code&gt;annotations&lt;/code&gt;).</source>
          <target state="translated">前七个参数是（ &lt;code&gt;args&lt;/code&gt; ， &lt;code&gt;varargs&lt;/code&gt; ， &lt;code&gt;varkw&lt;/code&gt; ， &lt;code&gt;defaults&lt;/code&gt; ， &lt;code&gt;kwonlyargs&lt;/code&gt; ， &lt;code&gt;kwonlydefaults&lt;/code&gt; ， &lt;code&gt;annotations&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="eca277394ed7c2896c7c7d772bf656447668dd51" translate="yes" xml:space="preserve">
          <source>The first source line of the code object (if available)</source>
          <target state="translated">代码对象的第一行源代码(如果有的话)</target>
        </trans-unit>
        <trans-unit id="1b7000eb925b584e4133d7b28aa26d69000c610f" translate="yes" xml:space="preserve">
          <source>The first step in using the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; is creating an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">使用&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; 的&lt;/a&gt;第一步是创建&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="9b2e1b9bcae7f1307e5235d867471e2e7c3ddf99" translate="yes" xml:space="preserve">
          <source>The first string specifies the program executable, and the remaining strings specify the arguments. Together, string arguments form the &lt;code&gt;argv&lt;/code&gt; of the program.</source>
          <target state="translated">第一个字符串指定程序可执行文件，其余字符串指定参数。字符串参数一起构成程序的 &lt;code&gt;argv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69c597f00dce4e812c0bf05fd7ab11267fe6c188" translate="yes" xml:space="preserve">
          <source>The first such file name that exists is returned by &lt;a href=&quot;#gettext.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;. If no such file is found, then &lt;code&gt;None&lt;/code&gt; is returned. If &lt;em&gt;all&lt;/em&gt; is given, it returns a list of all file names, in the order in which they appear in the languages list or the environment variables.</source>
          <target state="translated">存在的第一个此类文件名由&lt;a href=&quot;#gettext.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;返回。如果找不到这样的文件，则返回 &lt;code&gt;None&lt;/code&gt; 。如果&lt;em&gt;全部&lt;/em&gt;给出，它将返回所有文件名的列表，并按它们在语言列表或环境变量中出现的顺序排列。</target>
        </trans-unit>
        <trans-unit id="f15cc87f948ec88467eca7ad326067dfb4d43de2" translate="yes" xml:space="preserve">
          <source>The first three arguments are the components that make up a class definition header: the class name, the base classes (in order), the keyword arguments (such as &lt;code&gt;metaclass&lt;/code&gt;).</source>
          <target state="translated">前三个参数是组成类定义标头的组件：类名称，基类（按顺序），关键字参数（例如 &lt;code&gt;metaclass&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ac9fb53fa591519e788fdff11ee11fadfcffe45f" translate="yes" xml:space="preserve">
          <source>The first two examples support IPv4 only.</source>
          <target state="translated">前两个例子只支持IPv4。</target>
        </trans-unit>
        <trans-unit id="4c6b04f69fa8403d68d0df111577c1fe07bce323" translate="yes" xml:space="preserve">
          <source>The first type annotation must be enclosed in quotes, making it a &amp;ldquo;forward reference&amp;rdquo;, to hide the &lt;code&gt;expensive_mod&lt;/code&gt; reference from the interpreter runtime. Type annotations for local variables are not evaluated, so the second annotation does not need to be enclosed in quotes.</source>
          <target state="translated">第一种类型的注释必须用引号引起来，使其成为&amp;ldquo;前向引用&amp;rdquo;，以在解释器运行时中隐藏 &lt;code&gt;expensive_mod&lt;/code&gt; 引用。不会评估局部变量的类型注释，因此不需要将第二个注释用引号引起来。</target>
        </trans-unit>
        <trans-unit id="154dd11293b4f0a9c622295b949fa0e55da8605a" translate="yes" xml:space="preserve">
          <source>The first variation of &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; that is provided is also a subclass of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;. Members of an &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; can be compared to integers; by extension, integer enumerations of different types can also be compared to each other:</source>
          <target state="translated">提供的&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;的第一个变体也是&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;的子类。可以将&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; 的&lt;/a&gt;成员与整数进行比较；通过扩展，还可以将不同类型的整数枚举相互比较：</target>
        </trans-unit>
        <trans-unit id="7d60dcd520644aae4a51c2783ce939a1618d8cd2" translate="yes" xml:space="preserve">
          <source>The first version requires that &lt;em&gt;numerator&lt;/em&gt; and &lt;em&gt;denominator&lt;/em&gt; are instances of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with value &lt;code&gt;numerator/denominator&lt;/code&gt;. If &lt;em&gt;denominator&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, it raises a &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;. The second version requires that &lt;em&gt;other_fraction&lt;/em&gt; is an instance of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with the same value. The next two versions accept either a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance, and return a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with exactly the same value. Note that due to the usual issues with binary floating-point (see &lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt;), the argument to &lt;code&gt;Fraction(1.1)&lt;/code&gt; is not exactly equal to 11/10, and so &lt;code&gt;Fraction(1.1)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; return &lt;code&gt;Fraction(11, 10)&lt;/code&gt; as one might expect. (But see the documentation for the &lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt;&lt;code&gt;limit_denominator()&lt;/code&gt;&lt;/a&gt; method below.) The last version of the constructor expects a string or unicode instance. The usual form for this instance is:</source>
          <target state="translated">第一个版本要求&lt;em&gt;分子&lt;/em&gt;和&lt;em&gt;分母&lt;/em&gt;是数字的实例&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;并返回一个具有值 &lt;code&gt;numerator/denominator&lt;/code&gt; 的新的&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;实例。如果&lt;em&gt;分母&lt;/em&gt;为 &lt;code&gt;0&lt;/code&gt; ，则引发&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt;。第二个版本要求&lt;em&gt;other_fraction&lt;/em&gt;是的一个实例&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;并返回一个&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;实例具有相同的值。接下来的两个版本接受&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;实例，并返回&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;实例具有完全相同的值。需要注意的是，由于与二进制浮点常见问题（见&lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;浮点运算：问题和限制&lt;/a&gt;），将参数 &lt;code&gt;Fraction(1.1)&lt;/code&gt; 是不完全等于11/10，等 &lt;code&gt;Fraction(1.1)&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;返回 &lt;code&gt;Fraction(11, 10)&lt;/code&gt; 就像人们可能期望的那样。 （但是请参阅下面的&lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt; &lt;code&gt;limit_denominator()&lt;/code&gt; &lt;/a&gt;方法的文档。）构造函数的最新版本需要字符串或unicode实例。此实例的通常形式为：</target>
        </trans-unit>
        <trans-unit id="6b678647e21c099624e259868d07c88347f85a28" translate="yes" xml:space="preserve">
          <source>The first version requires that &lt;em&gt;numerator&lt;/em&gt; and &lt;em&gt;denominator&lt;/em&gt; are instances of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with value &lt;code&gt;numerator/denominator&lt;/code&gt;. If &lt;em&gt;denominator&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, it raises a &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;. The second version requires that &lt;em&gt;other_fraction&lt;/em&gt; is an instance of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with the same value. The next two versions accept either a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance, and return a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with exactly the same value. Note that due to the usual issues with binary floating-point (see &lt;a href=&quot;https://docs.python.org/3.9/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt;), the argument to &lt;code&gt;Fraction(1.1)&lt;/code&gt; is not exactly equal to 11/10, and so &lt;code&gt;Fraction(1.1)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; return &lt;code&gt;Fraction(11, 10)&lt;/code&gt; as one might expect. (But see the documentation for the &lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt;&lt;code&gt;limit_denominator()&lt;/code&gt;&lt;/a&gt; method below.) The last version of the constructor expects a string or unicode instance. The usual form for this instance is:</source>
          <target state="translated">第一个版本要求&lt;em&gt;分子&lt;/em&gt;和&lt;em&gt;分母&lt;/em&gt;是数字的实例&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;并返回一个具有值 &lt;code&gt;numerator/denominator&lt;/code&gt; 的新的&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;实例。如果&lt;em&gt;分母&lt;/em&gt;为 &lt;code&gt;0&lt;/code&gt; ，则引发&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt;。第二个版本要求&lt;em&gt;other_fraction&lt;/em&gt;是的一个实例&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;并返回一个&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;实例具有相同的值。接下来的两个版本接受&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;实例，并返回&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;实例具有完全相同的值。需要注意的是，由于与二进制浮点常见问题（见&lt;a href=&quot;https://docs.python.org/3.9/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;浮点运算：问题和限制&lt;/a&gt;），将参数 &lt;code&gt;Fraction(1.1)&lt;/code&gt; 是不完全等于11/10，等 &lt;code&gt;Fraction(1.1)&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;返回 &lt;code&gt;Fraction(11, 10)&lt;/code&gt; 就像人们可能期望的那样。（但是请参阅下面的&lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt; &lt;code&gt;limit_denominator()&lt;/code&gt; &lt;/a&gt;方法的文档。）构造函数的最新版本需要字符串或unicode实例。此实例的通常形式为：</target>
        </trans-unit>
        <trans-unit id="0a66aba6e485ab9f7939b6d026c0abcf553b5f4e" translate="yes" xml:space="preserve">
          <source>The first version returns the nearest &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self&lt;/code&gt;, rounding half to even. The second version rounds &lt;code&gt;self&lt;/code&gt; to the nearest multiple of &lt;code&gt;Fraction(1, 10**ndigits)&lt;/code&gt; (logically, if &lt;code&gt;ndigits&lt;/code&gt; is negative), again rounding half toward even. This method can also be accessed through the &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">第一个版本将最接近的&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;返回到 &lt;code&gt;self&lt;/code&gt; ，将一半舍入为偶数。第二个版本将 &lt;code&gt;self&lt;/code&gt; 舍入到 &lt;code&gt;Fraction(1, 10**ndigits)&lt;/code&gt; 的最接近倍数（在逻辑上，如果 &lt;code&gt;ndigits&lt;/code&gt; 为负），再次将其舍入为偶数的一半。也可以通过&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;函数访问此方法。</target>
        </trans-unit>
        <trans-unit id="7ed280fe83fd33874274476ca7f98c0de001638c" translate="yes" xml:space="preserve">
          <source>The fix is to close explicitly the file. Example using a context manager:</source>
          <target state="translated">解决方法是明确关闭文件。使用上下文管理器的例子。</target>
        </trans-unit>
        <trans-unit id="0ca1c97125dd707b4d7b76f78c8f898bf7e57ef8" translate="yes" xml:space="preserve">
          <source>The fix is to remove the &lt;code&gt;os.close(fp.fileno())&lt;/code&gt; line, or open the file with &lt;code&gt;closefd=False&lt;/code&gt;.</source>
          <target state="translated">解决方法是删除 &lt;code&gt;os.close(fp.fileno())&lt;/code&gt; 行，或使用 &lt;code&gt;closefd=False&lt;/code&gt; 打开文件。</target>
        </trans-unit>
        <trans-unit id="8469a524945b16d1ec34b200182d5e6c61700cb3" translate="yes" xml:space="preserve">
          <source>The flag is set if there are no free or cell variables.</source>
          <target state="translated">如果没有自由变量或单元格变量,则设置该标志。</target>
        </trans-unit>
        <trans-unit id="ed52b2ed227b010284477f61a5a82abcb5746897" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a coroutine function. When the code object is executed it returns a coroutine object. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">当代码对象是协程函数时，将设置该标志。执行代码对象时，它将返回协程对象。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3948c22b1c91f14b44ee0f8962182b1c03b07992" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a generator function, i.e. a generator object is returned when the code object is executed.</source>
          <target state="translated">当代码对象是生成函数时,该标志被设置,即当代码对象被执行时,会返回一个生成函数对象。</target>
        </trans-unit>
        <trans-unit id="0ec5f37142a811991c100249624cda19de5e3ecf" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a nested function.</source>
          <target state="translated">当代码对象是一个嵌套函数时,该标志被设置。</target>
        </trans-unit>
        <trans-unit id="67db30428201e8fb3c706e18a40ea74df8dfc9a8" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is an asynchronous generator function. When the code object is executed it returns an asynchronous generator object. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">当代码对象是异步生成器函数时，将设置该标志。执行代码对象时，它将返回一个异步生成器对象。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="814aa93788cd39271af8f2ff1334ffe907eef62c" translate="yes" xml:space="preserve">
          <source>The flag is used to transform generators into generator-based coroutines. Generator objects with this flag can be used in &lt;code&gt;await&lt;/code&gt; expression, and can &lt;code&gt;yield from&lt;/code&gt; coroutine objects. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">该标志用于将生成器转换为基于生成器的协程。带有此标志的生成器对象可以在 &lt;code&gt;await&lt;/code&gt; 表达式中使用，并且可以 &lt;code&gt;yield from&lt;/code&gt; 协程对象中产生。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="472ef2122f93d92a4d6151f3b1a3fc79dda359ab" translate="yes" xml:space="preserve">
          <source>The flags are specific to CPython, and may not be defined in other Python implementations. Furthermore, the flags are an implementation detail, and can be removed or deprecated in future Python releases. It&amp;rsquo;s recommended to use public APIs from the &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module for any introspection needs.</source>
          <target state="translated">这些标志特定于CPython，并且可能未在其他Python实现中定义。此外，这些标志是实现细节，可以在以后的Python版本中删除或弃用。对于自省需求，建议使用&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;模块中的公共API 。</target>
        </trans-unit>
        <trans-unit id="7b65eef96d81c5617b228952c6bdd02752ed58a5" translate="yes" xml:space="preserve">
          <source>The flags argument contains a bitwise OR of zero or more of the following flags:</source>
          <target state="translated">flags参数包含以下0个或更多标志的bitwise OR。</target>
        </trans-unit>
        <trans-unit id="a4ed5bbe8d763440ed3806e2c210ec422dec4cdd" translate="yes" xml:space="preserve">
          <source>The flags argument is a bit mask that can contain zero or more of the following values ORed together: &lt;a href=&quot;#os.GRND_RANDOM&quot;&gt;&lt;code&gt;os.GRND_RANDOM&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">flags参数是一个位掩码，可以包含零个或多个以下值或在一起运算：&lt;a href=&quot;#os.GRND_RANDOM&quot;&gt; &lt;code&gt;os.GRND_RANDOM&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e42e6fb9b1c8d82e67ecac0f6d6031b833228308" translate="yes" xml:space="preserve">
          <source>The flags for certificate verification operations. You can set flags like &lt;a href=&quot;#ssl.VERIFY_CRL_CHECK_LEAF&quot;&gt;&lt;code&gt;VERIFY_CRL_CHECK_LEAF&lt;/code&gt;&lt;/a&gt; by ORing them together. By default OpenSSL does neither require nor verify certificate revocation lists (CRLs). Available only with openssl version 0.9.8+.</source>
          <target state="translated">证书验证操作的标志。您可以通过对它们进行&amp;ldquo;或&amp;rdquo;运算来设置&lt;a href=&quot;#ssl.VERIFY_CRL_CHECK_LEAF&quot;&gt; &lt;code&gt;VERIFY_CRL_CHECK_LEAF&lt;/code&gt; 之类&lt;/a&gt;的标志。默认情况下，OpenSSL既不需要也不验证证书吊销列表（CRL）。仅适用于openssl 0.9.8+版。</target>
        </trans-unit>
        <trans-unit id="c7e52a18a4bd1a25b0dadd8f95a2ddf5d9b66f31" translate="yes" xml:space="preserve">
          <source>The float type implements the &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;numbers.Real&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;. float also has the following additional methods.</source>
          <target state="translated">浮点类型实现数字。&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;numbers.Real&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。float还具有以下其他方法。</target>
        </trans-unit>
        <trans-unit id="4cdc56951aae74a1e052a7f8cc65e5538466068c" translate="yes" xml:space="preserve">
          <source>The float type implements the &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;numbers.Real&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;. float also has the following additional methods.</source>
          <target state="translated">浮点类型实现数字。&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;numbers.Real&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。float还具有以下其他方法。</target>
        </trans-unit>
        <trans-unit id="92f2a154936409f6982bec487393509f452999b7" translate="yes" xml:space="preserve">
          <source>The float type is described in &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;.</source>
          <target state="translated">浮点类型在&lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;数值类型中进行了&lt;/a&gt;描述-int，float，complex。</target>
        </trans-unit>
        <trans-unit id="89fb9d615ea00e40317c5f9968a1d62d02815cb3" translate="yes" xml:space="preserve">
          <source>The floor is computed and the remainder (if any) is thrown away. In the second case, an integer is returned. (3)</source>
          <target state="translated">计算出下限,剩余的部分(如果有的话)被扔掉。在第二种情况下,返回一个整数。(3)</target>
        </trans-unit>
        <trans-unit id="cd4f887b55eeea791769598b7071c612e7f2c0e7" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; methods are meant for use in unit tests and &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">以下&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;方法适用于单元测试和&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="78d23bc14b87f27435176d1c007b23cff76c66a4" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; method is intended to be called by code using the email library to create policy instances with custom settings:</source>
          <target state="translated">以下&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;方法旨在通过代码使用电子邮件库来调用，以使用自定义设置创建策略实例：</target>
        </trans-unit>
        <trans-unit id="57447dead23ff464ff3d7bf38606b16eaa9986c7" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; subclasses are provided for reading and writing.</source>
          <target state="translated">提供以下&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;子类来进行读写。</target>
        </trans-unit>
        <trans-unit id="941e9d82eb275d485c825efd74180297955eef50" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;RUSAGE_*&lt;/code&gt; symbols are passed to the &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; function to specify which processes information should be provided for.</source>
          <target state="translated">以下 &lt;code&gt;RUSAGE_*&lt;/code&gt; 符号传递到&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;函数，以指定应提供哪些进程信息。</target>
        </trans-unit>
        <trans-unit id="8e590fd88205ef9e15a283b79c60eb9e96a14455" translate="yes" xml:space="preserve">
          <source>The following Python code helps explain what &lt;em&gt;tee&lt;/em&gt; does (although the actual implementation is more complex and uses only a single underlying</source>
          <target state="translated">以下Python代码有助于说明&lt;em&gt;tee的&lt;/em&gt;作用（尽管实际实现更为复杂，并且仅使用单个基础</target>
        </trans-unit>
        <trans-unit id="e926ba94f9d733ea5f82756a4605d41839945c93" translate="yes" xml:space="preserve">
          <source>The following Python types can thus be sent to SQLite without any problem:</source>
          <target state="translated">因此,以下Python类型可以毫无问题地被发送到SQLite。</target>
        </trans-unit>
        <trans-unit id="a6784883eb3348f6fc5ea7e327435f77a01ccee1" translate="yes" xml:space="preserve">
          <source>The following W3C document, &lt;a href=&quot;https://www.w3.org/International/O-charset&quot;&gt;https://www.w3.org/International/O-charset&lt;/a&gt;, lists the various ways in which an (X)HTML or an XML document could have specified its encoding information.</source>
          <target state="translated">以下W3C文档&lt;a href=&quot;https://www.w3.org/International/O-charset&quot;&gt;https://www.w3.org/International/O-charset&lt;/a&gt;列出了（X）HTML或XML文档可以指定其编码信息的各种方式。</target>
        </trans-unit>
        <trans-unit id="4329043e2577e3e7375d57bbfa47e67713420c76" translate="yes" xml:space="preserve">
          <source>The following additional characters may be appended to the flag to control how the database is opened:</source>
          <target state="translated">以下附加字符可以附加到标志中,以控制数据库的打开方式。</target>
        </trans-unit>
        <trans-unit id="f04d5255067d8b5087d6c7f2f54cf21788f68331" translate="yes" xml:space="preserve">
          <source>The following applies to all start methods.</source>
          <target state="translated">以下内容适用于所有的启动方法。</target>
        </trans-unit>
        <trans-unit id="fe0b5f0ab021ddc435da4df2426e3b6a7d64523e" translate="yes" xml:space="preserve">
          <source>The following are defined as class-level attributes of &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下定义为&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; 的&lt;/a&gt;类级属性：</target>
        </trans-unit>
        <trans-unit id="493f6ff18fe3ca63e3f57c1cbbddbc4bfdc65230" translate="yes" xml:space="preserve">
          <source>The following are optional NNTP extensions defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;. Some of them have been superseded by newer commands in &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">以下是&lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2980中&lt;/strong&gt;&lt;/a&gt;定义的可选NNTP扩展。其中一些已被&lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3977中的&lt;/strong&gt;&lt;/a&gt;较新命令取代。</target>
        </trans-unit>
        <trans-unit id="1dee97e7d46ddeef07ad66ff95b44fdec12cbbff" translate="yes" xml:space="preserve">
          <source>The following are the valid string and SortKey:</source>
          <target state="translated">以下是有效的字符串和SortKey。</target>
        </trans-unit>
        <trans-unit id="2bb90197cfa182080451d9e4160dcb0640565187" translate="yes" xml:space="preserve">
          <source>The following attribute and methods should only be used by classes derived from &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下属性和方法应仅由从&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;派生的类使用。</target>
        </trans-unit>
        <trans-unit id="bb23742802da9eb7259b6abdcb456333d0a48b2c" translate="yes" xml:space="preserve">
          <source>The following attributes are also available:</source>
          <target state="translated">以下属性也是可用的:</target>
        </trans-unit>
        <trans-unit id="4eceabfa85f58879acaae3fe2f9f8b84e838e470" translate="yes" xml:space="preserve">
          <source>The following attributes are defined on instances of &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;实例上定义了以下属性：</target>
        </trans-unit>
        <trans-unit id="436a20c21ef45203d573ca4aa36d5e1c54e2e851" translate="yes" xml:space="preserve">
          <source>The following attributes are provided for convenience, and are the most useful combinations of the above flags:</source>
          <target state="translated">为方便起见,提供了以下属性,是上述标志的最有用组合。</target>
        </trans-unit>
        <trans-unit id="e8e6bd955c5c9b643aaae8484e0863b9e6f73b80" translate="yes" xml:space="preserve">
          <source>The following attributes contain values relating to the current parse location in an &lt;code&gt;xmlparser&lt;/code&gt; object. During a callback reporting a parse event they indicate the location of the first of the sequence of characters that generated the event. When called outside of a callback, the position indicated will be just past the last parse event (regardless of whether there was an associated callback).</source>
          <target state="translated">以下属性包含与 &lt;code&gt;xmlparser&lt;/code&gt; 对象中的当前解析位置有关的值。在报告解析事件的回调过程中，它们指示生成事件的字符序列中第一个字符的位置。在回调之外调用时，指示的位置将刚好在上一个解析事件之后（无论是否存在关联的回调）。</target>
        </trans-unit>
        <trans-unit id="7113a820fb71237b75638d22c11096a14dea5d8d" translate="yes" xml:space="preserve">
          <source>The following attributes contain values relating to the most recent error encountered by an &lt;code&gt;xmlparser&lt;/code&gt; object, and will only have correct values once a call to &lt;code&gt;Parse()&lt;/code&gt; or &lt;code&gt;ParseFile()&lt;/code&gt; has raised an &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;xml.parsers.expat.ExpatError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">以下属性包含与 &lt;code&gt;xmlparser&lt;/code&gt; 对象遇到的最新错误相关的值，并且仅在对 &lt;code&gt;Parse()&lt;/code&gt; 或 &lt;code&gt;ParseFile()&lt;/code&gt; 的调用引发&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;xml.parsers.expat.ExpatError&lt;/code&gt; &lt;/a&gt;异常后才具有正确的值。</target>
        </trans-unit>
        <trans-unit id="b8029e19ee3bc98ea3f739d0b23b2fa8cece911f" translate="yes" xml:space="preserve">
          <source>The following attributes have values that are different from the &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; default:</source>
          <target state="translated">以下属性的值与&amp;ldquo; &lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;默认值不同：</target>
        </trans-unit>
        <trans-unit id="19a7dc07900c158b5f98d8b86469216de3ba29ba" translate="yes" xml:space="preserve">
          <source>The following attributes of a &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; can be configured either by subclassing or assignment on an instance:</source>
          <target state="translated">可以通过子类化或在实例上分配来配置&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;的以下属性：</target>
        </trans-unit>
        <trans-unit id="6f46b8f3ca7021134f6fc09e1b3c895db0e323ea" translate="yes" xml:space="preserve">
          <source>The following callbacks are called on &lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt;&lt;code&gt;BufferedProtocol&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">在&lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt; &lt;code&gt;BufferedProtocol&lt;/code&gt; &lt;/a&gt;实例上调用以下回调：</target>
        </trans-unit>
        <trans-unit id="4ce04e341e5b95ab13da3a2b67690a015d59cdcb" translate="yes" xml:space="preserve">
          <source>The following class implements a parser that will be used to illustrate more examples:</source>
          <target state="translated">下面的类实现了一个解析器,将用于说明更多的例子。</target>
        </trans-unit>
        <trans-unit id="1f2b2fa925d1815548d35ed7429f36c5ecdaabb9" translate="yes" xml:space="preserve">
          <source>The following class methods are also available:</source>
          <target state="translated">还可以使用以下类方法。</target>
        </trans-unit>
        <trans-unit id="be3f66452ec5f294e882d678f21c90b717cdcc19" translate="yes" xml:space="preserve">
          <source>The following classes and functions provide file dialog windows that combine a native look-and-feel with configuration options to customize behaviour. The following keyword arguments are applicable to the classes and functions listed below:</source>
          <target state="translated">下面的类和函数提供了文件对话框窗口,这些窗口结合了本机的外观和感觉以及配置选项来定制行为。以下关键字参数适用于下面列出的类和函数。</target>
        </trans-unit>
        <trans-unit id="c1e9e8dbaf83d4bd1b564c338b27a5b8ac01490b" translate="yes" xml:space="preserve">
          <source>The following classes are available:</source>
          <target state="translated">有以下课程:</target>
        </trans-unit>
        <trans-unit id="cf77f9e884fd9a2e64c18b91e96221bdac8e8a18" translate="yes" xml:space="preserve">
          <source>The following classes are provided:</source>
          <target state="translated">提供以下课程:</target>
        </trans-unit>
        <trans-unit id="776ad4b0b1fc73870feeb0df3aa3500c99e92113" translate="yes" xml:space="preserve">
          <source>The following classes are the classes used to represent data parsed from structured headers and can, in general, be used by an application program to construct structured values to assign to specific headers.</source>
          <target state="translated">下面的类是用来表示从结构化头文件中解析出来的数据的类,一般情况下,应用程序可以用它们来构造结构化的值,以分配给特定的头文件。</target>
        </trans-unit>
        <trans-unit id="4cf852c278240688680230326012f83f01ee8dda" translate="yes" xml:space="preserve">
          <source>The following classes provide the implementations of the parse results when operating on &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">以下类提供在对&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或字节&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;对象进行操作时解析结果的实现：</target>
        </trans-unit>
        <trans-unit id="2a8f9a5fce9e21a0ddb67e16a8bd2016f44c9426" translate="yes" xml:space="preserve">
          <source>The following classes provide the implementations of the structured parse results when operating on &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">以下类提供对&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象进行操作时结构化解析结果的实现：</target>
        </trans-unit>
        <trans-unit id="6bc4a1812e683c53af6ce054907acc1948bcc44a" translate="yes" xml:space="preserve">
          <source>The following client code will call the methods made available by the preceding server:</source>
          <target state="translated">下面的客户端代码将调用前面服务器提供的方法。</target>
        </trans-unit>
        <trans-unit id="0abb99552414321309f456abef55540645d27a9c" translate="yes" xml:space="preserve">
          <source>The following code computes two sums like &lt;code&gt;0 + 1 + 2 + ...&lt;/code&gt; inefficiently, by creating a list of those numbers. This list consumes a lot of memory temporarily. We can use &lt;a href=&quot;#tracemalloc.get_traced_memory&quot;&gt;&lt;code&gt;get_traced_memory()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt; to observe the small memory usage after the sum is computed as well as the peak memory usage during the computations:</source>
          <target state="translated">下面的代码通过创建这些数字的列表来低效地计算两个和，例如 &lt;code&gt;0 + 1 + 2 + ...&lt;/code&gt; 此列表暂时消耗大量内存。我们可以使用&lt;a href=&quot;#tracemalloc.get_traced_memory&quot;&gt; &lt;code&gt;get_traced_memory()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; &lt;/a&gt;来观察计算总和后的小内存使用情况以及计算过程中的峰值内存使用情况：</target>
        </trans-unit>
        <trans-unit id="b9f5855661bc69d1bbc9f188edcc6422538bf453" translate="yes" xml:space="preserve">
          <source>The following code connects to the server and receives some data from the server:</source>
          <target state="translated">以下代码连接到服务器,并从服务器接收一些数据。</target>
        </trans-unit>
        <trans-unit id="68ebfc5f9876cf31f85eec23cbd7606dde463890" translate="yes" xml:space="preserve">
          <source>The following code is a Python program that takes a list of integers and produces either the sum or the max:</source>
          <target state="translated">下面的代码是一个Python程序,它接收一个整数列表,并产生总和或最大值。</target>
        </trans-unit>
        <trans-unit id="33c4f1b9f7868200d82e533f806095ec68f717b3" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; to wait for messages from multiple processes at once:</source>
          <target state="translated">以下代码使用&lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;一次等待来自多个进程的消息：</target>
        </trans-unit>
        <trans-unit id="b52ed289a53f55a282ec7ec617b97682fe024623" translate="yes" xml:space="preserve">
          <source>The following codec provides a text transform: a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; mapping. It is not supported by &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt; (which only produces &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; output).</source>
          <target state="translated">以下编解码器提供了文本转换：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;到&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 的&lt;/a&gt;映射。&lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt;不支持它（仅产生&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;输出）。</target>
        </trans-unit>
        <trans-unit id="7e744597dd53841c8c8102ea3b4cc315bd8163a6" translate="yes" xml:space="preserve">
          <source>The following codecs provide &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; encoding and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; decoding, similar to the Unicode text encodings.</source>
          <target state="translated">以下编解码器提供&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;到&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;编码，以及类&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节对象&lt;/a&gt;到&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;解码，类似于Unicode文本编码。</target>
        </trans-unit>
        <trans-unit id="f41aec04217c2862b4e89674e6469255491959be" translate="yes" xml:space="preserve">
          <source>The following codecs provide &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; encoding and &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; decoding, similar to the Unicode text encodings.</source>
          <target state="translated">以下编解码器提供&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;到&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;编码，以及类&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节对象&lt;/a&gt;到&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;解码，类似于Unicode文本编码。</target>
        </trans-unit>
        <trans-unit id="d259fb7cc5745e79d6cd750e440d2f1424078478" translate="yes" xml:space="preserve">
          <source>The following codecs provide binary transforms: &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; mappings. They are not supported by &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; (which only produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; output).</source>
          <target state="translated">以下编解码器提供了二进制转换：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;到&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;映射。&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;（仅产生&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;输出）不支持它们。</target>
        </trans-unit>
        <trans-unit id="df5c180731e4065f875dab92aa5ff5eb076caafc" translate="yes" xml:space="preserve">
          <source>The following codecs provide binary transforms: &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; mappings. They are not supported by &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; (which only produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; output).</source>
          <target state="translated">以下编解码器提供了二进制转换：&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;到&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;映射。&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;（仅产生&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;输出）不支持它们。</target>
        </trans-unit>
        <trans-unit id="434fdf5c9b0ef216b7167b3a268500f99ef7d459" translate="yes" xml:space="preserve">
          <source>The following constant is the only parameter that can be sent to &lt;a href=&quot;#time.clock_settime&quot;&gt;&lt;code&gt;clock_settime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下常量是可以发送到&lt;a href=&quot;#time.clock_settime&quot;&gt; &lt;code&gt;clock_settime()&lt;/code&gt; &lt;/a&gt;的唯一参数。</target>
        </trans-unit>
        <trans-unit id="9ee4a57faca157f748bf6c4be3e1f4055c7770ce" translate="yes" xml:space="preserve">
          <source>The following constants are available at the module level:</source>
          <target state="translated">下列常量可在模块一级使用:</target>
        </trans-unit>
        <trans-unit id="15620e1a702d8f287c721f0664c56441b8748c38" translate="yes" xml:space="preserve">
          <source>The following constants are available:</source>
          <target state="translated">下列常量可供使用:</target>
        </trans-unit>
        <trans-unit id="bc75344c855052cd9b4b292032d5d1cfb31f8eab" translate="yes" xml:space="preserve">
          <source>The following constants are defined for use in many &lt;code&gt;_winreg&lt;/code&gt; functions.</source>
          <target state="translated">定义了以下常量，以供许多 &lt;code&gt;_winreg&lt;/code&gt; 函数使用。</target>
        </trans-unit>
        <trans-unit id="5b2ba821f4691679e132dc8fb174f36e59b7e4d3" translate="yes" xml:space="preserve">
          <source>The following constants are options for the &lt;em&gt;flags&lt;/em&gt; parameter to the &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. They can be combined using the bitwise OR operator &lt;code&gt;|&lt;/code&gt;. Some of them are not available on all platforms. For descriptions of their availability and use, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/open(2)&quot;&gt;open(2)&lt;/a&gt;&lt;/em&gt; manual page on Unix or &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx&quot;&gt;the MSDN&lt;/a&gt; on Windows.</source>
          <target state="translated">以下常量是&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数的&lt;em&gt;flags&lt;/em&gt;参数的选项。可以使用按位OR运算符组合它们 &lt;code&gt;|&lt;/code&gt; 。其中一些功能并非在所有平台上都可用。有关其可用性和使用的说明，请参阅Unix上的&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/open(2)&quot;&gt;open（2）&lt;/a&gt;&lt;/em&gt;手册页或Windows 上&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx&quot;&gt;的MSDN&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e771abc8230c815b506e59c042235b7c4a6b8e3f" translate="yes" xml:space="preserve">
          <source>The following constants are provided for use with &lt;a href=&quot;#gc.set_debug&quot;&gt;&lt;code&gt;set_debug()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">提供了以下常量供&lt;a href=&quot;#gc.set_debug&quot;&gt; &lt;code&gt;set_debug()&lt;/code&gt; 使用&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="cb205eca9391cfc2f056a1dbf90721ffe5b16978" translate="yes" xml:space="preserve">
          <source>The following constants are provided in the &lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt;&lt;code&gt;xml.parsers.expat.errors&lt;/code&gt;&lt;/a&gt; module. These constants are useful in interpreting some of the attributes of the &lt;code&gt;ExpatError&lt;/code&gt; exception objects raised when an error has occurred. Since for backwards compatibility reasons, the constants&amp;rsquo; value is the error &lt;em&gt;message&lt;/em&gt; and not the numeric error &lt;em&gt;code&lt;/em&gt;, you do this by comparing its &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute with &lt;code&gt;errors.codes[errors.XML_ERROR_&lt;em&gt;CONSTANT_NAME&lt;/em&gt;]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt; &lt;code&gt;xml.parsers.expat.errors&lt;/code&gt; &lt;/a&gt;模块中提供了以下常量。这些常量在解释发生错误时引发的 &lt;code&gt;ExpatError&lt;/code&gt; 异常对象的某些属性时很有用。由于出于向后兼容的原因，常量的值是错误&lt;em&gt;消息，&lt;/em&gt;而不是数字错误&lt;em&gt;代码&lt;/em&gt;，因此可以通过将其&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性与 &lt;code&gt;errors.codes[errors.XML_ERROR_&lt;em&gt;CONSTANT_NAME&lt;/em&gt;]&lt;/code&gt; 进行比较来实现。</target>
        </trans-unit>
        <trans-unit id="5965b72a7c2bdd2aca53ce47e480c9fabe7ebc28" translate="yes" xml:space="preserve">
          <source>The following constitutes a valid IPv4 address:</source>
          <target state="translated">以下构成有效IPv4地址的是。</target>
        </trans-unit>
        <trans-unit id="4e910096327b043ad9d2afa009406429c804c3b3" translate="yes" xml:space="preserve">
          <source>The following constitutes a valid IPv6 address:</source>
          <target state="translated">以下构成有效的IPv6地址。</target>
        </trans-unit>
        <trans-unit id="b58ccb42402de11fe64b8157bdb31be1accde61b" translate="yes" xml:space="preserve">
          <source>The following convenience methods combine several ioctls, or one ioctl and some simple calculations.</source>
          <target state="translated">下面的方便方法将几个ioctl,或者一个ioctl和一些简单的计算结合起来。</target>
        </trans-unit>
        <trans-unit id="590a13c463d04c026d81a3b0c4e4d9904786e9ba" translate="yes" xml:space="preserve">
          <source>The following data attributes are also available:</source>
          <target state="translated">还提供以下数据属性:</target>
        </trans-unit>
        <trans-unit id="daf053b174bad2ee3cbf65af4b7568faf14c1319" translate="yes" xml:space="preserve">
          <source>The following data items and methods are also supported:</source>
          <target state="translated">还支持以下数据项和方法:</target>
        </trans-unit>
        <trans-unit id="41a59667c8838599d897ed21cec38179460a4746" translate="yes" xml:space="preserve">
          <source>The following data values are used to support path manipulation operations. These are defined for all platforms.</source>
          <target state="translated">以下数据值用于支持路径操作。这些数据值是为所有平台定义的。</target>
        </trans-unit>
        <trans-unit id="040395c6a3618bf3ebfcd5244fdff59b1dda2f42" translate="yes" xml:space="preserve">
          <source>The following decorators and exception implement test skipping and expected failures:</source>
          <target state="translated">下面的装饰器和异常实现了测试跳过和预期失败。</target>
        </trans-unit>
        <trans-unit id="2f67176ca68e7b05b36fe46d06bf8c43a493c901" translate="yes" xml:space="preserve">
          <source>The following dictionary-like methods work on the element attributes.</source>
          <target state="translated">以下类似字典的方法适用于元素属性。</target>
        </trans-unit>
        <trans-unit id="1dc50e2836f9aa579e4b0f696d2f357a755d8b8a" translate="yes" xml:space="preserve">
          <source>The following directives can be embedded in the &lt;em&gt;format&lt;/em&gt; string. They are shown without the optional field width and precision specification, and are replaced by the indicated characters in the &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; result:</source>
          <target state="translated">可以将以下指令嵌入&lt;em&gt;格式&lt;/em&gt;字符串中。它们显示时没有可选的字段宽度和精度规范，并由&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;结果中的指示字符替换：</target>
        </trans-unit>
        <trans-unit id="729ba8c5a9bc8860d3a6a359878f9ca2b87f2ec6" translate="yes" xml:space="preserve">
          <source>The following error handlers are only applicable to &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;:</source>
          <target state="translated">以下错误处理程序仅适用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1de0b907c6eb647460199d7608c57d22fd17486a" translate="yes" xml:space="preserve">
          <source>The following error handlers are only applicable to &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;:</source>
          <target state="translated">以下错误处理程序仅适用于&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="29330e2ffc3cc8164b079ca16d5c26f9e22d11f7" translate="yes" xml:space="preserve">
          <source>The following events are raised internally and do not correspond to any public API of CPython:</source>
          <target state="translated">以下事件是由CPython内部引发的,并不对应CPython的任何公共API。</target>
        </trans-unit>
        <trans-unit id="b7712bbe1533b2f2e58112643a78ef6e4d3ffd90" translate="yes" xml:space="preserve">
          <source>The following example achieves the same goal but supports concurrent interactive sessions, by only appending the new history.</source>
          <target state="translated">下面的例子实现了同样的目标,但支持并发的交互式会话,只附加新的历史记录。</target>
        </trans-unit>
        <trans-unit id="d4555e1da28cdc40e782dd2248ed5c1ef7fe192f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a practical use of the &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; class with &lt;a href=&quot;https://www.numpy.org/&quot;&gt;NumPy arrays&lt;/a&gt;, accessing the same &lt;code&gt;numpy.ndarray&lt;/code&gt; from two distinct Python shells:</source>
          <target state="translated">以下示例演示了将&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;类与&lt;a href=&quot;https://www.numpy.org/&quot;&gt;NumPy数组&lt;/a&gt;一起实际使用的方法，该 &lt;code&gt;numpy.ndarray&lt;/code&gt; 从两个不同的Python shell 访问相同的numpy.ndarray：</target>
        </trans-unit>
        <trans-unit id="dd40c9b71705ee03f60f196a9ed9560cf96a2b42" translate="yes" xml:space="preserve">
          <source>The following example demonstrates basic use of a &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">以下示例演示了&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;实例的基本用法：</target>
        </trans-unit>
        <trans-unit id="636d7599cc64ae9844d830daf79292dae85c3e9c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates basic use of the &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">以下示例演示了&lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; &lt;/a&gt;类的基本用法：</target>
        </trans-unit>
        <trans-unit id="ebe02adeb943f0142409336cb1c7fc44d532dbfe" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">下面的示例演示如何使用&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="184d08b3a3ddcb361e3da601454cd3a57e4847c3" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s history reading and writing functions to automatically load and save a history file named &lt;code&gt;.python_history&lt;/code&gt; from the user&amp;rsquo;s home directory. The code below would normally be executed automatically during interactive sessions from the user&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">下面的示例演示如何使用&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;模块的历史记录读取和写入功能从用户的主目录自动加载和保存名为 &lt;code&gt;.python_history&lt;/code&gt; 的历史记录文件。下面的代码通常会在交互式会话期间从用户的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;文件自动执行。</target>
        </trans-unit>
        <trans-unit id="f7a7e2191b3ba852a31c61e4fed72cf68c85a28d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s history reading and writing functions to automatically load and save a history file named &lt;code&gt;.python_history&lt;/code&gt; from the user&amp;rsquo;s home directory. The code below would normally be executed automatically during interactive sessions from the user&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">以下示例演示如何使用&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;模块的历史记录读取和写入功能从用户的主目录自动加载和保存名为 &lt;code&gt;.python_history&lt;/code&gt; 的历史记录文件。通常，在交互式会话期间，以下代码将在用户的&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;文件中自动执行。</target>
        </trans-unit>
        <trans-unit id="26e6cc83687c3de89725cf30864401269275c60e" translate="yes" xml:space="preserve">
          <source>The following example demonstrates low-level use of &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">以下示例演示了&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;实例的低级使用：</target>
        </trans-unit>
        <trans-unit id="db1a4ea3897dc228cbe242e1563fbe5add0d99f9" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the basic mechanisms of a &lt;code&gt;SharedMemoryManager&lt;/code&gt;:</source>
          <target state="translated">以下示例演示了 &lt;code&gt;SharedMemoryManager&lt;/code&gt; 的基本机制：</target>
        </trans-unit>
        <trans-unit id="ec9664604236f3fb600fa6948a7aacd8381f5a02" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the different ways to print and format the exception and traceback:</source>
          <target state="translated">下面的例子演示了打印和格式化异常和回溯的不同方法。</target>
        </trans-unit>
        <trans-unit id="f11233dbb56229c8fdfe160786d97ca12f552ea0" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of a pool:</source>
          <target state="translated">下面的例子演示了水池的使用。</target>
        </trans-unit>
        <trans-unit id="5a60e7418b2653dc05bc9c009baf5076b4b7e356" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this.</source>
          <target state="translated">下面的例子说明了这一点。</target>
        </trans-unit>
        <trans-unit id="3d5ef660ad94efd9bc11f1431691817680e67dd7" translate="yes" xml:space="preserve">
          <source>The following example depicts a potentially more convenient pattern for using &lt;code&gt;SharedMemoryManager&lt;/code&gt; objects via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to ensure that all shared memory blocks are released after they are no longer needed:</source>
          <target state="translated">下面的示例描述了一个潜在的更方便的模式，该模式用于通过&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句使用 &lt;code&gt;SharedMemoryManager&lt;/code&gt; 对象，以确保在不再需要所有共享内存块后将它们释放：</target>
        </trans-unit>
        <trans-unit id="299a2e327dd29b623d9f36e2011dd0a6b09aec32" translate="yes" xml:space="preserve">
          <source>The following example depicts a potentially more convenient pattern for using &lt;code&gt;SharedMemoryManager&lt;/code&gt; objects via the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to ensure that all shared memory blocks are released after they are no longer needed:</source>
          <target state="translated">下面的示例描述了一个潜在的更方便的模式，该模式用于通过&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句使用 &lt;code&gt;SharedMemoryManager&lt;/code&gt; 对象，以确保在不再需要所有共享内存块后将它们释放：</target>
        </trans-unit>
        <trans-unit id="f612736a42a1b32b9815a49d4f5b313138a8a7d1" translate="yes" xml:space="preserve">
          <source>The following example depicts how one, two, or many processes may access the same &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; by supplying the name of the shared memory block behind it:</source>
          <target state="translated">以下示例描述了一个，两个或多个进程如何通过在其后面提供共享内存块的名称来访问同一&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0753e44451c3f0b3ee4bcc7279542a665e363cad" translate="yes" xml:space="preserve">
          <source>The following example extends the &lt;a href=&quot;code#code.InteractiveConsole&quot;&gt;&lt;code&gt;code.InteractiveConsole&lt;/code&gt;&lt;/a&gt; class to support history save/restore.</source>
          <target state="translated">以下示例扩展了&lt;a href=&quot;code#code.InteractiveConsole&quot;&gt; &lt;code&gt;code.InteractiveConsole&lt;/code&gt; &lt;/a&gt;类，以支持历史记录保存/恢复。</target>
        </trans-unit>
        <trans-unit id="7460e2e46aac0aa0a2a187996f8166def8725bce" translate="yes" xml:space="preserve">
          <source>The following example fetches address information for a hypothetical TCP connection to &lt;code&gt;example.org&lt;/code&gt; on port 80 (results may differ on your system if IPv6 isn&amp;rsquo;t enabled):</source>
          <target state="translated">下面的示例为端口80 上的 &lt;code&gt;example.org&lt;/code&gt; 进行假定的TCP连接获取地址信息（如果未启用IPv6，则系统上的结果可能会有所不同）：</target>
        </trans-unit>
        <trans-unit id="233c2eac45bffe4b40d65d000bc52972a51f3c56" translate="yes" xml:space="preserve">
          <source>The following example illustrates both approaches.</source>
          <target state="translated">下面的例子说明了这两种方法。</target>
        </trans-unit>
        <trans-unit id="09c592e8e72f8e8c38f8b29004ae767bc0ce7251" translate="yes" xml:space="preserve">
          <source>The following example illustrates how any arguments besides &lt;em&gt;days&lt;/em&gt;, &lt;em&gt;seconds&lt;/em&gt; and &lt;em&gt;microseconds&lt;/em&gt; are &amp;ldquo;merged&amp;rdquo; and normalized into those three resulting attributes:</source>
          <target state="translated">下面的示例说明如何将&lt;em&gt;天&lt;/em&gt;，&lt;em&gt;秒&lt;/em&gt;和&lt;em&gt;微秒&lt;/em&gt;以外的任何参数&amp;ldquo;合并&amp;rdquo;并归一化为这三个结果属性：</target>
        </trans-unit>
        <trans-unit id="473a235bcb270a8b7bf0781c5cd2588bed3305f5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how coroutines can intercept the cancellation request:</source>
          <target state="translated">下面的例子说明了coroutines如何拦截取消请求。</target>
        </trans-unit>
        <trans-unit id="5f9f5db6889dd345007e3618d45dca48718d28ec" translate="yes" xml:space="preserve">
          <source>The following example illustrates the most common usage scenario:</source>
          <target state="translated">下面的例子说明了最常见的使用情况。</target>
        </trans-unit>
        <trans-unit id="c125f0fb4b508646178c139c8b90c2cd7e59b967" translate="yes" xml:space="preserve">
          <source>The following example included in the &lt;code&gt;Lib/xmlrpc/server.py&lt;/code&gt; module shows a server allowing dotted names and registering a multicall function.</source>
          <target state="translated">&lt;code&gt;Lib/xmlrpc/server.py&lt;/code&gt; 模块中包含的以下示例显示了一个服务器，该服务器允许使用点分名称并注册多调用函数。</target>
        </trans-unit>
        <trans-unit id="a815f49a1b6e8791aa8e0e5716a50c9445ca6e15" translate="yes" xml:space="preserve">
          <source>The following example reads the resulting pickled data.</source>
          <target state="translated">下面的例子读取了所产生的腌制数据。</target>
        </trans-unit>
        <trans-unit id="e969b44471e10e6ec4169ca5098e2f658d20ed5c" translate="yes" xml:space="preserve">
          <source>The following example records some hostnames and a corresponding title, and then prints out the contents of the database:</source>
          <target state="translated">下面的例子记录了一些主机名和相应的标题,然后打印出数据库的内容。</target>
        </trans-unit>
        <trans-unit id="d4f2f9424de8830be3359c54ab8840c0691aa87c" translate="yes" xml:space="preserve">
          <source>The following example shows a custom collation that sorts &amp;ldquo;the wrong way&amp;rdquo;:</source>
          <target state="translated">以下示例显示了一种按&amp;ldquo;错误方式&amp;rdquo;排序的自定义归类：</target>
        </trans-unit>
        <trans-unit id="18fb8bc80d8c8ffdcc48d97894d2b3372d1bb899" translate="yes" xml:space="preserve">
          <source>The following example shows a simple use of &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; to display all the files (excluding directories) in the given &lt;em&gt;path&lt;/em&gt; that don&amp;rsquo;t start with &lt;code&gt;'.'&lt;/code&gt;. The &lt;code&gt;entry.is_file()&lt;/code&gt; call will generally not make an additional system call:</source>
          <target state="translated">以下示例显示了&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;的简单用法，以显示给定&lt;em&gt;路径&lt;/em&gt;中所有以 &lt;code&gt;'.'&lt;/code&gt; 开头的文件（不包括目录）。。通常， &lt;code&gt;entry.is_file()&lt;/code&gt; 调用不会进行其他系统调用：</target>
        </trans-unit>
        <trans-unit id="974861a110f79768420c0b56aa2cea90629919d4" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; can be used to compare three different expressions:</source>
          <target state="translated">下面的示例说明如何使用&lt;a href=&quot;#timeit-command-line-interface&quot;&gt;命令行界面&lt;/a&gt;比较三个不同的表达式：</target>
        </trans-unit>
        <trans-unit id="3f24f10a54f470bebf08211935bfc4932125efae" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; can be used to create an executable archive from a directory containing Python code. When run, the archive will execute the &lt;code&gt;main&lt;/code&gt; function from the module &lt;code&gt;myapp&lt;/code&gt; in the archive.</source>
          <target state="translated">以下示例显示了如何使用&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;命令行界面&lt;/a&gt;从包含Python代码的目录中创建可执行存档。运行时，存档将从存档中的模块 &lt;code&gt;myapp&lt;/code&gt; 执行 &lt;code&gt;main&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="5387717e46daa1d1fb09309d90ec9017ac4aeae0" translate="yes" xml:space="preserve">
          <source>The following example shows the difference between &lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt;&lt;code&gt;parse_known_args()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt;: the former returns &lt;code&gt;['2',
'3']&lt;/code&gt; as unparsed arguments, while the latter collects all the positionals into &lt;code&gt;rest&lt;/code&gt;.</source>
          <target state="translated">以下示例显示&lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt; &lt;code&gt;parse_known_args()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;之间的区别：前者将 &lt;code&gt;['2', '3']&lt;/code&gt; 作为未解析的参数返回，而后者将所有positional收集到 &lt;code&gt;rest&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="09bc38c527d29e07030d23816d50a18331ddce5c" translate="yes" xml:space="preserve">
          <source>The following example shows the different ways to print and format the stack:</source>
          <target state="translated">下面的例子显示了打印和格式化堆栈的不同方法。</target>
        </trans-unit>
        <trans-unit id="e28ec9102e645592cb8e03af31b2b0218080391d" translate="yes" xml:space="preserve">
          <source>The following example uses an explicitly specified HTTP proxy, overriding environment settings:</source>
          <target state="translated">下面的例子使用了明确指定的HTTP代理,覆盖了环境设置。</target>
        </trans-unit>
        <trans-unit id="51523232557ef0a616ce3c18bbdfaebe0e359676" translate="yes" xml:space="preserve">
          <source>The following example uses no proxies at all, overriding environment settings:</source>
          <target state="translated">下面的例子完全不使用代理,覆盖环境设置。</target>
        </trans-unit>
        <trans-unit id="36336aa66464423853a80695f8df9ad8c463df59" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;os#dir-fd&quot;&gt;dir_fd&lt;/a&gt; parameter of the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function to open a file relative to a given directory:</source>
          <target state="translated">以下示例使用&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;函数的&lt;a href=&quot;os#dir-fd&quot;&gt;dir_fd&lt;/a&gt;参数打开相对于给定目录的文件：</target>
        </trans-unit>
        <trans-unit id="11a904405145e91622a82db01f34bc213af70e4d" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;POST&lt;/code&gt; method instead. Note that params output from urlencode is encoded to bytes before it is sent to urlopen as data:</source>
          <target state="translated">以下示例改为使用 &lt;code&gt;POST&lt;/code&gt; 方法。请注意，在将urlencode输出的参数作为数据发送到urlopen之前，已将其编码为字节：</target>
        </trans-unit>
        <trans-unit id="fe0755c15884c78c133b93caaacdb7fc49baca8c" translate="yes" xml:space="preserve">
          <source>The following examples show how to time expressions that contain multiple lines. Here we compare the cost of using &lt;a href=&quot;functions#hasattr&quot;&gt;&lt;code&gt;hasattr()&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; to test for missing and present object attributes:</source>
          <target state="translated">以下示例显示如何对包含多行的表达式进行计时。在这里，我们比较使用成本&lt;a href=&quot;functions#hasattr&quot;&gt; &lt;code&gt;hasattr()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt;测试丢失的和现在的对象属性：</target>
        </trans-unit>
        <trans-unit id="8d1a9ed8ac58bd34304e65e9f08b8815ef520504" translate="yes" xml:space="preserve">
          <source>The following examples show how to time expressions that contain multiple lines. Here we compare the cost of using &lt;a href=&quot;functions#hasattr&quot;&gt;&lt;code&gt;hasattr()&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; to test for missing and present object attributes:</source>
          <target state="translated">以下示例显示如何对包含多行的表达式进行计时。在这里，我们比较使用成本&lt;a href=&quot;functions#hasattr&quot;&gt; &lt;code&gt;hasattr()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt;测试丢失的和现在的对象属性：</target>
        </trans-unit>
        <trans-unit id="07e37073905bea7c4eb74a69c1d1c47655907bae" translate="yes" xml:space="preserve">
          <source>The following exception classes are defined in the &lt;a href=&quot;#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">在&lt;a href=&quot;#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;模块中定义了以下异常类：</target>
        </trans-unit>
        <trans-unit id="d4a4983aecf7afdeeb3354953e0b0515cf7a965b" translate="yes" xml:space="preserve">
          <source>The following exception classes are defined in the &lt;a href=&quot;#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;#module-mailbox&quot;&gt; &lt;code&gt;mailbox&lt;/code&gt; &lt;/a&gt;模块中定义了以下异常类：</target>
        </trans-unit>
        <trans-unit id="56731f15f7a9d03e09bf280a271931a72d17e445" translate="yes" xml:space="preserve">
          <source>The following exception is also defined:</source>
          <target state="translated">还定义了以下例外情况:</target>
        </trans-unit>
        <trans-unit id="da86b38f78af4156bc5b283d1b568dd9bea03abc" translate="yes" xml:space="preserve">
          <source>The following exception is defined:</source>
          <target state="translated">定义了以下例外情况:</target>
        </trans-unit>
        <trans-unit id="8219e18afa673e0330df877fcabe377a8af796cc" translate="yes" xml:space="preserve">
          <source>The following exceptions are kept for compatibility with previous versions; starting from Python 3.3, they are aliases of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了与以前的版本兼容，保留了以下例外；从Python 3.3开始，它们是&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="d9625c47947897978d56fe5ccc3cc2b12128ad44" translate="yes" xml:space="preserve">
          <source>The following exceptions are raised as appropriate:</source>
          <target state="translated">酌情提出以下例外情况。</target>
        </trans-unit>
        <trans-unit id="2fc99860efaf397b22c0734ca264d2f5c8cebed9" translate="yes" xml:space="preserve">
          <source>The following exceptions are raised by &lt;a href=&quot;#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; as appropriate:</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.error&quot;&gt; &lt;code&gt;urllib.error&lt;/code&gt; &lt;/a&gt;适当地引发了以下异常：</target>
        </trans-unit>
        <trans-unit id="919505ce9e2b1eb1bd2317ab625de8404a8f9a85" translate="yes" xml:space="preserve">
          <source>The following exceptions are subclasses of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, they get raised depending on the system error code.</source>
          <target state="translated">以下异常是&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 的&lt;/a&gt;子类，它们会根据系统错误代码而引发。</target>
        </trans-unit>
        <trans-unit id="3234c73e5179ec0bf51b9851151a512eff6798cd" translate="yes" xml:space="preserve">
          <source>The following exceptions are the exceptions that are usually raised.</source>
          <target state="translated">以下是通常提出的例外情况。</target>
        </trans-unit>
        <trans-unit id="6cac3069b88d1e924825a076fc095f0bc160c839" translate="yes" xml:space="preserve">
          <source>The following exceptions are used as warning categories; see the &lt;a href=&quot;warnings#warning-categories&quot;&gt;Warning Categories&lt;/a&gt; documentation for more details.</source>
          <target state="translated">以下例外用作警告类别；有关更多详细信息，请参见&lt;a href=&quot;warnings#warning-categories&quot;&gt;警告类别&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="bf34ea7d31725235d03d88d5679992bde7777bfe" translate="yes" xml:space="preserve">
          <source>The following exceptions are used mostly as base classes for other exceptions.</source>
          <target state="translated">以下异常主要作为其他异常的基类使用。</target>
        </trans-unit>
        <trans-unit id="3a03745ebccf67a5017fa4eb4e8afc477e8486f4" translate="yes" xml:space="preserve">
          <source>The following exit codes are defined and can be used with &lt;a href=&quot;#os._exit&quot;&gt;&lt;code&gt;_exit()&lt;/code&gt;&lt;/a&gt;, although they are not required. These are typically used for system programs written in Python, such as a mail server&amp;rsquo;s external command delivery program.</source>
          <target state="translated">定义了以下退出代码，并且可以与&lt;a href=&quot;#os._exit&quot;&gt; &lt;code&gt;_exit()&lt;/code&gt; &lt;/a&gt;一起使用，尽管它们不是必需的。这些通常用于用Python编写的系统程序，例如邮件服务器的外部命令传递程序。</target>
        </trans-unit>
        <trans-unit id="07a35a3673af42652ef6cc9a9b0cd0d2eb1a9b0f" translate="yes" xml:space="preserve">
          <source>The following flags can also be used in the &lt;em&gt;mode&lt;/em&gt; argument of &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">下列标志也可以在&lt;a href=&quot;os#os.chmod&quot;&gt; &lt;code&gt;os.chmod()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;mode&lt;/em&gt;参数中使用：</target>
        </trans-unit>
        <trans-unit id="50fdab17f4c511a2bd981d9f16416d6cbc1642e0" translate="yes" xml:space="preserve">
          <source>The following flags can be used in the &lt;em&gt;flags&lt;/em&gt; argument of &lt;a href=&quot;os#os.chflags&quot;&gt;&lt;code&gt;os.chflags()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">可以在&lt;a href=&quot;os#os.chflags&quot;&gt; &lt;code&gt;os.chflags()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;flags&lt;/em&gt;参数中使用以下标志：</target>
        </trans-unit>
        <trans-unit id="c31e162d0e550c557cc495973287faf0332cc7a5" translate="yes" xml:space="preserve">
          <source>The following flags may be passed to &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; in order to change effects on the compilation of a program:</source>
          <target state="translated">可以将以下标志传递给&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;，以更改对程序编译的影响：</target>
        </trans-unit>
        <trans-unit id="0d2b677018a5fc91e1c52ff16415ab440b896d28" translate="yes" xml:space="preserve">
          <source>The following format &lt;code&gt;'llh0l'&lt;/code&gt; specifies two pad bytes at the end, assuming longs are aligned on 4-byte boundaries:</source>
          <target state="translated">以下格式 &lt;code&gt;'llh0l'&lt;/code&gt; 在末尾指定了两个填充字节，假设长整数在4字节边界上对齐：</target>
        </trans-unit>
        <trans-unit id="2dd6a0fd41fecfe4d17317d4204e40f9818a4207" translate="yes" xml:space="preserve">
          <source>The following function has been added as a useful debugging tool. It should &lt;em&gt;not&lt;/em&gt; be considered part of the supported public interface for the package.</source>
          <target state="translated">以下功能已添加为有用的调试工具。不应&lt;em&gt;将&lt;/em&gt;其视为该程序包受支持的公共接口的一部分。</target>
        </trans-unit>
        <trans-unit id="da305af26f9cbcbeb6c5f275e457fad8bb285a85" translate="yes" xml:space="preserve">
          <source>The following function is the primary interface of this module:</source>
          <target state="translated">以下功能是本模块的主要接口。</target>
        </trans-unit>
        <trans-unit id="ff45ffb8d9411a36a16d6d809eaa7c1a78d7dbc9" translate="yes" xml:space="preserve">
          <source>The following function sends the list of file descriptors &lt;em&gt;fds&lt;/em&gt; over an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket, on systems which support the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism. See also &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">下面的函数发送文件描述符的列表&lt;em&gt;FDS&lt;/em&gt;通过一个&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;插座，其上支持系统 &lt;code&gt;SCM_RIGHTS&lt;/code&gt; 机制。另请参见&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e3d6b50f1cb6afc139200a4d017ad6f95613306" translate="yes" xml:space="preserve">
          <source>The following function takes either a single-character string or integer value; it returns a string.</source>
          <target state="translated">下面的函数接受一个单字符字符串或整数值,并返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="13cf5d0144d472efbe8d37582b67d12dc02f8fbc" translate="yes" xml:space="preserve">
          <source>The following functions all create &lt;a href=&quot;#socket-objects&quot;&gt;socket objects&lt;/a&gt;.</source>
          <target state="translated">以下函数均创建&lt;a href=&quot;#socket-objects&quot;&gt;套接字对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a90899ab2a1b3723f7dc7f39dfe8546f510b2db4" translate="yes" xml:space="preserve">
          <source>The following functions and classes are ported from the Python 2 module &lt;code&gt;urllib&lt;/code&gt; (as opposed to &lt;code&gt;urllib2&lt;/code&gt;). They might become deprecated at some point in the future.</source>
          <target state="translated">以下函数和类是从Python 2模块 &lt;code&gt;urllib&lt;/code&gt; （与 &lt;code&gt;urllib2&lt;/code&gt; 相对）移植的。他们可能会在将来的某个时候被弃用。</target>
        </trans-unit>
        <trans-unit id="1e205f409e70ccbdada46ad7374f5371cb998862" translate="yes" xml:space="preserve">
          <source>The following functions are available.</source>
          <target state="translated">有以下功能:</target>
        </trans-unit>
        <trans-unit id="50b9a1d0acd56c19cd33c52597cd720ec528f31a" translate="yes" xml:space="preserve">
          <source>The following functions are defined:</source>
          <target state="translated">定义了以下功能:</target>
        </trans-unit>
        <trans-unit id="b90dccda72ce0f29d283b6adf62da389efc25651" translate="yes" xml:space="preserve">
          <source>The following functions are deprecated:</source>
          <target state="translated">以下功能已被废弃。</target>
        </trans-unit>
        <trans-unit id="fc5bf00bc0ec88b71236977c192f4ac766952ac9" translate="yes" xml:space="preserve">
          <source>The following functions are provided by this module. Except when explicitly noted otherwise, all return values are floats.</source>
          <target state="translated">本模块提供了以下函数。除非另有说明,否则所有的返回值都是浮点数。</target>
        </trans-unit>
        <trans-unit id="b8a73287c5b8efe7a8f104d252583b6712796202" translate="yes" xml:space="preserve">
          <source>The following functions are provided:</source>
          <target state="translated">提供了以下功能:</target>
        </trans-unit>
        <trans-unit id="27440c6f6aa8e07ded29a2c00b0e5f21f2502954" translate="yes" xml:space="preserve">
          <source>The following functions can be used to convert from the native rectangular coordinates to polar coordinates and back.</source>
          <target state="translated">下面的函数可以用来将原生矩形坐标转换为极坐标,然后再转换回来。</target>
        </trans-unit>
        <trans-unit id="7138bd79e2aa0cd1f1706edff9a21ee42719a2b2" translate="yes" xml:space="preserve">
          <source>The following functions can be used to get and set the policy for the current process:</source>
          <target state="translated">以下函数可用于获取和设置当前进程的策略。</target>
        </trans-unit>
        <trans-unit id="1722423e811c5f2d1e9190b66ddd0937f6d483ea" translate="yes" xml:space="preserve">
          <source>The following functions configure the logging module. They are located in the &lt;a href=&quot;#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt; module. Their use is optional &amp;mdash; you can configure the logging module using these functions or by making calls to the main API (defined in &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; itself) and defining handlers which are declared either in &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下功能配置日志记录模块。它们位于&lt;a href=&quot;#module-logging.config&quot;&gt; &lt;code&gt;logging.config&lt;/code&gt; &lt;/a&gt;模块中。它们的使用是可选的-您可以使用这些功能或通过调用主API（在&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;本身中定义）并定义在&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;中声明的处理程序来配置日志记录模块。</target>
        </trans-unit>
        <trans-unit id="298eed0d1e6e397ae4710411294cadbb3b684a71" translate="yes" xml:space="preserve">
          <source>The following functions generate specific real-valued distributions. Function parameters are named after the corresponding variables in the distribution&amp;rsquo;s equation, as used in common mathematical practice; most of these equations can be found in any statistics text.</source>
          <target state="translated">以下函数生成特定的实值分布。函数参数以分布方程式中的相应变量命名，如通常的数学实践中所用；这些方程式中的大多数都可以在任何统计资料中找到。</target>
        </trans-unit>
        <trans-unit id="5d51dc40e66b7a6cd9fea075650c420c4c2f1ce7" translate="yes" xml:space="preserve">
          <source>The following functions operate on a global history list:</source>
          <target state="translated">以下函数对全局历史列表进行操作。</target>
        </trans-unit>
        <trans-unit id="7759694e086b90baaa66ee395073e6f07cb02b9f" translate="yes" xml:space="preserve">
          <source>The following functions operate on a history file:</source>
          <target state="translated">以下函数对历史文件进行操作。</target>
        </trans-unit>
        <trans-unit id="64789b1037502a079a852b4b2b8db153ea6b7a62" translate="yes" xml:space="preserve">
          <source>The following functions operate on the line buffer:</source>
          <target state="translated">以下是对行缓冲区的操作功能。</target>
        </trans-unit>
        <trans-unit id="43da4d98b6c5375698601c186a476296083ea958" translate="yes" xml:space="preserve">
          <source>The following functions relate to implementing a custom word completion function. This is typically operated by the Tab key, and can suggest and automatically complete a word being typed. By default, Readline is set up to be used by &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; to complete Python identifiers for the interactive interpreter. If the &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module is to be used with a custom completer, a different set of word delimiters should be set.</source>
          <target state="translated">以下功能与实现自定义单词完成功能有关。这通常由Tab键操作，可以建议并自动完成正在键入的单词。默认情况下，Readline设置为由&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;使用，以完成交互式解释器的Python标识符。如果将&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;模块与定制完成程序一起使用，则应设置不同的单词定界符集。</target>
        </trans-unit>
        <trans-unit id="92323350568081e68e83ac2a59f8aae14a2f26c5" translate="yes" xml:space="preserve">
          <source>The following functions relate to the init file and user configuration:</source>
          <target state="translated">以下函数与init文件和用户配置有关。</target>
        </trans-unit>
        <trans-unit id="4fcb3b8d729958b242cb8efd022b8f92cc756aa2" translate="yes" xml:space="preserve">
          <source>The following functions take a process status code as returned by &lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; as a parameter. They may be used to determine the disposition of a process.</source>
          <target state="translated">以下函数采用&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;返回的进程状态代码作为参数。它们可用于确定过程的布置。</target>
        </trans-unit>
        <trans-unit id="beb00315a2f748529b36d585bd95fdcf3d54dd82" translate="yes" xml:space="preserve">
          <source>The following functions use the global state created by &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;fileinput.input()&lt;/code&gt;&lt;/a&gt;; if there is no active state, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">以下函数使用&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;fileinput.input()&lt;/code&gt; &lt;/a&gt;创建的全局状态；如果没有活动状态，则会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34f703b1e0e9c15c0897a1841ee395a9ceb30302" translate="yes" xml:space="preserve">
          <source>The following image types are recognized, as listed below with the return value from &lt;a href=&quot;#imghdr.what&quot;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">可以识别以下图像类型，下面列出了&lt;a href=&quot;#imghdr.what&quot;&gt; &lt;code&gt;what()&lt;/code&gt; &lt;/a&gt;的返回值：</target>
        </trans-unit>
        <trans-unit id="280be161783a14c0920bb19c3ae869ff10b8f196" translate="yes" xml:space="preserve">
          <source>The following instances of &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; provide defaults suitable for specific application domains. Note that in the future the behavior of these instances (in particular the &lt;code&gt;HTTP&lt;/code&gt; instance) may be adjusted to conform even more closely to the RFCs relevant to their domains.</source>
          <target state="translated">以下&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;实例提供适用于特定应用程序域的默认值。请注意，将来可能会调整这些实例（特别是 &lt;code&gt;HTTP&lt;/code&gt; 实例）的行为，以使其更紧密地符合与其域相关的RFC。</target>
        </trans-unit>
        <trans-unit id="36786723f378fafa3d1898954065c6c261f994dc" translate="yes" xml:space="preserve">
          <source>The following interfaces have no implementation in &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下接口在&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; 中&lt;/a&gt;没有实现：</target>
        </trans-unit>
        <trans-unit id="a2d16d61637d3640bacadcaa73df4c60909570ae" translate="yes" xml:space="preserve">
          <source>The following is a list of all the format codes that the 1989 C standard requires, and these work on all platforms with a standard C implementation.</source>
          <target state="translated">下面列出了1989年C标准要求的所有格式代码,这些代码可以在所有有标准C实现的平台上工作。</target>
        </trans-unit>
        <trans-unit id="9bbcfdfa416ee0a8a6d18043dc1c0fc4e3673e2d" translate="yes" xml:space="preserve">
          <source>The following is an example of using magic methods with the ordinary Mock class:</source>
          <target state="translated">下面以普通Mock类使用魔术方法为例。</target>
        </trans-unit>
        <trans-unit id="f2c5d34f2d1e1f79cbe6149cbd185555a4725b75" translate="yes" xml:space="preserve">
          <source>The following item options may be specified for items in the insert and item widget commands.</source>
          <target state="translated">在插入和项目小组件命令中,可以为项目指定以下项目选项。</target>
        </trans-unit>
        <trans-unit id="e29a9adf004c9f7ac2d7a89f0143bc9acb153b58" translate="yes" xml:space="preserve">
          <source>The following keyword arguments are supported.</source>
          <target state="translated">支持以下关键词参数。</target>
        </trans-unit>
        <trans-unit id="5be2e474d40be9b697f7ce09f1abb8f435b1c3b4" translate="yes" xml:space="preserve">
          <source>The following low-level functions can be used to get, set, or create an event loop:</source>
          <target state="translated">下面的低级函数可以用来获取、设置或创建一个事件循环。</target>
        </trans-unit>
        <trans-unit id="b61e7817f137704c9eeac3b5ade762440604c20d" translate="yes" xml:space="preserve">
          <source>The following method is also provided:</source>
          <target state="translated">还提供了以下方法。</target>
        </trans-unit>
        <trans-unit id="3c4bd14872b021d62effe80ccc7b6722ce458bfd" translate="yes" xml:space="preserve">
          <source>The following methods MUST be overridden in a subclass:</source>
          <target state="translated">以下方法必须在子类中被重写。</target>
        </trans-unit>
        <trans-unit id="0c9a3fab840f80e792969e1c6d30487fdf15285a" translate="yes" xml:space="preserve">
          <source>The following methods are also available:</source>
          <target state="translated">还可采用以下方法:</target>
        </trans-unit>
        <trans-unit id="5d1a84015cfed0b396f9aadd71cc3704958e67dc" translate="yes" xml:space="preserve">
          <source>The following methods are available:</source>
          <target state="translated">可采用以下方法:</target>
        </trans-unit>
        <trans-unit id="6da18558c268f3b787fcf73b6e36956c31ab86fc" translate="yes" xml:space="preserve">
          <source>The following methods are called when data or markup elements are encountered and they are meant to be overridden in a subclass. The base class implementations do nothing (except for &lt;a href=&quot;#html.parser.HTMLParser.handle_startendtag&quot;&gt;&lt;code&gt;handle_startendtag()&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">当遇到数据或标记元素并且它们将在子类中被重写时，将调用以下方法。基类实现不执行任何操作（&lt;a href=&quot;#html.parser.HTMLParser.handle_startendtag&quot;&gt; &lt;code&gt;handle_startendtag()&lt;/code&gt; &lt;/a&gt;除外）：</target>
        </trans-unit>
        <trans-unit id="e4de795b18dd4b4fd7bcd1a2167543959de3c0cf" translate="yes" xml:space="preserve">
          <source>The following methods are overridden from the base class implementation:</source>
          <target state="translated">以下方法是从基类实现中重载的。</target>
        </trans-unit>
        <trans-unit id="126480cdf2831b1516aa5168ce4b513b07ee9449" translate="yes" xml:space="preserve">
          <source>The following methods are public:</source>
          <target state="translated">以下方法是公开的:</target>
        </trans-unit>
        <trans-unit id="487dc7006143997609be279701723a8c2465f409" translate="yes" xml:space="preserve">
          <source>The following methods describe &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s public interface, and so all may be overridden in subclasses. It also defines several public attributes that can be used by clients to inspect the parsed request.</source>
          <target state="translated">以下方法描述了&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;的公共接口，因此所有方法都可能在子类中被覆盖。它还定义了几个公共属性，客户端可以使用这些属性来检查已解析的请求。</target>
        </trans-unit>
        <trans-unit id="63d90593d14145bbb48645d676dbce7a50e1b653" translate="yes" xml:space="preserve">
          <source>The following methods each map to exactly one &lt;code&gt;ioctl()&lt;/code&gt; system call. The correspondence is obvious: for example, &lt;code&gt;setfmt()&lt;/code&gt; corresponds to the &lt;code&gt;SNDCTL_DSP_SETFMT&lt;/code&gt; ioctl, and &lt;code&gt;sync()&lt;/code&gt; to &lt;code&gt;SNDCTL_DSP_SYNC&lt;/code&gt; (this can be useful when consulting the OSS documentation). If the underlying &lt;code&gt;ioctl()&lt;/code&gt; fails, they all raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下方法每个都映射到一个 &lt;code&gt;ioctl()&lt;/code&gt; 系统调用。对应关系很明显：例如， &lt;code&gt;setfmt()&lt;/code&gt; 对应于 &lt;code&gt;SNDCTL_DSP_SETFMT&lt;/code&gt; ioctl， &lt;code&gt;sync()&lt;/code&gt; 对应于 &lt;code&gt;SNDCTL_DSP_SYNC&lt;/code&gt; （这在查阅OSS文档时可能很有用）。如果基础 &lt;code&gt;ioctl()&lt;/code&gt; 失败，它们都会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19638ef10a7443439dd157547b9556e83f68ed56" translate="yes" xml:space="preserve">
          <source>The following methods exist but are &lt;em&gt;not&lt;/em&gt; supported as they are either in use by mock, can&amp;rsquo;t be set dynamically, or can cause problems:</source>
          <target state="translated">存在以下方法，但&lt;em&gt;不&lt;/em&gt;支持以下方法，因为它们要么被模拟使用，要么无法动态设置，否则可能导致问题：</target>
        </trans-unit>
        <trans-unit id="5ba539dea251194908a930ae6d4de0259644b7c9" translate="yes" xml:space="preserve">
          <source>The following methods implement a mapping-like interface for accessing the message&amp;rsquo;s &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; headers. Note that there are some semantic differences between these methods and a normal mapping (i.e. dictionary) interface. For example, in a dictionary there are no duplicate keys, but here there may be duplicate message headers. Also, in dictionaries there is no guaranteed order to the keys returned by &lt;a href=&quot;#email.message.Message.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt;, but in a &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object, headers are always returned in the order they appeared in the original message, or were added to the message later. Any header deleted and then re-added are always appended to the end of the header list.</source>
          <target state="translated">下列方法实现了类似于映射的接口，用于访问消息的&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;标头。请注意，这些方法与常规映射（即字典）接口之间在语义上有所不同。例如，在词典中没有重复的键，但是这里可能有重复的消息头。此外，在字典中，&lt;a href=&quot;#email.message.Message.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;返回的键没有确定的顺序，但是在&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象中，标头总是按照它们在原始消息中出现的顺序返回，或者在以后添加到消息中。删除然后重新添加的任何标头始终附加在标头列表的末尾。</target>
        </trans-unit>
        <trans-unit id="2bcb89a371cdba7f9ba387d3a82557337285cf40" translate="yes" xml:space="preserve">
          <source>The following methods implement the mapping-like interface for accessing the message&amp;rsquo;s headers. Note that there are some semantic differences between these methods and a normal mapping (i.e. dictionary) interface. For example, in a dictionary there are no duplicate keys, but here there may be duplicate message headers. Also, in dictionaries there is no guaranteed order to the keys returned by &lt;a href=&quot;#email.message.EmailMessage.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt;, but in an &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object, headers are always returned in the order they appeared in the original message, or in which they were added to the message later. Any header deleted and then re-added is always appended to the end of the header list.</source>
          <target state="translated">以下方法实现了用于访问消息头的类映射接口。请注意，这些方法与常规映射（即字典）接口之间在语义上有所不同。例如，在词典中没有重复的键，但是这里可能有重复的消息头。同样，在字典中，&lt;a href=&quot;#email.message.EmailMessage.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;返回的键没有确定的顺序，但是在&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象中，标头总是按照它们在原始消息中出现的顺序返回，或者以后再添加到消息中。删除然后重新添加的所有标头始终附加在标头列表的末尾。</target>
        </trans-unit>
        <trans-unit id="a03fef5945c0da211457269f86e4849454bed953" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; normally don&amp;rsquo;t need to be overridden.</source>
          <target state="translated">以下&lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; 的&lt;/a&gt;方法通常不需要重写。</target>
        </trans-unit>
        <trans-unit id="37c544609e6c6a5d1717ba9961dd7becb0ee90d3" translate="yes" xml:space="preserve">
          <source>The following methods of the &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; class are used to maintain the internal data structures, and may be extended in subclasses to support additional reporting requirements. This is particularly useful in building tools which support interactive reporting while tests are being run.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;类的以下方法用于维护内部数据结构，并且可以在子类中扩展以支持其他报告要求。这对于在运行测试时支持交互式报告的构建工具特别有用。</target>
        </trans-unit>
        <trans-unit id="6fc4c0cac153b54cd58567b6bf639a9e7367be81" translate="yes" xml:space="preserve">
          <source>The following methods on bytes and bytearray objects assume the use of ASCII compatible binary formats and should not be applied to arbitrary binary data. Note that all of the bytearray methods in this section do &lt;em&gt;not&lt;/em&gt; operate in place, and instead produce new objects.</source>
          <target state="translated">以下关于字节和字节数组对象的方法假定使用与ASCII兼容的二进制格式，并且不应应用于任意二进制数据。请注意，本节中的所有字节数组方法都&lt;em&gt;不会&lt;/em&gt;就地操作，而是产生新的对象。</target>
        </trans-unit>
        <trans-unit id="84d88c6a5fdc3d75ff22b7df602b0699287c51d7" translate="yes" xml:space="preserve">
          <source>The following methods on bytes and bytearray objects can be used with arbitrary binary data.</source>
          <target state="translated">以下关于字节和字节数组对象的方法可以用于任意二进制数据。</target>
        </trans-unit>
        <trans-unit id="fe5d317ef27fede7290daa1875858d3a3b83fe46" translate="yes" xml:space="preserve">
          <source>The following methods on bytes and bytearray objects have default behaviours that assume the use of ASCII compatible binary formats, but can still be used with arbitrary binary data by passing appropriate arguments. Note that all of the bytearray methods in this section do &lt;em&gt;not&lt;/em&gt; operate in place, and instead produce new objects.</source>
          <target state="translated">字节和字节数组对象上的以下方法具有默认行为，这些行为假定使用兼容ASCII的二进制格式，但仍可以通过传递适当的参数来与任意二进制数据一起使用。请注意，本节中的所有字节数组方法都&lt;em&gt;不会&lt;/em&gt;就地操作，而是产生新的对象。</target>
        </trans-unit>
        <trans-unit id="0fcad2293c26eb0ab407e00568ab4856953388e4" translate="yes" xml:space="preserve">
          <source>The following methods provide the implementations for the corresponding functions of the same names. Using these methods on an instance is slightly more efficient since new &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; objects don&amp;rsquo;t need to be created.</source>
          <target state="translated">以下方法提供了具有相同名称的相应功能的实现。在实例上使用这些方法效率更高，因为不需要创建新的&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="0ef20ec7cc268589dd8953c20b7832eaa6411d47" translate="yes" xml:space="preserve">
          <source>The following methods relate to interrogating and manipulating the content (payload) of the message.</source>
          <target state="translated">以下方法与询问和操纵消息的内容(有效载荷)有关。</target>
        </trans-unit>
        <trans-unit id="a86cc03f304de911e71fbd54404fc5e768bc509f" translate="yes" xml:space="preserve">
          <source>The following methods support packing arrays and lists:</source>
          <target state="translated">以下方法支持打包数组和列表。</target>
        </trans-unit>
        <trans-unit id="ca834dd3a935b41fbbcc1f6b9e703b525f0b589b" translate="yes" xml:space="preserve">
          <source>The following methods support packing strings, bytes, and opaque data:</source>
          <target state="translated">以下方法支持打包字符串、字节和不透明数据。</target>
        </trans-unit>
        <trans-unit id="8794526f4bbb1ad29beabe1b9ce9f577353fd460" translate="yes" xml:space="preserve">
          <source>The following methods support unpacking arrays and lists:</source>
          <target state="translated">以下方法支持解压数组和列表。</target>
        </trans-unit>
        <trans-unit id="bd2d2e65eb8063a136f55b38c01873cd38f7c28d" translate="yes" xml:space="preserve">
          <source>The following methods work on the element&amp;rsquo;s children (subelements).</source>
          <target state="translated">以下方法适用于元素的子元素（子元素）。</target>
        </trans-unit>
        <trans-unit id="091f163787d84de09ceceb500860d69ee8291d18" translate="yes" xml:space="preserve">
          <source>The following module functions all construct and return iterators. Some provide streams of infinite length, so they should only be accessed by functions or loops that truncate the stream.</source>
          <target state="translated">下面的模块函数都是构造和返回迭代器的。有些函数提供了无限长的流,所以它们只能被截断流的函数或循环访问。</target>
        </trans-unit>
        <trans-unit id="e4d77afab2cb5c0e79177397fed4c21c74e5e9f3" translate="yes" xml:space="preserve">
          <source>The following options are accepted:</source>
          <target state="translated">接受以下选项:</target>
        </trans-unit>
        <trans-unit id="dbf158b7a38f538cbeb112c3f0a3c620bcbc7a35" translate="yes" xml:space="preserve">
          <source>The following options are supported by labels, buttons and other button-like widgets.</source>
          <target state="translated">标签、按钮和其他类似按钮的部件支持以下选项。</target>
        </trans-unit>
        <trans-unit id="ecbfd24e6bd9b335bee8804e3b42d5788e91743e" translate="yes" xml:space="preserve">
          <source>The following options are supported by widgets that are controlled by a scrollbar.</source>
          <target state="translated">由滚动条控制的小组件支持以下选项。</target>
        </trans-unit>
        <trans-unit id="ab8c6b0b5532833125ec2c30784f44b5a8d87a98" translate="yes" xml:space="preserve">
          <source>The following options are understood:</source>
          <target state="translated">以下选项是明白的。</target>
        </trans-unit>
        <trans-unit id="8cbfbf5d0e333982b3f3653064e4b24868989a0c" translate="yes" xml:space="preserve">
          <source>The following options may be specified on tags:</source>
          <target state="translated">可为标签指定以下选项:</target>
        </trans-unit>
        <trans-unit id="14f97aca91c658ff15a19e1f18483c692dbabe5a" translate="yes" xml:space="preserve">
          <source>The following parameters govern the use of the returned proxy instance. If &lt;em&gt;allow_none&lt;/em&gt; is true, the Python constant &lt;code&gt;None&lt;/code&gt; will be translated into XML; the default behaviour is for &lt;code&gt;None&lt;/code&gt; to raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. This is a commonly-used extension to the XML-RPC specification, but isn&amp;rsquo;t supported by all clients and servers; see &lt;a href=&quot;https://web.archive.org/web/20130120074804/http://ontosys.com/xml-rpc/extensions.php&quot;&gt;http://ontosys.com/xml-rpc/extensions.php&lt;/a&gt; for a description. The &lt;em&gt;use_builtin_types&lt;/em&gt; flag can be used to cause date/time values to be presented as &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects and binary data to be presented as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects; this flag is false by default. &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects may be passed to calls. The &lt;em&gt;headers&lt;/em&gt; parameter is an optional sequence of HTTP headers to send with each request, expressed as a sequence of 2-tuples representing the header name and value. (e.g. &lt;code&gt;[(&amp;lsquo;Header-Name&amp;rsquo;, &amp;lsquo;value&amp;rsquo;)]&lt;/code&gt;). The obsolete &lt;em&gt;use_datetime&lt;/em&gt; flag is similar to &lt;em&gt;use_builtin_types&lt;/em&gt; but it applies only to date/time values.</source>
          <target state="translated">以下参数控制返回的代理实例的使用。如果&lt;em&gt;allow_none&lt;/em&gt;为true，则Python常量 &lt;code&gt;None&lt;/code&gt; 将转换为XML；默认行为是 &lt;code&gt;None&lt;/code&gt; 引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。这是XML-RPC规范的常用扩展，但并非所有客户端和服务器都支持。有关说明，请参见&lt;a href=&quot;https://web.archive.org/web/20130120074804/http://ontosys.com/xml-rpc/extensions.php&quot;&gt;http://ontosys.com/xml-rpc/extensions.php&lt;/a&gt;。所述&lt;em&gt;use_builtin_types&lt;/em&gt;标志可用于将被呈现为原因日期/时间值&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;对象和二进制数据被呈现为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象;默认情况下，此标志为false。&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;并且&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;对象可以传递给调用。的&lt;em&gt;报头&lt;/em&gt;参数是HTTP头的可选序列与每个请求，表示为代表标题名称和值2元组的序列发送。 （例如 &lt;code&gt;[(&amp;lsquo;Header-Name&amp;rsquo;, &amp;lsquo;value&amp;rsquo;)]&lt;/code&gt; ）。过时的&lt;em&gt;use_datetime&lt;/em&gt;标志类似于&lt;em&gt;use_builtin_types，&lt;/em&gt;但仅适用于日期/时间值。</target>
        </trans-unit>
        <trans-unit id="a302c707afd73276e8e9058d62aa49220196f630" translate="yes" xml:space="preserve">
          <source>The following partial example shows how HTTP requests can be read with &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt;. A web server might create an &lt;code&gt;http_request_handler&lt;/code&gt; object for each incoming client connection. Notice that initially the channel terminator is set to match the blank line at the end of the HTTP headers, and a flag indicates that the headers are being read.</source>
          <target state="translated">以下部分示例显示了如何使用&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;读取HTTP请求。Web服务器可能会为每个传入的客户端连接创建一个 &lt;code&gt;http_request_handler&lt;/code&gt; 对象。请注意，最初将通道终止符设置为与HTTP标头末尾的空白行匹配，并且标志指示正在读取标头。</target>
        </trans-unit>
        <trans-unit id="529bcd0a5673a8760212749e93e46bb54c806dd9" translate="yes" xml:space="preserve">
          <source>The following people contributed code, feedback, design suggestions, previous implementations, and valuable experience to the creation of this module:</source>
          <target state="translated">以下人员为本模块的创建贡献了代码、反馈、设计建议、以前的实现和宝贵的经验。</target>
        </trans-unit>
        <trans-unit id="f1a95d5d7d66f8c8b2965b631eb7c94d9497521e" translate="yes" xml:space="preserve">
          <source>The following people have helped with development or contributed their changes to the project and the public domain according to the Creative Commons Public Domain Dedication 1.0 Universal:</source>
          <target state="translated">以下人员根据 &quot;知识共享公共领域奉献1.0通用版 &quot;帮助开发或贡献了他们对项目和公共领域的修改。</target>
        </trans-unit>
        <trans-unit id="7deb044d7f1c61862fe43de9aaee580268cfe27f" translate="yes" xml:space="preserve">
          <source>The following program acts like the Unix command &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/script(1)&quot;&gt;script(1)&lt;/a&gt;&lt;/em&gt;, using a pseudo-terminal to record all input and output of a terminal session in a &amp;ldquo;typescript&amp;rdquo;.</source>
          <target state="translated">下面的程序就像Unix命令&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/script(1)&quot;&gt;script（1）一样&lt;/a&gt;&lt;/em&gt;，使用伪终端在&amp;ldquo;打字稿&amp;rdquo;中记录终端会话的所有输入和输出。</target>
        </trans-unit>
        <trans-unit id="367b0fc456694ac76cd955454753e1633b58d28e" translate="yes" xml:space="preserve">
          <source>The following program defines three handlers that just print out their arguments.</source>
          <target state="translated">下面的程序定义了三个处理程序,它们只是打印出它们的参数。</target>
        </trans-unit>
        <trans-unit id="e15b1b65cbe609f8b69ba051c1225035c56d84c8" translate="yes" xml:space="preserve">
          <source>The following public attributes are available, their name starts with an underscore to not clash with exported function names:</source>
          <target state="translated">以下是可用的公共属性,它们的名称以下划线开头,以避免与导出的函数名称冲突。</target>
        </trans-unit>
        <trans-unit id="e8fe29cd06e30a4c87636f75391f16d425a8f82b" translate="yes" xml:space="preserve">
          <source>The following public domain dedication applies for both C hash function implementation, extension code, and this documentation:</source>
          <target state="translated">以下的公共领域奉献适用于C哈希函数实现、扩展代码和本文档。</target>
        </trans-unit>
        <trans-unit id="f528809aa0414a46b2f29adabdeff00c78f2253d" translate="yes" xml:space="preserve">
          <source>The following recipe takes a different approach. All floats in the interval are possible selections. The mantissa comes from a uniform distribution of integers in the range &lt;em&gt;2⁵&amp;sup2; &amp;le; mantissa &amp;lt; 2⁵&amp;sup3;&lt;/em&gt;. The exponent comes from a geometric distribution where exponents smaller than &lt;em&gt;-53&lt;/em&gt; occur half as often as the next larger exponent.</source>
          <target state="translated">以下食谱采用了不同的方法。间隔中的所有浮点数都是可能的选择。尾数来自&lt;em&gt;2⁵&amp;sup2;&amp;le;尾数&amp;lt;2⁵&amp;sup3;&lt;/em&gt;范围内的整数的均匀分布。指数来自几何分布，其中小于&lt;em&gt;-53的&lt;/em&gt;指数出现的频率是下一个较大指数的一半。</target>
        </trans-unit>
        <trans-unit id="1f7cdb3d57aa9709e0fda8b7466db53cfd68f56c" translate="yes" xml:space="preserve">
          <source>The following scheduling policies are exposed if they are supported by the operating system.</source>
          <target state="translated">如果操作系统支持以下调度策略,则会暴露出这些策略。</target>
        </trans-unit>
        <trans-unit id="171fddce63d63871c20206104dfe6ad4042e61db" translate="yes" xml:space="preserve">
          <source>The following script shows how to extend &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; by implementing a subclass which installs setuptools and pip into a created virtual environment:</source>
          <target state="translated">以下脚本显示了如何通过实现一个子类来扩展&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;，该子类将setuptools和pip安装到创建的虚拟环境中：</target>
        </trans-unit>
        <trans-unit id="dea9f9f90b5e4b9e2a870864467c7dd5b595ffcf" translate="yes" xml:space="preserve">
          <source>The following sections describe how each of these are used.</source>
          <target state="translated">下面的章节将介绍如何使用其中的每一项。</target>
        </trans-unit>
        <trans-unit id="3a9decf4afaf4e942958bd6fa23d10328f1d3f93" translate="yes" xml:space="preserve">
          <source>The following sections describe the functionality of the &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package. We start with the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt; object model, which is the primary interface an application will use, and follow that with the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt; components. Then we cover the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; controls, which completes the treatment of the main components of the library.</source>
          <target state="translated">以下各节描述了&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;软件包的功能。我们从&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt;对象模型开始，它是应用程序将使用的主要接口，然后是&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt;组件。然后，我们介绍了&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;控制，从而完成了对库主要组件的处理。</target>
        </trans-unit>
        <trans-unit id="8d78eda4905b7e8913f55c7ec5dea7f417f7b28c" translate="yes" xml:space="preserve">
          <source>The following sections describe the standard types that are built into the interpreter.</source>
          <target state="translated">以下章节描述了解释器中内置的标准类型。</target>
        </trans-unit>
        <trans-unit id="45e7aaaad820443f966c2120652d6a91677438aa" translate="yes" xml:space="preserve">
          <source>The following sections walk you through this example.</source>
          <target state="translated">下面的章节将引导你完成这个例子。</target>
        </trans-unit>
        <trans-unit id="e3dbd4c3581dc46316fa29b8db92aef3fef69c69" translate="yes" xml:space="preserve">
          <source>The following server code creates a listener which uses &lt;code&gt;'secret password'&lt;/code&gt; as an authentication key. It then waits for a connection and sends some data to the client:</source>
          <target state="translated">以下服务器代码创建一个侦听器，该侦听器使用 &lt;code&gt;'secret password'&lt;/code&gt; 作为身份验证密钥。然后，它等待连接并将一些数据发送到客户端：</target>
        </trans-unit>
        <trans-unit id="fd8bdf51f9cef176b447b925157d2f1ec027d433" translate="yes" xml:space="preserve">
          <source>The following simple example demonstrates how a module can initialize a counter from a file when it is imported and save the counter&amp;rsquo;s updated value automatically when the program terminates without relying on the application making an explicit call into this module at termination.</source>
          <target state="translated">下面的简单示例演示了模块如何在导入文件时初始化文件中的计数器，以及如何在程序终止时自动保存计数器的更新值，而无需依赖应用程序在终止时显式调用此模块。</target>
        </trans-unit>
        <trans-unit id="5bc1d6fdaa59debe0860e4cb7943f36fa41e6822" translate="yes" xml:space="preserve">
          <source>The following snippet gets a copy of the current context and prints all variables and their values that are set in it:</source>
          <target state="translated">下面的代码段获得了当前上下文的副本,并打印了所有变量和它们在其中设置的值。</target>
        </trans-unit>
        <trans-unit id="8de19fc9152a51c81af5ce82d482d53ca254ddd9" translate="yes" xml:space="preserve">
          <source>The following standard error handlers are also made available as module level functions:</source>
          <target state="translated">以下标准错误处理程序也作为模块级函数提供。</target>
        </trans-unit>
        <trans-unit id="f9c0745c9c12b9b826231c8296a58577beafeaa2" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the known attacks and whether the various modules are vulnerable to them.</source>
          <target state="translated">下表概述了已知的攻击,以及各模块是否容易受到攻击。</target>
        </trans-unit>
        <trans-unit id="1c15607942283b98a1b40e52e5fb242e94cbae81" translate="yes" xml:space="preserve">
          <source>The following table lists characters from the alternate character set. These are inherited from the VT100 terminal, and will generally be available on software emulations such as X terminals. When there is no graphic available, curses falls back on a crude printable ASCII approximation.</source>
          <target state="translated">下表列出了备用字符集的字符。这些字符是从 VT100 终端上继承下来的,一般来说,在诸如 X 终端等软件仿真上都可以使用。当没有可用的图形时,curses会回到一个粗糙的可打印的ASCII近似值。</target>
        </trans-unit>
        <trans-unit id="8df88cf415afbc5c718c26e20ba97bfc2c8077e9" translate="yes" xml:space="preserve">
          <source>The following table lists operations available for &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; that do not apply to immutable instances of &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">下表列出了可用于&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; 的&lt;/a&gt;操作，这些操作不适用于&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;不可变实例：</target>
        </trans-unit>
        <trans-unit id="8f000a0a0f538cce6fd72f8e780dd513f81ddd97" translate="yes" xml:space="preserve">
          <source>The following table lists the predefined colors:</source>
          <target state="translated">下表列出了预定义的颜色。</target>
        </trans-unit>
        <trans-unit id="199a7716325262afeaf6de476b4454d2fd7515a5" translate="yes" xml:space="preserve">
          <source>The following table shows limits for general parameters (in bytes):</source>
          <target state="translated">下表显示了一般参数的限制(单位:字节)。</target>
        </trans-unit>
        <trans-unit id="d73048febc5f10c385f6d2cd27476dbe1173ea55" translate="yes" xml:space="preserve">
          <source>The following table summarizes the ABCs provided by the &lt;a href=&quot;#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">下表总结了&lt;a href=&quot;#module-io&quot;&gt; &lt;code&gt;io&lt;/code&gt; &lt;/a&gt;模块提供的ABC ：</target>
        </trans-unit>
        <trans-unit id="8a6d68b28d2c6944aaa923dd9703c275b97b4514" translate="yes" xml:space="preserve">
          <source>The following table summarizes the hierarchy of signals:</source>
          <target state="translated">下表总结了信号的层次结构。</target>
        </trans-unit>
        <trans-unit id="2271cc608551f46a827e799032ab15e1c7a41565" translate="yes" xml:space="preserve">
          <source>The following token type values aren&amp;rsquo;t used by the C tokenizer but are needed for the &lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">C令牌生成器不使用以下令牌类型值，而令牌&lt;a href=&quot;tokenize#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;模块需要以下令牌类型值。</target>
        </trans-unit>
        <trans-unit id="bef6f18ce38f019728dd0666b0d66e0a8d5ae438" translate="yes" xml:space="preserve">
          <source>The following top-level asyncio functions can be used to create and work with streams:</source>
          <target state="translated">以下顶层asyncio函数可以用来创建和处理流。</target>
        </trans-unit>
        <trans-unit id="18fad095bbe73ab43b2f492f3f94686d58bb9692" translate="yes" xml:space="preserve">
          <source>The following two functions can be used to customize the child process watcher implementation used by the asyncio event loop:</source>
          <target state="translated">以下两个函数可以用来定制asyncio事件循环使用的子进程监视器实现。</target>
        </trans-unit>
        <trans-unit id="02f3da66d6e4637688a4f52ed9ccb9cda480e190" translate="yes" xml:space="preserve">
          <source>The following two functions take either a single-character string or integer byte value; they return a value of the same type.</source>
          <target state="translated">以下两个函数取一个单字符字符串或整数字节值,它们返回的值类型相同。</target>
        </trans-unit>
        <trans-unit id="d0183f59493ff21316f06203e6399cd7d1e171fb" translate="yes" xml:space="preserve">
          <source>The following two methods are defined for compatibility with the &lt;a href=&quot;aifc#module-aifc&quot;&gt;&lt;code&gt;aifc&lt;/code&gt;&lt;/a&gt; module, and don&amp;rsquo;t do anything interesting.</source>
          <target state="translated">为了与&lt;a href=&quot;aifc#module-aifc&quot;&gt; &lt;code&gt;aifc&lt;/code&gt; &lt;/a&gt;模块兼容，定义了以下两种方法，并且没有做任何有趣的事情。</target>
        </trans-unit>
        <trans-unit id="f41619c7aae20d9792891f2e74fb0953c9eada93" translate="yes" xml:space="preserve">
          <source>The following two methods can be called by clients to use a debugger to debug a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, given as a string.</source>
          <target state="translated">客户端可以调用以下两种方法来使用调试器来调试以字符串形式给出的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;语句&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d84c87bb5064878fe30812b9a8d0c9c00191a76" translate="yes" xml:space="preserve">
          <source>The following two methods can be called by clients to use a debugger to debug a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, given as a string.</source>
          <target state="translated">客户端可以调用以下两种方法来使用调试器来调试以字符串形式给出的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;语句&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08ccbc3d71480f2615b68d36a4a3c3ebf7a593f3" translate="yes" xml:space="preserve">
          <source>The following two methods define a term &amp;ldquo;position&amp;rdquo; which is compatible between them, and is otherwise implementation dependent.</source>
          <target state="translated">以下两种方法定义了术语&amp;ldquo;位置&amp;rdquo;，它们在它们之间是兼容的，否则与实现有关。</target>
        </trans-unit>
        <trans-unit id="0660568ba9db5386c7ad481fdf3b299b62b3e48f" translate="yes" xml:space="preserve">
          <source>The following types are defined.</source>
          <target state="translated">定义了以下类型:</target>
        </trans-unit>
        <trans-unit id="d6f43e13499b38a7ae0ecb769936d345110a69b8" translate="yes" xml:space="preserve">
          <source>The following types can be pickled:</source>
          <target state="translated">以下几种类型可以腌制。</target>
        </trans-unit>
        <trans-unit id="4636476418bff0e90d252ad8b4efbb9ef1f42f9e" translate="yes" xml:space="preserve">
          <source>The following useful handlers are provided in the package. Note that three of the handlers (&lt;a href=&quot;#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.FileHandler&quot;&gt;&lt;code&gt;FileHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.NullHandler&quot;&gt;&lt;code&gt;NullHandler&lt;/code&gt;&lt;/a&gt;) are actually defined in the &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module itself, but have been documented here along with the other handlers.</source>
          <target state="translated">软件包中提供了以下有用的处理程序。请注意，其中三个处理程序（&lt;a href=&quot;#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.FileHandler&quot;&gt; &lt;code&gt;FileHandler&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#logging.NullHandler&quot;&gt; &lt;code&gt;NullHandler&lt;/code&gt; &lt;/a&gt;）实际上是在&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;模块本身中定义的，但已在本文中与其他处理程序一起进行了说明。</target>
        </trans-unit>
        <trans-unit id="f2674cf7f842b409bd68c94890646ec6f4399d09" translate="yes" xml:space="preserve">
          <source>The following utility functions are defined:</source>
          <target state="translated">定义了以下实用功能:</target>
        </trans-unit>
        <trans-unit id="417d394511e1309a8dae0e325c38f0a8caf3a18c" translate="yes" xml:space="preserve">
          <source>The following values are provided as constant attributes of the hash objects returned by the constructors:</source>
          <target state="translated">下面的值是作为构造函数返回的哈希对象的常量属性提供的。</target>
        </trans-unit>
        <trans-unit id="1aef3ce4065fb44fb99d2a7c3b157d02f58aec0d" translate="yes" xml:space="preserve">
          <source>The following variables are provided for read-only access (you can mutate the values but should not rebind them):</source>
          <target state="translated">下面的变量是为只读访问提供的(你可以突变值,但不应该重新绑定它们)。</target>
        </trans-unit>
        <trans-unit id="bed98bc423abff4881d393f2595bfb18c30ad258" translate="yes" xml:space="preserve">
          <source>The following warnings category classes are currently defined:</source>
          <target state="translated">目前定义的警告类别如下:</target>
        </trans-unit>
        <trans-unit id="56c999175598c3a0646577066314485f95412182" translate="yes" xml:space="preserve">
          <source>The font preferences, highlighting, keys, and general preferences can be changed via Configure IDLE on the Option menu. Non-default user settings are saved in a &lt;code&gt;.idlerc&lt;/code&gt; directory in the user&amp;rsquo;s home directory. Problems caused by bad user configuration files are solved by editing or deleting one or more of the files in &lt;code&gt;.idlerc&lt;/code&gt;.</source>
          <target state="translated">字体首选项，突出显示，键和常规首选项可以通过&amp;ldquo;选项&amp;rdquo;菜单上的&amp;ldquo;配置IDLE&amp;rdquo;进行更改。非默认用户设置保存在用户主目录中的 &lt;code&gt;.idlerc&lt;/code&gt; 目录中。通过编辑或删除 &lt;code&gt;.idlerc&lt;/code&gt; 中的一个或多个文件，可以解决由错误的用户配置文件引起的问题。</target>
        </trans-unit>
        <trans-unit id="0a1ed52da4ac65d01c5a6043c3a96a83c3e6f4e8" translate="yes" xml:space="preserve">
          <source>The foregoing represent the modern (unicode friendly) API of the email package. The remaining sections, starting with the &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class, cover the legacy &lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; API that deals much more directly with the details of how email messages are represented. The &lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; API does &lt;em&gt;not&lt;/em&gt; hide the details of the RFCs from the application, but for applications that need to operate at that level, they can be useful tools. This documentation is also relevant for applications that are still using the &lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; API for backward compatibility reasons.</source>
          <target state="translated">前述内容代表电子邮件包的现代（对Unicode友好）的API。从&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;类开始的其余部分涵盖了传统的&lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt; API，该API更直接地处理如何表示电子邮件的细节。该&lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt; API并&lt;em&gt;没有&lt;/em&gt;隐藏应用程序的RFC的细节，但对于应用程序需要在该级别运行，它们可以成为有用的工具。该文档还与出于向后兼容性原因而仍在使用&lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt; API的应用程序有关。</target>
        </trans-unit>
        <trans-unit id="9719a694099674e215e94f8bb4b03c9883cc3b74" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;'!'&lt;/code&gt; is available for those poor souls who claim they can&amp;rsquo;t remember whether network byte order is big-endian or little-endian.</source>
          <target state="translated">形式 &lt;code&gt;'!'&lt;/code&gt; 适用于那些声称自己不记得网络字节顺序是大端还是小端的可怜人。</target>
        </trans-unit>
        <trans-unit id="d465a10e04e817159bfa1b8af45b076bab6a1165" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;'!'&lt;/code&gt; represents the network byte order which is always big-endian as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1700&quot;&gt;IETF RFC 1700&lt;/a&gt;.</source>
          <target state="translated">形式为 &lt;code&gt;'!'&lt;/code&gt; 表示网络字节顺序，如&lt;a href=&quot;https://tools.ietf.org/html/rfc1700&quot;&gt;IETF RFC 1700中&lt;/a&gt;所定义，该字节始终为大端顺序。</target>
        </trans-unit>
        <trans-unit id="c5dd3c1d4e4c87b360e21a7a86c94ad48c591b4f" translate="yes" xml:space="preserve">
          <source>The format of a MIME document allows for some text between the blank line following the headers, and the first multipart boundary string. Normally, this text is never visible in a MIME-aware mail reader because it falls outside the standard MIME armor. However, when viewing the raw text of the message, or when viewing the message in a non-MIME aware reader, this text can become visible.</source>
          <target state="translated">MIME 文档的格式允许在页眉后的空行和第一个多部分边界字符串之间有一些文本.通常情况下,这段文字在MIME识别的邮件阅读器中是看不到的,因为它不在标准的MIME保护范围内.然而,当查看邮件的原始文本时,或者在非MIME识别的阅读器中查看邮件时,这个文本可能会变得可见。</target>
        </trans-unit>
        <trans-unit id="c6d7d0fe4f5076068f89a5ef002f30e9fa3a415c" translate="yes" xml:space="preserve">
          <source>The format string passed in the original logging call. Merged with &lt;code&gt;args&lt;/code&gt; to produce &lt;code&gt;message&lt;/code&gt;, or an arbitrary object (see &lt;a href=&quot;https://docs.python.org/3.8/howto/logging.html#arbitrary-object-messages&quot;&gt;Using arbitrary objects as messages&lt;/a&gt;).</source>
          <target state="translated">原始日志记录调用中传递的格式字符串。与 &lt;code&gt;args&lt;/code&gt; 合并以产生 &lt;code&gt;message&lt;/code&gt; 或任意对象（请参阅&lt;a href=&quot;https://docs.python.org/3.8/howto/logging.html#arbitrary-object-messages&quot;&gt;将任意对象用作message&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e3547322aaaf134b1c4fdb26addc6b5a2b57cffc" translate="yes" xml:space="preserve">
          <source>The format string passed in the original logging call. Merged with &lt;code&gt;args&lt;/code&gt; to produce &lt;code&gt;message&lt;/code&gt;, or an arbitrary object (see &lt;a href=&quot;https://docs.python.org/3.9/howto/logging.html#arbitrary-object-messages&quot;&gt;Using arbitrary objects as messages&lt;/a&gt;).</source>
          <target state="translated">原始日志记录调用中传递的格式字符串。与 &lt;code&gt;args&lt;/code&gt; 合并以产生 &lt;code&gt;message&lt;/code&gt; 或任意对象（请参阅&lt;a href=&quot;https://docs.python.org/3.9/howto/logging.html#arbitrary-object-messages&quot;&gt;将任意对象用作message&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="be25f62349a67e88a6f71056aa170d23e1720b2d" translate="yes" xml:space="preserve">
          <source>The format string used to construct this Struct object.</source>
          <target state="translated">用于构造该Struct对象的格式字符串。</target>
        </trans-unit>
        <trans-unit id="ae307c00fd124ab53e7ea3ea2b261a8e4e5be037" translate="yes" xml:space="preserve">
          <source>The format-specific state and behaviors offered by subclasses vary, but in general it is only the properties that are not specific to a particular mailbox that are supported (although presumably the properties are specific to a particular mailbox format). For example, file offsets for single-file mailbox formats and file names for directory-based mailbox formats are not retained, because they are only applicable to the original mailbox. But state such as whether a message has been read by the user or marked as important is retained, because it applies to the message itself.</source>
          <target state="translated">子类提供的特定格式状态和行为各不相同,但一般情况下,只支持非特定邮箱的属性(虽然推测这些属性是特定邮箱格式的)。例如,单文件邮箱格式的文件偏移量和基于目录的邮箱格式的文件名都不会被保留,因为它们只适用于原始邮箱。但诸如邮件是否已被用户阅读或标记为重要等状态则被保留,因为它适用于邮件本身。</target>
        </trans-unit>
        <trans-unit id="2068792b8c84f3317cef9c46aa469beb4c18671a" translate="yes" xml:space="preserve">
          <source>The formatted representation keeps objects on a single line if it can, and breaks them onto multiple lines if they don&amp;rsquo;t fit within the allowed width. Construct &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; objects explicitly if you need to adjust the width constraint.</source>
          <target state="translated">如果可以的话，格式化的表示形式会将对象保留在一行上，如果对象超出允许的宽度，则将它们分成多行。如果需要调整宽度约束，则应显式构造&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="65f1a1fcc9353f70b97874c23d158416af799011" translate="yes" xml:space="preserve">
          <source>The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). If the value being printed may be a tuple or dictionary, wrap it in a tuple.</source>
          <target state="translated">这里描述的格式化操作表现出各种怪癖,导致一些常见的错误(如不能正确显示元组和字典)。如果被打印的值可能是一个元组或字典,请将其包裹在元组中。</target>
        </trans-unit>
        <trans-unit id="736661bf5ae9da6e21319dfbf436b716e730fac9" translate="yes" xml:space="preserve">
          <source>The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literals&lt;/a&gt;, the &lt;a href=&quot;#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; interface, or &lt;a href=&quot;string#template-strings&quot;&gt;template strings&lt;/a&gt; may help avoid these errors. Each of these alternatives provides their own trade-offs and benefits of simplicity, flexibility, and/or extensibility.</source>
          <target state="translated">此处描述的格式化操作表现出各种古怪，这些古怪导致了许多常见错误（例如未能正确显示元组和字典）。使用较新的&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;格式化字符串文字&lt;/a&gt;，&lt;a href=&quot;#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;接口或&lt;a href=&quot;string#template-strings&quot;&gt;模板字符串&lt;/a&gt;可能有助于避免这些错误。这些选择中的每一个都提供了自己的权衡，并带来了简单性，灵活性和/或可扩展性的好处。</target>
        </trans-unit>
        <trans-unit id="c08fbe8837533e0885ef927e0bc4f15f4cceef24" translate="yes" xml:space="preserve">
          <source>The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literals&lt;/a&gt;, the &lt;a href=&quot;#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; interface, or &lt;a href=&quot;string#template-strings&quot;&gt;template strings&lt;/a&gt; may help avoid these errors. Each of these alternatives provides their own trade-offs and benefits of simplicity, flexibility, and/or extensibility.</source>
          <target state="translated">此处描述的格式化操作表现出各种古怪，这些古怪导致了许多常见错误（例如未能正确显示元组和字典）。使用较新的&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;格式化字符串文字&lt;/a&gt;，&lt;a href=&quot;#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;接口或&lt;a href=&quot;string#template-strings&quot;&gt;模板字符串&lt;/a&gt;可能有助于避免这些错误。这些选择中的每一个都提供了自己的权衡，并带来了简单性，灵活性和/或可扩展性的好处。</target>
        </trans-unit>
        <trans-unit id="9f4beec66d61f16cdc1211acdb5e32b9a0da1701" translate="yes" xml:space="preserve">
          <source>The fourth keyword argument is &lt;em&gt;extra&lt;/em&gt; which can be used to pass a dictionary which is used to populate the __dict__ of the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; created for the logging event with user-defined attributes. These custom attributes can then be used as you like. For example, they could be incorporated into logged messages. For example:</source>
          <target state="translated">第四个关键字参数是&lt;em&gt;多余的&lt;/em&gt;，可用于传递字典，该字典用于使用用户定义的属性填充为记录事件创建的&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;的__dict__ 。然后可以根据需要使用这些自定义属性。例如，可以将它们合并到已记录的消息中。例如：</target>
        </trans-unit>
        <trans-unit id="50c1d55e08881836b2c182107f0d498d07d91b19" translate="yes" xml:space="preserve">
          <source>The frame which surrounds the text and scroll bar widgets.</source>
          <target state="translated">围绕文本和滚动条部件的框架。</target>
        </trans-unit>
        <trans-unit id="71946bf5956b0651b1d3fd66ea569f6999a0d1da" translate="yes" xml:space="preserve">
          <source>The frames are always ordered from oldest to newest.</source>
          <target state="translated">镜框的顺序总是从最老到最新的。</target>
        </trans-unit>
        <trans-unit id="161ae6ad033364019934ee1a5e00d05069bbe45e" translate="yes" xml:space="preserve">
          <source>The free lists maintained for a number of built-in types are cleared whenever a full collection or collection of the highest generation (2) is run. Not all items in some free lists may be freed due to the particular implementation, in particular &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">每当运行完整集合或最高代（2）的集合时，都会清除为多种内置类型维护的空闲列表。由于特定的实现（尤其是&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; )&lt;/a&gt;，并非某些空闲列表中的所有项目都无法释放。</target>
        </trans-unit>
        <trans-unit id="3181ea2680676ac4e3ea5b9f30267230dfb43d97" translate="yes" xml:space="preserve">
          <source>The full details for each codec can also be looked up directly:</source>
          <target state="translated">每个编解码器的完整细节也可以直接查询。</target>
        </trans-unit>
        <trans-unit id="3baef1d8e6a5b643e6aa0b077cbe17d9809e771e" translate="yes" xml:space="preserve">
          <source>The full list of supported magic methods is:</source>
          <target state="translated">支持的魔法方法的完整列表是。</target>
        </trans-unit>
        <trans-unit id="a050047df44eb3ec26703753ce3557390dfcef84" translate="yes" xml:space="preserve">
          <source>The full pathname of the file where the logging call was made.</source>
          <target state="translated">进行记录调用的文件的完整路径名。</target>
        </trans-unit>
        <trans-unit id="e66cbb6c3bc1cc564a5af170e056d1235b56eb79" translate="yes" xml:space="preserve">
          <source>The full set of available metadata is not described here. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0566&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 566&lt;/strong&gt;&lt;/a&gt; for additional details.</source>
          <target state="translated">此处没有描述完整的可用元数据集。有关其他详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0566&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 566&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52768adda6d0fcaec4a3d239126958c6e7925060" translate="yes" xml:space="preserve">
          <source>The full set of available metadata is not described here. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0566/&quot;&gt;PEP 566&lt;/a&gt; for additional details.</source>
          <target state="translated">这里没有描述完整的可用元数据集。有关其他详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0566/&quot;&gt;PEP 566&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a53fa6b4d82cd9340e1e2e41b030339bc39862c" translate="yes" xml:space="preserve">
          <source>The full set of format codes supported varies across platforms, because Python calls the platform C library&amp;rsquo;s &lt;code&gt;strftime()&lt;/code&gt; function, and platform variations are common. To see the full set of format codes supported on your platform, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime(3)&lt;/a&gt;&lt;/em&gt; documentation.</source>
          <target state="translated">在不同平台上，支持的全部格式代码集会有所不同，因为Python会调用平台C库的 &lt;code&gt;strftime()&lt;/code&gt; 函数，并且平台也很常见。要查看平台所支持的完整格式代码集，请查阅&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime（3）&lt;/a&gt;&lt;/em&gt;文档。</target>
        </trans-unit>
        <trans-unit id="a73c19b271f00c773e1b0174e7eab0f5b76bb7aa" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of the package under which the module was loaded as a submodule (or the empty string for top-level modules). For packages, it is the same as &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt;&lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt;&lt;/a&gt; decorator can handle the details for &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将模块作为子模块加载到的软件包的标准名称（对于顶级模块，为空字符串）。对于包，它与&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt;相同。该&lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt; &lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt; &lt;/a&gt;装饰可以处理的细节&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7a36eaa97599d772f3f39f239cfbecb1e668b83" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;#ctypes.get_errno&quot;&gt;&lt;code&gt;ctypes.get_errno()&lt;/code&gt;&lt;/a&gt; returns the value of the ctypes private copy, and the function &lt;a href=&quot;#ctypes.set_errno&quot;&gt;&lt;code&gt;ctypes.set_errno()&lt;/code&gt;&lt;/a&gt; changes the ctypes private copy to a new value and returns the former value.</source>
          <target state="translated">函数&lt;a href=&quot;#ctypes.get_errno&quot;&gt; &lt;code&gt;ctypes.get_errno()&lt;/code&gt; &lt;/a&gt;返回ctypes私有副本的值，函数&lt;a href=&quot;#ctypes.set_errno&quot;&gt; &lt;code&gt;ctypes.set_errno()&lt;/code&gt; &lt;/a&gt;将ctypes私有副本更改为新值并返回以前的值。</target>
        </trans-unit>
        <trans-unit id="a38682aa64e9cc436b589cdea1ec5b09472c86b5" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;#turtle.Screen&quot;&gt;&lt;code&gt;Screen()&lt;/code&gt;&lt;/a&gt; returns a singleton object of a &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt; subclass. This function should be used when &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; is used as a standalone tool for doing graphics. As a singleton object, inheriting from its class is not possible.</source>
          <target state="translated">&lt;a href=&quot;#turtle.Screen&quot;&gt; &lt;code&gt;Screen()&lt;/code&gt; &lt;/a&gt;函数返回&lt;a href=&quot;#turtle.TurtleScreen&quot;&gt; &lt;code&gt;TurtleScreen&lt;/code&gt; &lt;/a&gt;子类的单例对象。当将&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;用作制作图形的独立工具时，应使用此功能。作为单例对象，无法从其类继承。</target>
        </trans-unit>
        <trans-unit id="4b87f0634b41ea1ec18dd7a551e460ae927d90b6" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; which always returns zero is just a special case of constant functions. A faster and more flexible way to create constant functions is to use a lambda function which can supply any constant value (not just zero):</source>
          <target state="translated">始终返回零的函数&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;只是常量函数的一种特殊情况。创建常数函数的一种更快，更灵活的方法是使用可以提供任何常数值（不只是零）的lambda函数：</target>
        </trans-unit>
        <trans-unit id="71b8ad460c36f096a3aad56832cd408db71564e1" translate="yes" xml:space="preserve">
          <source>The function accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">该函数接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a678de4b7ae952e5b1da61e78c7651f5f2035541" translate="yes" xml:space="preserve">
          <source>The function accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">该函数接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e4b7efae4c2a025a1f28a0d482c804af6e6abc5" translate="yes" xml:space="preserve">
          <source>The function being decorated must return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;-iterator when called. This iterator must yield exactly one value, which will be bound to the targets in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement&amp;rsquo;s &lt;code&gt;as&lt;/code&gt; clause, if any.</source>
          <target state="translated">被修饰的函数在调用时必须返回&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; -iterator。此迭代器必须精确地产生一个值，该值将绑定到&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的 &lt;code&gt;as&lt;/code&gt; 子句中的目标（如果有）。</target>
        </trans-unit>
        <trans-unit id="1d9178c0a1b5de9aa34245b04407bf4a8474575e" translate="yes" xml:space="preserve">
          <source>The function being decorated must return a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;-iterator when called. This iterator must yield exactly one value, which will be bound to the targets in the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement&amp;rsquo;s &lt;code&gt;as&lt;/code&gt; clause, if any.</source>
          <target state="translated">被修饰的函数在调用时必须返回&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; -iterator。此迭代器必须精确地产生一个值，该值将绑定到&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的 &lt;code&gt;as&lt;/code&gt; 子句中的目标（如果有）。</target>
        </trans-unit>
        <trans-unit id="4964e748216323e3b95686ec08b823153b01f6f1" translate="yes" xml:space="preserve">
          <source>The function below takes and returns a string and is annotated as follows:</source>
          <target state="translated">下面的函数接收并返回一个字符串,注释如下。</target>
        </trans-unit>
        <trans-unit id="5ecee13fddbb2ad43c67a6023a70bf572f95a3fb" translate="yes" xml:space="preserve">
          <source>The function can return any of the types supported by SQLite: bytes, str, int, float and &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">该函数可以返回SQLite支持的任何类型：bytes，str，int，float和 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a00d27286dafdecef65c8492fc893c6916a3a28d" translate="yes" xml:space="preserve">
          <source>The function factories can be used as decorator factories, so we may as well write:</source>
          <target state="translated">函数工厂可以作为装饰器工厂使用,所以我们不妨写。</target>
        </trans-unit>
        <trans-unit id="6ec5701e77abe81a5878799586d5ba1ca183541d" translate="yes" xml:space="preserve">
          <source>The function has an O(1) complexity, i.e. works equally fast for contexts with a few context variables and for contexts that have a lot of them.</source>
          <target state="translated">该函数的复杂度为O(1),即对于有少量上下文变量的上下文和有大量上下文变量的上下文来说,工作速度同样快。</target>
        </trans-unit>
        <trans-unit id="3c9c3393d80d8e73322ff3dc8fd0ef5bfc0388fd" translate="yes" xml:space="preserve">
          <source>The function imports the module &lt;em&gt;name&lt;/em&gt;, potentially using the given &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; to determine how to interpret the name in a package context. The &lt;em&gt;fromlist&lt;/em&gt; gives the names of objects or submodules that should be imported from the module given by &lt;em&gt;name&lt;/em&gt;. The standard implementation does not use its &lt;em&gt;locals&lt;/em&gt; argument at all, and uses its &lt;em&gt;globals&lt;/em&gt; only to determine the package context of the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">该函数导入模块&lt;em&gt;名称&lt;/em&gt;，可能使用给定的&lt;em&gt;全局变量&lt;/em&gt;和&lt;em&gt;局部&lt;/em&gt;&lt;em&gt;变量&lt;/em&gt;来确定如何在包上下文中解释该名称。在&lt;em&gt;fromlist里&lt;/em&gt;给出了应该从给出的模块导入的对象或子的名字&lt;em&gt;命名&lt;/em&gt;。标准实现完全不使用其&lt;em&gt;locals&lt;/em&gt;参数，而仅使用其&lt;em&gt;全局&lt;/em&gt;参数来确定&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句的包上下文。</target>
        </trans-unit>
        <trans-unit id="6ce027da8efa25f138beb5b32e8ece1378fcc857" translate="yes" xml:space="preserve">
          <source>The function imports the module &lt;em&gt;name&lt;/em&gt;, potentially using the given &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; to determine how to interpret the name in a package context. The &lt;em&gt;fromlist&lt;/em&gt; gives the names of objects or submodules that should be imported from the module given by &lt;em&gt;name&lt;/em&gt;. The standard implementation does not use its &lt;em&gt;locals&lt;/em&gt; argument at all, and uses its &lt;em&gt;globals&lt;/em&gt; only to determine the package context of the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">该函数导入模块&lt;em&gt;名称&lt;/em&gt;，可能使用给定的&lt;em&gt;全局变量&lt;/em&gt;和&lt;em&gt;局部&lt;/em&gt;&lt;em&gt;变量&lt;/em&gt;来确定如何在包上下文中解释该名称。在&lt;em&gt;fromlist里&lt;/em&gt;给出了应该从给出的模块导入的对象或子的名字&lt;em&gt;命名&lt;/em&gt;。标准实现完全不使用其&lt;em&gt;locals&lt;/em&gt;参数，而仅使用其&lt;em&gt;全局&lt;/em&gt;参数来确定&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句的包上下文。</target>
        </trans-unit>
        <trans-unit id="6b4d83d80a06e6dbd1200b63632e36990e0a8937" translate="yes" xml:space="preserve">
          <source>The function is basically hooked up to the class, but each &lt;code&gt;Mock&lt;/code&gt; instance is kept isolated from the others.</source>
          <target state="translated">该函数基本上连接到该类，但是每个 &lt;code&gt;Mock&lt;/code&gt; 实例都与其他实例保持隔离。</target>
        </trans-unit>
        <trans-unit id="9d4f8ef455c11eca2983634ccc2605fc737a1517" translate="yes" xml:space="preserve">
          <source>The function is implemented using a busy loop (non-blocking call and short sleeps). Use the &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; module for an asynchronous wait: see &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;asyncio.create_subprocess_exec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该功能是通过忙循环（非阻塞呼叫和短暂睡眠）实现的。使用&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;模块进行异步等待：请参见&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt; &lt;code&gt;asyncio.create_subprocess_exec&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2955159f98910d80a399f71d31e3b1b90fadb227" translate="yes" xml:space="preserve">
          <source>The function name, or &lt;code&gt;&quot;&amp;lt;lambda&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">函数名称或 &lt;code&gt;&quot;&amp;lt;lambda&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="365121208e03505058ab8f130f9bd3bca08359b1" translate="yes" xml:space="preserve">
          <source>The function now returns (exitcode, output) instead of (status, output) as it did in Python 3.3.3 and earlier. exitcode has the same value as &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该函数现在返回（退出代码，输出），而不是像在Python 3.3.3和更早版本中那样返回（状态，输出）。exitcode与&lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; 的&lt;/a&gt;值相同。</target>
        </trans-unit>
        <trans-unit id="24ffb70148ec58a433c4b1d89a0965f0711f4f4d" translate="yes" xml:space="preserve">
          <source>The function provides PKCS#5 password-based key derivation function 2. It uses HMAC as pseudorandom function.</source>
          <target state="translated">该函数提供基于PKCS#5密码的密钥推导函数2。它使用HMAC作为伪随机函数。</target>
        </trans-unit>
        <trans-unit id="0e2de60a490dd61f01eed040ccc54b9c73ea91cd" translate="yes" xml:space="preserve">
          <source>The function provides scrypt password-based key derivation function as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7914.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 7914&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该功能提供了&lt;a href=&quot;https://tools.ietf.org/html/rfc7914.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 7914中&lt;/strong&gt;&lt;/a&gt;定义的基于scrypt密码的密钥派生功能。</target>
        </trans-unit>
        <trans-unit id="be2775a63807a09cabe74648da65a21fd703232b" translate="yes" xml:space="preserve">
          <source>The function recursively replaces all &lt;code&gt;Annotated[T, ...]&lt;/code&gt; with &lt;code&gt;T&lt;/code&gt;, unless &lt;code&gt;include_extras&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt; (see &lt;a href=&quot;#typing.Annotated&quot;&gt;&lt;code&gt;Annotated&lt;/code&gt;&lt;/a&gt; for more information). For example:</source>
          <target state="translated">该函数以 &lt;code&gt;T&lt;/code&gt; 递归替换所有 &lt;code&gt;Annotated[T, ...]&lt;/code&gt; ，除非 &lt;code&gt;include_extras&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; （有关更多信息，请参见&lt;a href=&quot;#typing.Annotated&quot;&gt; &lt;code&gt;Annotated&lt;/code&gt; &lt;/a&gt;）。例如：</target>
        </trans-unit>
        <trans-unit id="f561d6267c3502d36b88afd7ef1ffa056b70ffea" translate="yes" xml:space="preserve">
          <source>The function relies on the system&amp;rsquo;s &lt;code&gt;file&lt;/code&gt; command to do the actual work. This is available on most if not all Unix platforms and some non-Unix platforms and then only if the executable points to the Python interpreter. Reasonable defaults are used when the above needs are not met.</source>
          <target state="translated">该功能依赖于系统的 &lt;code&gt;file&lt;/code&gt; 命令来执行实际工作。在大多数（如果不是全部）Unix平台和某些非Unix平台上，仅在可执行文件指向Python解释器时，此选项才可用。当不满足上述需求时，将使用合理的默认值。</target>
        </trans-unit>
        <trans-unit id="0d52ea0a133e3b335ca7fab0110722708877e527" translate="yes" xml:space="preserve">
          <source>The function retrieves the name of one subkey each time it is called. It is typically called repeatedly until an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception is raised, indicating, no more values are available.</source>
          <target state="translated">每次调用时，该函数都会检索一个子项的名称。通常会反复调用它，直到引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;异常为止，这表明不再有可用的值。</target>
        </trans-unit>
        <trans-unit id="2582f1768c74b6155a206d847a340d93a1ea4148" translate="yes" xml:space="preserve">
          <source>The function retrieves the name of one subkey each time it is called. It is typically called repeatedly, until an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception is raised, indicating no more values.</source>
          <target state="translated">每次调用时，该函数都会检索一个子项的名称。通常会反复调用它，直到引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;异常（指示没有更多值）为止。</target>
        </trans-unit>
        <trans-unit id="68a88dc4460581a1f4b714350b90ad83cf5217dc" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;True&lt;/code&gt; if the handler was successfully removed, &lt;code&gt;False&lt;/code&gt; if there was nothing to remove.</source>
          <target state="translated">如果成功删除了处理程序，则该函数返回 &lt;code&gt;True&lt;/code&gt; ;如果没有要删除的内容，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c9b59d5b0268ec4ba28cc4423ac762b8511ebfa" translate="yes" xml:space="preserve">
          <source>The function returns a binary string that is the contents of the specified resource.</source>
          <target state="translated">该函数返回一个二进制字符串,是指定资源的内容。</target>
        </trans-unit>
        <trans-unit id="b50f3d08041041132e0f473696962273773e2908" translate="yes" xml:space="preserve">
          <source>The function returns a list of (cert_bytes, encoding_type, trust) tuples. The encoding_type specifies the encoding of cert_bytes. It is either &lt;code&gt;x509_asn&lt;/code&gt; for X.509 ASN.1 data or &lt;code&gt;pkcs_7_asn&lt;/code&gt; for PKCS#7 ASN.1 data.</source>
          <target state="translated">该函数返回（cert_bytes，encoding_type，trust）元组的列表。encoding_type指定cert_bytes的编码。它或者是 &lt;code&gt;x509_asn&lt;/code&gt; 用于X.509 ASN.1数据或 &lt;code&gt;pkcs_7_asn&lt;/code&gt; 用于PKCS＃7 ASN.1数据。</target>
        </trans-unit>
        <trans-unit id="f1e3d1267f3b1275f1718a97de1785b2d93ae19f" translate="yes" xml:space="preserve">
          <source>The function returns a list of (cert_bytes, encoding_type, trust) tuples. The encoding_type specifies the encoding of cert_bytes. It is either &lt;code&gt;x509_asn&lt;/code&gt; for X.509 ASN.1 data or &lt;code&gt;pkcs_7_asn&lt;/code&gt; for PKCS#7 ASN.1 data. Trust specifies the purpose of the certificate as a set of OIDS or exactly &lt;code&gt;True&lt;/code&gt; if the certificate is trustworthy for all purposes.</source>
          <target state="translated">该函数返回（cert_bytes，encoding_type，trust）元组的列表。encoding_type指定cert_bytes的编码。它或者是 &lt;code&gt;x509_asn&lt;/code&gt; 用于X.509 ASN.1数据或 &lt;code&gt;pkcs_7_asn&lt;/code&gt; 用于PKCS＃7 ASN.1数据。信任将证书的目的指定为一组OIDS，如果证书对所有目的都是可信任的，则将其指定为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9d088b3ab98a7587eb78136dcb713f81c7d61e3" translate="yes" xml:space="preserve">
          <source>The function returns a list of 5-tuples with the following structure:</source>
          <target state="translated">函数返回一个5元组的列表,其结构如下。</target>
        </trans-unit>
        <trans-unit id="37cd4c3b155cc249789a9f5e5caa9fc5922b36b6" translate="yes" xml:space="preserve">
          <source>The function sets temporarily the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale to the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale or the &lt;code&gt;LC_MONETARY&lt;/code&gt; locale if locales are different and numeric or monetary strings are non-ASCII. This temporary change affects other threads.</source>
          <target state="translated">如果语言环境不同并且数字或货币字符串为非ASCII，此函数会暂时将 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境设置为 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 语言环境或 &lt;code&gt;LC_MONETARY&lt;/code&gt; 语言环境。此临时更改会影响其他线程。</target>
        </trans-unit>
        <trans-unit id="ceb99fd53927ad467206e91c0f5eccc132e2a34d" translate="yes" xml:space="preserve">
          <source>The function will return an object (which might be a module), or raise one of the following exceptions:</source>
          <target state="translated">该函数将返回一个对象(可能是一个模块),或者引发以下异常。</target>
        </trans-unit>
        <trans-unit id="781903a74446cb87f37b26e0046512b71cb5c6b8" translate="yes" xml:space="preserve">
          <source>The function will return when all futures finish or are cancelled.</source>
          <target state="translated">当所有期货结束或被取消时,函数将返回。</target>
        </trans-unit>
        <trans-unit id="c00e0412657827ab360f55b434af658b4db6f97d" translate="yes" xml:space="preserve">
          <source>The function will return when any future finishes by raising an exception. If no future raises an exception then it is equivalent to &lt;code&gt;ALL_COMPLETED&lt;/code&gt;.</source>
          <target state="translated">当将来通过引发异常结束时，该函数将返回。如果没有 &lt;code&gt;ALL_COMPLETED&lt;/code&gt; 引发异常，则等效于ALL_COMPLETED。</target>
        </trans-unit>
        <trans-unit id="b0470e2a163bad2980d4698bead65be03737a88e" translate="yes" xml:space="preserve">
          <source>The function will return when any future finishes or is cancelled.</source>
          <target state="translated">该函数将在任何未来完成或取消时返回。</target>
        </trans-unit>
        <trans-unit id="649519a40304cc18d6400172e89f487baa3a326e" translate="yes" xml:space="preserve">
          <source>The function will wait until the future is actually cancelled, so the total wait time may exceed the &lt;em&gt;timeout&lt;/em&gt;.</source>
          <target state="translated">该函数将等待直到实际上取消了将来，因此总等待时间可能超过&lt;em&gt;timeout&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eab13ed2660945f7b3cf88ed7afd7b3af8c78049" translate="yes" xml:space="preserve">
          <source>The function will wait until the future is actually cancelled, so the total wait time may exceed the &lt;em&gt;timeout&lt;/em&gt;. If an exception happens during cancellation, it is propagated.</source>
          <target state="translated">该函数将等待直到实际上取消了将来，因此总等待时间可能会超过&lt;em&gt;timeout&lt;/em&gt;。如果取消期间发生异常，则将其传播。</target>
        </trans-unit>
        <trans-unit id="d3ce9e44bf29a2729baf1bf10f22356d2b44b74c" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; provide a simple interface to doctest that should be sufficient for most basic uses. For a less formal introduction to these two functions, see sections &lt;a href=&quot;#doctest-simple-testmod&quot;&gt;Simple Usage: Checking Examples in Docstrings&lt;/a&gt; and &lt;a href=&quot;#doctest-simple-testfile&quot;&gt;Simple Usage: Checking Examples in a Text File&lt;/a&gt;.</source>
          <target state="translated">函数&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;提供了一个简单的doctest接口，对于大多数基本用途而言已经足够了。有关这两个函数的非正式介绍，请参见&amp;ldquo; &lt;a href=&quot;#doctest-simple-testmod&quot;&gt;简单用法：检查文档字符串中的示例&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;#doctest-simple-testfile&quot;&gt;简单用法：检查文本文件中的示例&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00c81ac863428b895227c7dbcbabc56b872b4575" translate="yes" xml:space="preserve">
          <source>The functions &lt;em&gt;master_read&lt;/em&gt; and &lt;em&gt;stdin_read&lt;/em&gt; are passed a file descriptor which they should read from, and they should always return a byte string. In order to force spawn to return before the child process exits an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; should be thrown.</source>
          <target state="translated">向函数&lt;em&gt;master_read&lt;/em&gt;和&lt;em&gt;stdin_read&lt;/em&gt;传递了一个文件描述符，它们应该从中读取文件描述符，并且它们应始终返回字节字符串。为了在子进程退出之前强制生成返回，应该抛出&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e6f1e343fecd40713794869ed00c9336cd2edc2" translate="yes" xml:space="preserve">
          <source>The functions and classes defined in this module use an idealized calendar, the current Gregorian calendar extended indefinitely in both directions. This matches the definition of the &amp;ldquo;proleptic Gregorian&amp;rdquo; calendar in Dershowitz and Reingold&amp;rsquo;s book &amp;ldquo;Calendrical Calculations&amp;rdquo;, where it&amp;rsquo;s the base calendar for all computations. Zero and negative years are interpreted as prescribed by the ISO 8601 standard. Year 0 is 1 BC, year -1 is 2 BC, and so on.</source>
          <target state="translated">此模块中定义的功能和类使用理想化的日历，当前的公历在两个方向上无限期扩展。这与Dershowitz和Reingold的书&amp;ldquo; Calendrical Calculations&amp;rdquo;（&amp;ldquo;日历计算&amp;rdquo;）中&amp;ldquo;通用公历&amp;rdquo;日历的定义匹配，该日历是所有计算的基础日历。零年和负年按照ISO 8601标准的规定进行解释。0年是1 BC，-1年是2 BC，依此类推。</target>
        </trans-unit>
        <trans-unit id="ac84bd02776cfbc9e0070dddb62c6f3c30cb39ca" translate="yes" xml:space="preserve">
          <source>The functions and classes in this module make it straightforward to handle various tasks related to IP addresses, including checking whether or not two hosts are on the same subnet, iterating over all hosts in a particular subnet, checking whether or not a string represents a valid IP address or network definition, and so on.</source>
          <target state="translated">该模块中的函数和类可以直接处理与IP地址相关的各种任务,包括检查两个主机是否在同一个子网中,遍历某个子网中的所有主机,检查一个字符串是否代表一个有效的IP地址或网络定义等等。</target>
        </trans-unit>
        <trans-unit id="86db04374f3973882749df92eb0988ac8c430f49" translate="yes" xml:space="preserve">
          <source>The functions described below provide the primary interface for this module. If the module has not been initialized, they will call &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt; if they rely on the information &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt; sets up.</source>
          <target state="translated">下述功能为该模块提供了主要接口。如果模块尚未初始化，则它们将依赖于&lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt;设置的信息来调用&lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb446b8721e0dd6720d36791e2154a88fe9df31d" translate="yes" xml:space="preserve">
          <source>The functions fall into categories that perform object comparisons, logical operations, mathematical operations and sequence operations.</source>
          <target state="translated">函数分为执行对象比较、逻辑运算、数学运算和序列运算等类别。</target>
        </trans-unit>
        <trans-unit id="4b4e7bb85a308a49aca1cd55c1346182c6dbd5d8" translate="yes" xml:space="preserve">
          <source>The functions in this module may not handle dates and times before the epoch or far in the future. The cut-off point in the future is determined by the C library; for 32-bit systems, it is typically in 2038.</source>
          <target state="translated">本模块中的函数可能无法处理纪元之前或遥远的未来的日期和时间。未来的截止点由C库决定;对于32位系统,通常是2038年。</target>
        </trans-unit>
        <trans-unit id="4658882c980af257f5a9284feda6fc9a8f1cdc2f" translate="yes" xml:space="preserve">
          <source>The functions supplied by this module are actually bound methods of a hidden instance of the &lt;a href=&quot;#random.Random&quot;&gt;&lt;code&gt;random.Random&lt;/code&gt;&lt;/a&gt; class. You can instantiate your own instances of &lt;a href=&quot;#random.Random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; to get generators that don&amp;rsquo;t share state.</source>
          <target state="translated">该模块提供的功能实际上是&lt;a href=&quot;#random.Random&quot;&gt; &lt;code&gt;random.Random&lt;/code&gt; &lt;/a&gt;类的隐藏实例的绑定方法。您可以实例化自己的&lt;a href=&quot;#random.Random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;实例，以获取不共享状态的生成器。</target>
        </trans-unit>
        <trans-unit id="160f635b54972ccf727a63ffe8a0c78ed1d914ea" translate="yes" xml:space="preserve">
          <source>The general form of a &lt;em&gt;standard format specifier&lt;/em&gt; is:</source>
          <target state="translated">&lt;em&gt;标准格式说明符&lt;/em&gt;的一般形式为：</target>
        </trans-unit>
        <trans-unit id="23eb078e289739ea1e13e4b7a5cf28e0a6e9477b" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; code will call a method named &lt;code&gt;__post_init__()&lt;/code&gt;, if &lt;code&gt;__post_init__()&lt;/code&gt; is defined on the class. It will normally be called as &lt;code&gt;self.__post_init__()&lt;/code&gt;. However, if any &lt;code&gt;InitVar&lt;/code&gt; fields are defined, they will also be passed to &lt;code&gt;__post_init__()&lt;/code&gt; in the order they were defined in the class. If no &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method is generated, then &lt;code&gt;__post_init__()&lt;/code&gt; will not automatically be called.</source>
          <target state="translated">所生成的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;代码将调用一个方法命名 &lt;code&gt;__post_init__()&lt;/code&gt; 中，如果 &lt;code&gt;__post_init__()&lt;/code&gt; 是在该类中定义。通常将其称为 &lt;code&gt;self.__post_init__()&lt;/code&gt; 。但是，如果定义了任何 &lt;code&gt;InitVar&lt;/code&gt; 字段，它们也将按照在类中定义的顺序传递给 &lt;code&gt;__post_init__()&lt;/code&gt; 。如果没有生成&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法，则 &lt;code&gt;__post_init__()&lt;/code&gt; 不会自动被调用。</target>
        </trans-unit>
        <trans-unit id="466f2bf42108a7e87fa06f20f425efecc77f7482" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method for &lt;code&gt;C&lt;/code&gt; will look like:</source>
          <target state="translated">为 &lt;code&gt;C&lt;/code&gt; 生成的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法如下所示：</target>
        </trans-unit>
        <trans-unit id="dc00128f15015fa2012ea4d433b1da65f38dd0c9" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; code will call a method named &lt;code&gt;__post_init__()&lt;/code&gt;, if &lt;code&gt;__post_init__()&lt;/code&gt; is defined on the class. It will normally be called as &lt;code&gt;self.__post_init__()&lt;/code&gt;. However, if any &lt;code&gt;InitVar&lt;/code&gt; fields are defined, they will also be passed to &lt;code&gt;__post_init__()&lt;/code&gt; in the order they were defined in the class. If no &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method is generated, then &lt;code&gt;__post_init__()&lt;/code&gt; will not automatically be called.</source>
          <target state="translated">所生成的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;代码将调用一个方法命名 &lt;code&gt;__post_init__()&lt;/code&gt; 中，如果 &lt;code&gt;__post_init__()&lt;/code&gt; 是在该类中定义。通常将其称为 &lt;code&gt;self.__post_init__()&lt;/code&gt; 。但是，如果定义了任何 &lt;code&gt;InitVar&lt;/code&gt; 字段，它们也将按照在类中定义的顺序传递给 &lt;code&gt;__post_init__()&lt;/code&gt; 。如果没有生成&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法，则不会自动调用 &lt;code&gt;__post_init__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7319a10db029580199c6d0998e1c54f0f8d139" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method for &lt;code&gt;C&lt;/code&gt; will look like:</source>
          <target state="translated">为 &lt;code&gt;C&lt;/code&gt; 生成的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法如下所示：</target>
        </trans-unit>
        <trans-unit id="71f0c8c526d13f71e83d25d1be9210a33a5a7ad3" translate="yes" xml:space="preserve">
          <source>The generator produces 5-tuples with these members: the token type; the token string; a 2-tuple &lt;code&gt;(srow, scol)&lt;/code&gt; of ints specifying the row and column where the token begins in the source; a 2-tuple &lt;code&gt;(erow, ecol)&lt;/code&gt; of ints specifying the row and column where the token ends in the source; and the line on which the token was found. The line passed (the last tuple item) is the &lt;em&gt;physical&lt;/em&gt; line. The 5 tuple is returned as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the field names: &lt;code&gt;type string start end line&lt;/code&gt;.</source>
          <target state="translated">生成器生成具有以下成员的5元组：令牌类型；令牌字符串；一个由两个整数组成的整数 &lt;code&gt;(srow, scol)&lt;/code&gt; ，用于指定标记在源中开始的行和列；一个2元整数 &lt;code&gt;(erow, ecol)&lt;/code&gt; 整数），指定令牌在源中结束的行和列；以及找到令牌的行。传递的行（最后一个元组项）是&lt;em&gt;物理&lt;/em&gt;行。返回的5元组作为具有字段名称的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;： &lt;code&gt;type string start end line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cfd827b3713d3c557cd51ebdc95c1c6bfdbc964" translate="yes" xml:space="preserve">
          <source>The generator produces 5-tuples with these members: the token type; the token string; a 2-tuple &lt;code&gt;(srow, scol)&lt;/code&gt; of ints specifying the row and column where the token begins in the source; a 2-tuple &lt;code&gt;(erow, ecol)&lt;/code&gt; of ints specifying the row and column where the token ends in the source; and the line on which the token was found. The line passed (the last tuple item) is the &lt;em&gt;physical&lt;/em&gt; line. The 5 tuple is returned as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the field names: &lt;code&gt;type string start end line&lt;/code&gt;.</source>
          <target state="translated">生成器生成具有以下成员的5元组：令牌类型；令牌字符串；一个由两个整数组成的整数 &lt;code&gt;(srow, scol)&lt;/code&gt; ，用于指定标记在源中开始的行和列；一个由2个整数组成的整数（整数，行 &lt;code&gt;(erow, ecol)&lt;/code&gt; ，指定令牌在源代码中结束的行和列；以及找到令牌的行。传递的行（最后一个元组项）是&lt;em&gt;物理&lt;/em&gt;行。返回的5元组作为具有字段名称的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;： &lt;code&gt;type string start end line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17ee43c509fa42a8f8d550a159deebb456842df1" translate="yes" xml:space="preserve">
          <source>The generator&amp;rsquo;s &lt;code&gt;random()&lt;/code&gt; method will continue to produce the same sequence when the compatible seeder is given the same seed.</source>
          <target state="translated">当兼容的播种器被赋予相同的种子时，生成器的 &lt;code&gt;random()&lt;/code&gt; 方法将继续产生相同的序列。</target>
        </trans-unit>
        <trans-unit id="bbaa2259ab2d6ff4f3480ab940fa5e213e0d3c32" translate="yes" xml:space="preserve">
          <source>The geometric mean indicates the central tendency or typical value of the &lt;em&gt;data&lt;/em&gt; using the product of the values (as opposed to the arithmetic mean which uses their sum).</source>
          <target state="translated">几何平均值表示使用值乘积的&lt;em&gt;数据&lt;/em&gt;的中心趋势或典型值（与使用它们的和的算术平均值相反）。</target>
        </trans-unit>
        <trans-unit id="080762b361b4c8a6b2e066a52bd4410b164cfe6c" translate="yes" xml:space="preserve">
          <source>The getEncoding method will return the character encoding for this byte stream, or &lt;code&gt;None&lt;/code&gt; if unknown.</source>
          <target state="translated">getEncoding方法将返回此字节流的字符编码，如果未知，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a540a20b25f9284087c487141abf125cae2bb7f1" translate="yes" xml:space="preserve">
          <source>The gid is an integer, name and password are strings, and the member list is a list of strings. (Note that most users are not explicitly listed as members of the group they are in according to the password database. Check both databases to get complete membership information. Also note that a &lt;code&gt;gr_name&lt;/code&gt; that starts with a &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; is likely to be a YP/NIS reference and may not be accessible via &lt;a href=&quot;#grp.getgrnam&quot;&gt;&lt;code&gt;getgrnam()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#grp.getgrgid&quot;&gt;&lt;code&gt;getgrgid()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">gid是整数，名称和密码是字符串，成员列表是字符串列表。（请注意，根据密码数据库，大多数用户没有明确列为所属组的成员。请检查两个数据库以获取完整的成员资格信息。还要注意，以 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 开头的 &lt;code&gt;gr_name&lt;/code&gt; 可能是YP / NIS参考，可能无法通过&lt;a href=&quot;#grp.getgrnam&quot;&gt; &lt;code&gt;getgrnam()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#grp.getgrgid&quot;&gt; &lt;code&gt;getgrgid()&lt;/code&gt; &lt;/a&gt;进行访问。）</target>
        </trans-unit>
        <trans-unit id="be7824c416843b2ebf60509de5500876287a946e" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;__file__&lt;/code&gt; is added to the globals provided to doctests loaded from a text file using &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt;&lt;code&gt;DocFileSuite()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">全局 &lt;code&gt;__file__&lt;/code&gt; 被添加到使用&lt;a href=&quot;#doctest.DocFileSuite&quot;&gt; &lt;code&gt;DocFileSuite()&lt;/code&gt; &lt;/a&gt;从文本文件加载的doctest提供的全局变量中。</target>
        </trans-unit>
        <trans-unit id="011179b225dddb6c141f5d3d52be7a1af2795db2" translate="yes" xml:space="preserve">
          <source>The global character set registry is kept in the module global dictionary &lt;code&gt;CHARSETS&lt;/code&gt;.</source>
          <target state="translated">全局字符集注册表保存在模块全局字典 &lt;code&gt;CHARSETS&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d915b44137f7d4c272246eb284ccef71aecb6923" translate="yes" xml:space="preserve">
          <source>The global charset alias registry is kept in the module global dictionary &lt;code&gt;ALIASES&lt;/code&gt;.</source>
          <target state="translated">全局字符集别名注册表保存在模块全局字典 &lt;code&gt;ALIASES&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b3dbce170a266cfc1ec23c9ce296c1a408d30db8" translate="yes" xml:space="preserve">
          <source>The global dispatch table managed by the &lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt; module is available as &lt;code&gt;copyreg.dispatch_table&lt;/code&gt;. Therefore, one may choose to use a modified copy of &lt;code&gt;copyreg.dispatch_table&lt;/code&gt; as a private dispatch table.</source>
          <target state="translated">&lt;a href=&quot;copyreg#module-copyreg&quot;&gt; &lt;code&gt;copyreg&lt;/code&gt; &lt;/a&gt;模块管理的全局调度表可以作为 &lt;code&gt;copyreg.dispatch_table&lt;/code&gt; 使用。因此，可以选择将 &lt;code&gt;copyreg.dispatch_table&lt;/code&gt; 的修改后的副本用作私有调度表。</target>
        </trans-unit>
        <trans-unit id="f434fd177166e63293f974b10e23bde323f0edad" translate="yes" xml:space="preserve">
          <source>The globals for each &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; is formed by combining &lt;em&gt;globs&lt;/em&gt; and &lt;em&gt;extraglobs&lt;/em&gt; (bindings in &lt;em&gt;extraglobs&lt;/em&gt; override bindings in &lt;em&gt;globs&lt;/em&gt;). A new shallow copy of the globals dictionary is created for each &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;globs&lt;/em&gt; is not specified, then it defaults to the module&amp;rsquo;s &lt;em&gt;__dict__&lt;/em&gt;, if specified, or &lt;code&gt;{}&lt;/code&gt; otherwise. If &lt;em&gt;extraglobs&lt;/em&gt; is not specified, then it defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">对于每个全局&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;通过组合形成&lt;em&gt;水珠&lt;/em&gt;和&lt;em&gt;extraglobs&lt;/em&gt;（在绑定&lt;em&gt;extraglobs&lt;/em&gt;倍率绑定在&lt;em&gt;水珠&lt;/em&gt;）。为每个&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;创建一个新的globals字典的浅表副本。如果未指定&lt;em&gt;globs&lt;/em&gt;，则默认为模块的&lt;em&gt;__dict__&lt;/em&gt;（如果已指定），否则为 &lt;code&gt;{}&lt;/code&gt; 。如果未指定&lt;em&gt;Extraglobs&lt;/em&gt;，则默认为 &lt;code&gt;{}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ed999a4611487b61157dae0201cc7a90208cb62" translate="yes" xml:space="preserve">
          <source>The goal for regression testing is to try to break code. This leads to a few guidelines to be followed:</source>
          <target state="translated">回归测试的目标是尝试破解代码。这就引出了一些需要遵循的准则。</target>
        </trans-unit>
        <trans-unit id="56397f25b8e980842fd42c661829753f61feda6e" translate="yes" xml:space="preserve">
          <source>The goal of the default &lt;code&gt;_generate_next_value_()&lt;/code&gt; methods is to provide the next &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; in sequence with the last &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; provided, but the way it does this is an implementation detail and may change.</source>
          <target state="translated">默认的 &lt;code&gt;_generate_next_value_()&lt;/code&gt; 方法的目标是按顺序提供下一个&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;和所提供的最后一个&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;，但是这样做的方式是实现细节，并且可能会更改。</target>
        </trans-unit>
        <trans-unit id="621411565dd6b00b4807e619d6b6b63e50f07513" translate="yes" xml:space="preserve">
          <source>The grammar for a replacement field is as follows:</source>
          <target state="translated">替换领域的语法如下:</target>
        </trans-unit>
        <trans-unit id="116c779d9a5b118ddc605fb4a6c7899ef6092561" translate="yes" xml:space="preserve">
          <source>The groups are returned in the same format as &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt;&lt;code&gt;get_opcodes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些组以与&lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt; &lt;code&gt;get_opcodes()&lt;/code&gt; &lt;/a&gt;相同的格式返回。</target>
        </trans-unit>
        <trans-unit id="c80bee2646768da29f2362734e23a94eabb1e7f7" translate="yes" xml:space="preserve">
          <source>The handler will parse the request and the headers, then call a method specific to the request type. The method name is constructed from the request. For example, for the request method &lt;code&gt;SPAM&lt;/code&gt;, the &lt;code&gt;do_SPAM()&lt;/code&gt; method will be called with no arguments. All of the relevant information is stored in instance variables of the handler. Subclasses should not need to override or extend the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">处理程序将解析请求和标头，然后调用特定于请求类型的方法。方法名称是根据请求构造的。例如，对于请求方法 &lt;code&gt;SPAM&lt;/code&gt; ，将不带任何参数地调用 &lt;code&gt;do_SPAM()&lt;/code&gt; 方法。所有相关信息都存储在处理程序的实例变量中。子类不需要重写或扩展&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ac52196299af5010bacaefa1ebdfc8a0b13e2489" translate="yes" xml:space="preserve">
          <source>The handler will parse the request and the headers, then call a method specific to the request type. The method name is constructed from the request. For example, for the request method &lt;code&gt;SPAM&lt;/code&gt;, the &lt;code&gt;do_SPAM()&lt;/code&gt; method will be called with no arguments. All of the relevant information is stored in instance variables of the handler. Subclasses should not need to override or extend the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">处理程序将解析请求和标头，然后调用特定于请求类型的方法。方法名称是根据请求构造的。例如，对于请求方法 &lt;code&gt;SPAM&lt;/code&gt; ，将在不带参数的情况下调用 &lt;code&gt;do_SPAM()&lt;/code&gt; 方法。所有相关信息都存储在处理程序的实例变量中。子类不需要重写或扩展&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="eb88ec007c1bdda63b6ead05fa379b918cafb33e" translate="yes" xml:space="preserve">
          <source>The handlers raise this exception (or derived exceptions) when they run into a problem. It is a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">处理程序遇到问题时会引发此异常（或派生的异常）。它是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="bef8e02ff27c1330838ab97c460ba42f4affdf35" translate="yes" xml:space="preserve">
          <source>The handles must be temporarily made inheritable by &lt;a href=&quot;os#os.set_handle_inheritable&quot;&gt;&lt;code&gt;os.set_handle_inheritable()&lt;/code&gt;&lt;/a&gt; when passed to the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor, else &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised with Windows error &lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt; (87).</source>
          <target state="translated">手柄必须暂时取得由可继承&lt;a href=&quot;os#os.set_handle_inheritable&quot;&gt; &lt;code&gt;os.set_handle_inheritable()&lt;/code&gt; &lt;/a&gt;传递到时&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;构造，否则&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;将与Windows错误引发 &lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt; （87）。</target>
        </trans-unit>
        <trans-unit id="f0a59447999110092856d412a0fa668c41356124" translate="yes" xml:space="preserve">
          <source>The handling of such prefixes is done in a way analogous to protocol handling: there is a generic mechanism to look for prefixes which match the regular expression &lt;code&gt;^(?P&amp;lt;prefix&amp;gt;[a-z]+)://(?P&amp;lt;suffix&amp;gt;.*)$&lt;/code&gt; whereby, if the &lt;code&gt;prefix&lt;/code&gt; is recognised, the &lt;code&gt;suffix&lt;/code&gt; is processed in a prefix-dependent manner and the result of the processing replaces the string value. If the prefix is not recognised, then the string value will be left as-is.</source>
          <target state="translated">此类前缀的处理方式类似于协议处理：存在一种通用机制来查找与正则表达式 &lt;code&gt;^(?P&amp;lt;prefix&amp;gt;[a-z]+)://(?P&amp;lt;suffix&amp;gt;.*)$&lt;/code&gt; ，如果识别出 &lt;code&gt;prefix&lt;/code&gt; ，则 &lt;code&gt;suffix&lt;/code&gt; 将以与前缀相关的方式进行处理，并且处理结果将替换字符串值。如果未识别前缀，则字符串值将保持不变。</target>
        </trans-unit>
        <trans-unit id="53fd551aa742c5930436d3dcbf656dd0730743da" translate="yes" xml:space="preserve">
          <source>The harmonic mean is a type of average, a measure of the central location of the data. It is often appropriate when averaging rates or ratios, for example speeds.</source>
          <target state="translated">谐波平均数是一种平均数,是对数据中心位置的测量。它通常适用于平均速率或比率,例如速度。</target>
        </trans-unit>
        <trans-unit id="ce905947fa6c6d4744637e75f2a2a105b7eefee4" translate="yes" xml:space="preserve">
          <source>The harmonic mean, sometimes called the subcontrary mean, is the reciprocal of the arithmetic &lt;a href=&quot;#statistics.mean&quot;&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt; of the reciprocals of the data. For example, the harmonic mean of three values &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; and &lt;em&gt;c&lt;/em&gt; will be equivalent to &lt;code&gt;3/(1/a + 1/b + 1/c)&lt;/code&gt;. If one of the values is zero, the result will be zero.</source>
          <target state="translated">调和平均值，有时也称为次相反平均值，是数据倒数的算术&lt;a href=&quot;#statistics.mean&quot;&gt; &lt;code&gt;mean()&lt;/code&gt; &lt;/a&gt;的倒数。例如，三个值&lt;em&gt;a&lt;/em&gt;，&lt;em&gt;b&lt;/em&gt;和&lt;em&gt;c&lt;/em&gt;的谐波均值将等于 &lt;code&gt;3/(1/a + 1/b + 1/c)&lt;/code&gt; 。如果值之一为零，则结果将为零。</target>
        </trans-unit>
        <trans-unit id="5a055f529312abd9d8172f8d8529c67933a5509b" translate="yes" xml:space="preserve">
          <source>The header objects and their attributes are described in &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标头对象及其属性在&lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; &lt;/a&gt;中描述。</target>
        </trans-unit>
        <trans-unit id="674016e76c3cb66c514d5bce46957cc587411fac" translate="yes" xml:space="preserve">
          <source>The header to issue if the help output has a section for documented commands.</source>
          <target state="translated">如果帮助输出中有文档命令的部分,要发出的头。</target>
        </trans-unit>
        <trans-unit id="db36651f3f7813552c1c4041071864f70dd71672" translate="yes" xml:space="preserve">
          <source>The header to issue if the help output has a section for miscellaneous help topics (that is, there are &lt;code&gt;help_*()&lt;/code&gt; methods without corresponding &lt;code&gt;do_*()&lt;/code&gt; methods).</source>
          <target state="translated">如果帮助输出中包含有关其他帮助主题的部分（即，有 &lt;code&gt;help_*()&lt;/code&gt; 方法而没有相应的 &lt;code&gt;do_*()&lt;/code&gt; 方法），则会发出的标题。</target>
        </trans-unit>
        <trans-unit id="b704f03a5a952cd7ddcf867a76abc5bc03137b8d" translate="yes" xml:space="preserve">
          <source>The header to issue if the help output has a section for undocumented commands (that is, there are &lt;code&gt;do_*()&lt;/code&gt; methods without corresponding &lt;code&gt;help_*()&lt;/code&gt; methods).</source>
          <target state="translated">如果帮助输出中有未记录命令的部分，则发出的标题（即，有 &lt;code&gt;do_*()&lt;/code&gt; 方法没有相应的 &lt;code&gt;help_*()&lt;/code&gt; 方法）。</target>
        </trans-unit>
        <trans-unit id="157613515df46f9ddde850f2b53594e4dd5dc192" translate="yes" xml:space="preserve">
          <source>The headers argument should be a mapping of extra HTTP headers to send with the CONNECT request.</source>
          <target state="translated">headers参数应该是与CONNECT请求一起发送的额外HTTP头信息的映射。</target>
        </trans-unit>
        <trans-unit id="eb47deb0d60cbf8812da4a29bd84682ac99dd542" translate="yes" xml:space="preserve">
          <source>The help for this program will display &lt;code&gt;myprogram.py&lt;/code&gt; as the program name (regardless of where the program was invoked from):</source>
          <target state="translated">该程序的帮助将显示 &lt;code&gt;myprogram.py&lt;/code&gt; 作为程序名称（无论从何处调用该程序）：</target>
        </trans-unit>
        <trans-unit id="4579ce53124671d5adb9cd84001415e65dc5eaac" translate="yes" xml:space="preserve">
          <source>The help option is typically &lt;code&gt;-h/--help&lt;/code&gt;. The exception to this is if the &lt;code&gt;prefix_chars=&lt;/code&gt; is specified and does not include &lt;code&gt;-&lt;/code&gt;, in which case &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; are not valid options. In this case, the first character in &lt;code&gt;prefix_chars&lt;/code&gt; is used to prefix the help options:</source>
          <target state="translated">帮助选项通常是 &lt;code&gt;-h/--help&lt;/code&gt; 。例外是，如果指定了 &lt;code&gt;prefix_chars=&lt;/code&gt; 且不包含 &lt;code&gt;-&lt;/code&gt; ，则 &lt;code&gt;-h&lt;/code&gt; 和 &lt;code&gt;--help&lt;/code&gt; 无效。在这种情况下， &lt;code&gt;prefix_chars&lt;/code&gt; 中的第一个字符用于为帮助选项添加前缀：</target>
        </trans-unit>
        <trans-unit id="bbfdf31b6293417c5ce4f7179125682bf1f8ac5f" translate="yes" xml:space="preserve">
          <source>The high median is always a member of the data set. When the number of data points is odd, the middle value is returned. When it is even, the larger of the two middle values is returned.</source>
          <target state="translated">高中值总是数据集的成员。当数据点数量为奇数时,返回中间值。当它是偶数时,返回两个中间值中较大的一个。</target>
        </trans-unit>
        <trans-unit id="8a14b75bcba608d6362a105a10d4d34dcdb7ef64" translate="yes" xml:space="preserve">
          <source>The high-level method described above makes use of a simple API which provides mechanisms for third-party virtual environment creators to customize environment creation according to their needs, the &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">上面描述的高级方法使用了一个简单的API，该API为第三方虚拟环境创建者提供了根据其需求（&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;类）自定义环境创建的机制。</target>
        </trans-unit>
        <trans-unit id="280647272c3bfd8a3b605c491878ebc6dae8a17b" translate="yes" xml:space="preserve">
          <source>The highest possible limit is platform-dependent. A user may need to set the limit higher when they have a program that requires deep recursion and a platform that supports a higher limit. This should be done with care, because a too-high limit can lead to a crash.</source>
          <target state="translated">可能的最高限制是依赖于平台的。当用户的程序需要深度递归,而平台又支持更高的限制时,可能需要将限制设置得更高。这一点要小心,因为过高的限制可能会导致崩溃。</target>
        </trans-unit>
        <trans-unit id="342f901d9152ca3faaae558243c0cdbad893c9cd" translate="yes" xml:space="preserve">
          <source>The home page for &lt;code&gt;Tix&lt;/code&gt;. This includes links to additional documentation and downloads.</source>
          <target state="translated">&lt;code&gt;Tix&lt;/code&gt; 的主页。这包括其他文档和下载的链接。</target>
        </trans-unit>
        <trans-unit id="050fa76c810338418999cdc63aae7dd43c37dfb8" translate="yes" xml:space="preserve">
          <source>The host and port arguments specify the endpoint of the tunneled connection (i.e. the address included in the CONNECT request, &lt;em&gt;not&lt;/em&gt; the address of the proxy server).</source>
          <target state="translated">host和port参数指定隧道连接的端点（即CONNECT请求中包含的地址，&lt;em&gt;而不是&lt;/em&gt;代理服务器的地址）。</target>
        </trans-unit>
        <trans-unit id="d97d9e1de4c71a1f7df00793e47f4ea8c76105bc" translate="yes" xml:space="preserve">
          <source>The host mask, as an &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">主机掩码，作为&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="2068a7247616e20c79de41643857f4b18b1aec85" translate="yes" xml:space="preserve">
          <source>The hours, minutes and seconds are 0, and the DST flag is -1.</source>
          <target state="translated">时、分、秒为0,DST标志为-1。</target>
        </trans-unit>
        <trans-unit id="31f0fc945f713a05340d842d5c51be7d86d5e4f1" translate="yes" xml:space="preserve">
          <source>The ids for loggers are the logger names which would be used programmatically to obtain a reference to those loggers, e.g. &lt;code&gt;foo.bar.baz&lt;/code&gt;. The ids for Formatters and Filters can be any string value (such as &lt;code&gt;brief&lt;/code&gt;, &lt;code&gt;precise&lt;/code&gt; above) and they are transient, in that they are only meaningful for processing the configuration dictionary and used to determine connections between objects, and are not persisted anywhere when the configuration call is complete.</source>
          <target state="translated">记录器的ID是记录器名称，可以通过编程使用这些名称来获取对这些记录器的引用，例如 &lt;code&gt;foo.bar.baz&lt;/code&gt; 。格式化程序和过滤器的id可以是任何字符串值（例如， &lt;code&gt;brief&lt;/code&gt; ，上面的 &lt;code&gt;precise&lt;/code&gt; 值），并且它们是瞬态的，因为它们仅对处理配置字典有意义，并用于确定对象之间的连接，并且在配置调用完成。</target>
        </trans-unit>
        <trans-unit id="d8e1d71f7d4a70791960b261ec245075f8d8fa76" translate="yes" xml:space="preserve">
          <source>The image object can then be used wherever an &lt;code&gt;image&lt;/code&gt; option is supported by some widget (e.g. labels, buttons, menus). In these cases, Tk will not keep a reference to the image. When the last Python reference to the image object is deleted, the image data is deleted as well, and Tk will display an empty box wherever the image was used.</source>
          <target state="translated">然后，只要某些小部件（例如标签，按钮，菜单）支持 &lt;code&gt;image&lt;/code&gt; 选项，就可以使用图像对象。在这些情况下，Tk将不会保留对图像的引用。当删除对图像对象的最后一个Python引用时，图像数据也将被删除，并且Tk将在使用图像的任何位置显示一个空框。</target>
        </trans-unit>
        <trans-unit id="337b113c1c85f5e25b9b4e4dffd41726abff3154" translate="yes" xml:space="preserve">
          <source>The implementation adds a few special read-only attributes to several object types, where they are relevant. Some of these are not reported by the &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; built-in function.</source>
          <target state="translated">该实现向与它们相关的几种对象类型添加了一些特殊的只读属性。内置函数&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;不会报告其中的一些。</target>
        </trans-unit>
        <trans-unit id="a4d6ea654398459c8d685facdbb983c586debb4e" translate="yes" xml:space="preserve">
          <source>The implementation of I/O streams is organized as a hierarchy of classes. First &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs), which are used to specify the various categories of streams, then concrete classes providing the standard stream implementations.</source>
          <target state="translated">I / O流的实现被组织为类的层次结构。首先是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本类&lt;/a&gt;（ABC），用于指定流的各种类别，然后是提供标准流实现的具体类。</target>
        </trans-unit>
        <trans-unit id="2daf4d096f11e1f0d6906fba947d58d643b79fac" translate="yes" xml:space="preserve">
          <source>The implementation of I/O streams is organized as a hierarchy of classes. First &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs), which are used to specify the various categories of streams, then concrete classes providing the standard stream implementations.</source>
          <target state="translated">I / O流的实现被组织为类的层次结构。首先是用于指定流的各种类别的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;（ABC），然后是提供标准流实现的具体类。</target>
        </trans-unit>
        <trans-unit id="18b1871a9c46cbb234979e72b8ff89db3c9b3526" translate="yes" xml:space="preserve">
          <source>The implementation prompts for this information on the terminal; an application should override this method to use an appropriate interaction model in the local environment.</source>
          <target state="translated">实现在终端上提示这些信息,应用程序应该覆盖这个方法,在本地环境中使用适当的交互模型。</target>
        </trans-unit>
        <trans-unit id="a958e938ed3164014686a40e65033856ed45814d" translate="yes" xml:space="preserve">
          <source>The import statement</source>
          <target state="translated">进口声明</target>
        </trans-unit>
        <trans-unit id="0cdacda9f9de68ead1db809131fa756e459e79e1" translate="yes" xml:space="preserve">
          <source>The index Parameter</source>
          <target state="translated">指数参数</target>
        </trans-unit>
        <trans-unit id="4f38e66994b597a2ec6b5c5f4e631b0fb7f9dd98" translate="yes" xml:space="preserve">
          <source>The index after the last invalid data in &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; 中&lt;/a&gt;最后一个无效数据之后的索引。</target>
        </trans-unit>
        <trans-unit id="384ef63323de341899ee047e539cee7cd052dd31" translate="yes" xml:space="preserve">
          <source>The index in &lt;em&gt;pattern&lt;/em&gt; where compilation failed (may be &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">编译失败的&lt;em&gt;模式&lt;/em&gt;中的索引（可以为 &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0402c2d187e7a9245a1a1c891279c33f38f4a3ef" translate="yes" xml:space="preserve">
          <source>The index notation for Text widgets is very rich and is best described in the Tk man pages.</source>
          <target state="translated">Text widgets的索引符号非常丰富,最好在Tk man页面中描述。</target>
        </trans-unit>
        <trans-unit id="ef64ced167f3b38cf3fee549f5413fcf6cc4f886" translate="yes" xml:space="preserve">
          <source>The individual submodules are described in the following sections.</source>
          <target state="translated">各个子模块在下面的章节中描述。</target>
        </trans-unit>
        <trans-unit id="168644c57e62c797ca863dfc8e9f05171d5faeeb" translate="yes" xml:space="preserve">
          <source>The infinities are signed (affine) and can be used in arithmetic operations where they get treated as very large, indeterminate numbers. For instance, adding a constant to infinity gives another infinite result.</source>
          <target state="translated">无限数是有符号的(亲和数),可以用在算术运算中,它们会被当作非常大的、不确定的数来处理。例如,在无穷大上加一个常数,就会得到另一个无穷大的结果。</target>
        </trans-unit>
        <trans-unit id="fcf3d162830313939d6e41b7db91279dd49d4e18" translate="yes" xml:space="preserve">
          <source>The information from this event is not necessary for normal Namespace processing: the SAX XML reader will automatically replace prefixes for element and attribute names when the &lt;code&gt;feature_namespaces&lt;/code&gt; feature is enabled (the default).</source>
          <target state="translated">来自此事件的信息对于正常的名称空间处理不是必需的：启用 &lt;code&gt;feature_namespaces&lt;/code&gt; 功能（默认值）时，SAX XML阅读器将自动替换元素和属性名称的前缀。</target>
        </trans-unit>
        <trans-unit id="593947a26d0c7d5417fa282e634caf818fc32d83" translate="yes" xml:space="preserve">
          <source>The information is derived from all of the mailcap files found on the system. Settings in the user&amp;rsquo;s mailcap file &lt;code&gt;$HOME/.mailcap&lt;/code&gt; will override settings in the system mailcap files &lt;code&gt;/etc/mailcap&lt;/code&gt;, &lt;code&gt;/usr/etc/mailcap&lt;/code&gt;, and &lt;code&gt;/usr/local/etc/mailcap&lt;/code&gt;.</source>
          <target state="translated">该信息来自系统上所有的mailcap文件。用户mailcap文件 &lt;code&gt;$HOME/.mailcap&lt;/code&gt; 设置将覆盖系统mailcap文件 &lt;code&gt;/etc/mailcap&lt;/code&gt; ， &lt;code&gt;/usr/etc/mailcap&lt;/code&gt; 和 &lt;code&gt;/usr/local/etc/mailcap&lt;/code&gt; 中的设置。</target>
        </trans-unit>
        <trans-unit id="be4853678dd05f1bef86ae97ab2796f1610c9db8" translate="yes" xml:space="preserve">
          <source>The initial character set specified. Common aliases are converted to their &lt;em&gt;official&lt;/em&gt; email names (e.g. &lt;code&gt;latin_1&lt;/code&gt; is converted to &lt;code&gt;iso-8859-1&lt;/code&gt;). Defaults to 7-bit &lt;code&gt;us-ascii&lt;/code&gt;.</source>
          <target state="translated">指定的初始字符集。常用别名将转换为它们的&lt;em&gt;正式&lt;/em&gt;电子邮件名称（例如， &lt;code&gt;latin_1&lt;/code&gt; 将转换为 &lt;code&gt;iso-8859-1&lt;/code&gt; ）。默认为7位 &lt;code&gt;us-ascii&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3af741acb8e70d5c38db45f90abbeef937d0fb02" translate="yes" xml:space="preserve">
          <source>The initial name is set by the constructor. If no explicit name is provided to the constructor, a name of the form &amp;lsquo;Process-N&lt;sub&gt;1&lt;/sub&gt;:N&lt;sub&gt;2&lt;/sub&gt;:&amp;hellip;:N&lt;sub&gt;k&lt;/sub&gt;&amp;rsquo; is constructed, where each N&lt;sub&gt;k&lt;/sub&gt; is the N-th child of its parent.</source>
          <target state="translated">初始名称由构造函数设置。如果没有为构造函数提供显式名称，则构造形式为'Process-N &lt;sub&gt;1&lt;/sub&gt;：N &lt;sub&gt;2&lt;/sub&gt;：...：N &lt;sub&gt;k&lt;/sub&gt; '的名称，其中每个N &lt;sub&gt;k&lt;/sub&gt;是其父级的第N个子级。</target>
        </trans-unit>
        <trans-unit id="01240a600ee2dcef314bf3497a2fa5c42803f278" translate="yes" xml:space="preserve">
          <source>The initial value is inherited from the creating process.</source>
          <target state="translated">初始值从创建过程中继承。</target>
        </trans-unit>
        <trans-unit id="90c24a653f1ed3d0ad85257a774aec129199fba5" translate="yes" xml:space="preserve">
          <source>The initial value of the buffer can be set by providing &lt;em&gt;initial_value&lt;/em&gt;. If newline translation is enabled, newlines will be encoded as if by &lt;a href=&quot;#io.TextIOBase.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt;. The stream is positioned at the start of the buffer.</source>
          <target state="translated">可以通过提供&lt;em&gt;initial_value&lt;/em&gt;来设置缓冲区的初始值。如果启用了换行翻译，则换行将像通过&lt;a href=&quot;#io.TextIOBase.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;一样进行编码。流位于缓冲区的开头。</target>
        </trans-unit>
        <trans-unit id="911ddfa2919987daa1be8a401f583fa6db3f90c4" translate="yes" xml:space="preserve">
          <source>The input arguments.</source>
          <target state="translated">输入参数。</target>
        </trans-unit>
        <trans-unit id="50bf97706065ecec0970089c0032d4e3a715d20c" translate="yes" xml:space="preserve">
          <source>The input is complete; &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt; returned a code object. The code is executed by calling the &lt;a href=&quot;#code.InteractiveInterpreter.runcode&quot;&gt;&lt;code&gt;runcode()&lt;/code&gt;&lt;/a&gt; (which also handles run-time exceptions, except for &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;). &lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt;&lt;code&gt;runsource()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">输入完成；&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;返回一个代码对象。通过调用&lt;a href=&quot;#code.InteractiveInterpreter.runcode&quot;&gt; &lt;code&gt;runcode()&lt;/code&gt; &lt;/a&gt;执行代码（该代码还处理运行时异常，但&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;除外）。&lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt; &lt;code&gt;runsource()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a1f14ff96f1edbf542cd8d172aacbd7c70213c3" translate="yes" xml:space="preserve">
          <source>The input is incomplete, and more input is required; &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt;&lt;code&gt;runsource()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">输入不完整，需要更多输入；&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;None&lt;/code&gt; 。&lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt; &lt;code&gt;runsource()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d8a52ee0e926e030e7faf4e9be5c273457a4e42" translate="yes" xml:space="preserve">
          <source>The input is incorrect; &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt; raised an exception (&lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;). A syntax traceback will be printed by calling the &lt;a href=&quot;#code.InteractiveInterpreter.showsyntaxerror&quot;&gt;&lt;code&gt;showsyntaxerror()&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt;&lt;code&gt;runsource()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">输入错误；&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;引发异常（&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;）。将通过调用&lt;a href=&quot;#code.InteractiveInterpreter.showsyntaxerror&quot;&gt; &lt;code&gt;showsyntaxerror()&lt;/code&gt; &lt;/a&gt;方法来打印语法回溯。&lt;a href=&quot;#code.InteractiveInterpreter.runsource&quot;&gt; &lt;code&gt;runsource()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b1dd645401e5a1f79b707db541edbde2b57ebd3" translate="yes" xml:space="preserve">
          <source>The input stream from which this &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance is reading characters.</source>
          <target state="translated">此&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;实例从其读取字符的输入流。</target>
        </trans-unit>
        <trans-unit id="4bdf1c2a1e06caa4f16300713f91090fd4ec6f17" translate="yes" xml:space="preserve">
          <source>The installed completer function is invoked by the &lt;em&gt;entry_func&lt;/em&gt; callback passed to &lt;code&gt;rl_completion_matches()&lt;/code&gt; in the underlying library. The &lt;em&gt;text&lt;/em&gt; string comes from the first parameter to the &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; callback of the underlying library.</source>
          <target state="translated">已安装的completer函数由传递到基础库中 &lt;code&gt;rl_completion_matches()&lt;/code&gt; 的&lt;em&gt;entry_func&lt;/em&gt;回调调用。该&lt;em&gt;文本&lt;/em&gt;字符串来自于第一个参数 &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; 底层库的回调。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a45c0350113f984aa330a93552ee38009ca4e2b6" translate="yes" xml:space="preserve">
          <source>The instance&amp;rsquo;s values will be different for separate threads.</source>
          <target state="translated">对于单独的线程，实例的值将有所不同。</target>
        </trans-unit>
        <trans-unit id="7aeee48dd3b208a03dfbddf9c109b56675841d3f" translate="yes" xml:space="preserve">
          <source>The int type implements the &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;numbers.Integral&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;. In addition, it provides a few more methods:</source>
          <target state="translated">int类型实现&lt;a href=&quot;numbers#numbers.Integral&quot;&gt; &lt;code&gt;numbers.Integral&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。此外，它还提供了一些其他方法：</target>
        </trans-unit>
        <trans-unit id="8fbc6ba511e6213ffe0e905ccce1b7603af4d87b" translate="yes" xml:space="preserve">
          <source>The int type implements the &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;numbers.Integral&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;. In addition, it provides a few more methods:</source>
          <target state="translated">int类型实现&lt;a href=&quot;numbers#numbers.Integral&quot;&gt; &lt;code&gt;numbers.Integral&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。此外，它还提供了一些其他方法：</target>
        </trans-unit>
        <trans-unit id="979b8dbfddfc8ab9cbf5ea897f421dd8bf5a702c" translate="yes" xml:space="preserve">
          <source>The integer division operator &lt;code&gt;//&lt;/code&gt; behaves analogously, returning the integer part of the true quotient (truncating towards zero) rather than its floor, so as to preserve the usual identity &lt;code&gt;x == (x // y) * y + x % y&lt;/code&gt;:</source>
          <target state="translated">整数除法运算符 &lt;code&gt;//&lt;/code&gt; 的行为类似，返回真商的整数部分（向零截断）而不是其下限，以便保留通常的标识 &lt;code&gt;x == (x // y) * y + x % y&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4ca9bbf40760e2c28730193d5cf1a62f8571ee2d" translate="yes" xml:space="preserve">
          <source>The integer index of the last matched capturing group, or &lt;code&gt;None&lt;/code&gt; if no group was matched at all. For example, the expressions &lt;code&gt;(a)b&lt;/code&gt;, &lt;code&gt;((a)(b))&lt;/code&gt;, and &lt;code&gt;((ab))&lt;/code&gt; will have &lt;code&gt;lastindex == 1&lt;/code&gt; if applied to the string &lt;code&gt;'ab'&lt;/code&gt;, while the expression &lt;code&gt;(a)(b)&lt;/code&gt; will have &lt;code&gt;lastindex == 2&lt;/code&gt;, if applied to the same string.</source>
          <target state="translated">最后匹配的捕获组的整数索引；如果根本没有匹配的组，则为 &lt;code&gt;None&lt;/code&gt; 。例如，表达式 &lt;code&gt;(a)b&lt;/code&gt; ， &lt;code&gt;((a)(b))&lt;/code&gt; ，和 &lt;code&gt;((ab))&lt;/code&gt; 将具有 &lt;code&gt;lastindex == 1&lt;/code&gt; 如果施加到串 &lt;code&gt;'ab'&lt;/code&gt; ，而表达式 &lt;code&gt;(a)(b)&lt;/code&gt; 将如果应用于相同的字符串，则具有 &lt;code&gt;lastindex == 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75451b0732e8ead28c286c690593bd66708fe14e" translate="yes" xml:space="preserve">
          <source>The integer is represented using &lt;em&gt;length&lt;/em&gt; bytes. An &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised if the integer is not representable with the given number of bytes.</source>
          <target state="translated">整数使用&lt;em&gt;长度&lt;/em&gt;字节表示。一个&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;如果整数是不能表示与给定的字节数上升。</target>
        </trans-unit>
        <trans-unit id="7fe6db748a1c03f0058af1e2fac43ded456cb44f" translate="yes" xml:space="preserve">
          <source>The integer type is described in &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;.</source>
          <target state="translated">整数类型在&lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;数值类型中&lt;/a&gt;描述-int，float，complex。</target>
        </trans-unit>
        <trans-unit id="163c5d035b77569be69dfb2f1d78884819913773" translate="yes" xml:space="preserve">
          <source>The interactive shell omits the traceback header line for some &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;s. But doctest uses the traceback header line to distinguish exceptions from non-exceptions. So in the rare case where you need to test a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; that omits the traceback header, you will need to manually add the traceback header line to your test example.</source>
          <target state="translated">交互式外壳省略了某些&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;的回溯标头行。但是doctest使用traceback标头行将异常与非异常区分开。因此，在极少数情况下，您需要测试忽略回溯标头的&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;，您将需要手动将回溯标头行添加到测试示例中。</target>
        </trans-unit>
        <trans-unit id="a962b729b1c8fdb63836b438e55afdc22f8824ff" translate="yes" xml:space="preserve">
          <source>The interface consists of two simple methods. Using the methods you can process form data in a generic way, without the need to worry whether only one or more values were posted under one name.</source>
          <target state="translated">该接口由两个简单的方法组成。使用这些方法,你可以以通用的方式处理表单数据,而不必担心是否只有一个或多个值被发布在一个名称下。</target>
        </trans-unit>
        <trans-unit id="51f3e9f1c9a1c82d20480b7eeaf1d9d974cc5b1e" translate="yes" xml:space="preserve">
          <source>The interface is currently defined as follows. The &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method takes no argument and shall return either a string or preferably a tuple (the returned object is often referred to as the &amp;ldquo;reduce value&amp;rdquo;).</source>
          <target state="translated">该接口当前定义如下。所述&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;方法没有参数和应返回字符串或优选一个元组（返回的对象通常被称为&amp;ldquo;减少值&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="dc72a584349e9214e08df92c45aef5b1dbf7ab27" translate="yes" xml:space="preserve">
          <source>The interface provided by this module is very similar to that of the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module. However, note that &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; thread-safe, unlike &lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt;&lt;code&gt;bz2.BZ2File&lt;/code&gt;&lt;/a&gt;, so if you need to use a single &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; instance from multiple threads, it is necessary to protect it with a lock.</source>
          <target state="translated">该模块提供的接口与&lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;模块的接口非常相似。但是请注意，&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;是&lt;em&gt;不是&lt;/em&gt;线程安全的，不像&lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt; &lt;code&gt;bz2.BZ2File&lt;/code&gt; &lt;/a&gt;，所以如果你需要使用一个单一的&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;从多个线程情况下，有必要用锁来保护它。</target>
        </trans-unit>
        <trans-unit id="2c7a7160e2db8bd2dd860dc18f56ade5ea2177e1" translate="yes" xml:space="preserve">
          <source>The internal block size of the hash algorithm in bytes.</source>
          <target state="translated">哈希算法的内部块大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="03abd148a400405ca42f9b10fcc4c70063e3a3d5" translate="yes" xml:space="preserve">
          <source>The interpretation of &amp;ldquo;file size&amp;rdquo; changes according to the file type. For plain files this is the size of the file in bytes. For FIFOs and sockets under most flavors of Unix (including Linux in particular), the &amp;ldquo;size&amp;rdquo; is the number of bytes waiting to be read at the time of the call to &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;; this can sometimes be useful, especially for polling one of these special files after a non-blocking open. The meaning of the size field for other character and block devices varies more, depending on the implementation of the underlying system call.</source>
          <target state="translated">&amp;ldquo;文件大小&amp;rdquo;的解释根据文件类型而变化。对于纯文件，这是文件大小，以字节为单位。对于大多数Unix系统（尤其是Linux）下的FIFO和套接字，&amp;ldquo;大小&amp;rdquo;是在调用&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;等待读取的字节数。.lstat（） ;有时这很有用，特别是在非阻塞打开后轮询这些特殊文件之一时。其他字符和块设备的size字段的含义变化更多，具体取决于基础系统调用的实现。</target>
        </trans-unit>
        <trans-unit id="438ad5eaadf08fa55fa89520ff2509c442e60ebb" translate="yes" xml:space="preserve">
          <source>The interpreter is about to execute a new line of code or re-execute the condition of a loop. The local trace function is called; &lt;em&gt;arg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;; the return value specifies the new local trace function. See &lt;code&gt;Objects/lnotab_notes.txt&lt;/code&gt; for a detailed explanation of how this works. Per-line events may be disabled for a frame by setting &lt;code&gt;f_trace_lines&lt;/code&gt; to &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; on that frame.</source>
          <target state="translated">解释器将要执行新的代码行或重新执行循环条件。局部跟踪函数被调用；&lt;em&gt;arg&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ;返回值指定新的本地跟踪函数。有关其工作原理的详细说明，请参见 &lt;code&gt;Objects/lnotab_notes.txt&lt;/code&gt; 。通过在该帧 &lt;code&gt;f_trace_lines&lt;/code&gt; 设置为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，可以禁用该帧的每行事件。</target>
        </trans-unit>
        <trans-unit id="05d2d4d36f9b84be941684423f666d5858384c7f" translate="yes" xml:space="preserve">
          <source>The interpreter is about to execute a new opcode (see &lt;a href=&quot;dis#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; for opcode details). The local trace function is called; &lt;em&gt;arg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;; the return value specifies the new local trace function. Per-opcode events are not emitted by default: they must be explicitly requested by setting &lt;code&gt;f_trace_opcodes&lt;/code&gt; to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; on the frame.</source>
          <target state="translated">解释器将执行新的操作码（有关操作码的详细信息，请参见&lt;a href=&quot;dis#module-dis&quot;&gt; &lt;code&gt;dis&lt;/code&gt; &lt;/a&gt;）。局部跟踪函数被调用；&lt;em&gt;arg&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ; 返回值指定新的本地跟踪函数。每个操作码事件默认情况下都不发出：必须通过在框架 &lt;code&gt;f_trace_opcodes&lt;/code&gt; 设置为&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;来显式请求它们。</target>
        </trans-unit>
        <trans-unit id="ba7c5536ace67e318f08d21d0cb3f1d81aa9054b" translate="yes" xml:space="preserve">
          <source>The interpreter stack</source>
          <target state="translated">解释器堆栈</target>
        </trans-unit>
        <trans-unit id="3a7917658505e7d533ba455bedd0fed06a48c193" translate="yes" xml:space="preserve">
          <source>The interpreter supports several other kinds of objects. Most of these support only one or two operations.</source>
          <target state="translated">解释器支持其他几种对象。这些对象大多只支持一两个操作。</target>
        </trans-unit>
        <trans-unit id="dcf8a72b9d3d3a430d8e38722f72101fcf685b16" translate="yes" xml:space="preserve">
          <source>The interpreter&amp;rsquo;s own prompts and its error messages go to &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">解释器自己的提示及其错误消息发送到 &lt;code&gt;stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c5319f23805e5b59e8472cb6037b15ab9f55160" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;a href=&quot;#email.utils.format_datetime&quot;&gt;&lt;code&gt;format_datetime()&lt;/code&gt;&lt;/a&gt;. Performs the same function as &lt;a href=&quot;#email.utils.parsedate&quot;&gt;&lt;code&gt;parsedate()&lt;/code&gt;&lt;/a&gt;, but on success returns a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. If the input date has a timezone of &lt;code&gt;-0000&lt;/code&gt;, the &lt;code&gt;datetime&lt;/code&gt; will be a naive &lt;code&gt;datetime&lt;/code&gt;, and if the date is conforming to the RFCs it will represent a time in UTC but with no indication of the actual source timezone of the message the date comes from. If the input date has any other valid timezone offset, the &lt;code&gt;datetime&lt;/code&gt; will be an aware &lt;code&gt;datetime&lt;/code&gt; with the corresponding a &lt;a href=&quot;datetime#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;datetime#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.utils.format_datetime&quot;&gt; &lt;code&gt;format_datetime()&lt;/code&gt; &lt;/a&gt;的反函数。执行与&lt;a href=&quot;#email.utils.parsedate&quot;&gt; &lt;code&gt;parsedate()&lt;/code&gt; &lt;/a&gt;相同的功能，但成功返回&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;。如果输入日期的时区为 &lt;code&gt;-0000&lt;/code&gt; ，则 &lt;code&gt;datetime&lt;/code&gt; 将是一个简单的 &lt;code&gt;datetime&lt;/code&gt; ；如果日期符合RFC，则它将以UTC表示一个时间，但没有指示消息的实际来源时区从。如果输入的日期有任何其他有效的时区偏移量， &lt;code&gt;datetime&lt;/code&gt; 将是一个知道 &lt;code&gt;datetime&lt;/code&gt; 与相应的一个&lt;a href=&quot;datetime#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;datetime#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3f436e82da8db30cb17224562f2fe471acaf805" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;a href=&quot;#email.utils.parseaddr&quot;&gt;&lt;code&gt;parseaddr()&lt;/code&gt;&lt;/a&gt;, this takes a 2-tuple of the form &lt;code&gt;(realname,
email_address)&lt;/code&gt; and returns the string value suitable for a &lt;em&gt;To&lt;/em&gt; or &lt;em&gt;Cc&lt;/em&gt; header. If the first element of &lt;em&gt;pair&lt;/em&gt; is false, then the second element is returned unmodified.</source>
          <target state="translated">&lt;a href=&quot;#email.utils.parseaddr&quot;&gt; &lt;code&gt;parseaddr()&lt;/code&gt; &lt;/a&gt;的逆函数，采用2元组的形式 &lt;code&gt;(realname, email_address)&lt;/code&gt; 并返回适用于&lt;em&gt;To&lt;/em&gt;或&lt;em&gt;Cc&lt;/em&gt;标头的字符串值。如果&lt;em&gt;pair&lt;/em&gt;的第一个元素为false，则第二个元素将不做任何修改就返回。</target>
        </trans-unit>
        <trans-unit id="fefd3e04e0fbb3688fc42759eebadd4a2616e337" translate="yes" xml:space="preserve">
          <source>The issue is that even if you mock out the call to &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; it is the &lt;em&gt;returned object&lt;/em&gt; that is used as a context manager (and has &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; called).</source>
          <target state="translated">问题是，即使你模拟出调用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;这是&lt;em&gt;返回的对象&lt;/em&gt;是用作上下文管理器（并具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;调用）。</target>
        </trans-unit>
        <trans-unit id="1fe9219e4826adf443eff8b200c8d6d019223d6c" translate="yes" xml:space="preserve">
          <source>The issue is that even if you mock out the call to &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; it is the &lt;em&gt;returned object&lt;/em&gt; that is used as a context manager (and has &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; called).</source>
          <target state="translated">问题是，即使你模拟出调用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;这是&lt;em&gt;返回的对象&lt;/em&gt;是用作上下文管理器（并具有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;调用）。</target>
        </trans-unit>
        <trans-unit id="ca7575c226a0359045987634aead5418cc5184ef" translate="yes" xml:space="preserve">
          <source>The items and all of their descendants are still present, and may be reinserted at another point in the tree, but will not be displayed.</source>
          <target state="translated">这些物品及其所有的后代仍然存在,可以在树的另一个点上重新插入,但不会显示。</target>
        </trans-unit>
        <trans-unit id="4a29f27aafd7c4fbc90565afdb89bc57730a7634" translate="yes" xml:space="preserve">
          <source>The items can be any type accepted by the operand&amp;rsquo;s &lt;a href=&quot;#operator.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. Dictionaries accept any hashable value. Lists, tuples, and strings accept an index or a slice:</source>
          <target state="translated">这些项目可以是操作数的&lt;a href=&quot;#operator.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法接受的任何类型。字典接受任何可哈希值。列表，元组和字符串接受索引或切片：</target>
        </trans-unit>
        <trans-unit id="bdc953aeb10907bbc5198ee20364c13eebd711e8" translate="yes" xml:space="preserve">
          <source>The iterator generates a series of &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; named tuples giving the details of each operation in the supplied code.</source>
          <target state="translated">迭代器生成一系列名为元组的&lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt;，在提供的代码中给出每个操作的详细信息。</target>
        </trans-unit>
        <trans-unit id="9d0f19f81bfdcc59fee1b74fd4d26070697d7379" translate="yes" xml:space="preserve">
          <source>The iterator objects themselves are required to support the following two methods, which together form the &lt;em&gt;iterator protocol&lt;/em&gt;:</source>
          <target state="translated">需要迭代器对象本身支持以下两种方法，它们共同构成了&lt;em&gt;迭代器协议&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c127c0df086cf632c4c5ff7440003447aa245a64" translate="yes" xml:space="preserve">
          <source>The joined output of calls to the &lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method is the same as if all the single inputs were joined into one, and this input was encoded/decoded with the stateless encoder/decoder.</source>
          <target state="translated">对&lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;方法的调用的合并输出与将所有单个输入合并为一个相同，并且使用无状态编码器/解码器对该输入进行编码/解码。</target>
        </trans-unit>
        <trans-unit id="40164e2efd0e4a1ad74dc48fce25ae3c60346d4b" translate="yes" xml:space="preserve">
          <source>The json module implements a subset of JavaScript syntax which can also be used for this purpose.</source>
          <target state="translated">json模块实现了JavaScript语法的一个子集,也可以用于这个目的。</target>
        </trans-unit>
        <trans-unit id="061bffc3b0c36f0cf3b43e8fa55fc7f1bfb59602" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;'()'&lt;/code&gt; has been used as the special key because it is not a valid keyword parameter name, and so will not clash with the names of the keyword arguments used in the call. The &lt;code&gt;'()'&lt;/code&gt; also serves as a mnemonic that the corresponding value is a callable.</source>
          <target state="translated">键 &lt;code&gt;'()'&lt;/code&gt; 已用作特殊键，因为它不是有效的关键字参数名称，因此不会与调用中使用的关键字参数的名称冲突。在 &lt;code&gt;'()'&lt;/code&gt; 也用作助记符相应值是一个可调用。</target>
        </trans-unit>
        <trans-unit id="4a2fc7414d7e109453be0f1ab99047bcd601ae56" translate="yes" xml:space="preserve">
          <source>The key benefit of having the logging API provided by a standard library module is that all Python modules can participate in logging, so your application log can include your own messages integrated with messages from third-party modules.</source>
          <target state="translated">由标准库模块提供日志API的主要好处是,所有的Python模块都可以参与日志记录,所以你的应用日志可以包括你自己的消息和来自第三方模块的消息集成在一起。</target>
        </trans-unit>
        <trans-unit id="699442994a289dac727d3c0dce4747dff2f3e0fc" translate="yes" xml:space="preserve">
          <source>The key identified by the &lt;em&gt;key&lt;/em&gt; parameter must have been opened with &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">由&lt;em&gt;key&lt;/em&gt;参数标识的&lt;em&gt;密钥&lt;/em&gt;必须已通过&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;访问权限打开。</target>
        </trans-unit>
        <trans-unit id="ba84385b37d685583a4049bdcfd906d3a6f6d9ff" translate="yes" xml:space="preserve">
          <source>The key is to do the patching in the right namespace. See the section &lt;a href=&quot;#id6&quot;&gt;where to patch&lt;/a&gt;.</source>
          <target state="translated">关键是在正确的名称空间中进行修补。请参阅&lt;a href=&quot;#id6&quot;&gt;修补程序&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="09994237c609f442d527a3b937ecbd46cc6b5078" translate="yes" xml:space="preserve">
          <source>The key is to patch out &lt;code&gt;SomeClass&lt;/code&gt; where it is used (or where it is looked up). In this case &lt;code&gt;some_function&lt;/code&gt; will actually look up &lt;code&gt;SomeClass&lt;/code&gt; in module b, where we have imported it. The patching should look like:</source>
          <target state="translated">关键是在使用（或在其中查找）的地方修补 &lt;code&gt;SomeClass&lt;/code&gt; 。在这种情况下， &lt;code&gt;some_function&lt;/code&gt; 实际上将在我们将其导入到的模块b中查找 &lt;code&gt;SomeClass&lt;/code&gt; 。修补程序应如下所示：</target>
        </trans-unit>
        <trans-unit id="fa3481269bf45a1c67f29407c0512754b2986c60" translate="yes" xml:space="preserve">
          <source>The keys are case-insensitive and their default value is &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">键是区分大小写，并且它们的默认值是 &lt;code&gt;''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03fdaa86777072e03a16a136e354ad81249c970a" translate="yes" xml:space="preserve">
          <source>The keys in the dictionary passed in &lt;em&gt;extra&lt;/em&gt; should not clash with the keys used by the logging system. (See the &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; documentation for more information on which keys are used by the logging system.)</source>
          <target state="translated">&lt;em&gt;额外&lt;/em&gt;传入的字典中的键不应与日志系统使用的键冲突。（有关日志记录系统使用哪些键的更多信息，请参见&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;文档。）</target>
        </trans-unit>
        <trans-unit id="b1300d1613b84592f2474c0dcb0a65568bb4315f" translate="yes" xml:space="preserve">
          <source>The keys of the returned data structure &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; name the metadata keywords, and their values are returned unparsed from the distribution metadata:</source>
          <target state="translated">返回的数据结构&lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;的键命名元数据关键字，并且其值不从分发元数据中解析而返回：</target>
        </trans-unit>
        <trans-unit id="ad3767fc1845f08027609c64c86cdbb4705d70c6" translate="yes" xml:space="preserve">
          <source>The keyword arguments that will be supplied when the &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; object is called.</source>
          <target state="translated">调用&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt;对象时将提供的关键字参数。</target>
        </trans-unit>
        <trans-unit id="e878f3fc95ba63b2ca9864baa791a7fb92d631e4" translate="yes" xml:space="preserve">
          <source>The lack of memory or disk volume would lead to decompression failed. For example, decompression bombs (aka &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_bomb&quot;&gt;ZIP bomb&lt;/a&gt;) apply to zipfile library that can cause disk volume exhaustion.</source>
          <target state="translated">内存或磁盘容量不足会导致解压缩失败。例如，解压缩炸弹（又名&lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_bomb&quot;&gt;ZIP炸弹&lt;/a&gt;）适用于zipfile库，它可能导致磁盘卷耗尽。</target>
        </trans-unit>
        <trans-unit id="9ffb219d74b6ece8dd161b7424f6185fad907847" translate="yes" xml:space="preserve">
          <source>The language reference for the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句的语言参考。</target>
        </trans-unit>
        <trans-unit id="1ca08c1e77a2916a525cd3def17d8725bd9c875a" translate="yes" xml:space="preserve">
          <source>The language reference for the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句的语言参考。</target>
        </trans-unit>
        <trans-unit id="68e00f8d6f3a921e236f51de07c124755eb15f37" translate="yes" xml:space="preserve">
          <source>The large data objects to be pickled must implement a &lt;a href=&quot;#object.__reduce_ex__&quot;&gt;&lt;code&gt;__reduce_ex__()&lt;/code&gt;&lt;/a&gt; method specialized for protocol 5 and higher, which returns a &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; instance (instead of e.g. a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object) for any large data.</source>
          <target state="translated">要腌制的大数据对象必须实现专用于协议5和更高版本的&lt;a href=&quot;#object.__reduce_ex__&quot;&gt; &lt;code&gt;__reduce_ex__()&lt;/code&gt; &lt;/a&gt;方法，该方法将为任何大数据返回&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;实例（而不是例如&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象）。</target>
        </trans-unit>
        <trans-unit id="9fd6b021ccba4c20527e39206aae9a5762d1f9bf" translate="yes" xml:space="preserve">
          <source>The largest area of mapped memory which the process may occupy.</source>
          <target state="translated">进程可能占用的映射内存的最大区域。</target>
        </trans-unit>
        <trans-unit id="f252a89846a5b8a765de872bd3fd9eaf81718527" translate="yes" xml:space="preserve">
          <source>The largest year number allowed in a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. &lt;a href=&quot;#datetime.MAXYEAR&quot;&gt;&lt;code&gt;MAXYEAR&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;9999&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象中允许的最大年份数字。&lt;a href=&quot;#datetime.MAXYEAR&quot;&gt; &lt;code&gt;MAXYEAR&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;9999&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27f336ad56fea8353ecf6927e2ddfbc131d9f99e" translate="yes" xml:space="preserve">
          <source>The last child of the node, if there are any, or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">节点的最后一个子节点（如果有）或 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="f5eddea39611a409d920003c195a69723d0a0ff2" translate="yes" xml:space="preserve">
          <source>The last nonempty command prefix seen.</source>
          <target state="translated">最后看到的非空命令前缀。</target>
        </trans-unit>
        <trans-unit id="c93316bbcd638d9105156a87761f25f1c48ed03b" translate="yes" xml:space="preserve">
          <source>The last three lines (starting with &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;) are compared against the exception&amp;rsquo;s type and detail, and the rest are ignored.</source>
          <target state="translated">将最后三行（以&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;开头）与异常的类型和详细信息进行比较，其余的行将被忽略。</target>
        </trans-unit>
        <trans-unit id="814cff0678bb087583201e49ec61d6e354b8e223" translate="yes" xml:space="preserve">
          <source>The last triple is a dummy, and has the value &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt;. It is the only triple with &lt;code&gt;n == 0&lt;/code&gt;. If &lt;code&gt;(i, j, n)&lt;/code&gt; and &lt;code&gt;(i', j', n')&lt;/code&gt; are adjacent triples in the list, and the second is not the last triple in the list, then &lt;code&gt;i+n &amp;lt; i'&lt;/code&gt; or &lt;code&gt;j+n &amp;lt; j'&lt;/code&gt;; in other words, adjacent triples always describe non-adjacent equal blocks.</source>
          <target state="translated">最后一个三元组是一个虚拟对象，其值是 &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt; 。它是 &lt;code&gt;n == 0&lt;/code&gt; 的唯一三元组。如果 &lt;code&gt;(i, j, n)&lt;/code&gt; 和 &lt;code&gt;(i', j', n')&lt;/code&gt; 是列表中的相邻三元组，而第二个不是列表中的最后一个三元组，则 &lt;code&gt;i+n &amp;lt; i'&lt;/code&gt; 或 &lt;code&gt;j+n &amp;lt; j'&lt;/code&gt; ;换句话说，相邻的三元组总是描述不相邻的相等块。</target>
        </trans-unit>
        <trans-unit id="a1b8685c24c17534e39efb60cae137482f9ec418" translate="yes" xml:space="preserve">
          <source>The last variation is &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;. Like &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; members can be combined using the bitwise operators (&amp;amp;, |, ^, ~). Unlike &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, they cannot be combined with, nor compared against, any other &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; enumeration, nor &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;. While it is possible to specify the values directly it is recommended to use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; as the value and let &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; select an appropriate value.</source>
          <target state="translated">最后一个变体是&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;。与&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;一样，可以使用按位运算符（＆，|，^，〜）组合&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;成员。与&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;不同，它们不能与任何其他&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;枚举或&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;组合或比较。尽管可以直接指定值，但建议使用&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;作为值，并让&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;选择适当的值。</target>
        </trans-unit>
        <trans-unit id="6ab314fce26bc86e9964e587f8e7ca1920ea8436" translate="yes" xml:space="preserve">
          <source>The latest representable &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;datetime(MAXYEAR, 12, 31, 23, 59,
59, 999999, tzinfo=None)&lt;/code&gt;.</source>
          <target state="translated">最新的表示的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;datetime(MAXYEAR, 12, 31, 23, 59, 59, 999999, tzinfo=None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffbd94c8b6731bc985c2a9e5c296d5ad38ae6508" translate="yes" xml:space="preserve">
          <source>The latest representable &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;time(23, 59, 59, 999999)&lt;/code&gt;.</source>
          <target state="translated">最新表示的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;time(23, 59, 59, 999999)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e26fabc7e2019dbb9af113e30e22e959d1e2c3f" translate="yes" xml:space="preserve">
          <source>The latest representable date, &lt;code&gt;date(MAXYEAR, 12, 31)&lt;/code&gt;.</source>
          <target state="translated">最新的可表示日期 &lt;code&gt;date(MAXYEAR, 12, 31)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f6c7f13f3607cf918c96b2deadeb84b0dd01cba" translate="yes" xml:space="preserve">
          <source>The latter example&amp;rsquo;s signature is essentially the overloading of &lt;code&gt;(str, str) -&amp;gt; str&lt;/code&gt; and &lt;code&gt;(bytes, bytes) -&amp;gt; bytes&lt;/code&gt;. Also note that if the arguments are instances of some subclass of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, the return type is still plain &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">后一个示例的签名实质上是 &lt;code&gt;(str, str) -&amp;gt; str&lt;/code&gt; 和 &lt;code&gt;(bytes, bytes) -&amp;gt; bytes&lt;/code&gt; 的重载。还要注意，如果参数是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;的某些子类的实例，则返回类型仍然是纯&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="660e3f6815f15682cf0ff1377f00b4c6f71b340f" translate="yes" xml:space="preserve">
          <source>The latter two functions perform best for smaller values of &lt;em&gt;n&lt;/em&gt;. For larger values, it is more efficient to use the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; function. Also, when &lt;code&gt;n==1&lt;/code&gt;, it is more efficient to use the built-in &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; functions. If repeated usage of these functions is required, consider turning the iterable into an actual heap.</source>
          <target state="translated">对于&lt;em&gt;n的&lt;/em&gt;较小值，后两个函数表现最佳。对于较大的值，使用&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;函数更为有效。同样，当 &lt;code&gt;n==1&lt;/code&gt; ，使用内置的&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;函数会更有效。如果需要重复使用这些功能，请考虑将可迭代对象转换为实际堆。</target>
        </trans-unit>
        <trans-unit id="7da03b2d60934473fcacd18e11917c208e302748" translate="yes" xml:space="preserve">
          <source>The least significant bit of the Unicode character is the rightmost x bit.</source>
          <target state="translated">Unicode字符的最小有效位是最右边的x位。</target>
        </trans-unit>
        <trans-unit id="8b3b2afbfe422c8067e3beb6538ca2c59ba607be" translate="yes" xml:space="preserve">
          <source>The left-to-right evaluation order of the iterables is guaranteed. This makes possible an idiom for clustering a data series into n-length groups using &lt;code&gt;zip(*[iter(s)]*n)&lt;/code&gt;. This repeats the &lt;em&gt;same&lt;/em&gt; iterator &lt;code&gt;n&lt;/code&gt; times so that each output tuple has the result of &lt;code&gt;n&lt;/code&gt; calls to the iterator. This has the effect of dividing the input into n-length chunks.</source>
          <target state="translated">保证了可迭代对象的从左到右的评估顺序。这使得使用 &lt;code&gt;zip(*[iter(s)]*n)&lt;/code&gt; 将数据序列聚类为n个长度的组成为可能。此重复&lt;em&gt;相同&lt;/em&gt;迭代 &lt;code&gt;n&lt;/code&gt; 倍，以便每个输出元组具有的结果 &lt;code&gt;n&lt;/code&gt; 调用迭代器。这具有将输入分成n个长度的块的效果。</target>
        </trans-unit>
        <trans-unit id="018d37fa1572d55e5f4db2ae98e5687edc22fd1a" translate="yes" xml:space="preserve">
          <source>The leftmost positional arguments that will be prepended to the positional arguments provided to a &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; object call.</source>
          <target state="translated">最左边的位置参数将放在提供给&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt;对象调用的位置参数之前。</target>
        </trans-unit>
        <trans-unit id="58a8ad59b6dbc81334a8bddecbdb0122eed056fd" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;urllib.urlopen&lt;/code&gt; function from Python 2.6 and earlier has been discontinued; &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urllib.request.urlopen()&lt;/code&gt;&lt;/a&gt; corresponds to the old &lt;code&gt;urllib2.urlopen&lt;/code&gt;. Proxy handling, which was done by passing a dictionary parameter to &lt;code&gt;urllib.urlopen&lt;/code&gt;, can be obtained by using &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Python 2.6和更早版本的旧版 &lt;code&gt;urllib.urlopen&lt;/code&gt; 函数已停止使用；&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urllib.request.urlopen()&lt;/code&gt; &lt;/a&gt;对应于旧的 &lt;code&gt;urllib2.urlopen&lt;/code&gt; 。可以通过使用&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;对象来实现代理处理，该处理是通过将字典参数传递给 &lt;code&gt;urllib.urlopen&lt;/code&gt; 来完成的。</target>
        </trans-unit>
        <trans-unit id="4d1d77cc2911d451afde6fba83206974589c97ba" translate="yes" xml:space="preserve">
          <source>The legacy interface does not support decoding from strings, but it does provide functions for encoding and decoding to and from &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. It only supports the Base64 standard alphabet, and it adds newlines every 76 characters as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;. Note that if you are looking for &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; support you probably want to be looking at the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package instead.</source>
          <target state="translated">旧版接口不支持从字符串解码，但确实提供了用于在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象之间&lt;/a&gt;进行编码和解码的功能。它仅支持Base64标准字母，并且根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;每76个字符添加一个换行符。请注意，如果您正在寻找&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;支持，则可能希望查看&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="ddd313c8fee393b8dff593845d82e7e71d1f7e90" translate="yes" xml:space="preserve">
          <source>The legacy interface does not support decoding from strings, but it does provide functions for encoding and decoding to and from &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. It only supports the Base64 standard alphabet, and it adds newlines every 76 characters as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;. Note that if you are looking for &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; support you probably want to be looking at the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package instead.</source>
          <target state="translated">旧版接口不支持从字符串解码，但确实提供了用于在&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象之间&lt;/a&gt;进行编码和解码的功能。它仅支持Base64标准字母，并且根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;每76个字符添加一个换行符。请注意，如果您正在寻找&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;支持，则可能希望查看&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="c9c731f90da8199c4d7aaf7dedfda9caeb528883" translate="yes" xml:space="preserve">
          <source>The legacy interface:</source>
          <target state="translated">遗留接口。</target>
        </trans-unit>
        <trans-unit id="7a2b470ad9a65f9f0762ea7caf0e4bb9c6add20b" translate="yes" xml:space="preserve">
          <source>The legal values of &lt;em&gt;someOptions&lt;/em&gt; is action dependent. Some actions, like &lt;code&gt;disable&lt;/code&gt;, require no arguments, others, like a text-entry box&amp;rsquo;s &lt;code&gt;delete&lt;/code&gt; command, would need arguments to specify what range of text to delete.</source>
          <target state="translated">&lt;em&gt;someOptions&lt;/em&gt;的合法值取决于操作。某些操作（例如 &lt;code&gt;disable&lt;/code&gt; ）不需要参数，而其他操作（例如文本输入框的 &lt;code&gt;delete&lt;/code&gt; 命令）则需要参数来指定要删除的文本范围。</target>
        </trans-unit>
        <trans-unit id="cb058da6334207304006a424f0f8d9b276871b01" translate="yes" xml:space="preserve">
          <source>The length in bytes of one array item in the internal representation.</source>
          <target state="translated">内部表示中一个数组项的长度,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="923838e2430b00237995974c054b9eeca7a35d28" translate="yes" xml:space="preserve">
          <source>The length of the attribute list.</source>
          <target state="translated">属性列表的长度。</target>
        </trans-unit>
        <trans-unit id="dcc9007038f3c59590069b522397660d31cc3ca9" translate="yes" xml:space="preserve">
          <source>The letters &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt; and &lt;code&gt;'u'&lt;/code&gt; are mutually exclusive when used as inline flags, so they can&amp;rsquo;t be combined or follow &lt;code&gt;'-'&lt;/code&gt;. Instead, when one of them appears in an inline group, it overrides the matching mode in the enclosing group. In Unicode patterns &lt;code&gt;(?a:...)&lt;/code&gt; switches to ASCII-only matching, and &lt;code&gt;(?u:...)&lt;/code&gt; switches to Unicode matching (default). In byte pattern &lt;code&gt;(?L:...)&lt;/code&gt; switches to locale depending matching, and &lt;code&gt;(?a:...)&lt;/code&gt; switches to ASCII-only matching (default). This override is only in effect for the narrow inline group, and the original matching mode is restored outside of the group.</source>
          <target state="translated">字母 &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'L'&lt;/code&gt; 和 &lt;code&gt;'u'&lt;/code&gt; 用作内联标志时是互斥的，因此不能将它们组合或跟随在 &lt;code&gt;'-'&lt;/code&gt; 后面。而是，当其中一个出现在内联组中时，它将覆盖封闭组中的匹配模式。在Unicode模式中， &lt;code&gt;(?a:...)&lt;/code&gt; 切换为仅ASCII匹配，而 &lt;code&gt;(?u:...)&lt;/code&gt; 切换为Unicode匹配（默认）。在字节模式中， &lt;code&gt;(?L:...)&lt;/code&gt; 切换到区域设置，取决于匹配，而 &lt;code&gt;(?a:...)&lt;/code&gt; 切换到仅ASCII匹配（默认）。此替代仅对狭窄的嵌入式组有效，并且原始匹配模式在该组之外恢复。</target>
        </trans-unit>
        <trans-unit id="46071ca495d4715a04355ff58ecf5fa1f0b05855" translate="yes" xml:space="preserve">
          <source>The level of debug output to use. This may be set from &lt;code&gt;0&lt;/code&gt; (the default, no output) to &lt;code&gt;3&lt;/code&gt; (the most output). Debugging information is written to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">要使用的调试输出级别。可以将其设置为 &lt;code&gt;0&lt;/code&gt; （默认，无输出）到 &lt;code&gt;3&lt;/code&gt; （最多输出）。调试信息被写入 &lt;code&gt;sys.stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baa39cf943cc5a970b4e65e88961f67561b53d3d" translate="yes" xml:space="preserve">
          <source>The limit is set by the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">该限制由&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;函数设置。</target>
        </trans-unit>
        <trans-unit id="de2931539dd5e0b81cf4753da72b7bb9e5e06c82" translate="yes" xml:space="preserve">
          <source>The limitation on alphanumeric characters is due to the fact the persistent IDs, in protocol 0, are delimited by the newline character. Therefore if any kind of newline characters occurs in persistent IDs, the resulting pickle will become unreadable.</source>
          <target state="translated">对字母数字字符的限制是由于在协议0中,持久性ID是以换行符为界的。因此,如果在持久性ID中出现任何类型的换行字符,产生的pickle将变得不可读。</target>
        </trans-unit>
        <trans-unit id="ddb5098bfc67dbb84a691e9b7eca7bfd9f7e071f" translate="yes" xml:space="preserve">
          <source>The line corresponding to &lt;em&gt;pos&lt;/em&gt; (may be &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">对应于&lt;em&gt;pos&lt;/em&gt;的行（可以是 &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="385e5e1d301f4330f6498263858864d80026a44e" translate="yes" xml:space="preserve">
          <source>The line corresponding to &lt;em&gt;pos&lt;/em&gt;.</source>
          <target state="translated">对应于&lt;em&gt;pos&lt;/em&gt;的行。</target>
        </trans-unit>
        <trans-unit id="48d3553a202e16a5997c4f8b2230b60e1ea146e6" translate="yes" xml:space="preserve">
          <source>The line number in the file where the definition starts.</source>
          <target state="translated">文件中定义开始的行号。</target>
        </trans-unit>
        <trans-unit id="4df26356a233917c02f1ba2f9c29e670a998c7da" translate="yes" xml:space="preserve">
          <source>The line number in the file where the logging call was made.</source>
          <target state="translated">文件中进行日志调用的行号。</target>
        </trans-unit>
        <trans-unit id="867c809f9740a3e765b183977973727b5be7b14f" translate="yes" xml:space="preserve">
          <source>The line number within &lt;a href=&quot;#doctest.DocTest.filename&quot;&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/a&gt; where this &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; begins, or &lt;code&gt;None&lt;/code&gt; if the line number is unavailable. This line number is zero-based with respect to the beginning of the file.</source>
          <target state="translated">中的行号&lt;a href=&quot;#doctest.DocTest.filename&quot;&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/a&gt;，其中该&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;开始时，或 &lt;code&gt;None&lt;/code&gt; 如果行号是不可用的。该行号相对于文件的开头是从零开始的。</target>
        </trans-unit>
        <trans-unit id="08c26210946c5aacbd20dec1fdc21d0c5da263b9" translate="yes" xml:space="preserve">
          <source>The line number within the string containing this example where the example begins. This line number is zero-based with respect to the beginning of the containing string.</source>
          <target state="translated">在包含这个例子的字符串中,例子开始的行号。这个行号相对于字符串的开头是零。</target>
        </trans-unit>
        <trans-unit id="e62560adbcb7cd22ddf304c8213f8b0b6f22b20a" translate="yes" xml:space="preserve">
          <source>The line of code (if it exists).</source>
          <target state="translated">代码行(如果存在的话);</target>
        </trans-unit>
        <trans-unit id="95a3c39af0392219826bf64d10b7cc0efbd8e5f2" translate="yes" xml:space="preserve">
          <source>The line terminator is always &lt;code&gt;b'\n'&lt;/code&gt; for binary files; for text files, the &lt;em&gt;newline&lt;/em&gt; argument to &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; can be used to select the line terminator(s) recognized.</source>
          <target state="translated">对于二进制文件，行终止符始终为 &lt;code&gt;b'\n'&lt;/code&gt; ；对于文本文件，&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;newline&lt;/em&gt;参数可用于选择识别的行终止符。</target>
        </trans-unit>
        <trans-unit id="0e5a4052fcf6468b8aa17d3abaad906858e9dd53" translate="yes" xml:space="preserve">
          <source>The list of command line arguments passed to a Python script. &lt;code&gt;argv[0]&lt;/code&gt; is the script name (it is operating system dependent whether this is a full pathname or not). If the command was executed using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-c&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt; command line option to the interpreter, &lt;code&gt;argv[0]&lt;/code&gt; is set to the string &lt;code&gt;'-c'&lt;/code&gt;. If no script name was passed to the Python interpreter, &lt;code&gt;argv[0]&lt;/code&gt; is the empty string.</source>
          <target state="translated">传递给Python脚本的命令行参数列表。 &lt;code&gt;argv[0]&lt;/code&gt; 是脚本名称（是否为完整路径名取决于操作系统）。如果命令是使用解释器的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-c&quot;&gt; &lt;code&gt;-c&lt;/code&gt; &lt;/a&gt;命令行选项执行的，则 &lt;code&gt;argv[0]&lt;/code&gt; 设置为字符串 &lt;code&gt;'-c'&lt;/code&gt; 。如果没有脚本名称传递给Python解释器，则 &lt;code&gt;argv[0]&lt;/code&gt; 为空字符串。</target>
        </trans-unit>
        <trans-unit id="aecb528eed11d61054bdcb9ec9779fd02be852fb" translate="yes" xml:space="preserve">
          <source>The list of command line arguments passed to a Python script. &lt;code&gt;argv[0]&lt;/code&gt; is the script name (it is operating system dependent whether this is a full pathname or not). If the command was executed using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-c&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt; command line option to the interpreter, &lt;code&gt;argv[0]&lt;/code&gt; is set to the string &lt;code&gt;'-c'&lt;/code&gt;. If no script name was passed to the Python interpreter, &lt;code&gt;argv[0]&lt;/code&gt; is the empty string.</source>
          <target state="translated">传递给Python脚本的命令行参数列表。 &lt;code&gt;argv[0]&lt;/code&gt; 是脚本名称（是否为完整路径名取决于操作系统）。如果命令是使用解释器的&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-c&quot;&gt; &lt;code&gt;-c&lt;/code&gt; &lt;/a&gt;命令行选项执行的，则 &lt;code&gt;argv[0]&lt;/code&gt; 设置为字符串 &lt;code&gt;'-c'&lt;/code&gt; 。如果没有脚本名称传递给Python解释器，则 &lt;code&gt;argv[0]&lt;/code&gt; 为空字符串。</target>
        </trans-unit>
        <trans-unit id="d757fedef32ac53b069cef108109ef76ce7569db" translate="yes" xml:space="preserve">
          <source>The list of modules described in this chapter is:</source>
          <target state="translated">本章所述模块清单为:</target>
        </trans-unit>
        <trans-unit id="89babbe22e696d6e3ea186b12494bd9b032a7f64" translate="yes" xml:space="preserve">
          <source>The list of type-specific methods automatically used by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; are summarized in the following table. Note that it&amp;rsquo;s usually not necessary to invoke these methods directly.</source>
          <target state="translated">下表总结了&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;自动使用的类型特定方法的列表。请注意，通常不必直接调用这些方法。</target>
        </trans-unit>
        <trans-unit id="8ae7e452b330e7268c71ec096a019ddbaf030768" translate="yes" xml:space="preserve">
          <source>The list of values associated with the item.</source>
          <target state="translated">与该项目相关联的数值列表。</target>
        </trans-unit>
        <trans-unit id="7ee87db8625aac53dbfdf92521d5d1d3a282d084" translate="yes" xml:space="preserve">
          <source>The literal string &amp;ldquo;current&amp;rdquo;, which identifies the currently-selected tab</source>
          <target state="translated">文字字符串&amp;ldquo;当前&amp;rdquo;，标识当前选择的选项卡</target>
        </trans-unit>
        <trans-unit id="7b83a337af5775f870f4c9e9c1d798e077c7c26f" translate="yes" xml:space="preserve">
          <source>The literal string &amp;ldquo;end&amp;rdquo;, which returns the number of tabs (only valid for &lt;a href=&quot;#tkinter.ttk.Notebook.index&quot;&gt;&lt;code&gt;Notebook.index()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">文字字符串&amp;ldquo; end&amp;rdquo;，它返回制表符的数量（仅对&lt;a href=&quot;#tkinter.ttk.Notebook.index&quot;&gt; &lt;code&gt;Notebook.index()&lt;/code&gt; &lt;/a&gt;有效）</target>
        </trans-unit>
        <trans-unit id="00d0aced4a91239bd29d9b019272137964be7681" translate="yes" xml:space="preserve">
          <source>The literal string &lt;code&gt;'cfg://handlers.file'&lt;/code&gt; will be resolved in an analogous way to strings with the &lt;code&gt;ext://&lt;/code&gt; prefix, but looking in the configuration itself rather than the import namespace. The mechanism allows access by dot or by index, in a similar way to that provided by &lt;code&gt;str.format&lt;/code&gt;. Thus, given the following snippet:</source>
          <target state="translated">文字字符串 &lt;code&gt;'cfg://handlers.file'&lt;/code&gt; 的解析方式类似于带有 &lt;code&gt;ext://&lt;/code&gt; 前缀的字符串，但查找配置本身而不是导入名称空间。该机制允许按点或按索引访问，类似于 &lt;code&gt;str.format&lt;/code&gt; 提供的方式。因此，给出以下代码段：</target>
        </trans-unit>
        <trans-unit id="4f27712ab758efd6de93f1cb55f0daab924009f0" translate="yes" xml:space="preserve">
          <source>The loader should set several attributes on the module. (Note that some of these attributes can change when a module is reloaded):</source>
          <target state="translated">载入器应该为模块设置几个属性。(注意,当模块被重新加载时,其中一些属性可能会改变)。</target>
        </trans-unit>
        <trans-unit id="53fb5b8026cc6284933ed89e03133964af92d815" translate="yes" xml:space="preserve">
          <source>The loader to use for loading. For namespace packages this should be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">用于加载的加载器。对于名称空间包，应将其设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d2a5a08b61bba44e30ad2500923bcca06f9ae4a" translate="yes" xml:space="preserve">
          <source>The loader used to load the module. The &lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt;&lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt;&lt;/a&gt; decorator can handle the details for &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于加载模块的加载器。该&lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt; &lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt; &lt;/a&gt;装饰可以处理的细节&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02e2202e5dd9c31386532269c64e1a06301dae3e" translate="yes" xml:space="preserve">
          <source>The loader used to load the module. The &lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt;&lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt;&lt;/a&gt; decorator can handle the details for &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于加载模块的加载器。该&lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt; &lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt; &lt;/a&gt;装饰可以处理的细节&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8402dc2e8df2842b8a96ff6565dbba76d783e577" translate="yes" xml:space="preserve">
          <source>The local trace function should return a reference to itself (or to another function for further tracing in that scope), or &lt;code&gt;None&lt;/code&gt; to turn off tracing in that scope.</source>
          <target state="translated">本地跟踪函数应返回对自身的引用（或对另一个函数的引用，以在该范围内进行进一步的跟踪），或者返回 &lt;code&gt;None&lt;/code&gt; 以关闭该范围内的跟踪。</target>
        </trans-unit>
        <trans-unit id="2fd1d99f3f62d9ca3fd501bdfcd99eab24bbcbf0" translate="yes" xml:space="preserve">
          <source>The locale module exposes the C library&amp;rsquo;s gettext interface on systems that provide this interface. It consists of the functions &lt;code&gt;gettext()&lt;/code&gt;, &lt;code&gt;dgettext()&lt;/code&gt;, &lt;code&gt;dcgettext()&lt;/code&gt;, &lt;code&gt;textdomain()&lt;/code&gt;, &lt;code&gt;bindtextdomain()&lt;/code&gt;, and &lt;code&gt;bind_textdomain_codeset()&lt;/code&gt;. These are similar to the same functions in the &lt;a href=&quot;gettext#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module, but use the C library&amp;rsquo;s binary format for message catalogs, and the C library&amp;rsquo;s search algorithms for locating message catalogs.</source>
          <target state="translated">语言环境模块在提供此接口的系统上公开C库的gettext接口。它包括的功能的 &lt;code&gt;gettext()&lt;/code&gt; ， &lt;code&gt;dgettext()&lt;/code&gt; ， &lt;code&gt;dcgettext()&lt;/code&gt; ， &lt;code&gt;textdomain()&lt;/code&gt; ， &lt;code&gt;bindtextdomain()&lt;/code&gt; ,和 &lt;code&gt;bind_textdomain_codeset()&lt;/code&gt; 。这些与&lt;a href=&quot;gettext#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;模块中的相同功能相似，但是使用C库的二进制格式存储消息目录，并使用C库的搜索算法定位消息目录。</target>
        </trans-unit>
        <trans-unit id="4ba7e5b4616964368950cfe6530b817573940196" translate="yes" xml:space="preserve">
          <source>The locator allows the application to determine the end position of any document-related event, even if the parser is not reporting an error. Typically, the application will use this information for reporting its own errors (such as character content that does not match an application&amp;rsquo;s business rules). The information returned by the locator is probably not sufficient for use with a search engine.</source>
          <target state="translated">定位器允许应用程序确定任何与文档相关的事件的结束位置，即使解析器没有报告错误。通常，应用程序将使用此信息来报告其自身的错误（例如与应用程序的业务规则不匹配的字符内容）。定位器返回的信息可能不足以与搜索引擎一起使用。</target>
        </trans-unit>
        <trans-unit id="0b541117087a1f8036f57f9c3d3bbdc4c1090859" translate="yes" xml:space="preserve">
          <source>The lock must be acquired before this method is called and released shortly after. If called with an &lt;em&gt;unlocked&lt;/em&gt; lock a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; error is raised.</source>
          <target state="translated">必须在调用此方法之前获取该锁，并在此之后不久将其释放。如果使用&lt;em&gt;解锁的&lt;/em&gt;锁调用，则会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="7364d43993bfd2a4a57e3ca43b4fcd30ba37faa5" translate="yes" xml:space="preserve">
          <source>The logged message, computed as &lt;code&gt;msg %
args&lt;/code&gt;. This is set when &lt;a href=&quot;#logging.Formatter.format&quot;&gt;&lt;code&gt;Formatter.format()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">记录的消息，计算为 &lt;code&gt;msg % args&lt;/code&gt; 。调用&lt;a href=&quot;#logging.Formatter.format&quot;&gt; &lt;code&gt;Formatter.format()&lt;/code&gt; &lt;/a&gt;时设置。</target>
        </trans-unit>
        <trans-unit id="9600b2843e41d05ad39313c9f2aa4c63763add6d" translate="yes" xml:space="preserve">
          <source>The logger name.</source>
          <target state="translated">记录仪名称。</target>
        </trans-unit>
        <trans-unit id="2f74549631098ca837d37bb682ffc84ef0ff8585" translate="yes" xml:space="preserve">
          <source>The logging level (numeric).</source>
          <target state="translated">记录级别(数字)。</target>
        </trans-unit>
        <trans-unit id="2aba1c50c9b6d5d787703620a250beb6468cffca" translate="yes" xml:space="preserve">
          <source>The logging message.</source>
          <target state="translated">伐木信息。</target>
        </trans-unit>
        <trans-unit id="0dccc7449100ad15c16ad79f5e92af3dc6052aa1" translate="yes" xml:space="preserve">
          <source>The logging module is intended to be thread-safe without any special work needing to be done by its clients. It achieves this though using threading locks; there is one lock to serialize access to the module&amp;rsquo;s shared data, and each handler also creates a lock to serialize access to its underlying I/O.</source>
          <target state="translated">日志记录模块旨在实现线程安全，而客户端无需执行任何特殊工作。它通过使用线程锁来实现。有一个锁用于序列化对模块共享数据的访问，并且每个处理程序还创建一个锁以对对其底层I / O的访问进行序列化。</target>
        </trans-unit>
        <trans-unit id="fbd8c2577035aac2745e273303fe716d8af12422" translate="yes" xml:space="preserve">
          <source>The logical operations are also generally applicable to all objects, and support truth tests, identity tests, and boolean operations:</source>
          <target state="translated">逻辑运算也普遍适用于所有对象,并支持真值检验、身份检验和布尔运算。</target>
        </trans-unit>
        <trans-unit id="7df6a8d5e02183fb9584ebe06ff76e9b96f074a5" translate="yes" xml:space="preserve">
          <source>The logical parent of the path:</source>
          <target state="translated">路径的逻辑父节点。</target>
        </trans-unit>
        <trans-unit id="9b104204d7a73a4986c88e0fafeb98a170c6d913" translate="yes" xml:space="preserve">
          <source>The long form of the address representation, with all leading zeroes and groups consisting entirely of zeroes included.</source>
          <target state="translated">地址表示的长形式,包括所有的前导零和完全由零组成的组。</target>
        </trans-unit>
        <trans-unit id="686df6d1bc1fad24559ce33a7e66dfd21b1ce389" translate="yes" xml:space="preserve">
          <source>The loop must not be running when this function is called. Any pending callbacks will be discarded.</source>
          <target state="translated">当调用此函数时,循环必须没有运行。任何悬而未决的回调都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="04b6ef293292796e68ba9b72db25470015a38602" translate="yes" xml:space="preserve">
          <source>The low byte of &lt;em&gt;counts&lt;/em&gt; is the number of values before the list value, the high byte of &lt;em&gt;counts&lt;/em&gt; the number of values after it. The resulting values are put onto the stack right-to-left.</source>
          <target state="translated">&lt;em&gt;计数&lt;/em&gt;的低字节是列表值之前的值数，&lt;em&gt;计数&lt;/em&gt;的高字节是列表值之后的值数。结果值从右到左放入堆栈。</target>
        </trans-unit>
        <trans-unit id="88e087adce032f73b077b616fdccdde637cf8a30" translate="yes" xml:space="preserve">
          <source>The low median is always a member of the data set. When the number of data points is odd, the middle value is returned. When it is even, the smaller of the two middle values is returned.</source>
          <target state="translated">低中值始终是数据集的成员。当数据点数量为奇数时,返回中间值。当它是偶数时,返回两个中间值中较小的一个。</target>
        </trans-unit>
        <trans-unit id="348153e59e72f819cf9f80e2f695eeb377d9ff1b" translate="yes" xml:space="preserve">
          <source>The lowercase letters &lt;code&gt;'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. This value is not locale-dependent and will not change.</source>
          <target state="translated">小写字母 &lt;code&gt;'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; 。此值不依赖于语言环境，并且不会更改。</target>
        </trans-unit>
        <trans-unit id="68dd9722b27aa81209d16a358315ce11b2612f07" translate="yes" xml:space="preserve">
          <source>The lowercasing algorithm used is described in section 3.13 of the Unicode Standard.</source>
          <target state="translated">所使用的小写字母算法在Unicode标准的3.13节中有描述。</target>
        </trans-unit>
        <trans-unit id="d40ebb0be055b496659fd786d4b5dcbf37866c95" translate="yes" xml:space="preserve">
          <source>The lowest valued entries are retrieved first (the lowest valued entry is the one returned by &lt;code&gt;sorted(list(entries))[0]&lt;/code&gt;). A typical pattern for entries is a tuple in the form: &lt;code&gt;(priority_number, data)&lt;/code&gt;.</source>
          <target state="translated">最低值的条目首先被检索（最低值的条目是 &lt;code&gt;sorted(list(entries))[0]&lt;/code&gt; 返回的条目）。条目的典型模式是元组，形式为： &lt;code&gt;(priority_number, data)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18bdbb4ff9057c05b9f568636d67eb08afd9aac3" translate="yes" xml:space="preserve">
          <source>The magic methods are setup with &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; objects, so you can configure them and use them in the usual way:</source>
          <target state="translated">魔术方法是使用&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;对象设置的，因此您可以配置它们并以通常的方式使用它们：</target>
        </trans-unit>
        <trans-unit id="d985ba325e2781d7920602c861724ce6ee09c487" translate="yes" xml:space="preserve">
          <source>The mailcap format is documented in &lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt;, &amp;ldquo;A User Agent Configuration Mechanism For Multimedia Mail Format Information&amp;rdquo;, but is not an Internet standard. However, mailcap files are supported on most Unix systems.</source>
          <target state="translated">mailcap格式记录在&lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;多媒体邮件格式信息的用户代理配置机制&amp;rdquo;中，但不是Internet标准。但是，大多数Unix系统都支持mailcap文件。</target>
        </trans-unit>
        <trans-unit id="865a67d513776e169c7dda96ed43b5849ab01ce9" translate="yes" xml:space="preserve">
          <source>The mailcap format is documented in &lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt;, &amp;ldquo;A User Agent Configuration Mechanism For Multimedia Mail Format Information,&amp;rdquo; but is not an Internet standard. However, mailcap files are supported on most Unix systems.</source>
          <target state="translated">mailcap格式记录在&lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;多媒体邮件格式信息的用户代理配置机制&amp;rdquo;中，但不是Internet标准。但是，大多数Unix系统都支持mailcap文件。</target>
        </trans-unit>
        <trans-unit id="6cc8e446023d86b73fe211c784da84cce64e5aa7" translate="yes" xml:space="preserve">
          <source>The main benefit of using &lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; is that it makes it simple to register a callback without needing to preserve the returned finalizer object. For instance</source>
          <target state="translated">使用&lt;a href=&quot;#weakref.finalize&quot;&gt; &lt;code&gt;finalize&lt;/code&gt; &lt;/a&gt;的主要好处是它使注册回调变得简单，而无需保留返回的finalizer对象。例如</target>
        </trans-unit>
        <trans-unit id="aa6749fbf672cc61852078669cd1d2c8b91798af" translate="yes" xml:space="preserve">
          <source>The main configuration parser. When &lt;em&gt;defaults&lt;/em&gt; is given, it is initialized into the dictionary of intrinsic defaults. When &lt;em&gt;dict_type&lt;/em&gt; is given, it will be used to create the dictionary objects for the list of sections, for the options within a section, and for the default values.</source>
          <target state="translated">主要配置解析器。当&lt;em&gt;默认&lt;/em&gt;给出，它被初始化到内在默认的字典。当&lt;em&gt;dict_type&lt;/em&gt;给出，它将被用来创建字典对象的部分名单，对于部分中的选项，并为默认值。</target>
        </trans-unit>
        <trans-unit id="6c54c9aa0f2489f35af302e65b10db2bcc3bcc4a" translate="yes" xml:space="preserve">
          <source>The main difference with &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; is that methods &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.BufferedIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.BufferedIOBase.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; will try (respectively) to read as much input as requested or to consume all given output, at the expense of making perhaps more than one system call.</source>
          <target state="translated">&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;的主要区别在于方法&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#io.BufferedIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.BufferedIOBase.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;将尝试（分别）读取所请求的尽可能多的输入或消耗所有给定的输出，但以进行多个系统调用为代价。</target>
        </trans-unit>
        <trans-unit id="add4c0e062cc808a9ca7701bbfdc7cff5c9ecf93" translate="yes" xml:space="preserve">
          <source>The main intended use for this function is in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; functions which wrap the decorated function and return the wrapper. If the wrapper function is not updated, the metadata of the returned function will reflect the wrapper definition rather than the original function definition, which is typically less than helpful.</source>
          <target state="translated">此函数的主要用途是在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt;函数中，该函数包装已装饰的函数并返回包装器。如果包装器函数未更新，则返回的函数的元数据将反映包装器定义，而不是原始函数定义，这通常会有所帮助。</target>
        </trans-unit>
        <trans-unit id="bbd52a80c2bf7aa83e287046e7a3546614891581" translate="yes" xml:space="preserve">
          <source>The main intended use for this function is in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; functions which wrap the decorated function and return the wrapper. If the wrapper function is not updated, the metadata of the returned function will reflect the wrapper definition rather than the original function definition, which is typically less than helpful.</source>
          <target state="translated">此函数的主要用途是在&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt;函数中，该函数包装已装饰的函数并返回包装器。如果包装器函数未更新，则返回的函数的元数据将反映包装器定义而不是原始函数定义，这通常会有所帮助。</target>
        </trans-unit>
        <trans-unit id="0393c29f0c76cc68d75498c911cd5856119a6e90" translate="yes" xml:space="preserve">
          <source>The major version number as an integer</source>
          <target state="translated">主要版本号为整数</target>
        </trans-unit>
        <trans-unit id="30f21a3c2db9a772b559f8bc77b28a40e6c10c6c" translate="yes" xml:space="preserve">
          <source>The mapping from OMG IDL to Python defines accessor functions for IDL &lt;code&gt;attribute&lt;/code&gt; declarations in much the way the Java mapping does. Mapping the IDL declarations</source>
          <target state="translated">从OMG IDL到Python的映射非常像Java映射那样为IDL &lt;code&gt;attribute&lt;/code&gt; 声明定义了访问器函数。映射IDL声明</target>
        </trans-unit>
        <trans-unit id="3419e0b499e5db528695a54967ba3f26daf25f53" translate="yes" xml:space="preserve">
          <source>The mapping protocol is implemented on top of the existing legacy API so that subclasses overriding the original interface still should have mappings working as expected.</source>
          <target state="translated">映射协议是在现有的传统API之上实现的,因此覆盖原有接口的子类仍然应该能按照预期的方式进行映射。</target>
        </trans-unit>
        <trans-unit id="b710ef0544d30a94e35eeefd82c04ec7bcd8401d" translate="yes" xml:space="preserve">
          <source>The master of an object is implicit in the new name given to it at creation time. In Tkinter, masters are specified explicitly.</source>
          <target state="translated">一个对象的主控是隐含在创建时给它的新名称中的。在Tkinter中,主函数是显式的。</target>
        </trans-unit>
        <trans-unit id="fa43c839cad7c9f8633be4d929c1f71fa21cfe96" translate="yes" xml:space="preserve">
          <source>The mathematical and bitwise operations are the most numerous:</source>
          <target state="translated">数学运算和位面运算是最多的。</target>
        </trans-unit>
        <trans-unit id="ffd8ab3a9ff10a51a4dccf1570930213eb5db01e" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;&amp;pi;&lt;/em&gt; = 3.141592&amp;hellip;, to available precision.</source>
          <target state="translated">数学常数&lt;em&gt;&amp;pi;&lt;/em&gt; = 3.141592&amp;hellip;，以达到可用的精度。</target>
        </trans-unit>
        <trans-unit id="0ac993c9d5a9077494dd0fdf626d7dd10bc2c6da" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;&amp;pi;&lt;/em&gt;, as a float.</source>
          <target state="translated">数学常数&lt;em&gt;&amp;pi;&lt;/em&gt;，为浮点数。</target>
        </trans-unit>
        <trans-unit id="20b3db0ac46a25c5bb1172d3a8fe85f345bf1a43" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;&amp;tau;&lt;/em&gt; = 6.283185&amp;hellip;, to available precision. Tau is a circle constant equal to 2&lt;em&gt;&amp;pi;&lt;/em&gt;, the ratio of a circle&amp;rsquo;s circumference to its radius. To learn more about Tau, check out Vi Hart&amp;rsquo;s video &lt;a href=&quot;https://www.youtube.com/watch?v=jG7vhMMXagQ&quot;&gt;Pi is (still) Wrong&lt;/a&gt;, and start celebrating &lt;a href=&quot;https://tauday.com/&quot;&gt;Tau day&lt;/a&gt; by eating twice as much pie!</source>
          <target state="translated">数学常数&lt;em&gt;&amp;tau;&lt;/em&gt; = 6.283185&amp;hellip;，以可用的精度表示。头是一个圆恒定等于2 &lt;em&gt;&amp;pi;&lt;/em&gt;，一个圆的周长与其半径的比率。要了解有关Tau的更多信息，请查看Vi Hart的视频&lt;a href=&quot;https://www.youtube.com/watch?v=jG7vhMMXagQ&quot;&gt;Pi is（still）Wrong&lt;/a&gt;，然后通过吃两倍的馅饼开始庆祝&lt;a href=&quot;https://tauday.com/&quot;&gt;Tau一天&lt;/a&gt;！</target>
        </trans-unit>
        <trans-unit id="3d05ec614092ea45e495ef9afe24dfe52026fce0" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;&amp;tau;&lt;/em&gt;, as a float.</source>
          <target state="translated">数学常数&lt;em&gt;&amp;tau;&lt;/em&gt;，以浮点数表示。</target>
        </trans-unit>
        <trans-unit id="2054053bda405d560ac8acf8fec5d4e60e4eafcb" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip;, to available precision.</source>
          <target state="translated">数学常数&lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip;，以可用的精度为准。</target>
        </trans-unit>
        <trans-unit id="30199680754c9073407ce0600edf0ade8930dbd1" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;e&lt;/em&gt;, as a float.</source>
          <target state="translated">数学常数&lt;em&gt;e&lt;/em&gt;，为浮点数。</target>
        </trans-unit>
        <trans-unit id="d61fbc018444ee0c8960bf3c439cc42b02c7d456" translate="yes" xml:space="preserve">
          <source>The maximal depth of recursion is limited by &lt;em&gt;depth&lt;/em&gt; unless it is &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;depth=0&lt;/code&gt; means no recursion.</source>
          <target state="translated">递归的最大深度受&lt;em&gt;深度&lt;/em&gt;限制，除非它为 &lt;code&gt;None&lt;/code&gt; 。 &lt;code&gt;depth=0&lt;/code&gt; 表示没有递归。</target>
        </trans-unit>
        <trans-unit id="8e00f5fdab4cabbe1aeef1488336a1e0638dc481" translate="yes" xml:space="preserve">
          <source>The maximum address space which may be locked in memory.</source>
          <target state="translated">内存中可锁定的最大地址空间。</target>
        </trans-unit>
        <trans-unit id="3b17a4fdd33906a05337e3c22b37611cee0453bb" translate="yes" xml:space="preserve">
          <source>The maximum amount of processor time (in seconds) that a process can use. If this limit is exceeded, a &lt;code&gt;SIGXCPU&lt;/code&gt; signal is sent to the process. (See the &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module documentation for information about how to catch this signal and do something useful, e.g. flush open files to disk.)</source>
          <target state="translated">一个进程可以使用的最大处理器时间（以秒为单位）。如果超出此限制，则会将 &lt;code&gt;SIGXCPU&lt;/code&gt; 信号发送到该进程。（请参阅&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块文档，以获取有关如何捕获此信号以及执行一些有用的操作的信息，例如将打开的文件刷新到磁盘。）</target>
        </trans-unit>
        <trans-unit id="4c01edd35d2e4b18fd08aefd6e2bde18481b1d54" translate="yes" xml:space="preserve">
          <source>The maximum area (in bytes) of address space which may be taken by the process.</source>
          <target state="translated">进程可使用的最大地址空间区域(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="fdaf1377134708ca6390a3f820016575dae71fa7" translate="yes" xml:space="preserve">
          <source>The maximum depth for recursive interpolation for &lt;code&gt;get()&lt;/code&gt; when the &lt;em&gt;raw&lt;/em&gt; parameter is false. This is relevant only when the default &lt;em&gt;interpolation&lt;/em&gt; is used.</source>
          <target state="translated">当&lt;em&gt;raw&lt;/em&gt;参数为false 时， &lt;code&gt;get()&lt;/code&gt; 的递归插值的最大深度。仅在使用默认&lt;em&gt;插值&lt;/em&gt;时才有意义。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9cf6df816155f1fcf09ddada21dd48bd2158aa1e" translate="yes" xml:space="preserve">
          <source>The maximum length of any line in the serialized output, not counting the end of line character(s). Default is 78, per &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;. A value of &lt;code&gt;0&lt;/code&gt; or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; indicates that no line wrapping should be done at all.</source>
          <target state="translated">序列化输出中任何行的最大长度，不计算行字符的结尾。根据&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322的&lt;/strong&gt;&lt;/a&gt;默认值为78 。值为 &lt;code&gt;0&lt;/code&gt; 或&amp;ldquo; &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;表示根本不应该进行换行。</target>
        </trans-unit>
        <trans-unit id="9c81128f5386f85cb071f5872dac300fd5514ef2" translate="yes" xml:space="preserve">
          <source>The maximum line length can be specified explicitly via &lt;em&gt;maxlinelen&lt;/em&gt;. For splitting the first line to a shorter value (to account for the field header which isn&amp;rsquo;t included in &lt;em&gt;s&lt;/em&gt;, e.g. &lt;em&gt;Subject&lt;/em&gt;) pass in the name of the field in &lt;em&gt;header_name&lt;/em&gt;. The default &lt;em&gt;maxlinelen&lt;/em&gt; is 76, and the default value for &lt;em&gt;header_name&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, meaning it is not taken into account for the first line of a long, split header.</source>
          <target state="translated">最大行长度可以通过&lt;em&gt;maxlinelen&lt;/em&gt;显式指定。为了将第一行拆分为较短的值（以解决&lt;em&gt;s中&lt;/em&gt;不包含的字段头，例如&lt;em&gt;Subject&lt;/em&gt;），请在&lt;em&gt;header_name中&lt;/em&gt;传入字段名称。默认&lt;em&gt;maxlinelen&lt;/em&gt;是76，而对于默认值&lt;em&gt;HEADER_NAME&lt;/em&gt;是 &lt;code&gt;None&lt;/code&gt; ，这意味着它不考虑为一个长，分割报头的第一行。</target>
        </trans-unit>
        <trans-unit id="e66eb50147f92af8dd6eba447536917c9a381aba" translate="yes" xml:space="preserve">
          <source>The maximum number of frames to include in tracebacks output by the default &lt;a href=&quot;#wsgiref.handlers.BaseHandler.log_exception&quot;&gt;&lt;code&gt;log_exception()&lt;/code&gt;&lt;/a&gt; method. If &lt;code&gt;None&lt;/code&gt;, all frames are included.</source>
          <target state="translated">默认&lt;a href=&quot;#wsgiref.handlers.BaseHandler.log_exception&quot;&gt; &lt;code&gt;log_exception()&lt;/code&gt; &lt;/a&gt;方法输出的回溯中要包括的最大帧数。如果为 &lt;code&gt;None&lt;/code&gt; ，则包括所有帧。</target>
        </trans-unit>
        <trans-unit id="18b95718c02a3057f0e9df850480875ebc92b1c7" translate="yes" xml:space="preserve">
          <source>The maximum number of headers of this type that can have the same &lt;code&gt;name&lt;/code&gt;. A value of &lt;code&gt;None&lt;/code&gt; means unlimited. The &lt;code&gt;BaseHeader&lt;/code&gt; value for this attribute is &lt;code&gt;None&lt;/code&gt;; it is expected that specialized header classes will override this value as needed.</source>
          <target state="translated">可以具有相同 &lt;code&gt;name&lt;/code&gt; 的这种类型的头的最大数量。的值 &lt;code&gt;None&lt;/code&gt; 表示无限制。该属性的 &lt;code&gt;BaseHeader&lt;/code&gt; 值为 &lt;code&gt;None&lt;/code&gt; ；期望专门的标头类将根据需要覆盖此值。</target>
        </trans-unit>
        <trans-unit id="3a19b9bb8cb23af867bbc1480b419b1f7c7c4a4b" translate="yes" xml:space="preserve">
          <source>The maximum number of open file descriptors for the current process.</source>
          <target state="translated">当前进程的最大打开文件描述符数量。</target>
        </trans-unit>
        <trans-unit id="fb66b7d29ebcdf536a3295c6531102e20cafd4f6" translate="yes" xml:space="preserve">
          <source>The maximum number of processes the current process may create.</source>
          <target state="translated">当前进程可创建的最大进程数。</target>
        </trans-unit>
        <trans-unit id="9832b0e10b58ae7eaee525f337f2d0d20c121e81" translate="yes" xml:space="preserve">
          <source>The maximum number of pseudo-terminals created by this user id.</source>
          <target state="translated">该用户id所创建的伪终端的最大数量。</target>
        </trans-unit>
        <trans-unit id="468d56b893ca1cec8143921e908a796ab75bf55e" translate="yes" xml:space="preserve">
          <source>The maximum resident set size that should be made available to the process.</source>
          <target state="translated">流程中应提供的最大居民套数。</target>
        </trans-unit>
        <trans-unit id="cf128709848248da0942adf9e6d9e6ef3ddbd5d3" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of a core file that the current process can create. This may result in the creation of a partial core file if a larger core would be required to contain the entire process image.</source>
          <target state="translated">当前进程可以创建的核心文件的最大大小(以字节为单位)。如果需要更大的核心文件来包含整个进程映像,这可能导致创建部分核心文件。</target>
        </trans-unit>
        <trans-unit id="dfe5e4a5e02cc7c94294a5a445fc46319bfe3b14" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of socket buffer usage for this user. This limits the amount of network memory, and hence the amount of mbufs, that this user may hold at any time.</source>
          <target state="translated">该用户使用套接字缓冲区的最大大小(以字节为单位)。这限制了该用户在任何时候可以持有的网络内存量,也就是mbufs的数量。</target>
        </trans-unit>
        <trans-unit id="98418090d364665cf57fd3cd5eca6496cfa69287" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of the call stack for the current process. This only affects the stack of the main thread in a multi-threaded process.</source>
          <target state="translated">当前进程的调用栈的最大大小(以字节为单位)。这只影响多线程进程中主线程的栈。</target>
        </trans-unit>
        <trans-unit id="3bf4f581aecd08f964716440365704ea2052950e" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of the process&amp;rsquo;s heap.</source>
          <target state="translated">进程堆的最大大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="33eb92cb7c3db0ca5347014823d3ea50b3d841b7" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of the swap space that may be reserved or used by all of this user id&amp;rsquo;s processes. This limit is enforced only if bit 1 of the vm.overcommit sysctl is set. Please see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tuning(7)&quot;&gt;tuning(7)&lt;/a&gt;&lt;/em&gt; for a complete description of this sysctl.</source>
          <target state="translated">此用户标识的所有进程可以保留或使用的交换空间的最大大小（以字节为单位）。仅当设置了vm.overcommit sysctl的位1时，才强制执行此限制。有关此sysctl的完整说明，请参见&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tuning(7)&quot;&gt;Tuning（7）&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="89d63439144dced9f1c196a194e65d9d4cde356b" translate="yes" xml:space="preserve">
          <source>The maximum size of a file which the process may create.</source>
          <target state="translated">进程可能创建的文件的最大尺寸。</target>
        </trans-unit>
        <trans-unit id="259c41c465d4e1d93715f01eed3dd2ce5cdc176c" translate="yes" xml:space="preserve">
          <source>The maximum size the value of an extended attribute can be. Currently, this is 64 KiB on Linux.</source>
          <target state="translated">扩展属性值的最大尺寸。目前,在Linux上是64KiB。</target>
        </trans-unit>
        <trans-unit id="15c3fec5606dd03036b54707fa1f62bd41c762c1" translate="yes" xml:space="preserve">
          <source>The maximum value allowed for the &lt;em&gt;timeout&lt;/em&gt; parameter of &lt;code&gt;Lock.acquire()&lt;/code&gt;. Specifying a timeout greater than this value will raise an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Lock.acquire()&lt;/code&gt; 的&lt;em&gt;超时&lt;/em&gt;参数允许的最大值。如果指定的超时值大于此值，则会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3172059fc2317f828db61c5edf2ebb3ec88dc996" translate="yes" xml:space="preserve">
          <source>The maximum value allowed for the &lt;em&gt;timeout&lt;/em&gt; parameter of blocking functions (&lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;Lock.acquire()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#threading.RLock.acquire&quot;&gt;&lt;code&gt;RLock.acquire()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;Condition.wait()&lt;/code&gt;&lt;/a&gt;, etc.). Specifying a timeout greater than this value will raise an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">阻塞函数的&lt;em&gt;超时&lt;/em&gt;参数所允许的最大值（&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;Lock.acquire()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#threading.RLock.acquire&quot;&gt; &lt;code&gt;RLock.acquire()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;Condition.wait()&lt;/code&gt; &lt;/a&gt;等）。指定大于此值的超时将引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b79718434ca9ab5f1e1175b084bdcabb1be76928" translate="yes" xml:space="preserve">
          <source>The mbox format is the classic format for storing mail on Unix systems. All messages in an mbox mailbox are stored in a single file with the beginning of each message indicated by a line whose first five characters are &amp;ldquo;From &amp;ldquo;.</source>
          <target state="translated">mbox格式是在Unix系统上存储邮件的经典格式。mbox邮箱中的所有邮件都存储在一个文件中，每封邮件的开头均由一行表示，其前五个字符为&amp;ldquo;发件人&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0b945c51f9b14e5f28b0e2773473e0c702f3ac3e" translate="yes" xml:space="preserve">
          <source>The mean is strongly affected by outliers and is not a robust estimator for central location: the mean is not necessarily a typical example of the data points. For more robust measures of central location, see &lt;a href=&quot;#statistics.median&quot;&gt;&lt;code&gt;median()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#statistics.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">平均值受到异常值的强烈影响，并且不是中心位置的可靠估计：平均值不一定是数据点的典型示例。有关中心位置的更可靠的度量，请参见&lt;a href=&quot;#statistics.median&quot;&gt; &lt;code&gt;median()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#statistics.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="550a36e13b743aa4c4567c44300a1ad1e8b956c7" translate="yes" xml:space="preserve">
          <source>The meaning for &lt;em&gt;attrs&lt;/em&gt; is the same as in &lt;a href=&quot;#http.cookies.BaseCookie.output&quot;&gt;&lt;code&gt;output()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;attrs&lt;/em&gt;的含义与&lt;a href=&quot;#http.cookies.BaseCookie.output&quot;&gt; &lt;code&gt;output()&lt;/code&gt; 中&lt;/a&gt;的含义相同。</target>
        </trans-unit>
        <trans-unit id="c45e027ff968e6c146e95e7c4cbd6f4617905a03" translate="yes" xml:space="preserve">
          <source>The meaning for &lt;em&gt;attrs&lt;/em&gt; is the same as in &lt;a href=&quot;#http.cookies.Morsel.output&quot;&gt;&lt;code&gt;output()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;attrs&lt;/em&gt;的含义与&lt;a href=&quot;#http.cookies.Morsel.output&quot;&gt; &lt;code&gt;output()&lt;/code&gt; 中&lt;/a&gt;的含义相同。</target>
        </trans-unit>
        <trans-unit id="868de20f7c32b2cd47542209682333406ad71447" translate="yes" xml:space="preserve">
          <source>The meaning of each of these fields is as described in &lt;a href=&quot;#warning-filter&quot;&gt;The Warnings Filter&lt;/a&gt;. When listing multiple filters on a single line (as for &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt;), the individual filters are separated by commas and the filters listed later take precedence over those listed before them (as they&amp;rsquo;re applied left-to-right, and the most recently applied filters take precedence over earlier ones).</source>
          <target state="translated">这些字段的含义如&lt;a href=&quot;#warning-filter&quot;&gt;&amp;ldquo;警告过滤器&amp;rdquo;中所述&lt;/a&gt;。当在一行上列出多个过滤器时（如&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; 一样&lt;/a&gt;），各个过滤器之间用逗号隔开，后面列出的过滤器优先于之前列出的过滤器（因为它们是从左到右应用的，并且是最近应用的）过滤器优先于较早的过滤器）。</target>
        </trans-unit>
        <trans-unit id="fd3c3e9ec9bd15176608a0da6b2be3dc7a49cddd" translate="yes" xml:space="preserve">
          <source>The meaning of each of these fields is as described in &lt;a href=&quot;#warning-filter&quot;&gt;The Warnings Filter&lt;/a&gt;. When listing multiple filters on a single line (as for &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt;), the individual filters are separated by commas and the filters listed later take precedence over those listed before them (as they&amp;rsquo;re applied left-to-right, and the most recently applied filters take precedence over earlier ones).</source>
          <target state="translated">这些字段的含义如&lt;a href=&quot;#warning-filter&quot;&gt;&amp;ldquo;警告过滤器&amp;rdquo;中所述&lt;/a&gt;。当在一行上列出多个过滤器时（如&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; 一样&lt;/a&gt;），各个过滤器之间用逗号隔开，后面列出的过滤器优先于之前列出的过滤器（因为它们是从左到右应用的，并且是最近应用的）过滤器优先于较早的过滤器）。</target>
        </trans-unit>
        <trans-unit id="e849457da680ae8c22e5576309ff8a5fa0b259e0" translate="yes" xml:space="preserve">
          <source>The meaning of the variables is the same as that of the return values from &lt;a href=&quot;#sys.exc_info&quot;&gt;&lt;code&gt;exc_info()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">变量的含义与上述&lt;a href=&quot;#sys.exc_info&quot;&gt; &lt;code&gt;exc_info()&lt;/code&gt; &lt;/a&gt;的返回值的含义相同。</target>
        </trans-unit>
        <trans-unit id="c25d6c022b116d44d4a41d054ee02d0e61d92c31" translate="yes" xml:space="preserve">
          <source>The meaning of the various alignment options is as follows:</source>
          <target state="translated">各种排列选项的含义如下:</target>
        </trans-unit>
        <trans-unit id="0ec5bf259f56524d4b3b2c7ae292e7cfc2d00ebf" translate="yes" xml:space="preserve">
          <source>The median is a robust measure of central location and is less affected by the presence of outliers. When the number of data points is odd, the middle data point is returned:</source>
          <target state="translated">中位数是衡量中心位置的稳健指标,受异常值存在的影响较小。当数据点数量为奇数时,返回中间的数据点。</target>
        </trans-unit>
        <trans-unit id="4b307c00274d2715bf6f9437f8c0a6ae07ee164b" translate="yes" xml:space="preserve">
          <source>The member variables to use in these generated methods are defined using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; type annotations. For example this code:</source>
          <target state="translated">这些生成的方法中使用的成员变量是使用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;类型注释定义的。例如此代码：</target>
        </trans-unit>
        <trans-unit id="fe72b703179dfb99a16193f12e81e1ca4c7de8a1" translate="yes" xml:space="preserve">
          <source>The message indicating which exception occurred is always the last string in the output.</source>
          <target state="translated">表示发生异常的消息总是输出中的最后一个字符串。</target>
        </trans-unit>
        <trans-unit id="f3414e3d0c8855d4944ae4a9e8fd5959374a9d1f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt;&lt;code&gt;unwrap()&lt;/code&gt;&lt;/a&gt; call does not return anything, unlike for an SSL socket where it returns the underlying socket.</source>
          <target state="translated">调用方法&lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt; &lt;code&gt;unwrap()&lt;/code&gt; &lt;/a&gt;不会返回任何内容，这与SSL套接字不同，它会返回基础套接字。</target>
        </trans-unit>
        <trans-unit id="b39c28cfe21e25b2fe481d66ea5a23208143c675" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Screen.mainloop()&lt;/code&gt; has been added. So when working only with Screen and Turtle objects one must not additionally import &lt;code&gt;mainloop()&lt;/code&gt; anymore.</source>
          <target state="translated">方法 &lt;code&gt;Screen.mainloop()&lt;/code&gt; 已添加。因此，当仅使用Screen和Turtle对象时，就不 &lt;code&gt;mainloop()&lt;/code&gt; 导入mainloop（）了。</target>
        </trans-unit>
        <trans-unit id="58dd8114fae3e2746ad30de805f9fef6eeab9270" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Screen.onkeypress()&lt;/code&gt; has been added as a complement to &lt;code&gt;Screen.onkey()&lt;/code&gt; which in fact binds actions to the keyrelease event. Accordingly the latter has got an alias: &lt;code&gt;Screen.onkeyrelease()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Screen.onkeypress()&lt;/code&gt; 方法作为对 &lt;code&gt;Screen.onkey()&lt;/code&gt; 的补充，该方法实际上将动作绑定到keyrelease事件。因此，后者具有别名： &lt;code&gt;Screen.onkeyrelease()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="968b2e6a8b6948a76dfa9e831d419178ced0070a" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Turtle.fill()&lt;/code&gt; has been eliminated. The behaviour of &lt;code&gt;begin_fill()&lt;/code&gt; and &lt;code&gt;end_fill()&lt;/code&gt; have changed slightly: now every filling-process must be completed with an &lt;code&gt;end_fill()&lt;/code&gt; call.</source>
          <target state="translated">方法 &lt;code&gt;Turtle.fill()&lt;/code&gt; 已被淘汰。 &lt;code&gt;begin_fill()&lt;/code&gt; 和 &lt;code&gt;end_fill()&lt;/code&gt; 的行为略有变化：现在，每个填充过程都必须使用 &lt;code&gt;end_fill()&lt;/code&gt; 调用来完成。</target>
        </trans-unit>
        <trans-unit id="035262622de2278bdf132b12c18cf3c653677b5f" translate="yes" xml:space="preserve">
          <source>The method attempts to write the &lt;em&gt;data&lt;/em&gt; to the underlying socket immediately. If that fails, the data is queued in an internal write buffer until it can be sent.</source>
          <target state="translated">该方法尝试立即将&lt;em&gt;数据&lt;/em&gt;写入基础套接字。如果失败，则数据将在内部写缓冲区中排队，直到可以发送为止。</target>
        </trans-unit>
        <trans-unit id="3cf40ed487d91e7457380cd252e90de79708fd63" translate="yes" xml:space="preserve">
          <source>The method can be called an arbitrary number of times while a connection is open.</source>
          <target state="translated">当一个连接打开时,该方法可以被调用任意次数。</target>
        </trans-unit>
        <trans-unit id="b29ab645cf2448985ba39cd190f32ec53a7459b5" translate="yes" xml:space="preserve">
          <source>The method closes the stream and the underlying socket.</source>
          <target state="translated">该方法关闭流和底层socket。</target>
        </trans-unit>
        <trans-unit id="01816c894f7b233ae62d7151cb395312046022fd" translate="yes" xml:space="preserve">
          <source>The method does not perform a cert exchange immediately. The server-side sends a CertificateRequest during the next write event and expects the client to respond with a certificate on the next read event.</source>
          <target state="translated">该方法不会立即执行证书交换。服务器端在下一个写事件中发送一个CertificateRequest,并期望客户端在下一个读事件中回复一个证书。</target>
        </trans-unit>
        <trans-unit id="419e915ce3494d855431a170188d460b2d7d3644" translate="yes" xml:space="preserve">
          <source>The method executes the number of Python calls given by the argument, directly and again under the profiler, measuring the time for both. It then computes the hidden overhead per profiler event, and returns that as a float. For example, on a 1.8Ghz Intel Core i5 running Mac OS X, and using Python&amp;rsquo;s time.process_time() as the timer, the magical number is about 4.04e-6.</source>
          <target state="translated">该方法直接在分析器下一次又一次地执行参数给出的Python调用次数，从而测量两者的时间。然后，它计算每个事件探查器事件的隐藏开销，并将其作为浮点数返回。例如，在运行Mac OS X并使用Python的time.process_time（）作为计时器的1.8Ghz Intel Core i5上，神奇的数字约为4.04e-6。</target>
        </trans-unit>
        <trans-unit id="0700da9398eacd929a7c0fe0ff121dbd3c05cd76" translate="yes" xml:space="preserve">
          <source>The method is usually used to check if a Future is not &lt;em&gt;cancelled&lt;/em&gt; before setting a result or an exception for it:</source>
          <target state="translated">该方法通常用于在设置结果或异常之前检查Future是否被&lt;em&gt;取消&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d4cf4161d9bb3d1ad96f25e17375a4359b8351db" translate="yes" xml:space="preserve">
          <source>The method may not store state in the &lt;code&gt;Codec&lt;/code&gt; instance. Use &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; for codecs which have to keep state in order to make decoding efficient.</source>
          <target state="translated">该方法可能不会在 &lt;code&gt;Codec&lt;/code&gt; 实例中存储状态。对于必须保持状态以提高解码效率的编解码器，请使用&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a08138c0bcfef877567ac8386b6733c420584b5" translate="yes" xml:space="preserve">
          <source>The method may not store state in the &lt;code&gt;Codec&lt;/code&gt; instance. Use &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; for codecs which have to keep state in order to make encoding efficient.</source>
          <target state="translated">该方法可能不会在 &lt;code&gt;Codec&lt;/code&gt; 实例中存储状态。对必须保持状态以提高编码效率的编解码器使用&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad825fbf3f4f294e19bd5348abedf12ddc3246f9" translate="yes" xml:space="preserve">
          <source>The method optionally resolves &lt;em&gt;name&lt;/em&gt; relative to the given &lt;em&gt;module&lt;/em&gt;.</source>
          <target state="translated">该方法可选地解析相对于给定&lt;em&gt;模块的&lt;/em&gt;&lt;em&gt;名称&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c433323e1ca328cb9e02211bfe128ac4d1e1435" translate="yes" xml:space="preserve">
          <source>The method raises a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; when called on the same context object from more than one OS thread, or when called recursively.</source>
          <target state="translated">当从多个OS线程对同一个上下文对象进行调用时，或者以递归方式调用时，该方法将引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56cdda3811549aac6c6fde1658bb9b7a3746720d" translate="yes" xml:space="preserve">
          <source>The method should be used along with the &lt;code&gt;drain()&lt;/code&gt; method:</source>
          <target state="translated">该方法应与 &lt;code&gt;drain()&lt;/code&gt; 方法一起使用：</target>
        </trans-unit>
        <trans-unit id="585eb4c0157e3caf086dd969d73a6de334b1cea7" translate="yes" xml:space="preserve">
          <source>The method should be used along with the &lt;code&gt;wait_closed()&lt;/code&gt; method:</source>
          <target state="translated">该方法应与 &lt;code&gt;wait_closed()&lt;/code&gt; 方法一起使用：</target>
        </trans-unit>
        <trans-unit id="76b503a5a7d6a125a51f118aac931c562926f71b" translate="yes" xml:space="preserve">
          <source>The method should only return a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object, with the preference being for &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法应仅返回&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象，首选项为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5e56105cade18e15926c49791daea205907abe9" translate="yes" xml:space="preserve">
          <source>The method should use a greedy read strategy meaning that it should read as much data as is allowed within the definition of the encoding and the given size, e.g. if optional encoding endings or state markers are available on the stream, these should be read too.</source>
          <target state="translated">该方法应该使用贪婪的读取策略,这意味着它应该在编码定义和给定大小的范围内读取尽可能多的数据,例如,如果流上有可选的编码结尾或状态标记,这些也应该被读取。</target>
        </trans-unit>
        <trans-unit id="824fc392e421ad586bba91aacdb284e674a0b48b" translate="yes" xml:space="preserve">
          <source>The method uses high-performance &lt;a href=&quot;os#os.sendfile&quot;&gt;&lt;code&gt;os.sendfile()&lt;/code&gt;&lt;/a&gt; if available.</source>
          <target state="translated">如果可用，该方法将使用高性能的&lt;a href=&quot;os#os.sendfile&quot;&gt; &lt;code&gt;os.sendfile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc2a40ae8205a9d07f2b34d726a06bef532b3722" translate="yes" xml:space="preserve">
          <source>The method writes a list (or any iterable) of bytes to the underlying socket immediately. If that fails, the data is queued in an internal write buffer until it can be sent.</source>
          <target state="translated">该方法立即向底层套接字写入一个字节列表(或任何可迭代的)。如果失败了,数据会在内部写缓冲区中排队,直到可以发送。</target>
        </trans-unit>
        <trans-unit id="28afad3806cf9a1749a5a2244379a96aad766b9b" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Turtle.shearfactor()&lt;/code&gt;, &lt;code&gt;Turtle.shapetransform()&lt;/code&gt; and &lt;code&gt;Turtle.get_shapepoly()&lt;/code&gt; have been added. Thus the full range of regular linear transforms is now available for transforming turtle shapes. &lt;code&gt;Turtle.tiltangle()&lt;/code&gt; has been enhanced in functionality: it now can be used to get or set the tiltangle. &lt;code&gt;Turtle.settiltangle()&lt;/code&gt; has been deprecated.</source>
          <target state="translated">已添加方法 &lt;code&gt;Turtle.shearfactor()&lt;/code&gt; ， &lt;code&gt;Turtle.shapetransform()&lt;/code&gt; 和 &lt;code&gt;Turtle.get_shapepoly()&lt;/code&gt; 。因此，现在可以使用所有常规线性变换来变换乌龟形状。 &lt;code&gt;Turtle.tiltangle()&lt;/code&gt; 的功能已得到增强：现在可用于获取或设置tiltangle。 &lt;code&gt;Turtle.settiltangle()&lt;/code&gt; 已弃用。</target>
        </trans-unit>
        <trans-unit id="50eb8eb74557b430c7f7bef208a37346eac89284" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Turtle.tracer()&lt;/code&gt;, &lt;code&gt;Turtle.window_width()&lt;/code&gt; and &lt;code&gt;Turtle.window_height()&lt;/code&gt; have been eliminated. Methods with these names and functionality are now available only as methods of &lt;code&gt;Screen&lt;/code&gt;. The functions derived from these remain available. (In fact already in Python 2.6 these methods were merely duplications of the corresponding &lt;code&gt;TurtleScreen&lt;/code&gt;/&lt;code&gt;Screen&lt;/code&gt;-methods.)</source>
          <target state="translated">方法 &lt;code&gt;Turtle.tracer()&lt;/code&gt; ， &lt;code&gt;Turtle.window_width()&lt;/code&gt; 和 &lt;code&gt;Turtle.window_height()&lt;/code&gt; 已被淘汰。具有这些名称和功能的方法现在仅可用作 &lt;code&gt;Screen&lt;/code&gt; 的方法。从这些派生的功能仍然可用。（实际上，在Python 2.6中，这些方法仅仅是对应的 &lt;code&gt;TurtleScreen&lt;/code&gt; / &lt;code&gt;Screen&lt;/code&gt; 方法的重复。）</target>
        </trans-unit>
        <trans-unit id="ac4777934c6a15af517a89f4ad75f7a72c3ab8e1" translate="yes" xml:space="preserve">
          <source>The methods on bytes and bytearray objects don&amp;rsquo;t accept strings as their arguments, just as the methods on strings don&amp;rsquo;t accept bytes as their arguments. For example, you have to write:</source>
          <target state="translated">字节和bytearray对象上的方法不接受字符串作为其参数，就像字符串上的方法不接受字节作为其参数一样。例如，您必须编写：</target>
        </trans-unit>
        <trans-unit id="4b81abcc0375f428186cc2027aa18bd9249e0208" translate="yes" xml:space="preserve">
          <source>The minimum number of bytes which can be written without blocking to a pipe when the pipe has been reported as ready for writing by &lt;a href=&quot;#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; or another interface in this module. This doesn&amp;rsquo;t apply to other kind of file-like objects such as sockets.</source>
          <target state="translated">当管道已经被&lt;a href=&quot;#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;或此模块中的另一个接口报告为可写入时，可以在不阻塞管道的情况下写入的最小字节数。这不适用于套接字等其他类型的文件状对象。</target>
        </trans-unit>
        <trans-unit id="69014cf2a55f92762b7bea0997f10b48877811c0" translate="yes" xml:space="preserve">
          <source>The minimum or maximum supported SSL or TLS version. These are magic constants. Their values don&amp;rsquo;t reflect the lowest and highest available TLS/SSL versions.</source>
          <target state="translated">支持的最低或最高SSL或TLS版本。这些是魔术常数。它们的值不反映最低和最高可用的TLS / SSL版本。</target>
        </trans-unit>
        <trans-unit id="a9d3fce18cbb20787a811d963cb69423a477e4c5" translate="yes" xml:space="preserve">
          <source>The minimum width of the column in pixels. The treeview widget will not make the column any smaller than specified by this option when the widget is resized or the user drags a column.</source>
          <target state="translated">列的最小宽度,单位为像素。当小组件调整大小或用户拖动列时,treeview小组件不会使列的宽度小于该选项指定的宽度。</target>
        </trans-unit>
        <trans-unit id="0a9f3bed05faef2986dd2a95d7c0d323acd94f4d" translate="yes" xml:space="preserve">
          <source>The minor version number as an integer</source>
          <target state="translated">小版本号为整数</target>
        </trans-unit>
        <trans-unit id="bba48e189c01aaa37121faac7385d214d5d64e3d" translate="yes" xml:space="preserve">
          <source>The mix-in class comes first, since it overrides a method defined in &lt;a href=&quot;#socketserver.UDPServer&quot;&gt;&lt;code&gt;UDPServer&lt;/code&gt;&lt;/a&gt;. Setting the various attributes also changes the behavior of the underlying server mechanism.</source>
          <target state="translated">混合类首先出现，因为它会覆盖&lt;a href=&quot;#socketserver.UDPServer&quot;&gt; &lt;code&gt;UDPServer&lt;/code&gt; 中&lt;/a&gt;定义的方法。设置各种属性还可以更改基础服务器机制的行为。</target>
        </trans-unit>
        <trans-unit id="3c63694843eba5485a85009c46ec4f198b86c481" translate="yes" xml:space="preserve">
          <source>The mixer object provides two file-like methods:</source>
          <target state="translated">mixer对象提供了两个类似文件的方法。</target>
        </trans-unit>
        <trans-unit id="5560aaaadfff00eb625f5638a1a8eba01711ff23" translate="yes" xml:space="preserve">
          <source>The mock classes and the &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorators all take arbitrary keyword arguments for configuration. For the &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorators the keywords are passed to the constructor of the mock being created. The keyword arguments are for configuring attributes of the mock:</source>
          <target state="translated">模拟类和&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;装饰器均采用任意关键字参数进行配置。对于&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;装饰器，将关键字传递给要创建的模拟的构造器。关键字参数用于配置模拟的属性：</target>
        </trans-unit>
        <trans-unit id="9119f0209f25543eed17e7cfe366994f21a3a00f" translate="yes" xml:space="preserve">
          <source>The mode as given in the constructor.</source>
          <target state="translated">在构造函数中给出的模式。</target>
        </trans-unit>
        <trans-unit id="fead8a4568bb22b92817cf465c80286ecf5882eb" translate="yes" xml:space="preserve">
          <source>The mode is unique in that it is the only statistic in this package that also applies to nominal (non-numeric) data:</source>
          <target state="translated">该模式的独特之处在于,它是本软件包中唯一一个也适用于名义(非数字)数据的统计量。</target>
        </trans-unit>
        <trans-unit id="5a9c3ad59ac9a555e1de1f8b922f093f31f7d536" translate="yes" xml:space="preserve">
          <source>The model is optional: it can appear once or not at all, as for &lt;code&gt;A?&lt;/code&gt;.</source>
          <target state="translated">该模型是可选的：对于 &lt;code&gt;A?&lt;/code&gt; ，它可以出现一次还是根本不出现。。</target>
        </trans-unit>
        <trans-unit id="ff5d61f00488c70597eb518738f38416f575cf71" translate="yes" xml:space="preserve">
          <source>The model must occur one or more times (like &lt;code&gt;A+&lt;/code&gt;).</source>
          <target state="translated">模型必须出现一次或多次（如 &lt;code&gt;A+&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d5b52edc5f1e2cb4521dca3df688323ad595e8b0" translate="yes" xml:space="preserve">
          <source>The model must occur zero or more times, as for &lt;code&gt;A*&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;A*&lt;/code&gt; 一样，模型必须出现零次或多次。</target>
        </trans-unit>
        <trans-unit id="77cba885f17e05c951b2dd5d63fc4e199fd1cd3b" translate="yes" xml:space="preserve">
          <source>The modern interface provides:</source>
          <target state="translated">现代化的界面提供。</target>
        </trans-unit>
        <trans-unit id="25133f1724d1d2880378d78f6662e244ccff0530" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; defines the following exception:</source>
          <target state="translated">该模块&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;定义了以下异常：</target>
        </trans-unit>
        <trans-unit id="2443b999e9492f46046323a6f3bb1c0562e20886" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; defines the following functions:</source>
          <target state="translated">该模块&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;定义了以下功能：</target>
        </trans-unit>
        <trans-unit id="2cb329685001bf0118f459c195781fb8d8425f8c" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-curses.panel&quot;&gt;&lt;code&gt;curses.panel&lt;/code&gt;&lt;/a&gt; defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-curses.panel&quot;&gt; &lt;code&gt;curses.panel&lt;/code&gt; &lt;/a&gt;模块定义以下功能：</target>
        </trans-unit>
        <trans-unit id="4938aeaee503440a6b190c0703735a55f42c4751" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt; defines the following function:</source>
          <target state="translated">模块&lt;a href=&quot;#module-curses.textpad&quot;&gt; &lt;code&gt;curses.textpad&lt;/code&gt; &lt;/a&gt;定义以下功能：</target>
        </trans-unit>
        <trans-unit id="d06fcda76d4c27cc337a6368bc8902e1c11e7814" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-encodings.idna&quot;&gt;&lt;code&gt;encodings.idna&lt;/code&gt;&lt;/a&gt; also implements the nameprep procedure, which performs certain normalizations on host names, to achieve case-insensitivity of international domain names, and to unify similar characters. The nameprep functions can be used directly if desired.</source>
          <target state="translated">模块&lt;a href=&quot;#module-encodings.idna&quot;&gt; &lt;code&gt;encodings.idna&lt;/code&gt; &lt;/a&gt;还实现了nameprep过程，该过程对主机名执行某些规范化操作，以实现国际域名的不区分大小写并统一相似字符。如果需要，可以直接使用nameprep函数。</target>
        </trans-unit>
        <trans-unit id="7e3bd4aa1421879cf9b0033581a365caff952062" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; defines an interactive source code debugger for Python programs. It supports setting (conditional) breakpoints and single stepping at the source line level, inspection of stack frames, source code listing, and evaluation of arbitrary Python code in the context of any stack frame. It also supports post-mortem debugging and can be called under program control.</source>
          <target state="translated">&lt;a href=&quot;#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;模块为Python程序定义了一个交互式源代码调试器。它支持在源代码行级别设置（条件）断点和单步执行，检查堆栈框架，源代码列表以及在任何堆栈框架的上下文中评估任意Python代码。它还支持事后调试，可以在程序控制下调用。</target>
        </trans-unit>
        <trans-unit id="e983723789ea50843ec1e624e85924489b7f2738" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; exports the following elements.</source>
          <target state="translated">模块&lt;a href=&quot;#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;输出以下元素。</target>
        </trans-unit>
        <trans-unit id="4186b8db465cd0630f65431378a0685f8c32cc63" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-stringprep&quot;&gt;&lt;code&gt;stringprep&lt;/code&gt;&lt;/a&gt; only exposes the tables from &lt;a href=&quot;https://tools.ietf.org/html/rfc3454.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3454&lt;/strong&gt;&lt;/a&gt;. As these tables would be very large to represent them as dictionaries or lists, the module uses the Unicode character database internally. The module source code itself was generated using the &lt;code&gt;mkstringprep.py&lt;/code&gt; utility.</source>
          <target state="translated">模块&lt;a href=&quot;#module-stringprep&quot;&gt; &lt;code&gt;stringprep&lt;/code&gt; &lt;/a&gt;仅公开&lt;a href=&quot;https://tools.ietf.org/html/rfc3454.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3454中&lt;/strong&gt;&lt;/a&gt;的表。由于这些表很大，无法将它们表示为字典或列表，因此该模块在内部使用Unicode字符数据库。模块源代码本身是使用 &lt;code&gt;mkstringprep.py&lt;/code&gt; 实用程序生成的。</target>
        </trans-unit>
        <trans-unit id="3066d03cea2519e31fc6944c2ef0280e8a3f5edf" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;#module-xml.sax.saxutils&quot;&gt;&lt;code&gt;xml.sax.saxutils&lt;/code&gt;&lt;/a&gt; contains a number of classes and functions that are commonly useful when creating SAX applications, either in direct use, or as base classes.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.sax.saxutils&quot;&gt; &lt;code&gt;xml.sax.saxutils&lt;/code&gt; &lt;/a&gt;模块包含许多类和函数，这些类和函数在直接或作为基类创建SAX应用程序时通常非常有用。</target>
        </trans-unit>
        <trans-unit id="63a24325a8da92f6418300a61ad684e7c3219e4b" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; contains tools for analyzing data streams generated by &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; source code has extensive comments about opcodes used by pickle protocols.</source>
          <target state="translated">&lt;a href=&quot;pickletools#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt;模块包含用于分析&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;生成的数据流的工具。&lt;a href=&quot;pickletools#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt;源代码对pickle协议使用的操作码有大量注释。</target>
        </trans-unit>
        <trans-unit id="87e79ee258eb981db6b59722f4605952f461aff6" translate="yes" xml:space="preserve">
          <source>The module also defines the following classes:</source>
          <target state="translated">该模块还定义了以下类:</target>
        </trans-unit>
        <trans-unit id="dfbfbc47808120cb4d36bd6d5cbe72c7406874fd" translate="yes" xml:space="preserve">
          <source>The module also defines the following utility function:</source>
          <target state="translated">该模块还定义了以下实用功能。</target>
        </trans-unit>
        <trans-unit id="10da8de05320d7d9ebf7f91666b3ed874229d861" translate="yes" xml:space="preserve">
          <source>The module also offers three general purpose functions based on heaps.</source>
          <target state="translated">该模块还提供了三个基于堆的通用函数。</target>
        </trans-unit>
        <trans-unit id="bd45b8cb45b64525fbb0822bfcae6d8d61d1d6e0" translate="yes" xml:space="preserve">
          <source>The module also provides a mapping from numeric codes to names and some functions. The functions mirror definitions in the Python C header files.</source>
          <target state="translated">该模块还提供了从数字代码到名称的映射和一些函数。这些函数反映了Python C头文件中的定义。</target>
        </trans-unit>
        <trans-unit id="7632aac969612cbc743a75095bf50d39b9f66081" translate="yes" xml:space="preserve">
          <source>The module also provides the following constants which are useful for reading and writing to platform dependent files:</source>
          <target state="translated">该模块还提供了以下常量,这些常量对读写平台相关文件很有用。</target>
        </trans-unit>
        <trans-unit id="26256433c5075bebffac2d143116d0ddcaafdfc1" translate="yes" xml:space="preserve">
          <source>The module also provides the following module level functions:</source>
          <target state="translated">该模块还提供以下模块级功能:</target>
        </trans-unit>
        <trans-unit id="c3113214bbd1f1aa3a95681b917ab8b4940c5b52" translate="yes" xml:space="preserve">
          <source>The module defines a large number of constants supplied by the OSS device driver; see &lt;code&gt;&amp;lt;sys/soundcard.h&amp;gt;&lt;/code&gt; on either Linux or FreeBSD for a listing.</source>
          <target state="translated">该模块定义了OSS设备驱动程序提供的大量常量。请参阅Linux或FreeBSD上的 &lt;code&gt;&amp;lt;sys/soundcard.h&amp;gt;&lt;/code&gt; 以获得列表。</target>
        </trans-unit>
        <trans-unit id="874b886cf28ca5442c4fa22da2b65c2891e1ea32" translate="yes" xml:space="preserve">
          <source>The module defines several functions, constants, and an exception. Some of the functions are simplified versions of the full featured methods for compiled regular expressions. Most non-trivial applications always use the compiled form.</source>
          <target state="translated">该模块定义了几个函数、常量和一个异常。其中一些函数是编译后的正则表达式的全功能方法的简化版本。大多数非平凡的应用程序总是使用编译后的形式。</target>
        </trans-unit>
        <trans-unit id="024ae3010c69937a7289c79211babfc8ee907711" translate="yes" xml:space="preserve">
          <source>The module defines the following class:</source>
          <target state="translated">该模块定义了以下类:</target>
        </trans-unit>
        <trans-unit id="6fa52f0e549dce3b28a6d79f2aad30ba6a2e7430" translate="yes" xml:space="preserve">
          <source>The module defines the following classes, functions and decorators.</source>
          <target state="translated">该模块定义了以下类、函数和装饰器。</target>
        </trans-unit>
        <trans-unit id="22bb70c33812c29fe86af163cf17411e71ac0c78" translate="yes" xml:space="preserve">
          <source>The module defines the following classes, functions and decorators:</source>
          <target state="translated">该模块定义了以下类、函数和装饰器。</target>
        </trans-unit>
        <trans-unit id="fa0bc5b119a58d4964bc11f77b568164a1ee8f73" translate="yes" xml:space="preserve">
          <source>The module defines the following constants:</source>
          <target state="translated">本模块定义了以下常数:</target>
        </trans-unit>
        <trans-unit id="1e2bd5e303f65b85636d423d1c268b91434c1eea" translate="yes" xml:space="preserve">
          <source>The module defines the following exception and functions:</source>
          <target state="translated">该模块定义了以下异常和功能。</target>
        </trans-unit>
        <trans-unit id="28331946602f3522c170d92e79d77aadf6102b50" translate="yes" xml:space="preserve">
          <source>The module defines the following exception:</source>
          <target state="translated">该模块定义了以下异常情况:</target>
        </trans-unit>
        <trans-unit id="04d197b522c8fb1994897a0502eca8e1b62677d9" translate="yes" xml:space="preserve">
          <source>The module defines the following functions for encoding and decoding with any codec:</source>
          <target state="translated">该模块定义了以下功能,用于对任何编解码器进行编码和解码。</target>
        </trans-unit>
        <trans-unit id="03fb19e5c04074af2e18bbfdaaba5da6c47f9a34" translate="yes" xml:space="preserve">
          <source>The module defines the following functions:</source>
          <target state="translated">该模块定义了以下功能:</target>
        </trans-unit>
        <trans-unit id="077cfa2f585fd44d642ae51f30fe4f6254171144" translate="yes" xml:space="preserve">
          <source>The module defines the following functions; each enters the debugger in a slightly different way:</source>
          <target state="translated">该模块定义了以下函数;每个函数进入调试器的方式略有不同。</target>
        </trans-unit>
        <trans-unit id="9faf40e36b0fcbb8576f18a93767aef44a3d28fc" translate="yes" xml:space="preserve">
          <source>The module defines the following items:</source>
          <target state="translated">该模块定义了以下项目:</target>
        </trans-unit>
        <trans-unit id="7172f69171db018c6e148890d56725f00ac93410" translate="yes" xml:space="preserve">
          <source>The module defines the following type:</source>
          <target state="translated">该模块定义了以下类型:</target>
        </trans-unit>
        <trans-unit id="797cb1411b4f0a2f0d2319e98ec5905a710d20f2" translate="yes" xml:space="preserve">
          <source>The module defines the following user-callable items:</source>
          <target state="translated">该模块定义了以下用户可调用的项目:</target>
        </trans-unit>
        <trans-unit id="f0b5d68256b4702545d5eef364d354d70d851d74" translate="yes" xml:space="preserve">
          <source>The module defines the following variables and functions:</source>
          <target state="translated">本模块定义了以下变量和函数。</target>
        </trans-unit>
        <trans-unit id="846edea72d8187506a3a85ac91eaaf40568fd3d2" translate="yes" xml:space="preserve">
          <source>The module defines the following:</source>
          <target state="translated">该模块定义如下:</target>
        </trans-unit>
        <trans-unit id="23d3546c1aa2d6673cb447d510e6b9aa78754bfa" translate="yes" xml:space="preserve">
          <source>The module defines these functions:</source>
          <target state="translated">该模块定义了这些功能。</target>
        </trans-unit>
        <trans-unit id="b71bb3aab4367a23da4a8face4e42418b941f5a4" translate="yes" xml:space="preserve">
          <source>The module defines three convenience functions and a public class:</source>
          <target state="translated">该模块定义了三个方便函数和一个公共类。</target>
        </trans-unit>
        <trans-unit id="f42cb09269534ec707850d964bd72f320fff3915" translate="yes" xml:space="preserve">
          <source>The module defines two convenience functions:</source>
          <target state="translated">该模块定义了两个便利功能。</target>
        </trans-unit>
        <trans-unit id="cbf10bb8aed90ee97ac3f1f31c84be5fe46466e5" translate="yes" xml:space="preserve">
          <source>The module design is centered around three concepts: the decimal number, the context for arithmetic, and signals.</source>
          <target state="translated">模块设计围绕三个概念展开:小数、运算的背景和信号。</target>
        </trans-unit>
        <trans-unit id="7ce8d6264a82945a8b381b44276c79dc40baf0f1" translate="yes" xml:space="preserve">
          <source>The module docstring, and all function, class and method docstrings are searched. Objects imported into the module are not searched.</source>
          <target state="translated">搜索模块 docstring 以及所有函数、类和方法 docstrings。导入模块的对象不会被搜索到。</target>
        </trans-unit>
        <trans-unit id="144730e48592891534a7774df14c8076adc731ab" translate="yes" xml:space="preserve">
          <source>The module formerly strictly applied the parsing rules described in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2068.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2068&lt;/strong&gt;&lt;/a&gt; specifications. It has since been discovered that MSIE 3.0x doesn&amp;rsquo;t follow the character rules outlined in those specs and also many current day browsers and servers have relaxed parsing rules when comes to Cookie handling. As a result, the parsing rules used are a bit less strict.</source>
          <target state="translated">该模块以前严格应用了&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2068.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2068&lt;/strong&gt;&lt;/a&gt;规范中描述的解析规则。此后发现，MSIE 3.0x不遵循那些规范中概述的字符规则，并且当涉及Cookie处理时，许多当今的浏览器和服务器也放宽了解析规则。结果，所使用的解析规则不太严格。</target>
        </trans-unit>
        <trans-unit id="327780fdbc21e230d1a3bec2f2a9a960d5fea278" translate="yes" xml:space="preserve">
          <source>The module has been designed to match the Internet RFC on Relative Uniform Resource Locators. It supports the following URL schemes: &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;ftp&lt;/code&gt;, &lt;code&gt;gopher&lt;/code&gt;, &lt;code&gt;hdl&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, &lt;code&gt;imap&lt;/code&gt;, &lt;code&gt;mailto&lt;/code&gt;, &lt;code&gt;mms&lt;/code&gt;, &lt;code&gt;news&lt;/code&gt;, &lt;code&gt;nntp&lt;/code&gt;, &lt;code&gt;prospero&lt;/code&gt;, &lt;code&gt;rsync&lt;/code&gt;, &lt;code&gt;rtsp&lt;/code&gt;, &lt;code&gt;rtspu&lt;/code&gt;, &lt;code&gt;sftp&lt;/code&gt;, &lt;code&gt;shttp&lt;/code&gt;, &lt;code&gt;sip&lt;/code&gt;, &lt;code&gt;sips&lt;/code&gt;, &lt;code&gt;snews&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt;, &lt;code&gt;svn+ssh&lt;/code&gt;, &lt;code&gt;telnet&lt;/code&gt;, &lt;code&gt;wais&lt;/code&gt;, &lt;code&gt;ws&lt;/code&gt;, &lt;code&gt;wss&lt;/code&gt;.</source>
          <target state="translated">设计该模块以匹配相对统一资源定位符上的Internet RFC。它支持下列URL方案： &lt;code&gt;file&lt;/code&gt; ， &lt;code&gt;ftp&lt;/code&gt; ， &lt;code&gt;gopher&lt;/code&gt; ， &lt;code&gt;hdl&lt;/code&gt; ， &lt;code&gt;http&lt;/code&gt; ， &lt;code&gt;https&lt;/code&gt; ， &lt;code&gt;imap&lt;/code&gt; ， &lt;code&gt;mailto&lt;/code&gt; ， &lt;code&gt;mms&lt;/code&gt; ， &lt;code&gt;news&lt;/code&gt; ， &lt;code&gt;nntp&lt;/code&gt; ， &lt;code&gt;prospero&lt;/code&gt; ， &lt;code&gt;rsync&lt;/code&gt; 的， &lt;code&gt;rtsp&lt;/code&gt; ， &lt;code&gt;rtspu&lt;/code&gt; ， &lt;code&gt;sftp&lt;/code&gt; ， &lt;code&gt;shttp&lt;/code&gt; ， &lt;code&gt;sip&lt;/code&gt; ， &lt;code&gt;sips&lt;/code&gt; ， &lt;code&gt;snews&lt;/code&gt; ， &lt;code&gt;svn&lt;/code&gt; ， &lt;code&gt;svn+ssh&lt;/code&gt; ， &lt;code&gt;telnet&lt;/code&gt; ， &lt;code&gt;wais&lt;/code&gt; ， &lt;code&gt;ws&lt;/code&gt; ， &lt;code&gt;wss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76729a25113538074db3b866bb591de93f852e4c" translate="yes" xml:space="preserve">
          <source>The module implements both the normal and wide char variants of the console I/O api. The normal API deals only with ASCII characters and is of limited use for internationalized applications. The wide char API should be used where ever possible.</source>
          <target state="translated">该模块实现了控制台I/O api的普通和宽字符变体。普通的API只处理ASCII字符,对于国际化的应用来说用途有限。宽字符API应该尽可能地使用。</target>
        </trans-unit>
        <trans-unit id="43ce36ef0159d93cc580fcb8d164ea5586169132" translate="yes" xml:space="preserve">
          <source>The module implements three types of queue, which differ only in the order in which the entries are retrieved. In a</source>
          <target state="translated">该模块实现了三种类型的队列,它们只是在检索条目的顺序上有所不同。在一个</target>
        </trans-unit>
        <trans-unit id="57cf9e8efb9e3806082960f0bfba16594e49075f" translate="yes" xml:space="preserve">
          <source>The module is implemented in C, so tracebacks can be dumped on a crash or when Python is deadlocked.</source>
          <target state="translated">该模块是用 C 语言实现的,因此可以在崩溃或 Python 出现死锁时进行回溯。</target>
        </trans-unit>
        <trans-unit id="c321b755a7aa4091e7f4f0f69a897d2098d18f55" translate="yes" xml:space="preserve">
          <source>The module is not intended to be a competitor to third-party libraries such as &lt;a href=&quot;https://numpy.org&quot;&gt;NumPy&lt;/a&gt;, &lt;a href=&quot;https://www.scipy.org/&quot;&gt;SciPy&lt;/a&gt;, or proprietary full-featured statistics packages aimed at professional statisticians such as Minitab, SAS and Matlab. It is aimed at the level of graphing and scientific calculators.</source>
          <target state="translated">该模块无意与第三方库（例如&lt;a href=&quot;https://numpy.org&quot;&gt;NumPy&lt;/a&gt;，&lt;a href=&quot;https://www.scipy.org/&quot;&gt;SciPy&lt;/a&gt;）或专有的功能齐全的统计软件包（专门针对Minitab，SAS和Matlab等专业统计人员）竞争。它针对图形和科学计算器的水平。</target>
        </trans-unit>
        <trans-unit id="bc2e95cd9451b2f645a6d48cdda1e50df7673e41" translate="yes" xml:space="preserve">
          <source>The module itself defines the following classes:</source>
          <target state="translated">该模块本身定义了以下类。</target>
        </trans-unit>
        <trans-unit id="5bb598384008e20326380dc11bbe32d2e3c184cc" translate="yes" xml:space="preserve">
          <source>The module provides a lot of functionality and flexibility. If you are unfamiliar with logging, the best way to get to grips with it is to see the tutorials (see the links on the right).</source>
          <target state="translated">该模块提供了很多功能和灵活性。如果你对记录不熟悉,最好的方法是看教程(见右边的链接)。</target>
        </trans-unit>
        <trans-unit id="7bbc30796bf82c1c05869cf1c54c501ab4786bfc" translate="yes" xml:space="preserve">
          <source>The module provides one class and a number of convenience functions. The functions are the normal interface to this module, but some applications may be interested in the class as well.</source>
          <target state="translated">该模块提供了一个类和一些方便的函数。这些函数是本模块的正常接口,但一些应用程序可能对该类也感兴趣。</target>
        </trans-unit>
        <trans-unit id="ecbbdca511a87b0445a0a413d2ba76a0ce3e03cb" translate="yes" xml:space="preserve">
          <source>The module provides the following classes:</source>
          <target state="translated">该模块提供了以下类:</target>
        </trans-unit>
        <trans-unit id="3f5bf5944eaee91afafc2c41d0d2f7a13c18742d" translate="yes" xml:space="preserve">
          <source>The module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an &amp;ldquo;iterator algebra&amp;rdquo; making it possible to construct specialized tools succinctly and efficiently in pure Python.</source>
          <target state="translated">该模块标准化了一组核心的快速，高效内存工具，这些工具本身或结合使用很有用。它们共同构成了一个&amp;ldquo;迭代器代数&amp;rdquo;，从而可以在纯Python中简洁高效地构建专用工具。</target>
        </trans-unit>
        <trans-unit id="5fb9e4d7a7f1d7376cefe551b30ee86b73aa9553" translate="yes" xml:space="preserve">
          <source>The module supplies the following functions, patterned on those in the standard C library:</source>
          <target state="translated">该模块提供了以下函数,与标准C库中的函数类似。</target>
        </trans-unit>
        <trans-unit id="8fe5969af5cdee1c4049ceb5b572e2560cd4c8d6" translate="yes" xml:space="preserve">
          <source>The module uses a global variable to store the name of the directory used for temporary files returned by &lt;a href=&quot;#tempfile.gettempdir&quot;&gt;&lt;code&gt;gettempdir()&lt;/code&gt;&lt;/a&gt;. It can be set directly to override the selection process, but this is discouraged. All functions in this module take a &lt;em&gt;dir&lt;/em&gt; argument which can be used to specify the directory and this is the recommended approach.</source>
          <target state="translated">该模块使用全局变量来存储用于由&lt;a href=&quot;#tempfile.gettempdir&quot;&gt; &lt;code&gt;gettempdir()&lt;/code&gt; &lt;/a&gt;返回的临时文件的目录的名称。可以直接设置它以覆盖选择过程，但是不建议这样做。该模块中的所有函数都带有一个&lt;em&gt;dir&lt;/em&gt;参数，该参数可用于指定目录，这是推荐的方法。</target>
        </trans-unit>
        <trans-unit id="873a3b05cc0bf1b3ee771cf844e30c4aaee942f0" translate="yes" xml:space="preserve">
          <source>The module uses the same names and symbols as defined by Unicode Standard Annex #44, &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;&amp;ldquo;Unicode Character Database&amp;rdquo;&lt;/a&gt;. It defines the following functions:</source>
          <target state="translated">该模块使用与Unicode标准附件＃44 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;&amp;ldquo; Unicode字符数据库&amp;rdquo;中&lt;/a&gt;定义的相同的名称和符号。它定义了以下功能：</target>
        </trans-unit>
        <trans-unit id="e0426603301ba7e1a6fdf07a67502a7212daf5ae" translate="yes" xml:space="preserve">
          <source>The module uses traceback objects &amp;mdash; this is the object type that is stored in the &lt;a href=&quot;sys#sys.last_traceback&quot;&gt;&lt;code&gt;sys.last_traceback&lt;/code&gt;&lt;/a&gt; variable and returned as the third item from &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块使用回溯对象&amp;mdash;这是一种对象类型，该对象类型存储在&lt;a href=&quot;sys#sys.last_traceback&quot;&gt; &lt;code&gt;sys.last_traceback&lt;/code&gt; &lt;/a&gt;变量中，并作为&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; 中&lt;/a&gt;的第三项返回。</target>
        </trans-unit>
        <trans-unit id="c9ff4e08b4b410516a4ba604c2ad0d2319f9bcd3" translate="yes" xml:space="preserve">
          <source>The module&amp;rsquo;s public names (its API) are detected automatically based on whether they match the public name convention and were defined in &lt;em&gt;module&lt;/em&gt;.</source>
          <target state="translated">根据模块的公共名称（它的API）是否符合公共名称约定并在&lt;em&gt;模块&lt;/em&gt;中定义，自动检测它们。</target>
        </trans-unit>
        <trans-unit id="64f2b1f04817a07aefdf123adb04ad0457bb4f80" translate="yes" xml:space="preserve">
          <source>The modules described in this chapter deal with disk files and directories. For example, there are modules for reading the properties of files, manipulating paths in a portable way, and creating temporary files. The full list of modules in this chapter is:</source>
          <target state="translated">本章介绍的模块都是处理磁盘文件和目录的。例如,有读取文件属性、以可移植的方式操作路径和创建临时文件的模块。本章模块的完整列表是:。</target>
        </trans-unit>
        <trans-unit id="db934eb9e1a19c8294f8b8fd51f11e31549e6d50" translate="yes" xml:space="preserve">
          <source>The modules described in this chapter help you write software. For example, the &lt;a href=&quot;pydoc#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; module takes a module and generates documentation based on the module&amp;rsquo;s contents. The &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; modules contains frameworks for writing unit tests that automatically exercise code and verify that the expected output is produced. &lt;strong&gt;2to3&lt;/strong&gt; can translate Python 2.x source code into valid Python 3.x code.</source>
          <target state="translated">本章介绍的模块可帮助您编写软件。例如，&lt;a href=&quot;pydoc#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;模块获取一个模块并根据该模块的内容生成文档。的&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块包含用于编写单元测试自动行使代码并确认该期望的输出产生框架。&lt;strong&gt;2to3&lt;/strong&gt;可以将Python 2.x源代码转换为有效的Python 3.x代码。</target>
        </trans-unit>
        <trans-unit id="e092e37848f0a1fc4fbb491bdcd7194396632b1c" translate="yes" xml:space="preserve">
          <source>The modulus (absolute value) of a complex number &lt;em&gt;x&lt;/em&gt; can be computed using the built-in &lt;a href=&quot;functions#abs&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; function. There is no separate &lt;a href=&quot;#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt; module function for this operation.</source>
          <target state="translated">可以使用内置的&lt;a href=&quot;functions#abs&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;函数来计算复数&lt;em&gt;x&lt;/em&gt;的模数（绝对值）。此操作没有单独的&lt;a href=&quot;#module-cmath&quot;&gt; &lt;code&gt;cmath&lt;/code&gt; &lt;/a&gt;模块功能。</target>
        </trans-unit>
        <trans-unit id="526f0ffb4f4e5a8eba7594ed625d05dfc267705d" translate="yes" xml:space="preserve">
          <source>The month&amp;rsquo;s head CSS class (used by &lt;code&gt;formatmonthname()&lt;/code&gt;). The default value is &lt;code&gt;&quot;month&quot;&lt;/code&gt;.</source>
          <target state="translated">本月的头CSS类（由 &lt;code&gt;formatmonthname()&lt;/code&gt; 使用）。默认值为 &lt;code&gt;&quot;month&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29a496cdc2a9331c2ac2e678e90aef6f660f6ab5" translate="yes" xml:space="preserve">
          <source>The most common exception raised is &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. This occurs, for example, when trying to execute a non-existent file. Applications should prepare for &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="translated">引发的最常见异常是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。例如，在尝试执行不存在的文件时，就会发生这种情况。应用程序应准备&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="f236c249aa0f9c62bcc369ec81c61a6eb8efb720" translate="yes" xml:space="preserve">
          <source>The most common way to change the way a specific config parser works is to use the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; options:</source>
          <target state="translated">更改特定配置解析器工作方式的最常见方法是使用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="e972c19b4baeca9c65135f5ebb752d6c7da5cb98" translate="yes" xml:space="preserve">
          <source>The most common way to change the way a specific config parser works is to use the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; options:</source>
          <target state="translated">更改特定配置解析器工作方式的最常见方法是使用&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="6d76a43b379d5d84db61af7a51ae23477afde169" translate="yes" xml:space="preserve">
          <source>The most interesting thing about Enum members is that they are singletons. &lt;code&gt;EnumMeta&lt;/code&gt; creates them all while it is creating the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class itself, and then puts a custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; in place to ensure that no new ones are ever instantiated by returning only the existing member instances.</source>
          <target state="translated">关于枚举成员最有趣的事情是他们是单身人士。 &lt;code&gt;EnumMeta&lt;/code&gt; 在创建&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;类本身的同时创建它们的全部，然后放置一个自定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;，以确保通过仅返回现有成员实例而不会实例化任何新实例。</target>
        </trans-unit>
        <trans-unit id="3e94e2e331013a92e71b424bbb92d7b9c6430e64" translate="yes" xml:space="preserve">
          <source>The most interesting thing about Enum members is that they are singletons. &lt;code&gt;EnumMeta&lt;/code&gt; creates them all while it is creating the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class itself, and then puts a custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; in place to ensure that no new ones are ever instantiated by returning only the existing member instances.</source>
          <target state="translated">关于枚举成员最有趣的事情是他们是单身人士。 &lt;code&gt;EnumMeta&lt;/code&gt; 在创建&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;类本身的同时创建它们的全部，然后放置一个自定义&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;，以确保通过仅返回现有成员实例而不会实例化任何新实例。</target>
        </trans-unit>
        <trans-unit id="d4a7c3338a4e761bd7ca0d534f01fb72fa39a84f" translate="yes" xml:space="preserve">
          <source>The most negative &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;timedelta(-999999999)&lt;/code&gt;.</source>
          <target state="translated">最负的&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;timedelta(-999999999)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="065b9d8aa9a053eb2fe7a09a04119c39efa897ef" translate="yes" xml:space="preserve">
          <source>The most positive &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;timedelta(days=999999999,
hours=23, minutes=59, seconds=59, microseconds=999999)&lt;/code&gt;.</source>
          <target state="translated">最正的&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;timedelta(days=999999999, hours=23, minutes=59, seconds=59, microseconds=999999)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fc1fc1cf5fe2c4bd12bd6e4ce5cdacc7f82bf2b" translate="yes" xml:space="preserve">
          <source>The most powerful tool for doing this is &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt;. It does not require a blocking read to obtain the XML data, and is instead fed with data incrementally with &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.feed&quot;&gt;&lt;code&gt;XMLPullParser.feed()&lt;/code&gt;&lt;/a&gt; calls. To get the parsed XML elements, call &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;XMLPullParser.read_events()&lt;/code&gt;&lt;/a&gt;. Here is an example:</source>
          <target state="translated">最强大的工具是&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt;。它不需要阻塞读取即可获取XML数据，而是通过&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.feed&quot;&gt; &lt;code&gt;XMLPullParser.feed()&lt;/code&gt; &lt;/a&gt;调用以增量方式提供数据。要获取已解析的XML元素，请调用&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;XMLPullParser.read_events()&lt;/code&gt; &lt;/a&gt;。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="bf4e41ec1f03689ec5bfa5a8d19acc3479730130" translate="yes" xml:space="preserve">
          <source>The most recent supported protocol in the &lt;code&gt;CAPABILITY&lt;/code&gt; response from the server.</source>
          <target state="translated">服务器的 &lt;code&gt;CAPABILITY&lt;/code&gt; 响应中最新支持的协议。</target>
        </trans-unit>
        <trans-unit id="927eea60c2a0e72cc4b32dd44e266c02dfd67281" translate="yes" xml:space="preserve">
          <source>The most useful way to define a &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; class is by subclassing from &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; and overriding some or all of the methods above. &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; itself may be used as a &amp;lsquo;null policy&amp;rsquo; to allow setting and receiving any and all cookies (this is unlikely to be useful).</source>
          <target state="translated">定义&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;类的最有用方法是通过从&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt;继承子类并覆盖上面的部分或全部方法。&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;本身可用作&amp;ldquo;空策略&amp;rdquo;，以允许设置和接收任何和所有cookie（这不太可能有用）。</target>
        </trans-unit>
        <trans-unit id="3ce4cd7369a4eb79feb821d03c53f93b4bfb15f9" translate="yes" xml:space="preserve">
          <source>The mouse cursor is over the widget and pressing a mouse button will cause some action to occur</source>
          <target state="translated">鼠标光标在小组件上,按下鼠标按钮将导致一些操作发生。</target>
        </trans-unit>
        <trans-unit id="44bdca45752dc48424aca038859a3e42e33af078" translate="yes" xml:space="preserve">
          <source>The multiset methods are designed only for use cases with positive values. The inputs may be negative or zero, but only outputs with positive values are created. There are no type restrictions, but the value type needs to support addition, subtraction, and comparison.</source>
          <target state="translated">多组方法仅设计用于具有正值的用例。输入可以是负值或零,但只创建正值的输出。没有类型限制,但值类型需要支持加、减和比较。</target>
        </trans-unit>
        <trans-unit id="3648c79f0c384a3cba9219a88d81aad0bc5f8b11" translate="yes" xml:space="preserve">
          <source>The name and value are returned unmodified.</source>
          <target state="translated">名称和值都不做修改地返回。</target>
        </trans-unit>
        <trans-unit id="b826691f5f47e95bb5fa8eb238fbc74cce086503" translate="yes" xml:space="preserve">
          <source>The name is parsed as everything up to the &amp;lsquo;&lt;code&gt;:&lt;/code&gt;&amp;rsquo; and returned unmodified. The value is determined by stripping leading whitespace off the remainder of the first line, joining all subsequent lines together, and stripping any trailing carriage return or linefeed characters.</source>
          <target state="translated">该名称将被解析为直到' &lt;code&gt;:&lt;/code&gt; ' 为止的所有内容，并且不做任何修改就返回。该值是通过以下方式确定的：从第一行的其余部分中去除前导空格，将所有后续行连接在一起，并去除所有尾随的回车符或换行符。</target>
        </trans-unit>
        <trans-unit id="b50692e1777fdc3c0cea5009d79bb612176f1d8e" translate="yes" xml:space="preserve">
          <source>The name is returned unchanged. If the input value has a &lt;code&gt;name&lt;/code&gt; attribute and it matches &lt;em&gt;name&lt;/em&gt; ignoring case, the value is returned unchanged. Otherwise the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; are passed to &lt;code&gt;header_factory&lt;/code&gt;, and the resulting header object is returned as the value. In this case a &lt;code&gt;ValueError&lt;/code&gt; is raised if the input value contains CR or LF characters.</source>
          <target state="translated">名称返回不变。如果输入值具有 &lt;code&gt;name&lt;/code&gt; 属性，并且匹配&lt;em&gt;名称&lt;/em&gt;忽略大小写，则该值将保持不变。否则，&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值&lt;/em&gt;将传递给 &lt;code&gt;header_factory&lt;/code&gt; ，并且返回的标头对象将作为值返回。在这种情况下，如果输入值包含CR或LF字符，则会引发 &lt;code&gt;ValueError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12d8c7bcddc467b764e4f4421f5577f57726ccd3" translate="yes" xml:space="preserve">
          <source>The name of a child window</source>
          <target state="translated">子窗口的名称</target>
        </trans-unit>
        <trans-unit id="2524a5cebcbdfb771179b6a0e664c17235b2ec37" translate="yes" xml:space="preserve">
          <source>The name of a directory, or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; referring to a directory, in which case a new application archive will be created from the content of that directory.</source>
          <target state="translated">目录的名称，或引用目录&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;的类似路径的对象&lt;/a&gt;，在这种情况下，将从该目录的内容中创建一个新的应用程序存档。</target>
        </trans-unit>
        <trans-unit id="5c7a83ef28883e2d6883f8007b720ccddbe1c2d3" translate="yes" xml:space="preserve">
          <source>The name of a directory, or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; referring to a directory, in which case a new application archive will be created from the content of that directory.</source>
          <target state="translated">目录的名称，或引用目录&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;的类似路径的对象&lt;/a&gt;，在这种情况下，将从该目录的内容中创建一个新的应用程序存档。</target>
        </trans-unit>
        <trans-unit id="3348a0d948f72103aa59b0cbb79cb0826f47dd61" translate="yes" xml:space="preserve">
          <source>The name of an existing application archive file, or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; referring to such a file, in which case the file is copied to the target (modifying it to reflect the value given for the &lt;em&gt;interpreter&lt;/em&gt; argument). The file name should include the &lt;code&gt;.pyz&lt;/code&gt; extension, if required.</source>
          <target state="translated">现有应用程序归档文件的名称，或引用此类文件&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;的类似路径的对象&lt;/a&gt;，在这种情况下，文件将复制到目标（对其进行修改以反映为&lt;em&gt;解释器&lt;/em&gt;参数指定的值）。如果需要，文件名应包含 &lt;code&gt;.pyz&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="a79b80706daaf3283b8e7116b8819faf8483f8b2" translate="yes" xml:space="preserve">
          <source>The name of an existing application archive file, or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; referring to such a file, in which case the file is copied to the target (modifying it to reflect the value given for the &lt;em&gt;interpreter&lt;/em&gt; argument). The file name should include the &lt;code&gt;.pyz&lt;/code&gt; extension, if required.</source>
          <target state="translated">现有应用程序归档文件的名称，或引用此类文件&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;的类似路径的对象&lt;/a&gt;，在这种情况下，文件将复制到目标（对其进行修改以反映为&lt;em&gt;解释器&lt;/em&gt;参数指定的值）。如果需要，文件名应包含 &lt;code&gt;.pyz&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="f9f838b30f9b77d8336536f5c6f4b31fe69bc9b8" translate="yes" xml:space="preserve">
          <source>The name of the Python codec used to convert Unicode to the &lt;em&gt;output_charset&lt;/em&gt;. If no conversion codec is necessary, this attribute will have the same value as the &lt;em&gt;input_codec&lt;/em&gt;.</source>
          <target state="translated">用于将Unicode转换为&lt;em&gt;output_charset&lt;/em&gt;的Python编解码器的名称。如果不需要转换编解码器，则此属性将具有与&lt;em&gt;input_codec&lt;/em&gt;相同的值。</target>
        </trans-unit>
        <trans-unit id="1b7d36949b7dbdaceda289403bc4995730e79876" translate="yes" xml:space="preserve">
          <source>The name of the Python codec used to convert the &lt;em&gt;input_charset&lt;/em&gt; to Unicode. If no conversion codec is necessary, this attribute will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">用于将&lt;em&gt;input_charset&lt;/em&gt;转换为Unicode 的Python编解码器的名称。如果不需要转换编解码器，则此属性将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20e49cc2b4a055cc134803db32c1f3315bbe22f9" translate="yes" xml:space="preserve">
          <source>The name of the class, function, method, descriptor, or generator instance.</source>
          <target state="translated">类、函数、方法、描述符或生成器实例的名称。</target>
        </trans-unit>
        <trans-unit id="9c2d757ce27c67d976e0bb232ff208d435247d6f" translate="yes" xml:space="preserve">
          <source>The name of the class.</source>
          <target state="translated">类的名称。</target>
        </trans-unit>
        <trans-unit id="cf0e82e792056159c3d15446c1c3ba19cf054ab2" translate="yes" xml:space="preserve">
          <source>The name of the cookie.</source>
          <target state="translated">饼干的名字。</target>
        </trans-unit>
        <trans-unit id="db2786e8b64a4f2a93fc7639bce370526d3004c5" translate="yes" xml:space="preserve">
          <source>The name of the current input file, as initially set at class instantiation time or stacked by later source requests. It may be useful to examine this when constructing error messages.</source>
          <target state="translated">当前输入文件的名称,是在类实例化时初始设置的,或由后来的源请求堆叠的。在构建错误信息时,检查这个文件可能会很有用。</target>
        </trans-unit>
        <trans-unit id="87a5c766718310779911b628faec33c39699db12" translate="yes" xml:space="preserve">
          <source>The name of the encoding that raised the error.</source>
          <target state="translated">引起错误的编码名称。</target>
        </trans-unit>
        <trans-unit id="eccb9096ed9393aa7f6cd784f1b309a8d579285f" translate="yes" xml:space="preserve">
          <source>The name of the encoding used to decode the stream&amp;rsquo;s bytes into strings, and to encode strings into bytes.</source>
          <target state="translated">编码的名称，用于将流的字节解码为字符串，并将字符串编码为字节。</target>
        </trans-unit>
        <trans-unit id="c0f51ba3fc7703bf9d455ad50fbda867f667dbbb" translate="yes" xml:space="preserve">
          <source>The name of the encoding.</source>
          <target state="translated">编码的名称。</target>
        </trans-unit>
        <trans-unit id="5c6420b071c114d8b7b1869e27cd2b6ac4b63af8" translate="yes" xml:space="preserve">
          <source>The name of the file that this &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; was extracted from; or &lt;code&gt;None&lt;/code&gt; if the filename is unknown, or if the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; was not extracted from a file.</source>
          <target state="translated">提取此&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;的文件的名称；或 &lt;code&gt;None&lt;/code&gt; 如果文件名是未知的，或者如果&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;不是从文件中提取的。</target>
        </trans-unit>
        <trans-unit id="42c158643e80bd25167c62593a8c6b69e164e4b7" translate="yes" xml:space="preserve">
          <source>The name of the function or method which invoked the logging call.</source>
          <target state="translated">援引记录调用的函数或方法的名称。</target>
        </trans-unit>
        <trans-unit id="8d24347b639fc5c1199b8f3590bff6a146e13c82" translate="yes" xml:space="preserve">
          <source>The name of the function.</source>
          <target state="translated">功能的名称。</target>
        </trans-unit>
        <trans-unit id="d968ec93775a8147339e1197e1ba03690ce8d68c" translate="yes" xml:space="preserve">
          <source>The name of the header (the portion of the field before the &amp;lsquo;:&amp;rsquo;). This is exactly the value passed in the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt;&lt;code&gt;header_factory&lt;/code&gt;&lt;/a&gt; call for &lt;em&gt;name&lt;/em&gt;; that is, case is preserved.</source>
          <target state="translated">标头名称（&amp;ldquo;：&amp;rdquo;之前的字段部分）。这恰好是在&lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt; &lt;code&gt;header_factory&lt;/code&gt; &lt;/a&gt;调用中为&lt;em&gt;name&lt;/em&gt;传递的值；也就是说，保留大小写。</target>
        </trans-unit>
        <trans-unit id="8acf5f3263f7bad6e8395afeee08162402022f0d" translate="yes" xml:space="preserve">
          <source>The name of the last matched capturing group, or &lt;code&gt;None&lt;/code&gt; if the group didn&amp;rsquo;t have a name, or if no group was matched at all.</source>
          <target state="translated">最后匹配的捕获组的名称；如果该组没有名称，或者根本没有匹配的组，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1115953db6f79d6d319ff201aaf3b93a34c34282" translate="yes" xml:space="preserve">
          <source>The name of the library passed in the constructor.</source>
          <target state="translated">构造函数中传递的库名。</target>
        </trans-unit>
        <trans-unit id="529036ebea438d597d7771e0b1b7f5ecbbc43a65" translate="yes" xml:space="preserve">
          <source>The name of the module defining the class described.</source>
          <target state="translated">定义所述类的模块名称。</target>
        </trans-unit>
        <trans-unit id="f0fb2bc01c4ab3c3a016eb3065876161a9a89e2c" translate="yes" xml:space="preserve">
          <source>The name of the module defining the function described.</source>
          <target state="translated">定义所述功能的模块名称。</target>
        </trans-unit>
        <trans-unit id="3e60b1cae575eba27aff3ee963b8aee956952f99" translate="yes" xml:space="preserve">
          <source>The name of the module that this loader will handle.</source>
          <target state="translated">该加载器要处理的模块名称。</target>
        </trans-unit>
        <trans-unit id="19557753c33011dd73657399ac0a84fde8d16a56" translate="yes" xml:space="preserve">
          <source>The name of the module the loader can handle.</source>
          <target state="translated">载入器可以处理的模块名称。</target>
        </trans-unit>
        <trans-unit id="1ebe1facb1fd4eb5a2fae30e51ef2797f815a5ec" translate="yes" xml:space="preserve">
          <source>The name of the module the loader will handle.</source>
          <target state="translated">载入器要处理的模块名称。</target>
        </trans-unit>
        <trans-unit id="045643cb342912e3d066e6c71398cbb7c278f691" translate="yes" xml:space="preserve">
          <source>The name of the module.</source>
          <target state="translated">模块的名称;</target>
        </trans-unit>
        <trans-unit id="2c0e0654b87b9148ea27c20e6b8314bf71ef32b0" translate="yes" xml:space="preserve">
          <source>The name of the operating system dependent module imported. The following names have currently been registered: &lt;code&gt;'posix'&lt;/code&gt;, &lt;code&gt;'nt'&lt;/code&gt;, &lt;code&gt;'java'&lt;/code&gt;.</source>
          <target state="translated">导入的操作系统相关模块的名称。当前已经注册了以下名称： &lt;code&gt;'posix'&lt;/code&gt; ， &lt;code&gt;'nt'&lt;/code&gt; 和 &lt;code&gt;'java'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7d3c96f97340449b07e52cbc60ad345dcd6115c" translate="yes" xml:space="preserve">
          <source>The name of the parameter as a string. The name must be a valid Python identifier.</source>
          <target state="translated">参数的名称为字符串。该名称必须是一个有效的Python标识符。</target>
        </trans-unit>
        <trans-unit id="86c00c3b8d6532630734b7c2b865667da54ac893" translate="yes" xml:space="preserve">
          <source>The name of the reverse DNS PTR record for the IP address, e.g.:</source>
          <target state="translated">IP地址的反向DNS PTR记录的名称,例如:。</target>
        </trans-unit>
        <trans-unit id="d2f9a4bd744db6b1b83b9fe31ed14622101524f6" translate="yes" xml:space="preserve">
          <source>The name of the root element as given in the &lt;code&gt;DOCTYPE&lt;/code&gt; declaration, if present.</source>
          <target state="translated">&lt;code&gt;DOCTYPE&lt;/code&gt; 声明中给出的根元素名称（如果存在）。</target>
        </trans-unit>
        <trans-unit id="4bb0420bbf93f8e01944b2eb4478fbeba0d40ebf" translate="yes" xml:space="preserve">
          <source>The name of the variable. This is a read-only property.</source>
          <target state="translated">变量的名称。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="84bc55391122ae15beaf2e506a637ac5e87b06d7" translate="yes" xml:space="preserve">
          <source>The name of this module stems from a bit of terminology used by the designers of Modula-3 (amongst others), who use the term &amp;ldquo;marshalling&amp;rdquo; for shipping of data around in a self-contained form. Strictly speaking, &amp;ldquo;to marshal&amp;rdquo; means to convert some data from internal to external form (in an RPC buffer for instance) and &amp;ldquo;unmarshalling&amp;rdquo; for the reverse process.</source>
          <target state="translated">该模块的名称源于Modula-3的设计人员（除其他外）使用的一些术语，后者使用术语&amp;ldquo;编组&amp;rdquo;以自包含的形式传送数据。严格来说，&amp;ldquo;封送&amp;rdquo;是指将某些数据从内部格式转换为外部格式（例如在RPC缓冲区中），并&amp;ldquo;解组&amp;rdquo;以进行反向处理。</target>
        </trans-unit>
        <trans-unit id="721dc1da17b4562925fc14e95ff70598fc9e2ba4" translate="yes" xml:space="preserve">
          <source>The name supplied in &lt;em&gt;name&lt;/em&gt; is used as a filename and will be displayed as the target of the corresponding symbolic link in the directory &lt;code&gt;/proc/self/fd/&lt;/code&gt;. The displayed name is always prefixed with &lt;code&gt;memfd:&lt;/code&gt; and serves only for debugging purposes. Names do not affect the behavior of the file descriptor, and as such multiple files can have the same name without any side effects.</source>
          <target state="translated">名称中提供的&lt;em&gt;名称&lt;/em&gt;用作文件名，并将显示为目录 &lt;code&gt;/proc/self/fd/&lt;/code&gt; 相应符号链接的目标。显示的名称始终以 &lt;code&gt;memfd:&lt;/code&gt; 为前缀，并且仅用于调试目的。名称不会影响文件描述符的行为，因此，多个文件可以具有相同的名称，而不会产生任何副作用。</target>
        </trans-unit>
        <trans-unit id="4ebb96c87c8e767368b13796ac08bb015cb86556" translate="yes" xml:space="preserve">
          <source>The named element allows a choice from a number of options; this is used for content models such as &lt;code&gt;(A | B | C)&lt;/code&gt;.</source>
          <target state="translated">named元素允许从多个选项中进行选择。用于内容模型，例如 &lt;code&gt;(A | B | C)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9ae23519a49f9ee02d709a2efb2fa7ed671948e" translate="yes" xml:space="preserve">
          <source>The named file must be in the format understood by the class, or &lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt;&lt;code&gt;LoadError&lt;/code&gt;&lt;/a&gt; will be raised. Also, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; may be raised, for example if the file does not exist.</source>
          <target state="translated">命名文件必须采用该类可以理解的格式，否则将引发&lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt; &lt;code&gt;LoadError&lt;/code&gt; &lt;/a&gt;。另外，例如，如果文件不存在，则可能引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0be5215b217f6db183e859a83b666d28dd48000" translate="yes" xml:space="preserve">
          <source>The named module and any modules named in the &lt;em&gt;fresh&lt;/em&gt; and &lt;em&gt;blocked&lt;/em&gt; parameters are saved before starting the import and then reinserted into &lt;code&gt;sys.modules&lt;/code&gt; when the fresh import is complete.</source>
          <target state="translated">在开始导入之前，已保存命名模块以及在&lt;em&gt;fresh&lt;/em&gt;和&lt;em&gt;blocked&lt;/em&gt;参数中命名的所有模块，然后在完成新鲜导入后将其重新插入 &lt;code&gt;sys.modules&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="c10ae2054ff91f5b2cff60c29617df470fe8793c" translate="yes" xml:space="preserve">
          <source>The namer function is called quite a few times during rollover, so it should be as simple and as fast as possible. It should also return the same output every time for a given input, otherwise the rollover behaviour may not work as expected.</source>
          <target state="translated">namer函数在翻转过程中会被调用很多次,所以它应该尽可能的简单和快速。对于一个给定的输入,它还应该每次都返回相同的输出,否则翻转行为可能无法达到预期效果。</target>
        </trans-unit>
        <trans-unit id="820a071a36af108968f4240003f19a8875a80d53" translate="yes" xml:space="preserve">
          <source>The names &lt;a href=&quot;#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#__debug__&quot;&gt;&lt;code&gt;__debug__&lt;/code&gt;&lt;/a&gt; cannot be reassigned (assignments to them, even as an attribute name, raise &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;), so they can be considered &amp;ldquo;true&amp;rdquo; constants.</source>
          <target state="translated">无法重新分配名称&lt;a href=&quot;#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#__debug__&quot;&gt; &lt;code&gt;__debug__&lt;/code&gt; &lt;/a&gt;（分配给它们，即使作为属性名称，也会引发&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;），因此可以将它们视为&amp;ldquo; true&amp;rdquo;常量。</target>
        </trans-unit>
        <trans-unit id="f1c08d7bb555b2944b88a4c6e840df45656fda30" translate="yes" xml:space="preserve">
          <source>The names in the module namespace are updated to point to any new or changed objects.</source>
          <target state="translated">模块命名空间中的名称会被更新为指向任何新的或改变的对象。</target>
        </trans-unit>
        <trans-unit id="c735eec803d17f6970762d55860960d0fb6133f5" translate="yes" xml:space="preserve">
          <source>The namespace (aka globals) that the examples should be run in. This is a dictionary mapping names to values. Any changes to the namespace made by the examples (such as binding new variables) will be reflected in &lt;a href=&quot;#doctest.DocTest.globs&quot;&gt;&lt;code&gt;globs&lt;/code&gt;&lt;/a&gt; after the test is run.</source>
          <target state="translated">示例应在其中运行的名称空间（即全局名称）。这是将名称映射到值的字典。示例运行后，示例对名称空间所做的任何更改（例如绑定新变量）都将反映在&lt;a href=&quot;#doctest.DocTest.globs&quot;&gt; &lt;code&gt;globs&lt;/code&gt; &lt;/a&gt;变量中。</target>
        </trans-unit>
        <trans-unit id="ef74b8b6db43c1099d9ae4fe3925ae098b1ab91c" translate="yes" xml:space="preserve">
          <source>The namespace URI associated with the reserved prefix &lt;code&gt;xml&lt;/code&gt;, as defined by &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt; (section 4).</source>
          <target state="translated">与保留前缀 &lt;code&gt;xml&lt;/code&gt; 关联的名称空间URI ，由&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;XML中&lt;/a&gt;的名称空间定义（第4节）。</target>
        </trans-unit>
        <trans-unit id="408b2f2cd1d9203ad9f611d7e05aac0b25d2317f" translate="yes" xml:space="preserve">
          <source>The namespace URI for namespace declarations, as defined by &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Core/core.html&quot;&gt;Document Object Model (DOM) Level 2 Core Specification&lt;/a&gt; (section 1.1.8).</source>
          <target state="translated">名称空间声明的名称空间URI，由&lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Core/core.html&quot;&gt;文档对象模型（DOM）级别2核心规范&lt;/a&gt;（第1.1.8节）定义。</target>
        </trans-unit>
        <trans-unit id="45dc23412cbf664771fbe0fc3a54045a54c2ec7a" translate="yes" xml:space="preserve">
          <source>The namespace associated with the element name. This will be a string or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">与元素名称关联的名称空间。这将是一个字符串或 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="7ebce889cae0e45b57056d1bd6bb2e5431835025" translate="yes" xml:space="preserve">
          <source>The native equivalent of this function is &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt;&lt;code&gt;PySys_Audit()&lt;/code&gt;&lt;/a&gt;. Using the native function is preferred when possible.</source>
          <target state="translated">此函数的本地等效项是&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt; &lt;code&gt;PySys_Audit()&lt;/code&gt; &lt;/a&gt;。尽可能使用本机功能。</target>
        </trans-unit>
        <trans-unit id="ffda4828336dab28abc92110410a61571caea169" translate="yes" xml:space="preserve">
          <source>The native equivalent of this function is &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_Audit&quot;&gt;&lt;code&gt;PySys_Audit()&lt;/code&gt;&lt;/a&gt;. Using the native function is preferred when possible.</source>
          <target state="translated">该函数的本机等效项是&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_Audit&quot;&gt; &lt;code&gt;PySys_Audit()&lt;/code&gt; &lt;/a&gt;。如果可能，最好使用本机函数。</target>
        </trans-unit>
        <trans-unit id="60ffd13b4d06a9663d021d63e24603a96ec31f3b" translate="yes" xml:space="preserve">
          <source>The native integral thread ID of this thread. This is a non-negative integer, or &lt;code&gt;None&lt;/code&gt; if the thread has not been started. See the &lt;a href=&quot;#threading.get_native_id&quot;&gt;&lt;code&gt;get_native_id()&lt;/code&gt;&lt;/a&gt; function. This represents the Thread ID (&lt;code&gt;TID&lt;/code&gt;) as assigned to the thread by the OS (kernel). Its value may be used to uniquely identify this particular thread system-wide (until the thread terminates, after which the value may be recycled by the OS).</source>
          <target state="translated">该线程的本机整数线程ID。这是一个非负整数，如果尚未启动线程，则为 &lt;code&gt;None&lt;/code&gt; 。请参见&lt;a href=&quot;#threading.get_native_id&quot;&gt; &lt;code&gt;get_native_id()&lt;/code&gt; &lt;/a&gt;函数。这表示由操作系统（内核）分配给线程的线程ID（ &lt;code&gt;TID&lt;/code&gt; ）。它的值可用于在系统范围内唯一标识此特定线程（直到线程终止，然后该值可由OS回收）。</target>
        </trans-unit>
        <trans-unit id="c1d7e2c935c2353b159d29ab4523fe1dc780cda0" translate="yes" xml:space="preserve">
          <source>The need for this class has been partially supplanted by the ability to subclass directly from &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;; however, this class can be easier to work with because the underlying list is accessible as an attribute.</source>
          <target state="translated">直接从&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;继承子类的能力已部分取代了对此类的需要; 但是，此类可以更轻松地使用，因为基础列表可以作为属性访问。</target>
        </trans-unit>
        <trans-unit id="8a85e2fc33e36b45a037532b612a391af51faf61" translate="yes" xml:space="preserve">
          <source>The nested loops cycle like an odometer with the rightmost element advancing on every iteration. This pattern creates a lexicographic ordering so that if the input&amp;rsquo;s iterables are sorted, the product tuples are emitted in sorted order.</source>
          <target state="translated">嵌套循环就像里程表一样循环，最右边的元素在每次迭代中都前进。此模式创建字典顺序，以便如果对输入的可迭代对象进行排序，则将按排序顺序发出产品元组。</target>
        </trans-unit>
        <trans-unit id="7ab7a50dc8c8b2f98d8a0e6811757f5dee27463d" translate="yes" xml:space="preserve">
          <source>The net mask, as an &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">网络掩码，作为&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="762e0fb6480b55a6bd61b84ffb74f257b2d5ce49" translate="yes" xml:space="preserve">
          <source>The network (&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;) this interface belongs to.</source>
          <target state="translated">该接口所属的网络（&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1e599de9a3fa5fc46e727150dd83cd10771b0bbe" translate="yes" xml:space="preserve">
          <source>The network IO API is identical to that provided by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;, from which &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; also inherits. This allows an SSL socket to be used as a drop-in replacement for a regular socket, making it very easy to add SSL support to an existing application.</source>
          <target state="translated">网络IO API与&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;也继承自&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;所提供的相同。这样就可以将SSL套接字用作常规套接字的替代产品，从而很容易为现有应用程序添加SSL支持。</target>
        </trans-unit>
        <trans-unit id="f17d22e63791069b7c92792b65f7a69c02ba8fb7" translate="yes" xml:space="preserve">
          <source>The network address for the network. The network address and the prefix length together uniquely define a network.</source>
          <target state="translated">网络的网络地址。网络地址和前缀长度共同唯一定义一个网络。</target>
        </trans-unit>
        <trans-unit id="16ba5b21f9d9fddf591b834e660f9b366a42026d" translate="yes" xml:space="preserve">
          <source>The new class instance is based on &lt;em&gt;fileobj&lt;/em&gt;, which can be a regular file, an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; object, or any other object which simulates a file. It defaults to &lt;code&gt;None&lt;/code&gt;, in which case &lt;em&gt;filename&lt;/em&gt; is opened to provide a file object.</source>
          <target state="translated">新的类实例基于&lt;em&gt;fileobj&lt;/em&gt;，它可以是常规文件，&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;对象或任何其他模拟文件的对象。它默认为 &lt;code&gt;None&lt;/code&gt; ，在这种情况下，打开&lt;em&gt;filename&lt;/em&gt;来提供文件对象。</target>
        </trans-unit>
        <trans-unit id="afe4a88a9a98bbf3ddd30841d8ef2299fd65fc2e" translate="yes" xml:space="preserve">
          <source>The new context is copied from a prototype context called &lt;em&gt;DefaultContext&lt;/em&gt;. To control the defaults so that each thread will use the same values throughout the application, directly modify the &lt;em&gt;DefaultContext&lt;/em&gt; object. This should be done &lt;em&gt;before&lt;/em&gt; any threads are started so that there won&amp;rsquo;t be a race condition between threads calling &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">新上下文是从称为&lt;em&gt;DefaultContext&lt;/em&gt;的原型上下文中复制的。若要控制默认值，以便每个线程在整个应用程序中使用相同的值，请直接修改&lt;em&gt;DefaultContext&lt;/em&gt;对象。这应该&lt;em&gt;在&lt;/em&gt;任何线程启动&lt;em&gt;之前&lt;/em&gt;完成&lt;em&gt;，&lt;/em&gt;这样在调用&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; 的&lt;/a&gt;线程之间就不会出现竞争条件。例如：</target>
        </trans-unit>
        <trans-unit id="37c6e32aa72abcc84337f5ff92ac0e6a43c18f7d" translate="yes" xml:space="preserve">
          <source>The new file descriptor is &lt;a href=&quot;os#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">新的文件描述符是&lt;a href=&quot;os#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d0df1d27beda7860dd0eb35dd7deeead60554b5" translate="yes" xml:space="preserve">
          <source>The new format syntax also supports new and different options, shown in the following examples.</source>
          <target state="translated">新的格式语法还支持新的和不同的选项,如下例所示。</target>
        </trans-unit>
        <trans-unit id="0f209dbf900c74ca254ac018b69e34786768dc97" translate="yes" xml:space="preserve">
          <source>The new pickle protocol 4 also, in some circumstances, relies on &lt;a href=&quot;stdtypes#definition.__qualname__&quot;&gt;&lt;code&gt;__qualname__&lt;/code&gt;&lt;/a&gt; being set to the location where pickle will be able to find the class. For example, if the class was made available in class SomeData in the global scope:</source>
          <target state="translated">在某些情况下，新的pickle协议4还依赖于&lt;a href=&quot;stdtypes#definition.__qualname__&quot;&gt; &lt;code&gt;__qualname__&lt;/code&gt; &lt;/a&gt;设置为pickle能够找到该类的位置。例如，如果该类在全局范围内的SomeData类中可用：</target>
        </trans-unit>
        <trans-unit id="436c5ad8644d706cba5625b07da47ead944ad42b" translate="yes" xml:space="preserve">
          <source>The new process has a new console, instead of inheriting its parent&amp;rsquo;s console (the default).</source>
          <target state="translated">新进程具有一个新的控制台，而不是继承其父级的控制台（默认）。</target>
        </trans-unit>
        <trans-unit id="0582af89e51267c8d6a4d04e4de1c15a3710b2fe" translate="yes" xml:space="preserve">
          <source>The newlines attribute of the file objects &lt;a href=&quot;#subprocess.Popen.stdin&quot;&gt;&lt;code&gt;Popen.stdin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.Popen.stdout&quot;&gt;&lt;code&gt;Popen.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.Popen.stderr&quot;&gt;&lt;code&gt;Popen.stderr&lt;/code&gt;&lt;/a&gt; are not updated by the &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;方法不会更新文件对象&lt;a href=&quot;#subprocess.Popen.stdin&quot;&gt; &lt;code&gt;Popen.stdin&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#subprocess.Popen.stdout&quot;&gt; &lt;code&gt;Popen.stdout&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#subprocess.Popen.stderr&quot;&gt; &lt;code&gt;Popen.stderr&lt;/code&gt; &lt;/a&gt;的换行属性。</target>
        </trans-unit>
        <trans-unit id="1a2554779f9c09c476ce23785676057b0b114bb1" translate="yes" xml:space="preserve">
          <source>The newly created file is &lt;a href=&quot;os#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">新创建的文件是&lt;a href=&quot;os#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1087030b8a61823a32280b2c3da709e02fd3bbd5" translate="yes" xml:space="preserve">
          <source>The newly created socket is &lt;a href=&quot;os#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">新创建的套接字是&lt;a href=&quot;os#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="604294b514f933463d592383822f3ae092d30a41" translate="yes" xml:space="preserve">
          <source>The newly created sockets are &lt;a href=&quot;os#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">新创建的套接字是&lt;a href=&quot;os#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09393810885ec9c580c4e469b205008cb689cee8" translate="yes" xml:space="preserve">
          <source>The newly returned object is created by calling the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method of the dataclass. This ensures that &lt;code&gt;__post_init__()&lt;/code&gt;, if present, is also called.</source>
          <target state="translated">通过调用数据类的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法可以创建新返回的对象。这样可以确保也 &lt;code&gt;__post_init__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7764f8ab156b3056f3e821f74d63421bcdac5eee" translate="yes" xml:space="preserve">
          <source>The newly returned object is created by calling the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method of the dataclass. This ensures that &lt;code&gt;__post_init__()&lt;/code&gt;, if present, is also called.</source>
          <target state="translated">新返回的对象是通过调用数据类的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法创建的。这样可以确保 &lt;code&gt;__post_init__()&lt;/code&gt; （如果存在）也被调用。</target>
        </trans-unit>
        <trans-unit id="ce8224916d68ae87429d998927008c27fd5791ce" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how to create an anonymous map and exchange data between the parent and child processes:</source>
          <target state="translated">下一个例子演示了如何创建匿名地图并在父进程和子进程之间交换数据。</target>
        </trans-unit>
        <trans-unit id="e3cb18fddf5ee61de6cbb27246553d4bde8b31a2" translate="yes" xml:space="preserve">
          <source>The next example illustrates the use of &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt;. Turn on &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies, be more strict about domains when setting and returning Netscape cookies, and block some domains from setting cookies or having them returned:</source>
          <target state="translated">下一个示例说明&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt;的用法。打开&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookie，在设置和返回Netscape cookie时对域更加严格，并阻止某些域设置cookie或返回它们：</target>
        </trans-unit>
        <trans-unit id="19e16a17a178f5ee9f74b2376beaf6b0f0231354" translate="yes" xml:space="preserve">
          <source>The next example shows how to use the socket interface to communicate to a CAN network using the raw socket protocol. To use CAN with the broadcast manager protocol instead, open a socket with:</source>
          <target state="translated">下一个例子展示了如何使用原始套接字协议的套接字接口与CAN网络通信。如果要使用广播管理器协议来代替CAN,请用以下方法打开一个套接字。</target>
        </trans-unit>
        <trans-unit id="ae5e17bbaaa383ae94d175891435ce933a10243e" translate="yes" xml:space="preserve">
          <source>The next example shows how to write a very simple network sniffer with raw sockets on Windows. The example requires administrator privileges to modify the interface:</source>
          <target state="translated">下一个例子展示了如何在Windows上使用原始套接字编写一个非常简单的网络嗅探器。这个例子需要管理员权限来修改接口。</target>
        </trans-unit>
        <trans-unit id="949e116ea64bbf5a74a3ce5f8f9c13fecc60559c" translate="yes" xml:space="preserve">
          <source>The next step could be to call the &lt;a href=&quot;#module-cgi&quot;&gt;&lt;code&gt;cgi&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;test#module-test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; function from your script: replace its main code with the single statement</source>
          <target state="translated">下一步可能是从脚本中调用&lt;a href=&quot;#module-cgi&quot;&gt; &lt;code&gt;cgi&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;test#module-test&quot;&gt; &lt;code&gt;test()&lt;/code&gt; &lt;/a&gt;函数：用单个语句替换其主要代码</target>
        </trans-unit>
        <trans-unit id="fe20b32d6167a0d3df5008b170965eb8443e4d2c" translate="yes" xml:space="preserve">
          <source>The next three sections cover the exceptions the package may raise and the defects (non-compliance with the RFCs) that the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; may detect. Then we cover the &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt;&lt;code&gt;contentmanager&lt;/code&gt;&lt;/a&gt; sub-components, which provide tools for doing more detailed manipulation of headers and payloads, respectively. Both of these components contain features relevant to consuming and producing non-trivial messages, but also document their extensibility APIs, which will be of interest to advanced applications.</source>
          <target state="translated">接下来的三节介绍了程序包可能引发的异常以及&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;可能检测到的缺陷（不符合RFC）。然后，我们覆盖&lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt; &lt;code&gt;contentmanager&lt;/code&gt; &lt;/a&gt;子组件，其分别做头部和有效载荷的更详细的操作，提供了工具。这两个组件均包含与消费和产生非平凡消息相关的功能，而且还记录了它们的可扩展性API，这将是高级应用程序所感兴趣的。</target>
        </trans-unit>
        <trans-unit id="7cb7e9a823926ee6eae86c930b6a6cec97c0b136" translate="yes" xml:space="preserve">
          <source>The next two arguments are only of interest for correct handling of third-party HTTP cookies:</source>
          <target state="translated">接下来的两个论点只对正确处理第三方HTTP Cookie感兴趣。</target>
        </trans-unit>
        <trans-unit id="a1b34f34440f539818f1baac3c1408321f6e5096" translate="yes" xml:space="preserve">
          <source>The next two examples are identical to the above two, but support both IPv4 and IPv6. The server side will listen to the first address family available (it should listen to both instead). On most of IPv6-ready systems, IPv6 will take precedence and the server may not accept IPv4 traffic. The client side will try to connect to the all addresses returned as a result of the name resolution, and sends traffic to the first one connected successfully.</source>
          <target state="translated">接下来的两个例子与上面两个相同,但同时支持IPv4和IPv6。服务器端会监听第一个可用的地址族(应该同时监听)。在大多数IPv6就绪的系统中,IPv6将优先,服务器可能不接受IPv4流量。客户端将尝试连接到名称解析后返回的所有地址,并向第一个成功连接的地址发送流量。</target>
        </trans-unit>
        <trans-unit id="d9209588f38b03a1f6b1c8ce4f9ee7e3481b4e99" translate="yes" xml:space="preserve">
          <source>The next variation of &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; provided, &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, is also based on &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;. The difference being &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; members can be combined using the bitwise operators (&amp;amp;, |, ^, ~) and the result is still an &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; member. However, as the name implies, &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; members also subclass &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and can be used wherever an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; is used. Any operation on an &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; member besides the bit-wise operations will lose the &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; membership.</source>
          <target state="translated">提供的&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;的下一个变体&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;也基于&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;。可以使用按位运算符（＆，|，^，〜）将&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;成员进行组合，结果仍然是&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;成员。但是，顾名思义，&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;成员也是&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; 的&lt;/a&gt;子类，并且可以在使用&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; 的&lt;/a&gt;任何地方使用。&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;位操作外，对IntFlag成员的任何操作都将丢失&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;成员资格。</target>
        </trans-unit>
        <trans-unit id="9bfabb971f21f3b03bdd4e55a1c114a32f0d2834" translate="yes" xml:space="preserve">
          <source>The node that immediately follows this one with the same parent. See also &lt;a href=&quot;#xml.dom.Node.previousSibling&quot;&gt;&lt;code&gt;previousSibling&lt;/code&gt;&lt;/a&gt;. If this is the last child of the parent, this attribute will be &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">与该父节点紧随其后的节点。另请参见&lt;a href=&quot;#xml.dom.Node.previousSibling&quot;&gt; &lt;code&gt;previousSibling&lt;/code&gt; &lt;/a&gt;。如果这是父级的最后一个子级，则此属性将为 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="2255447a78696c6c1192e94d33aacbfee0ad7209" translate="yes" xml:space="preserve">
          <source>The node that immediately precedes this one with the same parent. For instance the element with an end-tag that comes just before the &lt;em&gt;self&lt;/em&gt; element&amp;rsquo;s start-tag. Of course, XML documents are made up of more than just elements so the previous sibling could be text, a comment, or something else. If this node is the first child of the parent, this attribute will be &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">该节点之前紧跟其后的节点具有相同的父节点。例如，带有结束标签的元素恰好位于&lt;em&gt;self&lt;/em&gt;元素的开始标签之前。当然，XML文档不仅由元素组成，因此前一个同级可以是文本，注释或其他内容。如果此节点是父节点的第一个子节点，则此属性将为 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="b0f814495b89e5be6f7e13a7d14c950afc264e45" translate="yes" xml:space="preserve">
          <source>The normal form KD (NFKD) will apply the compatibility decomposition, i.e. replace all compatibility characters with their equivalents. The normal form KC (NFKC) first applies the compatibility decomposition, followed by the canonical composition.</source>
          <target state="translated">正常形式KD(NFKD)将应用兼容性分解,即用等价字符替换所有兼容性字符。正常形式KC(NFKC)首先应用兼容性分解,然后是规范组合。</target>
        </trans-unit>
        <trans-unit id="f08a0fdb213b3a5135a382e10523519836d12875" translate="yes" xml:space="preserve">
          <source>The number of &lt;em&gt;iterations&lt;/em&gt; should be chosen based on the hash algorithm and computing power. As of 2013, at least 100,000 iterations of SHA-256 are suggested.</source>
          <target state="translated">的数目&lt;em&gt;迭代&lt;/em&gt;应当基于散列算法和计算能力来选择。截至2013年，建议至少进行100,000次SHA-256迭代。</target>
        </trans-unit>
        <trans-unit id="9e1959b4f8160cfc9011584560cc6419584c59d2" translate="yes" xml:space="preserve">
          <source>The number of blanks by which to indent a new MARK level.</source>
          <target state="translated">缩进一个新的MARK级别的空白数。</target>
        </trans-unit>
        <trans-unit id="8161ac11297e3d0c275ee4c31859567d0d08fde6" translate="yes" xml:space="preserve">
          <source>The number of bytes that can be allocated for POSIX message queues.</source>
          <target state="translated">可分配给POSIX消息队列的字节数。</target>
        </trans-unit>
        <trans-unit id="a53c69d2a16e5998876722ec5b5b5c554574067f" translate="yes" xml:space="preserve">
          <source>The number of capturing groups in the pattern.</source>
          <target state="translated">模式中的捕获组数。</target>
        </trans-unit>
        <trans-unit id="5387b634fc91f3629b3e0f2b901197c0d0b30da7" translate="yes" xml:space="preserve">
          <source>The number of items returned is &lt;code&gt;(n+r-1)! / r! / (n-1)!&lt;/code&gt; when &lt;code&gt;n &amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">返回的项目数为 &lt;code&gt;(n+r-1)! / r! / (n-1)!&lt;/code&gt; 当 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="962c71b0d63d8a7a2bcc653faacf7a50829ba36c" translate="yes" xml:space="preserve">
          <source>The number of items returned is &lt;code&gt;n! / (n-r)!&lt;/code&gt; when &lt;code&gt;0 &amp;lt;= r &amp;lt;= n&lt;/code&gt; or zero when &lt;code&gt;r &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">返回的项目数为 &lt;code&gt;n! / (n-r)!&lt;/code&gt; 当 &lt;code&gt;0 &amp;lt;= r &amp;lt;= n&lt;/code&gt; 或当 &lt;code&gt;r &amp;gt; n&lt;/code&gt; 时为零。</target>
        </trans-unit>
        <trans-unit id="03ca334363dca871155b191d7531a8192d53ffeb" translate="yes" xml:space="preserve">
          <source>The number of items returned is &lt;code&gt;n! / r! / (n-r)!&lt;/code&gt; when &lt;code&gt;0 &amp;lt;= r &amp;lt;= n&lt;/code&gt; or zero when &lt;code&gt;r &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">返回的项目数为 &lt;code&gt;n! / r! / (n-r)!&lt;/code&gt; 当 &lt;code&gt;0 &amp;lt;= r &amp;lt;= n&lt;/code&gt; 或当 &lt;code&gt;r &amp;gt; n&lt;/code&gt; 时为零。</target>
        </trans-unit>
        <trans-unit id="9f1361808be3e556a2c681229903e6369e9936d1" translate="yes" xml:space="preserve">
          <source>The number of lines read from the source iterator. This is not the same as the number of records returned, as records can span multiple lines.</source>
          <target state="translated">从源迭代器读取的行数。这与返回的记录数不同,因为记录可以跨越多行。</target>
        </trans-unit>
        <trans-unit id="e522c0ad7ad79e47c0f7383e3548855cd52b4083" translate="yes" xml:space="preserve">
          <source>The number of nodes in the sequence.</source>
          <target state="translated">序列中的节点数。</target>
        </trans-unit>
        <trans-unit id="7f26a147c76475973597eb7ed68b367dd8f6618f" translate="yes" xml:space="preserve">
          <source>The number of rows to fetch per call is specified by the &lt;em&gt;size&lt;/em&gt; parameter. If it is not given, the cursor&amp;rsquo;s arraysize determines the number of rows to be fetched. The method should try to fetch as many rows as indicated by the size parameter. If this is not possible due to the specified number of rows not being available, fewer rows may be returned.</source>
          <target state="translated">每个调用要获取的行数由&lt;em&gt;size&lt;/em&gt;参数指定。如果未给出，则游标的arraysize确定要获取的行数。该方法应尝试获取由size参数指示的尽可能多的行。如果由于指定的行数不可用而无法执行此操作，则可能会返回较少的行。</target>
        </trans-unit>
        <trans-unit id="63850906fb522ae0ca09abc54b1f75ee8a7b2105" translate="yes" xml:space="preserve">
          <source>The number of signals which the process may queue.</source>
          <target state="translated">进程可以排队的信号数量。</target>
        </trans-unit>
        <trans-unit id="47695a60ec93e3722284a641915f2cbef75895c7" translate="yes" xml:space="preserve">
          <source>The number of threads currently waiting in the barrier.</source>
          <target state="translated">当前在屏障中等待的线程数。</target>
        </trans-unit>
        <trans-unit id="fe3287bf2134cfe328b3832b5fc0327b6b10180a" translate="yes" xml:space="preserve">
          <source>The number of threads required to pass the barrier.</source>
          <target state="translated">过关所需的线数。</target>
        </trans-unit>
        <trans-unit id="48b155556df8cde48c84bc695714a02b7379303b" translate="yes" xml:space="preserve">
          <source>The number returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; may be converted into a more common time format (i.e. year, month, day, hour, etc&amp;hellip;) in UTC by passing it to &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; function or in local time by passing it to the &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; function. In both cases a &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; object is returned, from which the components of the calendar date may be accessed as attributes.</source>
          <target state="translated">通过将&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;返回的数字传递给&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt;函数，可以将其转换为UTC中更常见的时间格式（即年，月，日，小时等），也可以通过将其传递给&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;）来转换为本地时间。）功能。在这两种情况下，都将返回一个&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;对象，可以从该对象中访问日历日期的组成部分作为属性。</target>
        </trans-unit>
        <trans-unit id="af7e7400c401b1fb97f42d4204605204411553ab" translate="yes" xml:space="preserve">
          <source>The number system for the &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module provides special values including &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;sNaN&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, and two zeros, &lt;code&gt;+0&lt;/code&gt; and &lt;code&gt;-0&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;模块的数字系统提供特殊值，包括 &lt;code&gt;NaN&lt;/code&gt; ， &lt;code&gt;sNaN&lt;/code&gt; ， &lt;code&gt;-Infinity&lt;/code&gt; ， &lt;code&gt;Infinity&lt;/code&gt; 和两个零， &lt;code&gt;+0&lt;/code&gt; 和 &lt;code&gt;-0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12a684dbecd685a706ab359cf891a11c75dec792" translate="yes" xml:space="preserve">
          <source>The numeric constant for an uncompressed archive member.</source>
          <target state="translated">未压缩档案成员的数字常数。</target>
        </trans-unit>
        <trans-unit id="37e783732d5b9e3bf0fc668760520288331fba75" translate="yes" xml:space="preserve">
          <source>The numeric constant for the BZIP2 compression method. This requires the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">BZIP2压缩方法的数字常数。这需要&lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="8d8b68f43fe31cc5c1fb45a95cf61b9f53eb1ad2" translate="yes" xml:space="preserve">
          <source>The numeric constant for the LZMA compression method. This requires the &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">LZMA压缩方法的数字常数。这需要&lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ba44090efe78021caa4efa072eec5563ab2d9f9d" translate="yes" xml:space="preserve">
          <source>The numeric constant for the usual ZIP compression method. This requires the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">常用ZIP压缩方法的数字常数。这需要&lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="c4185627d1ed863cbed4088b20b06ac2ecf24bcf" translate="yes" xml:space="preserve">
          <source>The numeric literals accepted include the digits &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; or any Unicode equivalent (code points with the &lt;code&gt;Nd&lt;/code&gt; property).</source>
          <target state="translated">接受的数字文字包括数字 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 或任何等效的Unicode（具有 &lt;code&gt;Nd&lt;/code&gt; 属性的代码点）。</target>
        </trans-unit>
        <trans-unit id="5f59e143dc36e51aacae93fe16316b093356a832" translate="yes" xml:space="preserve">
          <source>The numeric methods (including right hand and in-place variants): &lt;code&gt;__add__&lt;/code&gt;, &lt;code&gt;__sub__&lt;/code&gt;, &lt;code&gt;__mul__&lt;/code&gt;, &lt;code&gt;__matmul__&lt;/code&gt;, &lt;code&gt;__div__&lt;/code&gt;, &lt;code&gt;__truediv__&lt;/code&gt;, &lt;code&gt;__floordiv__&lt;/code&gt;, &lt;code&gt;__mod__&lt;/code&gt;, &lt;code&gt;__divmod__&lt;/code&gt;, &lt;code&gt;__lshift__&lt;/code&gt;, &lt;code&gt;__rshift__&lt;/code&gt;, &lt;code&gt;__and__&lt;/code&gt;, &lt;code&gt;__xor__&lt;/code&gt;, &lt;code&gt;__or__&lt;/code&gt;, and &lt;code&gt;__pow__&lt;/code&gt;</source>
          <target state="translated">数字方法（包括右手和就地变体）： &lt;code&gt;__add__&lt;/code&gt; ， &lt;code&gt;__sub__&lt;/code&gt; ， &lt;code&gt;__mul__&lt;/code&gt; ， &lt;code&gt;__matmul__&lt;/code&gt; ， &lt;code&gt;__div__&lt;/code&gt; ， &lt;code&gt;__truediv__&lt;/code&gt; ， &lt;code&gt;__floordiv__&lt;/code&gt; ， &lt;code&gt;__mod__&lt;/code&gt; ， &lt;code&gt;__divmod__&lt;/code&gt; ， &lt;code&gt;__lshift__&lt;/code&gt; ， &lt;code&gt;__rshift__&lt;/code&gt; ， &lt;code&gt;__and__&lt;/code&gt; ， &lt;code&gt;__xor__&lt;/code&gt; ， &lt;code&gt;__or__&lt;/code&gt; 和 &lt;code&gt;__pow__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c100dcbc73873c48aee35db62eb559910c260751" translate="yes" xml:space="preserve">
          <source>The numeric tower</source>
          <target state="translated">数字塔</target>
        </trans-unit>
        <trans-unit id="88ed3d5a328daed4a91171dfb5cccdd97a19fb1d" translate="yes" xml:space="preserve">
          <source>The numeric values of logging levels are given in the following table. These are primarily of interest if you want to define your own levels, and need them to have specific values relative to the predefined levels. If you define a level with the same numeric value, it overwrites the predefined value; the predefined name is lost.</source>
          <target state="translated">下表给出了记录级别的数值。如果您想定义自己的级别,并且需要它们具有相对于预定义级别的特定值,那么这些数值就很有意义。如果您定义了一个具有相同数值的级别,则会覆盖预定义的数值;预定义的名称将丢失。</target>
        </trans-unit>
        <trans-unit id="bdbb3076731abfe09324b9cd19aefa862ead4017" translate="yes" xml:space="preserve">
          <source>The object also support comparison semantics, so handle objects will compare true if they both reference the same underlying Windows handle value.</source>
          <target state="translated">该对象还支持比较语义,因此如果它们都引用了相同的底层Windows句柄值,那么句柄对象就会比较真。</target>
        </trans-unit>
        <trans-unit id="a0e148153711b276e1aa1492d94c98fa82cc5504" translate="yes" xml:space="preserve">
          <source>The object comparison functions are useful for all objects, and are named after the rich comparison operators they support:</source>
          <target state="translated">对象比较函数对所有对象都有用,并以其支持的丰富比较运算符命名。</target>
        </trans-unit>
        <trans-unit id="903b12e662a7a1a14d96fff562e28b40c371a833" translate="yes" xml:space="preserve">
          <source>The object must be picklable. Very large pickles (approximately 32 MiB+, though it depends on the OS) may raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">该对象必须是可腌制的。较大的泡菜（大约32 MiB +，尽管取决于操作系统）可能会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9fe6875d123fff02a6b92c938eef7f275de297f5" translate="yes" xml:space="preserve">
          <source>The object of this exercise is to get a fairly consistent result. If your computer is &lt;em&gt;very&lt;/em&gt; fast, or your timer function has poor resolution, you might have to pass 100000, or even 1000000, to get consistent results.</source>
          <target state="translated">此练习的目的是获得一个相当一致的结果。如果您的计算机运行速度&lt;em&gt;非常&lt;/em&gt;快，或者计时器功能的分辨率较差，则可能必须传递100000甚至1000000才能获得一致的结果。</target>
        </trans-unit>
        <trans-unit id="7db759e5615f9c2b36c177c80ee0bb9f95712f63" translate="yes" xml:space="preserve">
          <source>The object passed as the &lt;em&gt;tzinfo&lt;/em&gt; argument to the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; constructor, or &lt;code&gt;None&lt;/code&gt; if none was passed.</source>
          <target state="translated">以实物传递&lt;em&gt;tzinfo&lt;/em&gt;参数的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;构造函数或 &lt;code&gt;None&lt;/code&gt; ，如果没有获得通过。</target>
        </trans-unit>
        <trans-unit id="047b8732cb8d384ea4ed809e355adf2b06562681" translate="yes" xml:space="preserve">
          <source>The object passed as the tzinfo argument to the &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; constructor, or &lt;code&gt;None&lt;/code&gt; if none was passed.</source>
          <target state="translated">对象为tzinfo参数传递的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;构造函数或 &lt;code&gt;None&lt;/code&gt; ，如果没有获得通过。</target>
        </trans-unit>
        <trans-unit id="6aa60910fc684fb8ab4e8d6a532964dd03281a4f" translate="yes" xml:space="preserve">
          <source>The object returned by &lt;a href=&quot;#dbm.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; supports the same basic functionality as dictionaries; keys and their corresponding values can be stored, retrieved, and deleted, and the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator and the &lt;code&gt;keys()&lt;/code&gt; method are available, as well as &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;setdefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dbm.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;返回的对象支持与字典相同的基本功能；键及其对应的值可以存储，检索和删除，并且&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符和 &lt;code&gt;keys()&lt;/code&gt; 方法以及 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;setdefault()&lt;/code&gt; 可用。</target>
        </trans-unit>
        <trans-unit id="92033a82717d44dbdf0bec8c370e98e52472bf19" translate="yes" xml:space="preserve">
          <source>The object returned by &lt;a href=&quot;#dbm.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; supports the same basic functionality as dictionaries; keys and their corresponding values can be stored, retrieved, and deleted, and the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator and the &lt;code&gt;keys()&lt;/code&gt; method are available, as well as &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;setdefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dbm.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;返回的对象支持与字典相同的基本功能；键及其对应的值可以存储，检索和删除，并且&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符和 &lt;code&gt;keys()&lt;/code&gt; 方法以及 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;setdefault()&lt;/code&gt; 都可用。</target>
        </trans-unit>
        <trans-unit id="19f47806e7480ee93b8a1ea06979dd9be3cefd4b" translate="yes" xml:space="preserve">
          <source>The object returned by the context manager is a recording helper which keeps tracks of the matching log messages. It has two attributes:</source>
          <target state="translated">由上下文管理器返回的对象是一个记录帮助器,它记录了匹配的日志消息。它有两个属性。</target>
        </trans-unit>
        <trans-unit id="9455c0c32fc57208341f04239cd5af2e8417cd34" translate="yes" xml:space="preserve">
          <source>The object that &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt; points to may change in response to a call to &lt;a href=&quot;#zoneinfo.reset_tzpath&quot;&gt;&lt;code&gt;reset_tzpath()&lt;/code&gt;&lt;/a&gt;, so it is recommended to use &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt; rather than importing &lt;code&gt;TZPATH&lt;/code&gt; from &lt;code&gt;zoneinfo&lt;/code&gt; or assigning a long-lived variable to &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt;.</source>
          <target state="translated">根据对&lt;a href=&quot;#zoneinfo.reset_tzpath&quot;&gt; &lt;code&gt;reset_tzpath()&lt;/code&gt; &lt;/a&gt;的调用， &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt; 指向的对象可能会更改，因此建议使用 &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt; 而不是从 &lt;code&gt;zoneinfo&lt;/code&gt; 导入 &lt;code&gt;TZPATH&lt;/code&gt; 或将长期变量分配给 &lt;code&gt;zoneinfo.TZPATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ad42de57b21617935b08c3b32f3448c2db7ca64" translate="yes" xml:space="preserve">
          <source>The object that this function returns will be returned from the foreign function call, but it can also check the result value and raise an exception if the foreign function call failed.</source>
          <target state="translated">该函数返回的对象将从外来函数调用中返回,但它也可以检查结果值,如果外来函数调用失败,则引发异常。</target>
        </trans-unit>
        <trans-unit id="85ba396ea5cfea44624cf1620f8fa70e786573b0" translate="yes" xml:space="preserve">
          <source>The object the codec was attempting to encode or decode.</source>
          <target state="translated">编解码器试图编码或解码的对象。</target>
        </trans-unit>
        <trans-unit id="d2ce035963ef7adf8099f19b2af3c6f11eb0764d" translate="yes" xml:space="preserve">
          <source>The object-oriented interface uses essentially two+two classes:</source>
          <target state="translated">面向对象的接口基本上使用的是两+两类。</target>
        </trans-unit>
        <trans-unit id="630bdda9d2c68a08c06c47581abacf38447213da" translate="yes" xml:space="preserve">
          <source>The objects returned by &lt;a href=&quot;#dict.keys&quot;&gt;&lt;code&gt;dict.keys()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#dict.values&quot;&gt;&lt;code&gt;dict.values()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#dict.items&quot;&gt;&lt;code&gt;dict.items()&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;view objects&lt;/em&gt;. They provide a dynamic view on the dictionary&amp;rsquo;s entries, which means that when the dictionary changes, the view reflects these changes.</source>
          <target state="translated">由返回的对象&lt;a href=&quot;#dict.keys&quot;&gt; &lt;code&gt;dict.keys()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#dict.values&quot;&gt; &lt;code&gt;dict.values()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#dict.items&quot;&gt; &lt;code&gt;dict.items()&lt;/code&gt; &lt;/a&gt;是&lt;em&gt;查看对象&lt;/em&gt;。它们提供了字典条目的动态视图，这意味着当字典更改时，该视图会反映这些更改。</target>
        </trans-unit>
        <trans-unit id="fcf6d17cdc435a25534caaa9e7b1f6ca68ec4149" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;em&gt;use_datetime&lt;/em&gt; flag is similar to &lt;em&gt;use_builtin_types&lt;/em&gt; but it applies only to date/time values.</source>
          <target state="translated">过时的&lt;em&gt;use_datetime&lt;/em&gt;标志类似于&lt;em&gt;use_builtin_types，&lt;/em&gt;但仅适用于日期/时间值。</target>
        </trans-unit>
        <trans-unit id="2c625e4dbb320fc0f3c12b0adad5a22845ee0fb1" translate="yes" xml:space="preserve">
          <source>The obvious use case is applications that operate in a non-blocking fashion where the XML data is being received from a socket or read incrementally from some storage device. In such cases, blocking reads are unacceptable.</source>
          <target state="translated">显而易见的用例是以非阻塞方式操作的应用程序,其中XML数据是从一个套接字接收的,或者是从一些存储设备中增量读取的。在这种情况下,阻塞式读取是不可接受的。</target>
        </trans-unit>
        <trans-unit id="85426ab81c4bf4f1b8a00b87eae70c4cc2f2f12b" translate="yes" xml:space="preserve">
          <source>The official specification.</source>
          <target state="translated">官方规格。</target>
        </trans-unit>
        <trans-unit id="47876333704ae7f2772a8428b0724fa0f50dc54c" translate="yes" xml:space="preserve">
          <source>The offset has the form: &lt;code&gt;&amp;plusmn; hh[:mm[:ss]]&lt;/code&gt;. This indicates the value added the local time to arrive at UTC. If preceded by a &amp;lsquo;-&amp;lsquo;, the timezone is east of the Prime Meridian; otherwise, it is west. If no offset follows dst, summer time is assumed to be one hour ahead of standard time.</source>
          <target state="translated">偏移量的形式为： &lt;code&gt;&amp;plusmn; hh[:mm[:ss]]&lt;/code&gt; 。这表明该值加上了当地时间才能到达UTC。如果以&amp;ldquo;-&amp;rdquo;开头，则时区位于本初子午线以东；否则，它是西部。如果dst之后没有偏移，则假定夏令时比标准时间早一小时。</target>
        </trans-unit>
        <trans-unit id="1cda92b072d44c5bc0fea7b142ea8855eba2454d" translate="yes" xml:space="preserve">
          <source>The offset of the local (non-DST) timezone, in seconds west of UTC (negative in most of Western Europe, positive in the US, zero in the UK). See note below.</source>
          <target state="translated">当地(非DST)时区的偏移,以UTC西边的秒为单位(西欧大部分地区为负数,美国为正数,英国为零)。见下面的说明。</target>
        </trans-unit>
        <trans-unit id="77e0480eb79c9af077d792652673e48506ece8df" translate="yes" xml:space="preserve">
          <source>The offset of the local DST timezone, in seconds west of UTC, if one is defined. This is negative if the local DST timezone is east of UTC (as in Western Europe, including the UK). Only use this if &lt;code&gt;daylight&lt;/code&gt; is nonzero. See note below.</source>
          <target state="translated">如果已定义，则本地DST时区的偏移量（以UTC以西为秒）。如果当地DST时区位于UTC东部（如西欧，包括英国），则为负。如果 &lt;code&gt;daylight&lt;/code&gt; 不为零，则仅使用此选项。请参阅下面的注释。</target>
        </trans-unit>
        <trans-unit id="62956501ed2752f838e69aab5951452d9c36c226" translate="yes" xml:space="preserve">
          <source>The old value (or &lt;code&gt;None&lt;/code&gt; if it doesn&amp;rsquo;t exist) will be assigned to the target of the &amp;ldquo;as&amp;rdquo; clause, if there is one.</source>
          <target state="translated">如果有旧值（如果不存在，则为 &lt;code&gt;None&lt;/code&gt; ）将分配给&amp;ldquo; as&amp;rdquo;子句的目标。</target>
        </trans-unit>
        <trans-unit id="02978c9e31ff8ed2331dbf95b8403ffb3805aa2c" translate="yes" xml:space="preserve">
          <source>The old values are returned as a tuple: (delay, interval).</source>
          <target state="translated">旧的值会以元组的形式返回。(delay,interval).</target>
        </trans-unit>
        <trans-unit id="260d61dd119ba34480a72edcffdce1ad4835e534" translate="yes" xml:space="preserve">
          <source>The old version of JSON specified by the obsolete &lt;a href=&quot;https://tools.ietf.org/html/rfc4627.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt; required that the top-level value of a JSON text must be either a JSON object or array (Python &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;), and could not be a JSON null, boolean, number, or string value. &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; removed that restriction, and this module does not and has never implemented that restriction in either its serializer or its deserializer.</source>
          <target state="translated">旧版&lt;a href=&quot;https://tools.ietf.org/html/rfc4627.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt;指定的JSON旧版本要求JSON文本的顶级值必须是JSON对象或数组（Python &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;），并且不能为JSON空，布尔值，数字或字符串值。&lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt;删除了该限制，并且此模块没有并且从未在其序列化器或反序列化器中实现该限制。</target>
        </trans-unit>
        <trans-unit id="5de44321ccacecf1a704c59513695320f99a23f1" translate="yes" xml:space="preserve">
          <source>The old wakeup fd is returned (or -1 if file descriptor wakeup was not enabled). If &lt;em&gt;fd&lt;/em&gt; is -1, file descriptor wakeup is disabled. If not -1, &lt;em&gt;fd&lt;/em&gt; must be non-blocking. It is up to the library to remove any bytes from &lt;em&gt;fd&lt;/em&gt; before calling poll or select again.</source>
          <target state="translated">返回旧的唤醒fd（如果未启用文件描述符唤醒，则返回-1）。如果&lt;em&gt;fd&lt;/em&gt;为-1，则禁用文件描述符唤醒。如果不为-1，则&lt;em&gt;fd&lt;/em&gt;必须是非阻塞的。在调用poll或再次选择之前，库必须从&lt;em&gt;fd中&lt;/em&gt;删除所有字节。</target>
        </trans-unit>
        <trans-unit id="1afb8ba3cac22899a672d84ee65b456045ae90ae" translate="yes" xml:space="preserve">
          <source>The one and only root element of the document.</source>
          <target state="translated">文件中唯一的一个根元素。</target>
        </trans-unit>
        <trans-unit id="7db8d99ba8d024e2fd8c63de0e9c2007b0cf6129" translate="yes" xml:space="preserve">
          <source>The only argument passed to the callback is the statement (as string) that is being executed. The return value of the callback is ignored. Note that the backend does not only run statements passed to the &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;Cursor.execute()&lt;/code&gt;&lt;/a&gt; methods. Other sources include the transaction management of the Python module and the execution of triggers defined in the current database.</source>
          <target state="translated">传递给回调的唯一参数是正在执行的语句（作为字符串）。回调的返回值将被忽略。请注意，后端不仅会运行传递给&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;Cursor.execute()&lt;/code&gt; &lt;/a&gt;方法的语句。其他来源包括Python模块的事务管理和当前数据库中定义的触发器的执行。</target>
        </trans-unit>
        <trans-unit id="9eafe33b08ccd21b907088c88e855da1e780d997" translate="yes" xml:space="preserve">
          <source>The only exception is calling the &lt;a href=&quot;#sqlite3.Connection.interrupt&quot;&gt;&lt;code&gt;interrupt()&lt;/code&gt;&lt;/a&gt; method, which only makes sense to call from a different thread.</source>
          <target state="translated">唯一的例外是调用&lt;a href=&quot;#sqlite3.Connection.interrupt&quot;&gt; &lt;code&gt;interrupt()&lt;/code&gt; &lt;/a&gt;方法，该方法仅在从其他线程进行调用时才有意义。</target>
        </trans-unit>
        <trans-unit id="46dbf7b89d466c7bb4cae025a94a7bbed275fe27" translate="yes" xml:space="preserve">
          <source>The only exceptions are magic methods and attributes (those that have leading and trailing double underscores). Mock doesn&amp;rsquo;t create these but instead raises an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;. This is because the interpreter will often implicitly request these methods, and gets &lt;em&gt;very&lt;/em&gt; confused to get a new Mock object when it expects a magic method. If you need magic method support see &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt;.</source>
          <target state="translated">唯一的例外是魔术方法和属性（具有前导和尾随双下划线的那些）。Mock不创建这些，而是​​引发&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。这是因为解释器通常会隐式地请求这些方法，并且在期望使用魔术方法时会&lt;em&gt;很&lt;/em&gt;困惑以获取新的Mock对象。如果需要魔术方法支持，请参见&lt;a href=&quot;#magic-methods&quot;&gt;魔术方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f295eee727e8ccd149d6d1d12ca0bd947e422525" translate="yes" xml:space="preserve">
          <source>The only legal parameters for &lt;a href=&quot;#typing.Type&quot;&gt;&lt;code&gt;Type&lt;/code&gt;&lt;/a&gt; are classes, &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#generics&quot;&gt;type variables&lt;/a&gt;, and unions of any of these types. For example:</source>
          <target state="translated">&lt;a href=&quot;#typing.Type&quot;&gt; &lt;code&gt;Type&lt;/code&gt; &lt;/a&gt;的唯一合法参数是类，&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#generics&quot;&gt;类型变量&lt;/a&gt;和任何这些类型的联合。例如：</target>
        </trans-unit>
        <trans-unit id="7cf3bd572e49e21161d21f99f1eaa1d0a966d3b2" translate="yes" xml:space="preserve">
          <source>The only operation that immutable sequence types generally implement that is not also implemented by mutable sequence types is support for the &lt;a href=&quot;functions#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt; built-in.</source>
          <target state="translated">不变序列类型通常实现的唯一操作也是可变序列类型也没有实现的唯一操作是对内置&lt;a href=&quot;functions#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; 的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="7625858c35f25c6a209e085caf735f958f7baba7" translate="yes" xml:space="preserve">
          <source>The only special operation on a module is attribute access: &lt;code&gt;m.name&lt;/code&gt;, where &lt;em&gt;m&lt;/em&gt; is a module and &lt;em&gt;name&lt;/em&gt; accesses a name defined in &lt;em&gt;m&lt;/em&gt;&amp;rsquo;s symbol table. Module attributes can be assigned to. (Note that the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement is not, strictly speaking, an operation on a module object; &lt;code&gt;import
foo&lt;/code&gt; does not require a module object named &lt;em&gt;foo&lt;/em&gt; to exist, rather it requires an (external) &lt;em&gt;definition&lt;/em&gt; for a module named &lt;em&gt;foo&lt;/em&gt; somewhere.)</source>
          <target state="translated">模块上的唯一特殊操作是属性访问： &lt;code&gt;m.name&lt;/code&gt; ，其中&lt;em&gt;m&lt;/em&gt;是模块，而&lt;em&gt;name&lt;/em&gt;访问在&lt;em&gt;m&lt;/em&gt;的符号表中定义的名称。可以分配模块属性。 （请注意，严格来讲，&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句不是对模块对象的操作； &lt;code&gt;import foo&lt;/code&gt; 不需要存在名为&lt;em&gt;foo&lt;/em&gt;的模块对象，而是需要在某处对名为&lt;em&gt;foo&lt;/em&gt;的模块进行（外部）&lt;em&gt;定义&lt;/em&gt;。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3910d3bf7a332751e2862ab1b6b251d4cf99238" translate="yes" xml:space="preserve">
          <source>The only special operation on a module is attribute access: &lt;code&gt;m.name&lt;/code&gt;, where &lt;em&gt;m&lt;/em&gt; is a module and &lt;em&gt;name&lt;/em&gt; accesses a name defined in &lt;em&gt;m&lt;/em&gt;&amp;rsquo;s symbol table. Module attributes can be assigned to. (Note that the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement is not, strictly speaking, an operation on a module object; &lt;code&gt;import
foo&lt;/code&gt; does not require a module object named &lt;em&gt;foo&lt;/em&gt; to exist, rather it requires an (external) &lt;em&gt;definition&lt;/em&gt; for a module named &lt;em&gt;foo&lt;/em&gt; somewhere.)</source>
          <target state="translated">模块访问的唯一特殊操作是属性访问： &lt;code&gt;m.name&lt;/code&gt; ，其中&lt;em&gt;m&lt;/em&gt;是模块，而&lt;em&gt;name&lt;/em&gt;访问的是在&lt;em&gt;m&lt;/em&gt;符号表中定义的名称。可以分配模块属性。（请注意，严格来说，&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句不是对模块对象的操作； &lt;code&gt;import foo&lt;/code&gt; 不需要存在名为&lt;em&gt;foo&lt;/em&gt;的模块对象，而是需要在某处为名为&lt;em&gt;foo&lt;/em&gt;的模块&lt;em&gt;定义&lt;/em&gt;（外部）。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a57f2794d9d7678800b1f6104cfddfc1db11bdd1" translate="yes" xml:space="preserve">
          <source>The only way to perform numeric operations according to the locale is to use the special functions defined by this module: &lt;a href=&quot;#locale.atof&quot;&gt;&lt;code&gt;atof()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atoi&quot;&gt;&lt;code&gt;atoi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据语言环境执行数字运算的唯一方法是使用此模块定义的特殊功能：&lt;a href=&quot;#locale.atof&quot;&gt; &lt;code&gt;atof()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#locale.atoi&quot;&gt; &lt;code&gt;atoi()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#locale.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#locale.str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c6f9d3089f7d523d1a9de5719ee1d246264baa6" translate="yes" xml:space="preserve">
          <source>The operating system may set a limit (&lt;a href=&quot;#os.sysconf&quot;&gt;&lt;code&gt;sysconf()&lt;/code&gt;&lt;/a&gt; value &lt;code&gt;'SC_IOV_MAX'&lt;/code&gt;) on the number of buffers that can be used.</source>
          <target state="translated">操作系统可以对可以使用的缓冲区数设置限制（&lt;a href=&quot;#os.sysconf&quot;&gt; &lt;code&gt;sysconf()&lt;/code&gt; &lt;/a&gt;值 &lt;code&gt;'SC_IOV_MAX'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2f5a2165b4bb38c2878350e0299e8e74ec2022b6" translate="yes" xml:space="preserve">
          <source>The operation has been cancelled.</source>
          <target state="translated">该行动已被取消。</target>
        </trans-unit>
        <trans-unit id="37c61370957b9cedf1e9928499ed2d0e26ca38ed" translate="yes" xml:space="preserve">
          <source>The operation has exceeded the given deadline.</source>
          <target state="translated">该操作已经超过了给定的最后期限。</target>
        </trans-unit>
        <trans-unit id="3773fb97a23505a03f39bfe5a21142a1963e281d" translate="yes" xml:space="preserve">
          <source>The operation of &lt;a href=&quot;#itertools.groupby&quot;&gt;&lt;code&gt;groupby()&lt;/code&gt;&lt;/a&gt; is similar to the &lt;code&gt;uniq&lt;/code&gt; filter in Unix. It generates a break or new group every time the value of the key function changes (which is why it is usually necessary to have sorted the data using the same key function). That behavior differs from SQL&amp;rsquo;s GROUP BY which aggregates common elements regardless of their input order.</source>
          <target state="translated">&lt;a href=&quot;#itertools.groupby&quot;&gt; &lt;code&gt;groupby()&lt;/code&gt; &lt;/a&gt;的操作类似于Unix中的 &lt;code&gt;uniq&lt;/code&gt; 过滤器。每当键函数的值更改时，它都会生成一个中断或新组（这就是为什么通常需要使用相同的键函数对数据进行排序的原因）。这种行为与SQL的GROUP BY不同，后者会聚集通用元素，而不管它们的输入顺序如何。</target>
        </trans-unit>
        <trans-unit id="c77345967d8f3f24b4f6917b884ea7f5ba694bed" translate="yes" xml:space="preserve">
          <source>The operations in the following table are defined on mutable sequence types. The &lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt;&lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;&lt;/a&gt; ABC is provided to make it easier to correctly implement these operations on custom sequence types.</source>
          <target state="translated">下表中的操作是在可变序列类型上定义的。该&lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt; &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt; &lt;/a&gt; ABC提供，使其更容易正确地执行自定义序列类型这些操作。</target>
        </trans-unit>
        <trans-unit id="91b37c7af9bc9254958c9badd3abf39dc1684fab" translate="yes" xml:space="preserve">
          <source>The operations in the following table are supported by most sequence types, both mutable and immutable. The &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt; ABC is provided to make it easier to correctly implement these operations on custom sequence types.</source>
          <target state="translated">下表中的操作受可变和不可变的大多数序列类型支持。该&lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; &lt;/a&gt; ABC提供，使其更容易正确地执行自定义序列类型这些操作。</target>
        </trans-unit>
        <trans-unit id="73d944e35633cda428cbe28321b2b77943a977ef" translate="yes" xml:space="preserve">
          <source>The option for &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; to return immediately if no child process status is available immediately. The function returns &lt;code&gt;(0, 0)&lt;/code&gt; in this case.</source>
          <target state="translated">如果没有立即可用的子进程状态，则&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;的选项将立即返回。在这种情况下 &lt;code&gt;(0, 0)&lt;/code&gt; 该函数返回（0，0）。</target>
        </trans-unit>
        <trans-unit id="6de3dc1b2695c0cf08925c9f6267182da10467df" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;kwargs&lt;/code&gt; entry, when &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace, is the keyword argument dict to the constructor for the handler class. If not provided, it defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">当在 &lt;code&gt;logging&lt;/code&gt; 包的名称空间的上下文中对&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;进行评估时，可选的 &lt;code&gt;kwargs&lt;/code&gt; 条目是处理程序类的构造函数的关键字参数dict。如果未提供，则默认为 &lt;code&gt;{}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13a375ad852ca915fd072d9419249a16cc053b4f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;cafile&lt;/em&gt; and &lt;em&gt;capath&lt;/em&gt; parameters specify a set of trusted CA certificates for HTTPS requests. &lt;em&gt;cafile&lt;/em&gt; should point to a single file containing a bundle of CA certificates, whereas &lt;em&gt;capath&lt;/em&gt; should point to a directory of hashed certificate files. More information can be found in &lt;a href=&quot;ssl#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;ssl.SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的&lt;em&gt;cafile&lt;/em&gt;和&lt;em&gt;capath&lt;/em&gt;参数为HTTPS请求指定一组受信任的CA证书。&lt;em&gt;cafile&lt;/em&gt;应该指向包含&lt;em&gt;一堆&lt;/em&gt; CA证书的单个文件，而&lt;em&gt;capath&lt;/em&gt;应该指向哈希证书文件的目录。可以在&lt;a href=&quot;ssl#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;ssl.SSLContext.load_verify_locations()&lt;/code&gt; 中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="6b35f7d2f29e5f2180d8e77b70acb9741f59a8d9" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;compressed&lt;/em&gt; argument determines whether files are compressed. If set to &lt;code&gt;True&lt;/code&gt;, files in the archive are compressed with the deflate method; otherwise, files are stored uncompressed. This argument has no effect when copying an existing archive.</source>
          <target state="translated">可选的&lt;em&gt;compressed&lt;/em&gt;参数确定是否压缩文件。如果设置为 &lt;code&gt;True&lt;/code&gt; ，则归档文件中的文件将使用deflate方法压缩；否则，文件将以未压缩的方式存储。复制现有归档文件时，此参数无效。</target>
        </trans-unit>
        <trans-unit id="9c1e3c277ac39935967be50b468f981bdfdfa57a" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;constructor&lt;/em&gt; parameter, if provided, is a callable object which can be used to reconstruct the object when called with the tuple of arguments returned by &lt;em&gt;function&lt;/em&gt; at pickling time. &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if &lt;em&gt;object&lt;/em&gt; is a class or &lt;em&gt;constructor&lt;/em&gt; is not callable.</source>
          <target state="translated">可选的&lt;em&gt;构造函数&lt;/em&gt;参数（如果提供）是一个可调用对象，当在酸洗时使用&lt;em&gt;函数&lt;/em&gt;返回的参数元组调用该对象时，可用于重建对象。如果&lt;em&gt;object&lt;/em&gt;是一个类或&lt;em&gt;构造函数&lt;/em&gt;不可调用，则会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd4a24914c7793adbdfa0b3596c05058464944fb" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;context&lt;/em&gt; argument supported by most of these functions specifies the number of lines of context to return, which are centered around the current line.</source>
          <target state="translated">大多数这些函数支持的可选&lt;em&gt;context&lt;/em&gt;参数指定要返回的上下文行数，该行以当前行为中心。</target>
        </trans-unit>
        <trans-unit id="b1f1abcdbd284e66453272eb8a5be5c7e9201c7d" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to deal with non-ASCII characters, as accepted by the &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt; method. &lt;em&gt;encoding&lt;/em&gt; defaults to &lt;code&gt;'utf-8'&lt;/code&gt;. &lt;em&gt;errors&lt;/em&gt; defaults to &lt;code&gt;'strict'&lt;/code&gt;, meaning unsupported characters raise a &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt;&lt;code&gt;UnicodeEncodeError&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; must not be supplied if &lt;em&gt;string&lt;/em&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">可选的&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数指定&lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt;方法所接受的如何处理非ASCII字符。&lt;em&gt;编码&lt;/em&gt;默认为 &lt;code&gt;'utf-8'&lt;/code&gt; 。&lt;em&gt;错误&lt;/em&gt;默认为 &lt;code&gt;'strict'&lt;/code&gt; ，这意味着不支持的字符会引发&lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt; &lt;code&gt;UnicodeEncodeError&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;string&lt;/em&gt;为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;则不得提供&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d52651b83fb8c2ce192590a93cdcd443fc58c23" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to decode percent-encoded sequences into Unicode characters, as accepted by the &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可选的&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数指定如何将百分比编码的序列解码为Unicode字符，这是&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;方法所接受的。</target>
        </trans-unit>
        <trans-unit id="c6cb43af4c276c4e243c12913d3915e800c71e09" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;exitmsg&lt;/em&gt; argument specifies an exit message printed when exiting. Pass the empty string to suppress the exit message. If &lt;em&gt;exitmsg&lt;/em&gt; is not given or &lt;code&gt;None&lt;/code&gt;, a default message is printed.</source>
          <target state="translated">可选的&lt;em&gt;exitmsg&lt;/em&gt;参数指定退出时打印的退出消息。传递空字符串以禁止退出消息。如果没有给出&lt;em&gt;exitmsg&lt;/em&gt;或 &lt;code&gt;None&lt;/code&gt; ，则显示默认消息。</target>
        </trans-unit>
        <trans-unit id="ce349780903fc8ead95f9243483607a1fb9de74f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;filenames&lt;/em&gt; parameter can be used to cause additional files to be loaded &amp;ldquo;on top&amp;rdquo; of the default database.</source>
          <target state="translated">可选的&lt;em&gt;filenames&lt;/em&gt;参数可用于导致将其他文件加载到默认数据库的&amp;ldquo;顶部&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c2afc084433a50c8aee38aa46e2a079fe45493d8" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;filter&lt;/em&gt; argument specifies a callback function that is passed a Path object representing the path to the file being added (relative to the source directory). It should return &lt;code&gt;True&lt;/code&gt; if the file is to be added.</source>
          <target state="translated">可选的&lt;em&gt;filter&lt;/em&gt;参数指定一个回调函数，该函数将传递一个Path对象，该Path对象表示要添加的文件的路径（相对于源目录）。如果要添加文件，则应返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7adfa10c0845595ebef1129a659b3a22de006482" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;flag&lt;/em&gt; argument can be:</source>
          <target state="translated">可选的&lt;em&gt;flag&lt;/em&gt;参数可以是：</target>
        </trans-unit>
        <trans-unit id="2b0fad8cff8990cf8144da00de90aa4c3d5f814a" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;flag&lt;/em&gt; argument must be one of these values:</source>
          <target state="translated">可选的&lt;em&gt;flag&lt;/em&gt;参数必须是以下值之一：</target>
        </trans-unit>
        <trans-unit id="1b3549fcf300b3be3698b191796788541c8652d0" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;ident&lt;/em&gt; keyword argument is a string which is prepended to every message, and defaults to &lt;code&gt;sys.argv[0]&lt;/code&gt; with leading path components stripped. The optional &lt;em&gt;logoption&lt;/em&gt; keyword argument (default is 0) is a bit field &amp;ndash; see below for possible values to combine. The optional &lt;em&gt;facility&lt;/em&gt; keyword argument (default is &lt;code&gt;LOG_USER&lt;/code&gt;) sets the default facility for messages which do not have a facility explicitly encoded.</source>
          <target state="translated">可选的&lt;em&gt;ident&lt;/em&gt;关键字参数是一个字符串，该字符串位于每个消息之前，并且默认为 &lt;code&gt;sys.argv[0]&lt;/code&gt; 其中前导路径部分已删除。可选的&lt;em&gt;logoption&lt;/em&gt;关键字参数（默认为0）是一个位字段-有关合并的可能值，请参见下文。可选的&lt;em&gt;工具&lt;/em&gt;关键字参数（默认为 &lt;code&gt;LOG_USER&lt;/code&gt; ）为没有明确编码的工具的消息设置默认工具。</target>
        </trans-unit>
        <trans-unit id="b66c46da2d489751327253e23117ac1b4cb6af20" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;input&lt;/em&gt; argument is the data (&lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object) that will be sent to the child process.</source>
          <target state="translated">可选的&lt;em&gt;输入&lt;/em&gt;参数是将发送到子进程的数据（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象）。</target>
        </trans-unit>
        <trans-unit id="cb9659b35a23a15fa2ac13b1030a3f18b99e659d" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;limit&lt;/em&gt; argument has the same meaning as for &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;chain&lt;/em&gt; is true (the default), then chained exceptions (the &lt;code&gt;__cause__&lt;/code&gt; or &lt;code&gt;__context__&lt;/code&gt; attributes of the exception) will be printed as well, like the interpreter itself does when printing an unhandled exception.</source>
          <target state="translated">可选的&lt;em&gt;limit&lt;/em&gt;参数与&lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt;具有相同的含义。如果&lt;em&gt;chain&lt;/em&gt;为true（默认设置），则也将打印链接的异常（异常的 &lt;code&gt;__cause__&lt;/code&gt; 或 &lt;code&gt;__context__&lt;/code&gt; 属性），就像解释器本身在打印未处理的异常时所做的一样。</target>
        </trans-unit>
        <trans-unit id="dc005c8fd7c6f9b0fc8d7c99b771a2963ec6128f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;limit&lt;/em&gt; argument sets the maximum number of frames to return; by default all available frames are returned. The ordering of the returned list differs depending on whether a stack or a traceback is returned: the newest frames of a stack are returned, but the oldest frames of a traceback are returned. (This matches the behavior of the traceback module.)</source>
          <target state="translated">可选的&lt;em&gt;limit&lt;/em&gt;参数设置要返回的最大帧数；默认情况下，返回所有可用的帧。返回列表的顺序取决于是否返回堆栈或回溯：返回了堆栈的最新帧，但返回了回溯的最早帧。（这与回溯模块的行为匹配。）</target>
        </trans-unit>
        <trans-unit id="2e48eb3fc4c4ac3309a398fb53b8ab84156ddcd5" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;lock&lt;/em&gt; argument must be a &lt;a href=&quot;#asyncio.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; object or &lt;code&gt;None&lt;/code&gt;. In the latter case a new Lock object is created automatically.</source>
          <target state="translated">可选的&lt;em&gt;lock&lt;/em&gt;参数必须是&lt;a href=&quot;#asyncio.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;对象或 &lt;code&gt;None&lt;/code&gt; 。在后一种情况下，将自动创建一个新的Lock对象。</target>
        </trans-unit>
        <trans-unit id="b42d2cc0d17afc9196b211dfa5e1e450b5e939e1" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;mode&lt;/em&gt; argument is the Unix mode of the file, used only when the database has to be created. It defaults to octal &lt;code&gt;0o666&lt;/code&gt; (and will be modified by the prevailing umask).</source>
          <target state="translated">可选的&lt;em&gt;mode&lt;/em&gt;参数是文件的Unix模式，仅在必须创建数据库时使用。它的默认值为八进制 &lt;code&gt;0o666&lt;/code&gt; （将被流行的umask修改）。</target>
        </trans-unit>
        <trans-unit id="029d151e40f320abfb58312618932d44d1d0d877" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;mode&lt;/em&gt; argument is the Unix mode of the file, used only when the database has to be created. It defaults to octal &lt;code&gt;0o666&lt;/code&gt;.</source>
          <target state="translated">可选的&lt;em&gt;mode&lt;/em&gt;参数是文件的Unix模式，仅在必须创建数据库时使用。默认为八进制 &lt;code&gt;0o666&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f89c89d7cc14e84a0d940c7efe3085b1dee849e" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;parameters&lt;/em&gt; argument is a sequence of &lt;a href=&quot;#inspect.Parameter&quot;&gt;&lt;code&gt;Parameter&lt;/code&gt;&lt;/a&gt; objects, which is validated to check that there are no parameters with duplicate names, and that the parameters are in the right order, i.e. positional-only first, then positional-or-keyword, and that parameters with defaults follow parameters without defaults.</source>
          <target state="translated">可选的&lt;em&gt;parameter&lt;/em&gt;参数是&lt;a href=&quot;#inspect.Parameter&quot;&gt; &lt;code&gt;Parameter&lt;/code&gt; &lt;/a&gt;对象的序列，经过验证可以检查是否没有名称重复的参数，并且参数的顺序正确，即仅位置优先，然后位置或关键字，以及具有默认值的参数遵循没有默认值的参数。</target>
        </trans-unit>
        <trans-unit id="3c2efe77995187192106dd6a744fa8bed07098b5" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;paramflags&lt;/em&gt; parameter creates foreign function wrappers with much more functionality than the features described above.</source>
          <target state="translated">可选的&lt;em&gt;paramflags&lt;/em&gt;参数创建的外部函数包装器具有比上述功能更多的功能。</target>
        </trans-unit>
        <trans-unit id="487d54d438198bdbad16eba2ec97ff38172aa6a9" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;pos&lt;/em&gt; and &lt;em&gt;endpos&lt;/em&gt; parameters have the same meaning as for the &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可选的&lt;em&gt;pos&lt;/em&gt;和&lt;em&gt;endpos&lt;/em&gt;参数的含义与&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;方法的含义相同。</target>
        </trans-unit>
        <trans-unit id="7a84450f98705729642aee9ae31e477bc17c9299" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;predicate&lt;/em&gt; argument can be used to control which lines are indented. For example, it is easy to add &lt;em&gt;prefix&lt;/em&gt; to even empty and whitespace-only lines:</source>
          <target state="translated">可选的&lt;em&gt;谓词&lt;/em&gt;参数可用于控制缩进的行。例如，即使在空白行和仅空白行中添加&lt;em&gt;前缀&lt;/em&gt;也很容易：</target>
        </trans-unit>
        <trans-unit id="59179432222144e76da812f3f997401dd9db5679" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;protocol&lt;/em&gt; argument, an integer, tells the pickler to use the given protocol; supported protocols are 0 to &lt;a href=&quot;#pickle.HIGHEST_PROTOCOL&quot;&gt;&lt;code&gt;HIGHEST_PROTOCOL&lt;/code&gt;&lt;/a&gt;. If not specified, the default is &lt;a href=&quot;#pickle.DEFAULT_PROTOCOL&quot;&gt;&lt;code&gt;DEFAULT_PROTOCOL&lt;/code&gt;&lt;/a&gt;. If a negative number is specified, &lt;a href=&quot;#pickle.HIGHEST_PROTOCOL&quot;&gt;&lt;code&gt;HIGHEST_PROTOCOL&lt;/code&gt;&lt;/a&gt; is selected.</source>
          <target state="translated">可选的&lt;em&gt;协议&lt;/em&gt;参数（整数）告诉选择器使用给定的协议。支持的协议是0到&lt;a href=&quot;#pickle.HIGHEST_PROTOCOL&quot;&gt; &lt;code&gt;HIGHEST_PROTOCOL&lt;/code&gt; &lt;/a&gt;。如果未指定，则默认值为&lt;a href=&quot;#pickle.DEFAULT_PROTOCOL&quot;&gt; &lt;code&gt;DEFAULT_PROTOCOL&lt;/code&gt; &lt;/a&gt;。如果指定负数，则选择&lt;a href=&quot;#pickle.HIGHEST_PROTOCOL&quot;&gt; &lt;code&gt;HIGHEST_PROTOCOL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51d07a48c7b5cc26a17814015f91daa6a78b56e2" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;proxies&lt;/em&gt; parameter should be a dictionary mapping scheme names to proxy URLs, where an empty dictionary turns proxies off completely. Its default value is &lt;code&gt;None&lt;/code&gt;, in which case environmental proxy settings will be used if present, as discussed in the definition of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;, above.</source>
          <target state="translated">可选的&lt;em&gt;proxies&lt;/em&gt;参数应该是字典映射方案名称到代理URL，其中空的字典会完全关闭代理。它的默认值为 &lt;code&gt;None&lt;/code&gt; ，在这种情况下，将使用环境代理设置（如果存在），如上面&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;的定义中所述。</target>
        </trans-unit>
        <trans-unit id="a7b4762aeb6be50cb5acb0bbcbaca83494d31e4e" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;return_annotation&lt;/em&gt; argument, can be an arbitrary Python object, is the &amp;ldquo;return&amp;rdquo; annotation of the callable.</source>
          <target state="translated">可选的&lt;em&gt;return_annotation&lt;/em&gt;参数可以是任意的Python对象，是可调用对象的&amp;ldquo; return&amp;rdquo;注释。</target>
        </trans-unit>
        <trans-unit id="9791e97e7f095a2523ef0cf02aa9f3d40350ebcd" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;source&lt;/em&gt; parameter can be used to initialize the array in a few different ways:</source>
          <target state="translated">可选的&lt;em&gt;source&lt;/em&gt;参数可以通过几种不同的方式用于初始化数组：</target>
        </trans-unit>
        <trans-unit id="60b8aa383fe8f256dde67518fd7472e77cc0598f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;strict&lt;/em&gt; argument has the same meaning as with the &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">可选的&lt;em&gt;strict&lt;/em&gt;参数具有与&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="0a8a870ff2656d010f642cb9381fb991c9fbe6f2" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;strict&lt;/em&gt; argument is a flag specifying whether the list of known MIME types is limited to only the official types &lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;registered with IANA&lt;/a&gt;. When &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), only the IANA types are supported; when &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, some additional non-standard but commonly used MIME types are also recognized.</source>
          <target state="translated">可选的&lt;em&gt;strict&lt;/em&gt;参数是一个标志，用于指定是否将已知MIME类型的列表限制为仅向&lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;IANA注册&lt;/a&gt;的正式类型。如果&lt;em&gt;strict&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; （默认值），则仅支持IANA类型。当&lt;em&gt;strict&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; 时，还将识别其他一些非标准但常用的MIME类型。</target>
        </trans-unit>
        <trans-unit id="d631d5a775f639907931a2bb4d9373c258daeb35" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). This actually only works for HTTP, HTTPS and FTP connections.</source>
          <target state="translated">可选的&lt;em&gt;timeout&lt;/em&gt;参数以秒为单位指定用于阻止诸如连接尝试之类的操作的超时（如果未指定，将使用全局默认超时设置）。这实际上仅适用于HTTP，HTTPS和FTP连接。</target>
        </trans-unit>
        <trans-unit id="699773504d81ffaa22308affa57c2d6552f0bd41" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt. If timeout is not given or is None, the global default socket timeout is used.</source>
          <target state="translated">可选的&lt;em&gt;timeout&lt;/em&gt;参数指定连接尝试的超时时间（以秒为单位）。如果未给出超时或为&amp;ldquo;无&amp;rdquo;，则使用全局默认套接字超时。</target>
        </trans-unit>
        <trans-unit id="2faffb1579b0e037a977fbe1deaf0ae8dd4a004f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;value&lt;/em&gt; argument gives the initial value for the internal counter (&lt;code&gt;1&lt;/code&gt; by default). If the given value is less than &lt;code&gt;0&lt;/code&gt; a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">可选的&lt;em&gt;value&lt;/em&gt;参数给出内部计数器的初始值（默认为 &lt;code&gt;1&lt;/code&gt; ）。如果给定值小于 &lt;code&gt;0&lt;/code&gt; 一&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;升高。</target>
        </trans-unit>
        <trans-unit id="27c7d00b63717d48144815c6c76db43f7906994c" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;verbose&lt;/em&gt; argument controls how detailed the summary is. If the verbosity is not specified, then the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity is used.</source>
          <target state="translated">可选的&lt;em&gt;详细&lt;/em&gt;参数控制摘要的详细程度。如果未指定详细程度，则使用&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;的详细程度。</target>
        </trans-unit>
        <trans-unit id="1dc25ec26f6874dc2abe93167acb07ecd5ab080b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;code&gt;fd&lt;/code&gt; (default &lt;code&gt;STDOUT_FILENO&lt;/code&gt;, or standard output) specifies which file descriptor should be queried.</source>
          <target state="translated">可选参数 &lt;code&gt;fd&lt;/code&gt; （默认 &lt;code&gt;STDOUT_FILENO&lt;/code&gt; 或标准输出）指定应查询的文件描述符。</target>
        </trans-unit>
        <trans-unit id="35651ff094b62a3a2a04e7110b3eaf4a7398af5f" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;arg&lt;/em&gt; can be an integer giving the exit status (defaulting to zero), or another type of object. If it is an integer, zero is considered &amp;ldquo;successful termination&amp;rdquo; and any nonzero value is considered &amp;ldquo;abnormal termination&amp;rdquo; by shells and the like. Most systems require it to be in the range 0&amp;ndash;127, and produce undefined results otherwise. Some systems have a convention for assigning specific meanings to specific exit codes, but these are generally underdeveloped; Unix programs generally use 2 for command line syntax errors and 1 for all other kind of errors. If another type of object is passed, &lt;code&gt;None&lt;/code&gt; is equivalent to passing zero, and any other object is printed to &lt;a href=&quot;#sys.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; and results in an exit code of 1. In particular, &lt;code&gt;sys.exit(&quot;some error message&quot;)&lt;/code&gt; is a quick way to exit a program when an error occurs.</source>
          <target state="translated">可选参数&lt;em&gt;arg&lt;/em&gt;可以是给出退出状态的整数（默认为零），也可以是其他类型的对象。如果它是整数，则shell等将零视为&amp;ldquo;成功终止&amp;rdquo;，而将任何非零值视为&amp;ldquo;异常终止&amp;rdquo;。大多数系统要求它的范围是0&amp;ndash;127，否则会产生不确定的结果。某些系统具有为特定的退出代码分配特定含义的约定，但是这些通常不完善。 Unix程序通常将2用于命令行语法错误，将1用于所有其他类型的错误。如果传递了另一种类型的对象，则 &lt;code&gt;None&lt;/code&gt; 等于传递零，并且将任何其他对象打印到&lt;a href=&quot;#sys.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;并导致退出代码为1。特别是， &lt;code&gt;sys.exit(&quot;some error message&quot;)&lt;/code&gt; 是发生错误时退出程序的快速方法。</target>
        </trans-unit>
        <trans-unit id="b85c12e76b3ce55282bb04482401663a22bbd49a" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;autojunk&lt;/em&gt; can be used to disable the automatic junk heuristic.</source>
          <target state="translated">可选参数&lt;em&gt;autojunk&lt;/em&gt;可用于禁用自动垃圾启发式。</target>
        </trans-unit>
        <trans-unit id="1f79bbfd397d27c41f3752747e77e178290e439c" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;completekey&lt;/em&gt; is the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; name of a completion key; it defaults to</source>
          <target state="translated">可选参数&lt;em&gt;completekey&lt;/em&gt;是完成键的&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;名称；它默认为</target>
        </trans-unit>
        <trans-unit id="edd0166f5e246da03becb616498f475276899b64" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;count&lt;/em&gt; is the maximum number of pattern occurrences to be replaced; &lt;em&gt;count&lt;/em&gt; must be a non-negative integer. If omitted or zero, all occurrences will be replaced. Empty matches for the pattern are replaced only when not adjacent to a previous empty match, so &lt;code&gt;sub('x*', '-', 'abxd')&lt;/code&gt; returns &lt;code&gt;'-a-b--d-'&lt;/code&gt;.</source>
          <target state="translated">可选的参数&lt;em&gt;计数&lt;/em&gt;是要替换的最大模式出现次数。&lt;em&gt;count&lt;/em&gt;必须是非负整数。如果省略或为零，将替换所有出现的事件。模式的空匹配仅在不与先前的空匹配相邻时才被替换，因此 &lt;code&gt;sub('x*', '-', 'abxd')&lt;/code&gt; 返回 &lt;code&gt;'-a-b--d-'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="007197ec8a2cf2974cf1f204c0cba442e4bce16f" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;display&lt;/em&gt; defaults to &lt;code&gt;1&lt;/code&gt; and can be set to &lt;code&gt;0&lt;/code&gt; to suppress sending the traceback to the browser. If the argument &lt;em&gt;logdir&lt;/em&gt; is present, the traceback reports are written to files. The value of &lt;em&gt;logdir&lt;/em&gt; should be a directory where these files will be placed. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;. If the optional argument &lt;em&gt;format&lt;/em&gt; is &lt;code&gt;&quot;html&quot;&lt;/code&gt;, the output is formatted as HTML. Any other value forces plain text output. The default value is &lt;code&gt;&quot;html&quot;&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;display&lt;/em&gt;缺省为 &lt;code&gt;1&lt;/code&gt; ,并且可以设置为 &lt;code&gt;0&lt;/code&gt; 以禁止向浏览器发送回溯。如果存在参数&lt;em&gt;logdir&lt;/em&gt;，则将追溯报告写入文件。&lt;em&gt;logdir&lt;/em&gt;的值应该是将放置这些文件的目录。可选参数&lt;em&gt;context&lt;/em&gt;是在回溯中要在源代码的当前行周围显示的上下文行数；默认为 &lt;code&gt;5&lt;/code&gt; 。如果可选参数&lt;em&gt;格式&lt;/em&gt;为 &lt;code&gt;&quot;html&quot;&lt;/code&gt; ，则输出格式为HTML。任何其他值将强制输出纯文本。默认值为 &lt;code&gt;&quot;html&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4058ffb38f75eeab886cb4c4bceee30f7dc1845" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;flags&lt;/em&gt; also controls whether the compiled source is allowed to contain top-level &lt;code&gt;await&lt;/code&gt;, &lt;code&gt;async for&lt;/code&gt; and &lt;code&gt;async with&lt;/code&gt;. When the bit &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; is set, the return code object has &lt;code&gt;CO_COROUTINE&lt;/code&gt; set in &lt;code&gt;co_code&lt;/code&gt;, and can be interactively executed via &lt;code&gt;await eval(code_object)&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;标志&lt;/em&gt;还控制是否允许已编译的源包含顶级 &lt;code&gt;await&lt;/code&gt; ， &lt;code&gt;async for&lt;/code&gt; 和 &lt;code&gt;async with&lt;/code&gt; 。当设置了 &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; 位时，返回代码对象的 &lt;code&gt;CO_COROUTINE&lt;/code&gt; 设置了 &lt;code&gt;co_code&lt;/code&gt; ，并且可以通过 &lt;code&gt;await eval(code_object)&lt;/code&gt; 交互执行。</target>
        </trans-unit>
        <trans-unit id="b24d235886d995066464dc1241876c6f316c91d4" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;i&lt;/em&gt; defaults to &lt;code&gt;-1&lt;/code&gt;, so that by default the last item is removed and returned.</source>
          <target state="translated">可选参数&lt;em&gt;i&lt;/em&gt;默认为 &lt;code&gt;-1&lt;/code&gt; ，因此默认情况下，最后一项被删除并返回。</target>
        </trans-unit>
        <trans-unit id="b621b2d52bf8161446e23d3c23e8f342b23f4dd5" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;initial_bytes&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; that contains initial data.</source>
          <target state="translated">可选参数&lt;em&gt;initial_bytes&lt;/em&gt;是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;，包含初始数据。</target>
        </trans-unit>
        <trans-unit id="d51b5d8a3ca6744bd27e459eda78b0013d565373" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;initial_bytes&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; that contains initial data.</source>
          <target state="translated">可选参数&lt;em&gt;initial_bytes&lt;/em&gt;是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;，包含初始数据。</target>
        </trans-unit>
        <trans-unit id="e42a8d2cefe3a4f20592ee996f743f43bac1a227" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;keep_blank_values&lt;/em&gt; is a flag indicating whether blank values in percent-encoded queries should be treated as blank strings. A true value indicates that blanks should be retained as blank strings. The default false value indicates that blank values are to be ignored and treated as if they were not included.</source>
          <target state="translated">可选参数&lt;em&gt;keep_blank_values&lt;/em&gt;是一个标志，指示是否应将百分比编码的查询中的空白值视为空白字符串。真值表示应将空格保留为空白字符串。默认的false值指示将忽略空白值并将其视为未包含空白值。</target>
        </trans-unit>
        <trans-unit id="9ca0255c69b9b315a63bc27ff96f8bb13d5e275d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;max_num_fields&lt;/em&gt; is the maximum number of fields to read. If set, then throws a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if there are more than &lt;em&gt;max_num_fields&lt;/em&gt; fields read.</source>
          <target state="translated">可选参数&lt;em&gt;max_num_fields&lt;/em&gt;是要读取的最大字段数。如果设置，则如果读取的&lt;em&gt;max_num_fields个&lt;/em&gt;字段以上，则抛出&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="514b043f74d2fc465dec58074f2180b75d368dc7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;name&lt;/em&gt; specifies the object&amp;rsquo;s name; this name will be used to construct names for the returned &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s. If &lt;em&gt;name&lt;/em&gt; is not specified, then &lt;code&gt;obj.__name__&lt;/code&gt; is used.</source>
          <target state="translated">可选的参数&lt;em&gt;名称&lt;/em&gt;指定对象的名称；此名称将用于构造返回的&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;的名称。如果未指定&lt;em&gt;名称&lt;/em&gt;，则使用 &lt;code&gt;obj.__name__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61cddf736ae6d12c0d3bb5ee499bb75bfd0c2442" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;parser&lt;/em&gt; specifies the &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; object (or a drop-in replacement) that is used to extract doctests from docstrings.</source>
          <target state="translated">可选参数&lt;em&gt;parser&lt;/em&gt;指定&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt;对象（或直接替代），该对象用于从文档字符串中提取文档测试。</target>
        </trans-unit>
        <trans-unit id="0d72ec9247df1cd0305e14348ae7c7e78e306ed1" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;random&lt;/em&gt; is a 0-argument function returning a random float in [0.0, 1.0); by default, this is the function &lt;a href=&quot;#random.random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;random&lt;/em&gt;是一个0参数的函数，返回[0.0，1.0）中的随机浮点数；默认情况下，这是函数&lt;a href=&quot;#random.random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="471908e527760c937940985bc7ab6b5fbc56dd90" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;sep&lt;/em&gt; (default &lt;code&gt;'T'&lt;/code&gt;) is a one-character separator, placed between the date and time portions of the result. For example:</source>
          <target state="translated">可选参数&lt;em&gt;sep&lt;/em&gt;（默认为 &lt;code&gt;'T'&lt;/code&gt; ）是一个单字符分隔符，位于结果的日期和时间部分之间。例如：</target>
        </trans-unit>
        <trans-unit id="6078dc1dd882bcafe2606bc389f8fe3bb8a8fea0" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;strict_parsing&lt;/em&gt; is a flag indicating what to do with parsing errors. If false (the default), errors are silently ignored. If true, errors raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">可选参数&lt;em&gt;strict_parsing&lt;/em&gt;是一个标志，指示如何处理解析错误。如果为false（默认值），错误将被忽略。如果为true，则错误引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="57ff14434679779b7626393e005a3fe4d3584339" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;timespec&lt;/em&gt; specifies the number of additional components of the time to include (the default is &lt;code&gt;'auto'&lt;/code&gt;). It can be one of the following:</source>
          <target state="translated">可选参数&lt;em&gt;timespec&lt;/em&gt;指定要包括的时间的其他组成部分的数量（默认为 &lt;code&gt;'auto'&lt;/code&gt; ）。可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="b614d39325d8f7a11487aa19af1646166702e410" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;verbose&lt;/em&gt; can be used to display the objects searched by the finder. It defaults to &lt;code&gt;False&lt;/code&gt; (no output).</source>
          <target state="translated">可选参数&lt;em&gt;verbose&lt;/em&gt;可用于显示查找程序搜索的对象。默认为 &lt;code&gt;False&lt;/code&gt; （无输出）。</target>
        </trans-unit>
        <trans-unit id="10af946136a130d5b30e416167c2110f84bcfba1" translate="yes" xml:space="preserve">
          <source>The optional argument gives the initial &lt;em&gt;value&lt;/em&gt; for the internal counter; it defaults to &lt;code&gt;1&lt;/code&gt;. If the &lt;em&gt;value&lt;/em&gt; given is less than 0, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">可选参数给出内部计数器的初始&lt;em&gt;值&lt;/em&gt;。它默认为 &lt;code&gt;1&lt;/code&gt; 。如果给定的&lt;em&gt;值&lt;/em&gt;小于0，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80f9adbef3f8b3728449cbd66cc5fce3e359242a" translate="yes" xml:space="preserve">
          <source>The optional argument is a banner or intro string to be issued before the first prompt (this overrides the &lt;a href=&quot;#cmd.Cmd.intro&quot;&gt;&lt;code&gt;intro&lt;/code&gt;&lt;/a&gt; class attribute).</source>
          <target state="translated">可选参数是在第一个提示之前发出的标题或介绍字符串（此选项将覆盖&lt;a href=&quot;#cmd.Cmd.intro&quot;&gt; &lt;code&gt;intro&lt;/code&gt; &lt;/a&gt;类属性）。</target>
        </trans-unit>
        <trans-unit id="0ca7b0833d38e33a40c85e661ee7c9c7a8f78930" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are sequences to be compared; both default to empty strings. The elements of both sequences must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;是要比较的序列；两者都默认为空字符串。两个序列的元素都必须是可&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;哈希的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baa665c6ce700ce6685571bd2ec19058fd7a45a2" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are sequences to be compared; both default to empty strings. The elements of both sequences must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;是要比较的序列；两者都默认为空字符串。两个序列的元素都必须是可&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;哈希的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="280d3e72caf4f6c3027aa7ba08454659445a2fa3" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;fix_imports&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; are used to control compatibility support for pickle stream generated by Python 2. If &lt;em&gt;fix_imports&lt;/em&gt; is true, pickle will try to map the old Python 2 names to the new names used in Python 3. The &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; tell pickle how to decode 8-bit string instances pickled by Python 2; these default to &amp;lsquo;ASCII&amp;rsquo; and &amp;lsquo;strict&amp;rsquo;, respectively. The &lt;em&gt;encoding&lt;/em&gt; can be &amp;lsquo;bytes&amp;rsquo; to read these 8-bit string instances as bytes objects. Using &lt;code&gt;encoding='latin1'&lt;/code&gt; is required for unpickling NumPy arrays and instances of &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; pickled by Python 2.</source>
          <target state="translated">可选参数&lt;em&gt;fix_imports&lt;/em&gt;，&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;被用来控制兼容性支持被Python 2.如果产生泡菜流&lt;em&gt;fix_imports&lt;/em&gt;是真实的，泡菜会尝试将旧的Python 2名映射到在Python 3，使用新名称&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;告诉pickle如何解码Python 2腌制的8位字符串实例；它们分别默认为&amp;ldquo; ASCII&amp;rdquo;和&amp;ldquo; strict&amp;rdquo;。该&lt;em&gt;编码&lt;/em&gt;可以是&amp;ldquo;字节&amp;rdquo;来读取这些8位串实例作为字节对象。要解开NumPy数组和&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;datetime#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;和实例，需要使用 &lt;code&gt;encoding='latin1'&lt;/code&gt; &lt;a href=&quot;datetime#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;Python腌制的时间 2。</target>
        </trans-unit>
        <trans-unit id="cceba437525fe2bbcc541e07dc05272d645e8630" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;flags&lt;/em&gt; and &lt;em&gt;dont_inherit&lt;/em&gt; control which &lt;a href=&quot;ast#ast-compiler-flags&quot;&gt;compiler options&lt;/a&gt; should be activated and which &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#future&quot;&gt;future features&lt;/a&gt; should be allowed. If neither is present (or both are zero) the code is compiled with the same flags that affect the code that is calling &lt;a href=&quot;#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;flags&lt;/em&gt; argument is given and &lt;em&gt;dont_inherit&lt;/em&gt; is not (or is zero) then the compiler options and the future statements specified by the &lt;em&gt;flags&lt;/em&gt; argument are used in addition to those that would be used anyway. If &lt;em&gt;dont_inherit&lt;/em&gt; is a non-zero integer then the &lt;em&gt;flags&lt;/em&gt; argument is it &amp;ndash; the flags (future features and compiler options) in the surrounding code are ignored.</source>
          <target state="translated">可选参数&lt;em&gt;标志&lt;/em&gt;和&lt;em&gt;dont_inherit&lt;/em&gt;控制应激活哪些&lt;a href=&quot;ast#ast-compiler-flags&quot;&gt;编译器选项&lt;/a&gt;以及应允许哪些&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#future&quot;&gt;将来的功能&lt;/a&gt;。如果两个都不存在（或两个都不为零），则使用影响调用&lt;a href=&quot;#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;的代码的相同标志编译该代码。如果给定了&lt;em&gt;flags&lt;/em&gt;参数并且&lt;em&gt;dont_inherit&lt;/em&gt;不为（或为零），则除了将始终使用的那些选项之外，还将使用&lt;em&gt;flags&lt;/em&gt;参数指定的编译器选项和future语句。如果&lt;em&gt;dont_inherit&lt;/em&gt;是非零整数，则&lt;em&gt;标志&lt;/em&gt; 是否有论据&amp;ndash;周围代码中的标志（未来功能和编译器选项）将被忽略。</target>
        </trans-unit>
        <trans-unit id="b90d21eecece05bde07d323f5ae4544c33e89c53" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;flags&lt;/em&gt; and &lt;em&gt;dont_inherit&lt;/em&gt; control which &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;future statements&lt;/a&gt; affect the compilation of &lt;em&gt;source&lt;/em&gt;. If neither is present (or both are zero) the code is compiled with those future statements that are in effect in the code that is calling &lt;a href=&quot;#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;flags&lt;/em&gt; argument is given and &lt;em&gt;dont_inherit&lt;/em&gt; is not (or is zero) then the future statements specified by the &lt;em&gt;flags&lt;/em&gt; argument are used in addition to those that would be used anyway. If &lt;em&gt;dont_inherit&lt;/em&gt; is a non-zero integer then the &lt;em&gt;flags&lt;/em&gt; argument is it &amp;ndash; the future statements in effect around the call to compile are ignored.</source>
          <target state="translated">可选参数&lt;em&gt;标志&lt;/em&gt;和&lt;em&gt;dont_inherit&lt;/em&gt;控制&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;将来的&lt;/a&gt;哪些语句会影响&lt;em&gt;source&lt;/em&gt;的编译。如果都不存在（或两者都不为零），则使用在调用&lt;a href=&quot;#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;的代码中有效的将来的语句来编译代码。如果给定&lt;em&gt;flags&lt;/em&gt;参数且&lt;em&gt;dont_inherit&lt;/em&gt;不（或为零），则除了将始终使用的那些语句外，还将使用&lt;em&gt;flags&lt;/em&gt;参数指定的将来语句。如果&lt;em&gt;dont_inherit&lt;/em&gt;是一个非零整数，则&lt;em&gt;flags&lt;/em&gt;参数为它&amp;ndash;围绕编译调用生效的将来语句将被忽略。</target>
        </trans-unit>
        <trans-unit id="1c074678e55bc706eadde357a56e82a33341af0f" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;em&gt;stdin&lt;/em&gt; and &lt;em&gt;stdout&lt;/em&gt; specify the input and output file objects that the Cmd instance or subclass instance will use for input and output. If not specified, they will default to &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;stdin&lt;/em&gt;和&lt;em&gt;stdout&lt;/em&gt;指定Cmd实例或子类实例将用于输入和输出的输入和输出文件对象。如果未指定，它们将默认为&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c0a3fb9fd0485751e63083c8010f030163b3f45" translate="yes" xml:space="preserve">
          <source>The optional dictionary argument &lt;em&gt;init_globals&lt;/em&gt; may be used to pre-populate the module&amp;rsquo;s globals dictionary before the code is executed. The supplied dictionary will not be modified. If any of the special global variables below are defined in the supplied dictionary, those definitions are overridden by &lt;a href=&quot;#runpy.run_module&quot;&gt;&lt;code&gt;run_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的字典参数&lt;em&gt;init_globals&lt;/em&gt;可用于在执行代码之前预填充模块的globals字典。提供的词典将不会被修改。如果在提供的字典中定义了以下任何特殊的全局变量，则&lt;a href=&quot;#runpy.run_module&quot;&gt; &lt;code&gt;run_module()&lt;/code&gt; &lt;/a&gt;会覆盖这些定义。</target>
        </trans-unit>
        <trans-unit id="2d791b4306cfa5a7c3476b135379d33a7c54a9c8" translate="yes" xml:space="preserve">
          <source>The optional dictionary argument &lt;em&gt;init_globals&lt;/em&gt; may be used to pre-populate the module&amp;rsquo;s globals dictionary before the code is executed. The supplied dictionary will not be modified. If any of the special global variables below are defined in the supplied dictionary, those definitions are overridden by &lt;a href=&quot;#runpy.run_path&quot;&gt;&lt;code&gt;run_path()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的字典参数&lt;em&gt;init_globals&lt;/em&gt;可用于在执行代码之前预填充模块的globals字典。提供的词典将不会被修改。如果在提供的字典中定义了以下任何特殊的全局变量，则这些定义将被&lt;a href=&quot;#runpy.run_path&quot;&gt; &lt;code&gt;run_path()&lt;/code&gt; &lt;/a&gt;覆盖。</target>
        </trans-unit>
        <trans-unit id="c0b119afc071dbab13a10cf9b7cf631db10d0a72" translate="yes" xml:space="preserve">
          <source>The optional keyword argument &lt;em&gt;checker&lt;/em&gt; specifies the &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; object (or drop-in replacement) that should be used to compare the expected outputs to the actual outputs of doctest examples.</source>
          <target state="translated">可选的关键字参数&lt;em&gt;checker&lt;/em&gt;指定了&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt;对象（或直接替换），该对象应用于将预期输出与doctest示例的实际输出进行比较。</target>
        </trans-unit>
        <trans-unit id="15bab300aeb95a6a0ce45f3654d7b53117d9f5fa" translate="yes" xml:space="preserve">
          <source>The optional keyword argument &lt;em&gt;optionflags&lt;/em&gt; can be used to control how the test runner compares expected output to actual output, and how it displays failures. For more information, see section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="translated">可选关键字参数&lt;em&gt;optionflags&lt;/em&gt;可用于控制测试运行程序如何将预期输出与实际输出进行比较，以及显示故障的方式。有关更多信息，请参见&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="96b6d4c5c19dfebd08d1079fa3b65e27b6693151" translate="yes" xml:space="preserve">
          <source>The optional keyword argument &lt;em&gt;verbose&lt;/em&gt; controls the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity. If &lt;em&gt;verbose&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, then information is printed about each example, as it is run. If &lt;em&gt;verbose&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, then only failures are printed. If &lt;em&gt;verbose&lt;/em&gt; is unspecified, or &lt;code&gt;None&lt;/code&gt;, then verbose output is used iff the command-line switch &lt;code&gt;-v&lt;/code&gt; is used.</source>
          <target state="translated">可选关键字参数&lt;em&gt;verbose&lt;/em&gt;控制&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;的详细程度。如果&lt;em&gt;verbose&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则在运行每个示例时将打印有关信息。如果&lt;em&gt;verbose&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则仅打印失败。如果未指定&lt;em&gt;verbose&lt;/em&gt;或 &lt;code&gt;None&lt;/code&gt; ，则在使用命令行开关 &lt;code&gt;-v&lt;/code&gt; 时使用详细输出。</target>
        </trans-unit>
        <trans-unit id="3cb7914061af70176a9cadd39d9548b72cd9c0ab" translate="yes" xml:space="preserve">
          <source>The optional keyword-only &lt;em&gt;default&lt;/em&gt; parameter is returned by &lt;a href=&quot;#contextvars.ContextVar.get&quot;&gt;&lt;code&gt;ContextVar.get()&lt;/code&gt;&lt;/a&gt; when no value for the variable is found in the current context.</source>
          <target state="translated">当在当前上下文中找不到该变量的值时，&lt;a href=&quot;#contextvars.ContextVar.get&quot;&gt; &lt;code&gt;ContextVar.get()&lt;/code&gt; &lt;/a&gt;将返回可选的仅关键字&lt;em&gt;默认&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="3fd0d0d2b4a3f5e7374139c6fda5cad296fbf033" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;em&gt;endpos&lt;/em&gt; limits how far the string will be searched; it will be as if the string is &lt;em&gt;endpos&lt;/em&gt; characters long, so only the characters from &lt;em&gt;pos&lt;/em&gt; to &lt;code&gt;endpos - 1&lt;/code&gt; will be searched for a match. If &lt;em&gt;endpos&lt;/em&gt; is less than &lt;em&gt;pos&lt;/em&gt;, no match will be found; otherwise, if &lt;em&gt;rx&lt;/em&gt; is a compiled regular expression object, &lt;code&gt;rx.search(string, 0, 50)&lt;/code&gt; is equivalent to &lt;code&gt;rx.search(string[:50], 0)&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;endpos&lt;/em&gt;限制将搜索字符串的距离；就像字符串是&lt;em&gt;endpos&lt;/em&gt;字符长一样，因此将仅搜索从&lt;em&gt;pos&lt;/em&gt;到 &lt;code&gt;endpos - 1&lt;/code&gt; 的字符。如果&lt;em&gt;endpos&lt;/em&gt;小于&lt;em&gt;pos&lt;/em&gt;，则不会找到匹配项；否则，如果&lt;em&gt;rx&lt;/em&gt;是已编译的正则表达式对象，则 &lt;code&gt;rx.search(string, 0, 50)&lt;/code&gt; ，0，50）等效于 &lt;code&gt;rx.search(string[:50], 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd06d591623545a7f0948ebe91d224550cc3edc8" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;em&gt;length&lt;/em&gt; sets the initial size of the output buffer.</source>
          <target state="translated">可选参数&lt;em&gt;length&lt;/em&gt;设置输出缓冲区的初始大小。</target>
        </trans-unit>
        <trans-unit id="39e84f6cb07d1b639d19390570fae491ee0031c8" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;em&gt;module&lt;/em&gt; is the module that contains the given object. If the module is not specified or is &lt;code&gt;None&lt;/code&gt;, then the test finder will attempt to automatically determine the correct module. The object&amp;rsquo;s module is used:</source>
          <target state="translated">可选参数&lt;em&gt;模块&lt;/em&gt;是包含给定对象的模块。如果未指定模块或为 &lt;code&gt;None&lt;/code&gt; ，则测试查找器将尝试自动确定正确的模块。使用对象的模块：</target>
        </trans-unit>
        <trans-unit id="29ef5309f6a96a5241e202f8bb194d1cf1929a0d" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;em&gt;newScmPrio&lt;/em&gt; can be given to reset the priority level of the Tk options set by the Tix schemes.</source>
          <target state="translated">可以使用可选参数&lt;em&gt;newScmPrio&lt;/em&gt;重置由Tix方案设置的Tk选项的优先级。</target>
        </trans-unit>
        <trans-unit id="081e4d9b1a3e9f630ab40ede36fed947a098a418" translate="yes" xml:space="preserve">
          <source>The optional positional &lt;em&gt;args&lt;/em&gt; will be passed to the callback when it is called. If you want the callback to be called with keyword arguments use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的位置&lt;em&gt;args&lt;/em&gt;将在调用时传递给回调。如果要使用关键字参数调用回调，请使用&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="668eb47fefd52438e0243b1889054e2490a3c22e" translate="yes" xml:space="preserve">
          <source>The optional second item is the parameter name as string. If this is specified, the foreign function can be called with named parameters.</source>
          <target state="translated">可选的第二项是参数名称为字符串。如果指定了这一项,则可以用命名的参数来调用外来函数。</target>
        </trans-unit>
        <trans-unit id="05c81d7894f8452dac25fb2733a9c05320f3e15e" translate="yes" xml:space="preserve">
          <source>The optional second parameter &lt;em&gt;pos&lt;/em&gt; gives an index in the string where the search is to start; it defaults to &lt;code&gt;0&lt;/code&gt;. This is not completely equivalent to slicing the string; the &lt;code&gt;'^'&lt;/code&gt; pattern character matches at the real beginning of the string and at positions just after a newline, but not necessarily at the index where the search is to start.</source>
          <target state="translated">可选的第二个参数&lt;em&gt;pos&lt;/em&gt;在开始搜索的字符串中给出一个索引；它默认为 &lt;code&gt;0&lt;/code&gt; 。这并不完全等同于切片字符串。在 &lt;code&gt;'^'&lt;/code&gt; 模式字符的字符串的真正开始，并在位置只是一个换行符之后的比赛，但不一定，其中搜索是启动索引。</target>
        </trans-unit>
        <trans-unit id="76e850e120b0be959c9b3d6c7b92a5ed59e98924" translate="yes" xml:space="preserve">
          <source>The optional third item is the default value for this parameter.</source>
          <target state="translated">可选的第三项是该参数的默认值。</target>
        </trans-unit>
        <trans-unit id="60a1f579da15c11aeee7b1010b2d6f89b26ed4f4" translate="yes" xml:space="preserve">
          <source>The options supported by a given widget are listed in that widget&amp;rsquo;s man page, or can be queried at runtime by calling the &lt;code&gt;config()&lt;/code&gt; method without arguments, or by calling the &lt;code&gt;keys()&lt;/code&gt; method on that widget. The return value of these calls is a dictionary whose key is the name of the option as a string (for example, &lt;code&gt;'relief'&lt;/code&gt;) and whose values are 5-tuples.</source>
          <target state="translated">给定窗口小部件支持的选项在该窗口小部件的手册页中列出，或者可以在运行时通过以下方式查询：不带参数的 &lt;code&gt;config()&lt;/code&gt; 方法，或在该窗口小部件上调用 &lt;code&gt;keys()&lt;/code&gt; 方法。这些调用的返回值是一个字典，其键是作为字符串的选项名称（例如 &lt;code&gt;'relief'&lt;/code&gt; ），其值是5元组。</target>
        </trans-unit>
        <trans-unit id="6f92379bc6bff3b3cf0551a98ef88027399670d3" translate="yes" xml:space="preserve">
          <source>The options to the &lt;a href=&quot;#cgitb.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; function control whether the report is displayed in the browser and whether the report is logged to a file for later analysis.</source>
          <target state="translated">&lt;a href=&quot;#cgitb.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt;函数的选项控制报告是否显示在浏览器中以及报告是否记录到文件中以供以后分析。</target>
        </trans-unit>
        <trans-unit id="a5ac6774087e93b0abf13debc7f04f52108bcd15" translate="yes" xml:space="preserve">
          <source>The optionxform function transforms option names to a canonical form. This should be an idempotent function: if the name is already in canonical form, it should be returned unchanged.</source>
          <target state="translated">optionxform 函数将选项名转换为规范形式。这个函数应该是一个幂等函数:如果名称已经是规范形式,则应该不变地返回。</target>
        </trans-unit>
        <trans-unit id="fedeb12498dc0a0a0daa7f8b91e7ee947a38170d" translate="yes" xml:space="preserve">
          <source>The order in which data values are displayed may be controlled by setting the widget option &lt;code&gt;displaycolumns&lt;/code&gt;. The tree widget can also display column headings. Columns may be accessed by number or symbolic names listed in the widget option columns. See &lt;a href=&quot;#column-identifiers&quot;&gt;Column Identifiers&lt;/a&gt;.</source>
          <target state="translated">可以通过设置窗口小部件选项 &lt;code&gt;displaycolumns&lt;/code&gt; 来控制数据值的显示顺序。树小部件还可以显示列标题。可以通过窗口小部件选项列中列出的数字或符号名来访问列。请参阅&lt;a href=&quot;#column-identifiers&quot;&gt;列标识符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83baddffa0f7cfb5cd6adb7522e86b328bf02dca" translate="yes" xml:space="preserve">
          <source>The order in which the various tests will be run is determined by sorting the test method names with respect to the built-in ordering for strings.</source>
          <target state="translated">各种测试的运行顺序是由测试方法名称按照字符串的内置排序来决定的。</target>
        </trans-unit>
        <trans-unit id="42292f890191ffdd58c76862cd81565d76b0393d" translate="yes" xml:space="preserve">
          <source>The order in which these methods are called within each stage is determined by sorting the handler instances.</source>
          <target state="translated">这些方法在每个阶段中被调用的顺序是由处理程序实例的排序决定的。</target>
        </trans-unit>
        <trans-unit id="06bdd39abab4e75a915cba22464964749e134194" translate="yes" xml:space="preserve">
          <source>The order is reversed: the most recent call is shown first.</source>
          <target state="translated">顺序是相反的:最近一次的呼叫先显示。</target>
        </trans-unit>
        <trans-unit id="a6cd757b3866d5d1fb00b34c2843daf22f73d080" translate="yes" xml:space="preserve">
          <source>The order of arguments (link, target) is the reverse of &lt;a href=&quot;os#os.symlink&quot;&gt;&lt;code&gt;os.symlink()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s.</source>
          <target state="translated">参数（链接，目标）的顺序与&lt;a href=&quot;os#os.symlink&quot;&gt; &lt;code&gt;os.symlink()&lt;/code&gt; &lt;/a&gt;的顺序相反。</target>
        </trans-unit>
        <trans-unit id="2526b957613becaf0217c4b6ae1cb5dd024a9797" translate="yes" xml:space="preserve">
          <source>The order of the annotations is preserved and matters for equality checks:</source>
          <target state="translated">保留了注释的顺序,对平等性检查很重要。</target>
        </trans-unit>
        <trans-unit id="22ebae13e1744671895f0fd794966474c5bc70f1" translate="yes" xml:space="preserve">
          <source>The order of the fields in all of the generated methods is the order in which they appear in the class definition.</source>
          <target state="translated">所有生成的方法中字段的顺序是它们在类定义中出现的顺序。</target>
        </trans-unit>
        <trans-unit id="b302ecf6f9cf49b2ca3262ea42da1d8d1a5d4f4d" translate="yes" xml:space="preserve">
          <source>The order of the printing is based on the last &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt;&lt;code&gt;sort_stats()&lt;/code&gt;&lt;/a&gt; operation done on the object (subject to caveats in &lt;a href=&quot;#pstats.Stats.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">打印顺序基于对对象执行的最后&lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt; &lt;code&gt;sort_stats()&lt;/code&gt; &lt;/a&gt;操作（取决于&lt;a href=&quot;#pstats.Stats.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; 中的&lt;/a&gt;注意事项）。</target>
        </trans-unit>
        <trans-unit id="ed1a692ceb1b9aed38ff2e02d3d8fbd48c44171d" translate="yes" xml:space="preserve">
          <source>The ordering of format characters may have an impact on size since the padding needed to satisfy alignment requirements is different:</source>
          <target state="translated">由于满足对齐要求所需的padding不同,格式字符的排序可能会对尺寸产生影响。</target>
        </trans-unit>
        <trans-unit id="d088688a3b370980ea94cedecf9cc369fe607106" translate="yes" xml:space="preserve">
          <source>The original URL passed to the constructor.</source>
          <target state="translated">传递给构造函数的原始URL。</target>
        </trans-unit>
        <trans-unit id="5e2f1a999123951c1cdbbd6fb89f2219feb47bd1" translate="yes" xml:space="preserve">
          <source>The original host for the request, without port.</source>
          <target state="translated">请求的原始主机,不含端口。</target>
        </trans-unit>
        <trans-unit id="2153b6973b156dda830b5a6e8c1928edc3726836" translate="yes" xml:space="preserve">
          <source>The original rationale and specification for this module.</source>
          <target state="translated">本模块的原始原理和规范。</target>
        </trans-unit>
        <trans-unit id="3c1d78973a4f5bf993cffd68ef197b54fb9d55ff" translate="yes" xml:space="preserve">
          <source>The original specification of the format.</source>
          <target state="translated">格式的原始规范。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
