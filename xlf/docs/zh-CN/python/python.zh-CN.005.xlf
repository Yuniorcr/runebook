<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="92ce4122d833f9368b375ed599693656c33c96d1" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding formatted tracebacks. Each tuple represents an expected failure of the test case.</source>
          <target state="translated">包含2个元组的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;实例和包含格式化的回溯的字符串的列表。每个元组代表测试用例的预期失败。</target>
        </trans-unit>
        <trans-unit id="adfc2fa69598f416edc0906695c6be2768745dd0" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding the reason for skipping the test.</source>
          <target state="translated">包含2个元组的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;实例和包含跳过测试原因的字符串的列表。</target>
        </trans-unit>
        <trans-unit id="188f395714c720911bcc2d078055feb553b62673" translate="yes" xml:space="preserve">
          <source>A list containing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances that were marked as expected failures, but succeeded.</source>
          <target state="translated">包含被标记为预期失败但成功的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;实例的列表。</target>
        </trans-unit>
        <trans-unit id="c0894abf939ae74d3fdc742c584302b8dc3eaffa" translate="yes" xml:space="preserve">
          <source>A list containing zero or more of the following values, specifying which elements of the tree to display.</source>
          <target state="translated">一个包含0个或多个以下值的列表,指定要显示树的哪些元素。</target>
        </trans-unit>
        <trans-unit id="94f3ab44b984a41d4a3ccc3bca5a60821aa9485b" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; objects encoding the individual interactive Python examples that should be run by this test.</source>
          <target state="translated">&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;对象的列表，这些对象对应由该测试运行的各个交互式Python实例进行编码。</target>
        </trans-unit>
        <trans-unit id="0d08717c624c36bc99bc8e887e88fc336daf55a9" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects in any combination may be used to set the value of an address header. &lt;code&gt;Group&lt;/code&gt; objects whose &lt;code&gt;display_name&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; will be interpreted as single addresses, which allows an address list to be copied with groups intact by using the list obtained from the &lt;code&gt;groups&lt;/code&gt; attribute of the source header.</source>
          <target state="translated">&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;对象的任意组合列表可以用于设置地址标头的值。 &lt;code&gt;display_name&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; 的 &lt;code&gt;Group&lt;/code&gt; 对象将被解释为单个地址，这允许使用从源头的 &lt;code&gt;groups&lt;/code&gt; 属性获得的列表完整地复制地址列表。</target>
        </trans-unit>
        <trans-unit id="ada6c9c5f870014a4ae30f28b8753d03af7735b7" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; objects that have their &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; methods called to see if one of the objects can find the module to be imported. The &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method is called with at least the absolute name of the module being imported. If the module to be imported is contained in a package, then the parent package&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute is passed in as a second argument. The method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;module spec&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; if the module cannot be found.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;元路径查找器&lt;/a&gt;对象的列表，这些对象具有其&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;方法，以查看其中一个对象是否可以找到要导入的模块。所述&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;方法被调用与至少模块的绝对名称被导入。如果要导入的模块包含在包中，则将父包的&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性作为第二个参数传递。该方法返回&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;模块规格&lt;/a&gt;，如果找不到模块，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a687cdf67708e7c7576598a8408f14e371fffb4" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; objects that have their &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; methods called to see if one of the objects can find the module to be imported. The &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method is called with at least the absolute name of the module being imported. If the module to be imported is contained in a package, then the parent package&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute is passed in as a second argument. The method returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;module spec&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; if the module cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31344a02e0993784eb4314acf41022e52a1a17f1" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;logging.LogRecord&lt;/code&gt;&lt;/a&gt; objects of the matching log messages.</source>
          <target state="translated">匹配日志消息的&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;logging.LogRecord&lt;/code&gt; &lt;/a&gt;对象的列表。</target>
        </trans-unit>
        <trans-unit id="dd17bfbaf0a82494b417e354a5e60123f1b11077" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects with the formatted output of matching messages.</source>
          <target state="translated">具有匹配消息格式输出的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象列表。</target>
        </trans-unit>
        <trans-unit id="f382ed1cd68dc0c07b20c325e25f04c393461059" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Class&lt;/code&gt; objects which describe the immediate base classes of the class being described. Classes which are named as superclasses but which are not discoverable by &lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt;&lt;code&gt;readmodule_ex()&lt;/code&gt;&lt;/a&gt; are listed as a string with the class name instead of as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="translated">一 &lt;code&gt;Class&lt;/code&gt; 对象，它们描述了所描述类的直接基类。被命名为超类但无法通过&lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt; &lt;code&gt;readmodule_ex()&lt;/code&gt; &lt;/a&gt;发现的类将作为带有类名称的字符串列出，而不是作为 &lt;code&gt;Class&lt;/code&gt; 对象列出。</target>
        </trans-unit>
        <trans-unit id="47e533d8c9734517f922eaa86b233a289db98c40" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for each weekday. The default class list is:</source>
          <target state="translated">每个工作日使用的CSS类列表。默认的类列表是:</target>
        </trans-unit>
        <trans-unit id="f1a68bfed08eae06f51e410f31837e77785239f9" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for weekday names in the header row. The default is the same as &lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt;&lt;code&gt;cssclasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标头行中用于工作日名称的CSS类列表。默认值与&lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt; &lt;code&gt;cssclasses&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="87a9c1cff0e92a561ec91ae2846827451ae8540a" translate="yes" xml:space="preserve">
          <source>A list of available password hashing algorithms, as &lt;code&gt;crypt.METHOD_*&lt;/code&gt; objects. This list is sorted from strongest to weakest.</source>
          <target state="translated">可用密码哈希算法的列表，如 &lt;code&gt;crypt.METHOD_*&lt;/code&gt; 对象。该列表从最强到最弱排序。</target>
        </trans-unit>
        <trans-unit id="d4f1daea5804e5e781af546c944a5553086ec691" translate="yes" xml:space="preserve">
          <source>A list of callables that take a path argument to try to create a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the path. If a finder can be created, it is to be returned by the callable, else raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">带有路径参数以尝试为路径创建&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;查找器&lt;/a&gt;的可调用项列表。如果可以创建查找程序，则该查找程序将由调用方返回，否则引发&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ef2e26a4d2864c665752fb7ac9f1799ea126f47" translate="yes" xml:space="preserve">
          <source>A list of callables that take a path argument to try to create a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the path. If a finder can be created, it is to be returned by the callable, else raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa433c04e75fc5d0459fb3bb364f4a060cf42ad" translate="yes" xml:space="preserve">
          <source>A list of callbacks that will be invoked by the garbage collector before and after collection. The callbacks will be called with two arguments, &lt;em&gt;phase&lt;/em&gt; and &lt;em&gt;info&lt;/em&gt;.</source>
          <target state="translated">垃圾回收器在回收前后将调用的回调列表。回调将使用两个参数&lt;em&gt;phase&lt;/em&gt;和&lt;em&gt;info&lt;/em&gt;进行调用。</target>
        </trans-unit>
        <trans-unit id="f2afc2ea3d64112d083cf30feb15db3adce93b83" translate="yes" xml:space="preserve">
          <source>A list of column identifiers (either symbolic or integer indices) specifying which data columns are displayed and the order in which they appear, or the string &amp;ldquo;#all&amp;rdquo;.</source>
          <target state="translated">列标识符（符号或整数索引）的列表，用于指定显示哪些数据列及其出现的顺序，或字符串&amp;ldquo; #all&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7eff5051ae865a63b9215b5c89488de87ae79f0b" translate="yes" xml:space="preserve">
          <source>A list of column identifiers, specifying the number of columns and their names.</source>
          <target state="translated">列的标识符列表,指定列的数量和名称。</target>
        </trans-unit>
        <trans-unit id="d767335b2be7662adb8adfd8712db1b5ba4f4fbe" translate="yes" xml:space="preserve">
          <source>A list of functions performing the individual tests. Each function takes two arguments: the byte-stream and an open file-like object. When &lt;a href=&quot;#imghdr.what&quot;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt; is called with a byte-stream, the file-like object will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">执行各个测试的功能列表。每个函数都有两个参数：字节流和一个类似文件的打开对象。当使用字节流调用&lt;a href=&quot;#imghdr.what&quot;&gt; &lt;code&gt;what()&lt;/code&gt; 时&lt;/a&gt;，类似文件的对象将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90bcc915bd04cdb632928857939a6c56be976e99" translate="yes" xml:space="preserve">
          <source>A list of nodes contained within this node. This is a read-only attribute.</source>
          <target state="translated">这个节点中包含的节点列表。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="3950e8dfdad0ea53153e00b8e9e9d18c3a29eec5" translate="yes" xml:space="preserve">
          <source>A list of objects which the collector found to be unreachable but could not be freed (uncollectable objects). Starting with Python 3.4, this list should be empty most of the time, except when using instances of C extension types with a non-&lt;code&gt;NULL&lt;/code&gt;&lt;code&gt;tp_del&lt;/code&gt; slot.</source>
          <target state="translated">收集器发现无法访问但无法释放的对象列表（无法收集的对象）。从Python 3.4开始，除了使用带有非 &lt;code&gt;NULL&lt;/code&gt; &lt;code&gt;tp_del&lt;/code&gt; 插槽的C扩展类型的实例时，此列表大多数时候应该为空。</target>
        </trans-unit>
        <trans-unit id="3bc6fc267d7341a3dcca08f8f142ac83a4167a96" translate="yes" xml:space="preserve">
          <source>A list of prefixes for site-packages directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edcb62be232dfd25220d722b6ae22369868ca48" translate="yes" xml:space="preserve">
          <source>A list of queued input lines. The cmdqueue list is checked in &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; when new input is needed; if it is nonempty, its elements will be processed in order, as if entered at the prompt.</source>
          <target state="translated">排队的输入行列表。需要新输入时，将在&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; 中&lt;/a&gt;检查cmdqueue列表。如果它是非空的，则将按顺序处理其元素，就像在提示符下输入一样。</target>
        </trans-unit>
        <trans-unit id="fb8177ae3293211d97584d172648ced9f6fff7c8" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for non-optimized bytecode modules.</source>
          <target state="translated">代表非优化的字节码模块的文件后缀的字符串列表。</target>
        </trans-unit>
        <trans-unit id="3901675df8d6b190ed77ea1e703d8525bebca340" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for optimized bytecode modules.</source>
          <target state="translated">代表优化的字节码模块的文件后缀的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a653aca2c57d0c3018c089c4391cde970a1bbfd7" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for bytecode modules (including the leading dot).</source>
          <target state="translated">代表字节码模块认可的文件后缀的字符串列表(包括前导点)。</target>
        </trans-unit>
        <trans-unit id="e918f4be66d93295cae4c211f62265b0072c2822" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for extension modules.</source>
          <target state="translated">代表公认的扩展模块文件后缀的字符串列表。</target>
        </trans-unit>
        <trans-unit id="165229fe605da7021efe8ebd3919626a177ba5a3" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for source modules.</source>
          <target state="translated">代表源模块认可的文件后缀的字符串列表。</target>
        </trans-unit>
        <trans-unit id="2cf2baab931f8fd28ffb46163df67eb66c87370c" translate="yes" xml:space="preserve">
          <source>A list of strings specifying the search path within a package. This attribute is not set on modules.</source>
          <target state="translated">指定包内搜索路径的字符串列表。这个属性不在模块上设置。</target>
        </trans-unit>
        <trans-unit id="36c4a5205fd3c16296e139d621087e8e76a326e3" translate="yes" xml:space="preserve">
          <source>A list of strings that specifies the search path for modules. Initialized from the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;, plus an installation-dependent default.</source>
          <target state="translated">字符串列表，用于指定模块的搜索路径。从环境变量&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;初始化，再加上与安装有关的默认值。</target>
        </trans-unit>
        <trans-unit id="11e214fc1bbf3dd50b6a799acce78790260b5aeb" translate="yes" xml:space="preserve">
          <source>A list of strings that specifies the search path for modules. Initialized from the environment variable &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-21&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;, plus an installation-dependent default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38561310e8e0218b9a575b157f0c75333b56def" translate="yes" xml:space="preserve">
          <source>A list of tags associated with this item.</source>
          <target state="translated">与此项目相关的标签列表。</target>
        </trans-unit>
        <trans-unit id="a379ac6f7bfa199dd4ac1bbe2caea169d4e2a31f" translate="yes" xml:space="preserve">
          <source>A list of the non-fatal errors encountered while loading tests. Not reset by the loader at any point. Fatal errors are signalled by the relevant a method raising an exception to the caller. Non-fatal errors are also indicated by a synthetic test that will raise the original error when run.</source>
          <target state="translated">加载测试时遇到的非致命性错误的列表。在任何时候都不会被加载器重置。致命的错误由相关的a方法向调用者引发异常而发出信号。非致命性错误也会由一个合成测试来指示,该测试在运行时将引发原始错误。</target>
        </trans-unit>
        <trans-unit id="2b1ad6875b827765bc4d0e85d4c9d9f95c0e168f" translate="yes" xml:space="preserve">
          <source>A list of the path&amp;rsquo;s file extensions:</source>
          <target state="translated">路径的文件扩展名列表：</target>
        </trans-unit>
        <trans-unit id="ee22e51ecfc4901c8fc7a981cfa5f560d71a4cb9" translate="yes" xml:space="preserve">
          <source>A list or tuple. &lt;code&gt;elts&lt;/code&gt; holds a list of nodes representing the elements. &lt;code&gt;ctx&lt;/code&gt; is &lt;a href=&quot;#ast.Store&quot;&gt;&lt;code&gt;Store&lt;/code&gt;&lt;/a&gt; if the container is an assignment target (i.e. &lt;code&gt;(x,y)=something&lt;/code&gt;), and &lt;a href=&quot;#ast.Load&quot;&gt;&lt;code&gt;Load&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d28cdab6aac704918e38261cdf6a53a6fb7875" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;'%'&lt;/code&gt; character.</source>
          <target state="translated">文字 &lt;code&gt;'%'&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="f45f3263fd1db9d34d0d8644f2dd892d64f4f4b5" translate="yes" xml:space="preserve">
          <source>A long-running calculation implemented purely in C (such as regular expression matching on a large body of text) may run uninterrupted for an arbitrary amount of time, regardless of any signals received. The Python signal handlers will be called when the calculation finishes.</source>
          <target state="translated">一个纯粹用 C 语言实现的长期运行的计算 (例如在大量文本上进行正则表达式匹配),可以不间断地运行任意时间,而不管是否收到任何信号。当计算结束时,Python 信号处理程序将被调用。</target>
        </trans-unit>
        <trans-unit id="cde11ed69a30e89ec49d6911501d20641f2ba597" translate="yes" xml:space="preserve">
          <source>A lot of the work, such as parsing the request, is done by the base class &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt;&lt;code&gt;do_HEAD()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">基类&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;完成了很多工作，例如解析请求。此类实现&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt; &lt;code&gt;do_HEAD()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="d1ae909d89ab42bf44a513d624eb1ef523783bbe" translate="yes" xml:space="preserve">
          <source>A mailbox, which may be inspected and modified.</source>
          <target state="translated">邮箱,可以进行检查和修改。</target>
        </trans-unit>
        <trans-unit id="f690a6cfc5ed4849083abceaf9fb872dd479f2d4" translate="yes" xml:space="preserve">
          <source>A manager object returned by &lt;code&gt;Manager()&lt;/code&gt; controls a server process which holds Python objects and allows other processes to manipulate them using proxies.</source>
          <target state="translated">由 &lt;code&gt;Manager()&lt;/code&gt; 返回的管理器对象控制着一个服务器进程，该进程持有Python对象，并允许其他进程使用代理对其进行操作。</target>
        </trans-unit>
        <trans-unit id="5acd53cfe7556a265e24f00273578e1e62cced28" translate="yes" xml:space="preserve">
          <source>A manager returned by &lt;code&gt;Manager()&lt;/code&gt; will support types &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt;&lt;code&gt;BoundedSemaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Value&quot;&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="translated">由 &lt;code&gt;Manager()&lt;/code&gt; 返回的管理器将支持类型&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt; &lt;code&gt;BoundedSemaphore&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Value&quot;&gt; &lt;code&gt;Value&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#multiprocessing.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="2360f8e6d7dd3571578211ddf621c1aaf733a19d" translate="yes" xml:space="preserve">
          <source>A mapping of &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVars&lt;/code&gt;&lt;/a&gt; to their values.</source>
          <target state="translated">&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVars&lt;/code&gt; &lt;/a&gt;与其值的映射。</target>
        </trans-unit>
        <trans-unit id="b196921d2c5d1abc5a5afde9b13792567f7149de" translate="yes" xml:space="preserve">
          <source>A marker object used by &lt;code&gt;Token.old_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token.old_value&lt;/code&gt; 使用的标记对象。</target>
        </trans-unit>
        <trans-unit id="691da017d29e7d257f6643136c76ae9eab8b4630" translate="yes" xml:space="preserve">
          <source>A memory buffer that can be used to pass data between Python and an SSL protocol instance.</source>
          <target state="translated">一个可以用来在Python和SSL协议实例之间传递数据的内存缓冲区。</target>
        </trans-unit>
        <trans-unit id="dcfbafa8ff3d1ab45e2f76a7aee96de1f4885c99" translate="yes" xml:space="preserve">
          <source>A memory-mapped file is created by the &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; constructor, which is different on Unix and on Windows. In either case you must provide a file descriptor for a file opened for update. If you wish to map an existing Python file object, use its &lt;code&gt;fileno()&lt;/code&gt; method to obtain the correct value for the &lt;em&gt;fileno&lt;/em&gt; parameter. Otherwise, you can open the file using the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function, which returns a file descriptor directly (the file still needs to be closed when done).</source>
          <target state="translated">内存映射文件由&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt;构造函数创建，在Unix和Windows上不同。无论哪种情况，都必须为打开的文件提供文件描述符以进行更新。如果要映射现有的Python文件对象，请使用其 &lt;code&gt;fileno()&lt;/code&gt; 方法获取&lt;em&gt;fileno&lt;/em&gt;参数的正确值。否则，您可以使用&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;函数打开文件，该函数直接返回文件描述符（完成后仍需要关闭文件）。</target>
        </trans-unit>
        <trans-unit id="4e07ad766453ae1f5c12fbab0efd96fbce9a5d6b" translate="yes" xml:space="preserve">
          <source>A memoryview and a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; exporter are equal if their shapes are equivalent and if all corresponding values are equal when the operands&amp;rsquo; respective format codes are interpreted using &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">如果使用&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;语法解释操作数的相应格式代码，则如果它们的形状相等并且所有对应的值都相等，则memoryview和&lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt;导出程序将相等。</target>
        </trans-unit>
        <trans-unit id="0505188cd402129bb7a1ceab0c1f8c415c35ac5c" translate="yes" xml:space="preserve">
          <source>A memoryview of contents of the shared memory block.</source>
          <target state="translated">共享内存块内容的内存视图。</target>
        </trans-unit>
        <trans-unit id="bbf17a083c2ede8f6b0db7056b90b9f1617ddecf" translate="yes" xml:space="preserve">
          <source>A message is typically moved from &lt;code&gt;new&lt;/code&gt; to &lt;code&gt;cur&lt;/code&gt; after its mailbox has been accessed, whether or not the message is has been read. A message &lt;code&gt;msg&lt;/code&gt; has been read if &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">通常，在已访问邮箱之后，无论是否已阅读该邮件，该邮件都将从 &lt;code&gt;new&lt;/code&gt; 邮件移动到 &lt;code&gt;cur&lt;/code&gt; 邮件。如果 &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则已读取消息 &lt;code&gt;msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="452a8fedc6a4cfd70d2adcb1b29d976bbeb804dc" translate="yes" xml:space="preserve">
          <source>A message with Babyl-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">带有Babyl特定行为的消息。参数&lt;em&gt;message&lt;/em&gt;具有与&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;构造函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="ac149633a67c1c349439779dfb1ef3d4e3b0e937" translate="yes" xml:space="preserve">
          <source>A message with MH-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">带有MH特定行为的消息。参数&lt;em&gt;message&lt;/em&gt;具有与&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;构造函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="cef7580ce921c85b7e519a48bc0f3cd23bf7607c" translate="yes" xml:space="preserve">
          <source>A message with MMDF-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">带有MMDF特定行为的消息。参数&lt;em&gt;message&lt;/em&gt;具有与&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;构造函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="81468ce3b45d6d7e99a68708e9ac13d9a23d3a83" translate="yes" xml:space="preserve">
          <source>A message with Maildir-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">带有Maildir特定行为的消息。参数&lt;em&gt;message&lt;/em&gt;具有与&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;构造函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="ca526acd0b34062c5d1268d50cde292996ba3b25" translate="yes" xml:space="preserve">
          <source>A message with mbox-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">具有特定于mbox行为的消息。参数&lt;em&gt;message&lt;/em&gt;具有与&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;构造函数相同的含义。</target>
        </trans-unit>
        <trans-unit id="7f0e485226b36c41138ec6944e1b8e8901ec04f2" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;Turtle.filling()&lt;/code&gt; has been added. It returns a boolean value: &lt;code&gt;True&lt;/code&gt; if a filling process is under way, &lt;code&gt;False&lt;/code&gt; otherwise. This behaviour corresponds to a &lt;code&gt;fill()&lt;/code&gt; call without arguments in Python 2.6.</source>
          <target state="translated">一种方法 &lt;code&gt;Turtle.filling()&lt;/code&gt; 已添加。它返回一个布尔值：如果正在执行填充过程，则为 &lt;code&gt;True&lt;/code&gt; ，否则为 &lt;code&gt;False&lt;/code&gt; 。此行为对应于Python 2.6中不带参数的 &lt;code&gt;fill()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="fe7d757aac257898e222238cb09c16c1c5cda2df" translate="yes" xml:space="preserve">
          <source>A method for invalidating the cache on the &lt;code&gt;ZoneInfo&lt;/code&gt; class. If no arguments are passed, all caches are invalidated and the next call to the primary constructor for each key will return a new instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81f8acd06e4d19e21298af0b2eca19918eec6c0" translate="yes" xml:space="preserve">
          <source>A method that returns the module object to use when importing a module. This method may return &lt;code&gt;None&lt;/code&gt;, indicating that default module creation semantics should take place.</source>
          <target state="translated">一种返回模块对象以在导入模块时使用的方法。此方法可能返回 &lt;code&gt;None&lt;/code&gt; ，指示默认模块创建语义应该发生。</target>
        </trans-unit>
        <trans-unit id="d11fab06ce0f5cc44bfa0f8d64053434db561c11" translate="yes" xml:space="preserve">
          <source>A millisecond is converted to 1000 microseconds.</source>
          <target state="translated">一毫秒换算为1000微秒。</target>
        </trans-unit>
        <trans-unit id="14694e387827ee5dbdefea0d931e26463c3f8af5" translate="yes" xml:space="preserve">
          <source>A minute is converted to 60 seconds.</source>
          <target state="translated">一分钟换算为60秒。</target>
        </trans-unit>
        <trans-unit id="88a95c4ff9a21fc5643c68a07d0fcb56208d9afc" translate="yes" xml:space="preserve">
          <source>A mock intended to be used as a property, or other descriptor, on a class. &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; methods so you can specify a return value when it is fetched.</source>
          <target state="translated">拟用作类的属性或其他描述符的模拟。&lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt;提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;方法，因此您可以在获取返回值时指定它。</target>
        </trans-unit>
        <trans-unit id="f9dc8264a0898bec8dca67eef59ff050ee07574c" translate="yes" xml:space="preserve">
          <source>A mock intended to be used as a property, or other descriptor, on a class. &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; methods so you can specify a return value when it is fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197f9ad683c388bd841158b51e7273e923b68225" translate="yes" xml:space="preserve">
          <source>A moderately complicated example:</source>
          <target state="translated">一个适度复杂的例子。</target>
        </trans-unit>
        <trans-unit id="5fbdaa31ef1d3360856b509831015ce58c497ad4" translate="yes" xml:space="preserve">
          <source>A module can discover whether or not it is running in the main scope by checking its own &lt;code&gt;__name__&lt;/code&gt;, which allows a common idiom for conditionally executing code in a module when it is run as a script or with &lt;code&gt;python
-m&lt;/code&gt; but not when it is imported:</source>
          <target state="translated">模块可以通过检查其自己的 &lt;code&gt;__name__&lt;/code&gt; 来发现它是否在主作用域中运行，这允许使用通用习语在模块中作为脚本或 &lt;code&gt;python -m&lt;/code&gt; 运行时有条件地执行模块中的代码，但在导入时则不能：</target>
        </trans-unit>
        <trans-unit id="9444c1785a75547c005580f49d28d47a17706636" translate="yes" xml:space="preserve">
          <source>A module to generate message authentication codes using hashes.</source>
          <target state="translated">使用哈希值生成消息验证码的模块。</target>
        </trans-unit>
        <trans-unit id="25b564dedd229417c2f008befd0d706d5d1c3d1c" translate="yes" xml:space="preserve">
          <source>A monograph (using Tcl terminology) about differences typically encountered when moving applications to use the new widgets.</source>
          <target state="translated">一本专著(使用Tcl术语),介绍在移动应用程序以使用新的小组件时通常会遇到的差异。</target>
        </trans-unit>
        <trans-unit id="2cb0b17b5fe49d923ef10619bd2d761e2dba052d" translate="yes" xml:space="preserve">
          <source>A more convenient approach is to use the methods &lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt;&lt;code&gt;getfirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt;&lt;code&gt;getlist()&lt;/code&gt;&lt;/a&gt; provided by this higher level interface.</source>
          <target state="translated">一种更方便的方法是使用此更高级别的接口提供的方法&lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt; &lt;code&gt;getfirst()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt; &lt;code&gt;getlist()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f606715ea58bd20affcb325cea977c8dc34c9e61" translate="yes" xml:space="preserve">
          <source>A more powerful form of &lt;em&gt;spec&lt;/em&gt; is &lt;em&gt;autospec&lt;/em&gt;. If you set &lt;code&gt;autospec=True&lt;/code&gt; then the mock will be created with a spec from the object being replaced. All attributes of the mock will also have the spec of the corresponding attribute of the object being replaced. Methods and functions being mocked will have their arguments checked and will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are called with the wrong signature. For mocks replacing a class, their return value (the &amp;lsquo;instance&amp;rsquo;) will have the same spec as the class. See the &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccing&lt;/a&gt;.</source>
          <target state="translated">更强大的&lt;em&gt;规范&lt;/em&gt;形式是&lt;em&gt;autospec&lt;/em&gt;。如果设置 &lt;code&gt;autospec=True&lt;/code&gt; ，则将使用替换对象的规范创建模拟。模拟的所有属性还将具有要替换对象的相应属性的规范。被模拟的方法和函数将检查其参数，如果使用错误的签名调用它们，则会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。对于替换类的模拟，其返回值（&amp;ldquo;实例&amp;rdquo;）将与该类具有相同的规格。请参见&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;函数和&lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccing&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5111e118ade6d2bc5c8e1c77f9aa6dc8faa44c02" translate="yes" xml:space="preserve">
          <source>A more realistic example would look like this:</source>
          <target state="translated">一个比较现实的例子是这样的。</target>
        </trans-unit>
        <trans-unit id="9a66936ddd1b236a8e403c390cda131ea3105877" translate="yes" xml:space="preserve">
          <source>A more robust alternative can be to define a finalizer which only references the specific functions and objects that it needs, rather than having access to the full state of the object:</source>
          <target state="translated">一个更稳健的替代方案可以是定义一个定标器,它只引用它所需要的特定函数和对象,而不是访问对象的全部状态。</target>
        </trans-unit>
        <trans-unit id="dc61502b727e90ac4866b9d814e9fc1fc0b5f529" translate="yes" xml:space="preserve">
          <source>A more serious problem is that it is common for instance attributes to be created in the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method and not to exist on the class at all. &lt;em&gt;autospec&lt;/em&gt; can&amp;rsquo;t know about any dynamically created attributes and restricts the api to visible attributes.</source>
          <target state="translated">一个更严重的问题是，实例属性通常是在&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法中创建的，而根本不存在于类中。&lt;em&gt;autospec&lt;/em&gt;无法知道任何动态创建的属性，并将api限制为可见属性。</target>
        </trans-unit>
        <trans-unit id="022217af59a7d8158b8db514a2ff8d38ae0aef37" translate="yes" xml:space="preserve">
          <source>A more serious problem is that it is common for instance attributes to be created in the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method and not to exist on the class at all. &lt;em&gt;autospec&lt;/em&gt; can&amp;rsquo;t know about any dynamically created attributes and restricts the api to visible attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c30e10b4c45f4fdcf93fef2be90b15a755a678" translate="yes" xml:space="preserve">
          <source>A multi-line statement may be given by specifying each line as a separate statement argument; indented lines are possible by enclosing an argument in quotes and using leading spaces. Multiple &lt;a href=&quot;#cmdoption-timeit-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; options are treated similarly.</source>
          <target state="translated">可以通过将每一行指定为单独的语句参数来给出多行语句；通过将引号括在引号中并使用前导空格，可以使行缩进。多个&lt;a href=&quot;#cmdoption-timeit-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;选项的处理方式类似。</target>
        </trans-unit>
        <trans-unit id="e22b35b571387aaed16a131c2e41b7861c259760" translate="yes" xml:space="preserve">
          <source>A mutable mapping of parameters&amp;rsquo; names to arguments&amp;rsquo; values. Contains only explicitly bound arguments. Changes in &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; will reflect in &lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt;&lt;code&gt;args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt;&lt;code&gt;kwargs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e6abbde7b8d36913a73085a08d7bdc4de74dfb" translate="yes" xml:space="preserve">
          <source>A mutex lock.</source>
          <target state="translated">一个mutex锁。</target>
        </trans-unit>
        <trans-unit id="078db6dab94291f0a68718c0a445aadb8d88ed56" translate="yes" xml:space="preserve">
          <source>A name which is linked to the option value. If specified, the value of the progress bar is automatically set to the value of this name whenever the latter is modified.</source>
          <target state="translated">与选项值相关联的名称。如果指定,每当进度条被修改时,进度条的值就会自动设置为这个名称的值。</target>
        </trans-unit>
        <trans-unit id="6794d9e2505d3f2e5dff1c6b084b0d32e0259383" translate="yes" xml:space="preserve">
          <source>A named expression. This AST node is produced by the assignment expressions operator (also known as the walrus operator). As opposed to the &lt;a href=&quot;#ast.Assign&quot;&gt;&lt;code&gt;Assign&lt;/code&gt;&lt;/a&gt; node in which the first argument can be multiple nodes, in this case both &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; must be single nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c48426bea22866b8115740a6c2a7c42075e62c" translate="yes" xml:space="preserve">
          <source>A named tuple containing the three components of the ncurses library version: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, and &lt;em&gt;patch&lt;/em&gt;. All values are integers. The components can also be accessed by name, so &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; is equivalent to &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; and so on.</source>
          <target state="translated">包含ncurses库版本的三个组成部分的命名元组：&lt;em&gt;major&lt;/em&gt;，&lt;em&gt;minor&lt;/em&gt;和&lt;em&gt;patch&lt;/em&gt;。所有值都是整数。也可以通过名称来访问组件，因此 &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; 等效于 &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="bc4f58d7428fdbe37d30d028fe13d12d2180f7d6" translate="yes" xml:space="preserve">
          <source>A namedtuple that holds a brief summary of a module&amp;rsquo;s info.</source>
          <target state="translated">一个namedtuple，其中包含模块信息的简短摘要。</target>
        </trans-unit>
        <trans-unit id="72158d4426db39e0e4d103c3538715b0ee176f1c" translate="yes" xml:space="preserve">
          <source>A namespace for a function or method. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">函数或方法的名称空间。此类继承&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0311cf0abe88a0934a46b90b52373f3304204a2b" translate="yes" xml:space="preserve">
          <source>A namespace object has no public methods, but does have writable attributes. Its representation shows the values of its attributes.</source>
          <target state="translated">命名空间对象没有公共方法,但有可写属性。它的表示方式显示了它的属性值。</target>
        </trans-unit>
        <trans-unit id="edbf524e185c69846a3a4abd549e56f7ebc4b0c0" translate="yes" xml:space="preserve">
          <source>A namespace of a class. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类的名称空间。此类继承&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2a64660a5b30d67efe5fed367964bb0e3c6f537" translate="yes" xml:space="preserve">
          <source>A namespace table for a block. The constructor is not public.</source>
          <target state="translated">一个块的命名空间表。构造函数不公开。</target>
        </trans-unit>
        <trans-unit id="fa2eecff8d86240af243f0bd4af31ae2aa5fea1b" translate="yes" xml:space="preserve">
          <source>A negative value &lt;code&gt;-N&lt;/code&gt; indicates that the child was terminated by signal &lt;code&gt;N&lt;/code&gt; (POSIX only).</source>
          <target state="translated">负值 &lt;code&gt;-N&lt;/code&gt; 表示该子级已由信号 &lt;code&gt;N&lt;/code&gt; 终止（仅POSIX）。</target>
        </trans-unit>
        <trans-unit id="85390c873308f954877a6b491b2ffd8bd25849d2" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class must have one base Enum class, up to one concrete data type, and as many &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;-based mixin classes as needed. The order of these base classes is:</source>
          <target state="translated">一个新的&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;类必须具有一个基本的Enum类，最多一种具体的数据类型以及所需的尽可能多的基于&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;的mixin类。这些基类的顺序为：</target>
        </trans-unit>
        <trans-unit id="cc186fde8acf9a6ebb42e1a3ac6b6d13c0924a62" translate="yes" xml:space="preserve">
          <source>A new array whose items are restricted by &lt;em&gt;typecode&lt;/em&gt;, and initialized from the optional &lt;em&gt;initializer&lt;/em&gt; value, which must be a list, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or iterable over elements of the appropriate type.</source>
          <target state="translated">一个新数组，其项目受&lt;em&gt;typecode&lt;/em&gt;限制，并从可选的&lt;em&gt;初始&lt;/em&gt;值设定项值进行初始化，该&lt;em&gt;初始&lt;/em&gt;值必须是列表，类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;，或者可以在适当类型的元素上进行迭代。</target>
        </trans-unit>
        <trans-unit id="6a3007c327ed2a72770ff0fc78595dbb8513a178" translate="yes" xml:space="preserve">
          <source>A new array whose items are restricted by &lt;em&gt;typecode&lt;/em&gt;, and initialized from the optional &lt;em&gt;initializer&lt;/em&gt; value, which must be a list, a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or iterable over elements of the appropriate type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81c36f53fb29db71f41ab907332355f7d182eda" translate="yes" xml:space="preserve">
          <source>A nice feature of this sort is that you can efficiently insert new items while the sort is going on, provided that the inserted items are not &amp;ldquo;better&amp;rdquo; than the last 0&amp;rsquo;th element you extracted. This is especially useful in simulation contexts, where the tree holds all incoming events, and the &amp;ldquo;win&amp;rdquo; condition means the smallest scheduled time. When an event schedules other events for execution, they are scheduled into the future, so they can easily go into the heap. So, a heap is a good structure for implementing schedulers (this is what I used for my MIDI sequencer :-).</source>
          <target state="translated">这种分类的一个不错的功能是，只要插入的项目不比您提取的最后一个第0个元素&amp;ldquo;好&amp;rdquo;，就可以在进行分类时有效地插入新项目。这在仿真上下文中特别有用，在仿真上下文中，树包含所有传入事件，并且&amp;ldquo;获胜&amp;rdquo;条件意味着最小的计划时间。当一个事件安排其他事件执行时，它们被安排在将来，因此可以轻松地进入堆。因此，堆是实现调度程序的良好结构（这是我在MIDI音序器中使用的:-）。</target>
        </trans-unit>
        <trans-unit id="9e3b6ed28c8d38433a40b858b74030f4808ae596" translate="yes" xml:space="preserve">
          <source>A nice selection of exceptions is defined as well:</source>
          <target state="translated">还定义了一个不错的例外选择。</target>
        </trans-unit>
        <trans-unit id="7908e5fb359ed5ac5ef0d2533eb509744f0641d3" translate="yes" xml:space="preserve">
          <source>A node visitor base class that walks the abstract syntax tree and calls a visitor function for every node found. This function may return a value which is forwarded by the &lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt;&lt;code&gt;visit()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一个节点访问者基类，它遍历抽象语法树并为找到的每个节点调用一个访问者函数。该函数可以返回由&lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt; &lt;code&gt;visit()&lt;/code&gt; &lt;/a&gt;方法转发的值。</target>
        </trans-unit>
        <trans-unit id="bcff5c6e5fa686fae2d5599c1b2e80eb183fd626" translate="yes" xml:space="preserve">
          <source>A non-ASCII character encodable by &lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;os#os.fsencode&quot;&gt; &lt;code&gt;os.fsencode()&lt;/code&gt; &lt;/a&gt;可编码的非ASCII字符。</target>
        </trans-unit>
        <trans-unit id="9428ac03bb4a2f6c9cf42be05b489381aaa0a0a3" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; 的&lt;/a&gt;不可调用版本。</target>
        </trans-unit>
        <trans-unit id="896479390810c1db85db783aa18d9d0a12993c66" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. The constructor parameters have the same meaning of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;em&gt;return_value&lt;/em&gt; and &lt;em&gt;side_effect&lt;/em&gt; which have no meaning on a non-callable mock.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; 的&lt;/a&gt;不可调用版本。构造函数参数具有与&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;相同的含义，但&lt;em&gt;return_value&lt;/em&gt;和&lt;em&gt;side_effect&lt;/em&gt;除外，它们对不可调用的模拟没有意义。</target>
        </trans-unit>
        <trans-unit id="10ff4f7d10e3a93a3d1a37ab022e45964047c42b" translate="yes" xml:space="preserve">
          <source>A non-capturing version of regular parentheses. Matches whatever regular expression is inside the parentheses, but the substring matched by the group &lt;em&gt;cannot&lt;/em&gt; be retrieved after performing a match or referenced later in the pattern.</source>
          <target state="translated">非捕获版本的常规括号。匹配括号内的任何正则表达式，但执行匹配后&lt;em&gt;无法&lt;/em&gt;检索到由组匹配的子字符串，或稍后在模式中引用该子字符串。</target>
        </trans-unit>
        <trans-unit id="b6fab50bbf4b5f5cc024237fe4be2e580f495061" translate="yes" xml:space="preserve">
          <source>A non-existent handler id found during an incremental call.</source>
          <target state="translated">在增量调用中发现一个不存在的处理程序id。</target>
        </trans-unit>
        <trans-unit id="ff564abff91c1ddf39b73322568dc07eb6cdddc5" translate="yes" xml:space="preserve">
          <source>A non-recursive lock object: a close analog of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt;. Once a process or thread has acquired a lock, subsequent attempts to acquire it from any process or thread will block until it is released; any process or thread may release it. The concepts and behaviors of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; as it applies to threads are replicated here in &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;multiprocessing.Lock&lt;/code&gt;&lt;/a&gt; as it applies to either processes or threads, except as noted.</source>
          <target state="translated">一个非递归锁定对象：&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;的紧密相似。一旦进程或线程获得了锁，随后从任何进程或线程获取锁的尝试将阻塞，直到释放为止。任何进程或线程都可能释放它。除非另有说明，否则适用于线程的&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;的概念和行为将在&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;multiprocessing.Lock&lt;/code&gt; &lt;/a&gt;中复制，此处适用于进程或线程。</target>
        </trans-unit>
        <trans-unit id="10b063540ea72d17ad3a65c6b8fa5e5506f3d45b" translate="yes" xml:space="preserve">
          <source>A normal build &amp;amp; test does not run into this situation but it can happen when trying to run the standard library test suite from an interpreter that doesn&amp;rsquo;t have an obvious home with Python&amp;rsquo;s current home finding logic.</source>
          <target state="translated">正常的构建和测试不会遇到这种情况，但是当尝试从解释器运行标准库测试套件时，可能会发生这种情况，而该解释器并没有明显的Python当前归位逻辑。</target>
        </trans-unit>
        <trans-unit id="f21e999a31cb519fda4759011f3f8f4601461947" translate="yes" xml:space="preserve">
          <source>A note about &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;: this exception may occur elsewhere in this code, and may not always be caught. The caller should be prepared to deal with it.</source>
          <target state="translated">关于&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;的注释：此异常可能在此代码的其他地方发生，并且可能并不总是被捕获。呼叫者应准备好处理它。</target>
        </trans-unit>
        <trans-unit id="6118da4bdf7846158dea6e9addeee205b10e624b" translate="yes" xml:space="preserve">
          <source>A note on branch cuts: They are curves along which the given function fails to be continuous. They are a necessary feature of many complex functions. It is assumed that if you need to compute with complex functions, you will understand about branch cuts. Consult almost any (not too elementary) book on complex variables for enlightenment. For information of the proper choice of branch cuts for numerical purposes, a good reference should be the following:</source>
          <target state="translated">关于分支切割的说明。它们是给定函数不连续的曲线。它们是许多复函数的必要特征。假设如果你需要用复变函数进行计算,你就会了解分支切割。几乎可以参考任何一本关于复变函数的书籍(不是太初级)来获得启发。关于如何正确选择数值中的分支切割,以下是一个很好的参考。</target>
        </trans-unit>
        <trans-unit id="8ee90f29803eb8229a07515ffa9d573714dc7839" translate="yes" xml:space="preserve">
          <source>A null-terminated string.</source>
          <target state="translated">一个以空为结束的字符串。</target>
        </trans-unit>
        <trans-unit id="c13366fad5520b371df7f0cb744d4b882a5ce6dd" translate="yes" xml:space="preserve">
          <source>A number of Unix commands allow the user to intermix optional arguments with positional arguments. The &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt;&lt;code&gt;parse_known_intermixed_args()&lt;/code&gt;&lt;/a&gt; methods support this parsing style.</source>
          <target state="translated">许多Unix命令允许用户将可选参数与位置参数混合在一起。该&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt; &lt;code&gt;parse_known_intermixed_args()&lt;/code&gt; &lt;/a&gt;方法支持这项分析的风格。</target>
        </trans-unit>
        <trans-unit id="5905a2ee45fdf4d45451104b77e07c4287f696a0" translate="yes" xml:space="preserve">
          <source>A number of alterations are also made to the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; module. Firstly, &lt;code&gt;sys.path&lt;/code&gt; may be altered as described above. &lt;code&gt;sys.argv[0]&lt;/code&gt; is updated with the value of &lt;code&gt;file_path&lt;/code&gt; and &lt;code&gt;sys.modules[__name__]&lt;/code&gt; is updated with a temporary module object for the module being executed. All modifications to items in &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; are reverted before the function returns.</source>
          <target state="translated">&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;模块也进行了许多更改。首先，可以如上所述更改 &lt;code&gt;sys.path&lt;/code&gt; 。 &lt;code&gt;sys.argv[0]&lt;/code&gt; 与值更新 &lt;code&gt;file_path&lt;/code&gt; 和 &lt;code&gt;sys.modules[__name__]&lt;/code&gt; 与该模块的模块临时对象更新被执行。函数返回之前，将还原对&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;中所有项目的修改。</target>
        </trans-unit>
        <trans-unit id="7aaac470309a93d5303ae1989bb54d18464aaff9" translate="yes" xml:space="preserve">
          <source>A number of browser types are predefined. This table gives the type names that may be passed to the &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function and the corresponding instantiations for the controller classes, all defined in this module.</source>
          <target state="translated">预定义了多种浏览器类型。该表提供了可以传递给&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;函数的类型名称以及控制器类的相应实例化，所有这些都在此模块中定义。</target>
        </trans-unit>
        <trans-unit id="5b9b4dafe3106a819531ac204c06e56766477b2e" translate="yes" xml:space="preserve">
          <source>A number of option flags control various aspects of doctest&amp;rsquo;s behavior. Symbolic names for the flags are supplied as module constants, which can be &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; together and passed to various functions. The names can also be used in &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt;, and may be passed to the doctest command line interface via the &lt;code&gt;-o&lt;/code&gt; option.</source>
          <target state="translated">许多选项标志控制doctest行为的各个方面。标志的符号名称作为模块常量提供，可以将它们&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;按位&amp;ldquo;或&amp;rdquo;&lt;/a&gt;在一起并传递给各种功能。这些名称也可以在&lt;a href=&quot;#doctest-directives&quot;&gt;doctest指令中使用&lt;/a&gt;，并且可以通过 &lt;code&gt;-o&lt;/code&gt; 选项传递到doctest命令行界面。</target>
        </trans-unit>
        <trans-unit id="7d248406498c9e34559ce116cdbf8b66476b9bb7" translate="yes" xml:space="preserve">
          <source>A number of option flags control various aspects of doctest&amp;rsquo;s behavior. Symbolic names for the flags are supplied as module constants, which can be &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; together and passed to various functions. The names can also be used in &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt;, and may be passed to the doctest command line interface via the &lt;code&gt;-o&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24786294a108030a38cc3d65cb7244c171d67285" translate="yes" xml:space="preserve">
          <source>A number of predefined codecs are specific to Python, so their codec names have no meaning outside Python. These are listed in the tables below based on the expected input and output types (note that while text encodings are the most common use case for codecs, the underlying codec infrastructure supports arbitrary data transforms rather than just text encodings). For asymmetric codecs, the stated meaning describes the encoding direction.</source>
          <target state="translated">一些预定义的编解码器是针对 Python 的,所以它们的编解码器名称在 Python 之外没有任何意义。根据预期的输入和输出类型(注意,虽然文本编码是编解码器最常见的用例,但底层的编解码器基础结构支持任意数据转换,而不仅仅是文本编码),这些编解码器列在下面的表中。对于非对称编解码器,所述含义描述了编码方向。</target>
        </trans-unit>
        <trans-unit id="4227ce7e78debdba89f4c96569097661301c7c9c" translate="yes" xml:space="preserve">
          <source>A number of widgets require &amp;ldquo;index&amp;rdquo; parameters to be passed. These are used to point at a specific place in a Text widget, or to particular characters in an Entry widget, or to particular menu items in a Menu widget.</source>
          <target state="translated">许多小部件需要传递&amp;ldquo;索引&amp;rdquo;参数。它们用于指向&amp;ldquo;文本&amp;rdquo;小部件中的特定位置，或指向&amp;ldquo;条目&amp;rdquo;小部件中的特定字符，或&amp;ldquo;菜单&amp;rdquo;小部件中的特定菜单项。</target>
        </trans-unit>
        <trans-unit id="87a43f9cfd3da2836cdeb874afef3c2da7ba877a" translate="yes" xml:space="preserve">
          <source>A number specifying the maximum value. Defaults to 100.</source>
          <target state="translated">指定最大值的数字。默认值为100。</target>
        </trans-unit>
        <trans-unit id="f0a2832b6c8a08921422a5d8a1515c121adf4755" translate="yes" xml:space="preserve">
          <source>A numeric error code from the C variable &lt;code&gt;errno&lt;/code&gt;.</source>
          <target state="translated">来自C变量 &lt;code&gt;errno&lt;/code&gt; 的数字错误代码。</target>
        </trans-unit>
        <trans-unit id="c7e153424dba9fbc1ebba1d78eaffba93da702aa" translate="yes" xml:space="preserve">
          <source>A numeric error code from the expat parser. See the documentation of &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for the list of error codes and their meanings.</source>
          <target state="translated">来自expat解析器的数字错误代码。有关错误代码及其含义的列表，请参见&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="033121bc98a1cde9c09ce5624067c2522fbe46ec" translate="yes" xml:space="preserve">
          <source>A numeric error number that denotes the verification error.</source>
          <target state="translated">表示核查错误的数字错误号。</target>
        </trans-unit>
        <trans-unit id="3f40732fa35edcaee5dbbdaa3d3dc1424861ae23" translate="yes" xml:space="preserve">
          <source>A numeric handle of a system object which will become &amp;ldquo;ready&amp;rdquo; when the process ends.</source>
          <target state="translated">系统对象的数字句柄，当过程结束时将变为&amp;ldquo;就绪&amp;rdquo;状态。</target>
        </trans-unit>
        <trans-unit id="6cca780fc4b38afc038d9433881555b00e41699a" translate="yes" xml:space="preserve">
          <source>A one-character string used by the writer to escape the &lt;em&gt;delimiter&lt;/em&gt; if &lt;em&gt;quoting&lt;/em&gt; is set to &lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt;&lt;code&gt;QUOTE_NONE&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;quotechar&lt;/em&gt; if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. On reading, the &lt;em&gt;escapechar&lt;/em&gt; removes any special meaning from the following character. It defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, which disables escaping.</source>
          <target state="translated">如果将&lt;em&gt;引号&lt;/em&gt;设置为&lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt; &lt;code&gt;QUOTE_NONE&lt;/code&gt; &lt;/a&gt;，则&lt;em&gt;编写器&lt;/em&gt;使用一个单字符字符串来转义&lt;em&gt;分隔符&lt;/em&gt;&lt;em&gt;；&lt;/em&gt;如果&lt;em&gt;双引号&lt;/em&gt;为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，则使用&lt;em&gt;quotechar&lt;/em&gt;。阅读时，&lt;em&gt;escapechar&lt;/em&gt;删除了以下字符中的任何特殊含义。它默认为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，它禁用转义。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fda1d9903017ca3b081766b53e4516e92f15d4c0" translate="yes" xml:space="preserve">
          <source>A one-character string used to quote fields containing special characters, such as the &lt;em&gt;delimiter&lt;/em&gt; or &lt;em&gt;quotechar&lt;/em&gt;, or which contain new-line characters. It defaults to &lt;code&gt;'&quot;'&lt;/code&gt;.</source>
          <target state="translated">一个单字符字符串，用于引用包含特殊字符（例如&lt;em&gt;定界符&lt;/em&gt;或&lt;em&gt;quotechar&lt;/em&gt;）或包含&lt;em&gt;换行符的&lt;/em&gt;字段。默认为 &lt;code&gt;'&quot;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cddc04fba1abe2f49cf33fa79783bec8ce15114" translate="yes" xml:space="preserve">
          <source>A one-character string used to separate fields. It defaults to &lt;code&gt;','&lt;/code&gt;.</source>
          <target state="translated">一个用于分隔字段的单字符字符串。默认为 &lt;code&gt;','&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="266b9992fac1657d44a6361498f20ec9bfba29ef" translate="yes" xml:space="preserve">
          <source>A pad is like a window, except that it is not restricted by the screen size, and is not necessarily associated with a particular part of the screen. Pads can be used when a large window is needed, and only a part of the window will be on the screen at one time. Automatic refreshes of pads (such as from scrolling or echoing of input) do not occur. The &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#curses.window.noutrefresh&quot;&gt;&lt;code&gt;noutrefresh()&lt;/code&gt;&lt;/a&gt; methods of a pad require 6 arguments to specify the part of the pad to be displayed and the location on the screen to be used for the display. The arguments are &lt;em&gt;pminrow&lt;/em&gt;, &lt;em&gt;pmincol&lt;/em&gt;, &lt;em&gt;sminrow&lt;/em&gt;, &lt;em&gt;smincol&lt;/em&gt;, &lt;em&gt;smaxrow&lt;/em&gt;, &lt;em&gt;smaxcol&lt;/em&gt;; the &lt;em&gt;p&lt;/em&gt; arguments refer to the upper left corner of the pad region to be displayed and the &lt;em&gt;s&lt;/em&gt; arguments define a clipping box on the screen within which the pad region is to be displayed.</source>
          <target state="translated">垫类似于窗口，除了它不受屏幕尺寸的限制，并且不一定与屏幕的特定部分关联。当需要一个大窗口时，可以使用垫板，并且一次只将一部分窗口显示在屏幕上。不会自动刷新打击垫（例如，通过滚动或输入的回声）。&lt;a href=&quot;#curses.window.noutrefresh&quot;&gt; &lt;code&gt;noutrefresh()&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;和noutrefresh（）方法需要6个参数来指定要显示的垫板部分以及要在屏幕上显示的位置。参数是&lt;em&gt;pminrow&lt;/em&gt;，&lt;em&gt;pmincol&lt;/em&gt;，&lt;em&gt;sminrow&lt;/em&gt;，&lt;em&gt;smincol&lt;/em&gt;，&lt;em&gt;smaxrow&lt;/em&gt;，&lt;em&gt;smaxcol&lt;/em&gt; ;该&lt;em&gt;p&lt;/em&gt;自变量是指要显示的焊盘区域的左上角，而&lt;em&gt;s自&lt;/em&gt;变量定义了要在其中显示焊盘区域的屏幕上的剪切框。</target>
        </trans-unit>
        <trans-unit id="543bffc96e07b14eab3de589caf9259026e4de84" translate="yes" xml:space="preserve">
          <source>A pair &lt;code&gt;(host, port)&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;host&lt;/em&gt; is a string representing either a hostname in Internet domain notation like &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; or an IPv4 address like &lt;code&gt;'100.50.200.5'&lt;/code&gt;, and &lt;em&gt;port&lt;/em&gt; is an integer.</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;地址族使用一对 &lt;code&gt;(host, port)&lt;/code&gt; ，其中&lt;em&gt;host&lt;/em&gt;是一个字符串，该字符串表示Internet域表示法中的主机名（如 &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; 或IPv4地址（如 &lt;code&gt;'100.50.200.5'&lt;/code&gt; ，而&lt;em&gt;port&lt;/em&gt;为一个整数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b93cb8865023f461acb5361c56e206ee1aa8182d" translate="yes" xml:space="preserve">
          <source>A panel stack extension that adds depth to curses windows.</source>
          <target state="translated">一个面板堆栈扩展,增加了诅咒窗口的深度。</target>
        </trans-unit>
        <trans-unit id="a6b4cf6c75b1cf3706374d6b2abafb188224b9a0" translate="yes" xml:space="preserve">
          <source>A parallel equivalent of the &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; built-in function (it supports only one &lt;em&gt;iterable&lt;/em&gt; argument though, for multiple iterables see &lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt;). It blocks until the result is ready.</source>
          <target state="translated">与&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;内置函数的并行等效项（尽管它仅支持一个&lt;em&gt;可迭代&lt;/em&gt;参数，但对于多个可迭代对象，请参见&lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt;）。它会阻塞直到结果准备就绪。</target>
        </trans-unit>
        <trans-unit id="16446c390decbe7bb0f68daafac03e66ce6aec69" translate="yes" xml:space="preserve">
          <source>A parameter entity contained incomplete markup.</source>
          <target state="translated">一个参数实体包含不完整的标记。</target>
        </trans-unit>
        <trans-unit id="012f66b7ba5f9e640c26d03e6437c3bca0c7df81" translate="yes" xml:space="preserve">
          <source>A parameter entity reference was found where it was not allowed.</source>
          <target state="translated">在不允许的地方发现了一个参数实体引用。</target>
        </trans-unit>
        <trans-unit id="b364142017bfe2db3bd80211e6956af681664535" translate="yes" xml:space="preserve">
          <source>A partial upgrade path from &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">从&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;到&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; 的&lt;/a&gt;部分升级路径：</target>
        </trans-unit>
        <trans-unit id="a6a0f809c40e7d0aca5f738a82cada5c7e327d01" translate="yes" xml:space="preserve">
          <source>A path configuration file is a file whose name has the form &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; and exists in one of the four directories mentioned above; its contents are additional items (one per line) to be added to &lt;code&gt;sys.path&lt;/code&gt;. Non-existing items are never added to &lt;code&gt;sys.path&lt;/code&gt;, and no check is made that the item refers to a directory rather than a file. No item is added to &lt;code&gt;sys.path&lt;/code&gt; more than once. Blank lines and lines beginning with &lt;code&gt;#&lt;/code&gt; are skipped. Lines starting with &lt;code&gt;import&lt;/code&gt; (followed by space or tab) are executed.</source>
          <target state="translated">路径配置文件是 &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; 格式的文件，并且存在于上述四个目录之一中；它的内容是要添加到 &lt;code&gt;sys.path&lt;/code&gt; 的其他项（每行一个）。不存在的项目永远不会添加到 &lt;code&gt;sys.path&lt;/code&gt; ，并且不会检查该项目是指向目录而不是文件。没有一项可以添加到 &lt;code&gt;sys.path&lt;/code&gt; 中。空行和以 &lt;code&gt;#&lt;/code&gt; 开头的行将被跳过。执行从 &lt;code&gt;import&lt;/code&gt; 开始的行（后跟空格或制表符）。</target>
        </trans-unit>
        <trans-unit id="646d815aeadeea6fe20ca3faf0ccabbfeea34957" translate="yes" xml:space="preserve">
          <source>A path object can be used anywhere an object implementing &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; is accepted:</source>
          <target state="translated">可以在接受&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;的对象的任何地方使用path对象：</target>
        </trans-unit>
        <trans-unit id="bebeb34650a612eae1dd1d635441f9d161b217ad" translate="yes" xml:space="preserve">
          <source>A pathlib-compatible wrapper for zip files. See section &lt;a href=&quot;#path-objects&quot;&gt;Path Objects&lt;/a&gt; for details.</source>
          <target state="translated">zip文件的pathlib兼容包装器。有关详细信息，请参见&lt;a href=&quot;#path-objects&quot;&gt;路径对象&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="073be021799e1edeed8fbb982dc1e8d136890310" translate="yes" xml:space="preserve">
          <source>A pattern you will sometimes see is a &lt;code&gt;try-finally&lt;/code&gt; statement with a flag variable to indicate whether or not the body of the &lt;code&gt;finally&lt;/code&gt; clause should be executed. In its simplest form (that can&amp;rsquo;t already be handled just by using an &lt;code&gt;except&lt;/code&gt; clause instead), it looks something like this:</source>
          <target state="translated">您有时会看到的模式是带有标志变量的 &lt;code&gt;try-finally&lt;/code&gt; 语句，用于指示是否应执行 &lt;code&gt;finally&lt;/code&gt; 子句的主体。以最简单的形式（不能仅仅通过使用 &lt;code&gt;except&lt;/code&gt; 子句来处理），它看起来像这样：</target>
        </trans-unit>
        <trans-unit id="7abf054a6573c0336e61de800d0dfa5875e96568" translate="yes" xml:space="preserve">
          <source>A pickler object&amp;rsquo;s dispatch table is a registry of &lt;em&gt;reduction functions&lt;/em&gt; of the kind which can be declared using &lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt;&lt;code&gt;copyreg.pickle()&lt;/code&gt;&lt;/a&gt;. It is a mapping whose keys are classes and whose values are reduction functions. A reduction function takes a single argument of the associated class and should conform to the same interface as a &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Pickler对象的分派表是可使用&lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt; &lt;code&gt;copyreg.pickle()&lt;/code&gt; &lt;/a&gt;声明的那种&lt;em&gt;归约函数&lt;/em&gt;的注册表。它是一个映射，其键是类，其值是归约函数。约简函数采用关联类的单个参数，并且应与&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;方法遵循相同的接口。</target>
        </trans-unit>
        <trans-unit id="2815f7a27d1d799bb9c5ed4bd1e2e6224159599f" translate="yes" xml:space="preserve">
          <source>A placeholder method which can be overridden in third party implementations to pre-install packages in the virtual environment or perform other post-creation steps.</source>
          <target state="translated">一个占位符方法,它可以在第三方实现中被覆盖,以便在虚拟环境中预装包或执行其他创建后步骤。</target>
        </trans-unit>
        <trans-unit id="5289f5cb8c6eafde6088a2523d6546e8be5b9ea2" translate="yes" xml:space="preserve">
          <source>A platform-specific location:</source>
          <target state="translated">一个平台特有的位置。</target>
        </trans-unit>
        <trans-unit id="a6eb65fd95cbaf5e43af30050ff3ec24853c59dd" translate="yes" xml:space="preserve">
          <source>A policy defines the notion of &lt;em&gt;context&lt;/em&gt; and manages a separate event loop per context. The default policy defines &lt;em&gt;context&lt;/em&gt; to be the current thread.</source>
          <target state="translated">策略定义&lt;em&gt;上下文&lt;/em&gt;的概念，并为每个上下文管理一个单独的事件循环。默认策略将&lt;em&gt;上下文&lt;/em&gt;定义为当前线程。</target>
        </trans-unit>
        <trans-unit id="10bef264cff4ed7470ae443a79b09fa9417838b9" translate="yes" xml:space="preserve">
          <source>A popular third-party coverage tool that provides HTML output along with advanced features such as branch coverage.</source>
          <target state="translated">一个流行的第三方覆盖工具,提供HTML输出以及分支覆盖等高级功能。</target>
        </trans-unit>
        <trans-unit id="7e69db56a6ea626272adf3d2ff2e59ea23a94fcf" translate="yes" xml:space="preserve">
          <source>A positional specification of the form &amp;ldquo;@x,y&amp;rdquo;, which identifies the tab</source>
          <target state="translated">格式为&amp;ldquo; @ x，y&amp;rdquo;的位置说明，用于标识制表符</target>
        </trans-unit>
        <trans-unit id="3ba4a2770676c7fc7f7f67798128c512a5d2028e" translate="yes" xml:space="preserve">
          <source>A positive integer specifying the number of elements in the array. Out-of-range subscripts result in an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;. Will be returned by &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个正整数，指定数组中的元素数。下标超出范围会导致&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。将由&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="9a673e2f0ba94a4e244ad4f4f6bcfef7838e6dad" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be blocked.</source>
          <target state="translated">&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;how&lt;/em&gt;参数的&lt;em&gt;how&lt;/em&gt;值，指示信号将被阻塞。</target>
        </trans-unit>
        <trans-unit id="fcbbcb4889df6bf478da8060159cb1a9ffdb3edf" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be unblocked.</source>
          <target state="translated">&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;how&lt;/em&gt;参数的可能值，指示信号将被解除阻塞。</target>
        </trans-unit>
        <trans-unit id="64d6e35e5d0720d89927277af6c6b6e10bc1da90" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that the signal mask is to be replaced.</source>
          <target state="translated">&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;how&lt;/em&gt;参数的可能值，指示信号掩码将被替换。</target>
        </trans-unit>
        <trans-unit id="c03ca79ea849bb2dbbb49f14c9096b4b556833c8" translate="yes" xml:space="preserve">
          <source>A possibly empty tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects representing the addresses in the group.</source>
          <target state="translated">表示组中&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;对象的可能为空的元组。</target>
        </trans-unit>
        <trans-unit id="49afe2d7b9d6c7021dbba12a05abef138ec01de4" translate="yes" xml:space="preserve">
          <source>A precision of &lt;code&gt;0&lt;/code&gt; is treated as equivalent to a precision of &lt;code&gt;1&lt;/code&gt;. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">精度为 &lt;code&gt;0&lt;/code&gt; 等同于精度为 &lt;code&gt;1&lt;/code&gt; 。默认精度为 &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7089cc2a31010eba0be5e32ed206b479b78c2baa" translate="yes" xml:space="preserve">
          <source>A primary use for weak references is to implement caches or mappings holding large objects, where it&amp;rsquo;s desired that a large object not be kept alive solely because it appears in a cache or mapping.</source>
          <target state="translated">弱引用的主要用途是实现包含大型对象的缓存或映射，在这种情况下，不希望仅因为大型对象出现在缓存或映射中而使其保持活动状态。</target>
        </trans-unit>
        <trans-unit id="c915b53e717effb68aabdc2a0d6fddd050b0db1e" translate="yes" xml:space="preserve">
          <source>A primitive lock is a synchronization primitive that is not owned by a particular thread when locked. In Python, it is currently the lowest level synchronization primitive available, implemented directly by the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; extension module.</source>
          <target state="translated">原语锁是一种同步原语，锁定后该原语不属于特定线程。在Python中，它是当前可用的最低级别的同步原语，由&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;扩展模块直接实现。</target>
        </trans-unit>
        <trans-unit id="37ea4049756ea91b41ad9cbfd066ac008ad7e41e" translate="yes" xml:space="preserve">
          <source>A primitive lock is in one of two states, &amp;ldquo;locked&amp;rdquo; or &amp;ldquo;unlocked&amp;rdquo;. It is created in the unlocked state. It has two basic methods, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;. When the state is unlocked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; changes the state to locked and returns immediately. When the state is locked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks until a call to &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; in another thread changes it to unlocked, then the &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call resets it to locked and returns. The &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method should only be called in the locked state; it changes the state to unlocked and returns immediately. If an attempt is made to release an unlocked lock, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">原始锁定处于&amp;ldquo;锁定&amp;rdquo;或&amp;ldquo;解锁&amp;rdquo;两种状态之一。它是在解锁状态下创建的。它有两种基本方法，&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;。解锁状态后，&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;会将状态更改为锁定并立即返回。锁定状态后，&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; 会&lt;/a&gt;阻塞，直到另一个线程中对&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;的调用将其更改为未锁定，然后&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;调用将其重置为锁定并返回。的&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;方法应只在锁定状态下被调用;它将状态更改为解锁并立即返回。如果尝试释放解锁的锁，则会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c136c8e031ae9acaeea33df5e509e457c232647" translate="yes" xml:space="preserve">
          <source>A priority queue.</source>
          <target state="translated">一个优先队列。</target>
        </trans-unit>
        <trans-unit id="d99ce12ee7a4b4b5d74728cfea88be8c23f2abb7" translate="yes" xml:space="preserve">
          <source>A process can be joined many times.</source>
          <target state="translated">一个过程可以多次加入。</target>
        </trans-unit>
        <trans-unit id="661a72c6ee03e63c1e4e4cdd37d63e45d6262bf9" translate="yes" xml:space="preserve">
          <source>A process cannot join itself because this would cause a deadlock. It is an error to attempt to join a process before it has been started.</source>
          <target state="translated">进程不能加入自己,因为这会导致死锁。试图在进程启动前加入进程是一种错误。</target>
        </trans-unit>
        <trans-unit id="03133f212edb656afb4b280596f603276f8582aa" translate="yes" xml:space="preserve">
          <source>A process pool object which controls a pool of worker processes to which jobs can be submitted. It supports asynchronous results with timeouts and callbacks and has a parallel map implementation.</source>
          <target state="translated">一个进程池对象,它控制着一个可以提交作业的工作进程池。它支持带超时和回调的异步结果,并有一个并行映射的实现。</target>
        </trans-unit>
        <trans-unit id="a354478a00e3e8c761db9395099aec6dd004f1f8" translate="yes" xml:space="preserve">
          <source>A process watcher allows customization of how an event loop monitors child processes on Unix. Specifically, the event loop needs to know when a child process has exited.</source>
          <target state="translated">进程监视器允许自定义Unix上事件循环监视子进程的方式。具体来说,事件循环需要知道子进程何时退出。</target>
        </trans-unit>
        <trans-unit id="072a4a313bcf1885879618cd5ab6ea7dafe24775" translate="yes" xml:space="preserve">
          <source>A processing class used to execute and verify the interactive examples in a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于在&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; 中&lt;/a&gt;执行和验证交互式示例的处理类。</target>
        </trans-unit>
        <trans-unit id="bfc64c4355d0772046330f8b8767e859d4f36926" translate="yes" xml:space="preserve">
          <source>A processing class used to extract interactive examples from a string, and use them to create a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个处理类，用于从字符串中提取交互式示例，并使用它们创建&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="36e7f819143265a9e0661ba6d7d1edca3d75ef96" translate="yes" xml:space="preserve">
          <source>A processing class used to extract the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s that are relevant to a given object, from its docstring and the docstrings of its contained objects. &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s can be extracted from modules, classes, functions, methods, staticmethods, classmethods, and properties.</source>
          <target state="translated">一个处理类，用于从其文档字符串及其包含的对象的文档字符串中提取与给定对象相关的&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;。可以从模块，类，函数，方法，静态方法，类方法和属性中提取&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffe740a1a61f3a17e716a81beaa39ca1258df2e5" translate="yes" xml:space="preserve">
          <source>A program is free to modify this list for its own purposes. Only strings and bytes should be added to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;; all other data types are ignored during import.</source>
          <target state="translated">程序可以出于自己的目的随意修改此列表。仅字符串和字节应添加到&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; ; 导入期间将忽略所有其他数据类型。</target>
        </trans-unit>
        <trans-unit id="2a058d334f0b92eff050d11d91c8df8e25c24a51" translate="yes" xml:space="preserve">
          <source>A property object has &lt;code&gt;getter&lt;/code&gt;, &lt;code&gt;setter&lt;/code&gt;, and &lt;code&gt;deleter&lt;/code&gt; methods usable as decorators that create a copy of the property with the corresponding accessor function set to the decorated function. This is best explained with an example:</source>
          <target state="translated">属性对象具有可用作装饰器的 &lt;code&gt;getter&lt;/code&gt; ， &lt;code&gt;setter&lt;/code&gt; 和 &lt;code&gt;deleter&lt;/code&gt; 方法，这些方法创建属性的副本，并将相应的访问器函数设置为装饰函数。最好用一个例子解释一下：</target>
        </trans-unit>
        <trans-unit id="b39b3fcc4cee390c973950a8ea0939199743bb3a" translate="yes" xml:space="preserve">
          <source>A proxy is an object which &lt;em&gt;refers&lt;/em&gt; to a shared object which lives (presumably) in a different process. The shared object is said to be the &lt;em&gt;referent&lt;/em&gt; of the proxy. Multiple proxy objects may have the same referent.</source>
          <target state="translated">代理是一个对象，&lt;em&gt;指的&lt;/em&gt;是一个共享对象，该共享对象（大概）生活在一个不同的进程中。共享对象被称为代理的&lt;em&gt;引用对象&lt;/em&gt;。多个代理对象可能具有相同的引用对象。</target>
        </trans-unit>
        <trans-unit id="127418956b7538abf35e0c7d0c8df18e9a2e2b17" translate="yes" xml:space="preserve">
          <source>A proxy object has methods which invoke corresponding methods of its referent (although not every method of the referent will necessarily be available through the proxy). In this way, a proxy can be used just like its referent can:</source>
          <target state="translated">一个代理对象的方法可以调用其引用对象的相应方法(尽管引用对象的每个方法不一定都能通过代理对象使用)。这样,代理对象就可以像它的引用对象一样被使用。</target>
        </trans-unit>
        <trans-unit id="f53fd45b896dddb81ccaed23c2ae3025e8e5f24b" translate="yes" xml:space="preserve">
          <source>A proxy object uses a weakref callback so that when it gets garbage collected it deregisters itself from the manager which owns its referent.</source>
          <target state="translated">代理对象使用弱ref回调,所以当它被收集垃圾时,它就会从拥有它的引用的管理者那里注销自己。</target>
        </trans-unit>
        <trans-unit id="db78a45bdc25adb61e99da3fbc39a41ebe2a9000" translate="yes" xml:space="preserve">
          <source>A pull parser suitable for non-blocking applications. Its input-side API is similar to that of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt;, but instead of pushing calls to a callback target, &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt; collects an internal list of parsing events and lets the user read from it. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported.</source>
          <target state="translated">适用于非阻塞应用程序的拉式解析器。它的输入端API与&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;相似，但是&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt;不会将调用推送到回调目标，而是收集解析事件的内部列表，并让用户从中读取信息。&lt;em&gt;事件&lt;/em&gt;是要报告的一系列事件。受支持的事件是字符串 &lt;code&gt;&quot;start&quot;&lt;/code&gt; ， &lt;code&gt;&quot;end&quot;&lt;/code&gt; ， &lt;code&gt;&quot;comment&quot;&lt;/code&gt; ， &lt;code&gt;&quot;pi&quot;&lt;/code&gt; ， &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; （&amp;ldquo; ns&amp;rdquo;事件用于获取详细的名称空间信息）。如果省略&lt;em&gt;事件&lt;/em&gt;，则仅报告 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="611cc1f288e4ebe8654c5f40abd6830e50fb2b24" translate="yes" xml:space="preserve">
          <source>A quadratic blowup attack is similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;Billion Laughs&lt;/a&gt; attack; it abuses entity expansion, too. Instead of nested entities it repeats one large entity with a couple of thousand chars over and over again. The attack isn&amp;rsquo;t as efficient as the exponential case but it avoids triggering parser countermeasures that forbid deeply-nested entities.</source>
          <target state="translated">二次爆炸攻击类似于&amp;ldquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;十亿笑&amp;rdquo;&lt;/a&gt;攻击；它也滥用实体扩张。而不是嵌套实体，它一遍又一遍地重复一个带有几千个字符的大型实体。攻击的效率不及指数级情况，但可以避免触发禁止深度嵌套实体的解析器对策。</target>
        </trans-unit>
        <trans-unit id="32f0bfa3ad661bbe821e304d53e7d39d2b8c3756" translate="yes" xml:space="preserve">
          <source>A queue class for use in a multi-processing (rather than multi-threading) context.</source>
          <target state="translated">用于多处理(而不是多线程)环境的队列类。</target>
        </trans-unit>
        <trans-unit id="99a5f66050b7639c5e20c566c6533b480cfdb3b9" translate="yes" xml:space="preserve">
          <source>A queue must not be used anymore after it is closed. For example, &lt;a href=&quot;#multiprocessing.SimpleQueue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.SimpleQueue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.SimpleQueue.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; methods must no longer be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970016f4dd8d7293c8fe545175b34b595aee70a8" translate="yes" xml:space="preserve">
          <source>A range object will be empty if &lt;code&gt;r[0]&lt;/code&gt; does not meet the value constraint. Ranges do support negative indices, but these are interpreted as indexing from the end of the sequence determined by the positive indices.</source>
          <target state="translated">如果 &lt;code&gt;r[0]&lt;/code&gt; 不满足值约束，则范围对象将为空。范围确实支持负索引，但是它们被解释为从正索引确定的序列末尾开始的索引。</target>
        </trans-unit>
        <trans-unit id="529c4e8d3b05784622b5257f6319660acd9697dc" translate="yes" xml:space="preserve">
          <source>A raw binary stream representing an OS-level file containing bytes data. It inherits &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d64c49ac868aa39e74a9a92db9ff55124daac2" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the parser.</source>
          <target state="translated">解析器使用的方言的只读描述。</target>
        </trans-unit>
        <trans-unit id="d8db58a3fbd04f626dd60cc420a69d5fe182f4a1" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the writer.</source>
          <target state="translated">作者使用的方言的只读描述。</target>
        </trans-unit>
        <trans-unit id="103619d1b69776cbb2bb552ae0ace0f33ade73d9" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;arithmetic mean&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正态分布的&lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;算术平均值&lt;/a&gt;的只读属性。</target>
        </trans-unit>
        <trans-unit id="7e5c5cd30d274a11e5c8a7f205262bcf52ba50dd" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;median&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正态分布&lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;中位数&lt;/a&gt;的只读属性。</target>
        </trans-unit>
        <trans-unit id="2b3f43c3138ebdc3b49d4edbc9a8dfae7d36df14" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;mode&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正态分布&lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;模式&lt;/a&gt;的只读属性。</target>
        </trans-unit>
        <trans-unit id="45686b5a6c585606daea0b77d4b804d2c566d994" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;standard deviation&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">一个正态分布的&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;标准偏差&lt;/a&gt;的只读属性。</target>
        </trans-unit>
        <trans-unit id="99445b8caebd2b8efc9bf242bcd10bf1c3ccd24e" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;variance&lt;/a&gt; of a normal distribution. Equal to the square of the standard deviation.</source>
          <target state="translated">一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;正态分布方差&lt;/a&gt;的只读属性。等于标准偏差的平方。</target>
        </trans-unit>
        <trans-unit id="2a89570fc444460338403a29b3a5af43fe4247a1" translate="yes" xml:space="preserve">
          <source>A read-only property. Characters that will be considered punctuation. Runs of punctuation characters will be returned as a single token. However, note that no semantic validity checking will be performed: for example, &amp;lsquo;&amp;gt;&amp;gt;&amp;gt;&amp;rsquo; could be returned as a token, even though it may not be recognised as such by shells.</source>
          <target state="translated">只读属性。将被视为标点符号的字符。标点符号字符将作为单个令牌返回。但是，请注意，将不会执行语义有效性检查：例如，即使shell无法识别&amp;ldquo; &amp;gt;&amp;gt;&amp;gt;&amp;rdquo;，也可以将其作为令牌返回。</target>
        </trans-unit>
        <trans-unit id="f1526d13194dc44fe8b71f410d5e02f5618756d2" translate="yes" xml:space="preserve">
          <source>A read-only property. Points to the &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; object that created the token.</source>
          <target state="translated">只读属性。&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;创建令牌的ContextVar对象。</target>
        </trans-unit>
        <trans-unit id="35f7fe0b2b9bb75459b88195c234d27b4c7c54e7" translate="yes" xml:space="preserve">
          <source>A read-only property. Set to the value the variable had before the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; method call that created the token. It points to &lt;code&gt;Token.MISSING&lt;/code&gt; is the variable was not set before the call.</source>
          <target state="translated">只读属性。将变量设置为在创建令牌的&lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt;方法调用之前具有的值。它指向 &lt;code&gt;Token.MISSING&lt;/code&gt; 是在调用之前未设置的变量。</target>
        </trans-unit>
        <trans-unit id="ce5c35b786a167783bd1eecb7aa0a10dc821953b" translate="yes" xml:space="preserve">
          <source>A read-only sequence representing the time zone search path &amp;ndash; when constructing a &lt;code&gt;ZoneInfo&lt;/code&gt; from a key, the key is joined to each entry in the &lt;code&gt;TZPATH&lt;/code&gt;, and the first file found is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57409d01d7bc70f967ed6e92fede60d985f7ba23" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">一个真实的&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;对象，用于存储&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;类的内容。</target>
        </trans-unit>
        <trans-unit id="fabb25bea7f4a3fcb6ef6ab14b41eddaa407f0e5" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">一个真正的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象，用于存储&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;类的内容。</target>
        </trans-unit>
        <trans-unit id="a5ea9d2da1b66afbb924a3e5bdffb22ed45ea981" translate="yes" xml:space="preserve">
          <source>A real dictionary used to store the contents of the &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">一个真正的字典，用于存储&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;类的内容。</target>
        </trans-unit>
        <trans-unit id="2e81b2ea1c04e7477a837ea4fa77a2d26559ba3e" translate="yes" xml:space="preserve">
          <source>A recursive lock object: a close analog of &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt;. A recursive lock must be released by the process or thread that acquired it. Once a process or thread has acquired a recursive lock, the same process or thread may acquire it again without blocking; that process or thread must release it once for each time it has been acquired.</source>
          <target state="translated">递归锁对象：&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; &lt;/a&gt;的近似模拟。递归锁必须由获取它的进程或线程释放。一旦进程或线程获得了递归锁，相同的进程或线程就可以再次获得它而不会阻塞。该进程或线程必须在每次获取时释放一次。</target>
        </trans-unit>
        <trans-unit id="bdd9f600aa39bd4ce3cfa80aec45f37f958ff199" translate="yes" xml:space="preserve">
          <source>A reduced-scope variant of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; representing an SSL protocol instance that does not contain any network IO methods. This class is typically used by framework authors that want to implement asynchronous IO for SSL through memory buffers.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;的范围缩小的变体，表示不包含任何网络IO方法的SSL协议实例。此类通常由希望通过内存缓冲区为SSL实现异步IO的框架作者使用。</target>
        </trans-unit>
        <trans-unit id="1806f846154693b11451c88326be8f7c897dca73" translate="yes" xml:space="preserve">
          <source>A reentrant lock is a synchronization primitive that may be acquired multiple times by the same thread. Internally, it uses the concepts of &amp;ldquo;owning thread&amp;rdquo; and &amp;ldquo;recursion level&amp;rdquo; in addition to the locked/unlocked state used by primitive locks. In the locked state, some thread owns the lock; in the unlocked state, no thread owns it.</source>
          <target state="translated">可重入锁是一个同步原语，可以由同一线程多次获取。在内部，除原始锁使用的锁定/解锁状态外，它还使用&amp;ldquo;拥有线程&amp;rdquo;和&amp;ldquo;递归级别&amp;rdquo;的概念。在锁定状态下，某些线程拥有该锁；在解锁状态下，没有线程拥有它。</target>
        </trans-unit>
        <trans-unit id="cfaf2d84cef67a7e1c4ea1d2ed5a19290e06d05c" translate="yes" xml:space="preserve">
          <source>A reference to the parent &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">对父&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt;对象的引用。</target>
        </trans-unit>
        <trans-unit id="fe68fe38d813942406023b96ef7655bd795ff7aa" translate="yes" xml:space="preserve">
          <source>A reference was made to an entity which was not defined.</source>
          <target state="translated">提到了一个没有定义的实体。</target>
        </trans-unit>
        <trans-unit id="fc2814565b811bb72e387b5ad4e116a75b0028af" translate="yes" xml:space="preserve">
          <source>A regular expression (or RE) specifies a set of strings that matches it; the functions in this module let you check if a particular string matches a given regular expression (or if a given regular expression matches a particular string, which comes down to the same thing).</source>
          <target state="translated">正则表达式(或RE)指定了一组与之匹配的字符串;本模块中的函数可以让你检查某个字符串是否与给定的正则表达式相匹配(或给定的正则表达式是否与某个字符串相匹配,归根结底是一样的)。</target>
        </trans-unit>
        <trans-unit id="278310ab0a87e2bebde6fb9b2d28696ab3d401e5" translate="yes" xml:space="preserve">
          <source>A relative path is interpreted relative to the current working directory.</source>
          <target state="translated">相对路径被解释为相对于当前工作目录。</target>
        </trans-unit>
        <trans-unit id="b69de6e0660f02bec80283fa3ef7149a693896df" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytearray object into its hexadecimal representation.</source>
          <target state="translated">存在一个反向转换函数,将一个字节数组对象转换为其十六进制表示。</target>
        </trans-unit>
        <trans-unit id="564befe131589980eaa0dc9e9dfcfae349e6d8e8" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytes object into its hexadecimal representation.</source>
          <target state="translated">存在一个反向转换函数,将字节对象转换为十六进制表示。</target>
        </trans-unit>
        <trans-unit id="87cbf6cd57661ce2eb0fe90dd90a5bacee5cf075" translate="yes" xml:space="preserve">
          <source>A right shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to division by &lt;code&gt;pow(2, n)&lt;/code&gt; without overflow check.</source>
          <target state="translated">向右移&lt;em&gt;n&lt;/em&gt;位等效于除以 &lt;code&gt;pow(2, n)&lt;/code&gt; 而不进行溢出检查。</target>
        </trans-unit>
        <trans-unit id="fa2969dcef8d9a49a27a5430ee9b5eb46b150254" translate="yes" xml:space="preserve">
          <source>A right shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to floor division by &lt;code&gt;pow(2, n)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184432cc5a56df44e1427ded0fcaad5c40e378c4" translate="yes" xml:space="preserve">
          <source>A round-robin scheduling policy.</source>
          <target state="translated">一种循环调度政策。</target>
        </trans-unit>
        <trans-unit id="2d2450e8ef446241d8a186b37b3d407b5c59148e" translate="yes" xml:space="preserve">
          <source>A sample usage might be something like this:</source>
          <target state="translated">一个示例用法可能是这样的。</target>
        </trans-unit>
        <trans-unit id="98edfa1526c0efe9099cce99ddcb7c504d9a1e51" translate="yes" xml:space="preserve">
          <source>A sample usage of our unpickler working has intended:</source>
          <target state="translated">我们的unpickler工作的一个使用示例已经打算。</target>
        </trans-unit>
        <trans-unit id="5fa5c854cf986de080adeddab9912ec17b8b1df0" translate="yes" xml:space="preserve">
          <source>A script (possibly registered with Misc.register) that is called immediately before displaying the values. It may specify which values to display.</source>
          <target state="translated">在显示值之前立即调用的脚本(可能用Misc.register注册)。它可以指定显示哪些值。</target>
        </trans-unit>
        <trans-unit id="23735aa84db218755b79767643c54ff40f2fab47" translate="yes" xml:space="preserve">
          <source>A second example demonstrates output parameters. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; function retrieves the dimensions of a specified window by copying them into &lt;code&gt;RECT&lt;/code&gt; structure that the caller has to supply. Here is the C declaration:</source>
          <target state="translated">第二个示例演示输出参数。win32 &lt;code&gt;GetWindowRect&lt;/code&gt; 函数通过将指定窗口的尺寸复制到调用者必须提供的 &lt;code&gt;RECT&lt;/code&gt; 结构中来检索它们。这是C声明：</target>
        </trans-unit>
        <trans-unit id="6bf3d7d9e60a594dca393cfc1e57ed7a4eb755f0" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some task calls &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">信号量管理一个内部计数器，该计数器由每个&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;调用递减，并由每个&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;调用递增。计数器永远不能低于零。当&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;发现它为零时，它将阻塞，直到某些任务调用&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;为止。</target>
        </trans-unit>
        <trans-unit id="0f001dac28861f9744b78693c52be06f375a70a3" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some other thread calls &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">信号量管理一个内部计数器，该计数器由每个&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;调用递减，并由每个&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;调用递增。计数器永远不能低于零。当&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;发现它为零时，它将阻塞，直到其他线程调用&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;为止。</target>
        </trans-unit>
        <trans-unit id="06a76aefa9f5a9e518125b5efe69166c037ad6a6" translate="yes" xml:space="preserve">
          <source>A semaphore object: a close analog of &lt;a href=&quot;threading#threading.Semaphore&quot;&gt;&lt;code&gt;threading.Semaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">信号量对象：&lt;a href=&quot;threading#threading.Semaphore&quot;&gt; &lt;code&gt;threading.Semaphore&lt;/code&gt; &lt;/a&gt;的近似模拟。</target>
        </trans-unit>
        <trans-unit id="c7848790bb96dd3a52d4bf86a18d50bb671f3c12" translate="yes" xml:space="preserve">
          <source>A semaphore.</source>
          <target state="translated">旗帜性的。</target>
        </trans-unit>
        <trans-unit id="8542eec62199963efac79ef1b519957da0db1407" translate="yes" xml:space="preserve">
          <source>A sequence defining the structure fields. The items must be 2-tuples or 3-tuples. The first item is the name of the field, the second item specifies the type of the field; it can be any ctypes data type.</source>
          <target state="translated">定义结构域的序列。这些项目必须是2-tuples或3-tuples。第一项是字段的名称,第二项指定字段的类型;可以是任何ctypes数据类型。</target>
        </trans-unit>
        <trans-unit id="48ad0a2928de82fd8b299ed332a4541e9779e82e" translate="yes" xml:space="preserve">
          <source>A sequence of null-terminated strings, terminated by two null characters. (Python handles this termination automatically.)</source>
          <target state="translated">一个以空为结束的字符串序列,以两个空字符结束。(Python 会自动处理这个终止符。)</target>
        </trans-unit>
        <trans-unit id="49eae2b8156400102d2de31f44c9b7f044b0004f" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms guaranteed to be supported by this module on all platforms. Note that &amp;lsquo;md5&amp;rsquo; is in this list despite some upstream vendors offering an odd &amp;ldquo;FIPS compliant&amp;rdquo; Python build that excludes it.</source>
          <target state="translated">包含哈希算法名称的集合，保证该模块在所有平台上均受支持。请注意，尽管有些上游供应商提供了奇怪的&amp;ldquo; FIPS兼容&amp;rdquo; Python版本（不包括该版本），但&amp;ldquo; md5&amp;rdquo;仍在此列表中。</target>
        </trans-unit>
        <trans-unit id="12fadb35d13d46359eedacd2835823952e5162ba" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms that are available in the running Python interpreter. These names will be recognized when passed to &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt;&lt;code&gt;algorithms_guaranteed&lt;/code&gt;&lt;/a&gt; will always be a subset. The same algorithm may appear multiple times in this set under different names (thanks to OpenSSL).</source>
          <target state="translated">一组包含正在运行的Python解释器中可用的哈希算法的名称。这些名称将在传递给&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;时被识别。&lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt; &lt;code&gt;algorithms_guaranteed&lt;/code&gt; &lt;/a&gt;将始终是子集。同一算法在此集中可能使用不同的名称多次出现（这要感谢OpenSSL）。</target>
        </trans-unit>
        <trans-unit id="dedc6f13e73be80478d9314a2cca704e9a6d0255" translate="yes" xml:space="preserve">
          <source>A set. &lt;code&gt;elts&lt;/code&gt; holds a list of nodes representing the set&amp;rsquo;s elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cc295113b43a2aa6bdc4227e00a42f34fd2718" translate="yes" xml:space="preserve">
          <source>A shallow copy of &lt;code&gt;module.__dict__&lt;/code&gt; is used for both local and global execution context.</source>
          <target state="translated">&lt;code&gt;module.__dict__&lt;/code&gt; 浅表副本用于本地和全局执行上下文。</target>
        </trans-unit>
        <trans-unit id="d26717767841ef0e78b29d3c4d6169bcb2a7db93" translate="yes" xml:space="preserve">
          <source>A shallow copy of dictionary argument &lt;em&gt;globs&lt;/em&gt; is used for the execution context.</source>
          <target state="translated">字典参数&lt;em&gt;glob的&lt;/em&gt;浅表副本用于执行上下文。</target>
        </trans-unit>
        <trans-unit id="1169260b61888746c3a079157d99e6f61c0c10b7" translate="yes" xml:space="preserve">
          <source>A shared object gets deleted from the manager process when there are no longer any proxies referring to it.</source>
          <target state="translated">当不再有任何代理引用共享对象时,该共享对象就会从管理器进程中被删除。</target>
        </trans-unit>
        <trans-unit id="3ee5e7664c7b19d5dea256033c9a42275e7d768f" translate="yes" xml:space="preserve">
          <source>A short usage example:</source>
          <target state="translated">一个简短的使用例子。</target>
        </trans-unit>
        <trans-unit id="d350f8e46b513eb933a766fc06d8f7bc1e7855cb" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt; 简写。</target>
        </trans-unit>
        <trans-unit id="0a749b795f06550600447a0169cf24c779d0f176" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt; 简写。</target>
        </trans-unit>
        <trans-unit id="d680c12f8a4e98b73840c4eb1f954e21eb884b1b" translate="yes" xml:space="preserve">
          <source>A sign character (&lt;code&gt;'+'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;) will precede the conversion (overrides a &amp;ldquo;space&amp;rdquo; flag).</source>
          <target state="translated">在转换之前将使用符号字符（ &lt;code&gt;'+'&lt;/code&gt; 或 &lt;code&gt;'-'&lt;/code&gt; ）（覆盖&amp;ldquo;空格&amp;rdquo;标志）。</target>
        </trans-unit>
        <trans-unit id="8295b8b179c3eb769ae5ced64ca9d3357e8a07b4" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;example&lt;/a&gt; using transports, protocols, and the &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一个使用传输，协议和&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;方法的类似&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9816a27a3071e14aa4cc7b0d979658eab901c688" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;current date&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">使用协程和&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;函数创建的一个类似的&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;当前日期&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="c0aa2b4df7991a37bad1b0944c5afe055528abc3" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello World&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">使用协程和&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;函数创建的类似&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello World&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="cbb8400354d2ab8f01a6d370ad999d970aea658b" translate="yes" xml:space="preserve">
          <source>A simple &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; subclass that provides attribute access to its namespace, as well as a meaningful repr.</source>
          <target state="translated">一个简单的&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;子类，提供对其名称空间的属性访问，以及有意义的代表。</target>
        </trans-unit>
        <trans-unit id="6608731fe87a5bbfa371c043387adc8877916f98" translate="yes" xml:space="preserve">
          <source>A simple example demonstrating the use of the programmatic interface:</source>
          <target state="translated">一个简单的例子展示了程序界面的使用。</target>
        </trans-unit>
        <trans-unit id="c1b20a4571d8f5fc4dbbbd293f8b4bcd6a17862f" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use (a constant-time comparison operation is needed to limit exposure to timing attacks. &lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt;&lt;code&gt;hmac.compare_digest()&lt;/code&gt;&lt;/a&gt; is suitable for this purpose):</source>
          <target state="translated">一个简单的示例说明典型用法（需要进行恒定时间比较操作以限制对定时攻击的暴露&lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt; &lt;code&gt;hmac.compare_digest()&lt;/code&gt; &lt;/a&gt;适合用于此目的）：</target>
        </trans-unit>
        <trans-unit id="39492fd3c64429290422fb9d8bf5eb46c13341d4" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use:</source>
          <target state="translated">一个简单的例子说明了典型用途。</target>
        </trans-unit>
        <trans-unit id="44e93bd7bca8db2e51ed966e536f70c2a01db2b6" translate="yes" xml:space="preserve">
          <source>A simple example of printing the subjects of all messages in a mailbox that seem interesting:</source>
          <target state="translated">一个简单的例子,打印邮箱中所有看起来有趣的邮件的主题。</target>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="ae7798a28395a6340e3133d1e7c1839067f6a8e8" translate="yes" xml:space="preserve">
          <source>A simple set of examples:</source>
          <target state="translated">一组简单的例子。</target>
        </trans-unit>
        <trans-unit id="400bff2d1d48555e7a88b7ac26ee66c3fbf404f6" translate="yes" xml:space="preserve">
          <source>A simple typed namespace. At runtime it is equivalent to a plain &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个简单的类型命名空间。在运行时，它等同于简单的&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1778756c346af273a27beed59f001b8aaa66eb9b" translate="yes" xml:space="preserve">
          <source>A simpler option is to simply set the &amp;ldquo;name&amp;rdquo; attribute after mock creation:</source>
          <target state="translated">一个更简单的选择是在模拟创建后简单地设置&amp;ldquo; name&amp;rdquo;属性：</target>
        </trans-unit>
        <trans-unit id="d4b8d651deb9e36f36a73b620c31c7a4ad8bf0ee" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;except&lt;/code&gt; clause. &lt;code&gt;type&lt;/code&gt; is the exception type it will match, typically a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; node (or &lt;code&gt;None&lt;/code&gt; for a catch-all &lt;code&gt;except:&lt;/code&gt; clause). &lt;code&gt;name&lt;/code&gt; is a raw string for the name to hold the exception, or &lt;code&gt;None&lt;/code&gt; if the clause doesn&amp;rsquo;t have &lt;code&gt;as foo&lt;/code&gt;. &lt;code&gt;body&lt;/code&gt; is a list of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2fd25df18750c538e86a443be6e8a1f46f3141" translate="yes" xml:space="preserve">
          <source>A single argument in a list. &lt;code&gt;arg&lt;/code&gt; is a raw string of the argument name, &lt;code&gt;annotation&lt;/code&gt; is its annotation, such as a &lt;code&gt;Str&lt;/code&gt; or &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a40ed12bd654761eff7801cf611643a2f334c9" translate="yes" xml:space="preserve">
          <source>A single context manager in a &lt;code&gt;with&lt;/code&gt; block. &lt;code&gt;context_expr&lt;/code&gt; is the context manager, often a &lt;a href=&quot;#ast.Call&quot;&gt;&lt;code&gt;Call&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;optional_vars&lt;/code&gt; is a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;as foo&lt;/code&gt; part, or &lt;code&gt;None&lt;/code&gt; if that isn&amp;rsquo;t used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa256381f5f3fdc1e9ddf323c393ca970d51e94" translate="yes" xml:space="preserve">
          <source>A single exception is defined:</source>
          <target state="translated">定义了一个单一的例外。</target>
        </trans-unit>
        <trans-unit id="77aa5f41dd9106f7bd2c4d2b21ec060c0df7ee38" translate="yes" xml:space="preserve">
          <source>A single interactive example, consisting of a Python statement and its expected output. The constructor arguments are used to initialize the attributes of the same names.</source>
          <target state="translated">一个单一的交互式例子,由一个Python语句和它的预期输出组成。构造函数的参数用于初始化相同名称的属性。</target>
        </trans-unit>
        <trans-unit id="1678b7653c8ad5878c0957e08c63d64d24b7a2d9" translate="yes" xml:space="preserve">
          <source>A slash(/) in the signature of a function denotes that the parameters prior to it are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">函数签名中的斜杠（/）表示函数之前的参数仅是位置信息。有关更多信息，请参阅&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;仅位置参数上的FAQ条目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac9172b1b25ebd1f348f44756376e8b084943634" translate="yes" xml:space="preserve">
          <source>A slash(/) in the signature of a function denotes that the parameters prior to it are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3d52d28caf1f8e3ebc74d7080a5dd1a88e9282" translate="yes" xml:space="preserve">
          <source>A slightly more advanced use of the reader &amp;mdash; catching and reporting errors:</source>
          <target state="translated">阅读器的更高级用法-捕获并报告错误：</target>
        </trans-unit>
        <trans-unit id="898ebff01eaf3b8759adc9d7329175bc0b8511cb" translate="yes" xml:space="preserve">
          <source>A small number of constants live in the built-in namespace. They are:</source>
          <target state="translated">有一小部分常量存在于内置的命名空间中。这些常量是:</target>
        </trans-unit>
        <trans-unit id="2f57e31984cb6932a8e39a8ebeab0588c1bb3009" translate="yes" xml:space="preserve">
          <source>A socket object can be in one of three modes: blocking, non-blocking, or timeout. Sockets are by default always created in blocking mode, but this can be changed by calling &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">套接字对象可以处于以下三种模式之一：阻止，非阻止或超时。默认情况下，总是在阻塞模式下创建套接字，但是可以通过调用&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; &lt;/a&gt;来更改套接字。</target>
        </trans-unit>
        <trans-unit id="e405eec72bfbf93e7d5d778bf66ae75f5d35cc43" translate="yes" xml:space="preserve">
          <source>A solitary difference from its close analog exists: its &lt;code&gt;acquire&lt;/code&gt; method&amp;rsquo;s first argument is named &lt;em&gt;block&lt;/em&gt;, as is consistent with &lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt;&lt;code&gt;Lock.acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与它的紧密类比存在一个单独的区别：其 &lt;code&gt;acquire&lt;/code&gt; 方法的第一个参数称为&lt;em&gt;block&lt;/em&gt;，与&lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt; &lt;code&gt;Lock.acquire()&lt;/code&gt; &lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="cf3e702a5afe2e89ff3f3db0ef3665216cfbc631" translate="yes" xml:space="preserve">
          <source>A solution to the first two challenges is to store entries as 3-element list including the priority, an entry count, and the task. The entry count serves as a tie-breaker so that two tasks with the same priority are returned in the order they were added. And since no two entry counts are the same, the tuple comparison will never attempt to directly compare two tasks.</source>
          <target state="translated">前两个挑战的解决方案是将条目存储为3个元素的列表,包括优先级、条目数和任务。条目计数作为一个平局,这样两个具有相同优先级的任务就会按照它们被添加的顺序返回。而且由于没有两个条目数是相同的,所以元组比较永远不会尝试直接比较两个任务。</target>
        </trans-unit>
        <trans-unit id="096bd808e501639e423de5a2cbb278cf68ed16b4" translate="yes" xml:space="preserve">
          <source>A special attribute of every module is &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt;. This is the dictionary containing the module&amp;rsquo;s symbol table. Modifying this dictionary will actually change the module&amp;rsquo;s symbol table, but direct assignment to the &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute is not possible (you can write &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt;, which defines &lt;code&gt;m.a&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, but you can&amp;rsquo;t write &lt;code&gt;m.__dict__ = {}&lt;/code&gt;). Modifying &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; directly is not recommended.</source>
          <target state="translated">每个模块的一个特殊属性是&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;。这是包含模块符号表的字典。修改此字典实际上会更改模块的符号表，但是无法直接分配给&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性（可以写 &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt; ，它将 &lt;code&gt;m.a&lt;/code&gt; 定义为 &lt;code&gt;1&lt;/code&gt; ，但是不能写 &lt;code&gt;m.__dict__ = {}&lt;/code&gt; ）。不建议直接修改&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="350860d7d2f026325c9ed753e8012e0f492b3cef" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of a return annotation.</source>
          <target state="translated">一个特殊的类级标记,用于指定没有返回注解。</target>
        </trans-unit>
        <trans-unit id="ce834d784be00653df494feb83b9f6a0fe0232f1" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of default values and annotations.</source>
          <target state="translated">一个特殊的类级标记,用于指定没有默认值和注释。</target>
        </trans-unit>
        <trans-unit id="637523941475f7686ab8baf723f111f45b51298d" translate="yes" xml:space="preserve">
          <source>A special constant that is assumed to be &lt;code&gt;True&lt;/code&gt; by 3rd party static type checkers. It is &lt;code&gt;False&lt;/code&gt; at runtime. Usage:</source>
          <target state="translated">由第三方静态类型检查器假定为 &lt;code&gt;True&lt;/code&gt; 的特殊常量。在运行时为 &lt;code&gt;False&lt;/code&gt; 。用法：</target>
        </trans-unit>
        <trans-unit id="3279a81827c8b621d38f653bc2a69edd2e98eeb9" translate="yes" xml:space="preserve">
          <source>A special kind of type is &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;. A static type checker will treat every type as being compatible with &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; as being compatible with every type.</source>
          <target state="translated">一种特殊的类型是&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;。静态类型检查器会将每种类型视为与&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;兼容，并将&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;视为与每种类型兼容。</target>
        </trans-unit>
        <trans-unit id="dca41668950435a9f7e18c16a1bd901f35d7d3f9" translate="yes" xml:space="preserve">
          <source>A special typing construct to indicate to type checkers that a name cannot be re-assigned or overridden in a subclass. For example:</source>
          <target state="translated">一个特殊的类型结构,用于向类型检查员表明一个名字不能在子类中被重新分配或覆盖。例如:</target>
        </trans-unit>
        <trans-unit id="c9c5c2d3363e18dd4be009fb8cdb1d42561049b3" translate="yes" xml:space="preserve">
          <source>A special-interest-group for discussion of testing, and testing tools, in Python.</source>
          <target state="translated">一个专门讨论Python测试和测试工具的兴趣小组。</target>
        </trans-unit>
        <trans-unit id="ad1a92f0cb821225e4017a94010fdf1040669506" translate="yes" xml:space="preserve">
          <source>A specialized alternative to &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt;, for use when deploying on Microsoft&amp;rsquo;s IIS web server, without having set the config allowPathInfo option (IIS&amp;gt;=7) or metabase allowPathInfoForScriptMappings (IIS&amp;lt;7).</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; 的&lt;/a&gt;一种特殊替代物，用于在Microsoft IIS Web服务器上进行部署时使用，而无需设置config allowPathInfo选项（IIS&amp;gt; = 7）或配置数据库allowPathInfoForScriptMappings（IIS &amp;lt;7）。</target>
        </trans-unit>
        <trans-unit id="c4118a2f3f478f32d9f31601e7190c8ce65ab75b" translate="yes" xml:space="preserve">
          <source>A specification for a module&amp;rsquo;s import-system-related state. This is typically exposed as the module&amp;rsquo;s &lt;code&gt;__spec__&lt;/code&gt; attribute. In the descriptions below, the names in parentheses give the corresponding attribute available directly on the module object. E.g. &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt;. Note however that while the &lt;em&gt;values&lt;/em&gt; are usually equivalent, they can differ since there is no synchronization between the two objects. Thus it is possible to update the module&amp;rsquo;s &lt;code&gt;__path__&lt;/code&gt; at runtime, and this will not be automatically reflected in &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt;.</source>
          <target state="translated">模块与导入系统有关的状态的规范。这通常作为模块的 &lt;code&gt;__spec__&lt;/code&gt; 属性公开。在下面的描述中，括号中的名称给出了直接在模块对象上可用的相应属性。例如 &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt; 。但是请注意，尽管这些&lt;em&gt;值&lt;/em&gt;通常是等效的，但由于两个对象之间没有同步，因此它们可以有所不同。因此，可以在运行时更新模块的 &lt;code&gt;__path__&lt;/code&gt; ，而这不会自动反映在 &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68f5cd32463c3d785efa4f8d8fce98c066a6f661" translate="yes" xml:space="preserve">
          <source>A specification of MMDF format from the documentation of tin, a newsreader.</source>
          <target state="translated">从锡的文档中得到的MMDF格式的规范,一个新闻阅读器。</target>
        </trans-unit>
        <trans-unit id="3babd4b55bc7cb772fec830be58f3b1bf01d70a8" translate="yes" xml:space="preserve">
          <source>A specification of the Babyl format.</source>
          <target state="translated">Babyl格式的规范。</target>
        </trans-unit>
        <trans-unit id="880abe5218724ebf38706b93b963643ddd6c46d2" translate="yes" xml:space="preserve">
          <source>A specification of the format and its variations.</source>
          <target state="translated">格式及其变化的规格;</target>
        </trans-unit>
        <trans-unit id="3727d1f65952e6742ce409e5f8d5ad37e6940601" translate="yes" xml:space="preserve">
          <source>A specification of the format, with details on locking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfb1789ebf20df3a87c52728764572e221f5901" translate="yes" xml:space="preserve">
          <source>A specification of the format. Describes a common extension for supporting folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e598ccfa02f6f982d35271d6d8413a2dcd8d0e9" translate="yes" xml:space="preserve">
          <source>A stack traceback such as is provided by &lt;a href=&quot;traceback#traceback.print_stack&quot;&gt;&lt;code&gt;traceback.print_stack()&lt;/code&gt;&lt;/a&gt;, showing the call hierarchy.</source>
          <target state="translated">诸如&lt;a href=&quot;traceback#traceback.print_stack&quot;&gt; &lt;code&gt;traceback.print_stack()&lt;/code&gt; &lt;/a&gt;提供的堆栈跟踪，显示了调用层次结构。</target>
        </trans-unit>
        <trans-unit id="920378f02b4726cf356a62a8babd3e02c63917c6" translate="yes" xml:space="preserve">
          <source>A state specification is a sequence of state names, optionally prefixed with an exclamation point indicating that the bit is off.</source>
          <target state="translated">状态规范是一个状态名称的序列,可以选择在前面加一个感叹号,表示该位是关闭的。</target>
        </trans-unit>
        <trans-unit id="6ef4ebab996d1f45a1c0cae57a6fb9b310520e99" translate="yes" xml:space="preserve">
          <source>A static method can be called either on the class (such as &lt;code&gt;C.f()&lt;/code&gt;) or on an instance (such as &lt;code&gt;C().f()&lt;/code&gt;).</source>
          <target state="translated">可以在类（例如 &lt;code&gt;C.f()&lt;/code&gt; ）或实例（例如 &lt;code&gt;C().f()&lt;/code&gt; ）上调用静态方法。</target>
        </trans-unit>
        <trans-unit id="174b86cd307a93d7ede9985e59dfb55608a534c0" translate="yes" xml:space="preserve">
          <source>A static method does not receive an implicit first argument. To declare a static method, use this idiom:</source>
          <target state="translated">静态方法不接收隐式的第一个参数。要声明一个静态方法,请使用这个成语。</target>
        </trans-unit>
        <trans-unit id="858fb724027cfca291b2dfaa1173abe4a25c8c00" translate="yes" xml:space="preserve">
          <source>A static method which returns a callable that creates a lazy loader. This is meant to be used in situations where the loader is passed by class instead of by instance.</source>
          <target state="translated">一个静态方法,它返回一个可调用的方法来创建一个懒惰加载器。该方法用于通过类而不是实例传递加载器的情况。</target>
        </trans-unit>
        <trans-unit id="6598324a6503c84ca67a35b1e37f66321d0cc98b" translate="yes" xml:space="preserve">
          <source>A stream implementation using an in-memory bytes buffer. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;. The buffer is discarded when the &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">使用内存中字节缓冲区的流实现。它继承了&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;。当调用&lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法时，缓冲区被丢弃。</target>
        </trans-unit>
        <trans-unit id="76435fdba1ae6e1ec5de2745cd624d720dc07d8c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional mask, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the mask can be either a single number, which means it&amp;rsquo;s a &lt;em&gt;prefix&lt;/em&gt;, or a string representation of an IPv4 address. If it&amp;rsquo;s the latter, the mask is interpreted as a &lt;em&gt;net mask&lt;/em&gt; if it starts with a non-zero field, or as a &lt;em&gt;host mask&lt;/em&gt; if it starts with a zero field, with the single exception of an all-zero mask which is treated as a &lt;em&gt;net mask&lt;/em&gt;. If no mask is provided, it&amp;rsquo;s considered to be &lt;code&gt;/32&lt;/code&gt;.</source>
          <target state="translated">由IP地址和可选掩码组成的字符串，用斜杠（ &lt;code&gt;/&lt;/code&gt; ）分隔。 IP地址是网络地址，掩码可以是单个数字，这意味着它是IPv4地址的&lt;em&gt;前缀&lt;/em&gt;或字符串表示。如果是后者，则掩码以非零字段开头解释为&lt;em&gt;网络掩码，&lt;/em&gt;如果&lt;em&gt;掩码&lt;/em&gt;以零字段开头则解释为&lt;em&gt;主机掩码&lt;/em&gt;，唯一的例外是全零掩码，它被视为一个&lt;em&gt;网络掩码&lt;/em&gt;。如果未提供掩码，则将其视为 &lt;code&gt;/32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c0c3e7a735e19323cbd003b6b63d79aa63ae1c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional prefix length, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the prefix length must be a single number, the &lt;em&gt;prefix&lt;/em&gt;. If no prefix length is provided, it&amp;rsquo;s considered to be &lt;code&gt;/128&lt;/code&gt;.</source>
          <target state="translated">由IP地址和可选的前缀长度组成的字符串，以斜杠（ &lt;code&gt;/&lt;/code&gt; ）分隔。IP地址是网络地址，前缀长度必须是一个数字，即&lt;em&gt;prefix&lt;/em&gt;。如果未提供前缀长度，则将其视为 &lt;code&gt;/128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="237deb5e98fd45357a17f1768376efe3e60e90b8" translate="yes" xml:space="preserve">
          <source>A string consisting of eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons. This describes an &lt;em&gt;exploded&lt;/em&gt; (longhand) notation. The string can also be &lt;em&gt;compressed&lt;/em&gt; (shorthand notation) by various means. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt; for details. For example, &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; can be compressed to &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt;.</source>
          <target state="translated">由八组四个十六进制数字组成的字符串，每组代表16位。各组之间用冒号隔开。这描述了一种&lt;em&gt;分解&lt;/em&gt;（竖写）符号。字符串也可以通过各种方式进行&lt;em&gt;压缩&lt;/em&gt;（简写）。有关详细信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt;。例如， &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; 可以压缩为 &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef6d4595a0913292c36ecd58b3a3568198db4c5" translate="yes" xml:space="preserve">
          <source>A string containing a diagnostic message associated with the fault.</source>
          <target state="translated">包含与故障相关的诊断信息的字符串。</target>
        </trans-unit>
        <trans-unit id="81b39e8a05161f630901941638fda04c2b6f39c1" translate="yes" xml:space="preserve">
          <source>A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab.</source>
          <target state="translated">包含所有被认为是空白字符的ASCII字符的字符串,包括空格、制表符、换行符、回车符、换页符和垂直制表符。包括空格、制表符、换行符、回车符、换页符和垂直制表符。</target>
        </trans-unit>
        <trans-unit id="02bf24f6c9f2fbd3f9a2ca3b6ce7459c45d991f7" translate="yes" xml:space="preserve">
          <source>A string containing the copyright pertaining to the Python interpreter.</source>
          <target state="translated">一个包含Python解释器版权的字符串。</target>
        </trans-unit>
        <trans-unit id="602f371cbcfdb3cf6cfc5a0f24dd9a3734e536d7" translate="yes" xml:space="preserve">
          <source>A string containing the example&amp;rsquo;s source code. This source code consists of a single Python statement, and always ends with a newline; the constructor adds a newline when necessary.</source>
          <target state="translated">包含示例源代码的字符串。此源代码包含一个Python语句，并且始终以换行符结尾；构造函数在必要时添加换行符。</target>
        </trans-unit>
        <trans-unit id="e1f80f8d0c2fd10cd8656f15485d121546bf45d4" translate="yes" xml:space="preserve">
          <source>A string containing the format (in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module style) for each element in the view. A memoryview can be created from exporters with arbitrary format strings, but some methods (e.g. &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist()&lt;/code&gt;&lt;/a&gt;) are restricted to native single element formats.</source>
          <target state="translated">一个字符串，其中包含视图中每个元素的格式（以&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;模块样式表示）。可以使用任意格式的字符串从导出器创建一个memoryview，但是某些方法（例如&lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist()&lt;/code&gt; &lt;/a&gt;）仅限于本机单元素格式。</target>
        </trans-unit>
        <trans-unit id="5497a158149dccf8e4b9ad551b13d3d9fcf2ffc0" translate="yes" xml:space="preserve">
          <source>A string containing the version number of the Python interpreter plus additional information on the build number and compiler used. This string is displayed when the interactive interpreter is started. Do not extract version information out of it, rather, use &lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;version_info&lt;/code&gt;&lt;/a&gt; and the functions provided by the &lt;a href=&quot;platform#module-platform&quot;&gt;&lt;code&gt;platform&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">一个字符串，其中包含Python解释器的版本号以及有关内部版本号和使用的编译器的其他信息。启动交互式解释器时，将显示此字符串。不要从中提取版本信息，而要使用&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;version_info&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;platform#module-platform&quot;&gt; &lt;code&gt;platform&lt;/code&gt; &lt;/a&gt;模块提供的功能。</target>
        </trans-unit>
        <trans-unit id="87de8fd8a95197f57121e5b7786f6335363597fb" translate="yes" xml:space="preserve">
          <source>A string describing the software name and version of the NNTP server, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if not advertised by the server.</source>
          <target state="translated">一个字符串，描述NNTP服务器的软件名称和版本；如果服务器未发布，则为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edbd00479009ac29a277bcdb7f7f622f3cf29480" translate="yes" xml:space="preserve">
          <source>A string describing the specific codec error.</source>
          <target state="translated">描述特定编解码器错误的字符串。</target>
        </trans-unit>
        <trans-unit id="5c10f3d5bb16c2fb415030d97d9657d81442e989" translate="yes" xml:space="preserve">
          <source>A string for the fully-qualified name of the module.</source>
          <target state="translated">模块的全称字符串。</target>
        </trans-unit>
        <trans-unit id="bd20de9160337cf7d4615529ad2c990a8d28695a" translate="yes" xml:space="preserve">
          <source>A string giving the absolute path of the executable binary for the Python interpreter, on systems where this makes sense. If Python is unable to retrieve the real path to its executable, &lt;a href=&quot;#sys.executable&quot;&gt;&lt;code&gt;sys.executable&lt;/code&gt;&lt;/a&gt; will be an empty string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">一个字符串，给出有意义的系统上Python解释器的可执行二进制文件的绝对路径。如果Python无法检索其可执行文件的真实路径，则&lt;a href=&quot;#sys.executable&quot;&gt; &lt;code&gt;sys.executable&lt;/code&gt; &lt;/a&gt;将为空字符串或 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82a5b3b17625dc398e0887b40698af61a1e88431" translate="yes" xml:space="preserve">
          <source>A string giving the complete internal subset from the document. This does not include the brackets which enclose the subset. If the document has no internal subset, this should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">给出文档完整内部子集的字符串。这不包括包围子集的括号。如果文档没有内部子集，则应为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82c2539aafdf888e5c8ef7fece2e98e2d2f074a7" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform independent Python files are installed; by default, this is the string &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. The main collection of Python library modules is installed in the directory &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; while the platform independent header files (all except &lt;code&gt;pyconfig.h&lt;/code&gt;) are stored in &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">一个字符串，提供特定于站点的目录前缀，在其中安装了平台无关的Python文件；默认情况下，这是字符串 &lt;code&gt;'/usr/local'&lt;/code&gt; 。可以在构建时使用&lt;strong&gt;configure&lt;/strong&gt;脚本的 &lt;code&gt;--prefix&lt;/code&gt; 参数进行设置。 Python库模块的主要集合安装在 &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; / lib / python &lt;em&gt;X.Y中，&lt;/em&gt;而平台无关的头文件（ &lt;code&gt;pyconfig.h&lt;/code&gt; 除外）都存储在 &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; / include / python &lt;em&gt;X.Y中&lt;/em&gt;，其中&lt;em&gt;XY&lt;/em&gt;是Python的版本号，例如 &lt;code&gt;3.2&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbea00c5fe6b20a57a6af3a243d22cb8c28d88f0" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform-dependent Python files are installed; by default, this is also &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--exec-prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. Specifically, all configuration files (e.g. the &lt;code&gt;pyconfig.h&lt;/code&gt; header file) are installed in the directory &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt;, and shared library modules are installed in &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">一个字符串，提供特定于站点的目录前缀，在其中安装了与平台相关的Python文件；默认情况下，它也是 &lt;code&gt;'/usr/local'&lt;/code&gt; 。可以在构建时使用&lt;strong&gt;configure&lt;/strong&gt;脚本的 &lt;code&gt;--exec-prefix&lt;/code&gt; 参数进行设置。具体来说，所有配置文件（例如 &lt;code&gt;pyconfig.h&lt;/code&gt; 头文件）都安装在目录 &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt; / lib / python &lt;em&gt;X.Y&lt;/em&gt; / config中，共享库模块安装在 &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt; / lib / python &lt;em&gt;X.Y&lt;/em&gt; / lib-dynload中，其中&lt;em&gt;XY&lt;/em&gt;是Python的版本号，例如 &lt;code&gt;3.2&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c8652dd6a5ac42f8da95a3a336a8e2fe1700b98" translate="yes" xml:space="preserve">
          <source>A string identifying what kind of data this element represents (the element type, in other words).</source>
          <target state="translated">标识该元素代表何种数据的字符串(换句话说,元素类型)。</target>
        </trans-unit>
        <trans-unit id="e099a6c12e8ac23155a4c961ffd7c4719169caa2" translate="yes" xml:space="preserve">
          <source>A string in decimal-dot notation, consisting of four decimal integers in the inclusive range 0&amp;ndash;255, separated by dots (e.g. &lt;code&gt;192.168.0.1&lt;/code&gt;). Each integer represents an octet (byte) in the address. Leading zeroes are tolerated only for values less than 8 (as there is no ambiguity between the decimal and octal interpretations of such strings).</source>
          <target state="translated">十进制小数点形式的字符串，由四个十进制整数组成，范围在0到255之间（包括0和255），并用点分隔（例如 &lt;code&gt;192.168.0.1&lt;/code&gt; ）。每个整数代表地址中的一个八位位组（字节）。仅对于小于8的值才允许使用前导零（因为此类字符串的十进制和八进制解释之间没有歧义）。</target>
        </trans-unit>
        <trans-unit id="98d779e7a9a7548a374142ec0fd14b12dcce04f0" translate="yes" xml:space="preserve">
          <source>A string indicating how the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function behaves for floats. If the string has value &lt;code&gt;'short'&lt;/code&gt; then for a finite float &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;repr(x)&lt;/code&gt; aims to produce a short string with the property that &lt;code&gt;float(repr(x)) == x&lt;/code&gt;. This is the usual behaviour in Python 3.1 and later. Otherwise, &lt;code&gt;float_repr_style&lt;/code&gt; has value &lt;code&gt;'legacy'&lt;/code&gt; and &lt;code&gt;repr(x)&lt;/code&gt; behaves in the same way as it did in versions of Python prior to 3.1.</source>
          <target state="translated">一个字符串，指示&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;函数对浮点的行为。如果字符串的值是 &lt;code&gt;'short'&lt;/code&gt; ,那么对于一个有限的float &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;repr(x)&lt;/code&gt; 的目标是产生一个带有 &lt;code&gt;float(repr(x)) == x&lt;/code&gt; 属性的短字符串。这是Python 3.1及更高版本中的常见行为。否则， &lt;code&gt;float_repr_style&lt;/code&gt; 的值为 &lt;code&gt;'legacy'&lt;/code&gt; ,并且 &lt;code&gt;repr(x)&lt;/code&gt; 的行为方式与3.1之前的Python版本相同。</target>
        </trans-unit>
        <trans-unit id="2f9a9d4483639b8e4c8302ccccdaba76f46139ac" translate="yes" xml:space="preserve">
          <source>A string indicating the fault type.</source>
          <target state="translated">表示故障类型的字符串。</target>
        </trans-unit>
        <trans-unit id="c2c502f394d7092bcce74de311739e93f611cf7a" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the OpenSSL submodule in which the error occurred, such as &lt;code&gt;SSL&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt; or &lt;code&gt;X509&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">一个字符串助记符，指示发生错误的OpenSSL子模块，例如 &lt;code&gt;SSL&lt;/code&gt; ， &lt;code&gt;PEM&lt;/code&gt; 或 &lt;code&gt;X509&lt;/code&gt; 。可能值的范围取决于OpenSSL版本。</target>
        </trans-unit>
        <trans-unit id="430973647ef865594ce46611eb822fdc420d4549" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the reason this error occurred, for example &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">指示此错误发生原因的字符串助记符，例如 &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt; 。可能值的范围取决于OpenSSL版本。</target>
        </trans-unit>
        <trans-unit id="ead8e2705a51951c91f9ddcda6d821dc670588f9" translate="yes" xml:space="preserve">
          <source>A string name identifying the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;. Typically, this is the name of the object or file that the test was extracted from.</source>
          <target state="translated">标识&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; 的&lt;/a&gt;字符串名称。通常，这是从中提取测试的对象或文件的名称。</target>
        </trans-unit>
        <trans-unit id="daef7957ccd37511d60fee6ca46be1ff15a1529c" translate="yes" xml:space="preserve">
          <source>A string of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; read before the end of stream was reached.</source>
          <target state="translated">在到达流末尾之前读取的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;字符串。</target>
        </trans-unit>
        <trans-unit id="2d32a9df8f0c11fad8fb171523d540f600ab323b" translate="yes" xml:space="preserve">
          <source>A string of the form #n, where n is an integer, specifying the nth display column.</source>
          <target state="translated">格式为#n的字符串,其中n是一个整数,指定第n个显示列。</target>
        </trans-unit>
        <trans-unit id="0c4df2b65593c46afd8e675b2cb2d3a19b9a1855" translate="yes" xml:space="preserve">
          <source>A string or a tuple &lt;code&gt;(id, unit)&lt;/code&gt; is used for the &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; protocol of the &lt;code&gt;PF_SYSTEM&lt;/code&gt; family. The string is the name of a kernel control using a dynamically-assigned ID. The tuple can be used if ID and unit number of the kernel control are known or if a registered ID is used.</source>
          <target state="translated">字符串或元组 &lt;code&gt;(id, unit)&lt;/code&gt; 用于 &lt;code&gt;PF_SYSTEM&lt;/code&gt; 系列的 &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; 协议。该字符串是使用动态分配的ID的内核控件的名称。如果已知内核控件的ID和单元号或使用已注册的ID，则可以使用元组。</target>
        </trans-unit>
        <trans-unit id="a84ecaf3012782764f7426a5eec841f9b5ad7aba" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the mask in prefix notation.</source>
          <target state="translated">用前缀符号表示掩码的接口的字符串。</target>
        </trans-unit>
        <trans-unit id="72998dbff76ca26cb4e1a93d0ac16de996142954" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a host mask.</source>
          <target state="translated">以网络作为主机掩码的接口的字符串表示。</target>
        </trans-unit>
        <trans-unit id="7371903e755bf49dda7112025b476547bae7d6ac" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a net mask.</source>
          <target state="translated">以网络为网络掩码的接口的字符串表示。</target>
        </trans-unit>
        <trans-unit id="bf9731d346ddf0d65f9d0c39679778dee1e3fa12" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in host mask notation.</source>
          <target state="translated">网络的字符串表示,掩码用主机掩码符号表示。</target>
        </trans-unit>
        <trans-unit id="7568a7359cb2750b66d47402cfff82e081404d9b" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in net mask notation.</source>
          <target state="translated">网络的字符串表示,掩码用net mask符号表示。</target>
        </trans-unit>
        <trans-unit id="316bb3be50867216649ff211d2dca7247c501409" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in prefix notation.</source>
          <target state="translated">网络的字符串表示,掩码用前缀符号表示。</target>
        </trans-unit>
        <trans-unit id="32e0575ba9f4056eab3aabb998ae5ff3a9f3c8fd" translate="yes" xml:space="preserve">
          <source>A string representing the (local or global) root, if any:</source>
          <target state="translated">代表(本地或全局)根的字符串,如果有的话。</target>
        </trans-unit>
        <trans-unit id="2ed4f64a64d2fb6fad9a60578469fcecde96fc85" translate="yes" xml:space="preserve">
          <source>A string representing the drive letter or name, if any:</source>
          <target state="translated">代表驱动器字母或名称的字符串(如果有)。</target>
        </trans-unit>
        <trans-unit id="06f0d5eec8d1f9fce8676408e0ba9c4fd328f28f" translate="yes" xml:space="preserve">
          <source>A string representing the final path component, excluding the drive and root, if any:</source>
          <target state="translated">代表最终路径组件的字符串,不包括驱动器和根节点(如果有)。</target>
        </trans-unit>
        <trans-unit id="7d594412e6bf530edd194eaef7b660e57dfa27f5" translate="yes" xml:space="preserve">
          <source>A string surrounded by double quotation marks is interpreted as a single argument, regardless of white space contained within. A quoted string can be embedded in an argument.</source>
          <target state="translated">一个由双引号包围的字符串被解释为一个单一的参数,而不考虑其中包含的空白。引用的字符串可以嵌入一个参数中。</target>
        </trans-unit>
        <trans-unit id="2066dc66a7df97de21bbc1e433f38dd5b78b7fbb" translate="yes" xml:space="preserve">
          <source>A string that identifies the value name</source>
          <target state="translated">识别值名称的字符串</target>
        </trans-unit>
        <trans-unit id="39ff402a5674ecd7c70c6cd0871acdfc556d3c03" translate="yes" xml:space="preserve">
          <source>A string to issue as an intro or banner. May be overridden by giving the &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; method an argument.</source>
          <target state="translated">要作为简介或横幅发布的字符串。可以通过为&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;方法提供参数来覆盖它。</target>
        </trans-unit>
        <trans-unit id="44fcf35da621f4ef926db56e062b11dbffd03933" translate="yes" xml:space="preserve">
          <source>A string used for identification purposes only. It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.</source>
          <target state="translated">仅用于识别目的的字符串。它没有语义。多个线程可以被赋予相同的名称。初始名称由构造函数设置。</target>
        </trans-unit>
        <trans-unit id="85f33d1a5e2aa41160314a36dac932215ed021c5" translate="yes" xml:space="preserve">
          <source>A string with all available type codes.</source>
          <target state="translated">一个包含所有可用类型代码的字符串。</target>
        </trans-unit>
        <trans-unit id="26443c5e3539322fe9c2273c8a56fe833ba27cec" translate="yes" xml:space="preserve">
          <source>A string, a tuple of strings, or &lt;code&gt;None&lt;/code&gt;, indicating the newlines translated so far. Depending on the implementation and the initial constructor flags, this may not be available.</source>
          <target state="translated">字符串，字符串元组或 &lt;code&gt;None&lt;/code&gt; ，表示到目前为止已翻译的换行符。取决于实现和初始构造函数标志，这可能不可用。</target>
        </trans-unit>
        <trans-unit id="640b082b179874e919a8b0a281dc24c559b3db92" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is aborted by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;.</source>
          <target state="translated">当对等方中止连接尝试时引发的&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;的子类。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNABORTED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73ab5331b6ae01254fe730d043adfa27dda78b4e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is refused by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;.</source>
          <target state="translated">对等方拒绝连接尝试时引发的&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;的子类。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNREFUSED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d2239001f6127e695694a9bd00552f746a9eda6" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection is reset by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;的子类，当对等方重置连接时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNRESET&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a2e5d9d43ce04ad29c4fb17b5325b927b2b9208" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when trying to write on a pipe while the other end has been closed, or trying to write on a socket which has been shutdown for writing. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt; and &lt;code&gt;ESHUTDOWN&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;的子类，当在另一端已关闭时尝试在管道上进行写操作，或试图在已关闭进行写操作的套接字上进行写操作时，抛出此错误。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EPIPE&lt;/code&gt; 和 &lt;code&gt;ESHUTDOWN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53f3c34abc78d78f328fd281b87705eb6751b9a7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; which is raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; when a module could not be located. It is also raised when &lt;code&gt;None&lt;/code&gt; is found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;的子类，当找不到模块时，将通过&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;引发此子类。在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;找不到 &lt;code&gt;None&lt;/code&gt; 时，也会引发此错误。</target>
        </trans-unit>
        <trans-unit id="a59a5d6423ad78bd4b05a33b780bbf6dd737d4c1" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; which is raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; when a module could not be located. It is also raised when &lt;code&gt;None&lt;/code&gt; is found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222e66c57cf05e2439f0427e11ca5b7487c3506e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; that raises an exception as soon as a failure is encountered. If an unexpected exception occurs, an &lt;a href=&quot;#doctest.UnexpectedException&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the original exception. If the output doesn&amp;rsquo;t match, then a &lt;a href=&quot;#doctest.DocTestFailure&quot;&gt;&lt;code&gt;DocTestFailure&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the actual output.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;的子类，在遇到故障后立即引发异常。如果发生意外异常，则会引发&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt; &lt;code&gt;UnexpectedException&lt;/code&gt; &lt;/a&gt;异常，其中包含测试，示例和原始异常。如果输出不匹配，则会引发&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt; &lt;code&gt;DocTestFailure&lt;/code&gt; &lt;/a&gt;异常，其中包含测试，示例和实际输出。</target>
        </trans-unit>
        <trans-unit id="561f15934e1163b4237e193715adac94cb87c0b1" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt;&lt;code&gt;AddressHeader&lt;/code&gt;&lt;/a&gt; that adds one additional attribute:</source>
          <target state="translated">&lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt; &lt;code&gt;AddressHeader&lt;/code&gt; &lt;/a&gt;的子类，添加一个附加属性：</target>
        </trans-unit>
        <trans-unit id="7f781581e0829cb990d0f16eb16dbe041508d842" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are &lt;em&gt;multipart&lt;/em&gt;. Optional &lt;em&gt;_subtype&lt;/em&gt; defaults to &lt;em&gt;mixed&lt;/em&gt;, but can be used to specify the subtype of the message. A &lt;em&gt;Content-Type&lt;/em&gt; header of &lt;em&gt;multipart/_subtype&lt;/em&gt; will be added to the message object. A &lt;em&gt;MIME-Version&lt;/em&gt; header will also be added.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;的子类，这是MIME消息的中间基类，它是&lt;em&gt;多部分的&lt;/em&gt;。可选的&lt;em&gt;_subtype&lt;/em&gt;默认为&lt;em&gt;mixed&lt;/em&gt;，但可用于指定消息的子类型。一个&lt;em&gt;multipart / _subtype的&lt;/em&gt;&lt;em&gt;Content-Type&lt;/em&gt;头将被添加到消息对象。还将添加一个&lt;em&gt;MIME-Version&lt;/em&gt;标头。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee4824f272606ae6cc4c809fb2df5c25368575e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are not &lt;em&gt;multipart&lt;/em&gt;. The primary purpose of this class is to prevent the use of the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; method, which only makes sense for &lt;em&gt;multipart&lt;/em&gt; messages. If &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; is called, a &lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt;&lt;code&gt;MultipartConversionError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;的子类，这是不是&lt;em&gt;多部分的&lt;/em&gt; MIME消息的中间基类。此类的主要目的是防止使用&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;方法，该方法仅对&lt;em&gt;多部分&lt;/em&gt;消息有意义。如果调用&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;，则会引发&lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt; &lt;code&gt;MultipartConversionError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="f7a8f392a3412438a51c8f0c737eaf469cd9a645" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; class is used to represent MIME message objects of major type &lt;em&gt;application&lt;/em&gt;. &lt;em&gt;_data&lt;/em&gt; is a string containing the raw byte data. Optional &lt;em&gt;_subtype&lt;/em&gt; specifies the MIME subtype and defaults to &lt;em&gt;octet-stream&lt;/em&gt;.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;类被用来表示主要类型的MIME消息对象&lt;em&gt;应用&lt;/em&gt;。&lt;em&gt;_data&lt;/em&gt;是包含原始字节数据的字符串。可选的&lt;em&gt;_subtype&lt;/em&gt;指定MIME子类型，默认为&lt;em&gt;octet-stream&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8853b524d3a42ef795bb232d70818c082d728737" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;audio&lt;/em&gt;. &lt;em&gt;_audiodata&lt;/em&gt; is a string containing the raw audio data. If this data can be decoded by the standard Python module &lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt;&lt;code&gt;sndhdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the audio subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;类用于创建主要类型的MIME消息对象&lt;em&gt;的音频&lt;/em&gt;。&lt;em&gt;_audiodata&lt;/em&gt;是包含原始音频数据的字符串。如果标准的Python模块&lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt; &lt;code&gt;sndhdr&lt;/code&gt; &lt;/a&gt;可以解码此数据，则子类型将自动包含在&lt;em&gt;Content-Type&lt;/em&gt;标头中。否则，您可以通过&lt;em&gt;_subtype&lt;/em&gt;参数明确指定音频子类型。如果无法猜测次要类型并且未提供&lt;em&gt;_subtype&lt;/em&gt;，则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a76383a2a93d9794da9b01ccefe023baee5d2eb5" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;image&lt;/em&gt;. &lt;em&gt;_imagedata&lt;/em&gt; is a string containing the raw image data. If this data can be decoded by the standard Python module &lt;a href=&quot;imghdr#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the image subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;类用于创建主要类型的MIME消息对象&lt;em&gt;图像&lt;/em&gt;。&lt;em&gt;_imagedata&lt;/em&gt;是包含原始图像数据的字符串。如果标准的Python模块&lt;a href=&quot;imghdr#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;可以解码此数据，则子类型将自动包含在&lt;em&gt;Content-Type&lt;/em&gt;标头中。否则，您可以通过&lt;em&gt;_subtype&lt;/em&gt;参数显式指定图像子类型。如果无法猜测次要类型并且未提供&lt;em&gt;_subtype&lt;/em&gt;，则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9234b5d253e940123aa4c9a0f87439815009184" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt;&lt;code&gt;MIMEMessage&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of main type &lt;em&gt;message&lt;/em&gt;. &lt;em&gt;_msg&lt;/em&gt; is used as the payload, and must be an instance of class &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; (or a subclass thereof), otherwise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt; &lt;code&gt;MIMEMessage&lt;/code&gt; &lt;/a&gt;类用于创建主要类型的MIME对象&lt;em&gt;消息&lt;/em&gt;。&lt;em&gt;_msg&lt;/em&gt;用作有效负载，并且必须是&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;类（或其子类）的实例，否则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3161c9179debd4f7d6df131db3c1815ed54800e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of major type &lt;em&gt;text&lt;/em&gt;. &lt;em&gt;_text&lt;/em&gt; is the string for the payload. &lt;em&gt;_subtype&lt;/em&gt; is the minor type and defaults to &lt;em&gt;plain&lt;/em&gt;. &lt;em&gt;_charset&lt;/em&gt; is the character set of the text and is passed as an argument to the &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt; constructor; it defaults to &lt;code&gt;us-ascii&lt;/code&gt; if the string contains only &lt;code&gt;ascii&lt;/code&gt; code points, and &lt;code&gt;utf-8&lt;/code&gt; otherwise. The &lt;em&gt;_charset&lt;/em&gt; parameter accepts either a string or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;，该&lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;类用于创建主要类型的MIME对象&lt;em&gt;文本&lt;/em&gt;。&lt;em&gt;_text&lt;/em&gt;是有效负载的字符串。&lt;em&gt;_subtype&lt;/em&gt;是次要类型，默认为&lt;em&gt;plain&lt;/em&gt;。&lt;em&gt;_charset&lt;/em&gt;是文本的字符集，并作为参数传递给&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;构造函数；如果字符串仅包含 &lt;code&gt;ascii&lt;/code&gt; 代码点，则默认为 &lt;code&gt;us-ascii&lt;/code&gt; ，否则为 &lt;code&gt;utf-8&lt;/code&gt; 。该&lt;em&gt;_CHARSET&lt;/em&gt;参数可以接受字符串或&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;的实例。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43b95a03a2324568afb62decc2f58316824119be" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; that uses SSL for communication with secure servers. Default port is &lt;code&gt;443&lt;/code&gt;. If &lt;em&gt;context&lt;/em&gt; is specified, it must be a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance describing the various SSL options.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt;的子类，它使用SSL与安全服务器进行通信。默认端口是 &lt;code&gt;443&lt;/code&gt; 。如果指定了&lt;em&gt;context&lt;/em&gt;，则它必须是描述各种SSL选项的&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7bf644cd1aad145a3aa43ee0250025e9df724f72" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;, raised if a port is given and is either non-numeric or empty.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;的子类，如果提供了端口，则为非数字或为空，则引发此异常。</target>
        </trans-unit>
        <trans-unit id="0aab6c24af3dcd985f80023bae2e93b04faff96c" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="aa5fefe570554e4bd2277e00d553af0f206f08c0" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if a server responds with a HTTP status code that we don&amp;rsquo;t understand.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;的子类。如果服务器使用我们不理解的HTTP状态代码响应，则引发。</target>
        </trans-unit>
        <trans-unit id="666637de6b4e0b5e5cc67cbbb892eef7e1644dad" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if an excessively long line is received in the HTTP protocol from the server.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;的子类。如果从服务器以HTTP协议接收到过长的行，则引发。</target>
        </trans-unit>
        <trans-unit id="f44a0b9f57e50137cb8e15ddcd43d03893edce26" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt;&lt;code&gt;ImproperConnectionState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt; &lt;code&gt;ImproperConnectionState&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="29db90dbf583d1a27b500d573a47d6c5b0ee449d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Babyl format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Babyl格式的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;的子类。参数&lt;em&gt;工厂&lt;/em&gt;是一个可调用对象，它接受类似文件的消息表示形式（其行为就像在二进制模式下打开一样）并返回自定义表示形式。如果&lt;em&gt;factory&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt; &lt;code&gt;BabylMessage&lt;/code&gt; &lt;/a&gt;将用作默认消息表示形式。如果&lt;em&gt;create&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则创建邮箱（如果该邮箱不存在）。</target>
        </trans-unit>
        <trans-unit id="5af2e2732c7181fc36ed83d98f0af92e460cbe98" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MH format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MH格式的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;的子类。参数&lt;em&gt;工厂&lt;/em&gt;是一个可调用对象，它接受类似文件的消息表示形式（其行为就像在二进制模式下打开一样）并返回自定义表示形式。如果&lt;em&gt;factory&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，&lt;a href=&quot;#mailbox.MHMessage&quot;&gt; &lt;code&gt;MHMessage&lt;/code&gt; &lt;/a&gt;用作默认消息表示形式。如果&lt;em&gt;create&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则创建邮箱（如果该邮箱不存在）。</target>
        </trans-unit>
        <trans-unit id="0fd3ef2fae5b24d18c1176dd0499befaf845516b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MMDF format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MMDF格式的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;的子类。参数&lt;em&gt;工厂&lt;/em&gt;是一个可调用对象，它接受类似文件的消息表示形式（其行为就像在二进制模式下打开一样）并返回自定义表示形式。如果&lt;em&gt;factory&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; &lt;/a&gt;用作默认消息表示形式。如果&lt;em&gt;create&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则创建邮箱（如果该邮箱不存在）。</target>
        </trans-unit>
        <trans-unit id="92230b6718b8395f043cbdcaeb410fb38bf56f9f" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Maildir format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Maildir格式的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;的子类。参数&lt;em&gt;工厂&lt;/em&gt;是一个可调用对象，它接受类似文件的消息表示形式（其行为就像在二进制模式下打开一样）并返回自定义表示形式。如果&lt;em&gt;factory&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt; &lt;code&gt;MaildirMessage&lt;/code&gt; &lt;/a&gt;将用作默认消息表示形式。如果&lt;em&gt;create&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则创建邮箱（如果该邮箱不存在）。</target>
        </trans-unit>
        <trans-unit id="b1e96b979a7ade703d26a2f68e58f4220e80f537" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in mbox format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">mbox格式的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;的子类。参数&lt;em&gt;工厂&lt;/em&gt;是一个可调用对象，它接受类似文件的消息表示形式（其行为就像在二进制模式下打开一样）并返回自定义表示形式。如果&lt;em&gt;factory&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt;用作默认消息表示形式。如果&lt;em&gt;create&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则创建邮箱（如果该邮箱不存在）。</target>
        </trans-unit>
        <trans-unit id="e91afc87f4c90d053ee511b94bc062b870505830" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the synchronization of processes. Objects of this type are returned by &lt;code&gt;multiprocessing.Manager()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;的子类，可用于进程同步。这种类型的对象由 &lt;code&gt;multiprocessing.Manager()&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="0baa77c5c3f931861b3c6e87c3ba1ac461b5a0fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt;&lt;code&gt;PurePosixPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt; &lt;code&gt;PurePosixPath&lt;/code&gt; 的&lt;/a&gt;子类，该类表示具体的非Windows文件系统路径：</target>
        </trans-unit>
        <trans-unit id="bbae0175d81f10a8b69cdca941e43651b40075fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt;&lt;code&gt;PureWindowsPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt; &lt;code&gt;PureWindowsPath&lt;/code&gt; 的&lt;/a&gt;子类，该类表示具体的Windows文件系统路径：</target>
        </trans-unit>
        <trans-unit id="787d261e83a0bc5621effc394a2c8c29f282bc76" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this class represents concrete paths of the system&amp;rsquo;s path flavour (instantiating it creates either a &lt;a href=&quot;#pathlib.PosixPath&quot;&gt;&lt;code&gt;PosixPath&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#pathlib.WindowsPath&quot;&gt;&lt;code&gt;WindowsPath&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;的子类，该类表示系统路径风格的具体路径（实例化它创建了&lt;a href=&quot;#pathlib.PosixPath&quot;&gt; &lt;code&gt;PosixPath&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#pathlib.WindowsPath&quot;&gt; &lt;code&gt;WindowsPath&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="8ddea0c5102be5b806c8ed7af1f7b85163c67c30" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;的子类，此路径表示Windows文件系统路径：</target>
        </trans-unit>
        <trans-unit id="9b2ac853b70b451f55dd69ebee77fa87ae957266" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;的子类，此路径表示非Windows文件系统路径：</target>
        </trans-unit>
        <trans-unit id="da15c413fbd27cd71985084c119de705e2d3928d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which accepts a &lt;em&gt;filename&lt;/em&gt; instead of a dict-like object. The underlying file will be opened using &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;. By default, the file will be created and opened for both read and write. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as for the &lt;a href=&quot;#shelve.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The optional &lt;em&gt;protocol&lt;/em&gt; and &lt;em&gt;writeback&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;的子类，它接受&lt;em&gt;文件名&lt;/em&gt;而不是类似dict的对象。基础文件将使用&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; &lt;/a&gt;打开。默认情况下，将为读取和写入创建并打开该文件。可选的&lt;em&gt;flag&lt;/em&gt;参数具有与&lt;a href=&quot;#shelve.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数相同的解释。可选的&lt;em&gt;协议&lt;/em&gt;和&lt;em&gt;写回&lt;/em&gt;参数具有与&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;类相同的解释。</target>
        </trans-unit>
        <trans-unit id="c0aeb538670652c08b0771e1a034d7b75ae61240" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which exposes &lt;code&gt;first()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;previous()&lt;/code&gt;, &lt;code&gt;last()&lt;/code&gt; and &lt;code&gt;set_location()&lt;/code&gt; which are available in the third-party &lt;code&gt;bsddb&lt;/code&gt; module from &lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt; but not in other database modules. The &lt;em&gt;dict&lt;/em&gt; object passed to the constructor must support those methods. This is generally accomplished by calling one of &lt;code&gt;bsddb.hashopen()&lt;/code&gt;, &lt;code&gt;bsddb.btopen()&lt;/code&gt; or &lt;code&gt;bsddb.rnopen()&lt;/code&gt;. The optional &lt;em&gt;protocol&lt;/em&gt;, &lt;em&gt;writeback&lt;/em&gt;, and &lt;em&gt;keyencoding&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">的一个子类&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;暴露 &lt;code&gt;first()&lt;/code&gt; ， &lt;code&gt;next()&lt;/code&gt; （） &lt;code&gt;previous()&lt;/code&gt; ， &lt;code&gt;last()&lt;/code&gt; 和 &lt;code&gt;set_location()&lt;/code&gt; 定位这是第三方可用 &lt;code&gt;bsddb&lt;/code&gt; 从模块&lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt;而不是在其他的数据库模块。传递给构造函数的&lt;em&gt;dict&lt;/em&gt;对象必须支持这些方法。通常，通过调用 &lt;code&gt;bsddb.hashopen()&lt;/code&gt; ， &lt;code&gt;bsddb.btopen()&lt;/code&gt; 或 &lt;code&gt;bsddb.rnopen()&lt;/code&gt; 中的一个来完成此操作。可选&lt;em&gt;协议&lt;/em&gt;，&lt;em&gt;写回&lt;/em&gt;和&lt;em&gt;密钥编码&lt;/em&gt;参数具有与&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;类相同的解释。</target>
        </trans-unit>
        <trans-unit id="b5a6a5a8e4ac7a866442add5f93595a47b720d39" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be received on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">尝试读取或写入数据时，&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞SSL套接字会&lt;/a&gt;引发&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;的子类，但在满足请求之前，需要在基础TCP传输上接收更多数据。</target>
        </trans-unit>
        <trans-unit id="a7a0502de90f1d3ad7d32c2d3885ee66ffde0a82" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be sent on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">尝试读取或写入数据时，&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞SSL套接字会&lt;/a&gt;引发&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;的子类，但是在满足请求之前，需要在基础TCP传输上发送更多数据。</target>
        </trans-unit>
        <trans-unit id="deb9b7c208558761cda50ba30ba55c811e5e68df" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when a system error was encountered while trying to fulfill an operation on a SSL socket. Unfortunately, there is no easy way to inspect the original errno number.</source>
          <target state="translated">尝试在SSL套接字上执行操作时遇到系统错误时引发&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;的子类。不幸的是，没有简单的方法来检查原始的errno号。</target>
        </trans-unit>
        <trans-unit id="cdaf83ff67869c648bea2aee22f2a5a8799d1318" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when certificate validation has failed.</source>
          <target state="translated">证书验证失败时引发的&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="6d26e7b54f4342d502899a32b1ea75ad227410a2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when the SSL connection has been terminated abruptly. Generally, you shouldn&amp;rsquo;t try to reuse the underlying transport when this error is encountered.</source>
          <target state="translated">SSL连接突然终止时引发的&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;子类。通常，遇到此错误时，您不应尝试重用基础传输。</target>
        </trans-unit>
        <trans-unit id="cca4beee81e582bd9b978d6e698d6235139ca79b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when trying to read or write and the SSL connection has been closed cleanly. Note that this doesn&amp;rsquo;t mean that the underlying transport (read TCP) has been closed.</source>
          <target state="translated">尝试读取或写入且SSL连接已完全关闭时引发的&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;子类。请注意，这并不意味着基础传输（读取TCP）已关闭。</target>
        </trans-unit>
        <trans-unit id="4aa94e1172b28188f84a19de0a4d78757ffac0c8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;collections.abc.MutableMapping&lt;/code&gt;&lt;/a&gt; which stores pickled values in the &lt;em&gt;dict&lt;/em&gt; object.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;collections.abc.MutableMapping&lt;/code&gt; &lt;/a&gt;的子类，将腌制的值存储在&lt;em&gt;dict&lt;/em&gt;对象中。</target>
        </trans-unit>
        <trans-unit id="4c2ed8fc70c7865de761f0bbee19c244ff6cb7f7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; that defines a set of HTTP status codes, reason phrases and long descriptions written in English.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;的子类，它定义一组用英语编写的HTTP状态代码，原因短语和长说明。</target>
        </trans-unit>
        <trans-unit id="13c7263f4c0b3d090a1a151575ff100ac91b1329" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt;&lt;code&gt;ConnectionResetError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.client.BadStatusLine&quot;&gt;&lt;code&gt;BadStatusLine&lt;/code&gt;&lt;/a&gt;. Raised by &lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt;&lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt;&lt;/a&gt; when the attempt to read the response results in no data read from the connection, indicating that the remote end has closed the connection.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt; &lt;code&gt;ConnectionResetError&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.client.BadStatusLine&quot;&gt; &lt;code&gt;BadStatusLine&lt;/code&gt; 的&lt;/a&gt;子类。当尝试读取响应导致未从连接读取任何数据时，由&lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt; &lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt; 引发&lt;/a&gt;，指示远程端已关闭连接。</target>
        </trans-unit>
        <trans-unit id="ce340e4f4e3ab133da20d657ffb3540199636ab2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="edea97afc9f60e0d9cc4a419734e1ca06a2daac2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors by &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(error, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;error&lt;/em&gt;, as returned by the &lt;code&gt;gai_strerror()&lt;/code&gt; C function. The numeric &lt;em&gt;error&lt;/em&gt; value will match one of the &lt;code&gt;EAI_*&lt;/code&gt; constants defined in this module.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类，此异常由&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; &lt;/a&gt;引发，用于地址相关的错误。附带的值是一对 &lt;code&gt;(error, string)&lt;/code&gt; 代表由库调用返回的错误。&lt;em&gt;字符串&lt;/em&gt;表示对&lt;em&gt;错误&lt;/em&gt;的描述，由 &lt;code&gt;gai_strerror()&lt;/code&gt; C函数返回。数字&lt;em&gt;错误&lt;/em&gt;值将与此模块中定义的 &lt;code&gt;EAI_*&lt;/code&gt; 常量之一匹配。</target>
        </trans-unit>
        <trans-unit id="460111a7ddfae31cdbd537e0ced5a7ef202f5c3b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors, i.e. for functions that use &lt;em&gt;h_errno&lt;/em&gt; in the POSIX C API, including &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.gethostbyaddr&quot;&gt;&lt;code&gt;gethostbyaddr()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(h_errno, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;h_errno&lt;/em&gt; is a numeric value, while &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;h_errno&lt;/em&gt;, as returned by the &lt;code&gt;hstrerror()&lt;/code&gt; C function.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类，针对地址相关的错误（即，在POSIX C API 中使用&lt;em&gt;h_errno&lt;/em&gt;的函数，包括&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.gethostbyaddr&quot;&gt; &lt;code&gt;gethostbyaddr()&lt;/code&gt; )&lt;/a&gt;引发此异常。附带的值是一对 &lt;code&gt;(h_errno, string)&lt;/code&gt; 代表由库调用返回的错误。&lt;em&gt;h_errno&lt;/em&gt;是一个数字值，而&lt;em&gt;string&lt;/em&gt;代表 &lt;code&gt;hstrerror()&lt;/code&gt; C函数返回的&lt;em&gt;h_errno&lt;/em&gt;的描述。</target>
        </trans-unit>
        <trans-unit id="16ac8179359652826137cc9c838ce6bab8ea4d95" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised when a timeout occurs on a socket which has had timeouts enabled via a prior call to &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; (or implicitly through &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;). The accompanying value is a string whose value is currently always &amp;ldquo;timed out&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类，当套接字发生超时时，如果通过事先调用&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;（或隐式地通过&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; &lt;/a&gt;）启用了超时，则会引发此异常。附带的值是一个字符串，其值当前总是&amp;ldquo;超时&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f96ed9be119db1899cc5804240cbdf4a813fc7bf" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="cb5ef21196f6e1a2c30359a542bb0586ed94ec11" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the management of shared memory blocks across processes.</source>
          <target state="translated">&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;的子类，可用于跨进程管理共享内存块。</target>
        </trans-unit>
        <trans-unit id="6493ef637d82780c7758013117e237d093568cc0" translate="yes" xml:space="preserve">
          <source>A subclass of FileDialog that creates a dialog window for selecting a destination file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a73368b564b85b1d416719ea8db78e560d0d54" translate="yes" xml:space="preserve">
          <source>A subclass of FileDialog that creates a dialog window for selecting an existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a3fd34e2e67d00717d8e3c38e690bba5eea283" translate="yes" xml:space="preserve">
          <source>A subclass of the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Subclasses of &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;mailbox.Message&lt;/code&gt;&lt;/a&gt; add mailbox-format-specific state and behavior.</source>
          <target state="translated">&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; 的&lt;/a&gt;子类。的子类&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;mailbox.Message&lt;/code&gt; &lt;/a&gt;添加邮箱格式特定状态和行为。</target>
        </trans-unit>
        <trans-unit id="0cc4659320a48a69121a5fa046a90e0829d536e4" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract classmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内置&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; 的&lt;/a&gt;子类，指示抽象的类方法。否则，它类似于&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd7d67ccc4aa0cf39a782287b771bae713632ff3" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;, indicating an abstract property.</source>
          <target state="translated">内置&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; 的&lt;/a&gt;子类，指示抽象属性。</target>
        </trans-unit>
        <trans-unit id="8a21eea0a51db85132800cd0d541c1dd336c3b80" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract staticmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内置&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; 的&lt;/a&gt;子类，指示抽象的staticmethod。否则，它类似于&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d14fd32086bd068d574c0f68fc7877ff0baa0946" translate="yes" xml:space="preserve">
          <source>A subclass of tuple, holding &lt;code&gt;(columns, lines)&lt;/code&gt; of the terminal window size.</source>
          <target state="translated">元组的子类，具有终端窗口大小 &lt;code&gt;(columns, lines)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4860690382eeaedd49f5d6a726f9be2286133ce4" translate="yes" xml:space="preserve">
          <source>A subscript, such as &lt;code&gt;l[1]&lt;/code&gt;. &lt;code&gt;value&lt;/code&gt; is the subscripted object (usually sequence or mapping). &lt;code&gt;slice&lt;/code&gt; is an index, slice or key. It can be a &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; and contain a &lt;a href=&quot;#ast.Slice&quot;&gt;&lt;code&gt;Slice&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;ctx&lt;/code&gt; is &lt;a href=&quot;#ast.Load&quot;&gt;&lt;code&gt;Load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Store&quot;&gt;&lt;code&gt;Store&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Del&quot;&gt;&lt;code&gt;Del&lt;/code&gt;&lt;/a&gt; according to the action performed with the subscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c70036708915cb7b3b17bae711c17136488656" translate="yes" xml:space="preserve">
          <source>A suitable launcher can be as simple as the following:</source>
          <target state="translated">一个合适的发射器可以简单到以下几点:</target>
        </trans-unit>
        <trans-unit id="901d66f5c7da60879c19407e1a1bc52a3389e89b" translate="yes" xml:space="preserve">
          <source>A symbolic name from the list of columns option.</source>
          <target state="translated">列列表选项中的一个符号名称。</target>
        </trans-unit>
        <trans-unit id="0aafdc4544b71b33d0122eb7e7355cb89beef590" translate="yes" xml:space="preserve">
          <source>A synchronized wrapper will have two methods in addition to those of the object it wraps: &lt;code&gt;get_obj()&lt;/code&gt; returns the wrapped object and &lt;code&gt;get_lock()&lt;/code&gt; returns the lock object used for synchronization.</source>
          <target state="translated">同步的包装器除了要包装的对象之外，还有两种方法： &lt;code&gt;get_obj()&lt;/code&gt; 返回被包装的对象， &lt;code&gt;get_lock()&lt;/code&gt; 返回用于同步的锁对象。</target>
        </trans-unit>
        <trans-unit id="82cc7a6bf5190503a986720cfd373d63486c2b10" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, maintained for backwards compatibility.</source>
          <target state="translated">&lt;a href=&quot;#wave.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; 的&lt;/a&gt;同义词，为向后兼容而维护。</target>
        </trans-unit>
        <trans-unit id="02478b669d3bd5d812ec4b032b7561d572de56eb" translate="yes" xml:space="preserve">
          <source>A test case can contain any number of subtest declarations, and they can be arbitrarily nested.</source>
          <target state="translated">一个测试用例可以包含任意数量的子测试声明,而且它们可以任意嵌套。</target>
        </trans-unit>
        <trans-unit id="f92c13e79833a8c6766ec8c4d07e210948282e0b" translate="yes" xml:space="preserve">
          <source>A test case instance is created for each method named by &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt;. By default these are the method names beginning with &lt;code&gt;test&lt;/code&gt;. If &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt; returns no methods, but the &lt;code&gt;runTest()&lt;/code&gt; method is implemented, a single test case is created for that method instead.</source>
          <target state="translated">将为每个由&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; &lt;/a&gt;命名的方法创建一个测试用例实例。默认情况下，这些是以 &lt;code&gt;test&lt;/code&gt; 开头的方法名称。如果&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; 不&lt;/a&gt;返回任何方法，但实现了 &lt;code&gt;runTest()&lt;/code&gt; 方法，则将为该方法创建一个测试用例。</target>
        </trans-unit>
        <trans-unit id="d317a4bfcfe51b412aa9411ee48602a7d363041a" translate="yes" xml:space="preserve">
          <source>A testcase is created by subclassing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. The three individual tests are defined with methods whose names start with the letters &lt;code&gt;test&lt;/code&gt;. This naming convention informs the test runner about which methods represent tests.</source>
          <target state="translated">通过子类化&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;创建一个测试用例。这三个单独的测试使用名称以字母 &lt;code&gt;test&lt;/code&gt; 开头的方法定义。该命名约定将告知测试运行者哪些方法表示测试。</target>
        </trans-unit>
        <trans-unit id="2decea86572530cb3394fd2790ced4c85040cd18" translate="yes" xml:space="preserve">
          <source>A text stream using an in-memory text buffer. It inherits &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3b705f209b67c83fbd25ef3e195fdfb5b667ff" translate="yes" xml:space="preserve">
          <source>A thread can be &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;ed many times.</source>
          <target state="translated">一个线程可以被多次&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d19f0702d7d43132fd514f9840815fdd1c4aabff" translate="yes" xml:space="preserve">
          <source>A thread can be flagged as a &amp;ldquo;daemon thread&amp;rdquo;. The significance of this flag is that the entire Python program exits when only daemon threads are left. The initial value is inherited from the creating thread. The flag can be set through the &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; property or the &lt;em&gt;daemon&lt;/em&gt; constructor argument.</source>
          <target state="translated">线程可以标记为&amp;ldquo;守护程序线程&amp;rdquo;。该标志的重要性在于，仅保留守护程序线程时，整个Python程序都会退出。初始值是从创建线程继承的。可以通过&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;属性或&lt;em&gt;daemon&lt;/em&gt;构造函数参数设置该标志。</target>
        </trans-unit>
        <trans-unit id="25906c1adefe9dc6f1af3c23b40a096b717f95c3" translate="yes" xml:space="preserve">
          <source>A thread has a name. The name can be passed to the constructor, and read or changed through the &lt;a href=&quot;#threading.Thread.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">线程具有名称。该名称可以传递给构造函数，并可以通过&lt;a href=&quot;#threading.Thread.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性读取或更改。</target>
        </trans-unit>
        <trans-unit id="59162599aeff6bb14e020356fd4da69fe0944c86" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;call_soon()&lt;/code&gt;&lt;/a&gt;. Must be used to schedule callbacks &lt;em&gt;from another thread&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;call_soon()&lt;/code&gt; 的&lt;/a&gt;线程安全变体。必须用于调度&lt;em&gt;来自另一个线程的&lt;/em&gt;回调。</target>
        </trans-unit>
        <trans-unit id="0a0f8b6355c0ad572860ca714f63148feabbb464" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; 的&lt;/a&gt;线程安全变体。</target>
        </trans-unit>
        <trans-unit id="34a103e628ad77f1efb119c2d023c898bf9e7287" translate="yes" xml:space="preserve">
          <source>A timeout can be specified for communication with the SMTP server using the &lt;em&gt;timeout&lt;/em&gt; argument.</source>
          <target state="translated">可以使用&lt;em&gt;timeout&lt;/em&gt;参数指定用于与SMTP服务器通信的&lt;em&gt;超时&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4820ed4e11203578021e36242c9640f748f2edc" translate="yes" xml:space="preserve">
          <source>A topological order is a linear ordering of the vertices in a graph such that for every directed edge u -&amp;gt; v from vertex u to vertex v, vertex u comes before vertex v in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this example, a topological ordering is just a valid sequence for the tasks. A complete topological ordering is possible if and only if the graph has no directed cycles, that is, if it is a directed acyclic graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fce953788cab29b4471f03f788eeca368e6c43" translate="yes" xml:space="preserve">
          <source>A traceback contains at least &lt;code&gt;1&lt;/code&gt; frame. If the &lt;code&gt;tracemalloc&lt;/code&gt; module failed to get a frame, the filename &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; at line number &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">追溯至少包含 &lt;code&gt;1&lt;/code&gt; 帧。如果 &lt;code&gt;tracemalloc&lt;/code&gt; 模块无法获取帧，则使用行号 &lt;code&gt;0&lt;/code&gt; 的文件名 &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc2646e6288204043218b877ba68e1e8e8475d31" translate="yes" xml:space="preserve">
          <source>A trailing newline is stripped from the output. The exit code for the command can be interpreted as the return code of subprocess. Example:</source>
          <target state="translated">从输出中去掉一个尾部的换行。命令的退出代码可以解释为子进程的返回代码。例子:</target>
        </trans-unit>
        <trans-unit id="c3c80f1590f49a12cd65c7f83bc6002d79bb9851" translate="yes" xml:space="preserve">
          <source>A transport for datagram (UDP) connections.</source>
          <target state="translated">数据报(UDP)连接的传输。</target>
        </trans-unit>
        <trans-unit id="0d926f53bff6bd280c6eee22bfcab053408f0198" translate="yes" xml:space="preserve">
          <source>A tuple &lt;code&gt;(interface, )&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_CAN&quot;&gt;&lt;code&gt;AF_CAN&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;interface&lt;/em&gt; is a string representing a network interface name like &lt;code&gt;'can0'&lt;/code&gt;. The network interface name &lt;code&gt;''&lt;/code&gt; can be used to receive packets from all network interfaces of this family.</source>
          <target state="translated">元组 &lt;code&gt;(interface, )&lt;/code&gt; 用于&lt;a href=&quot;#socket.AF_CAN&quot;&gt; &lt;code&gt;AF_CAN&lt;/code&gt; &lt;/a&gt;地址族，其中&lt;em&gt;interface&lt;/em&gt;是表示网络接口名称（如 &lt;code&gt;'can0'&lt;/code&gt; ）的字符串。网络接口名称 &lt;code&gt;''&lt;/code&gt; 可用于接收来自该系列所有网络接口的数据包。</target>
        </trans-unit>
        <trans-unit id="5988ddff5a11a83cbde32c03ed0f71ddbc332862" translate="yes" xml:space="preserve">
          <source>A tuple containing information about the unexpected exception, as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个元组，包含有关&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;返回的意外异常的信息。</target>
        </trans-unit>
        <trans-unit id="b602eebfd1018b4f9a83a4accab01ad6f39d7ed0" translate="yes" xml:space="preserve">
          <source>A tuple containing the exceptions that can be raised by each of the supported modules, with a unique exception also named &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; as the first item &amp;mdash; the latter is used when &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">一个元组，其中包含可以由每个受支持的模块引发的异常，并且唯一的异常也称为&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;作为第一项-当&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;时将使用后者。</target>
        </trans-unit>
        <trans-unit id="611ad0213bdcbdea64e69b9c88ff862172a42e89" translate="yes" xml:space="preserve">
          <source>A tuple containing the five components of the version number: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, &lt;em&gt;micro&lt;/em&gt;, &lt;em&gt;releaselevel&lt;/em&gt;, and &lt;em&gt;serial&lt;/em&gt;. All values except &lt;em&gt;releaselevel&lt;/em&gt; are integers; the release level is &lt;code&gt;'alpha'&lt;/code&gt;, &lt;code&gt;'beta'&lt;/code&gt;, &lt;code&gt;'candidate'&lt;/code&gt;, or &lt;code&gt;'final'&lt;/code&gt;. The &lt;code&gt;version_info&lt;/code&gt; value corresponding to the Python version 2.0 is &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt;. The components can also be accessed by name, so &lt;code&gt;sys.version_info[0]&lt;/code&gt; is equivalent to &lt;code&gt;sys.version_info.major&lt;/code&gt; and so on.</source>
          <target state="translated">一个元组，包含版本号的五个组成部分：&lt;em&gt;major&lt;/em&gt;，&lt;em&gt;minor&lt;/em&gt;，&lt;em&gt;micro&lt;/em&gt;，&lt;em&gt;releaselevel&lt;/em&gt;和&lt;em&gt;serial&lt;/em&gt;。除&lt;em&gt;releaselevel&lt;/em&gt;以外的所有值都是整数。发布级别为 &lt;code&gt;'alpha'&lt;/code&gt; ， &lt;code&gt;'beta'&lt;/code&gt; ， &lt;code&gt;'candidate'&lt;/code&gt; 或 &lt;code&gt;'final'&lt;/code&gt; 。对应于Python版本2.0 的 &lt;code&gt;version_info&lt;/code&gt; 值为（2，0，0 &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt; 。也可以通过名称访问组件，因此 &lt;code&gt;sys.version_info[0]&lt;/code&gt; 等效于 &lt;code&gt;sys.version_info.major&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="284eb8c9c8f7dcb877a69beef6d52a20881200c4" translate="yes" xml:space="preserve">
          <source>A tuple giving access to the path&amp;rsquo;s various components:</source>
          <target state="translated">一个元组，可以访问路径的各个组成部分：</target>
        </trans-unit>
        <trans-unit id="9d0fd49c7efc6a159b31facd122d6218b19f8941" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects encoding all of the individual addresses from the header value. If the header value contains any groups, the individual addresses from the group are included in the list at the point where the group occurs in the value (that is, the list of addresses is &amp;ldquo;flattened&amp;rdquo; into a one dimensional list).</source>
          <target state="translated">&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;对象的元组，用于对标头值中的所有单个地址进行编码。如果标头值包含任何组，则在值中出现该组的位置，列表中将包含该组中的各个地址（即，地址列表被&amp;ldquo;展平&amp;rdquo;为一维列表）。</target>
        </trans-unit>
        <trans-unit id="9de5ed9ccb63c492c379c7b0498153b757927080" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects encoding the addresses and groups found in the header value. Addresses that are not part of a group are represented in this list as single-address &lt;code&gt;Groups&lt;/code&gt; whose &lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt;&lt;code&gt;display_name&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;对象的元组，对在标头值中找到的地址和组进行编码。地址不在一组的一部分，在此列表单地址代表 &lt;code&gt;Groups&lt;/code&gt; ，其&lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt; &lt;code&gt;display_name&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0a272709593e4d4502563708916d90098e672e4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt; is returned on success.</source>
          <target state="translated">&lt;code&gt;(transport, protocol)&lt;/code&gt; 元组成功返回。</target>
        </trans-unit>
        <trans-unit id="f2a76b51f711aaca7e10b1eba70b8efe797baf47" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;HeaderDefect&lt;/code&gt; instances reporting any RFC compliance problems found during parsing. The email package tries to be complete about detecting compliance issues. See the &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module for a discussion of the types of defects that may be reported.</source>
          <target state="translated">&lt;code&gt;HeaderDefect&lt;/code&gt; 实例的元组报告在解析过程中发现的所有RFC合规性问题。该电子邮件软件包试图完整地检测出合规性问题。请参阅&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;模块以获取有关可能报告的缺陷类型的讨论。</target>
        </trans-unit>
        <trans-unit id="f5bfec0411b160b69074925d29affee86ab7b1b4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;column&lt;/em&gt; numbers, specifying where the error occurred.</source>
          <target state="translated">第&lt;em&gt;行&lt;/em&gt;，&lt;em&gt;列&lt;/em&gt;编号的元组，指定发生错误的位置。</target>
        </trans-unit>
        <trans-unit id="ac45160c628e9f17de9bd53926058b4dfa965527" translate="yes" xml:space="preserve">
          <source>A tuple of arguments for the callable object. An empty tuple must be given if the callable does not accept any argument.</source>
          <target state="translated">可调用对象的参数元组。如果可调用对象不接受任何参数,则必须给出一个空元组。</target>
        </trans-unit>
        <trans-unit id="5cd0c1bc3b7430c4dc325b20146a15127227c071" translate="yes" xml:space="preserve">
          <source>A tuple of five integers representing version information about the OpenSSL library:</source>
          <target state="translated">一个由五个整数组成的元组,代表OpenSSL库的版本信息。</target>
        </trans-unit>
        <trans-unit id="5235a223fb55cc8323b6b967311c62c5e4afc221" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the shape of the memory as an N-dimensional array.</source>
          <target state="translated">长度为&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;的整数元组，给出了作为N维数组的内存形状。</target>
        </trans-unit>
        <trans-unit id="f5e4a5c5c0f872da9ef405f61b1402fa7e827fcc" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the size in bytes to access each element for each dimension of the array.</source>
          <target state="translated">一个整数元组，它是&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;的长度，给出了以字节为单位的大小，以访问数组每个维度的每个元素。</target>
        </trans-unit>
        <trans-unit id="bbbbae5b5f1f31e838ab89e5ab798870e6998659" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments that aren&amp;rsquo;t bound to any other parameter. This corresponds to a &lt;code&gt;*args&lt;/code&gt; parameter in a Python function definition.</source>
          <target state="translated">未绑定到任何其他参数的位置参数的元组。这对应于Python函数定义中的 &lt;code&gt;*args&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="e767d2abb81b29680f05c61c2dc0881ec7e2895d" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments values. Dynamically computed from the &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">位置参数值的元组。从&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;属性动态计算。</target>
        </trans-unit>
        <trans-unit id="2bddcba1f84eefe95b64f3637762f321fa506285" translate="yes" xml:space="preserve">
          <source>A tuple of strings giving the names of all modules that are compiled into this Python interpreter. (This information is not available in any other way &amp;mdash; &lt;code&gt;modules.keys()&lt;/code&gt; only lists the imported modules.)</source>
          <target state="translated">字符串的元组，给出了编译到此Python解释器中的所有模块的名称。（此信息无法通过其他任何方式使用 &lt;code&gt;modules.keys()&lt;/code&gt; 仅列出导入的模块。）</target>
        </trans-unit>
        <trans-unit id="9dc0c4f970d8a2e2a6e7e05921a6b50db400ca2a" translate="yes" xml:space="preserve">
          <source>A tuple of the six integer fields of the UUID, which are also available as six individual attributes and two derived attributes:</source>
          <target state="translated">UUID的六个整数字段的元组,也有六个单独属性和两个派生属性。</target>
        </trans-unit>
        <trans-unit id="7d7281d5a4d1699e2ef4b4d043daa76d806c7e3b" translate="yes" xml:space="preserve">
          <source>A tuple of two strings: the first is the name of the local non-DST timezone, the second is the name of the local DST timezone. If no DST timezone is defined, the second string should not be used. See note below.</source>
          <target state="translated">一个由两个字符串组成的元组:第一个是当地非DST时区的名称,第二个是当地DST时区的名称。如果没有定义DST时区,则不应该使用第二个字符串。见下面的说明。</target>
        </trans-unit>
        <trans-unit id="5785afa7d9d72a80a132775f931cd3296a1c396a" translate="yes" xml:space="preserve">
          <source>A two-dimensional vector class, used as a helper class for implementing turtle graphics. May be useful for turtle graphics programs too. Derived from tuple, so a vector is a tuple!</source>
          <target state="translated">一个二维矢量类,作为实现海龟图形的辅助类。可能对海龟图形程序也有用。从元组派生出来的,所以向量就是一个元组!</target>
        </trans-unit>
        <trans-unit id="5c09a3ba1317d479a9a224b9ce88a6cea59653d7" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 128-bits integer, a 16-bytes packed integer, or an existing IPv6Address object; and the netmask is an integer representing the prefix length.</source>
          <target state="translated">地址描述和netmask的两个tuple,其中地址描述是一个字符串、一个128位的整数、一个16字节的打包整数或一个现有的IPv6Address对象;netmask是一个整数,代表前缀长度。</target>
        </trans-unit>
        <trans-unit id="8a17dcdfe6ec4d61527a00e964fb8c81625f4064" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 32-bits integer, a 4-bytes packed integer, or an existing IPv4Address object; and the netmask is either an integer representing the prefix length (e.g. &lt;code&gt;24&lt;/code&gt;) or a string representing the prefix mask (e.g. &lt;code&gt;255.255.255.0&lt;/code&gt;).</source>
          <target state="translated">地址描述和网络掩码的二元组，其中地址描述可以是字符串，32位整数，4字节压缩整数或现有的IPv4Address对象；网络掩码可以是代表前缀长度的整数（例如 &lt;code&gt;24&lt;/code&gt; ），也可以是代表前缀掩码的字符串（例如 &lt;code&gt;255.255.255.0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a97458b6662cbcaa16e108bc6f87a69c86c44cfc" translate="yes" xml:space="preserve">
          <source>A type alias is defined by assigning the type to the alias. In this example, &lt;code&gt;Vector&lt;/code&gt; and &lt;code&gt;List[float]&lt;/code&gt; will be treated as interchangeable synonyms:</source>
          <target state="translated">通过将类型分配给别名来定义类型别名。在此示例中， &lt;code&gt;Vector&lt;/code&gt; 和 &lt;code&gt;List[float]&lt;/code&gt; 将被视为可互换的同义词：</target>
        </trans-unit>
        <trans-unit id="1afc84eb225f100301cf0747d0efc62cca04b7cd" translate="yes" xml:space="preserve">
          <source>A type alias is defined by assigning the type to the alias. In this example, &lt;code&gt;Vector&lt;/code&gt; and &lt;code&gt;list[float]&lt;/code&gt; will be treated as interchangeable synonyms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdcf50c828c6a26d172ef24bc0143735e308ea7" translate="yes" xml:space="preserve">
          <source>A type that can be used to indicate to type checkers that the corresponding variable or function parameter has a value equivalent to the provided literal (or one of several literals). For example:</source>
          <target state="translated">一个类型,它可以用来向类型检查器表明相应的变量或函数参数的值与所提供的文字(或几个文字中的一个)相等。例如:</target>
        </trans-unit>
        <trans-unit id="edd3251f3e927f6b3ff1cbaf77caeabe432e7f67" translate="yes" xml:space="preserve">
          <source>A type that can register with &lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt;&lt;code&gt;SyncManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以向&lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt; &lt;code&gt;SyncManager&lt;/code&gt; &lt;/a&gt;注册的类型。</target>
        </trans-unit>
        <trans-unit id="4291e70537f9369ba206ac4e2ba915fe2d69ed5e" translate="yes" xml:space="preserve">
          <source>A type, introduced in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0593&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 593&lt;/strong&gt;&lt;/a&gt; (&lt;code&gt;Flexible function and variable
annotations&lt;/code&gt;), to decorate existing types with context-specific metadata (possibly multiple pieces of it, as &lt;code&gt;Annotated&lt;/code&gt; is variadic). Specifically, a type &lt;code&gt;T&lt;/code&gt; can be annotated with metadata &lt;code&gt;x&lt;/code&gt; via the typehint &lt;code&gt;Annotated[T, x]&lt;/code&gt;. This metadata can be used for either static analysis or at runtime. If a library (or tool) encounters a typehint &lt;code&gt;Annotated[T, x]&lt;/code&gt; and has no special logic for metadata &lt;code&gt;x&lt;/code&gt;, it should ignore it and simply treat the type as &lt;code&gt;T&lt;/code&gt;. Unlike the &lt;code&gt;no_type_check&lt;/code&gt; functionality that currently exists in the &lt;code&gt;typing&lt;/code&gt; module which completely disables typechecking annotations on a function or a class, the &lt;code&gt;Annotated&lt;/code&gt; type allows for both static typechecking of &lt;code&gt;T&lt;/code&gt; (e.g., via mypy or Pyre, which can safely ignore &lt;code&gt;x&lt;/code&gt;) together with runtime access to &lt;code&gt;x&lt;/code&gt; within a specific application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf15fb052a2b8e6d3e5be62280869b7c778c81b0" translate="yes" xml:space="preserve">
          <source>A typical &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; implementation should not inherit from a &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; implementation, but wrap one, like &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; do.</source>
          <target state="translated">典型的&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;实现不应继承自&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;实现，而应像&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;那样包装一个。</target>
        </trans-unit>
        <trans-unit id="532a00782ce16211f46324cb7c43cd600e874a6c" translate="yes" xml:space="preserve">
          <source>A typical &lt;code&gt;load_tests&lt;/code&gt; function that loads tests from a specific set of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; classes may look like:</source>
          <target state="translated">从一组特定的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;类加载测试的典型 &lt;code&gt;load_tests&lt;/code&gt; 函数可能类似于：</target>
        </trans-unit>
        <trans-unit id="7b822b1ced78fa4973f2903bb2ec7ed0bbbbe9df" translate="yes" xml:space="preserve">
          <source>A typical SAX application uses three kinds of objects: readers, handlers and input sources. &amp;ldquo;Reader&amp;rdquo; in this context is another term for parser, i.e. some piece of code that reads the bytes or characters from the input source, and produces a sequence of events. The events then get distributed to the handler objects, i.e. the reader invokes a method on the handler. A SAX application must therefore obtain a reader object, create or open the input sources, create the handlers, and connect these objects all together. As the final step of preparation, the reader is called to parse the input. During parsing, methods on the handler objects are called based on structural and syntactic events from the input data.</source>
          <target state="translated">典型的SAX应用程序使用三种对象：读取器，处理程序和输入源。在本文中，&amp;ldquo;阅读器&amp;rdquo;是解析器的另一个术语，即一段代码，该代码从输入源读取字节或字符，并产生一系列事件。然后将事件分发到处理程序对象，即，读取器在处理程序上调用方法。因此，SAX应用程序必须获取阅读器对象，创建或打开输入源，创建处理程序并将这些对象全部连接在一起。作为准备工作的最后一步，要求阅读器解析输入。在解析期间，将根据来自输入数据的结构和语法事件来调用处理程序对象上的方法。</target>
        </trans-unit>
        <trans-unit id="92606cc38bee78998a30f8fec0ac721b4cacce47" translate="yes" xml:space="preserve">
          <source>A typical use case for this might be for doing multiple patches in the &lt;code&gt;setUp&lt;/code&gt; method of a &lt;code&gt;TestCase&lt;/code&gt;:</source>
          <target state="translated">一个典型的用例是在 &lt;code&gt;TestCase&lt;/code&gt; 的 &lt;code&gt;setUp&lt;/code&gt; 方法中进行多个补丁：</target>
        </trans-unit>
        <trans-unit id="6f19d09a38de2ff39abf9054c1f371922c582e38" translate="yes" xml:space="preserve">
          <source>A typical use is to define a managed attribute &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">典型的用途是定义托管属性 &lt;code&gt;x&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0eac63d33888e56a0007381fdc8a8b73f97c1749" translate="yes" xml:space="preserve">
          <source>A typical use of this callback is to change the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;SSLSocket.context&lt;/code&gt;&lt;/a&gt; attribute to a new object of type &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; representing a certificate chain that matches the server name.</source>
          <target state="translated">此回调的典型用法是将&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;SSLSocket.context&lt;/code&gt; &lt;/a&gt;属性更改为&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;类型的新对象，该对象表示与服务器名称匹配的证书链。</target>
        </trans-unit>
        <trans-unit id="dd5527406a727a988014a7553eed4fa39a4343fe" translate="yes" xml:space="preserve">
          <source>A unary operation. &lt;code&gt;op&lt;/code&gt; is the operator, and &lt;code&gt;operand&lt;/code&gt; any expression node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a7ab23c7bbb7dc839f46117e4329ce2492a932" translate="yes" xml:space="preserve">
          <source>A usage example of this class follows. The server code:</source>
          <target state="translated">下面是该类的一个使用实例。服务器的代码。</target>
        </trans-unit>
        <trans-unit id="978118fdeef62f1257794c4627909d23958610ab" translate="yes" xml:space="preserve">
          <source>A useful override of this method is one that treats each space-separated word as an argument. The following example demonstrates how to do this:</source>
          <target state="translated">这个方法的一个有用的覆盖是将每个空格隔开的字作为一个参数。下面的例子演示了如何做到这一点。</target>
        </trans-unit>
        <trans-unit id="a250b0892fe84e8c6f1a49863c77330a90929957" translate="yes" xml:space="preserve">
          <source>A user updateable list of mappings. The list is ordered from first-searched to last-searched. It is the only stored state and can be modified to change which mappings are searched. The list should always contain at least one mapping.</source>
          <target state="translated">一个用户可更新的映射列表。该列表从最先搜索到最后搜索的顺序。它是唯一的存储状态,可以被修改以改变搜索的映射。该列表应始终包含至少一个映射。</target>
        </trans-unit>
        <trans-unit id="079507d4f083bf2720ed48fc1b442c97ecadd6bb" translate="yes" xml:space="preserve">
          <source>A user-defined class can be defined as a generic class.</source>
          <target state="translated">用户定义的类可以定义为一个通用类。</target>
        </trans-unit>
        <trans-unit id="9537693522141cf602fdb88a5176b79c0e82b59d" translate="yes" xml:space="preserve">
          <source>A user-defined generic class can have ABCs as base classes without a metaclass conflict. Generic metaclasses are not supported. The outcome of parameterizing generics is cached, and most types in the typing module are hashable and comparable for equality.</source>
          <target state="translated">用户定义的通用类可以将ABC作为基类,而不存在元类冲突。不支持泛型元类。对泛型进行参数化的结果会被缓存,类型模块中的大多数类型都是可哈希的,可进行平等比较。</target>
        </trans-unit>
        <trans-unit id="5c8693ddfe1cf07a3436ca33c0b98dabc46adab4" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, which can be used to open using a different protocol, or handle errors.</source>
          <target state="translated">有效的&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;，可用于使用其他协议打开或处理错误。</target>
        </trans-unit>
        <trans-unit id="8e61df85107f5cbf74dcf91d72f046c1f7d59444" translate="yes" xml:space="preserve">
          <source>A variable annotated with &lt;code&gt;C&lt;/code&gt; may accept a value of type &lt;code&gt;C&lt;/code&gt;. In contrast, a variable annotated with &lt;code&gt;Type[C]&lt;/code&gt; may accept values that are classes themselves &amp;ndash; specifically, it will accept the &lt;em&gt;class object&lt;/em&gt; of &lt;code&gt;C&lt;/code&gt;. For example:</source>
          <target state="translated">用 &lt;code&gt;C&lt;/code&gt; 注释的变量可以接受类型 &lt;code&gt;C&lt;/code&gt; 的值。与此相反，带注释的变量 &lt;code&gt;Type[C]&lt;/code&gt; 可以接受是类本身的值-即，它将接受&lt;em&gt;类对象&lt;/em&gt;的 &lt;code&gt;C&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="904d0ec5df1092d961eb12f38345e695c96dea25" translate="yes" xml:space="preserve">
          <source>A variable name. &lt;code&gt;id&lt;/code&gt; holds the name as a string, and &lt;code&gt;ctx&lt;/code&gt; is one of the following types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef488919d9e824be6b60939c2cb342b1b1bab344" translate="yes" xml:space="preserve">
          <source>A variant is &lt;code&gt;sNaN&lt;/code&gt; which signals rather than remaining quiet after every operation. This is a useful return value when an invalid result needs to interrupt a calculation for special handling.</source>
          <target state="translated">&lt;code&gt;sNaN&lt;/code&gt; 是一种变体，它在每次操作后发出信号而不是保持安静。当无效结果需要中断计算以进行特殊处理时，这是一个有用的返回值。</target>
        </trans-unit>
        <trans-unit id="90c08b03c549ad6d2f3a31dc3b83d49432395d7c" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; that retrieves most recently added entries first (last in, first out).</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; 的&lt;/a&gt;一种变体，它首先检索最新添加的条目（后进先出）。</target>
        </trans-unit>
        <trans-unit id="e73ad0a5c4f069d5381e1de59b2ea0c613b95b43" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;; retrieves entries in priority order (lowest first).</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;的变体; 按优先级顺序检索条目（从低到低）。</target>
        </trans-unit>
        <trans-unit id="39c5b43da7f038797d8ae64f42361f19c58135f2" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; that also has a database of &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; mappings. Can be used by a BasicAuth handler to determine when to send authentication credentials immediately instead of waiting for a &lt;code&gt;401&lt;/code&gt; response first.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt;的变体，也具有uri- &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; 映射的数据库。可以由BasicAuth处理程序用来确定何时立即发送身份验证凭据，而不是先等待 &lt;code&gt;401&lt;/code&gt; 响应。</target>
        </trans-unit>
        <trans-unit id="d06f0891f1b2bfb9625186a337c49a98b6264aed" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method which returns a &lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt;&lt;code&gt;AsyncResult&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b048ff81890f86ab4d3705faacaefc982ccda5" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;方法的一种变体，它返回一个结果对象。</target>
        </trans-unit>
        <trans-unit id="fc6ee99eaa7927495c010dd5cc5fe86c083b2b9f" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method which returns a &lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt;&lt;code&gt;AsyncResult&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc44ba28d32f1aedff0a9745ce2cb349b025acf" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;方法的一种变体，它返回一个结果对象。</target>
        </trans-unit>
        <trans-unit id="2e16236b15bf3dc82e98e92014c56a2bea2b94a3" translate="yes" xml:space="preserve">
          <source>A virtual environment is a Python environment such that the Python interpreter, libraries and scripts installed into it are isolated from those installed in other virtual environments, and (by default) any libraries installed in a &amp;ldquo;system&amp;rdquo; Python, i.e., one which is installed as part of your operating system.</source>
          <target state="translated">虚拟环境是Python环境，因此安装在其中的Python解释器，库和脚本与其他虚拟环境中安装的库，脚本和（默认情况下）安装在&amp;ldquo;系统&amp;rdquo; Python中的任何库（即已安装的库）隔离。作为操作系统的一部分。</target>
        </trans-unit>
        <trans-unit id="33cf41a39f10a2b0987e5f534da602847cb9e481" translate="yes" xml:space="preserve">
          <source>A virtual environment is a directory tree which contains Python executable files and other files which indicate that it is a virtual environment.</source>
          <target state="translated">虚拟环境是一个目录树,其中包含Python可执行文件和其他文件,它表明这是一个虚拟环境。</target>
        </trans-unit>
        <trans-unit id="e2a7438f4c3c42513c1a86d3d14ab1eb8aa7576d" translate="yes" xml:space="preserve">
          <source>A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;garbage collection&lt;/a&gt; is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.</source>
          <target state="translated">对对象的弱引用不足以使该对象保持活动状态：当仅剩余的对引用的引用是弱引用时，&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;垃圾回收&lt;/a&gt;可以随意销毁该引用并将其内存重用于其他用途。但是，直到没有实际破坏对象为止，弱引用可能会返回该对象，即使没有强引用也是如此。</target>
        </trans-unit>
        <trans-unit id="eaa846e8c5fe0adcf162cc2c0dc632b0f7a4e21d" translate="yes" xml:space="preserve">
          <source>A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-garbage-collection&quot;&gt;garbage collection&lt;/a&gt; is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cad28c9b720b7c8133daa3b6046ba8d41c572b" translate="yes" xml:space="preserve">
          <source>A week is converted to 7 days.</source>
          <target state="translated">一周换算为7天。</target>
        </trans-unit>
        <trans-unit id="e69e9595b25e9ef4c20aac1a77adfeabde1ae197" translate="yes" xml:space="preserve">
          <source>A widget-specific alternate display format</source>
          <target state="translated">特定小组件的替代显示格式</target>
        </trans-unit>
        <trans-unit id="796565c37efcd7614c73b2d3bcd4ea9ec6196099" translate="yes" xml:space="preserve">
          <source>A workaround for apostrophes can be constructed using regular expressions:</source>
          <target state="translated">可以使用正则表达式来构建省略号的变通方法。</target>
        </trans-unit>
        <trans-unit id="9aeb4a6a321904ee133be9093857c2603134a0b7" translate="yes" xml:space="preserve">
          <source>A working example follows. The server code:</source>
          <target state="translated">下面是一个工作实例。服务器代码。</target>
        </trans-unit>
        <trans-unit id="91c283731a52bc6a2b34753424f3b1349418c679" translate="yes" xml:space="preserve">
          <source>A wrapper for a bound socket or Windows named pipe which is &amp;lsquo;listening&amp;rsquo; for connections.</source>
          <target state="translated">绑定套接字或Windows命名管道的包装器，正在&amp;ldquo;监听&amp;rdquo;连接。</target>
        </trans-unit>
        <trans-unit id="25a0091075ac6adf4f212e341e5703255d4a54d9" translate="yes" xml:space="preserve">
          <source>A wrapper for a buffer representing picklable data. &lt;em&gt;buffer&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer-providing&lt;/a&gt; object, such as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or a N-dimensional array.</source>
          <target state="translated">表示可挑剔数据的缓冲区的包装。&lt;em&gt;buffer&lt;/em&gt;必须是提供&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;缓冲区的&lt;/a&gt;对象，例如类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;或N维数组。</target>
        </trans-unit>
        <trans-unit id="c09c9dedb1551c62318a1648228748f916eeb315" translate="yes" xml:space="preserve">
          <source>A wrapper for a buffer representing picklable data. &lt;em&gt;buffer&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer-providing&lt;/a&gt; object, such as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or a N-dimensional array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9488d9c942617cebacbdd48557b94f0de1129a0f" translate="yes" xml:space="preserve">
          <source>A wrapper to convert a file-like object to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. The resulting objects support both &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; iteration styles, for compatibility with Python 2.1 and Jython. As the object is iterated over, the optional &lt;em&gt;blksize&lt;/em&gt; parameter will be repeatedly passed to the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;read()&lt;/code&gt; method to obtain bytestrings to yield. When &lt;code&gt;read()&lt;/code&gt; returns an empty bytestring, iteration is ended and is not resumable.</source>
          <target state="translated">包装器，用于将类似文件的对象转换为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;。生成的对象支持&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;迭代样式，以与Python 2.1和Jython兼容。在迭代对象时，可选的&lt;em&gt;blksize&lt;/em&gt;参数将反复传递给&lt;em&gt;文件状&lt;/em&gt;对象的 &lt;code&gt;read()&lt;/code&gt; 方法，以获取要产生的字节串。当 &lt;code&gt;read()&lt;/code&gt; 返回一个空字节串时，迭代将结束且不可恢复。</target>
        </trans-unit>
        <trans-unit id="12a55932dbb0f932cc3c2f4cd7200f736ccaded4" translate="yes" xml:space="preserve">
          <source>A wrapper to convert a file-like object to an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. The resulting objects support both &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; iteration styles, for compatibility with Python 2.1 and Jython. As the object is iterated over, the optional &lt;em&gt;blksize&lt;/em&gt; parameter will be repeatedly passed to the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;read()&lt;/code&gt; method to obtain bytestrings to yield. When &lt;code&gt;read()&lt;/code&gt; returns an empty bytestring, iteration is ended and is not resumable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029b94f840e06cd4458edf1aa492eee5fecb47bf" translate="yes" xml:space="preserve">
          <source>A writable boolean property which by default is true. When the program exits, it calls all remaining live finalizers for which &lt;a href=&quot;#weakref.finalize.atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; is true. They are called in reverse order of creation.</source>
          <target state="translated">可写的布尔属性，默认情况下为true。程序退出时，它将调用&lt;a href=&quot;#weakref.finalize.atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;为true的所有剩余实时终结器。它们的创建顺序相反。</target>
        </trans-unit>
        <trans-unit id="2e7f120e10b020add396221d836c3d123ec25267" translate="yes" xml:space="preserve">
          <source>A zero-filled bytes object of a specified length: &lt;code&gt;bytes(10)&lt;/code&gt;</source>
          <target state="translated">指定长度的零填充字节对象： &lt;code&gt;bytes(10)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6674593f9f3a54e63a2233e1e6ee493d51af828" translate="yes" xml:space="preserve">
          <source>A zombie pythonw.exe process could be a problem. On Windows, use Task Manager to check for one and stop it if there is. Sometimes a restart initiated by a program crash or Keyboard Interrupt (control-C) may fail to connect. Dismissing the error box or using Restart Shell on the Shell menu may fix a temporary problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5152d4d7dfe1ed03b72824b6d1326436b07eef4b" translate="yes" xml:space="preserve">
          <source>A zombie pythonw.exe process could be a problem. On Windows, use Task Manager to detect and stop one. Sometimes a restart initiated by a program crash or Keyboard Interrupt (control-C) may fail to connect. Dismissing the error box or Restart Shell on the Shell menu may fix a temporary problem.</source>
          <target state="translated">一个僵尸pythonw.exe进程可能是一个问题。在Windows上,使用任务管理器检测并停止一个僵尸进程。有时,由程序崩溃或键盘中断(control-C)启动的重启可能无法连接。解除错误框或在Shell菜单上重启Shell可能会解决一个暂时的问题。</target>
        </trans-unit>
        <trans-unit id="d8945e83b68439f8e7c89d260624db63d24d011a" translate="yes" xml:space="preserve">
          <source>A. For some values, exponential notation is the only way to express the number of significant places in the coefficient. For example, expressing &lt;code&gt;5.0E+3&lt;/code&gt; as &lt;code&gt;5000&lt;/code&gt; keeps the value constant but cannot show the original&amp;rsquo;s two-place significance.</source>
          <target state="translated">答：对于某些值，指数表示法是表达系数中有效位数的唯一方法。例如，将 &lt;code&gt;5.0E+3&lt;/code&gt; 表示为 &lt;code&gt;5000&lt;/code&gt; 可以使值保持不变，但不能显示原件的两位数含义。</target>
        </trans-unit>
        <trans-unit id="ddaf579b2dbf039da48669abd7ff5db5fd2565d9" translate="yes" xml:space="preserve">
          <source>A. Some operations like addition, subtraction, and multiplication by an integer will automatically preserve fixed point. Others operations, like division and non-integer multiplication, will change the number of decimal places and need to be followed-up with a &lt;code&gt;quantize()&lt;/code&gt; step:</source>
          <target state="translated">答：一些操作，例如加，减和乘以整数将自动保留定点。其他运算（例如除法和非整数乘法）将更改小数位数，并且需要在其后执行 &lt;code&gt;quantize()&lt;/code&gt; 步骤：</target>
        </trans-unit>
        <trans-unit id="8eb1c7daa519c3eacdadf4bc8b5d52726fa2117e" translate="yes" xml:space="preserve">
          <source>A. Some users abbreviate the constructor to just a single letter:</source>
          <target state="translated">A.有些用户将构造函数缩写为只用一个字母。</target>
        </trans-unit>
        <trans-unit id="51c77a17d9176008920830e8406c57f17d212b75" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;normalize()&lt;/code&gt; method maps all equivalent values to a single representative:</source>
          <target state="translated">答： &lt;code&gt;normalize()&lt;/code&gt; 方法将所有等效值映射到单个代表：</target>
        </trans-unit>
        <trans-unit id="3c6805dd4d82a6ff60cc2229cc3596fd23058790" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;quantize()&lt;/code&gt; method rounds to a fixed number of decimal places. If the &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; trap is set, it is also useful for validation:</source>
          <target state="translated">答： &lt;code&gt;quantize()&lt;/code&gt; 方法将舍入到固定数量的小数位数。如果设置了&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;陷阱，则它对于验证也很有用：</target>
        </trans-unit>
        <trans-unit id="944d77a62db51f3b27bea12de17663f17275ef1c" translate="yes" xml:space="preserve">
          <source>A. The decimal module makes it easy to test results. A best practice is to re-run calculations using greater precision and with various rounding modes. Widely differing results indicate insufficient precision, rounding mode issues, ill-conditioned inputs, or a numerically unstable algorithm.</source>
          <target state="translated">A.小数模块使测试结果变得容易。最好的做法是用更高的精度和各种四舍五入模式重新运行计算。结果相差很大,说明精度不够,四舍五入模式问题,输入条件不好,或者数值不稳定的算法。</target>
        </trans-unit>
        <trans-unit id="6af8f2411bcef764bf4bed9c2423c5567318a5b2" translate="yes" xml:space="preserve">
          <source>A. Yes, any binary floating point number can be exactly expressed as a Decimal though an exact conversion may take more precision than intuition would suggest:</source>
          <target state="translated">A.是的,任何二进制浮点数都可以精确地表示为十进制数,尽管精确的转换可能需要比直觉更多的精度。</target>
        </trans-unit>
        <trans-unit id="7f7b86e04ad6ee66bb23f8e561b76dfb3714289b" translate="yes" xml:space="preserve">
          <source>A. Yes. In the CPython and PyPy3 implementations, the C/CFFI versions of the decimal module integrate the high speed &lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt; library for arbitrary precision correctly-rounded decimal floating point arithmetic &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;. &lt;code&gt;libmpdec&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba multiplication&lt;/a&gt; for medium-sized numbers and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt; for very large numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b3b49e07b2ffed558d950fbc8d141a043755f6" translate="yes" xml:space="preserve">
          <source>A. Yes. In the CPython and PyPy3 implementations, the C/CFFI versions of the decimal module integrate the high speed &lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt; library for arbitrary precision correctly-rounded decimal floating point arithmetic. &lt;code&gt;libmpdec&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba multiplication&lt;/a&gt; for medium-sized numbers and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt; for very large numbers. However, to realize this performance gain, the context needs to be set for unrounded calculations.</source>
          <target state="translated">答：是的。在CPython和PyPy3实现中，十进制模块的C / CFFI版本集成了高速&lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt;库，用于任意精度的正确舍入十进制浮点运算。 &lt;code&gt;libmpdec&lt;/code&gt; 将&lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba乘法&lt;/a&gt;用于中等大小的数字，并将&lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt;用于非常大的数字。但是，要实现这种性能提升，需要为非四舍五入的计算设置上下文。</target>
        </trans-unit>
        <trans-unit id="1a3cc723c0fbf6fce1cd335b2e051e9aa0f006ab" translate="yes" xml:space="preserve">
          <source>A. Yes. The principle is that all values are considered to be exact and so is the arithmetic on those values. Only the results are rounded. The advantage for inputs is that &amp;ldquo;what you type is what you get&amp;rdquo;. A disadvantage is that the results can look odd if you forget that the inputs haven&amp;rsquo;t been rounded:</source>
          <target state="translated">答：是的。原理是所有值都被认为是精确的，这些值的算术也是如此。仅将结果四舍五入。输入的优点是&amp;ldquo;您输入的就是您得到的&amp;rdquo;。缺点是，如果您忘记了输入没有四舍五入的结果，结果可能看起来很奇怪：</target>
        </trans-unit>
        <trans-unit id="3c01bdbb26f358bab27f267924aa2c9a03fcfdb8" translate="yes" xml:space="preserve">
          <source>ABC</source>
          <target state="translated">ABC</target>
        </trans-unit>
        <trans-unit id="7f5ec78b298239f25d4eedf9f08390184fa9f0f0" translate="yes" xml:space="preserve">
          <source>ABC for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; objects, which can be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expressions. Custom implementations must provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;等待&lt;/a&gt;对象的ABC ，可以在&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表达式中使用。定制实现必须提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b298b7e5b1f1a9b44dee31501307bbf8bbf40c3a" translate="yes" xml:space="preserve">
          <source>ABC for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; objects, which can be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expressions. Custom implementations must provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f010c60296129173d3201147bb2f74ffe0bbf019" translate="yes" xml:space="preserve">
          <source>ABC for asynchronous generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">异步发电机类的ABC，实现了&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492中&lt;/strong&gt;&lt;/a&gt;定义的协议。</target>
        </trans-unit>
        <trans-unit id="7822765e6f046b2e22b3015dc9f40823cfde84ac" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt;.</source>
          <target state="translated">提供 &lt;code&gt;__aiter__&lt;/code&gt; 和 &lt;code&gt;__anext__&lt;/code&gt; 方法的类的ABC 。另请参见&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;异步迭代器&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="1f9f33f03e90008a03cc1fbc29494b8d4efc7d3c" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eb81a44ab9b106c2098b95becee86a38c0e4e3" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; method. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;asynchronous iterable&lt;/a&gt;.</source>
          <target state="translated">提供 &lt;code&gt;__aiter__&lt;/code&gt; 方法的类的ABC 。另请参见&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;异步可迭代&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="e346357d155f0863bd1c27b87db3147cf6ee5398" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; method. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterable&quot;&gt;asynchronous iterable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f855e4e193f74dc187adea3f35b5e517486377bf" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法的类的ABC 。</target>
        </trans-unit>
        <trans-unit id="292e30239cefaf0272ea58d0e9252446da8da0d9" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a880cb36f6671eed782dbea77d9ed8448dce0a0" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e1c0aaceac77b9c891280c28ef294d57ae05de" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61380570df47b5847df8690a21f958262a0b65f8" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b0d0019985658cdee466d444ff3046f0723a3c" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07ce05477de3c6001717f47345abad6405a3e68" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;.</source>
          <target state="translated">提供&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法的类的ABC 。另请参见&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="7351886044acb81f786856f465e04454435e31ee" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477a0ec0ae4686b4b7160cec57ecef7a897b1f69" translate="yes" xml:space="preserve">
          <source>ABC for coroutine compatible classes. These implement the following methods, defined in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;Coroutine Objects&lt;/a&gt;: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. Custom implementations must also implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt;. All &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; instances are also instances of &lt;a href=&quot;#collections.abc.Awaitable&quot;&gt;&lt;code&gt;Awaitable&lt;/code&gt;&lt;/a&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;.</source>
          <target state="translated">适用于协程兼容类的ABC。它们实现了在&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;协程对象中&lt;/a&gt;定义的以下方法：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。定制实现还必须实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;。所有&lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt;实例也是实例&lt;a href=&quot;#collections.abc.Awaitable&quot;&gt; &lt;code&gt;Awaitable&lt;/code&gt; &lt;/a&gt;。另请参阅&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="c5bdbfd7c84e8d2fe9070ac7f501ee81a0edf6b8" translate="yes" xml:space="preserve">
          <source>ABC for coroutine compatible classes. These implement the following methods, defined in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine-objects&quot;&gt;Coroutine Objects&lt;/a&gt;: &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. Custom implementations must also implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt;. All &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; instances are also instances of &lt;a href=&quot;#collections.abc.Awaitable&quot;&gt;&lt;code&gt;Awaitable&lt;/code&gt;&lt;/a&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d28e2c22a4dbfdd76d81e2be95f80272298b4f" translate="yes" xml:space="preserve">
          <source>ABC for generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt; that extends iterators with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">生成器类的ABC，实现了&lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt;中定义的协议，该协议使用&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法扩展了迭代器。另请参见&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="a79dfe7659402a73038d0d4b42433be9335ec550" translate="yes" xml:space="preserve">
          <source>ABC for generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt; that extends iterators with the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0548b242874beb012653f72ceb70cf25e8733795" translate="yes" xml:space="preserve">
          <source>ABC for iterable classes that also provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">还提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;方法的可迭代类的ABC 。</target>
        </trans-unit>
        <trans-unit id="8c021e4ae4d3ee37e413ee5551dc900c21183652" translate="yes" xml:space="preserve">
          <source>ABC for iterable classes that also provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92ee93cd33bf6ba5fa8a1c70c98d3856ade0f4c" translate="yes" xml:space="preserve">
          <source>ABC for sized iterable container classes.</source>
          <target state="translated">容器类的大小可迭代的ABC。</target>
        </trans-unit>
        <trans-unit id="59647d4cbeaabde8a1d037a9dea14e674c553715" translate="yes" xml:space="preserve">
          <source>ABC hierarchy:</source>
          <target state="translated">ABC等级制度。</target>
        </trans-unit>
        <trans-unit id="0b0fbb7c06ed511ccb4423144202c87f813003e4" translate="yes" xml:space="preserve">
          <source>ABCs for classes that provide respectively the methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分别提供方法&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;类的ABC 。</target>
        </trans-unit>
        <trans-unit id="015be73827a640fdee0b89bf55fb5aff421c1ec3" translate="yes" xml:space="preserve">
          <source>ABCs for mapping, items, keys, and values &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">映射，项目，键和值&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;视图的&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="0264f29f31772b04830ce44089f454a6f2584a33" translate="yes" xml:space="preserve">
          <source>ABCs for mapping, items, keys, and values &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b7fe6f021ed9e9a7ce994b1445cda74cddbc7c" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mappings&lt;/a&gt;.</source>
          <target state="translated">只读和可变&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;映射的&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="d86e2109768137f54448089b433922ec0e56d34d" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequences&lt;/a&gt;.</source>
          <target state="translated">只读和可变&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;序列的&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="e53db294215f6a899b79e047ef49041870791a20" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;mappings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6297ac9fdbad7e632fb86ba052d65e227f654e77" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;sequences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace54a5c1800f9a8fbcc59c5817199681df7db33" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable sets.</source>
          <target state="translated">只读和可变集的ABC。</target>
        </trans-unit>
        <trans-unit id="f86d7a17edb02a17fa7d6037082a11974589497c" translate="yes" xml:space="preserve">
          <source>ACS code</source>
          <target state="translated">ACS代码</target>
        </trans-unit>
        <trans-unit id="f6ae31d47584845d5b7ec1a3525c346c981b4210" translate="yes" xml:space="preserve">
          <source>AIO requests</source>
          <target state="translated">AIO请求</target>
        </trans-unit>
        <trans-unit id="7cd735bc88414abeac25ef102606e6871aeba944" translate="yes" xml:space="preserve">
          <source>AIX</source>
          <target state="translated">AIX</target>
        </trans-unit>
        <trans-unit id="113a97cdab92673636cc95858168822f55ed3094" translate="yes" xml:space="preserve">
          <source>ANY</source>
          <target state="translated">ANY</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="fb44be4c1480d2e393e6140650808a3252950e7e" translate="yes" xml:space="preserve">
          <source>API reference for the logging module.</source>
          <target state="translated">日志模块的API参考。</target>
        </trans-unit>
        <trans-unit id="85772cf0096853ab75ec0710b340b4302c6a59bb" translate="yes" xml:space="preserve">
          <source>Abort a file transfer that is in progress. Using this does not always work, but it&amp;rsquo;s worth a try.</source>
          <target state="translated">中止正在进行的文件传输。使用此方法并不总是有效，但值得尝试。</target>
        </trans-unit>
        <trans-unit id="d1a265f8b05dbab0fc0f247d5a7b42c32db4a8a6" translate="yes" xml:space="preserve">
          <source>Abort signal from &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/abort(3)&quot;&gt;abort(3)&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a43092c673da6a4e7137e842ae9542e006479e1" translate="yes" xml:space="preserve">
          <source>About IDLE</source>
          <target state="translated">关于IDLE</target>
        </trans-unit>
        <trans-unit id="6d945808cdf52d5b08a921fc7f467995f1d2ba52" translate="yes" xml:space="preserve">
          <source>Abstract Base Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61ab640c5b98ffb68974b7f64188b17f4dd2a53" translate="yes" xml:space="preserve">
          <source>Abstract Grammar</source>
          <target state="translated">抽象语法</target>
        </trans-unit>
        <trans-unit id="5fde6504e20ecd1360ad9d942cd74ad60b2cc703" translate="yes" xml:space="preserve">
          <source>Abstract Methods</source>
          <target state="translated">抽象方法</target>
        </trans-unit>
        <trans-unit id="d663d5ecddcb7099c665bc6e641fc7287c322569" translate="yes" xml:space="preserve">
          <source>Abstract a key/value pair, which has some &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">抽象一个键/值对，它具有一些&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="344cb8aff69839e7bd97d5cbe55e40950f78e6c2" translate="yes" xml:space="preserve">
          <source>Abstract base class for arrays.</source>
          <target state="translated">数组的抽象基类。</target>
        </trans-unit>
        <trans-unit id="5159868f3346bfddd687c4b1c79e385a0b2b7314" translate="yes" xml:space="preserve">
          <source>Abstract base class for asyncio-compliant event loops.</source>
          <target state="translated">符合asyncio的事件循环的抽象基类。</target>
        </trans-unit>
        <trans-unit id="5a00e7a32834730b14935377913a4e39792f78b5" translate="yes" xml:space="preserve">
          <source>Abstract base class for generic types.</source>
          <target state="translated">通用类型的抽象基类。</target>
        </trans-unit>
        <trans-unit id="e90db39e674e4bc026807fcbf53f0a2f6df04011" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;big endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;大字节序&lt;/em&gt;字节顺序的结构的抽象基类。</target>
        </trans-unit>
        <trans-unit id="161636484cb5323de19447914374caeff71931d4" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;little endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;小尾数&lt;/em&gt;字节顺序的结构的抽象基类。</target>
        </trans-unit>
        <trans-unit id="d09915045304ac9b228bab360849a5f73ad7dc24" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;native&lt;/em&gt; byte order.</source>
          <target state="translated">结构的抽象基类以&lt;em&gt;本机&lt;/em&gt;字节顺序排列。</target>
        </trans-unit>
        <trans-unit id="989b4ac287af7bb629b745acd2c03089764dad2b" translate="yes" xml:space="preserve">
          <source>Abstract base class for unions in native byte order.</source>
          <target state="translated">以本机字节顺序进行联合的抽象基类。</target>
        </trans-unit>
        <trans-unit id="be904874648301c38c0cbd1e8e8ee45fc9ff355f" translate="yes" xml:space="preserve">
          <source>Abstract.</source>
          <target state="translated">Abstract.</target>
        </trans-unit>
        <trans-unit id="033f637625396067d78ede4d817a5e47570aed40" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the imaginary component of this number.</source>
          <target state="translated">摘要:读取这个数字的虚数部分。检索这个数字的虚分量。</target>
        </trans-unit>
        <trans-unit id="5dd4baa9cd2aedc339bb34801c67b8f428d8a227" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the real component of this number.</source>
          <target state="translated">摘要:读取这个数字的实数部分。检索这个数字的实数部分。</target>
        </trans-unit>
        <trans-unit id="7d8657883dbffc0354e7c89d9f5906b7e3171e7a" translate="yes" xml:space="preserve">
          <source>Abstract. Returns the complex conjugate. For example, &lt;code&gt;(1+3j).conjugate()
== (1-3j)&lt;/code&gt;.</source>
          <target state="translated">抽象。返回复数共轭。例如， &lt;code&gt;(1+3j).conjugate() == (1-3j)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="918a7e7e3abfc661fbce7b36f45ad4a008b3e4b6" translate="yes" xml:space="preserve">
          <source>AbstractBasicAuthHandler Objects</source>
          <target state="translated">AbstractBasicAuthHandler对象。</target>
        </trans-unit>
        <trans-unit id="35aeb77a12aeb24dd8853c33d313b402491b42a1" translate="yes" xml:space="preserve">
          <source>AbstractDigestAuthHandler Objects</source>
          <target state="translated">AbstractDigestAuthHandler对象。</target>
        </trans-unit>
        <trans-unit id="2d65bd49a1365a4f2d71a81612906c6eff60f7c3" translate="yes" xml:space="preserve">
          <source>Accept a &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; connection.</source>
          <target state="translated">接受&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;连接。</target>
        </trans-unit>
        <trans-unit id="3ca28d3cc8b69490da642723870f35d0d39797e0" translate="yes" xml:space="preserve">
          <source>Accept a base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object and decode it as the instance&amp;rsquo;s new data.</source>
          <target state="translated">接受一个base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象，并将其解码为实例的新数据。</target>
        </trans-unit>
        <trans-unit id="248136c7d4ed41a70a6986aad65af2eb7f26a157" translate="yes" xml:space="preserve">
          <source>Accept a connection on the bound socket or named pipe of the listener object and return a &lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object. If authentication is attempted and fails, then &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">接受侦听器对象的绑定套接字或命名管道上的&lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;并返回一个Connection对象。如果尝试进行&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;失败，则会引发AuthenticationError。</target>
        </trans-unit>
        <trans-unit id="68567e805163dadbfc1e5c5431016e1e5ff22046" translate="yes" xml:space="preserve">
          <source>Accept a connection. Modeled after the blocking &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">接受连接。根据阻塞的&lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept()&lt;/code&gt; &lt;/a&gt;方法建模。</target>
        </trans-unit>
        <trans-unit id="5e6d96453b4cda0f31d633767d452eb27962620b" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value can be either &lt;code&gt;None&lt;/code&gt; or a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection. When &lt;code&gt;None&lt;/code&gt; is returned it means the connection didn&amp;rsquo;t take place, in which case the server should just ignore this event and keep listening for further incoming connections.</source>
          <target state="translated">接受连接。套接字必须绑定到一个地址并监听连接。返回值可以是 &lt;code&gt;None&lt;/code&gt; 或一对 &lt;code&gt;(conn, address)&lt;/code&gt; ，其中&lt;em&gt;conn&lt;/em&gt;是可用于在连接上发送和接收数据的&lt;em&gt;新&lt;/em&gt;套接字对象，而&lt;em&gt;address&lt;/em&gt;是绑定到连接另一端上的套接字的地址。当返回 &lt;code&gt;None&lt;/code&gt; 时，表示未建立连接，在这种情况下，服务器应仅忽略此事件，并继续监听进一步的传入连接。</target>
        </trans-unit>
        <trans-unit id="bf1a228c35d50b158ea9e874327d777a40642808" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value is a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection.</source>
          <target state="translated">接受连接。套接字必须绑定到一个地址并监听连接。返回值是一对 &lt;code&gt;(conn, address)&lt;/code&gt; ，其中&lt;em&gt;conn&lt;/em&gt;是可用于在连接上发送和接收数据的&lt;em&gt;新&lt;/em&gt;套接字对象，而&lt;em&gt;address&lt;/em&gt;是在连接另一端绑定到套接字的地址。</target>
        </trans-unit>
        <trans-unit id="becea170712dd2efec29eca7cb2dd1f65a0fa7cd" translate="yes" xml:space="preserve">
          <source>Accept a string as the instance&amp;rsquo;s new time value.</source>
          <target state="translated">接受一个字符串作为实例的新时间值。</target>
        </trans-unit>
        <trans-unit id="05ba9cfd374cda2ea3202cabf287a75ce2cae7c9" translate="yes" xml:space="preserve">
          <source>Accepts a wide range of Python callables, from plain functions and classes to &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">从简单的函数和类到&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;对象，可接受各种Python可调用对象。</target>
        </trans-unit>
        <trans-unit id="cefd8c72a8263fd2b76f3d365284a05d42f5bcfa" translate="yes" xml:space="preserve">
          <source>Accepts an arbitrary callback function and arguments and adds it to the callback stack.</source>
          <target state="translated">接受一个任意的回调函数和参数,并将其添加到回调栈中。</target>
        </trans-unit>
        <trans-unit id="a5c4b76bbe3ef1a943cc50e4d249422d0b1aab87" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;MAIL FROM:&amp;rdquo; syntax and stores the supplied address as &lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt;&lt;code&gt;mailfrom&lt;/code&gt;&lt;/a&gt;. In extended command mode, accepts the &lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE attribute and responds appropriately based on the value of &lt;em&gt;data_size_limit&lt;/em&gt;.</source>
          <target state="translated">接受&amp;ldquo; MAIL FROM：&amp;rdquo;语法，并将提供的地址存储为&lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt; &lt;code&gt;mailfrom&lt;/code&gt; &lt;/a&gt;。在扩展命令模式下，接受&lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE属性，并根据&lt;em&gt;data_size_limit&lt;/em&gt;的值进行适当响应。</target>
        </trans-unit>
        <trans-unit id="ca73702311936fa8995eea8177ce31af536ccb02" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;RCPT TO:&amp;rdquo; syntax and stores the supplied addresses in the &lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt;&lt;code&gt;rcpttos&lt;/code&gt;&lt;/a&gt; list.</source>
          <target state="translated">接受&amp;ldquo; RCPT TO：&amp;rdquo;语法，并将提供的地址存储在&lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt; &lt;code&gt;rcpttos&lt;/code&gt; &lt;/a&gt;列表中。</target>
        </trans-unit>
        <trans-unit id="6fdda2dde2b8c2c191d15b7f3125ea94a39916cf" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to base command mode.</source>
          <target state="translated">接受来自客户端的问候并将其存储在&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; 中&lt;/a&gt;。将服务器设置为基本命令模式。</target>
        </trans-unit>
        <trans-unit id="c0b35569f1e8ae304d581f5e8821f7f16840b7d0" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to extended command mode.</source>
          <target state="translated">接受来自客户端的问候并将其存储在&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; 中&lt;/a&gt;。将服务器设置为扩展命令模式。</target>
        </trans-unit>
        <trans-unit id="8966aa55dca18b010cac9082dfd52437b31bf67c" translate="yes" xml:space="preserve">
          <source>Accepts two optional keyword arguments which are callables that accept an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; as an argument. The &lt;em&gt;firstiter&lt;/em&gt; callable will be called when an asynchronous generator is iterated for the first time. The &lt;em&gt;finalizer&lt;/em&gt; will be called when an asynchronous generator is about to be garbage collected.</source>
          <target state="translated">接受两个可选的关键字参数，它们是可调用的，它们接受&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;异步生成器迭代器&lt;/a&gt;作为参数。所述&lt;em&gt;firstiter&lt;/em&gt;当异步发电机被重复首次调用将被调用。当将要异步收集异步生成器时，将调用&lt;em&gt;终结&lt;/em&gt;器。</target>
        </trans-unit>
        <trans-unit id="327de47ac974e8a1e8a3bbfcc08a3fecd212e5a3" translate="yes" xml:space="preserve">
          <source>Accepts two optional keyword arguments which are callables that accept an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; as an argument. The &lt;em&gt;firstiter&lt;/em&gt; callable will be called when an asynchronous generator is iterated for the first time. The &lt;em&gt;finalizer&lt;/em&gt; will be called when an asynchronous generator is about to be garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05b284dc7ffc87c49e09a289e14dcbf79cfef75" translate="yes" xml:space="preserve">
          <source>Access Rights</source>
          <target state="translated">访问权</target>
        </trans-unit>
        <trans-unit id="731aec2d2a9b1fac8c050c5f45f4db5cae619c59" translate="yes" xml:space="preserve">
          <source>Access a member of the archive as a binary file-like object. &lt;em&gt;name&lt;/em&gt; can be either the name of a file within the archive or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. The &lt;em&gt;mode&lt;/em&gt; parameter, if included, must be &lt;code&gt;'r'&lt;/code&gt; (the default) or &lt;code&gt;'w'&lt;/code&gt;. &lt;em&gt;pwd&lt;/em&gt; is the password used to decrypt encrypted ZIP files.</source>
          <target state="translated">以类似于二进制文件的对象的形式访问存档的成员。&lt;em&gt;name&lt;/em&gt;可以是存档中文件的名称，也可以是&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;对象。所述&lt;em&gt;模式&lt;/em&gt;参数，如果包括的话，必须是 &lt;code&gt;'r'&lt;/code&gt; （缺省值）或 &lt;code&gt;'w'&lt;/code&gt; 。&lt;em&gt;pwd&lt;/em&gt;是用于解密加密的ZIP文件的密码。</target>
        </trans-unit>
        <trans-unit id="d198a0ec3c83b4614eaff43518cfa5395bac5e85" translate="yes" xml:space="preserve">
          <source>Access local Python documentation, if installed, or start a web browser and open docs.python.org showing the latest Python documentation.</source>
          <target state="translated">如果安装了Python文档,可以访问本地的Python文档,或者启动web浏览器,打开docs.python.org,显示最新的Python文档。</target>
        </trans-unit>
        <trans-unit id="7c0061ddf6eb005af80c77ef4895dee301897968" translate="yes" xml:space="preserve">
          <source>Access optional transport information; see &lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt;&lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">访问可选的运输信息；有关详细信息，请参见&lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt; &lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d1bb3577165fc1967c20f6f0b33bb6defaf538a" translate="yes" xml:space="preserve">
          <source>Access to external objects</source>
          <target state="translated">访问外部对象</target>
        </trans-unit>
        <trans-unit id="7317b09c89f800370b38efea04c5464e8c108a83" translate="yes" xml:space="preserve">
          <source>Access to internal objects</source>
          <target state="translated">访问内部对象</target>
        </trans-unit>
        <trans-unit id="d4dc38860a079acbf5040cd2135bd4d353e54f20" translate="yes" xml:space="preserve">
          <source>Access to message catalogs</source>
          <target state="translated">访问信息目录</target>
        </trans-unit>
        <trans-unit id="0b1a55fa626d7cf9e11c68cb8e95989f234a6996" translate="yes" xml:space="preserve">
          <source>Access to standard Tk dialog boxes.</source>
          <target state="translated">访问标准的Tk对话框。</target>
        </trans-unit>
        <trans-unit id="9e838cb51991a7a2ef425afc34411b6a4cf0eae9" translate="yes" xml:space="preserve">
          <source>Accessing Policies</source>
          <target state="translated">访问政策</target>
        </trans-unit>
        <trans-unit id="260c8c30ecab2bf1e4877cdc49b57bce6210e08e" translate="yes" xml:space="preserve">
          <source>Accessing a corrupted shared library</source>
          <target state="translated">访问损坏的共享库</target>
        </trans-unit>
        <trans-unit id="71af361ba292908615dcf5c8ccee9e932f4b7e7c" translate="yes" xml:space="preserve">
          <source>Accessing a function on a loaded library raises an auditing event &lt;code&gt;ctypes.dlsym&lt;/code&gt; with arguments &lt;code&gt;library&lt;/code&gt; (the library object) and &lt;code&gt;name&lt;/code&gt; (the symbol&amp;rsquo;s name as a string or integer).</source>
          <target state="translated">访问已加载库中的函数会引发带有参数 &lt;code&gt;library&lt;/code&gt; （库对象）和 &lt;code&gt;name&lt;/code&gt; （符号的名称为字符串或整数）的审核事件 &lt;code&gt;ctypes.dlsym&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c107c49a03817af8952bc8c0d4b6dc68bc4b981a" translate="yes" xml:space="preserve">
          <source>Accessing arguments by name:</source>
          <target state="translated">按名称访问参数。</target>
        </trans-unit>
        <trans-unit id="39422cfc3ffb30101755ff1504a2df9d616edb97" translate="yes" xml:space="preserve">
          <source>Accessing arguments by position:</source>
          <target state="translated">按位置访问论点。</target>
        </trans-unit>
        <trans-unit id="c4c9579bed0a7c63cc4d3b8d869c7d36d72fd3ac" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; attributes:</source>
          <target state="translated">访问参数的属性：</target>
        </trans-unit>
        <trans-unit id="41bb86cb017873fc6e571fbe9e03f681538517ea" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; items:</source>
          <target state="translated">访问参数项：</target>
        </trans-unit>
        <trans-unit id="9f0cf49831f659798a76611095b43215b4381b8b" translate="yes" xml:space="preserve">
          <source>Accessing columns by name instead of by index</source>
          <target state="translated">通过名称而不是通过索引访问列</target>
        </trans-unit>
        <trans-unit id="eecb5e7f1b2d16b54279aa55ca5db3732ef01003" translate="yes" xml:space="preserve">
          <source>Accessing functions from loaded dlls</source>
          <target state="translated">从加载的dll中访问函数</target>
        </trans-unit>
        <trans-unit id="8af8bbaf1dc41a5f30738fb7558c136542598c8b" translate="yes" xml:space="preserve">
          <source>Accessing individual parts</source>
          <target state="translated">访问各个部分</target>
        </trans-unit>
        <trans-unit id="87c5f0dfffab33c1f436f570abacf72146401b9c" translate="yes" xml:space="preserve">
          <source>Accessing the standard C library through &lt;code&gt;cdll.msvcrt&lt;/code&gt; will use an outdated version of the library that may be incompatible with the one being used by Python. Where possible, use native Python functionality, or else import and use the &lt;code&gt;msvcrt&lt;/code&gt; module.</source>
          <target state="translated">通过 &lt;code&gt;cdll.msvcrt&lt;/code&gt; 访问标准C库将使用该库的过时版本，该版本可能与Python使用的版本不兼容。尽可能使用本机Python功能，或者导入并使用 &lt;code&gt;msvcrt&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="82e4d72e3858dc40ef697c71e9c99dd6d1762691" translate="yes" xml:space="preserve">
          <source>Accessing values exported from dlls</source>
          <target state="translated">访问从dlls导出的值</target>
        </trans-unit>
        <trans-unit id="48469f0816b7d8b7b69f202f36d7c603ac67c4b9" translate="yes" xml:space="preserve">
          <source>Accessor Methods</source>
          <target state="translated">访问者方法</target>
        </trans-unit>
        <trans-unit id="44e86821ee29ea1890c19e6deb0a802a148a4975" translate="yes" xml:space="preserve">
          <source>According to POSIX, a program which has not called &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; runs using the portable &lt;code&gt;'C'&lt;/code&gt; locale. Calling &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; lets it use the default locale as defined by the &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; variable. Since we do not want to interfere with the current locale setting we thus emulate the behavior in the way described above.</source>
          <target state="translated">根据POSIX，未调用 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 使用可移植的 &lt;code&gt;'C'&lt;/code&gt; 语言环境运行。调用 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 使它使用由 &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; 变量定义的默认语言环境。由于我们不想干扰当前的语言环境设置，因此我们以上述方式模拟了行为。</target>
        </trans-unit>
        <trans-unit id="714a2a15ee3782a1162d672762e78d0a38134e5b" translate="yes" xml:space="preserve">
          <source>According to the letter of &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;, 301 and 302 responses to POST requests must not be automatically redirected without confirmation by the user. In reality, browsers do allow automatic redirection of these responses, changing the POST to a GET, and &lt;a href=&quot;urllib#module-urllib&quot;&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/a&gt; reproduces this behaviour.</source>
          <target state="translated">根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616的规定&lt;/strong&gt;&lt;/a&gt;，未经用户确认，不得自动重定向对POST请求的响应。实际上，浏览器确实允许这些响应的自动重定向，将POST更改为GET，而&lt;a href=&quot;urllib#module-urllib&quot;&gt; &lt;code&gt;urllib&lt;/code&gt; &lt;/a&gt;重现了这种行为。</target>
        </trans-unit>
        <trans-unit id="ad55855dcbc1c5b89cea1605223f9aada3fabb2b" translate="yes" xml:space="preserve">
          <source>Accordingly, constructor arguments are interpreted as for &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">因此，构造函数参数被解释为&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="082af44e6d89682179d27fdfd34277a7e0c2c9af" translate="yes" xml:space="preserve">
          <source>Acknowledgement</source>
          <target state="translated">Acknowledgement</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="81d5a6accac3654cbf66608938b8c9013df0a3bc" translate="yes" xml:space="preserve">
          <source>Acquire a lock, blocking or non-blocking.</source>
          <target state="translated">获得一把锁,不管是封锁的还是非封锁的。</target>
        </trans-unit>
        <trans-unit id="e60a27e953c80127dc19a93298d1b0c5a8852bd6" translate="yes" xml:space="preserve">
          <source>Acquire a semaphore.</source>
          <target state="translated">获得一个信号灯。</target>
        </trans-unit>
        <trans-unit id="d6a249c8c3f9d0be2a91d76168ee36b7ef8d69d0" translate="yes" xml:space="preserve">
          <source>Acquire an exclusive advisory lock on the mailbox so that other processes know not to modify it. An &lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt;&lt;code&gt;ExternalClashError&lt;/code&gt;&lt;/a&gt; is raised if the lock is not available. The particular locking mechanisms used depend upon the mailbox format. You should &lt;em&gt;always&lt;/em&gt; lock the mailbox before making any modifications to its contents.</source>
          <target state="translated">在邮箱上获取排他性咨询锁，以便其他进程知道不对其进行修改。一个&lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt; &lt;code&gt;ExternalClashError&lt;/code&gt; &lt;/a&gt;如果锁不可用提高。使用的特定锁定机制取决于邮箱格式。对其内容进行任何修改之前，应&lt;em&gt;始终&lt;/em&gt;锁定邮箱。</target>
        </trans-unit>
        <trans-unit id="7c4dfd85bf2c256ca750cb8f4e1e2fba7ac6580e" translate="yes" xml:space="preserve">
          <source>Acquire the lock.</source>
          <target state="translated">获取锁。</target>
        </trans-unit>
        <trans-unit id="461410d014d419ab175b1ebecd08ac6c77a09658" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock.</source>
          <target state="translated">获取基础锁。</target>
        </trans-unit>
        <trans-unit id="dafb6140598e25081787ea267e056be855b6622a" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock. This method calls the corresponding method on the underlying lock; the return value is whatever that method returns.</source>
          <target state="translated">获取底层锁。这个方法调用底层锁上的对应方法;返回值是该方法返回的任何值。</target>
        </trans-unit>
        <trans-unit id="30560da991fdd301ae97abf02a27135578dee389" translate="yes" xml:space="preserve">
          <source>Acquires the thread lock created with &lt;a href=&quot;#logging.Handler.createLock&quot;&gt;&lt;code&gt;createLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">获取使用&lt;a href=&quot;#logging.Handler.createLock&quot;&gt; &lt;code&gt;createLock()&lt;/code&gt; &lt;/a&gt;创建的线程锁。</target>
        </trans-unit>
        <trans-unit id="9292d87e220d1c1446b9354a9141178078ba0d7e" translate="yes" xml:space="preserve">
          <source>Acquiring a lock is &lt;em&gt;fair&lt;/em&gt;: the coroutine that proceeds will be the first coroutine that started waiting on the lock.</source>
          <target state="translated">获取锁是&lt;em&gt;公平的&lt;/em&gt;：继续执行的协程将是开始等待锁的第一个协程。</target>
        </trans-unit>
        <trans-unit id="084ab4fd9c6c6c0f36d4f70f9d53acd358725da3" translate="yes" xml:space="preserve">
          <source>Act like &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, except that for any subpart of the message passed to &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;Generator.flatten()&lt;/code&gt;&lt;/a&gt;, if the subpart is of main type &lt;em&gt;text&lt;/em&gt;, print the decoded payload of the subpart, and if the main type is not &lt;em&gt;text&lt;/em&gt;, instead of printing it fill in the string &lt;em&gt;fmt&lt;/em&gt; using information from the part and print the resulting filled-in string.</source>
          <target state="translated">类似于&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;，除了传递给&lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;Generator.flatten()&lt;/code&gt; &lt;/a&gt;的消息的任何子部分外，如果该子部分是main类型的&lt;em&gt;text&lt;/em&gt;，则打印该子部分的解码后的有效载荷，如果main类型不是&lt;em&gt;text&lt;/em&gt;，则不打印它使用零件中的信息填充字符串&lt;em&gt;fmt&lt;/em&gt;并打印生成的填充字符串。</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="9ace32a6134122ed597eae8340ee6101df735b51" translate="yes" xml:space="preserve">
          <source>Action classes</source>
          <target state="translated">行动类</target>
        </trans-unit>
        <trans-unit id="77717846e87426ca8b4508db5527a0d857cc7d2e" translate="yes" xml:space="preserve">
          <source>Action classes implement the Action API, a callable which returns a callable which processes arguments from the command-line. Any object which follows this API may be passed as the &lt;code&gt;action&lt;/code&gt; parameter to &lt;code&gt;add_argument()&lt;/code&gt;.</source>
          <target state="translated">动作类实现Action API，这是一个可调用的函数，该函数返回一个可调用的函数，该可处理函数从命令行处理参数。遵循此API的任何对象都可以作为 &lt;code&gt;action&lt;/code&gt; 参数传递给 &lt;code&gt;add_argument()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9513bff63fa8a804ba98e02cb9596699d8340afc" translate="yes" xml:space="preserve">
          <source>Action instances should be callable, so subclasses must override the &lt;code&gt;__call__&lt;/code&gt; method, which should accept four parameters:</source>
          <target state="translated">动作实例应该是可调用的，因此子类必须重写 &lt;code&gt;__call__&lt;/code&gt; 方法，该方法应接受四个参数：</target>
        </trans-unit>
        <trans-unit id="278d19782a6ed5702bc055475169e14e49eb9e12" translate="yes" xml:space="preserve">
          <source>Action objects are used by an ArgumentParser to represent the information needed to parse a single argument from one or more strings from the command line. The Action class must accept the two positional arguments plus any keyword arguments passed to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; except for the &lt;code&gt;action&lt;/code&gt; itself.</source>
          <target state="translated">ArgumentParser使用动作对象表示从命令行的一个或多个字符串解析单个参数所需的信息。Action类必须接受两个位置参数以及传递给&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; 的&lt;/a&gt;任何关键字参数，但 &lt;code&gt;action&lt;/code&gt; 本身除外。</target>
        </trans-unit>
        <trans-unit id="274ade548ee72e34686330c533661a7563d8223c" translate="yes" xml:space="preserve">
          <source>Action subclasses can define a &lt;code&gt;format_usage&lt;/code&gt; method that takes no argument and return a string which will be used when printing the usage of the program. If such method is not provided, a sensible default will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91165131a7ce5acb4d4c719b4a605bf1d3ffc98c" translate="yes" xml:space="preserve">
          <source>Action taken</source>
          <target state="translated">采取的行动</target>
        </trans-unit>
        <trans-unit id="e6380d337be56a56fb3795f7ef7ee4cb17f21bca" translate="yes" xml:space="preserve">
          <source>ActiveState Tcl Home Page</source>
          <target state="translated">ActiveState Tcl主页</target>
        </trans-unit>
        <trans-unit id="38727212af340538ef4171b11f8f296a8643ef4c" translate="yes" xml:space="preserve">
          <source>Actually needing to do this is likely to indicate that the underlying API should be providing a direct resource management interface for use with &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statements, but not all APIs are well designed in that regard. When a context manager is the only resource management API provided, then &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; can make it easier to handle various situations that can&amp;rsquo;t be handled directly in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">实际上需要执行此操作可能表明底层API应该提供直接的资源管理接口，以供&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;语句使用，但并非所有API在这方面都经过精心设计。当上下文管理器是唯一提供的资源管理API时，&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;可以使处理&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句无法直接处理的各种情况变得更加容易。</target>
        </trans-unit>
        <trans-unit id="d6e5856f7f4aca3ca4e4aef48b9bc8f012312bf5" translate="yes" xml:space="preserve">
          <source>Actually needing to do this is likely to indicate that the underlying API should be providing a direct resource management interface for use with &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statements, but not all APIs are well designed in that regard. When a context manager is the only resource management API provided, then &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; can make it easier to handle various situations that can&amp;rsquo;t be handled directly in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcbe0ccc46b10727260a3caa552d07256bb7ae9" translate="yes" xml:space="preserve">
          <source>Actually processes the request by instantiating &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; and calling its &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">实际上通过实例化&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;并调用其&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法来处理请求。</target>
        </trans-unit>
        <trans-unit id="c5a9bba7132d69477d4076fafc264c171f0a320f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;default&lt;/code&gt;&lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;warning filter&lt;/a&gt;. The following warnings are shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe8d459e873bfae322eb1ff9286a5013dcb630e" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;fallback&lt;/em&gt; as the fallback object for the current translation object. A translation object should consult the fallback if it cannot provide a translation for a given message.</source>
          <target state="translated">将&lt;em&gt;后备&lt;/em&gt;添加为当前翻译对象的后备对象。如果翻译对象无法为给定消息提供翻译，则应咨询后备。</target>
        </trans-unit>
        <trans-unit id="af8c722ee4c8561359335870777e3e5bf87069a7" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;increment&lt;/em&gt; to the process&amp;rsquo;s &amp;ldquo;niceness&amp;rdquo;. Return the new niceness.</source>
          <target state="translated">将&lt;em&gt;增量&lt;/em&gt;添加到过程的&amp;ldquo;精细度&amp;rdquo;中。返回新的美好。</target>
        </trans-unit>
        <trans-unit id="aa7983e1a637a4577bc6fffefae3ed5cea5dab92" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;items&lt;/em&gt; to the selection.</source>
          <target state="translated">将&lt;em&gt;项目&lt;/em&gt;添加到选择中。</target>
        </trans-unit>
        <trans-unit id="30c0a49b754a66b21573177a7299d76b8a5c131c" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;label&lt;/em&gt; to the list of labels on the message.</source>
          <target state="translated">将&lt;em&gt;标签&lt;/em&gt;添加到邮件上的标签列表。</target>
        </trans-unit>
        <trans-unit id="24db3772802faeab198405cd43d9db88ced07a1d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;message&lt;/em&gt; to the mailbox and return the key that has been assigned to it.</source>
          <target state="translated">将&lt;em&gt;消息&lt;/em&gt;添加到邮箱并返回已分配给它的密钥。</target>
        </trans-unit>
        <trans-unit id="5479b5f1d60a39cb75d31bd42ec9f9c48e1b4a8b" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;prefix&lt;/em&gt; to the beginning of selected lines in &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;前缀&lt;/em&gt;添加到&lt;em&gt;文本&lt;/em&gt;中所选行的开头。</target>
        </trans-unit>
        <trans-unit id="f44aea08a2fc88ec1e9f6c30ad49d2629a71e470" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;sequence&lt;/em&gt; to the list of sequences that include this message.</source>
          <target state="translated">将&lt;em&gt;序列&lt;/em&gt;添加到包含此消息的序列列表中。</target>
        </trans-unit>
        <trans-unit id="33a10ccdd8fd003a788443c4b85ed7eb60938600" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the left side of the deque.</source>
          <target state="translated">在双端队列的左侧添加&lt;em&gt;x&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3c25d5c0076f9d7d52148b8e3bb5f41c9a4a2f9d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the right side of the deque.</source>
          <target state="translated">在双端队列的右侧添加&lt;em&gt;x&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="24e6030669a49381174c0b5a66ddd6ac0dadd387" translate="yes" xml:space="preserve">
          <source>Add a (possibly multi-valued) header, with optional MIME parameters specified via keyword arguments.</source>
          <target state="translated">添加一个(可能是多值的)头,通过关键字参数指定可选的MIME参数。</target>
        </trans-unit>
        <trans-unit id="6ad671132a650abe04ac0277b23f2bd3dcbd37dd" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; to the suite.</source>
          <target state="translated">将&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;添加到套件中。</target>
        </trans-unit>
        <trans-unit id="cb9e0dfa54f74decdc101fb5b211589918af267c" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;#!&lt;/code&gt; line to the archive specifying &lt;em&gt;interpreter&lt;/em&gt; as the command to run. Also, on POSIX, make the archive executable. The default is to write no &lt;code&gt;#!&lt;/code&gt; line, and not make the file executable.</source>
          <target state="translated">添加 &lt;code&gt;#!&lt;/code&gt; 到指定&lt;em&gt;解释器&lt;/em&gt;作为运行命令的归档行。另外，在POSIX上，使归档文件可执行。默认为不写 &lt;code&gt;#!&lt;/code&gt; 行，并且不使文件可执行。</target>
        </trans-unit>
        <trans-unit id="11966b392bbd5d32167852567e5699616e11388f" translate="yes" xml:space="preserve">
          <source>Add a &lt;em&gt;Content-Type&lt;/em&gt; header with a &lt;code&gt;maintype/subtype&lt;/code&gt; value.</source>
          <target state="translated">添加具有&lt;em&gt;主类型&lt;/em&gt; &lt;code&gt;maintype/subtype&lt;/code&gt; 值的&lt;em&gt;Content-Type&lt;/em&gt;标头。</target>
        </trans-unit>
        <trans-unit id="84ac69830ac328f5af24cd917082c8ab71ae0bdd" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">添加一个要在Future &lt;em&gt;完成后&lt;/em&gt;运行的回调。</target>
        </trans-unit>
        <trans-unit id="21ad57f0c79a1dece0ae4e997db0ef88ee98f10c" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Task is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">添加在任务&lt;em&gt;完成后&lt;/em&gt;要运行的回调。</target>
        </trans-unit>
        <trans-unit id="e692059a99db6212feae89c0b74f4f86c48a8179" translate="yes" xml:space="preserve">
          <source>Add a character set alias. &lt;em&gt;alias&lt;/em&gt; is the alias name, e.g. &lt;code&gt;latin-1&lt;/code&gt;. &lt;em&gt;canonical&lt;/em&gt; is the character set&amp;rsquo;s canonical name, e.g. &lt;code&gt;iso-8859-1&lt;/code&gt;.</source>
          <target state="translated">添加字符集别名。&lt;em&gt;alias&lt;/em&gt;是别名，例如 &lt;code&gt;latin-1&lt;/code&gt; 。&lt;em&gt;canonical&lt;/em&gt;是字符集的规范名称，例如 &lt;code&gt;iso-8859-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11e078738b2dfdecaf78a03a7ad2e1f50dd6454f" translate="yes" xml:space="preserve">
          <source>Add a codec that map characters in the given character set to and from Unicode.</source>
          <target state="translated">添加一个编解码器,将给定字符集中的字符映射到Unicode中或从Unicode中映射出来。</target>
        </trans-unit>
        <trans-unit id="6864afe1da0b0e5f3b0be081911c070361ce7f9d" translate="yes" xml:space="preserve">
          <source>Add a director as parent.</source>
          <target state="translated">增加一名董事作为家长。</target>
        </trans-unit>
        <trans-unit id="f4f4ec5cb3f34d7548e8ce61a5b61b98f0a79146" translate="yes" xml:space="preserve">
          <source>Add a directory to sys.path and process its &lt;code&gt;.pth&lt;/code&gt; files. Typically used in &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; (see above).</source>
          <target state="translated">将目录添加到sys.path并处理其 &lt;code&gt;.pth&lt;/code&gt; 文件。通常用于 &lt;code&gt;sitecustomize&lt;/code&gt; 或 &lt;code&gt;usercustomize&lt;/code&gt; （请参见上文）。</target>
        </trans-unit>
        <trans-unit id="b7e0cf044bf83f105b1c2df55e4a2994ff91feee" translate="yes" xml:space="preserve">
          <source>Add a file to the current component of the directory, starting a new one if there is no current component. By default, the file name in the source and the file table will be identical. If the &lt;em&gt;src&lt;/em&gt; file is specified, it is interpreted relative to the current directory. Optionally, a &lt;em&gt;version&lt;/em&gt; and a &lt;em&gt;language&lt;/em&gt; can be specified for the entry in the File table.</source>
          <target state="translated">将文件添加到目录的当前组件，如果没有当前组件，则开始一个新文件。默认情况下，源和文件表中的文件名将相同。如果指定了&lt;em&gt;src&lt;/em&gt;文件，则会相对于当前目录进行解释。（可选）可以为&amp;ldquo;文件&amp;rdquo;表中的条目指定&lt;em&gt;版本&lt;/em&gt;和&lt;em&gt;语言&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e1b148a57e911bae17afc91f03e7661232e219c7" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">在&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;之后添加一个要调用的函数，以清理测试期间使用的资源。函数的调用顺序与添加函数的顺序相反（</target>
        </trans-unit>
        <trans-unit id="78ce526e4b4169e82bfb42d8527ed56483cd78b4" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">在&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt;之后添加一个要调用的函数，以清理测试类期间使用的资源。函数的调用顺序与添加函数的顺序相反（</target>
        </trans-unit>
        <trans-unit id="5b62e8d801245195a11f24b7a0d01ffecdbafd41" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;code&gt;tearDownModule()&lt;/code&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">在 &lt;code&gt;tearDownModule()&lt;/code&gt; 之后添加一个要调用的函数，以清理测试类中使用的资源。函数的调用顺序与添加函数的顺序相反（</target>
        </trans-unit>
        <trans-unit id="9beb6337ad420738cf187ef7704f4b9c84fc673f" translate="yes" xml:space="preserve">
          <source>Add a handler for a &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加一个&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;处理程序。</target>
        </trans-unit>
        <trans-unit id="d38459dabab55a25da4ed78ba4eb990299fd36c8" translate="yes" xml:space="preserve">
          <source>Add a header that will not be added to a redirected request.</source>
          <target state="translated">添加一个不会被添加到重定向请求的头。</target>
        </trans-unit>
        <trans-unit id="f2603d5ae35616f68557abf0dc068f3846cc8c46" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing fields.</source>
          <target state="translated">向消息添加标头，其字段名称为&lt;em&gt;name&lt;/em&gt;，值为&lt;em&gt;val&lt;/em&gt;。该字段将附加到邮件现有字段的末尾。</target>
        </trans-unit>
        <trans-unit id="8a8b78b89a289dd8343df6ddfaae9ce828ff046b" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing headers.</source>
          <target state="translated">向消息添加标头，其字段名称为&lt;em&gt;name&lt;/em&gt;，值为&lt;em&gt;val&lt;/em&gt;。该字段将附加到邮件现有标题的末尾。</target>
        </trans-unit>
        <trans-unit id="399487ac348d2614389b7168ca41dd04673b039c" translate="yes" xml:space="preserve">
          <source>Add a list of files to the current component as specified in the glob pattern. Individual files can be excluded in the &lt;em&gt;exclude&lt;/em&gt; list.</source>
          <target state="translated">按照glob模式中的指定，将文件列表添加到当前组件。单个文件可以在&lt;em&gt;排除&lt;/em&gt;列表中&lt;em&gt;排除&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a132f64a1d2da65d23dfabb4ad146d6d74425848" translate="yes" xml:space="preserve">
          <source>Add a mapping from the MIME type &lt;em&gt;type&lt;/em&gt; to the extension &lt;em&gt;ext&lt;/em&gt;. When the extension is already known, the new type will replace the old one. When the type is already known the extension will be added to the list of known extensions.</source>
          <target state="translated">添加一个从MIME类型&lt;em&gt;类型&lt;/em&gt;到扩展名&lt;em&gt;ext&lt;/em&gt;的映射。当扩展名已知时，新类型将替换旧的。当类型已知时，扩展名将添加到已知扩展名列表中。</target>
        </trans-unit>
        <trans-unit id="7632c76ae9b370fe2c8ab64acfc2c8365dcbe310" translate="yes" xml:space="preserve">
          <source>Add a mark with the given id (larger than 0), and the given name at the given position. This method can be called at any time before &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在给定位置添加具有给定id（大于0）和给定名称的标记。可以在&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;之前的任何时间调用此方法。</target>
        </trans-unit>
        <trans-unit id="c5dbd50d1faa7567cdc7358bac4bacf2a33aa997" translate="yes" xml:space="preserve">
          <source>Add a new action at the beginning. See &lt;a href=&quot;#pipes.Template.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; for explanations of the arguments.</source>
          <target state="translated">在开始处添加一个新动作。有关参数的说明，请参见&lt;a href=&quot;#pipes.Template.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="043d2a3cceb4af1dd193034c1f7337a877747c87" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;name&lt;/code&gt; attribute matches. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">将新的属性节点添加到元素，如果 &lt;code&gt;name&lt;/code&gt; 属性匹配，则在必要时替换现有属性。如果发生替换，将返回旧的属性节点。如果&lt;em&gt;newAttr&lt;/em&gt;已经在使用中，则将引发&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83d2435f056be8af45e7ae386b8b99adbd638555" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;namespaceURI&lt;/code&gt; and &lt;code&gt;localName&lt;/code&gt; attributes match. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">将一个新的属性节点添加到该元素，如果 &lt;code&gt;namespaceURI&lt;/code&gt; 和 &lt;code&gt;localName&lt;/code&gt; 属性匹配，则在必要时替换现有属性。如果发生替换，将返回旧的属性节点。如果&lt;em&gt;newAttr&lt;/em&gt;已经在使用中，则将引发&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f1ba12e042226aebc04d021425dcda3c82b9d6d" translate="yes" xml:space="preserve">
          <source>Add a new child node to this node at the end of the list of children, returning &lt;em&gt;newChild&lt;/em&gt;. If the node was already in the tree, it is removed first.</source>
          <target state="translated">在子节点列表的末尾将此节点添加一个新的子节点，返回&lt;em&gt;newChild&lt;/em&gt;。如果该节点已经在树中，则将其首先删除。</target>
        </trans-unit>
        <trans-unit id="4320fe50407e125c401df7995f33a5363ae33796" translate="yes" xml:space="preserve">
          <source>Add a new node and its predecessors to the graph. Both the &lt;em&gt;node&lt;/em&gt; and all elements in &lt;em&gt;predecessors&lt;/em&gt; must be hashable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956452c465afe1d5906a42ce4cf84991525c7da4" translate="yes" xml:space="preserve">
          <source>Add a new record to the &lt;code&gt;Feature&lt;/code&gt; table, using the values &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;parent.id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;desc&lt;/em&gt;, &lt;em&gt;display&lt;/em&gt;, &lt;em&gt;level&lt;/em&gt;, &lt;em&gt;directory&lt;/em&gt;, and &lt;em&gt;attributes&lt;/em&gt;. The resulting feature object can be passed to the &lt;code&gt;start_component()&lt;/code&gt; method of &lt;a href=&quot;#msilib.Directory&quot;&gt;&lt;code&gt;Directory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用值&lt;em&gt;id&lt;/em&gt;，&lt;em&gt;parent.id&lt;/em&gt;，&lt;em&gt;title&lt;/em&gt;，&lt;em&gt;desc&lt;/em&gt;，&lt;em&gt;display&lt;/em&gt;，&lt;em&gt;level&lt;/em&gt;，&lt;em&gt;directory&lt;/em&gt;和&lt;em&gt;attribute&lt;/em&gt;将新记录添加到 &lt;code&gt;Feature&lt;/code&gt; 表。可以将生成的功能对象传递给&lt;a href=&quot;#msilib.Directory&quot;&gt; &lt;code&gt;Directory&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;start_component()&lt;/code&gt; 方法。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edf4e5ba20ecf9c15997bd4578bcf0e6d730a52b" translate="yes" xml:space="preserve">
          <source>Add a path to the DLL search path.</source>
          <target state="translated">为DLL搜索路径添加一个路径。</target>
        </trans-unit>
        <trans-unit id="803042366eb338df43adb37b2c3158da3cb637b5" translate="yes" xml:space="preserve">
          <source>Add a radio button named &lt;em&gt;name&lt;/em&gt; to the group, at the coordinates &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, and with the label &lt;em&gt;text&lt;/em&gt;. If &lt;em&gt;value&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, it defaults to &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">将名为&lt;em&gt;name&lt;/em&gt;的单选按钮添加到组中，其坐标为&lt;em&gt;x&lt;/em&gt;，&lt;em&gt;y&lt;/em&gt;，&lt;em&gt;width&lt;/em&gt;，&lt;em&gt;height&lt;/em&gt;，并带有标签&lt;em&gt;text&lt;/em&gt;。如果&lt;em&gt;value&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则默认为&lt;em&gt;name&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c244c1c66537416292b44411850e0f1a066b6064" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">将名为&lt;em&gt;section的节&lt;/em&gt;添加到实例。如果给定名称的节已经存在，则会引发&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;。如果传递了&lt;em&gt;默认的节&lt;/em&gt;名称，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18563df0f6461bd157eae779d180068be1023816" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The name of the section must be a string; if not, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">将名为&lt;em&gt;section的节&lt;/em&gt;添加到实例。如果给定名称的节已经存在，则会引发&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;。如果传递了&lt;em&gt;默认的节&lt;/em&gt;名称，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。该部分的名称必须是字符串；如果不是，则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec2b76ff3671d42ae4e68ce30a3d7a4f0d38926e" translate="yes" xml:space="preserve">
          <source>Add a spec to a mock. &lt;em&gt;spec&lt;/em&gt; can either be an object or a list of strings. Only attributes on the &lt;em&gt;spec&lt;/em&gt; can be fetched as attributes from the mock.</source>
          <target state="translated">向模拟添加规格。&lt;em&gt;spec&lt;/em&gt;可以是一个对象或字符串列表。只能从模拟中获取&lt;em&gt;规范&lt;/em&gt;上的属性作为属性。</target>
        </trans-unit>
        <trans-unit id="f67e36b3f39cd8d22597658d1382717ef4e6e7a2" translate="yes" xml:space="preserve">
          <source>Add a turtle shape to TurtleScreen&amp;rsquo;s shapelist. Only thusly registered shapes can be used by issuing the command &lt;code&gt;shape(shapename)&lt;/code&gt;.</source>
          <target state="translated">将乌龟形状添加到TurtleScreen的形状列表中。通过发出命令 &lt;code&gt;shape(shapename)&lt;/code&gt; ,只能使用已注册的形状。</target>
        </trans-unit>
        <trans-unit id="5d8d20ed6f4efb55c981390f1995febb05a8b4dc" translate="yes" xml:space="preserve">
          <source>Add additional nodes to the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9170cfd78aba11ef6be48039048ae498ec91fe" translate="yes" xml:space="preserve">
          <source>Add all &lt;em&gt;records&lt;/em&gt; to the table named &lt;em&gt;table&lt;/em&gt; in &lt;em&gt;database&lt;/em&gt;.</source>
          <target state="translated">将所有&lt;em&gt;记录&lt;/em&gt;添加到&lt;em&gt;database&lt;/em&gt;中名为&lt;em&gt;table的表&lt;/em&gt;中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecbebdd271fd104189ee86c2c855300b2e2554a0" translate="yes" xml:space="preserve">
          <source>Add all table content from &lt;em&gt;module&lt;/em&gt; to &lt;em&gt;database&lt;/em&gt;. &lt;em&gt;module&lt;/em&gt; must contain an attribute &lt;em&gt;tables&lt;/em&gt; listing all tables for which content should be added, and one attribute per table that has the actual content.</source>
          <target state="translated">将所有表内容从&lt;em&gt;模块&lt;/em&gt;添加到&lt;em&gt;数据库&lt;/em&gt;。&lt;em&gt;模块&lt;/em&gt;必须包含一个列出所有应为其添加内容的表的属性&lt;em&gt;表&lt;/em&gt;，以及每个具有实际内容的表的属性。</target>
        </trans-unit>
        <trans-unit id="372176a3e2381d173f49ac01e30bb3b9770b39f4" translate="yes" xml:space="preserve">
          <source>Add all the tests from an iterable of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instances to this test suite.</source>
          <target state="translated">将来自可迭代的&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;实例的所有测试添加到此测试套件中。</target>
        </trans-unit>
        <trans-unit id="b492c2a99126b9234ddf251a1a59fe971fb37f2d" translate="yes" xml:space="preserve">
          <source>Add an entry to the Component table, and make this component the current component for this directory. If no component name is given, the directory name is used. If no &lt;em&gt;feature&lt;/em&gt; is given, the current feature is used. If no &lt;em&gt;flags&lt;/em&gt; are given, the directory&amp;rsquo;s default flags are used. If no &lt;em&gt;keyfile&lt;/em&gt; is given, the KeyPath is left null in the Component table.</source>
          <target state="translated">将一个条目添加到Component表中，并使该组件成为该目录的当前组件。如果未给出组件名称，则使用目录名称。如果未&lt;em&gt;提供&lt;/em&gt;任何&lt;em&gt;功能&lt;/em&gt;，则使用当前功能。如果没有&lt;em&gt;标志&lt;/em&gt;给出，将使用目录的缺省标志。如果未提供&lt;em&gt;密钥文件&lt;/em&gt;，则在Component表中将KeyPath保留为空。</target>
        </trans-unit>
        <trans-unit id="a8e4ba9db45e2b8738b50e71a58cacd0bcd42541" translate="yes" xml:space="preserve">
          <source>Add an explicit test for any bugs discovered for the tested code. This will make sure that the error does not crop up again if the code is changed in the future.</source>
          <target state="translated">为测试过的代码添加一个显式测试,以测试发现的任何错误。这将确保在将来修改代码时不会再次出现错误。</target>
        </trans-unit>
        <trans-unit id="9b04913d79f7cfbfe6863c93041cd08396c02274" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Bitmap&lt;/code&gt; control.</source>
          <target state="translated">添加并返回一个 &lt;code&gt;Bitmap&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="f04e5aee74da749672ecd3c375440bfd289ebf25" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;CheckBox&lt;/code&gt; control.</source>
          <target state="translated">添加并返回一个 &lt;code&gt;CheckBox&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="1ea55273868e472ba5cd1fdff1290be6e3270470" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Line&lt;/code&gt; control.</source>
          <target state="translated">添加并返回一个 &lt;code&gt;Line&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="32eb8ef0229fb6b8591a91aa431c3b6229972d3d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;PushButton&lt;/code&gt; control.</source>
          <target state="translated">添加并返回一个 &lt;code&gt;PushButton&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="d7f8c90252afef47d34178872d2340f46e7b6d4d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;RadioButtonGroup&lt;/code&gt; control.</source>
          <target state="translated">添加并返回 &lt;code&gt;RadioButtonGroup&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="fa6a94fb866d23f14896c6e66cc37b189a24a3c4" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Text&lt;/code&gt; control.</source>
          <target state="translated">添加并返回一个 &lt;code&gt;Text&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="13e9733ac929160d5ff41a7a4ad44c3cefe7d8b3" translate="yes" xml:space="preserve">
          <source>Add another header to the request. Headers are currently ignored by all handlers except HTTP handlers, where they are added to the list of headers sent to the server. Note that there cannot be more than one header with the same name, and later calls will overwrite previous calls in case the &lt;em&gt;key&lt;/em&gt; collides. Currently, this is no loss of HTTP functionality, since all headers which have meaning when used more than once have a (header-specific) way of gaining the same functionality using only one header.</source>
          <target state="translated">向请求添加另一个标头。目前，所有处理程序都会忽略标头，但HTTP处理程序除外，HTTP处理程序会将标头添加到发送到服务器的标头列表中。请注意，具有相同名称的头不能超过一个，并且如果&lt;em&gt;键&lt;/em&gt;冲突，以后的调用将覆盖以前的调用。当前，这不会丢失HTTP功能，因为具有多次使用意义的所有标头都具有一种（标头专用）方式，仅使用一个标头即可获得相同的功能。</target>
        </trans-unit>
        <trans-unit id="29a0d6ad071e1ad1763bdd7c92a4be720791a0dc" translate="yes" xml:space="preserve">
          <source>Add as many components to this object as desired, using the &lt;code&gt;addcomponent()&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;addcomponent()&lt;/code&gt; 方法将所需数量的组件添加到该对象。</target>
        </trans-unit>
        <trans-unit id="12c1a2c19bbd4d6f91aa72baacc717bacee4a8c0" translate="yes" xml:space="preserve">
          <source>Add attribute &lt;em&gt;attr&lt;/em&gt; from the &amp;ldquo;background&amp;rdquo; set applied to all writes to the current window.</source>
          <target state="translated">从应用于所有当前窗口写入的&amp;ldquo;背景&amp;rdquo;设置中添加属性&lt;em&gt;attr&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="998b3790c02bae2255f37d067df86dafa27f4dbb" translate="yes" xml:space="preserve">
          <source>Add character &lt;em&gt;ch&lt;/em&gt; with attribute &lt;em&gt;attr&lt;/em&gt;, and immediately call &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; on the window.</source>
          <target state="translated">添加具有属性&lt;em&gt;attr的&lt;/em&gt;字符&lt;em&gt;ch&lt;/em&gt;，并立即在窗口上调用&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79b5c2ddead03fd3fd58c82009a9c6954a412b24" translate="yes" xml:space="preserve">
          <source>Add character properties to the global registry.</source>
          <target state="translated">在全局注册表中添加字符属性。</target>
        </trans-unit>
        <trans-unit id="df120b4456df84f654f676f6eaeadfd2e64a3bb2" translate="yes" xml:space="preserve">
          <source>Add correct &lt;em&gt;Cookie&lt;/em&gt; header to &lt;em&gt;request&lt;/em&gt;.</source>
          <target state="translated">向&lt;em&gt;request&lt;/em&gt;添加正确的&lt;em&gt;Cookie&lt;/em&gt;标头。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574ee98f08df0ee8c3a2828a4f73b12f29637bb1" translate="yes" xml:space="preserve">
          <source>Add element &lt;em&gt;elem&lt;/em&gt; to the set.</source>
          <target state="translated">将元素&lt;em&gt;elem&lt;/em&gt;添加到集合中。</target>
        </trans-unit>
        <trans-unit id="7e352b09639827f1e7d4681172bc702d69e5025a" translate="yes" xml:space="preserve">
          <source>Add headers and payload to &lt;em&gt;msg&lt;/em&gt;:</source>
          <target state="translated">将标题和有效负载添加到&lt;em&gt;msg&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0af4c5b16248d5b4cd5df95eeac8d02e624fbba5" translate="yes" xml:space="preserve">
          <source>Add support for when a program which uses &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; has been frozen to produce a Windows executable. (Has been tested with &lt;strong&gt;py2exe&lt;/strong&gt;, &lt;strong&gt;PyInstaller&lt;/strong&gt; and &lt;strong&gt;cx_Freeze&lt;/strong&gt;.)</source>
          <target state="translated">添加对冻结使用&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;程序的程序以生成Windows可执行文件的支持。（已经使用&lt;strong&gt;py2exe&lt;/strong&gt;，&lt;strong&gt;PyInstaller&lt;/strong&gt;和&lt;strong&gt;cx_Freeze&lt;/strong&gt;进行了测试。）</target>
        </trans-unit>
        <trans-unit id="3ffc4ee278ee53e1d735791b4acf7a7f15d9b077" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarinfo&lt;/em&gt; to the archive. If &lt;em&gt;fileobj&lt;/em&gt; is given, it should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;, and &lt;code&gt;tarinfo.size&lt;/code&gt; bytes are read from it and added to the archive. You can create &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects directly, or by using &lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt;&lt;code&gt;gettarinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象&lt;em&gt;tarinfo&lt;/em&gt;添加到存档中。如果给定了&lt;em&gt;fileobj&lt;/em&gt;，则它应该是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;二进制文件&lt;/a&gt;，并且 &lt;code&gt;tarinfo.size&lt;/code&gt; 读取tarinfo.size字节并将其添加到存档中。您可以直接创建&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象，也可以使用&lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt; &lt;code&gt;gettarinfo()&lt;/code&gt; &lt;/a&gt;来创建。</target>
        </trans-unit>
        <trans-unit id="7e0d8d81e3b39d32c1f9e52ff590ee50f80f2bfb" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarinfo&lt;/em&gt; to the archive. If &lt;em&gt;fileobj&lt;/em&gt; is given, it should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;, and &lt;code&gt;tarinfo.size&lt;/code&gt; bytes are read from it and added to the archive. You can create &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects directly, or by using &lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt;&lt;code&gt;gettarinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfaeb4db76038933f7f7f07bb6e34cf522668b0" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;name&lt;/em&gt; to the archive. &lt;em&gt;name&lt;/em&gt; may be any type of file (directory, fifo, symbolic link, etc.). If given, &lt;em&gt;arcname&lt;/em&gt; specifies an alternative name for the file in the archive. Directories are added recursively by default. This can be avoided by setting &lt;em&gt;recursive&lt;/em&gt; to &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. Recursion adds entries in sorted order. If &lt;em&gt;filter&lt;/em&gt; is given, it should be a function that takes a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object argument and returns the changed &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If it instead returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object will be excluded from the archive. See &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt; for an example.</source>
          <target state="translated">将文件&lt;em&gt;名&lt;/em&gt;添加到存档。&lt;em&gt;名称&lt;/em&gt;可以是任何类型的文件（目录，fifo，符号链接等）。如果提供了&lt;em&gt;arcname，&lt;/em&gt;则为归档文件中的文件指定备用名称。默认情况下，将以递归方式添加目录。通过将&lt;em&gt;递归&lt;/em&gt;设置为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;可以避免这种情况。递归按排序顺序添加条目。如果指定了&lt;em&gt;filter&lt;/em&gt;，则它应该是一个接受&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象参数并返回更改后的&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象的函数。如果改为返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;从存档中排除TarInfo对象。有关&lt;a href=&quot;#tar-examples&quot;&gt;示例&lt;/a&gt;，请参见示例。</target>
        </trans-unit>
        <trans-unit id="d29a955c2b80ea1b99365c302eb9e52329eccf96" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;path&lt;/em&gt; into the &lt;code&gt;_Stream&lt;/code&gt; table of &lt;em&gt;database&lt;/em&gt;, with the stream name &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">将文件&lt;em&gt;路径&lt;/em&gt;以流名称&lt;em&gt;name&lt;/em&gt;添加到&lt;em&gt;数据库&lt;/em&gt;的 &lt;code&gt;_Stream&lt;/code&gt; 表中。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84b4718bc09ff9c6bdaed6b0ebcaf35dcdb8fe6f" translate="yes" xml:space="preserve">
          <source>Add the file with the pathname &lt;em&gt;full&lt;/em&gt; to the CAB file, under the name &lt;em&gt;logical&lt;/em&gt;. If there is already a file named &lt;em&gt;logical&lt;/em&gt;, a new file name is created.</source>
          <target state="translated">将路径名称为&lt;em&gt;full&lt;/em&gt;的文件添加到CAB文件中，名称为&lt;em&gt;logical&lt;/em&gt;。如果已经有一个名为&lt;em&gt;logical&lt;/em&gt;的文件，则会创建一个新文件名。</target>
        </trans-unit>
        <trans-unit id="fd308f86fbcd8cd8291b8e54f5281bd95fc24e2e" translate="yes" xml:space="preserve">
          <source>Add the given &lt;em&gt;payload&lt;/em&gt; to the current payload, which must be &lt;code&gt;None&lt;/code&gt; or a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects before the call. After the call, the payload will always be a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. If you want to set the payload to a scalar object (e.g. a string), use &lt;a href=&quot;#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">将给定的&lt;em&gt;有效负载&lt;/em&gt;添加到当前有效负载，该有效负载必须为 &lt;code&gt;None&lt;/code&gt; 或调用之前的&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象列表。调用之后，有效负载将始终是&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象的列表。如果要将有效负载设置为标量对象（例如字符串），请使用&lt;a href=&quot;#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="f7d0ce06c6bbfae7f3d2b3526eb4216ad14cdf22" translate="yes" xml:space="preserve">
          <source>Added callables are called in the order that they were added and are always called in a thread belonging to the process that added them. If the callable raises an &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; subclass, it will be logged and ignored. If the callable raises a &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; subclass, the behavior is undefined.</source>
          <target state="translated">添加的可调用对象按添加顺序被调用，并且始终在属于添加它们的进程的线程中调用。如果可调用对象引发&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;子类，则它将被记录并忽略。如果callable引发&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;子类，则该行为未定义。</target>
        </trans-unit>
        <trans-unit id="1b85233cd9ebffe50d11b2cf0805696ea0ceed2c" translate="yes" xml:space="preserve">
          <source>Added the &lt;em&gt;initializer&lt;/em&gt; and &lt;em&gt;initargs&lt;/em&gt; arguments.</source>
          <target state="translated">添加了&lt;em&gt;初始化程序&lt;/em&gt;和&lt;em&gt;initargs&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8827f17fde890fe438a85bcb36162a90217916ab" translate="yes" xml:space="preserve">
          <source>Adding HTTP headers:</source>
          <target state="translated">添加HTTP头文件。</target>
        </trans-unit>
        <trans-unit id="32794b36e540f138de7310a0852226f80b61a093" translate="yes" xml:space="preserve">
          <source>Adding More Numeric ABCs</source>
          <target state="translated">增加更多的数字ABC</target>
        </trans-unit>
        <trans-unit id="b8e5ab085a6e2321c969eab106d044654f14d5d5" translate="yes" xml:space="preserve">
          <source>Adding arguments</source>
          <target state="translated">添加参数</target>
        </trans-unit>
        <trans-unit id="366c31b6684891779f28e34e482fc51e6affae83" translate="yes" xml:space="preserve">
          <source>Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk for the novice. The book is not exhaustive, and for many details it defers to the man pages.</source>
          <target state="translated">Addison-Wesley出版了一本名为《Tcl和Tk工具包》的书,作者是John Ousterhout(ISBN 0-201-63337-X),对于新手来说,这本书是一本很好的Tcl和Tk入门书。这本书并不详尽,很多细节都可以参考手册中的内容。</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="e1c5ea673fbb82149c08ab498bee248bfd9199d0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">附加的HTTP状态代码&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="427bece2ad850698371dca05dc622c9d29b6935f" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">附加的HTTP状态代码&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b16d8a6bb760515890fca9c712c787901b31c7ff" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">附加的HTTP状态代码&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b991878ce0b40a6b924bd7389bb06d820d6a1f41" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddf6345664fde4a7792dd82e88181332fddb9e2" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3d7a8339e9e8d47f195503bd086f9c906a3106" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c946af7090c97564c6f84564e39269075d4932e0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;, Section 6</source>
          <target state="translated">其他HTTP状态代码&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;，第6节</target>
        </trans-unit>
        <trans-unit id="681732b0b925c0111a8472ee282961b3fe60b217" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-62&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;, Section 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7cfd465bd6c5072f84f9bd1a70679a32bc06b5" translate="yes" xml:space="preserve">
          <source>Additional Methods on Float</source>
          <target state="translated">浮动的附加方法</target>
        </trans-unit>
        <trans-unit id="1a6fbb3a3106faa08803de5aa3ee5fac8e2f5fb2" translate="yes" xml:space="preserve">
          <source>Additional Methods on Integer Types</source>
          <target state="translated">整数类型的附加方法</target>
        </trans-unit>
        <trans-unit id="e07bcbcb394ff663d4ff9ec28b7d29949f0638bb" translate="yes" xml:space="preserve">
          <source>Additional Utility Classes and Functions</source>
          <target state="translated">额外的实用类和函数</target>
        </trans-unit>
        <trans-unit id="90441a19c39c85468a4336d332b3c4a497d72486" translate="yes" xml:space="preserve">
          <source>Additional directives may be supported on certain platforms, but only the ones listed here have a meaning standardized by ANSI C. To see the full set of format codes supported on your platform, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime(3)&lt;/a&gt;&lt;/em&gt; documentation.</source>
          <target state="translated">在某些平台上可能会支持其他指令，但是只有此处列出的指令具有ANSI C标准化的含义。要查看平台上支持的全套格式代码，请查阅&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime（3）&lt;/a&gt;&lt;/em&gt;文档。</target>
        </trans-unit>
        <trans-unit id="9be4003cba4f5f477bbf08bed081c603cb4dc1f2" translate="yes" xml:space="preserve">
          <source>Additional help sources may be added here with the Configure IDLE dialog under the General tab. See the &lt;a href=&quot;#help-sources&quot;&gt;Help sources&lt;/a&gt; subsection below for more on Help menu choices.</source>
          <target state="translated">可以在&amp;ldquo;常规&amp;rdquo;选项卡下的&amp;ldquo;配置IDLE&amp;rdquo;对话框中添加其他帮助源。有关&amp;ldquo; &lt;a href=&quot;#help-sources&quot;&gt;帮助&amp;rdquo;&lt;/a&gt;菜单选项的更多信息，请参见下面的&amp;ldquo; 帮助来源&amp;rdquo;小节。</target>
        </trans-unit>
        <trans-unit id="0fbd97506d8de6a58a401e21f5cd9867835e4f81" translate="yes" xml:space="preserve">
          <source>Additional information on these special methods may be found in the Python Reference Manual (&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;Basic customization&lt;/a&gt;).</source>
          <target state="translated">有关这些特殊方法的其他信息，可以在Python参考手册（&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;基本自定义&lt;/a&gt;）中找到。</target>
        </trans-unit>
        <trans-unit id="c7cb20eee0df6f2780f4ff2c70aa8c5e66186317" translate="yes" xml:space="preserve">
          <source>Additional information on these special methods may be found in the Python Reference Manual (&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#customization&quot;&gt;Basic customization&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edb640f6649a2cf3bbe1d95569b1e866f202e00" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments.</source>
          <target state="translated">额外的关键词参数。</target>
        </trans-unit>
        <trans-unit id="5650f46efd09c607a30ce9bd7e2e4e612b751be7" translate="yes" xml:space="preserve">
          <source>Additional keyword parameters, collected in &lt;em&gt;x509&lt;/em&gt;, may be used for authentication of the client when using the &lt;code&gt;https:&lt;/code&gt; scheme. The keywords &lt;em&gt;key_file&lt;/em&gt; and &lt;em&gt;cert_file&lt;/em&gt; are supported to provide an SSL key and certificate; both are needed to support client authentication.</source>
          <target state="translated">使用 &lt;code&gt;https:&lt;/code&gt; 方案时，可以使用&lt;em&gt;x509中&lt;/em&gt;收集的其他关键字参数对客户端进行身份验证。支持关键字&lt;em&gt;key_file&lt;/em&gt;和&lt;em&gt;cert_file&lt;/em&gt;来提供SSL密钥和证书。两者都需要支持客户端身份验证。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f126cf978efce5dfbbf7be549572a4fad90828fc" translate="yes" xml:space="preserve">
          <source>Additional module-level constants are defined for GNU/glibc based systems. These are &lt;code&gt;ST_NODEV&lt;/code&gt; (disallow access to device special files), &lt;code&gt;ST_NOEXEC&lt;/code&gt; (disallow program execution), &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; (writes are synced at once), &lt;code&gt;ST_MANDLOCK&lt;/code&gt; (allow mandatory locks on an FS), &lt;code&gt;ST_WRITE&lt;/code&gt; (write on file/directory/symlink), &lt;code&gt;ST_APPEND&lt;/code&gt; (append-only file), &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; (immutable file), &lt;code&gt;ST_NOATIME&lt;/code&gt; (do not update access times), &lt;code&gt;ST_NODIRATIME&lt;/code&gt; (do not update directory access times), &lt;code&gt;ST_RELATIME&lt;/code&gt; (update atime relative to mtime/ctime).</source>
          <target state="translated">为基于GNU / glibc的系统定义了附加的模块级常量。这些是 &lt;code&gt;ST_NODEV&lt;/code&gt; （禁止访问设备专用文件）， &lt;code&gt;ST_NOEXEC&lt;/code&gt; （禁止执行程序）， &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; （一次写入同步）， &lt;code&gt;ST_MANDLOCK&lt;/code&gt; （允许FS上强制性锁定）， &lt;code&gt;ST_WRITE&lt;/code&gt; （写入文件/目录/符号链接）， &lt;code&gt;ST_APPEND&lt;/code&gt; （仅 &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; 文件），ST_IMMUTABLE（不可变文件）， &lt;code&gt;ST_NOATIME&lt;/code&gt; （不更新访问时间）， &lt;code&gt;ST_NODIRATIME&lt;/code&gt; （不更新目录访问时间）， &lt;code&gt;ST_RELATIME&lt;/code&gt; （相对于mtime / ctime的更新时间）。</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">补充说明</target>
        </trans-unit>
        <trans-unit id="755989eb26f111816b61fc7ebbbfb5473df1c15d" translate="yes" xml:space="preserve">
          <source>Additional parameters for the &lt;em&gt;Content-Type&lt;/em&gt; header are taken from the keyword arguments, or passed into the &lt;em&gt;_params&lt;/em&gt; argument, which is a keyword dictionary.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;标头的其他参数来自关键字参数，或传递到&lt;em&gt;_params&lt;/em&gt;参数（这是关键字字典）中。</target>
        </trans-unit>
        <trans-unit id="7629707b992046f9cae97d693ca20d38c9007ee1" translate="yes" xml:space="preserve">
          <source>Additional processing classes are defined to find, parse, and run, and check doctest examples:</source>
          <target state="translated">附加的处理类被定义为查找、解析、运行和检查doctest实例。</target>
        </trans-unit>
        <trans-unit id="a15fa56393dfeea6e8ddbb0e0c2a6f3cc24b93de" translate="yes" xml:space="preserve">
          <source>Additional resources</source>
          <target state="translated">补充资源</target>
        </trans-unit>
        <trans-unit id="8776ffc7a25a62ae3b9b890b596779f5ea569144" translate="yes" xml:space="preserve">
          <source>Additionally the SMTPChannel may be extended to implement very specific interaction behaviour with SMTP clients.</source>
          <target state="translated">此外,SMTPChannel还可以被扩展以实现与SMTP客户端的特定交互行为。</target>
        </trans-unit>
        <trans-unit id="599097e6f6575c6278515050930a9aa12db60e09" translate="yes" xml:space="preserve">
          <source>Additionally, if the &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; socket option is available (i.e. on Windows), it will be set on the socket. This will prevent anyone else from binding to our host/port for the duration of the test.</source>
          <target state="translated">另外，如果 &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; 套接字选项可用（即在Windows上），它将在套接字上设置。这样可以防止其他人在测试期间绑定到我们的主机/端口。</target>
        </trans-unit>
        <trans-unit id="3ce8bb697c96962555e6797937ae5e1bc918c228" translate="yes" xml:space="preserve">
          <source>Additionally, maximum character &lt;em&gt;width&lt;/em&gt; can be suggested. If a long object cannot be split, the specified width will be exceeded:</source>
          <target state="translated">此外，可以建议最大字符&lt;em&gt;宽度&lt;/em&gt;。如果无法分割长对象，则将超出指定的宽度：</target>
        </trans-unit>
        <trans-unit id="0aff5c616f0a7398b7b227fa0d75ea3310d2ca88" translate="yes" xml:space="preserve">
          <source>Additionally, mock provides a &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorator that handles patching module and class level attributes within the scope of a test, along with &lt;a href=&quot;#unittest.mock.sentinel&quot;&gt;&lt;code&gt;sentinel&lt;/code&gt;&lt;/a&gt; for creating unique objects. See the &lt;a href=&quot;#quick-guide&quot;&gt;quick guide&lt;/a&gt; for some examples of how to use &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此外，mock提供了一个&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;装饰器，用于处理测试范围内的修补模块和类级别属性，以及用于创建唯一对象的&lt;a href=&quot;#unittest.mock.sentinel&quot;&gt; &lt;code&gt;sentinel&lt;/code&gt; &lt;/a&gt;。有关如何使用&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; 的&lt;/a&gt;一些示例，请参见&lt;a href=&quot;#quick-guide&quot;&gt;快速指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0851cbdca337e8a2d55a8b2492f4247983ece5b" translate="yes" xml:space="preserve">
          <source>Additionally, there are &lt;strong&gt;low-level&lt;/strong&gt; APIs for &lt;em&gt;library and framework developers&lt;/em&gt; to:</source>
          <target state="translated">此外，&lt;em&gt;库和框架开发人员还&lt;/em&gt;可以使用以下&lt;strong&gt;低级&lt;/strong&gt; API ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e8cd6b574233c309842bad2694624be2f0c8ecc" translate="yes" xml:space="preserve">
          <source>Additionally, this module provides a class &lt;a href=&quot;#poplib.POP3_SSL&quot;&gt;&lt;code&gt;POP3_SSL&lt;/code&gt;&lt;/a&gt;, which provides support for connecting to POP3 servers that use SSL as an underlying protocol layer.</source>
          <target state="translated">此外，此模块提供了&lt;a href=&quot;#poplib.POP3_SSL&quot;&gt; &lt;code&gt;POP3_SSL&lt;/code&gt; &lt;/a&gt;类，该类提供对连接到使用SSL作为基础协议层的POP3服务器的支持。</target>
        </trans-unit>
        <trans-unit id="c981b21c3eb7058c60d166fb915b3ba17868c9bd" translate="yes" xml:space="preserve">
          <source>Address Formats</source>
          <target state="translated">地址格式</target>
        </trans-unit>
        <trans-unit id="53cce0631f5ba4546493e150cc5ef970434eef7f" translate="yes" xml:space="preserve">
          <source>Address already in use</source>
          <target state="translated">已使用的地址</target>
        </trans-unit>
        <trans-unit id="54d86dbe4cc1a680cd53fee9148dc51da43f4f6d" translate="yes" xml:space="preserve">
          <source>Address family not supported by protocol</source>
          <target state="translated">协议不支持的地址族</target>
        </trans-unit>
        <trans-unit id="a1e16e75ab014f83bd0bb70f5aa70df54bdef59b" translate="yes" xml:space="preserve">
          <source>Address headers are one of the most complex structured header types. The &lt;code&gt;AddressHeader&lt;/code&gt; class provides a generic interface to any address header.</source>
          <target state="translated">地址头是最复杂的结构化头类型之一。所述 &lt;code&gt;AddressHeader&lt;/code&gt; 类提供的通用接口的任何地址报头。</target>
        </trans-unit>
        <trans-unit id="d8b2f4f386c56bbed38a9626989886270423def9" translate="yes" xml:space="preserve">
          <source>Address objects</source>
          <target state="translated">地址对象</target>
        </trans-unit>
        <trans-unit id="e91fde1d6b6cf8b2e4734b6c36d0110942615076" translate="yes" xml:space="preserve">
          <source>Address objects can be compared with the usual set of comparison operators. Same IPv6 addresses with different scope zone IDs are not equal. Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87e00a4637133fec5ee5c803edca11622b049fb" translate="yes" xml:space="preserve">
          <source>Address objects can be compared with the usual set of comparison operators. Some examples:</source>
          <target state="translated">地址对象可以用通常的一组比较运算符进行比较。以下是一些例子:</target>
        </trans-unit>
        <trans-unit id="c84db6312b397100947cc87ed8f2b180ca9d473a" translate="yes" xml:space="preserve">
          <source>Address objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">地址对象支持一些运算符。除非另有说明,否则运算符只能在兼容对象之间应用(即IPv4与IPv4,IPv6与IPv6)。</target>
        </trans-unit>
        <trans-unit id="0105f2940c964aa9756c29f83e74bda0f90a5b32" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">内存块的地址空间（ &lt;code&gt;int&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cfa96e7876c6aab98f33fc6360be994ef1aa3167" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt;). Read-only property.</source>
          <target state="translated">内存块的地址空间（ &lt;code&gt;int&lt;/code&gt; ）。只读属性。</target>
        </trans-unit>
        <trans-unit id="8ed5201b3048cc904b8fa7061e9e3f310c0d8ee5" translate="yes" xml:space="preserve">
          <source>AddressHeader</source>
          <target state="translated">AddressHeader</target>
        </trans-unit>
        <trans-unit id="d4ebdece72b5d801675d16eca7e8e06688a7d640" translate="yes" xml:space="preserve">
          <source>Adds a blank line (indicating the end of the HTTP headers in the response) to the headers buffer and calls &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在标头缓冲区中添加一个空行（指示响应中HTTP标头的末尾），并调用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f7acd6c47b0da85c7600f21a52f58ffbfd078f5" translate="yes" xml:space="preserve">
          <source>Adds a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack.</source>
          <target state="translated">将上下文管理器的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法添加到回调堆栈。</target>
        </trans-unit>
        <trans-unit id="4d3af6b4955c2ff8e8fe675708fb3a093806a225" translate="yes" xml:space="preserve">
          <source>Adds a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5c71aac9de9bf5636184d5f42b68146a582a10" translate="yes" xml:space="preserve">
          <source>Adds a new tab to the notebook.</source>
          <target state="translated">在笔记本上添加一个新的标签。</target>
        </trans-unit>
        <trans-unit id="dd9cdcb19b13e350658b98864b2b91b085b457fb" translate="yes" xml:space="preserve">
          <source>Adds a response header to the headers buffer and logs the accepted request. The HTTP response line is written to the internal buffer, followed by &lt;em&gt;Server&lt;/em&gt; and &lt;em&gt;Date&lt;/em&gt; headers. The values for these two headers are picked up from the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt;&lt;code&gt;version_string()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt;&lt;code&gt;date_time_string()&lt;/code&gt;&lt;/a&gt; methods, respectively. If the server does not intend to send any other headers using the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt; method, then &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt;&lt;code&gt;send_response()&lt;/code&gt;&lt;/a&gt; should be followed by an &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">将响应标头添加到标头缓冲区，并记录接受的请求。HTTP响应行被写入内部缓冲区，然后是&lt;em&gt;Server&lt;/em&gt;和&lt;em&gt;Date&lt;/em&gt;标头。这两个标头的值分别从&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt; &lt;code&gt;version_string()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt; &lt;code&gt;date_time_string()&lt;/code&gt; &lt;/a&gt;方法中选取。如果服务器不打算使用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;方法发送任何其他标头，则&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt; &lt;code&gt;send_response()&lt;/code&gt; 之后&lt;/a&gt;应调用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c70a7a21a70e6fd37ae057e1ed13fa3776bf6066" translate="yes" xml:space="preserve">
          <source>Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">将所有标准站点特定目录添加到模块搜索路径。导入此模块时，将自动调用此函数，除非Python解释器以&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;标志启动。</target>
        </trans-unit>
        <trans-unit id="07e75a62d35592d0e149d532a3d11385a1eb4731" translate="yes" xml:space="preserve">
          <source>Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f4846b019473167e5d95d7c18b067286943485" translate="yes" xml:space="preserve">
          <source>Adds or modifies an event</source>
          <target state="translated">添加或修改事件</target>
        </trans-unit>
        <trans-unit id="ba99f69318c5b2875afcc8e4c7d4361adb5ebefc" translate="yes" xml:space="preserve">
          <source>Adds text to the current element. &lt;em&gt;data&lt;/em&gt; is a string. This should be either a bytestring, or a Unicode string.</source>
          <target state="translated">将文本添加到当前元素。&lt;em&gt;数据&lt;/em&gt;是一个字符串。这应该是字节字符串或Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="b7d3a401c5e2e8b07acd3f6878239513a252af73" translate="yes" xml:space="preserve">
          <source>Adds the HTTP header to an internal buffer which will be written to the output stream when either &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt; is invoked. &lt;em&gt;keyword&lt;/em&gt; should specify the header keyword, with &lt;em&gt;value&lt;/em&gt; specifying its value. Note that, after the send_header calls are done, &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; MUST BE called in order to complete the operation.</source>
          <target state="translated">将HTTP标头添加到内部缓冲区中，当调用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;时，该缓冲区将写入输出流。&lt;em&gt;关键字&lt;/em&gt;应指定标头关键字，&lt;em&gt;值&lt;/em&gt;指定其值。注意，在完成send_header调用后，必须调用&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;才能完成操作。</target>
        </trans-unit>
        <trans-unit id="277dcf73a9142261968c1b0d938f93b9fc4a5516" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;em&gt;subelement&lt;/em&gt; to the end of this element&amp;rsquo;s internal list of subelements. Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;subelement&lt;/em&gt; is not an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将元素&lt;em&gt;子元素&lt;/em&gt;添加到该元素的内部子元素列表的末尾。如果&lt;em&gt;subelement&lt;/em&gt;不是&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; ,&lt;/a&gt;则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef1fbe96c8dbb8f7464127475dab7025e0bc99db" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this handler.</source>
          <target state="translated">将指定的过滤&lt;em&gt;器&lt;/em&gt;过滤&lt;em&gt;器&lt;/em&gt;添加到此处理程序。</target>
        </trans-unit>
        <trans-unit id="d974f7ad089b197b45f9485d4aa7cf708a1848bf" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this logger.</source>
          <target state="translated">将指定的过滤&lt;em&gt;器&lt;/em&gt;过滤&lt;em&gt;器&lt;/em&gt;添加到此记录器。</target>
        </trans-unit>
        <trans-unit id="21e14a01ccb15fe568cac7d9b97974261ead478b" translate="yes" xml:space="preserve">
          <source>Adds the specified handler &lt;em&gt;hdlr&lt;/em&gt; to this logger.</source>
          <target state="translated">将指定的处理程序&lt;em&gt;hdlr&lt;/em&gt;添加到此记录器。</target>
        </trans-unit>
        <trans-unit id="397723ab2192f7ea42bdc7d4cb3c6961b4ccd5fe" translate="yes" xml:space="preserve">
          <source>Advanced API</source>
          <target state="translated">高级API</target>
        </trans-unit>
        <trans-unit id="5fe095447c43964932a08f188d1a91498a6182f7" translate="yes" xml:space="preserve">
          <source>Advanced Tutorial</source>
          <target state="translated">高级教程</target>
        </trans-unit>
        <trans-unit id="24ca54306fd1d4616674769f3f7f6a1715604b03" translate="yes" xml:space="preserve">
          <source>Advanced usage: you can derive subclasses of &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; to customize the placeholder syntax, delimiter character, or the entire regular expression used to parse template strings. To do this, you can override these class attributes:</source>
          <target state="translated">高级用法：可以派生&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; 的&lt;/a&gt;子类，以自定义占位符语法，定界符或用于解析模板字符串的整个正则表达式。为此，您可以覆盖以下类属性：</target>
        </trans-unit>
        <trans-unit id="251637d0b15caeee9ca6a8cb9ffecf846325c014" translate="yes" xml:space="preserve">
          <source>Advertise error</source>
          <target state="translated">广告错误</target>
        </trans-unit>
        <trans-unit id="8d1b5c908485d5b8bf002b642c2265dccbb27a12" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;KEY_MOUSE&lt;/code&gt; to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt;. &lt;em&gt;id&lt;/em&gt; is an ID value used to distinguish multiple devices, and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;z&lt;/em&gt; are the event&amp;rsquo;s coordinates. (&lt;em&gt;z&lt;/em&gt; is currently unused.) &lt;em&gt;bstate&lt;/em&gt; is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where &lt;em&gt;n&lt;/em&gt; is the button number from 1 to 4: &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt;, &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt;, &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTON_SHIFT&lt;/code&gt;, &lt;code&gt;BUTTON_CTRL&lt;/code&gt;, &lt;code&gt;BUTTON_ALT&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;KEY_MOUSE&lt;/code&gt; 表示鼠标事件后，应调用此方法以检索排队的鼠标事件，表示为5元组 &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt; 。&lt;em&gt;id&lt;/em&gt;是用于区分多个设备的ID值，而&lt;em&gt;x&lt;/em&gt;，&lt;em&gt;y&lt;/em&gt;，&lt;em&gt;z&lt;/em&gt;是事件的坐标。 （&lt;em&gt;z&lt;/em&gt;当前未使用。）&lt;em&gt;bstate&lt;/em&gt;是一个整数值，其位将设置为指示事件的类型，并将为以下一个或多个常量的按位&amp;ldquo;或&amp;rdquo;，其中&lt;em&gt;n&lt;/em&gt;为1到4之间的按钮编号： &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt; ， &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt; ， &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt; ， &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt; ， &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt; ， &lt;code&gt;BUTTON_SHIFT&lt;/code&gt; ， &lt;code&gt;BUTTON_CTRL&lt;/code&gt; ， &lt;code&gt;BUTTON_ALT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ff5213eeca44b11c3673b3fbba1d5148d30d331" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;KEY_MOUSE&lt;/code&gt; to signal a mouse event, this method should be called to retrieve the queued mouse event, represented as a 5-tuple &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt;. &lt;em&gt;id&lt;/em&gt; is an ID value used to distinguish multiple devices, and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;z&lt;/em&gt; are the event&amp;rsquo;s coordinates. (&lt;em&gt;z&lt;/em&gt; is currently unused.) &lt;em&gt;bstate&lt;/em&gt; is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where &lt;em&gt;n&lt;/em&gt; is the button number from 1 to 4: &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt;, &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt;, &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTON_SHIFT&lt;/code&gt;, &lt;code&gt;BUTTON_CTRL&lt;/code&gt;, &lt;code&gt;BUTTON_ALT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cc6fee1dda0b92c90ec20582c20d1074e2cf23" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = attrgetter('name')&lt;/code&gt; ，调用 &lt;code&gt;f(b)&lt;/code&gt; 返回 &lt;code&gt;b.name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83b61198fe148750b9221638b3689ca30af865a3" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name, b.date)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt; ，调用 &lt;code&gt;f(b)&lt;/code&gt; 返回 &lt;code&gt;(b.name, b.date)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23c9e096c43f4c6ee6a95562136ca8d19e97177b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt; ，调用 &lt;code&gt;f(b)&lt;/code&gt; 返回 &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0de2cea705e050aae366d3a78eab3afcdcc07f88" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = itemgetter(2)&lt;/code&gt;, the call &lt;code&gt;f(r)&lt;/code&gt; returns &lt;code&gt;r[2]&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = itemgetter(2)&lt;/code&gt; ，调用 &lt;code&gt;f(r)&lt;/code&gt; 返回 &lt;code&gt;r[2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6436d1d48a99a7252d57d6435ebc55f31f26397" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name()&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = methodcaller('name')&lt;/code&gt; ，调用 &lt;code&gt;f(b)&lt;/code&gt; 返回 &lt;code&gt;b.name()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="587ef7cb9af6d3a5014a1ec9e1e10014d0bffe63" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt; ，调用 &lt;code&gt;f(b)&lt;/code&gt; 返回 &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb0bfee9b281dfd1ff2707f547202a4fcb6731f6" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt;, the call &lt;code&gt;g(r)&lt;/code&gt; returns &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt; ，调用 &lt;code&gt;g(r)&lt;/code&gt; 返回 &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e86cbdb1de283111f3b77a94db308e8228f025a" translate="yes" xml:space="preserve">
          <source>After a block-opening statement, the next line is indented by 4 spaces (in the Python Shell window by one tab). After certain keywords (break, return etc.) the next line is dedented. In leading indentation,</source>
          <target state="translated">在一个开块语句之后,下一行缩进4个空格(在Python Shell窗口中缩进一个标签)。在某些关键字 (break、return 等)后,下一行会缩进。在前导缩进中。</target>
        </trans-unit>
        <trans-unit id="734f3786cd172ab9f7f7c48f03100472da64a032" translate="yes" xml:space="preserve">
          <source>After all the tests have run the final &lt;code&gt;tearDownClass&lt;/code&gt; and &lt;code&gt;tearDownModule&lt;/code&gt; are run.</source>
          <target state="translated">运行完所有测试后，将运行最终的 &lt;code&gt;tearDownClass&lt;/code&gt; 和 &lt;code&gt;tearDownModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bed54ec095e148502b5574ea6f6832888058b755" translate="yes" xml:space="preserve">
          <source>After an unclosed parenthesis for a function, open a small window with function parameter hints. See &lt;a href=&quot;#calltips&quot;&gt;Calltips&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">在函数的右括号后，打开一个带有函数参数提示的小窗口。请参阅&lt;a href=&quot;#calltips&quot;&gt;下面&lt;/a&gt;的&amp;ldquo;编辑和导航&amp;rdquo;部分中的&amp;ldquo;提示&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3e2a2afcb4d73c1dd2ce26d0c2f24d05cb3ef249" translate="yes" xml:space="preserve">
          <source>After binding (&lt;code&gt;CAN_RAW&lt;/code&gt;) or connecting (&lt;a href=&quot;#socket.CAN_BCM&quot;&gt;&lt;code&gt;CAN_BCM&lt;/code&gt;&lt;/a&gt;) the socket, you can use the &lt;a href=&quot;#socket.socket.send&quot;&gt;&lt;code&gt;socket.send()&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;socket.recv()&lt;/code&gt;&lt;/a&gt; operations (and their counterparts) on the socket object as usual.</source>
          <target state="translated">在绑定（ &lt;code&gt;CAN_RAW&lt;/code&gt; ）或连接（&lt;a href=&quot;#socket.CAN_BCM&quot;&gt; &lt;code&gt;CAN_BCM&lt;/code&gt; &lt;/a&gt;）套接字之后，您可以照常对套接字对象使用&lt;a href=&quot;#socket.socket.send&quot;&gt; &lt;code&gt;socket.send()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;socket.recv()&lt;/code&gt; &lt;/a&gt;操作（及其对应的操作）。</target>
        </trans-unit>
        <trans-unit id="d038ff2ff4aca2174d2d681322cbe37a210d3e38" translate="yes" xml:space="preserve">
          <source>After calling this function, the handle is effectively invalidated, but the handle is not closed. You would call this function when you need the underlying Win32 handle to exist beyond the lifetime of the handle object.</source>
          <target state="translated">在调用这个函数后,句柄实际上是无效的,但句柄并没有被关闭。当你需要底层的Win32句柄在句柄对象的寿命结束后仍然存在时,你可以调用这个函数。</target>
        </trans-unit>
        <trans-unit id="a0df7e82f63c6ebd4a0d0051d037ed77926c952c" translate="yes" xml:space="preserve">
          <source>After object creation, treating the option name like a dictionary index</source>
          <target state="translated">在创建对象后,把选项名当作字典索引来处理</target>
        </trans-unit>
        <trans-unit id="e022ab40c3a7bfffee8195f05bc3a6c276b589e7" translate="yes" xml:space="preserve">
          <source>After putting an object on an empty queue there may be an infinitesimal delay before the queue&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; method returns &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; can return without raising &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将对象放在空队列上之后，在队列的&lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt; &lt;code&gt;empty()&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;且&lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;可以不增加&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; 的&lt;/a&gt;情况下返回之前，可能会有无穷的延迟。</target>
        </trans-unit>
        <trans-unit id="8b8ff9fd8972c649bd1662cf6a9526d26eaa9bd5" translate="yes" xml:space="preserve">
          <source>After running the test, &lt;code&gt;events&lt;/code&gt; would contain &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt;.</source>
          <target state="translated">运行测试后， &lt;code&gt;events&lt;/code&gt; 将包含 &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f4ff2a70a77d2b66658454222292a23e29549ff" translate="yes" xml:space="preserve">
          <source>After the raw stream has been detached, the buffer is in an unusable state.</source>
          <target state="translated">原始流脱离后,缓冲区处于不可用的状态。</target>
        </trans-unit>
        <trans-unit id="ee1af62b8aaabf1acd9896c452a131674a96b865" translate="yes" xml:space="preserve">
          <source>After the underlying buffer has been detached, the &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; is in an unusable state.</source>
          <target state="translated">分离基础缓冲区之后，&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt;处于不可用状态。</target>
        </trans-unit>
        <trans-unit id="d44733f3188a570411ead96cdda7b71f70b75499" translate="yes" xml:space="preserve">
          <source>After these path manipulations, an attempt is made to import a module named &lt;code&gt;sitecustomize&lt;/code&gt;, which can perform arbitrary site-specific customizations. It is typically created by a system administrator in the site-packages directory. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'sitecustomize'&lt;/code&gt;, it is silently ignored. If Python is started without output streams available, as with &lt;code&gt;pythonw.exe&lt;/code&gt; on Windows (which is used by default to start IDLE), attempted output from &lt;code&gt;sitecustomize&lt;/code&gt; is ignored. Any other exception causes a silent and perhaps mysterious failure of the process.</source>
          <target state="translated">在执行这些路径操作之后，尝试导入一个名为 &lt;code&gt;sitecustomize&lt;/code&gt; 的模块，该模块可以执行任意特定于站点的定制。它通常由系统管理员在site-packages目录中创建。如果此导入由于&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;或其子类异常而失败，并且该异常的 &lt;code&gt;name&lt;/code&gt; 属性等于 &lt;code&gt;'sitecustomize'&lt;/code&gt; ，则将其忽略。如果在没有可用输出流的情况下启动Python，例如Windows 上的 &lt;code&gt;pythonw.exe&lt;/code&gt; （默认用于启动IDLE），则会忽略 &lt;code&gt;sitecustomize&lt;/code&gt; 的尝试输出。任何其他异常都会导致该过程无声的甚至是神秘的失败。</target>
        </trans-unit>
        <trans-unit id="9330ca10edf31a8f07b7a3a7111df51eda1f975b" translate="yes" xml:space="preserve">
          <source>After this method has been called, any further operation on the view raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (except &lt;a href=&quot;#memoryview.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; itself which can be called multiple times):</source>
          <target state="translated">调用此方法后，对视图进行的任何进一步操作都会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#memoryview.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;本身除外，可以多次调用）：</target>
        </trans-unit>
        <trans-unit id="b2768fea23cb25766dd541c907ce6b3b52be13d1" translate="yes" xml:space="preserve">
          <source>After this, an attempt is made to import a module named &lt;code&gt;usercustomize&lt;/code&gt;, which can perform arbitrary user-specific customizations, if &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt; is true. This file is intended to be created in the user site-packages directory (see below), which is part of &lt;code&gt;sys.path&lt;/code&gt; unless disabled by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'usercustomize'&lt;/code&gt;, it is silently ignored.</source>
          <target state="translated">此后，如果&lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt; &lt;code&gt;ENABLE_USER_SITE&lt;/code&gt; &lt;/a&gt;为true ，则尝试导入名为 &lt;code&gt;usercustomize&lt;/code&gt; 的模块，该模块可以执行任意特定于用户的自定义。该文件旨在在用户site-packages目录中创建（请参见下文），该目录是 &lt;code&gt;sys.path&lt;/code&gt; 的一部分，除非被&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;禁用。如果此导入由于&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;或其子类异常而失败，并且该异常的 &lt;code&gt;name&lt;/code&gt; 属性等于 &lt;code&gt;'usercustomize'&lt;/code&gt; ，则将其忽略。</target>
        </trans-unit>
        <trans-unit id="d647d3e36437c582646dcfa7db85434ea8b78d82" translate="yes" xml:space="preserve">
          <source>After this, an attempt is made to import a module named &lt;code&gt;usercustomize&lt;/code&gt;, which can perform arbitrary user-specific customizations, if &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt; is true. This file is intended to be created in the user site-packages directory (see below), which is part of &lt;code&gt;sys.path&lt;/code&gt; unless disabled by &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'usercustomize'&lt;/code&gt;, it is silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f3883ceb8aa25073e4ce290428185982ec0665" translate="yes" xml:space="preserve">
          <source>Alert Descriptions from &lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt; and others. The &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS Alert Registry&lt;/a&gt; contains this list and references to the RFCs where their meaning is defined.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt;和其他版本的警报说明。该&lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS警报注册表&lt;/a&gt;包含此列表，并引用到自己的意思被定义RFC文档。</target>
        </trans-unit>
        <trans-unit id="9c1dc0a32970d2316ea232558be6864f582c80f2" translate="yes" xml:space="preserve">
          <source>Algorithmically, &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; can handle frequent reordering operations better than &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This makes it suitable for tracking recent accesses (for example in an &lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRU cache&lt;/a&gt;).</source>
          <target state="translated">从算法&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;，OrderedDict比&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;可以更好地处理频繁的重新排序操作。这使其适合跟踪最近的访问（例如，在&lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRU缓存中&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ae7afc7cda35b97ec7792acdf19b73ce74efe65d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#getopt.GetoptError&quot;&gt;&lt;code&gt;GetoptError&lt;/code&gt;&lt;/a&gt;; for backward compatibility.</source>
          <target state="translated">&lt;a href=&quot;#getopt.GetoptError&quot;&gt; &lt;code&gt;GetoptError&lt;/code&gt; 的&lt;/a&gt;别名；向后兼容。</target>
        </trans-unit>
        <trans-unit id="b4c82b8c87f05ccdbcc3a216b96cf1a53ccf563e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="eab0dbe8bd01f5049191cf6e61204d3aabd1ee93" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="cadc80a1cf0273c362c8330f48cb4ddc336aa467" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;LF&lt;/code&gt;: &amp;ldquo;New line&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;LF&lt;/code&gt; 的别名：&amp;ldquo; New line&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d38e79ce398493b91869071ba23338cb1cdcfe6f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;TAB&lt;/code&gt;: &amp;ldquo;Horizontal tab&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;TAB&lt;/code&gt; 的别名：&amp;ldquo;水平标签&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="59614a7389348101f9b1ea41779375c6d97c1236" translate="yes" xml:space="preserve">
          <source>Alias for output, for symmetry with &lt;a href=&quot;#subprocess.CalledProcessError.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输出的别名，与&lt;a href=&quot;#subprocess.CalledProcessError.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;对称。</target>
        </trans-unit>
        <trans-unit id="4d404ca5cc49cbaffcbe2bdf1037676fb7d13f36" translate="yes" xml:space="preserve">
          <source>Alias for output, for symmetry with &lt;a href=&quot;#subprocess.TimeoutExpired.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输出的别名，与&lt;a href=&quot;#subprocess.TimeoutExpired.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;对称。</target>
        </trans-unit>
        <trans-unit id="471e12f5a361936c257c992b8760c41b0d9219fb" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#zipfile.BadZipFile&quot;&gt;&lt;code&gt;BadZipFile&lt;/code&gt;&lt;/a&gt;, for compatibility with older Python versions.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.BadZipFile&quot;&gt; &lt;code&gt;BadZipFile&lt;/code&gt; 的&lt;/a&gt;别名，用于与旧版本的Python兼容。</target>
        </trans-unit>
        <trans-unit id="3064a091e0e389e1a86a20dcc2bbe19d5d7d6b45" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#signal.SIGCHLD&quot;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="6fe6d4aa04dab6037d66eb4cb0b7d08cc478f9d1" translate="yes" xml:space="preserve">
          <source>Aliases may be nested and can contain anything that can be legally typed at the pdb prompt. Note that internal pdb commands &lt;em&gt;can&lt;/em&gt; be overridden by aliases. Such a command is then hidden until the alias is removed. Aliasing is recursively applied to the first word of the command line; all other words in the line are left alone.</source>
          <target state="translated">别名可以嵌套，并且可以包含可以在pdb提示符下合法键入的任何内容。请注意，内部pdb命令&lt;em&gt;可以&lt;/em&gt;被别名覆盖。然后隐藏这样的命令，直到删除别名。别名以递归方式应用于命令行的第一个单词；该行中的所有其他单词都不要理会。</target>
        </trans-unit>
        <trans-unit id="19c1a164caf9d915e6d248f6f19c0c5b6e55d90b" translate="yes" xml:space="preserve">
          <source>Aligning the text and specifying a width:</source>
          <target state="translated">对齐文字并指定宽度。</target>
        </trans-unit>
        <trans-unit id="7f8c5176c3f03b97659161923f2b6492f7de7e73" translate="yes" xml:space="preserve">
          <source>Alignment</source>
          <target state="translated">Alignment</target>
        </trans-unit>
        <trans-unit id="a82c356470136a5da9aaa83cba880eb8930e0b37" translate="yes" xml:space="preserve">
          <source>All &amp;ldquo;a&amp;rdquo; functions in this section fail (more or less) silently if the executed program cannot be found; the &amp;ldquo;b&amp;rdquo; replacements raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果找不到执行的程序，则本节中的所有&amp;ldquo; a&amp;rdquo;功能都会（或多或少）静默失败；&amp;ldquo; b&amp;rdquo;替换将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1823c660ec385cd7ad12aec995cc722b1d5b46fb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#real-valued-distributions&quot;&gt;real valued distributions&lt;/a&gt; in the class will use the new method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1726842c26241e242541890252b33775dc0eae3" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;numbers.Real&lt;/code&gt;&lt;/a&gt; types (&lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;) also include the following operations:</source>
          <target state="translated">所有&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;numbers.Real&lt;/code&gt; &lt;/a&gt;类型（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;），还包括以下操作：</target>
        </trans-unit>
        <trans-unit id="68cd5f511616dc760e97502971cef15504097ea7" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;multipart&lt;/em&gt; type messages will be parsed as a container message object with a list of sub-message objects for their payload. The outer container message will return &lt;code&gt;True&lt;/code&gt; for &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will yield a list of subparts.</source>
          <target state="translated">所有&lt;em&gt;多部分&lt;/em&gt;类型的消息都将被解析为容器消息对象，并带有其有效负载的子消息对象列表。外容器消息将返回 &lt;code&gt;True&lt;/code&gt; 为&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;将产生子部分的列表。</target>
        </trans-unit>
        <trans-unit id="59f4fc3531243119771587b080eddb77449d0769" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;other&lt;/em&gt; keys are passed through as keyword arguments to the handler&amp;rsquo;s constructor. For example, given the snippet:</source>
          <target state="translated">所有&lt;em&gt;其他&lt;/em&gt;键都作为关键字参数传递给处理程序的构造函数。例如，给出片段：</target>
        </trans-unit>
        <trans-unit id="fb1488621f65c70bf66f1f957d6992583befc69c" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;gzip&lt;/strong&gt; compressed streams are required to contain this timestamp field. Some programs, such as &lt;strong&gt;gunzip&lt;/strong&gt;, make use of the timestamp. The format is the same as the return value of &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;os#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt; attribute of the object returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有&lt;strong&gt;gzip&lt;/strong&gt;压缩流都必须包含此timestamp字段。一些程序（例如&lt;strong&gt;gunzip&lt;/strong&gt;）利用时间戳记。格式与&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;的返回值以及&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;返回的对象的&lt;a href=&quot;os#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;属性相同。</target>
        </trans-unit>
        <trans-unit id="f64a36de478d59806bf84b1b01392cf6f7782245" translate="yes" xml:space="preserve">
          <source>All IMAP4rev1 commands are represented by methods of the same name, either upper-case or lower-case.</source>
          <target state="translated">所有IMAP4rev1命令都用同名的方法表示,可以是大写,也可以是小写。</target>
        </trans-unit>
        <trans-unit id="59eff8140f7f6cc8eee1beb73070dcf238148177" translate="yes" xml:space="preserve">
          <source>All IO on an &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt;. This means that for example &lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; will raise an &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; if it needs more data than the incoming BIO has available.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;上的所有IO 都是&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞的&lt;/a&gt;。这意味着，例如，如果&lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;需要的数据多于传入BIO可用的数据，它将引发&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f05e728b285d42a5cfcc7b03157016dd489531bf" translate="yes" xml:space="preserve">
          <source>All POP3 commands are represented by methods of the same name, in lower-case; most return the response text sent by the server.</source>
          <target state="translated">所有的POP3命令都用同名的方法来表示,用小写字母表示;大多数返回服务器发送的响应文本。</target>
        </trans-unit>
        <trans-unit id="3414548f8739b658119012bc5a437c65f919cdbe" translate="yes" xml:space="preserve">
          <source>All Platforms</source>
          <target state="translated">所有平台</target>
        </trans-unit>
        <trans-unit id="3f22c61ff7186f7ff5a4a7b6ac42edb2119d4f66" translate="yes" xml:space="preserve">
          <source>All Win32 systems support at least the following; most systems support many more:</source>
          <target state="translated">所有Win32系统至少支持以下内容;大多数系统支持更多内容。</target>
        </trans-unit>
        <trans-unit id="b4c3e2e5e166bd33c375661190706f81b3415ea8" translate="yes" xml:space="preserve">
          <source>All arguments are optional and default to &lt;code&gt;0&lt;/code&gt;. Arguments may be integers or floats, and may be positive or negative.</source>
          <target state="translated">所有参数都是可选的，默认为 &lt;code&gt;0&lt;/code&gt; 。参数可以是整数或浮点数，并且可以是正数或负数。</target>
        </trans-unit>
        <trans-unit id="afeaadb9a3f4efc626cf9837aa136718e99ff657" translate="yes" xml:space="preserve">
          <source>All arguments are optional, and all except for &lt;em&gt;m&lt;/em&gt; should be specified in keyword form.</source>
          <target state="translated">所有参数都是可选的，除&lt;em&gt;m&lt;/em&gt;以外的所有参数都应以关键字形式指定。</target>
        </trans-unit>
        <trans-unit id="45da80b609e066ba052795b1ad773af41969ce6d" translate="yes" xml:space="preserve">
          <source>All arguments are optional. &lt;em&gt;tzinfo&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;, or an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass. The remaining arguments must be integers in the following ranges:</source>
          <target state="translated">所有参数都是可选的。&lt;em&gt;tzinfo&lt;/em&gt;可以为 &lt;code&gt;None&lt;/code&gt; 或&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类的实例。其余参数必须是以下范围内的整数：</target>
        </trans-unit>
        <trans-unit id="a41de24556098cd8f538669ad809aeff6d77b80b" translate="yes" xml:space="preserve">
          <source>All arguments are required. Arguments must be integers, in the following ranges:</source>
          <target state="translated">所有的参数都是必须的。参数必须是整数,范围如下。</target>
        </trans-unit>
        <trans-unit id="b9c41702d1e64bc776766a2674021dc0acd4cdbf" translate="yes" xml:space="preserve">
          <source>All arguments except &lt;em&gt;filename&lt;/em&gt; are optional, and should be specified in keyword form.</source>
          <target state="translated">除&lt;em&gt;filename&lt;/em&gt;以外的所有参数都是可选的，并且应以关键字形式指定。</target>
        </trans-unit>
        <trans-unit id="ee92851c158191e121c730100fcb0d60e5daea4d" translate="yes" xml:space="preserve">
          <source>All arguments to commands are converted to strings, except for &lt;code&gt;AUTHENTICATE&lt;/code&gt;, and the last argument to &lt;code&gt;APPEND&lt;/code&gt; which is passed as an IMAP4 literal. If necessary (the string contains IMAP4 protocol-sensitive characters and isn&amp;rsquo;t enclosed with either parentheses or double quotes) each string is quoted. However, the &lt;em&gt;password&lt;/em&gt; argument to the &lt;code&gt;LOGIN&lt;/code&gt; command is always quoted. If you want to avoid having an argument string quoted (eg: the &lt;em&gt;flags&lt;/em&gt; argument to &lt;code&gt;STORE&lt;/code&gt;) then enclose the string in parentheses (eg: &lt;code&gt;r'(\Deleted)'&lt;/code&gt;).</source>
          <target state="translated">除了 &lt;code&gt;AUTHENTICATE&lt;/code&gt; 和用于 &lt;code&gt;APPEND&lt;/code&gt; 的最后一个参数（作为IMAP4文字传递）外，命令的所有参数都将转换为字符串。如有必要（该字符串包含IMAP4协议敏感字符，并且没有用括号或双引号引起来），每个字符串都用引号引起来。但是，总是引用 &lt;code&gt;LOGIN&lt;/code&gt; 命令的&lt;em&gt;password&lt;/em&gt;参数。如果要避免使用引号将参数字符串引起来（例如： &lt;code&gt;STORE&lt;/code&gt; 的&lt;em&gt;flags&lt;/em&gt;参数），则将该字符串括在括号中（例如： &lt;code&gt;r'(\Deleted)'&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="031f5a606c175280f66f531447d16bf78411e5be" translate="yes" xml:space="preserve">
          <source>All asyncio protocols can implement Base Protocol callbacks.</source>
          <target state="translated">所有asyncio协议都可以实现基础协议回调。</target>
        </trans-unit>
        <trans-unit id="fbd9ac4a05c360b4511702914270df681ebcd66a" translate="yes" xml:space="preserve">
          <source>All attributes implemented by address objects are implemented by network objects as well. In addition, network objects implement additional attributes. All of these are common between &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, so to avoid duplication they are only documented for &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;. Network objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">地址对象实现的所有属性也都由网络对象实现。另外，网络对象实现其他属性。所有这些在&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; &lt;/a&gt;之间是通用的，因此为避免重复，它们仅针对&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;进行了记录。网络对象是可&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;哈希的&lt;/a&gt;，因此它们可用作字典中的键。</target>
        </trans-unit>
        <trans-unit id="4155e00e33adae93f928bcc5c49ba79c56f0f61a" translate="yes" xml:space="preserve">
          <source>All attributes implemented by address objects are implemented by network objects as well. In addition, network objects implement additional attributes. All of these are common between &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, so to avoid duplication they are only documented for &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;. Network objects are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbd3c5316f651cef378d40e6f747eaf218b9172" translate="yes" xml:space="preserve">
          <source>All built-in, non-system-exiting exceptions are derived from this class. All user-defined exceptions should also be derived from this class.</source>
          <target state="translated">所有内置的、非系统退出的异常都是从这个类派生出来的。所有用户定义的异常也应该从这个类派生出来。</target>
        </trans-unit>
        <trans-unit id="db1915ddc75890b79023cb3d160beb6524f1bf36" translate="yes" xml:space="preserve">
          <source>All calls to this function with a given name return the same logger instance. This means that logger instances never need to be passed between different parts of an application.</source>
          <target state="translated">对给定名称的该函数的所有调用都会返回相同的记录仪实例。这意味着,记录仪实例无需在应用程序的不同部分之间传递。</target>
        </trans-unit>
        <trans-unit id="0c7ddca5ecb214fc8a6ff6ead24282869b3d742a" translate="yes" xml:space="preserve">
          <source>All changes to MH mailboxes are immediately applied, so this method does nothing.</source>
          <target state="translated">所有对MH邮箱的更改都会立即应用,所以这个方法什么都不做。</target>
        </trans-unit>
        <trans-unit id="36ef7a286b4df5227bf77c9f5987c04ce550fd48" translate="yes" xml:space="preserve">
          <source>All changes to Maildir mailboxes are immediately applied, so this method does nothing.</source>
          <target state="translated">所有对Maildir邮箱的更改都会立即应用,所以这个方法什么都不做。</target>
        </trans-unit>
        <trans-unit id="6ba4ce793f08c2aeaad053356252f02ff9e86122" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;nntplib.putline&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt;, where &lt;code&gt;line&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">所有命令都会引发带有参数 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;line&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;nntplib.putline&lt;/code&gt; ，其中 &lt;code&gt;line&lt;/code&gt; 是将要发送到远程主机的字节。</target>
        </trans-unit>
        <trans-unit id="987583aba6ab43986ee540ce2d5a0a979df6e457" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;poplib.putline&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt;, where &lt;code&gt;line&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">所有命令都将引发带有参数 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;line&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;poplib.putline&lt;/code&gt; ，其中 &lt;code&gt;line&lt;/code&gt; 是即将发送到远程主机的字节。</target>
        </trans-unit>
        <trans-unit id="0ebb715b219c77d2b43f98501c7daf8840b7660a" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;smtplib.SMTP.send&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, where &lt;code&gt;data&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">所有命令都将引发带有参数 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;smtplib.SMTP.send&lt;/code&gt; ，其中 &lt;code&gt;data&lt;/code&gt; 是将要发送到远程主机的字节。</target>
        </trans-unit>
        <trans-unit id="130ec836bbcb22e52ee0cf2ee501ba311b193ebb" translate="yes" xml:space="preserve">
          <source>All constants are now &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collections.</source>
          <target state="translated">现在，所有常量都是&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt;集合。</target>
        </trans-unit>
        <trans-unit id="8bf35df37eefcc4b205b0e86b2bb42edebe23d0f" translate="yes" xml:space="preserve">
          <source>All constants from the &lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt; module are also exported from &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;token#module-token&quot;&gt; &lt;code&gt;token&lt;/code&gt; &lt;/a&gt;模块中的所有常量也从&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;导出。</target>
        </trans-unit>
        <trans-unit id="299f6f3a07c72abcf84b07e20f8d55abc29c53bc" translate="yes" xml:space="preserve">
          <source>All ctypes data types have a default implementation of this classmethod that normally returns &lt;em&gt;obj&lt;/em&gt; if that is an instance of the type. Some types accept other objects as well.</source>
          <target state="translated">所有ctypes数据类型都有该类方法的默认实现，如果该类型的实例是&lt;em&gt;obj&lt;/em&gt;，则通常返回&lt;em&gt;obj&lt;/em&gt;。某些类型也接受其他对象。</target>
        </trans-unit>
        <trans-unit id="4cb08e4edd7da0cbd1811b03590d4649a88477dd" translate="yes" xml:space="preserve">
          <source>All defect classes are subclassed from &lt;code&gt;email.errors.MessageDefect&lt;/code&gt;.</source>
          <target state="translated">所有缺陷类都从 &lt;code&gt;email.errors.MessageDefect&lt;/code&gt; 子类化。</target>
        </trans-unit>
        <trans-unit id="f4baad04cd2258a2a56a2f8fc40748593c649301" translate="yes" xml:space="preserve">
          <source>All entity references from &lt;a href=&quot;html.entities#module-html.entities&quot;&gt;&lt;code&gt;html.entities&lt;/code&gt;&lt;/a&gt; are replaced in the attribute values.</source>
          <target state="translated">来自&lt;a href=&quot;html.entities#module-html.entities&quot;&gt; &lt;code&gt;html.entities&lt;/code&gt; 的&lt;/a&gt;所有实体引用都将替换为属性值。</target>
        </trans-unit>
        <trans-unit id="e465e17c1a37d9609d9ff9aff3453fc0828078fd" translate="yes" xml:space="preserve">
          <source>All errors raise exceptions. The normal exceptions for invalid argument types and out-of-memory conditions can be raised; starting from Python 3.3, errors related to socket or address semantics raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; or one of its subclasses (they used to raise &lt;a href=&quot;#socket.error&quot;&gt;&lt;code&gt;socket.error&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所有错误都会引发异常。无效参数类型和内存不足条件的普通异常可以被提出；从Python 3.3开始，与套接字或地址语义相关的错误引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;或其子类之一（它们用于引发&lt;a href=&quot;#socket.error&quot;&gt; &lt;code&gt;socket.error&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2bc61495b794fe0aa34758d7e2920183e2b9b9bd" translate="yes" xml:space="preserve">
          <source>All event loops on Windows do not support the following methods:</source>
          <target state="translated">Windows上的所有事件循环都不支持以下方法。</target>
        </trans-unit>
        <trans-unit id="caf8948335d4c7f60ae36806aadee301a2f018ea" translate="yes" xml:space="preserve">
          <source>All examples assume a native byte order, size, and alignment with a big-endian machine.</source>
          <target state="translated">所有的例子都是假设本机的字节顺序、大小以及与大字节机器的对齐方式。</target>
        </trans-unit>
        <trans-unit id="f809ac9170e1c6e6ca0f059a4d69cb510f1c3d53" translate="yes" xml:space="preserve">
          <source>All files are opened in text mode by default, but you can override this by specifying the &lt;em&gt;mode&lt;/em&gt; parameter in the call to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt;. If an I/O error occurs during opening or reading a file, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">默认情况下，所有文件都以文本模式打开，但是您可以通过在对&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;的调用中指定&lt;em&gt;mode&lt;/em&gt;参数来覆盖此文件。如果在打开或读取文件的过程中发生I / O错误，则会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="293649b21c6f8fabecd0b086b5127c14b3f9f4f1" translate="yes" xml:space="preserve">
          <source>All following arguments are optional and can be accessed as instance attributes as well.</source>
          <target state="translated">以下所有参数都是可选的,也可以作为实例属性访问。</target>
        </trans-unit>
        <trans-unit id="2a1a5d969852f9eb11af03015e19c7b15f856807" translate="yes" xml:space="preserve">
          <source>All functions accepting path or file names accept both bytes and string objects, and result in an object of the same type, if a path or file name is returned.</source>
          <target state="translated">所有接受路径或文件名的函数都同时接受字节和字符串对象,如果返回的是路径或文件名,则会产生一个相同类型的对象。</target>
        </trans-unit>
        <trans-unit id="764b4d6c99569a6649ee11a3f6913ea07403cc88" translate="yes" xml:space="preserve">
          <source>All functions in this module raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; (or subclasses thereof) in the case of invalid or inaccessible file names and paths, or other arguments that have the correct type, but are not accepted by the operating system.</source>
          <target state="translated">在无效或不可访问的文件名和路径或具有正确类型但操作系统不接受的其他参数的情况下，此模块中的所有函数都会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;（或其子类）。</target>
        </trans-unit>
        <trans-unit id="84373164968c0434294b7890098e13ea24078ada" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself.</source>
          <target state="translated">该模块中的所有函数都将文件描述符&lt;em&gt;fd&lt;/em&gt;作为其第一个参数。这可以是整数文件描述符（例如 &lt;code&gt;sys.stdin.fileno()&lt;/code&gt; 返回的），也可以是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;（例如 &lt;code&gt;sys.stdin&lt;/code&gt; 本身）。</target>
        </trans-unit>
        <trans-unit id="669b057cd5f10408626d8953cdfea864463d2fd6" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f341c1e6b9c8fc27dafea2f00fb8167a63cc9f5b" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or an &lt;a href=&quot;io#io.IOBase&quot;&gt;&lt;code&gt;io.IOBase&lt;/code&gt;&lt;/a&gt; object, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself, which provides a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; that returns a genuine file descriptor.</source>
          <target state="translated">该模块中的所有函数都将文件描述符&lt;em&gt;fd&lt;/em&gt;作为其第一个参数。这可以是整数文件描述符（例如 &lt;code&gt;sys.stdin.fileno()&lt;/code&gt; 返回的），也可以是&lt;a href=&quot;io#io.IOBase&quot;&gt; &lt;code&gt;io.IOBase&lt;/code&gt; &lt;/a&gt;对象（例如 &lt;code&gt;sys.stdin&lt;/code&gt; 本身），该对象提供返回真实文件描述符的&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c016a97492d8141818b674772a3c8a871a986a2" translate="yes" xml:space="preserve">
          <source>All hard tab characters are expanded to spaces, using 8-column tab stops. Tabs in output generated by the tested code are not modified. Because any hard tabs in the sample output &lt;em&gt;are&lt;/em&gt; expanded, this means that if the code output includes hard tabs, the only way the doctest can pass is if the &lt;a href=&quot;#doctest.NORMALIZE_WHITESPACE&quot;&gt;&lt;code&gt;NORMALIZE_WHITESPACE&lt;/code&gt;&lt;/a&gt; option or &lt;a href=&quot;#doctest-directives&quot;&gt;directive&lt;/a&gt; is in effect. Alternatively, the test can be rewritten to capture the output and compare it to an expected value as part of the test. This handling of tabs in the source was arrived at through trial and error, and has proven to be the least error prone way of handling them. It is possible to use a different algorithm for handling tabs by writing a custom &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">使用8列制表位将所有硬制表符扩展为空格。由测试代码生成的输出中的制表符不会被修改。因为示例输出&lt;em&gt;中的&lt;/em&gt;所有硬标签&lt;em&gt;都已&lt;/em&gt;展开，所以这意味着如果代码输出中包含硬标签，则doctest唯一可以通过的方法就是&lt;a href=&quot;#doctest.NORMALIZE_WHITESPACE&quot;&gt; &lt;code&gt;NORMALIZE_WHITESPACE&lt;/code&gt; &lt;/a&gt;选项或&lt;a href=&quot;#doctest-directives&quot;&gt;指令&lt;/a&gt;有效。或者，可以重写测试以捕获输出，并将其与期望值进行比较，作为测试的一部分。源代码中对选项卡的这种处理是通过反复试验得出的，并且已被证明是最不容易出错的处理方式。通过编写自定义&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt;类，可以使用其他算法来处理选项卡。</target>
        </trans-unit>
        <trans-unit id="91fc0829f8889a22e20ca26434fbffa2dbfb02ff" translate="yes" xml:space="preserve">
          <source>All inclusive filters are applied at once, a trace is ignored if no inclusive filters match it. A trace is ignored if at least one exclusive filter matches it.</source>
          <target state="translated">一次性应用所有包容性过滤器,如果没有与之匹配的包容性过滤器,则忽略一个跟踪。如果至少有一个排他性过滤器与之匹配,则忽略一个跟踪。</target>
        </trans-unit>
        <trans-unit id="e5ed3dd190b5e59dac468767ad1a88d8c4cdff2e" translate="yes" xml:space="preserve">
          <source>All incremental decoders must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">所有增量式解码器都必须提供这个构造函数接口。它们可以自由添加额外的关键字参数,但只有这里定义的参数才会被 Python 编解码器注册表使用。</target>
        </trans-unit>
        <trans-unit id="470d7585fb716131eaa2ac8ea527a90daf24a7cc" translate="yes" xml:space="preserve">
          <source>All incremental encoders must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">所有增量式编码器都必须提供这个构造函数接口。它们可以自由添加额外的关键字参数,但只有这里定义的参数才会被 Python 编解码器注册表使用。</target>
        </trans-unit>
        <trans-unit id="f8e3878938189c7d78e25155ae9238ddf1f98a9c" translate="yes" xml:space="preserve">
          <source>All leading whitespace is removed from the first line. Any leading whitespace that can be uniformly removed from the second line onwards is removed. Empty lines at the beginning and end are subsequently removed. Also, all tabs are expanded to spaces.</source>
          <target state="translated">从第一行开始,所有的前导空格都被删除。从第二行开始,任何可以统一删除的前导空格都会被删除。随后删除开头和结尾的空行。另外,所有的制表符都会扩展为空格。</target>
        </trans-unit>
        <trans-unit id="a51d14eb54abb876437a862ebfe4b068d36c0dfa" translate="yes" xml:space="preserve">
          <source>All methods are executed atomically.</source>
          <target state="translated">所有方法都是原子式执行。</target>
        </trans-unit>
        <trans-unit id="af2e44950a8c7f07ebc93e9cd910e4550fa37531" translate="yes" xml:space="preserve">
          <source>All methods of RawTurtle/Turtle also exist as functions, i.e. part of the procedure-oriented interface.</source>
          <target state="translated">RawTurtle/Turtle的所有方法也都以函数的形式存在,即是面向过程接口的一部分。</target>
        </trans-unit>
        <trans-unit id="8a2f5fe29ba9facb218010f2a3bc8e0b1c83b43a" translate="yes" xml:space="preserve">
          <source>All methods of TurtleScreen/Screen also exist as functions, i.e. as part of the procedure-oriented interface.</source>
          <target state="translated">TurtleScreen/Screen的所有方法也作为函数存在,即作为面向过程的接口的一部分。</target>
        </trans-unit>
        <trans-unit id="6a8c9608d8c8cf4f12dfcb3de0e222922cd76e05" translate="yes" xml:space="preserve">
          <source>All non-keyword arguments are converted to strings like &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; does and written to the stream, separated by &lt;em&gt;sep&lt;/em&gt; and followed by &lt;em&gt;end&lt;/em&gt;. Both &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; must be strings; they can also be &lt;code&gt;None&lt;/code&gt;, which means to use the default values. If no &lt;em&gt;objects&lt;/em&gt; are given, &lt;a href=&quot;#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; will just write &lt;em&gt;end&lt;/em&gt;.</source>
          <target state="translated">所有非关键字参数都将像&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;一样转换为字符串，并写入流中，以&lt;em&gt;sep&lt;/em&gt;分隔，后跟&lt;em&gt;end&lt;/em&gt;。无论&lt;em&gt;九月&lt;/em&gt;和&lt;em&gt;年底&lt;/em&gt;必须是字符串; 它们也可以是 &lt;code&gt;None&lt;/code&gt; ，这意味着要使用默认值。如果没有给出&lt;em&gt;对象&lt;/em&gt;，&lt;a href=&quot;#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;将只写&lt;em&gt;end&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="04bd0bba21301d490d1f0f4f5b72a1a7c73e3c80" translate="yes" xml:space="preserve">
          <source>All numeric types (except complex) support the following operations (for priorities of the operations, see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#operator-summary&quot;&gt;Operator precedence&lt;/a&gt;):</source>
          <target state="translated">所有数字类型（复杂数字除外）都支持以下操作（有关&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#operator-summary&quot;&gt;操作的优先级&lt;/a&gt;，请参阅运算符优先级）：</target>
        </trans-unit>
        <trans-unit id="ae4d12e51f60163ed8582b4908230a1358d1d3d8" translate="yes" xml:space="preserve">
          <source>All numeric types (except complex) support the following operations (for priorities of the operations, see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#operator-summary&quot;&gt;Operator precedence&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6665fa2ccce2b7ff1105b3c545c20966ec9a92ac" translate="yes" xml:space="preserve">
          <source>All numeric values can be set to &lt;a href=&quot;#locale.CHAR_MAX&quot;&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;/a&gt; to indicate that there is no value specified in this locale.</source>
          <target state="translated">可以将所有数值设置为&lt;a href=&quot;#locale.CHAR_MAX&quot;&gt; &lt;code&gt;CHAR_MAX&lt;/code&gt; ,&lt;/a&gt;以指示在此语言环境中未指定任何值。</target>
        </trans-unit>
        <trans-unit id="1b594fe2c3851296cea213bd7a2a361b71f255ca" translate="yes" xml:space="preserve">
          <source>All of the classes in this module may safely be accessed from multiple threads.</source>
          <target state="translated">本模块中的所有类都可以安全地从多个线程访问。</target>
        </trans-unit>
        <trans-unit id="645eb36ba7e57dbbed8d6a760714020cf4ac62b5" translate="yes" xml:space="preserve">
          <source>All of the components of an XML document are subclasses of &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">XML文档的所有组件都是 &lt;code&gt;Node&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="579249eb8333e1522a9306c9dc218208c5dd6079" translate="yes" xml:space="preserve">
          <source>All of the following opcodes use their arguments.</source>
          <target state="translated">以下所有操作码都使用其参数。</target>
        </trans-unit>
        <trans-unit id="d04e47f9a86b5546a2f86ac6f4ea83613fea27aa" translate="yes" xml:space="preserve">
          <source>All of the functions and methods that accept a &lt;em&gt;timeout&lt;/em&gt; parameter, such as &lt;a href=&quot;#subprocess.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; if the timeout expires before the process exits.</source>
          <target state="translated">如果超时在进程退出之前到期，则所有接受&lt;em&gt;超时&lt;/em&gt;参数的函数和方法&lt;a href=&quot;#subprocess.call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt;例如call（）和&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; )&lt;/a&gt;都会引发&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6356cc46033a8c7b9c133294fcdbe6e0be5fcabf" translate="yes" xml:space="preserve">
          <source>All of the methods described below are executed atomically.</source>
          <target state="translated">下面描述的所有方法都是原子式执行的。</target>
        </trans-unit>
        <trans-unit id="1381ad08272119ae9383c4ca5833de30090df2a0" translate="yes" xml:space="preserve">
          <source>All of the objects provided by this module that have &lt;code&gt;acquire()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt; methods can be used as context managers for a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. The &lt;code&gt;acquire()&lt;/code&gt; method will be called when the block is entered, and &lt;code&gt;release()&lt;/code&gt; will be called when the block is exited. Hence, the following snippet:</source>
          <target state="translated">此模块提供的所有具有 &lt;code&gt;acquire()&lt;/code&gt; 和 &lt;code&gt;release()&lt;/code&gt; 方法的对象都可以用作&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的上下文管理器。在 &lt;code&gt;acquire()&lt;/code&gt; 被输入该块时方法将被调用，并且 &lt;code&gt;release()&lt;/code&gt; 时，退出块将被调用。因此，以下代码段：</target>
        </trans-unit>
        <trans-unit id="5e070244996e3d3e099fb44c1b936299d39964df" translate="yes" xml:space="preserve">
          <source>All of the objects provided by this module that have &lt;code&gt;acquire()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt; methods can be used as context managers for a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. The &lt;code&gt;acquire()&lt;/code&gt; method will be called when the block is entered, and &lt;code&gt;release()&lt;/code&gt; will be called when the block is exited. Hence, the following snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426266f1daf6856271c7f10aaf7a44d29269f7a4" translate="yes" xml:space="preserve">
          <source>All of the other &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; methods are invoked by this method in the process of running the application, and thus exist primarily to allow customizing the process.</source>
          <target state="translated">在运行应用程序的过程中，所有其他&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;方法都由该方法调用，因此主要存在以允许自定义过程。</target>
        </trans-unit>
        <trans-unit id="361c6eeb57590924defca62876cd3138035cc03c" translate="yes" xml:space="preserve">
          <source>All of the patchers can be used as class decorators. When used in this way they wrap every test method on the class. The patchers recognise methods that start with &lt;code&gt;'test'&lt;/code&gt; as being test methods. This is the same way that the &lt;a href=&quot;unittest#unittest.TestLoader&quot;&gt;&lt;code&gt;unittest.TestLoader&lt;/code&gt;&lt;/a&gt; finds test methods by default.</source>
          <target state="translated">所有修补程序都可以用作类装饰器。当以这种方式使用时，它们将所有测试方法包装在类上。修补程序将以 &lt;code&gt;'test'&lt;/code&gt; 开头的方法识别为测试方法。这与&lt;a href=&quot;unittest#unittest.TestLoader&quot;&gt; &lt;code&gt;unittest.TestLoader&lt;/code&gt; &lt;/a&gt;默认查找测试方法的方式相同。</target>
        </trans-unit>
        <trans-unit id="bab58e75ce965a7bd1231cdeac8f8a7d861f2d0d" translate="yes" xml:space="preserve">
          <source>All of the usual dictionary methods are supported. In addition, there is a &lt;em&gt;maps&lt;/em&gt; attribute, a method for creating new subcontexts, and a property for accessing all but the first mapping:</source>
          <target state="translated">支持所有常用的字典方法。此外，还有一个&lt;em&gt;maps&lt;/em&gt;属性，一个用于创建新子上下文的方法以及一个用于访问除第一个映射以外的所有属性的属性：</target>
        </trans-unit>
        <trans-unit id="fb1ed368ab426895fc4010d5ccc90be43d6d02bf" translate="yes" xml:space="preserve">
          <source>All of these encodings can only encode 256 of the 1114112 code points defined in Unicode. A simple and straightforward way that can store each Unicode code point, is to store each code point as four consecutive bytes. There are two possibilities: store the bytes in big endian or in little endian order. These two encodings are called &lt;code&gt;UTF-32-BE&lt;/code&gt; and &lt;code&gt;UTF-32-LE&lt;/code&gt; respectively. Their disadvantage is that if e.g. you use &lt;code&gt;UTF-32-BE&lt;/code&gt; on a little endian machine you will always have to swap bytes on encoding and decoding. &lt;code&gt;UTF-32&lt;/code&gt; avoids this problem: bytes will always be in natural endianness. When these bytes are read by a CPU with a different endianness, then bytes have to be swapped though. To be able to detect the endianness of a &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence, there&amp;rsquo;s the so called BOM (&amp;ldquo;Byte Order Mark&amp;rdquo;). This is the Unicode character &lt;code&gt;U+FEFF&lt;/code&gt;. This character can be prepended to every &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence. The byte swapped version of this character (&lt;code&gt;0xFFFE&lt;/code&gt;) is an illegal character that may not appear in a Unicode text. So when the first character in an &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence appears to be a &lt;code&gt;U+FFFE&lt;/code&gt; the bytes have to be swapped on decoding. Unfortunately the character &lt;code&gt;U+FEFF&lt;/code&gt; had a second purpose as a &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt;: a character that has no width and doesn&amp;rsquo;t allow a word to be split. It can e.g. be used to give hints to a ligature algorithm. With Unicode 4.0 using &lt;code&gt;U+FEFF&lt;/code&gt; as a &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; has been deprecated (with &lt;code&gt;U+2060&lt;/code&gt; (&lt;code&gt;WORD JOINER&lt;/code&gt;) assuming this role). Nevertheless Unicode software still must be able to handle &lt;code&gt;U+FEFF&lt;/code&gt; in both roles: as a BOM it&amp;rsquo;s a device to determine the storage layout of the encoded bytes, and vanishes once the byte sequence has been decoded into a string; as a &lt;code&gt;ZERO WIDTH
NO-BREAK SPACE&lt;/code&gt; it&amp;rsquo;s a normal character that will be decoded like any other.</source>
          <target state="translated">所有这些编码只能编码Unicode中定义的1114112个代码点中的256个。可以存储每个Unicode代码点的一种简单明了的方法是将每个代码点存储为四个连续的字节。有两种可能性：以大字节序或小字节序存储字节。这两种编码分别称为 &lt;code&gt;UTF-32-BE&lt;/code&gt; 和 &lt;code&gt;UTF-32-LE&lt;/code&gt; 。它们的缺点是，例如，如果在小型字节序计算机上使用 &lt;code&gt;UTF-32-BE&lt;/code&gt; ，则在编码和解码时将始终必须交换字节。 &lt;code&gt;UTF-32&lt;/code&gt; 避免了这个问题：字节将始终保持自然字节序。当这些字节由具有不同字节序的CPU读取时，则必须交换字节。为了能够检测到的字节序 &lt;code&gt;UTF-16&lt;/code&gt; 或 &lt;code&gt;UTF-32&lt;/code&gt; 字节序列，即所谓的BOM（&amp;ldquo;字节顺序标记&amp;rdquo;）。这是Unicode字符 &lt;code&gt;U+FEFF&lt;/code&gt; 。可以在每个 &lt;code&gt;UTF-16&lt;/code&gt; 或 &lt;code&gt;UTF-32&lt;/code&gt; 字节序列之前添加此字符。此字符的字节交换版本（ &lt;code&gt;0xFFFE&lt;/code&gt; ）是非法字符，可能不会出现在Unicode文本中。因此，当 &lt;code&gt;UTF-16&lt;/code&gt; 或 &lt;code&gt;UTF-32&lt;/code&gt; 字节序列中的第一个字符显示为 &lt;code&gt;U+FFFE&lt;/code&gt; 时，必须在解码时交换字节。不幸的是，角色 &lt;code&gt;U+FEFF&lt;/code&gt; 具有第二个目的，即 &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; ：没有宽度且不允许拆分单词的字符。例如，它可以用于提示绑扎算法。在使用 &lt;code&gt;U+FEFF&lt;/code&gt; 作为 &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; Unicode 4.0中（不建议使用 &lt;code&gt;U+2060&lt;/code&gt; （ &lt;code&gt;WORD JOINER&lt;/code&gt; ）担任此角色）。尽管如此，Unicode软件仍然必须能够同时在两个角色中处理 &lt;code&gt;U+FEFF&lt;/code&gt; ：作为BOM，它是一种确定编码字节的存储布局的设备，一旦字节序列被解码为字符串，它就会消失。作为 &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; 它是正常字符，将像其他字符一样被解码。</target>
        </trans-unit>
        <trans-unit id="608f0188bcbb97cbbc13a474f23016a327d60ea0" translate="yes" xml:space="preserve">
          <source>All of these functions accept either only bytes or only string objects as their parameters. The result is an object of the same type, if a path or file name is returned.</source>
          <target state="translated">所有这些函数都只接受字节或字符串对象作为参数。如果返回的是路径或文件名,结果是一个相同类型的对象。</target>
        </trans-unit>
        <trans-unit id="5ffe41514d0ba0c7681ed589014b164ed58ca272" translate="yes" xml:space="preserve">
          <source>All option names used in interpolation will be passed through the &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; method just like any other option name reference. For example, using the default implementation of &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; (which converts option names to lower case), the values &lt;code&gt;foo %(bar)s&lt;/code&gt; and &lt;code&gt;foo
%(BAR)s&lt;/code&gt; are equivalent.</source>
          <target state="translated">插值中使用的所有选项名称都将通过&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; &lt;/a&gt;方法传递，就像其他任何选项名称引用一样。例如，使用&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; &lt;/a&gt;的默认实现（将选项名称转换为小写），值 &lt;code&gt;foo %(bar)s&lt;/code&gt; 和 &lt;code&gt;foo %(BAR)s&lt;/code&gt; 是等效的。</target>
        </trans-unit>
        <trans-unit id="8653fe45c3a0598bc76268bebd81e9303afe45cd" translate="yes" xml:space="preserve">
          <source>All optional arguments and some positional arguments may be omitted at the command line. The &lt;code&gt;default&lt;/code&gt; keyword argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;, whose value defaults to &lt;code&gt;None&lt;/code&gt;, specifies what value should be used if the command-line argument is not present. For optional arguments, the &lt;code&gt;default&lt;/code&gt; value is used when the option string was not present at the command line:</source>
          <target state="translated">在命令行可以省略所有可选参数和某些位置参数。&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;default&lt;/code&gt; 关键字参数（其值默认为 &lt;code&gt;None&lt;/code&gt; ）指定在不存在命令行参数的情况下应使用的值。对于可选参数，当命令行中不存在选项字符串时，将使用 &lt;code&gt;default&lt;/code&gt; 值：</target>
        </trans-unit>
        <trans-unit id="ce2357893bbf0135effa63850776998057d31bea" translate="yes" xml:space="preserve">
          <source>All other keys are optional, but if present they will be interpreted as described below. In all cases below where a &amp;lsquo;configuring dict&amp;rsquo; is mentioned, it will be checked for the special &lt;code&gt;'()'&lt;/code&gt; key to see if a custom instantiation is required. If so, the mechanism described in &lt;a href=&quot;#logging-config-dict-userdef&quot;&gt;User-defined objects&lt;/a&gt; below is used to create an instance; otherwise, the context is used to determine what to instantiate.</source>
          <target state="translated">所有其他键都是可选的，但是如果存在，它们将按以下说明进行解释。在下面提到&amp;ldquo;配置命令&amp;rdquo;的所有情况下，都将检查它的特殊 &lt;code&gt;'()'&lt;/code&gt; 键以查看是否需要自定义实例化。如果是这样，则使用下面&lt;a href=&quot;#logging-config-dict-userdef&quot;&gt;用户定义的对象&lt;/a&gt;中描述的机制来创建实例；否则，上下文用于确定实例化什么。</target>
        </trans-unit>
        <trans-unit id="19335cd87d8044146043baea7e04506def10ffde" translate="yes" xml:space="preserve">
          <source>All other keystrokes are treated as a command to insert the given character and move right (with line wrapping).</source>
          <target state="translated">其他所有的按键都被视为插入给定字符并向右移动的命令(带包线)。</target>
        </trans-unit>
        <trans-unit id="aa448210156c802173864da10c49485e10eee030" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed to &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; without interpretation, except for &lt;em&gt;bufsize&lt;/em&gt;, &lt;em&gt;universal_newlines&lt;/em&gt;, &lt;em&gt;shell&lt;/em&gt;, &lt;em&gt;text&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt;, which should not be specified at all.</source>
          <target state="translated">除&lt;em&gt;bufsize&lt;/em&gt;，&lt;em&gt;Universal_newlines&lt;/em&gt;，&lt;em&gt;shell&lt;/em&gt;，&lt;em&gt;text&lt;/em&gt;，&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors外&lt;/em&gt;，所有其他关键字参数均不进行解释地传递给&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;，这些参数根本不应指定。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66331451f6a993bd6a4ec3db875b698eaae7b08f" translate="yes" xml:space="preserve">
          <source>All other optional or keyword arguments are passed to the underlying &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">所有其他可选或关键字参数都传递给基础&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="f419bef4528bc4f1cc65289d46c00cb83ec30fa2" translate="yes" xml:space="preserve">
          <source>All parameterized generics implement special read-only attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cca373364efaf0f83bf84be29776f4417aa391" translate="yes" xml:space="preserve">
          <source>All pending input is processed, and a bytes object containing the remaining compressed output is returned. &lt;em&gt;mode&lt;/em&gt; can be selected from the constants &lt;code&gt;Z_NO_FLUSH&lt;/code&gt;, &lt;code&gt;Z_PARTIAL_FLUSH&lt;/code&gt;, &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt;, &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;, &lt;code&gt;Z_BLOCK&lt;/code&gt; (zlib 1.2.3.4), or &lt;code&gt;Z_FINISH&lt;/code&gt;, defaulting to &lt;code&gt;Z_FINISH&lt;/code&gt;. Except &lt;code&gt;Z_FINISH&lt;/code&gt;, all constants allow compressing further bytestrings of data, while &lt;code&gt;Z_FINISH&lt;/code&gt; finishes the compressed stream and prevents compressing any more data. After calling &lt;a href=&quot;#zlib.Compress.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; with &lt;em&gt;mode&lt;/em&gt; set to &lt;code&gt;Z_FINISH&lt;/code&gt;, the &lt;a href=&quot;#zlib.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; method cannot be called again; the only realistic action is to delete the object.</source>
          <target state="translated">处理所有未决的输入，并返回包含剩余压缩输出的字节对象。&lt;em&gt;模式&lt;/em&gt;可以从常量 &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; ， &lt;code&gt;Z_PARTIAL_FLUSH&lt;/code&gt; ， &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; ， &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ， &lt;code&gt;Z_BLOCK&lt;/code&gt; （zlib 1.2.3.4）或 &lt;code&gt;Z_FINISH&lt;/code&gt; 中选择，默认为 &lt;code&gt;Z_FINISH&lt;/code&gt; 。除了 &lt;code&gt;Z_FINISH&lt;/code&gt; 之外，所有常量都允许压缩其他数据字节 &lt;code&gt;Z_FINISH&lt;/code&gt; ，而Z_FINISH完成压缩的流并阻止压缩更多的数据。打完电话后&lt;a href=&quot;#zlib.Compress.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;与&lt;em&gt;模式&lt;/em&gt;设置为 &lt;code&gt;Z_FINISH&lt;/code&gt; 的&lt;a href=&quot;#zlib.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;方法不能再次调用；唯一现实的操作是删除对象。</target>
        </trans-unit>
        <trans-unit id="845f9f346c71bf5f52a9188ace35c5ecaa3ed3df" translate="yes" xml:space="preserve">
          <source>All pending input is processed, and a bytes object containing the remaining uncompressed output is returned. After calling &lt;a href=&quot;#zlib.Decompress.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#zlib.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method cannot be called again; the only realistic action is to delete the object.</source>
          <target state="translated">处理所有未决的输入，并返回包含剩余未压缩输出的字节对象。调用&lt;a href=&quot;#zlib.Decompress.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; 之后&lt;/a&gt;，将无法再次调用&lt;a href=&quot;#zlib.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;方法。唯一现实的操作是删除对象。</target>
        </trans-unit>
        <trans-unit id="fc9ede07789c80374474bed5143b787444e15389" translate="yes" xml:space="preserve">
          <source>All platforms support sockets as &lt;em&gt;out&lt;/em&gt; file descriptor, and some platforms allow other types (e.g. regular file, pipe) as well.</source>
          <target state="translated">所有平台都将套接字作为&lt;em&gt;输出&lt;/em&gt;文件描述符支持，并且某些平台还允许其他类型（例如常规文件，管道）。</target>
        </trans-unit>
        <trans-unit id="3aaaab94fa36cef60d2f0e96539ccc4e2de8c1f2" translate="yes" xml:space="preserve">
          <source>All platforms support sockets as &lt;em&gt;out_fd&lt;/em&gt; file descriptor, and some platforms allow other types (e.g. regular file, pipe) as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a103db9094a7f0996094f573e4e6dea84bed483" translate="yes" xml:space="preserve">
          <source>All recipient addresses refused. The errors for each recipient are accessible through the attribute &lt;code&gt;recipients&lt;/code&gt;, which is a dictionary of exactly the same sort as &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;SMTP.sendmail()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">所有收件人地址均被拒绝。为每个收件人的错误是通过属性访问的 &lt;code&gt;recipients&lt;/code&gt; ，这是排序完全相同的字典作为&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;SMTP.sendmail()&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="d5e2d016729108cbe2a6252b7e9f9f25b138be7a" translate="yes" xml:space="preserve">
          <source>All recipients were refused. Nobody got the mail. The &lt;code&gt;recipients&lt;/code&gt; attribute of the exception object is a dictionary with information about the refused recipients (like the one returned when at least one recipient was accepted).</source>
          <target state="translated">所有收件人均被拒绝。没有人收到邮件。异常对象的 &lt;code&gt;recipients&lt;/code&gt; 属性是一本字典，其中包含有关被拒绝的收件人的信息（例如当至少一个收件人被接受时返回的字典）。</target>
        </trans-unit>
        <trans-unit id="ed7add52656f73c9f9ee77cb2062c4141e037209" translate="yes" xml:space="preserve">
          <source>All registry functions in this module return one of these objects.</source>
          <target state="translated">本模块中的所有注册表函数都会返回其中一个对象。</target>
        </trans-unit>
        <trans-unit id="d2fe55d4566c1ed0919fec63b9086185e8f09e18" translate="yes" xml:space="preserve">
          <source>All registry functions in this module which accept a handle object also accept an integer, however, use of the handle object is encouraged.</source>
          <target state="translated">本模块中所有接受句柄对象的注册表函数也接受一个整数,但是,鼓励使用句柄对象。</target>
        </trans-unit>
        <trans-unit id="10ada46f1636db2c68259c55e5dbc2108cc9bb8a" translate="yes" xml:space="preserve">
          <source>All sections include &lt;code&gt;DEFAULTSECT&lt;/code&gt; values as well which means that &lt;code&gt;.clear()&lt;/code&gt; on a section may not leave the section visibly empty. This is because default values cannot be deleted from the section (because technically they are not there). If they are overridden in the section, deleting causes the default value to be visible again. Trying to delete a default value causes a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有节也都包含 &lt;code&gt;DEFAULTSECT&lt;/code&gt; 值，这意味着节上的 &lt;code&gt;.clear()&lt;/code&gt; 可能不会使该节明显为空。这是因为无法从该部分中删除默认值（因为从技术上讲它们不存在）。如果它们在本节中被覆盖，则删除将使默认值再次可见。尝试删除默认值会导致&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98e89195defbf174865e4ed3cfadb43c73afc721" translate="yes" xml:space="preserve">
          <source>All start methods</source>
          <target state="translated">所有启动方法</target>
        </trans-unit>
        <trans-unit id="75d16b8bb98cb55dff06e1fc0c1ed62ef7d52a39" translate="yes" xml:space="preserve">
          <source>All stream readers must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">所有的流读取器都必须提供这个构造函数接口。它们可以自由添加额外的关键字参数,但只有这里定义的参数才会被 Python 编解码器注册表使用。</target>
        </trans-unit>
        <trans-unit id="26bf04c11ae57a8dd9464a075f980fb924cc9927" translate="yes" xml:space="preserve">
          <source>All stream writers must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">所有的流写入器都必须提供这个构造函数接口。他们可以自由添加额外的关键字参数,但只有这里定义的参数才会被 Python 编解码器注册表使用。</target>
        </trans-unit>
        <trans-unit id="511adfa816e0d1230d548ef9bee4b8cae3ba51aa" translate="yes" xml:space="preserve">
          <source>All streams are careful about the type of data you give to them. For example giving a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;write()&lt;/code&gt; method of a binary stream will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. So will giving a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;write()&lt;/code&gt; method of a text stream.</source>
          <target state="translated">所有流都非常小心您提供给它们的数据类型。例如，将&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象提供给二进制流的 &lt;code&gt;write()&lt;/code&gt; 方法将引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。因此，将&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象提供给文本流的 &lt;code&gt;write()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8cfe73a6df86f8c591b70da4f2a97d04f73d2842" translate="yes" xml:space="preserve">
          <source>All subclasses of &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; inherit a predefined &lt;code&gt;do_help()&lt;/code&gt;. This method, called with an argument &lt;code&gt;'bar'&lt;/code&gt;, invokes the corresponding method &lt;code&gt;help_bar()&lt;/code&gt;, and if that is not present, prints the docstring of &lt;code&gt;do_bar()&lt;/code&gt;, if available. With no argument, &lt;code&gt;do_help()&lt;/code&gt; lists all available help topics (that is, all commands with corresponding &lt;code&gt;help_*()&lt;/code&gt; methods or commands that have docstrings), and also lists any undocumented commands.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; 的&lt;/a&gt;所有子类都继承一个预定义的 &lt;code&gt;do_help()&lt;/code&gt; 。该方法以参数 &lt;code&gt;'bar'&lt;/code&gt; 调用，调用相应的方法 &lt;code&gt;help_bar()&lt;/code&gt; ，如果不存在，则打印 &lt;code&gt;do_bar()&lt;/code&gt; 的文档字符串（如果有）。不带参数的 &lt;code&gt;do_help()&lt;/code&gt; 列出所有可用的帮助主题（即，具有相应 &lt;code&gt;help_*()&lt;/code&gt; 方法的所有命令或具有文档字符串的命令），还列出所有未记录的命令。</target>
        </trans-unit>
        <trans-unit id="16bfa0e96351e7a39a097e3fa26ad685c6d79d8d" translate="yes" xml:space="preserve">
          <source>All tasks waiting for event to be set will be immediately awakened.</source>
          <target state="translated">所有等待事件设置的任务将被立即唤醒。</target>
        </trans-unit>
        <trans-unit id="4b0d4a1283ee19c5afe6ce70d63cdcdf8e6081cc" translate="yes" xml:space="preserve">
          <source>All test modules must be importable from the top level of the project. If the start directory is not the top level directory then the top level directory must be specified separately.</source>
          <target state="translated">所有的测试模块都必须可以从项目的顶层导入,如果启动目录不是顶层目录,那么必须单独指定顶层目录。如果启动目录不是顶层目录,则必须单独指定顶层目录。</target>
        </trans-unit>
        <trans-unit id="95e86b0a592b2672e5e54dba5071e87a49d334f8" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;'%'&lt;/code&gt; interpolations are expanded in the return values, unless the &lt;em&gt;raw&lt;/em&gt; argument is true. Values for interpolation keys are looked up in the same manner as the option.</source>
          <target state="translated">除非&lt;em&gt;原始&lt;/em&gt;参数为true ，否则所有 &lt;code&gt;'%'&lt;/code&gt; 插值都将在返回值中扩展。以与该选项相同的方式查找插值键的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68ec4ea8caa603e129e1cdd2dda1c8e8f88e770a" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;ttk&lt;/code&gt; Widgets accepts the following options:</source>
          <target state="translated">所有的 &lt;code&gt;ttk&lt;/code&gt; 小部件都接受以下选项：</target>
        </trans-unit>
        <trans-unit id="a0aa67ee5d395c9a58857bc43029eb764f978551" translate="yes" xml:space="preserve">
          <source>All the assert methods accept a &lt;em&gt;msg&lt;/em&gt; argument that, if specified, is used as the error message on failure (see also &lt;a href=&quot;#unittest.TestCase.longMessage&quot;&gt;&lt;code&gt;longMessage&lt;/code&gt;&lt;/a&gt;). Note that the &lt;em&gt;msg&lt;/em&gt; keyword argument can be passed to &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;assertRaisesRegex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertWarnsRegex&quot;&gt;&lt;code&gt;assertWarnsRegex()&lt;/code&gt;&lt;/a&gt; only when they are used as a context manager.</source>
          <target state="translated">所有assert方法都接受一个&lt;em&gt;msg&lt;/em&gt;参数，如果指定该参数，该参数将用作失败时的错误消息（另请参见&lt;a href=&quot;#unittest.TestCase.longMessage&quot;&gt; &lt;code&gt;longMessage&lt;/code&gt; &lt;/a&gt;）。注意，仅当将&lt;em&gt;msg&lt;/em&gt;关键字参数用作上下文管理器时，&lt;a href=&quot;#unittest.TestCase.assertWarnsRegex&quot;&gt; &lt;code&gt;assertWarnsRegex()&lt;/code&gt; &lt;/a&gt;可以将它们传递给&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;assertRaisesRegex()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt;和assertWarnsRegex（）。</target>
        </trans-unit>
        <trans-unit id="ba0ad57eff10b2932e3d0da3c26b31a3d89093f7" translate="yes" xml:space="preserve">
          <source>All the patchers have &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;stop()&lt;/code&gt; methods. These make it simpler to do patching in &lt;code&gt;setUp&lt;/code&gt; methods or where you want to do multiple patches without nesting decorators or with statements.</source>
          <target state="translated">所有修补程序都有 &lt;code&gt;start()&lt;/code&gt; 和 &lt;code&gt;stop()&lt;/code&gt; 方法。这些使在 &lt;code&gt;setUp&lt;/code&gt; 方法中进行修补或在不嵌套装饰器或语句的情况下要进行多个修补的地方变得更容易。</target>
        </trans-unit>
        <trans-unit id="d968b7a25570658373a5f6b61449439744c226ea" translate="yes" xml:space="preserve">
          <source>All the signal numbers are defined symbolically. For example, the hangup signal is defined as &lt;a href=&quot;#signal.SIGHUP&quot;&gt;&lt;code&gt;signal.SIGHUP&lt;/code&gt;&lt;/a&gt;; the variable names are identical to the names used in C programs, as found in &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt;. The Unix man page for &amp;lsquo;&lt;code&gt;signal()&lt;/code&gt;&amp;rsquo; lists the existing signals (on some systems this is &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt;, on others the list is in &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal(7)&lt;/a&gt;&lt;/em&gt;). Note that not all systems define the same set of signal names; only those names defined by the system are defined by this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b3a6c16b642ad7026440e7678571fdc94dcd20" translate="yes" xml:space="preserve">
          <source>All the signal numbers are defined symbolically. For example, the hangup signal is defined as &lt;code&gt;signal.SIGHUP&lt;/code&gt;; the variable names are identical to the names used in C programs, as found in &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt;. The Unix man page for &amp;lsquo;&lt;code&gt;signal()&lt;/code&gt;&amp;rsquo; lists the existing signals (on some systems this is &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt;, on others the list is in &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal(7)&lt;/a&gt;&lt;/em&gt;). Note that not all systems define the same set of signal names; only those names defined by the system are defined by this module.</source>
          <target state="translated">所有信号编号均以符号方式定义。例如，挂断信号定义为 &lt;code&gt;signal.SIGHUP&lt;/code&gt; ; 变量名与 &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt; 中的C程序中使用的名称相同。Unix手册页上的&amp;ldquo; &lt;code&gt;signal()&lt;/code&gt; &amp;rdquo;列出了现有的信号（在某些系统上是&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal（2）&lt;/a&gt;&lt;/em&gt;，在其他系统上，列表在&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal（7）中&lt;/a&gt;&lt;/em&gt;）。请注意，并非所有系统都定义相同的信号名称集。此模块仅定义系统定义的名称。</target>
        </trans-unit>
        <trans-unit id="a718f5f334bffff82ac9ca18a26df3475e054a96" translate="yes" xml:space="preserve">
          <source>All the user-callable functions and constructors take additional arguments which allow direct control over the location and name of temporary files and directories. Files names used by this module include a string of random characters which allows those files to be securely created in shared temporary directories. To maintain backward compatibility, the argument order is somewhat odd; it is recommended to use keyword arguments for clarity.</source>
          <target state="translated">所有用户可调用的函数和构造函数都需要额外的参数,以便直接控制临时文件和目录的位置和名称。本模块使用的文件名包括一串随机字符,这使得这些文件可以安全地创建在共享的临时目录中。为了保持向后的兼容性,参数的顺序有些奇怪,建议使用关键字参数以保证清晰。</target>
        </trans-unit>
        <trans-unit id="27ab5e9ece9f6fec3cae084274e655c615da7669" translate="yes" xml:space="preserve">
          <source>All the variables below are simply symbolic indexes into the 10-tuple returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下所有变量都是&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;返回的10元组的简单符号索引。</target>
        </trans-unit>
        <trans-unit id="8a1874be964dba6caf7536a5f6cdb4d12bf2f501" translate="yes" xml:space="preserve">
          <source>All these classes can be instantiated by calling them with at least one argument, the pathname of the shared library. If you have an existing handle to an already loaded shared library, it can be passed as the &lt;code&gt;handle&lt;/code&gt; named parameter, otherwise the underlying platforms &lt;code&gt;dlopen&lt;/code&gt; or &lt;code&gt;LoadLibrary&lt;/code&gt; function is used to load the library into the process, and to get a handle to it.</source>
          <target state="translated">通过使用至少一个参数（共享库的路径名）调用它们，可以实例化所有这些类。如果您具有已加载的共享库的现有句柄，则可以将其作为名为参数的 &lt;code&gt;handle&lt;/code&gt; 传递，否则，将使用基础平台 &lt;code&gt;dlopen&lt;/code&gt; 或 &lt;code&gt;LoadLibrary&lt;/code&gt; 函数将库加载到进程中并为其获取句柄。</target>
        </trans-unit>
        <trans-unit id="417f37663be75dee9f473867fc0f32047be90a11" translate="yes" xml:space="preserve">
          <source>All these types can be created by calling them with an optional initializer of the correct type and value:</source>
          <target state="translated">所有这些类型都可以通过调用它们的正确类型和值的可选初始化器来创建。</target>
        </trans-unit>
        <trans-unit id="155ee124577e1fe137df7c33d4f6d23d523b7db8" translate="yes" xml:space="preserve">
          <source>All transports implement the following methods:</source>
          <target state="translated">所有运输工具都实现了以下方法:</target>
        </trans-unit>
        <trans-unit id="0861f5cc7168426f537bde444cc103b430c6b13c" translate="yes" xml:space="preserve">
          <source>All wrappers around MSI functions raise &lt;code&gt;MSIError&lt;/code&gt;; the string inside the exception will contain more detail.</source>
          <target state="translated">所有围绕MSI函数的包装器都会引发 &lt;code&gt;MSIError&lt;/code&gt; ；异常中的字符串将包含更多详细信息。</target>
        </trans-unit>
        <trans-unit id="edffc8bbc8f24bd588ae17bcfd535bebc57f13ec" translate="yes" xml:space="preserve">
          <source>Allow an application to set the locale for errors and warnings.</source>
          <target state="translated">允许应用程序设置错误和警告的语言。</target>
        </trans-unit>
        <trans-unit id="603dd6037e099395a31f0e59c9ba1913159c4a7e" translate="yes" xml:space="preserve">
          <source>Allow encoding and decoding of surrogate codes. These codecs normally treat the presence of surrogates as an error.</source>
          <target state="translated">允许对代用码进行编码和解码。这些编解码器通常将代用码的存在视为错误。</target>
        </trans-unit>
        <trans-unit id="1e19ac51136d0637f9af6d20c7258158d6721dc5" translate="yes" xml:space="preserve">
          <source>Allow simple extension commands notified by server in &lt;code&gt;CAPABILITY&lt;/code&gt; response.</source>
          <target state="translated">允许服务器在 &lt;code&gt;CAPABILITY&lt;/code&gt; 响应中通知简单的扩展命令。</target>
        </trans-unit>
        <trans-unit id="ef317f8483480a64e1b0dccb14f7bb6883cce1dc" translate="yes" xml:space="preserve">
          <source>Allow use of default values for colors on terminals supporting this feature. Use this to support transparency in your application. The default color is assigned to the color number &lt;code&gt;-1&lt;/code&gt;. After calling this function, &lt;code&gt;init_pair(x,
curses.COLOR_RED, -1)&lt;/code&gt; initializes, for instance, color pair &lt;em&gt;x&lt;/em&gt; to a red foreground color on the default background.</source>
          <target state="translated">允许在支持此功能的终端上使用默认颜色。使用它来支持应用程序的透明性。默认颜色分配给颜色编号 &lt;code&gt;-1&lt;/code&gt; 。调用此函数后， &lt;code&gt;init_pair(x, curses.COLOR_RED, -1)&lt;/code&gt; 颜色对&lt;em&gt;x&lt;/em&gt;初始化为默认背景上的红色前景色。</target>
        </trans-unit>
        <trans-unit id="9af2608dce4ccd3a4d7fe7ccd5d8a999659ec6be" translate="yes" xml:space="preserve">
          <source>Allow wildcard when it is the leftmost and the only character in that segment. Partial wildcards like &lt;code&gt;www*.example.com&lt;/code&gt; are no longer supported.</source>
          <target state="translated">当该段中的最左边和唯一的字符时，允许使用通配符。不再支持部分通配符，例如 &lt;code&gt;www*.example.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d545cb48e8fe2e090c8d20ba1902d68904e84436" translate="yes" xml:space="preserve">
          <source>Allowed members and attributes of enumerations</source>
          <target state="translated">允许的成员和枚举的属性</target>
        </trans-unit>
        <trans-unit id="27759cb686cd5bf827a6e5a82d77411f516dc61c" translate="yes" xml:space="preserve">
          <source>Allowing alternative option prefixes like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">允许使用另类的选项前缀，例如 &lt;code&gt;+&lt;/code&gt; 和 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6ebd07370440c663e4f0e55185f972d0240507b" translate="yes" xml:space="preserve">
          <source>Allowing applications to identify and clear their own uncollectable types when they appear in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当应用程序出现在&lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt;时，允许它们识别并清除它们自己的无法收集的类型。</target>
        </trans-unit>
        <trans-unit id="1698c3d6368b675b56ce12b0b386c7be180d6706" translate="yes" xml:space="preserve">
          <source>Allowing non-resource names to be returned is to allow for situations where how a package and its resources are stored are known a priori and the non-resource names would be useful. For instance, returning subdirectory names is allowed so that when it is known that the package and resources are stored on the file system then those subdirectory names can be used directly.</source>
          <target state="translated">允许返回非资源名,是为了允许出现这样的情况:包及其资源的存储方式是先验的,而非资源名是有用的。例如,允许返回子目录名,这样当知道软件包和资源存储在文件系统上时,就可以直接使用这些子目录名。</target>
        </trans-unit>
        <trans-unit id="b68e07d7d7b9f4e84654d4589ca6f207be1705b6" translate="yes" xml:space="preserve">
          <source>Allowing subclassing of enums that define members would lead to a violation of some important invariants of types and instances. On the other hand, it makes sense to allow sharing some common behavior between a group of enumerations. (See &lt;a href=&quot;#orderedenum&quot;&gt;OrderedEnum&lt;/a&gt; for an example.)</source>
          <target state="translated">允许定义成员的枚举的子类化会导致违反一些类型和实例的重要不变式。另一方面，允许在一组枚举之间共享一些常见行为是有意义的。（有关&lt;a href=&quot;#orderedenum&quot;&gt;示例&lt;/a&gt;，请参见OrderedEnum。）</target>
        </trans-unit>
        <trans-unit id="5168b39c43df53db082b41562ffb47b2581e0dfa" translate="yes" xml:space="preserve">
          <source>Allows customizing how exceptions are handled in the event loop.</source>
          <target state="translated">允许自定义如何在事件循环中处理异常。</target>
        </trans-unit>
        <trans-unit id="3af65b7b8a24fd1ab3b136e24dca1bdc29a79fcb" translate="yes" xml:space="preserve">
          <source>Allows enabling or disabling coroutine origin tracking. When enabled, the &lt;code&gt;cr_origin&lt;/code&gt; attribute on coroutine objects will contain a tuple of (filename, line number, function name) tuples describing the traceback where the coroutine object was created, with the most recent call first. When disabled, &lt;code&gt;cr_origin&lt;/code&gt; will be None.</source>
          <target state="translated">允许启用或禁用协程起源跟踪。启用后，协程对象上的 &lt;code&gt;cr_origin&lt;/code&gt; 属性将包含一个元组（文件名，行号，函数名）元组，该元组描述了创建协程对象的回溯，最近一次调用在前。禁用后， &lt;code&gt;cr_origin&lt;/code&gt; 将为&amp;ldquo;无&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="738636a3be8341b9cebe3dd58e0680a5032b2eea" translate="yes" xml:space="preserve">
          <source>Allows specifying that the module named &lt;em&gt;oldname&lt;/em&gt; is in fact the package named &lt;em&gt;newname&lt;/em&gt;.</source>
          <target state="translated">允许指定名为&lt;em&gt;oldname&lt;/em&gt;的模块实际上是名为&lt;em&gt;newname&lt;/em&gt;的包。</target>
        </trans-unit>
        <trans-unit id="1e8494b281173c0688479a4b6438c4a9f916278d" translate="yes" xml:space="preserve">
          <source>Allows you to compare data with unknown or inconsistent encoding. All inputs except &lt;em&gt;n&lt;/em&gt; must be bytes objects, not str. Works by losslessly converting all inputs (except &lt;em&gt;n&lt;/em&gt;) to str, and calling &lt;code&gt;dfunc(a, b,
fromfile, tofile, fromfiledate, tofiledate, n, lineterm)&lt;/code&gt;. The output of &lt;em&gt;dfunc&lt;/em&gt; is then converted back to bytes, so the delta lines that you receive have the same unknown/inconsistent encodings as &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">使您可以比较编码未知或不一致的数据。除&lt;em&gt;n&lt;/em&gt;外的所有输入都必须是字节对象，而不是str。通过将所有输入（&lt;em&gt;n&lt;/em&gt;除外）无损转换为str并调用 &lt;code&gt;dfunc(a, b, fromfile, tofile, fromfiledate, tofiledate, n, lineterm)&lt;/code&gt; 。&lt;em&gt;dfunc&lt;/em&gt;的输出然后转换回字节，因此您收到的增量行与&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;具有相同的未知/不一致的编码。</target>
        </trans-unit>
        <trans-unit id="18dea076b2e37e15d1b1e3961b5af0025bae1395" translate="yes" xml:space="preserve">
          <source>Almost all asyncio objects are not thread safe, which is typically not a problem unless there is code that works with them from outside of a Task or a callback. If there&amp;rsquo;s a need for such code to call a low-level asyncio API, the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt; method should be used, e.g.:</source>
          <target state="translated">几乎所有异步对象都不是线程安全的，通常这不是问题，除非存在从任务或回调外部使用它们的代码。如果需要此类代码来调用低级异步API，则应使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;方法，例如：</target>
        </trans-unit>
        <trans-unit id="8ef26a78c0878f712db4f13e47f33bc1d3fc032c" translate="yes" xml:space="preserve">
          <source>Almost all module functions depend on the basic function &lt;a href=&quot;#random.random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt;, which generates a random float uniformly in the semi-open range [0.0, 1.0). Python uses the Mersenne Twister as the core generator. It produces 53-bit precision floats and has a period of 2**19937-1. The underlying implementation in C is both fast and threadsafe. The Mersenne Twister is one of the most extensively tested random number generators in existence. However, being completely deterministic, it is not suitable for all purposes, and is completely unsuitable for cryptographic purposes.</source>
          <target state="translated">几乎所有模块函数都依赖于基本函数&lt;a href=&quot;#random.random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;，该函数在半开放范围[0.0，1.0）中均匀地生成随机浮点数。 Python使用Mersenne Twister作为核心生成器。它产生53位精度的浮点数，周期为2 ** 19937-1。 C语言的基础实现既快速又线程安全。 Mersenne Twister是现有测试最广泛的随机数生成器之一。但是，由于是完全确定性的，因此它并不适合所有目的，并且完全不适合于加密目的。</target>
        </trans-unit>
        <trans-unit id="748de8dc879eb6680f9d63547210f95925fe14ea" translate="yes" xml:space="preserve">
          <source>Along with the &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; class, &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; can be used to let handlers do their work on a separate thread from the one which does the logging. This is important in Web applications and also other service applications where threads servicing clients need to respond as quickly as possible, while any potentially slow operations (such as sending an email via &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt;) are done on a separate thread.</source>
          <target state="translated">与&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; &lt;/a&gt;类一起，可以使用&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; &lt;/a&gt;来使处理程序在与进行日志记录的线程不同的单独线程上完成其工作。这对于Web应用程序以及其他服务应用程序非常重要，在这些应用程序中，服务客户端的线程需要尽快响应，而任何潜在的慢速操作（例如通过&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; &lt;/a&gt;发送电子邮件）都在单独的线程上完成。</target>
        </trans-unit>
        <trans-unit id="e133f1847d6ba17ada9412544089973439552b65" translate="yes" xml:space="preserve">
          <source>Along with the &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; class, &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; can be used to let handlers do their work on a separate thread from the one which does the logging. This is important in Web applications and also other service applications where threads servicing clients need to respond as quickly as possible, while any potentially slow operations (such as sending an email via &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt;) are done on a separate thread.</source>
          <target state="translated">连同&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; &lt;/a&gt;类一起，可以使用&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; &lt;/a&gt;使处理程序在与进行日志记录的线程不同的单独线程上完成其工作。这对于Web应用程序以及其他服务应用程序非常重要，在这些应用程序中，服务客户端的线程需要尽快响应，而任何潜在的慢速操作（例如通过&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; &lt;/a&gt;发送电子邮件）都在单独的线程上完成。</target>
        </trans-unit>
        <trans-unit id="c13a6fce77ea6aef73a68321fa87a9bf9f996061" translate="yes" xml:space="preserve">
          <source>Already-issued keys are invalidated by this operation and should not be subsequently used.</source>
          <target state="translated">已经发行的钥匙被此操作宣布无效,不应继续使用。</target>
        </trans-unit>
        <trans-unit id="ddaad8ef2dfb964d8f8351c0c13727dace14f681" translate="yes" xml:space="preserve">
          <source>Also add a &lt;em&gt;MIME-Version&lt;/em&gt; header if one is not present (see also &lt;a href=&quot;email.message#email.message.MIMEPart&quot;&gt;&lt;code&gt;MIMEPart&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果不存在，还添加一个&lt;em&gt;MIME-Version&lt;/em&gt;标头（另请参见&lt;a href=&quot;email.message#email.message.MIMEPart&quot;&gt; &lt;code&gt;MIMEPart&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="04aa310dbe2a0c208ac29daad11f4c7a1536bccb" translate="yes" xml:space="preserve">
          <source>Also called the binomial coefficient because it is equivalent to the coefficient of k-th term in polynomial expansion of the expression &lt;code&gt;(1 + x) ** n&lt;/code&gt;.</source>
          <target state="translated">也称为二项式系数，因为它等效于表达式 &lt;code&gt;(1 + x) ** n&lt;/code&gt; 多项式展开式中的第k个项的系数。</target>
        </trans-unit>
        <trans-unit id="4da92deb98831a7db28244e57fd52231a3f52e3a" translate="yes" xml:space="preserve">
          <source>Also if &lt;em&gt;chunksize&lt;/em&gt; is &lt;code&gt;1&lt;/code&gt; then the &lt;code&gt;next()&lt;/code&gt; method of the iterator returned by the &lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt;&lt;code&gt;imap()&lt;/code&gt;&lt;/a&gt; method has an optional &lt;em&gt;timeout&lt;/em&gt; parameter: &lt;code&gt;next(timeout)&lt;/code&gt; will raise &lt;a href=&quot;#multiprocessing.TimeoutError&quot;&gt;&lt;code&gt;multiprocessing.TimeoutError&lt;/code&gt;&lt;/a&gt; if the result cannot be returned within &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">同样，如果&lt;em&gt;chunksize&lt;/em&gt;为 &lt;code&gt;1&lt;/code&gt; ，则由&lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt; &lt;code&gt;imap()&lt;/code&gt; &lt;/a&gt;方法返回的迭代器的 &lt;code&gt;next()&lt;/code&gt; 方法具有可选的&lt;em&gt;超时&lt;/em&gt;参数：如果无法在&lt;em&gt;超时&lt;/em&gt;秒内返回结果，则 &lt;code&gt;next(timeout)&lt;/code&gt; 将引发&lt;a href=&quot;#multiprocessing.TimeoutError&quot;&gt; &lt;code&gt;multiprocessing.TimeoutError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a66c2ca0e99bfb1ee1915dbefddd9032612eb1e9" translate="yes" xml:space="preserve">
          <source>Also known as the Qt for Python project, PySide2 is a newer binding to the Qt toolkit. It is provided by The Qt Company and aims to provide a complete port of PySide to Qt 5. Compared to PyQt, its licensing scheme is friendlier to non-open source applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b37f91f9986d19a74d71c28f0eb3cf516b74d0" translate="yes" xml:space="preserve">
          <source>Also note that cookies saved while Mozilla is running will get clobbered by Mozilla.</source>
          <target state="translated">另外,请注意Mozilla运行时保存的cookies会被Mozilla吃掉。</target>
        </trans-unit>
        <trans-unit id="05381aa96697605cddfb622e6c2165e3e0c1cfd5" translate="yes" xml:space="preserve">
          <source>Also note that if &lt;code&gt;sys.breakpointhook()&lt;/code&gt; is overridden programmatically, &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; consulted.</source>
          <target state="translated">另请注意，如果 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; 编程方式覆盖sys.breakpointhook（），则&lt;em&gt;不会使用&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02c7d894d9a8e8af878b32163c0bea4d7ca67d0d" translate="yes" xml:space="preserve">
          <source>Also note that if &lt;code&gt;sys.breakpointhook()&lt;/code&gt; is overridden programmatically, &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; consulted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332b93cd68d70da8be748419e7b6e1e7630df4b0" translate="yes" xml:space="preserve">
          <source>Also note that, aside from the zero argument form, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is not limited to use inside methods. The two argument form specifies the arguments exactly and makes the appropriate references. The zero argument form only works inside a class definition, as the compiler fills in the necessary details to correctly retrieve the class being defined, as well as accessing the current instance for ordinary methods.</source>
          <target state="translated">还要注意，除零参数形式外，&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;不限于在内部方法中使用。两个参数形式准确地指定了参数并进行了适当的引用。零参数形式仅在类定义内起作用，因为编译器会填写必要的详细信息以正确检索要定义的类，以及为常规方法访问当前实例。</target>
        </trans-unit>
        <trans-unit id="30f25e2caeef7e4eba52c7c66bd42d7b1a2c33c9" translate="yes" xml:space="preserve">
          <source>Also referred to as integer division. The resultant value is a whole integer, though the result&amp;rsquo;s type is not necessarily int. The result is always rounded towards minus infinity: &lt;code&gt;1//2&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;(-1)//2&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;1//(-2)&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;(-1)//(-2)&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">也称为整数除法。结果值是一个整数，尽管结果的类型不一定是int。结果总是舍入向负无穷： &lt;code&gt;1//2&lt;/code&gt; 是 &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;(-1)//2&lt;/code&gt; 是 &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;1//(-2)&lt;/code&gt; 是 &lt;code&gt;-1&lt;/code&gt; ，并且 &lt;code&gt;(-1)//(-2)&lt;/code&gt; 是 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969aafb04012095b4d6476bad1048d3bb9a0ed99" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;functions#func-bytearray&quot;&gt;bytearray&lt;/a&gt; built-in.</source>
          <target state="translated">另请参阅内置的&lt;a href=&quot;functions#func-bytearray&quot;&gt;bytearray&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17dcbded66c86a6599675ce2d2b8b6553fefda44" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;functions#func-bytes&quot;&gt;bytes&lt;/a&gt; built-in.</source>
          <target state="translated">另请参阅内置&lt;a href=&quot;functions#func-bytes&quot;&gt;字节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5eea734960db56a51ce22d3968f6f1a077a73c20" translate="yes" xml:space="preserve">
          <source>Also test examples reachable from dict &lt;code&gt;m.__test__&lt;/code&gt;, if it exists and is not &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;m.__test__&lt;/code&gt; maps names (strings) to functions, classes and strings; function and class docstrings are searched for examples; strings are searched directly, as if they were docstrings.</source>
          <target state="translated">还可以从dict &lt;code&gt;m.__test__&lt;/code&gt; 测试示例（如果存在且不是 &lt;code&gt;None&lt;/code&gt; )。 &lt;code&gt;m.__test__&lt;/code&gt; 将名称（字符串）映射到函数，类和字符串；搜索函数和类文档字符串以获取示例；直接搜索字符串，就好像它们是文档字符串一样。</target>
        </trans-unit>
        <trans-unit id="1297c5eac193ee99dea660520c3d5d38eabae727" translate="yes" xml:space="preserve">
          <source>Also unlike other operations, quantize never signals Underflow, even if the result is subnormal and inexact.</source>
          <target state="translated">另外与其他操作不同的是,quantize永远不会发出Underflow信号,即使结果是次正常和不精确的。</target>
        </trans-unit>
        <trans-unit id="6d52e998b134acc66f821dc9e280d60f9ef6cf6e" translate="yes" xml:space="preserve">
          <source>Also, note that if the callback function is called in a thread created outside of Python&amp;rsquo;s control (e.g. by the foreign code that calls the callback), ctypes creates a new dummy Python thread on every invocation. This behavior is correct for most purposes, but it means that values stored with &lt;a href=&quot;threading#threading.local&quot;&gt;&lt;code&gt;threading.local&lt;/code&gt;&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; survive across different callbacks, even when those calls are made from the same C thread.</source>
          <target state="translated">另外，请注意，如果在Python控件之外创建的线程中调用了回调函数（例如，由调用回调的外部代码），则ctypes每次调用都会创建一个新的虚拟Python线程。此行为在大多数情况下都是正确的，但是这意味着用&lt;a href=&quot;threading#threading.local&quot;&gt; &lt;code&gt;threading.local&lt;/code&gt; &lt;/a&gt;存储的值将&lt;em&gt;无法&lt;/em&gt;在不同的回调中保留，即使这些调用是从同一C线程进行的。</target>
        </trans-unit>
        <trans-unit id="ffda43397fafd0562d904b85d70629199b0601e9" translate="yes" xml:space="preserve">
          <source>Also, remember that a few standard headers (&lt;em&gt;Content-Length&lt;/em&gt;, &lt;em&gt;Content-Type&lt;/em&gt; and &lt;em&gt;Host&lt;/em&gt;) are added when the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; is passed to &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;OpenerDirector.open()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">另外，请记住，将&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;传递到&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;OpenerDirector.open()&lt;/code&gt; &lt;/a&gt;）时，会添加一些标准标头（&lt;em&gt;Content-Length&lt;/em&gt;，&lt;em&gt;Content-Type&lt;/em&gt;和&lt;em&gt;Host&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="7c31d635bef296eddc9b7067796d9ac2ceca1971" translate="yes" xml:space="preserve">
          <source>Also, setting &lt;code&gt;feature_version&lt;/code&gt; to a tuple &lt;code&gt;(major, minor)&lt;/code&gt; will attempt to parse using that Python version&amp;rsquo;s grammar. Currently &lt;code&gt;major&lt;/code&gt; must equal to &lt;code&gt;3&lt;/code&gt;. For example, setting &lt;code&gt;feature_version=(3, 4)&lt;/code&gt; will allow the use of &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; as variable names. The lowest supported version is &lt;code&gt;(3, 4)&lt;/code&gt;; the highest is &lt;code&gt;sys.version_info[0:2]&lt;/code&gt;.</source>
          <target state="translated">同样，将 &lt;code&gt;feature_version&lt;/code&gt; 设置为元组 &lt;code&gt;(major, minor)&lt;/code&gt; 将尝试使用该Python版本的语法进行解析。目前 &lt;code&gt;major&lt;/code&gt; 必须等于 &lt;code&gt;3&lt;/code&gt; 。例如，设置 &lt;code&gt;feature_version=(3, 4)&lt;/code&gt; 将允许使用 &lt;code&gt;async&lt;/code&gt; 和 &lt;code&gt;await&lt;/code&gt; 作为变量名。支持的最低版本是 &lt;code&gt;(3, 4)&lt;/code&gt; ; 最高的是 &lt;code&gt;sys.version_info[0:2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c038b15b5de4f5872e231b0f4fef4b3d1ab4a8a" translate="yes" xml:space="preserve">
          <source>Also, subclassing an enumeration is allowed only if the enumeration does not define any members. So this is forbidden:</source>
          <target state="translated">另外,只有当一个枚举没有定义任何成员时,才允许对一个枚举进行子类化。所以这是被禁止的。</target>
        </trans-unit>
        <trans-unit id="328115fa4aad448b63c4abf04e067b3272a971c4" translate="yes" xml:space="preserve">
          <source>Also, this decorator requires that the &lt;code&gt;__dict__&lt;/code&gt; attribute on each instance be a mutable mapping. This means it will not work with some types, such as metaclasses (since the &lt;code&gt;__dict__&lt;/code&gt; attributes on type instances are read-only proxies for the class namespace), and those that specify &lt;code&gt;__slots__&lt;/code&gt; without including &lt;code&gt;__dict__&lt;/code&gt; as one of the defined slots (as such classes don&amp;rsquo;t provide a &lt;code&gt;__dict__&lt;/code&gt; attribute at all).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88f419db1d727742f4296df8e60905129a6eaa4" translate="yes" xml:space="preserve">
          <source>Alt-/</source>
          <target state="translated">Alt-/</target>
        </trans-unit>
        <trans-unit id="523f1fa185299e53f8073a5f4db33f3a543e0c73" translate="yes" xml:space="preserve">
          <source>Alt-K</source>
          <target state="translated">Alt-K</target>
        </trans-unit>
        <trans-unit id="08044dfe50ef88573dd4b98d40dcea3bbb29cb1b" translate="yes" xml:space="preserve">
          <source>Alt-n</source>
          <target state="translated">Alt-n</target>
        </trans-unit>
        <trans-unit id="f8b5304cb9f515ca84a85d6f59d92eb340d9d86e" translate="yes" xml:space="preserve">
          <source>Alt-p</source>
          <target state="translated">Alt-p</target>
        </trans-unit>
        <trans-unit id="166df40fdc45fa8435a0aeaeb724d35b2824b092" translate="yes" xml:space="preserve">
          <source>Altered an exponent to fit representation constraints.</source>
          <target state="translated">改变了一个指数,以适应表示约束。</target>
        </trans-unit>
        <trans-unit id="7a26af879a761b43ca17a9773a7940683b3c696e" translate="yes" xml:space="preserve">
          <source>Alternate character set mode</source>
          <target state="translated">备用字符集模式</target>
        </trans-unit>
        <trans-unit id="d9b3cf0658ad7ba54f125c370d44945ffd5bbbab" translate="yes" xml:space="preserve">
          <source>Alternate constructor for &lt;a href=&quot;#itertools.chain&quot;&gt;&lt;code&gt;chain()&lt;/code&gt;&lt;/a&gt;. Gets chained inputs from a single iterable argument that is evaluated lazily. Roughly equivalent to:</source>
          <target state="translated">&lt;a href=&quot;#itertools.chain&quot;&gt; &lt;code&gt;chain()&lt;/code&gt; 的&lt;/a&gt;备用构造函数。从一个延迟计算的单个可迭代参数获取链接输入。大致相当于：</target>
        </trans-unit>
        <trans-unit id="1b95b413e2781a6e9f949c96afb8e7654b0b6a7c" translate="yes" xml:space="preserve">
          <source>Alternately, you can use the &lt;code&gt;setparameters()&lt;/code&gt; method to set all three audio parameters at once. This is more convenient, but may not be as flexible in all cases.</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;setparameters()&lt;/code&gt; 方法一次设置所有三个音频参数。这更方便，但可能在所有情况下都不那么灵活。</target>
        </trans-unit>
        <trans-unit id="120472849a159296aff2262eb84d4aabcf036f62" translate="yes" xml:space="preserve">
          <source>Alternative Generator</source>
          <target state="translated">替代发电机</target>
        </trans-unit>
        <trans-unit id="c3192b9728e7aa2994a20b12d0f484a50d4d9db8" translate="yes" xml:space="preserve">
          <source>Alternative command line option and argument parsing library.</source>
          <target state="translated">备用的命令行选项和参数解析库。</target>
        </trans-unit>
        <trans-unit id="6f08874d859f81959583d494b6024b88f3206311" translate="yes" xml:space="preserve">
          <source>Alternative constructor. The &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; function is actually a shortcut to this classmethod.</source>
          <target state="translated">替代构造函数。该&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;函数实际上是一个快捷方式到这一类方法。</target>
        </trans-unit>
        <trans-unit id="851a8413bea4eb55cb0ed6c5d8946229982061a0" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;em&gt;side_effect&lt;/em&gt; can be an exception class or instance. In this case the exception will be raised when the mock is called.</source>
          <target state="translated">另外，&lt;em&gt;side_effect&lt;/em&gt;可以是异常类或实例。在这种情况下，调用模拟程序时将引发异常。</target>
        </trans-unit>
        <trans-unit id="2f2589d09d2de9e0443187f1741ac9282ceccb5b" translate="yes" xml:space="preserve">
          <source>Alternatively you can just use &lt;code&gt;vars(my_mock)&lt;/code&gt; (instance members) and &lt;code&gt;dir(type(my_mock))&lt;/code&gt; (type members) to bypass the filtering irrespective of &lt;code&gt;mock.FILTER_DIR&lt;/code&gt;.</source>
          <target state="translated">另外，您可以只使用 &lt;code&gt;vars(my_mock)&lt;/code&gt; （实例成员）和 &lt;code&gt;dir(type(my_mock))&lt;/code&gt; （类型成员）来绕过过滤，而无需考虑 &lt;code&gt;mock.FILTER_DIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="560cce3f7cddd3320937666765b3cde7401b149e" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;a href=&quot;#object.__reduce_ex__&quot;&gt;&lt;code&gt;__reduce_ex__()&lt;/code&gt;&lt;/a&gt; method may be defined. The only difference is this method should take a single integer argument, the protocol version. When defined, pickle will prefer it over the &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method. In addition, &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; automatically becomes a synonym for the extended version. The main use for this method is to provide backwards-compatible reduce values for older Python releases.</source>
          <target state="translated">或者，可以定义&lt;a href=&quot;#object.__reduce_ex__&quot;&gt; &lt;code&gt;__reduce_ex__()&lt;/code&gt; &lt;/a&gt;方法。唯一的区别是此方法应采用单个整数参数，即协议版本。定义后，pickle将比&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;方法更喜欢它。另外，&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;自动成为扩展版本的同义词。此方法的主要用途是为较旧的Python版本提供向后兼容的reduce值。</target>
        </trans-unit>
        <trans-unit id="b8170ca6af713e396125022cf5ef83122166378a" translate="yes" xml:space="preserve">
          <source>Alternatively, annotate your generator as having a return type of either &lt;code&gt;AsyncIterable[YieldType]&lt;/code&gt; or &lt;code&gt;AsyncIterator[YieldType]&lt;/code&gt;:</source>
          <target state="translated">或者，将生成器的返回类型注释为 &lt;code&gt;AsyncIterable[YieldType]&lt;/code&gt; 或 &lt;code&gt;AsyncIterator[YieldType]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bedcc0b6120fd2e8105cbf4a4b500b32795b5330" translate="yes" xml:space="preserve">
          <source>Alternatively, annotate your generator as having a return type of either &lt;code&gt;Iterable[YieldType]&lt;/code&gt; or &lt;code&gt;Iterator[YieldType]&lt;/code&gt;:</source>
          <target state="translated">或者，将生成器的返回类型注释为 &lt;code&gt;Iterable[YieldType]&lt;/code&gt; 或 &lt;code&gt;Iterator[YieldType]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f3a0dab4ca32a3c12f17a83c0742fa58af47dd19" translate="yes" xml:space="preserve">
          <source>Alternatively, for trusted input, the shell&amp;rsquo;s own pipeline support may still be used directly:</source>
          <target state="translated">另外，对于受信任的输入，仍然可以直接使用外壳自身的管道支持：</target>
        </trans-unit>
        <trans-unit id="c2c53c18dbfbfd58e92716305404323d14180eb0" translate="yes" xml:space="preserve">
          <source>Alternatively, if you configured the &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PATHEXT&lt;/code&gt; variables for your &lt;a href=&quot;https://docs.python.org/3.8/using/windows.html#using-on-windows&quot;&gt;Python installation&lt;/a&gt;:</source>
          <target state="translated">另外，如果您为&lt;a href=&quot;https://docs.python.org/3.8/using/windows.html#using-on-windows&quot;&gt;Python安装&lt;/a&gt;配置了 &lt;code&gt;PATH&lt;/code&gt; 和 &lt;code&gt;PATHEXT&lt;/code&gt; 变量：</target>
        </trans-unit>
        <trans-unit id="96fc2d926b40d28091e4a28520224b2917493b24" translate="yes" xml:space="preserve">
          <source>Alternatively, if you configured the &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PATHEXT&lt;/code&gt; variables for your &lt;a href=&quot;https://docs.python.org/3.9/using/windows.html#using-on-windows&quot;&gt;Python installation&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7e943dc867b6734626dcdec4a25f40c03a249a" translate="yes" xml:space="preserve">
          <source>Alternatively, inputs can be rounded upon creation using the &lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt;&lt;code&gt;Context.create_decimal()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">或者，可以使用&lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt; &lt;code&gt;Context.create_decimal()&lt;/code&gt; &lt;/a&gt;方法在创建时对输入进行四舍五入：</target>
        </trans-unit>
        <trans-unit id="afdd5b97037a223bd3a94ba552f2a81c0c1bf175" translate="yes" xml:space="preserve">
          <source>Alternatively, the first character of the format string can be used to indicate the byte order, size and alignment of the packed data, according to the following table:</source>
          <target state="translated">另外,根据下表,格式字符串的第一个字符可以用来指示打包数据的字节顺序、大小和对齐方式。</target>
        </trans-unit>
        <trans-unit id="161271a624435f85f1f3f89dd66674cf40b4b411" translate="yes" xml:space="preserve">
          <source>Alternatively, use &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;, which provide a more structured introspection API for callables.</source>
          <target state="translated">或者，使用&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;，它们为可调用对象提供更结构化的自省API。</target>
        </trans-unit>
        <trans-unit id="bc69874a843b8bca70392a6b4845a801e795ddc4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can provide the entire regular expression pattern by overriding the class attribute &lt;em&gt;pattern&lt;/em&gt;. If you do this, the value must be a regular expression object with four named capturing groups. The capturing groups correspond to the rules given above, along with the invalid placeholder rule:</source>
          <target state="translated">另外，您可以通过覆盖class属性&lt;em&gt;pattern&lt;/em&gt;来提供整个正则表达式&lt;em&gt;模式&lt;/em&gt;。如果这样做，则该值必须是带有四个命名捕获组的正则表达式对象。捕获组与上面给出的规则以及无效的占位符规则相对应：</target>
        </trans-unit>
        <trans-unit id="537f3d9f59a4cc7f4b3b3b1d8452a61dcfcd6369" translate="yes" xml:space="preserve">
          <source>Alternatively, you can run the demo scripts individually. For example,</source>
          <target state="translated">另外,你也可以单独运行演示脚本。例如:</target>
        </trans-unit>
        <trans-unit id="fa0d39d2965e611cb72e153681483b50e7579f0d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;#multiprocessing.get_context&quot;&gt;&lt;code&gt;get_context()&lt;/code&gt;&lt;/a&gt; to obtain a context object. Context objects have the same API as the multiprocessing module, and allow one to use multiple start methods in the same program.</source>
          <target state="translated">另外，您可以使用&lt;a href=&quot;#multiprocessing.get_context&quot;&gt; &lt;code&gt;get_context()&lt;/code&gt; &lt;/a&gt;获得上下文对象。上下文对象与多处理模块具有相同的API，并允许一个对象在同一程序中使用多个启动方法。</target>
        </trans-unit>
        <trans-unit id="2c25f25fc8595d803ebcfcdb59b8832dd261b439" translate="yes" xml:space="preserve">
          <source>Alters flag dispositions for messages in mailbox. &lt;em&gt;command&lt;/em&gt; is specified by section 6.4.6 of &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt; as being one of &amp;ldquo;FLAGS&amp;rdquo;, &amp;ldquo;+FLAGS&amp;rdquo;, or &amp;ldquo;-FLAGS&amp;rdquo;, optionally with a suffix of &amp;ldquo;.SILENT&amp;rdquo;.</source>
          <target state="translated">更改邮箱中邮件的标志配置。&lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2060的&lt;/strong&gt;&lt;/a&gt; 6.4.6节将&lt;em&gt;命令&lt;/em&gt;指定为&amp;ldquo; FLAGS&amp;rdquo;，&amp;ldquo; + FLAGS&amp;rdquo;或&amp;ldquo; -FLAGS&amp;rdquo;之一，并可以选择后缀为&amp;ldquo; .SILENT&amp;rdquo;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ca488175d062da3b916916dcc5cf1c6c0a580bc" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;os.path#os.path.relpath&quot;&gt;&lt;code&gt;os.path.relpath()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PurePath.relative_to&quot;&gt;&lt;code&gt;PurePath.relative_to()&lt;/code&gt;&lt;/a&gt; have some overlapping use-cases, their semantics differ enough to warrant not considering them equivalent.</source>
          <target state="translated">尽管&lt;a href=&quot;os.path#os.path.relpath&quot;&gt; &lt;code&gt;os.path.relpath()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pathlib.PurePath.relative_to&quot;&gt; &lt;code&gt;PurePath.relative_to()&lt;/code&gt; &lt;/a&gt;具有一些重叠的用例，但它们的语义差异足以确保不考虑它们的等效性。</target>
        </trans-unit>
        <trans-unit id="5aba7d7e4194f7e569bb1e4976c4f49e69cd0c0d" translate="yes" xml:space="preserve">
          <source>Although Windows supports &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt;, you can only set the file&amp;rsquo;s read-only flag with it (via the &lt;code&gt;stat.S_IWRITE&lt;/code&gt; and &lt;code&gt;stat.S_IREAD&lt;/code&gt; constants or a corresponding integer value). All other bits are ignored.</source>
          <target state="translated">尽管Windows支持&lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; &lt;/a&gt;，但是您只能使用它设置文件的只读标志（通过 &lt;code&gt;stat.S_IWRITE&lt;/code&gt; 和 &lt;code&gt;stat.S_IREAD&lt;/code&gt; 常量或相应的整数值）。所有其他位均被忽略。</target>
        </trans-unit>
        <trans-unit id="ff306b2fbe16e39bfb4f4ae1cb51d280ddc5b736" translate="yes" xml:space="preserve">
          <source>Although filters are used primarily to filter records based on more sophisticated criteria than levels, they get to see every record which is processed by the handler or logger they&amp;rsquo;re attached to: this can be useful if you want to do things like counting how many records were processed by a particular logger or handler, or adding, changing or removing attributes in the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; being processed. Obviously changing the LogRecord needs to be done with some care, but it does allow the injection of contextual information into logs (see &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#filters-contextual&quot;&gt;Using Filters to impart contextual information&lt;/a&gt;).</source>
          <target state="translated">尽管过滤器主要用于根据比级别更复杂的条件来过滤记录，但它们可以查看由其附加到的处理程序或记录器处理的每条记录：如果您要进行计数等操作，这将非常有用记录由特定的记录器或处理程序处理，或在要处理的&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;中添加，更改或删除属性。显然，更改LogRecord需要格外小心，但确实允许将上下文信息注入到日志中（请参阅&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#filters-contextual&quot;&gt;使用过滤器传递上下文信息&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8c3294a37977a82023d9835e2636a67fa40e0a66" translate="yes" xml:space="preserve">
          <source>Although filters are used primarily to filter records based on more sophisticated criteria than levels, they get to see every record which is processed by the handler or logger they&amp;rsquo;re attached to: this can be useful if you want to do things like counting how many records were processed by a particular logger or handler, or adding, changing or removing attributes in the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; being processed. Obviously changing the LogRecord needs to be done with some care, but it does allow the injection of contextual information into logs (see &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#filters-contextual&quot;&gt;Using Filters to impart contextual information&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e435625441b2f1626446dd761b8fafec987e5b2e" translate="yes" xml:space="preserve">
          <source>Although in many cases, changing the &lt;code id=&quot;index-15&quot;&gt;TZ&lt;/code&gt; environment variable may affect the output of functions like &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; without calling &lt;a href=&quot;#time.tzset&quot;&gt;&lt;code&gt;tzset()&lt;/code&gt;&lt;/a&gt;, this behavior should not be relied on.</source>
          <target state="translated">尽管在许多情况下，更改 &lt;code id=&quot;index-15&quot;&gt;TZ&lt;/code&gt; 环境变量可能会影响诸如&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; 之&lt;/a&gt;类的函数的输出而无需调用&lt;a href=&quot;#time.tzset&quot;&gt; &lt;code&gt;tzset()&lt;/code&gt; &lt;/a&gt;，但不应依赖此行为。</target>
        </trans-unit>
        <trans-unit id="9ac287e0e259e1518ab8bd9cdd4fceec7ae0a0f4" translate="yes" xml:space="preserve">
          <source>Although it is a somewhat common practice to expose these to end users, these values are designed to be primary keys for representing the relevant zones and not necessarily user-facing elements. Projects like CLDR (the Unicode Common Locale Data Repository) can be used to get more user-friendly strings from these keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7e770948da6ad1f5401b21b0a95acc8356e162" translate="yes" xml:space="preserve">
          <source>Although it is possible to store a pointer in shared memory remember that this will refer to a location in the address space of a specific process. However, the pointer is quite likely to be invalid in the context of a second process and trying to dereference the pointer from the second process may cause a crash.</source>
          <target state="translated">虽然可以在共享内存中存储指针,但请记住,这将指的是特定进程地址空间中的一个位置。然而,指针在第二个进程的上下文中很可能是无效的,试图从第二个进程中取消引用指针可能会导致崩溃。</target>
        </trans-unit>
        <trans-unit id="36ac042d6e7c56f32a4f17c62570dba38897403c" translate="yes" xml:space="preserve">
          <source>Although powerful, implementing &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; directly in your classes is error prone. For this reason, class designers should use the high-level interface (i.e., &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;) whenever possible. We will show, however, cases where using &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; is the only option or leads to more efficient pickling or both.</source>
          <target state="translated">尽管功能强大，&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;直接在类中实现__reduce __（）容易出错。因此，类设计人员应尽可能使用高级接口（即&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;）。但是，我们将说明使用&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;是唯一的选择或导致更有效的酸洗或两者兼而有之的情况。</target>
        </trans-unit>
        <trans-unit id="81a1b224e7ad62f02a109883807627a1786137e9" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; class of the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module implements this attribute, the database engine&amp;rsquo;s own support for the determination of &amp;ldquo;rows affected&amp;rdquo;/&amp;rdquo;rows selected&amp;rdquo; is quirky.</source>
          <target state="translated">尽管&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;类实现了此属性，但是数据库引擎自己对确定&amp;ldquo;受影响的行&amp;rdquo; /&amp;ldquo;选定的行&amp;rdquo;的支持是奇怪的。</target>
        </trans-unit>
        <trans-unit id="5e789a4520b246a8dd4042cca86036c0f5a37df9" translate="yes" xml:space="preserve">
          <source>Although this module is always available, not all functions are available on all platforms. Most of the functions defined in this module call platform C library functions with the same name. It may sometimes be helpful to consult the platform documentation, because the semantics of these functions varies among platforms.</source>
          <target state="translated">虽然本模块一直可用,但并不是所有的函数都能在所有平台上使用。本模块中定义的大部分函数都会调用平台C库中的同名函数。有时参考平台文档可能会有帮助,因为这些函数的语义在不同平台上有所不同。</target>
        </trans-unit>
        <trans-unit id="52e0fade5c33a8c0706c1ee4ec4d3b8efefa5ae6" translate="yes" xml:space="preserve">
          <source>Always check a script for syntax errors first, by doing something like &lt;code&gt;python script.py&lt;/code&gt;.</source>
          <target state="translated">始终首先通过执行 &lt;code&gt;python script.py&lt;/code&gt; 之类的命令来检查脚本是否存在语法错误。</target>
        </trans-unit>
        <trans-unit id="940801d3a0b2504730f2938dc103aefa05f13928" translate="yes" xml:space="preserve">
          <source>Always create a new, empty database, open for reading and writing</source>
          <target state="translated">总是创建一个新的、空的数据库,开放供读写。</target>
        </trans-unit>
        <trans-unit id="2b68c9edfa6077c66acf9229ba5007aeabfd27c6" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">始终返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d92042192835b0201f0080332bb4fd84f15bccf0" translate="yes" xml:space="preserve">
          <source>Among other uses, this allows for initializing field values that depend on one or more other fields. For example:</source>
          <target state="translated">在其他用途中,这允许初始化依赖于一个或多个其他字段的字段值。例如:</target>
        </trans-unit>
        <trans-unit id="4ce4dae33731a8639d5206f55cb819ffec493ded" translate="yes" xml:space="preserve">
          <source>Among the acceptable object types in the iterables are Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt; (e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, or objects returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;), socket objects returned by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket()&lt;/code&gt;&lt;/a&gt;. You may also define a &lt;em&gt;wrapper&lt;/em&gt; class yourself, as long as it has an appropriate &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (that really returns a file descriptor, not just a random integer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b2cdd1820b99395356f8484945cb33f7bdcc5d" translate="yes" xml:space="preserve">
          <source>Among the acceptable object types in the sequences are Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt; (e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, or objects returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;), socket objects returned by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket()&lt;/code&gt;&lt;/a&gt;. You may also define a &lt;em&gt;wrapper&lt;/em&gt; class yourself, as long as it has an appropriate &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (that really returns a file descriptor, not just a random integer).</source>
          <target state="translated">序列中可接受的对象类型包括Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;（例如 &lt;code&gt;sys.stdin&lt;/code&gt; 或&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;os.popen()&lt;/code&gt; &lt;/a&gt;返回的对象），&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket()&lt;/code&gt; &lt;/a&gt;返回的套接字对象。您也可以自己定义&lt;em&gt;包装器&lt;/em&gt;类，只要它具有适当的&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法（实际上返回文件描述符，而不仅仅是随机整数）即可。</target>
        </trans-unit>
        <trans-unit id="67f920425dfdb0e1d204c3706777c2dfb256039d" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;unstructured&amp;rdquo; header is the default type of header in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;. Any header that does not have a specified syntax is treated as unstructured. The classic example of an unstructured header is the &lt;em&gt;Subject&lt;/em&gt; header.</source>
          <target state="translated">&amp;ldquo;非结构化&amp;rdquo;标头是&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322中标&lt;/strong&gt;&lt;/a&gt;头的默认类型。没有指定语法的任何标头都被视为非结构化。非结构化标题的经典示例是&lt;em&gt;Subject&lt;/em&gt;标题。</target>
        </trans-unit>
        <trans-unit id="e131bde80853d47856e8609b6fce7ef182378143" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; would also be useful for implementing variants of &lt;a href=&quot;functools#functools.lru_cache&quot;&gt;&lt;code&gt;functools.lru_cache()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">一个&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;也将实施的变体有用&lt;a href=&quot;functools#functools.lru_cache&quot;&gt; &lt;code&gt;functools.lru_cache()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9c7f6e615e42567774616270a66f004c71798f6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that executes calls asynchronously using a pool of at most &lt;em&gt;max_workers&lt;/em&gt; processes. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, it will default to the number of processors on the machine. If &lt;em&gt;max_workers&lt;/em&gt; is less than or equal to &lt;code&gt;0&lt;/code&gt;, then a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. On Windows, &lt;em&gt;max_workers&lt;/em&gt; must be less than or equal to &lt;code&gt;61&lt;/code&gt;. If it is not then &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the default chosen will be at most &lt;code&gt;61&lt;/code&gt;, even if more processors are available. &lt;em&gt;mp_context&lt;/em&gt; can be a multiprocessing context or None. It will be used to launch the workers. If &lt;em&gt;mp_context&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, the default multiprocessing context is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47217b41bb1d751c58676a69570e3346ce5098e4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that executes calls asynchronously using a pool of at most &lt;em&gt;max_workers&lt;/em&gt; processes. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, it will default to the number of processors on the machine. If &lt;em&gt;max_workers&lt;/em&gt; is lower or equal to &lt;code&gt;0&lt;/code&gt;, then a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. On Windows, &lt;em&gt;max_workers&lt;/em&gt; must be equal or lower than &lt;code&gt;61&lt;/code&gt;. If it is not then &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the default chosen will be at most &lt;code&gt;61&lt;/code&gt;, even if more processors are available. &lt;em&gt;mp_context&lt;/em&gt; can be a multiprocessing context or None. It will be used to launch the workers. If &lt;em&gt;mp_context&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, the default multiprocessing context is used.</source>
          <target state="translated">一个&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;子类，使用最多&lt;em&gt;max_workers&lt;/em&gt;进程的池异步执行调用。如果&lt;em&gt;max_workers&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; 或未指定，它将默认为计算机上的处理器数量。如果&lt;em&gt;max_workers小于&lt;/em&gt;或等于 &lt;code&gt;0&lt;/code&gt; ，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。在Windows上，&lt;em&gt;max_workers&lt;/em&gt;必须等于或小于 &lt;code&gt;61&lt;/code&gt; 。如果不是，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;max_workers&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则即使有更多处理器可用，默认选择最多为 &lt;code&gt;61&lt;/code&gt; 。&lt;em&gt;mp_context&lt;/em&gt;可以是多处理上下文，也可以是&amp;ldquo;无&amp;rdquo;。它将用来发动工人。如果&lt;em&gt;mp_context&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; 或未指定，则使用默认的多处理上下文。</target>
        </trans-unit>
        <trans-unit id="4f20b7dfdda203d4d41b7e3513f2e5b7977c7e2d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of at most &lt;em&gt;max_workers&lt;/em&gt; threads to execute calls asynchronously.</source>
          <target state="translated">一个&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;子类，该子类最多使用&lt;em&gt;max_workers&lt;/em&gt;线程池来异步执行调用。</target>
        </trans-unit>
        <trans-unit id="a8c23a468c316481bdf2183623e1c6846281a4c8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; instance is fed HTML data and calls handler methods when start tags, end tags, text, comments, and other markup elements are encountered. The user should subclass &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; and override its methods to implement the desired behavior.</source>
          <target state="translated">一个&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; 的&lt;/a&gt;情况下被送入HTML数据和呼叫处理方法开始标记，结束标记，文本，注释的时候，并遇到其它标记元素。用户应&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;子类，并重写其方法以实现所需的行为。</target>
        </trans-unit>
        <trans-unit id="0d0411e58015548ce4f79bef8d87ffb7f4cf110d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; instance represents one transaction with an HTTP server. It should be instantiated passing it a host and optional port number. If no port number is passed, the port is extracted from the host string if it has the form &lt;code&gt;host:port&lt;/code&gt;, else the default HTTP port (80) is used. If the optional &lt;em&gt;timeout&lt;/em&gt; parameter is given, blocking operations (like connection attempts) will timeout after that many seconds (if it is not given, the global default timeout setting is used). The optional &lt;em&gt;source_address&lt;/em&gt; parameter may be a tuple of a (host, port) to use as the source address the HTTP connection is made from. The optional &lt;em&gt;blocksize&lt;/em&gt; parameter sets the buffer size in bytes for sending a file-like message body.</source>
          <target state="translated">一个&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt;实例表示与HTTP服务器一个事务。应该实例化它，并为其传递主机和可选端口号。如果未传递任何端口号，则如果端口的格式为 &lt;code&gt;host:port&lt;/code&gt; ，则从主机字符串中提取该端口，否则将使用默认的HTTP端口（80）。如果给出了可选的&lt;em&gt;timeout&lt;/em&gt;参数，那么阻塞操作（如连接尝试）将在几秒钟后超时（如果未给出，则使用全局默认超时设置）。可选的&lt;em&gt;source_address&lt;/em&gt;参数可以是（主机，端口）的元组，用作创建HTTP连接的源地址。可选的&lt;em&gt;blocksize&lt;/em&gt;参数以字节为单位设置缓冲区大小，用于发送类似文件的消息正文。</target>
        </trans-unit>
        <trans-unit id="ed2fb59076f740158ba38827bce5bff26573eb0c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#http.client.HTTPResponse&quot;&gt;&lt;code&gt;HTTPResponse&lt;/code&gt;&lt;/a&gt; instance wraps the HTTP response from the server. It provides access to the request headers and the entity body. The response is an iterable object and can be used in a with statement.</source>
          <target state="translated">一&lt;a href=&quot;#http.client.HTTPResponse&quot;&gt; &lt;code&gt;HTTPResponse&lt;/code&gt; &lt;/a&gt;实例包含从服务器的HTTP响应。它提供对请求标头和实体主体的访问。该响应是一个可迭代的对象，可以在with语句中使用。</target>
        </trans-unit>
        <trans-unit id="30417cc6f1be8386812ed952297391d77fecc73f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">一个&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;实例有以下方法：</target>
        </trans-unit>
        <trans-unit id="88406d2d2cb0f1d94ca189eb244e8e9fe67a27a7" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv4 address. A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt;&lt;code&gt;NetmaskValueError&lt;/code&gt;&lt;/a&gt; is raised if the mask is not valid for an IPv4 address.</source>
          <target state="translated">一个&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; &lt;/a&gt;如果提出&lt;em&gt;地址&lt;/em&gt;是不是有效的IPv4地址。一个&lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt; &lt;code&gt;NetmaskValueError&lt;/code&gt; &lt;/a&gt;如果掩码是无效的IPv4地址被提高。</target>
        </trans-unit>
        <trans-unit id="2c00af07c169fbcb2dc420227c3de9360f629263" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv6 address. A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt;&lt;code&gt;NetmaskValueError&lt;/code&gt;&lt;/a&gt; is raised if the mask is not valid for an IPv6 address.</source>
          <target state="translated">一个&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; &lt;/a&gt;如果提出&lt;em&gt;地址&lt;/em&gt;是不是一个有效的IPv6地址。一个&lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt; &lt;code&gt;NetmaskValueError&lt;/code&gt; &lt;/a&gt;如果掩码是无效的IPv6地址升高。</target>
        </trans-unit>
        <trans-unit id="e22e8e2b70a072517721b45185e0df25bf62617a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; can wrap an already-open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or operate directly on a named file. The &lt;em&gt;filename&lt;/em&gt; argument specifies either the file object to wrap, or the name of the file to open (as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object). When wrapping an existing file object, the wrapped file will not be closed when the &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="translated">一个&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;可以换一个已经打开的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;，或者直接在指定的文件进行操作。的&lt;em&gt;文件名&lt;/em&gt;参数指定任一文件对象到包裹物，或该文件的打开名称（作为一个&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径状&lt;/a&gt;物体）。打包现有文件对象时，关闭&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;时不会关闭打包的文件。</target>
        </trans-unit>
        <trans-unit id="826a7a8ccbf423464475cb4ae7502ae90c2e645a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; can wrap an already-open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or operate directly on a named file. The &lt;em&gt;filename&lt;/em&gt; argument specifies either the file object to wrap, or the name of the file to open (as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object). When wrapping an existing file object, the wrapped file will not be closed when the &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f46664bc28103047a5cc26287a1fd211662851" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">一个&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;实例有以下方法：</target>
        </trans-unit>
        <trans-unit id="4e40ef7751f7971309b0f2f98a0b9e618f82a29f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance encapsulates an SMTP connection. It has methods that support a full repertoire of SMTP and ESMTP operations. If the optional host and port parameters are given, the SMTP &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; method is called with those parameters during initialization. If specified, &lt;em&gt;local_hostname&lt;/em&gt; is used as the FQDN of the local host in the HELO/EHLO command. Otherwise, the local hostname is found using &lt;a href=&quot;socket#socket.getfqdn&quot;&gt;&lt;code&gt;socket.getfqdn()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; call returns anything other than a success code, an &lt;a href=&quot;#smtplib.SMTPConnectError&quot;&gt;&lt;code&gt;SMTPConnectError&lt;/code&gt;&lt;/a&gt; is raised. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). If the timeout expires, &lt;a href=&quot;socket#socket.timeout&quot;&gt;&lt;code&gt;socket.timeout&lt;/code&gt;&lt;/a&gt; is raised. The optional source_address parameter allows binding to some specific source address in a machine with multiple network interfaces, and/or to some specific source TCP port. It takes a 2-tuple (host, port), for the socket to bind to as its source address before connecting. If omitted (or if host or port are &lt;code&gt;''&lt;/code&gt; and/or 0 respectively) the OS default behavior will be used.</source>
          <target state="translated">一个&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;实例封装的SMTP连接。它具有支持SMTP和ESMTP操作的全部功能的方法。如果给出了可选的主机和端口参数，则在初始化期间将使用这些参数调用SMTP &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;方法。如果指定，则在HELO / EHLO命令中将&lt;em&gt;local_hostname&lt;/em&gt;用作本地主机的FQDN。否则，使用&lt;a href=&quot;socket#socket.getfqdn&quot;&gt; &lt;code&gt;socket.getfqdn()&lt;/code&gt; &lt;/a&gt;找到本地主机名。如果&lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;调用返回成功代码以外的任何内容，&lt;a href=&quot;#smtplib.SMTPConnectError&quot;&gt; &lt;code&gt;SMTPConnectError&lt;/code&gt; &lt;/a&gt;引发SMTPConnectError。可选&lt;em&gt;超时&lt;/em&gt;参数指定以秒为单位的超时，以阻止类似连接尝试的操作（如果未指定，将使用全局默认超时设置）。如果超时到期，则会引发&lt;a href=&quot;socket#socket.timeout&quot;&gt; &lt;code&gt;socket.timeout&lt;/code&gt; &lt;/a&gt;。可选的source_address参数允许绑定到具有多个网络接口的计算机中的某些特定源地址和/或某些特定源TCP端口。连接之前，套接字需要两个元组（主机，端口）绑定为其源地址。如果省略（或者主机或端口分别是 &lt;code&gt;''&lt;/code&gt; 和/或0），则将使用操作系统默认行为。</target>
        </trans-unit>
        <trans-unit id="b06f296a09f34cbedecd22805400c41792ba65c6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">一个&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;实例有以下方法：</target>
        </trans-unit>
        <trans-unit id="2c58fa6751490e6d0e0d24391a1319962ea6b856" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt;&lt;code&gt;SMTP_SSL&lt;/code&gt;&lt;/a&gt; instance behaves exactly the same as instances of &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt;&lt;code&gt;SMTP_SSL&lt;/code&gt;&lt;/a&gt; should be used for situations where SSL is required from the beginning of the connection and using &lt;code&gt;starttls()&lt;/code&gt; is not appropriate. If &lt;em&gt;host&lt;/em&gt; is not specified, the local host is used. If &lt;em&gt;port&lt;/em&gt; is zero, the standard SMTP-over-SSL port (465) is used. The optional arguments &lt;em&gt;local_hostname&lt;/em&gt;, &lt;em&gt;timeout&lt;/em&gt; and &lt;em&gt;source_address&lt;/em&gt; have the same meaning as they do in the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class. &lt;em&gt;context&lt;/em&gt;, also optional, can contain a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; and allows configuring various aspects of the secure connection. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">一个&lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt; &lt;code&gt;SMTP_SSL&lt;/code&gt; &lt;/a&gt;实例的行为完全一样的情况下，&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt; &lt;code&gt;SMTP_SSL&lt;/code&gt; &lt;/a&gt;应该用于从连接开始就需要SSL 且不适合使用 &lt;code&gt;starttls()&lt;/code&gt; 的情况。如果&lt;em&gt;主机&lt;/em&gt;没有指定，则使用本地主机。如果&lt;em&gt;端口&lt;/em&gt;为零，则使用标准的SMTP over SSL端口（465）。可选参数&lt;em&gt;local_hostname&lt;/em&gt;，&lt;em&gt;timeout&lt;/em&gt;和&lt;em&gt;source_address&lt;/em&gt;与&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;类中的含义相同。&lt;em&gt;context&lt;/em&gt;（也是可选的）可以包含&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;并允许配置安全连接的各个方面。请阅读&lt;a href=&quot;ssl#ssl-security&quot;&gt;安全性注意事项&lt;/a&gt;以获取最佳实践。</target>
        </trans-unit>
        <trans-unit id="4381f9c58b5b614abf7892a4b1f45ba2f8360660" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; is raised if the private key doesn&amp;rsquo;t match with the certificate.</source>
          <target state="translated">一个&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;如果私钥不与证书相匹配上升。</target>
        </trans-unit>
        <trans-unit id="6503930af8cf259e4f55b3889f6a90017471de7a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; belongs to the application, the &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; is not allowed to modify &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; objects passed to it from the application, although it may make copies and modify those.</source>
          <target state="translated">一个&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; 的&lt;/a&gt;属于应用程序时，&lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; 的&lt;/a&gt;是不允许修改&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;对象传递给它从应用程序，但它可能使拷贝和修改的。</target>
        </trans-unit>
        <trans-unit id="79185203e0837e407c9cfffcf6c6215ce7683000" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; can be raised if either file cannot be accessed for some reason.</source>
          <target state="translated">一个&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;可如果任一文件不能因为某些原因被访问得到提升。</target>
        </trans-unit>
        <trans-unit id="c390610582f1c814d75321837553c7075f775df3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised on syscall failure.</source>
          <target state="translated">一个&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;上引发的系统调用失败。</target>
        </trans-unit>
        <trans-unit id="6e45de73f5fdf516cc14c157c02fac73fbe32076" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with the value of errno when the syscall returns -1.</source>
          <target state="translated">一个&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;升高与errno的值时，系统调用返回-1。</target>
        </trans-unit>
        <trans-unit id="cfafa94088c5bdf5d8dde31f6359f2a768fafdbe" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; will be raised for integer values that cannot be represented in (binary) plist files.</source>
          <target state="translated">一个&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;将提高对于不能在（二进制）的plist文件来表示的整数值。</target>
        </trans-unit>
        <trans-unit id="8902561dc3621643794d523ee377886fb9098907" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;Asynchronous Context Managers&lt;/a&gt;.</source>
          <target state="translated">实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。提供了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;的默认实现，该实现返回 &lt;code&gt;self&lt;/code&gt; ,而&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;是抽象方法，默认情况下返回 &lt;code&gt;None&lt;/code&gt; 。另请参见&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;异步上下文管理器&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="dda979d2a681c46df74b589ab265649e61f26e6c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;.</source>
          <target state="translated">实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。提供了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;的默认实现，该实现返回 &lt;code&gt;self&lt;/code&gt; ,而&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;是抽象方法，默认情况下返回 &lt;code&gt;None&lt;/code&gt; 。另请参阅&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="9fdb63e9d860e12df6617deab601b29ae6ed82b3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for objects representing a file system path, e.g. &lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt;&lt;code&gt;pathlib.PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表文件系统路径的对象的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;，例如&lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt; &lt;code&gt;pathlib.PurePath&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33ab1cf8909ceb57812b37b76ad04f8a117605e8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; to provide the ability to read &lt;em&gt;resources&lt;/em&gt;.</source>
          <target state="translated">提供读取&lt;em&gt;资源&lt;/em&gt;能力的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3659fcc10888c5f8705dd1f37cd33e48a2bd5bc6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for built-in modules. All known built-in modules are listed in &lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt;&lt;code&gt;sys.builtin_module_names&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">内置模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;导入&lt;/a&gt;器。&lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt; &lt;code&gt;sys.builtin_module_names&lt;/code&gt; &lt;/a&gt;中列出了所有已知的内置模块。此类实现&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; &lt;/a&gt; ABC。</target>
        </trans-unit>
        <trans-unit id="d3c626fb55d328c4d6e0b42ec6745a070458977c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for frozen modules. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">冻结模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;进口商&lt;/a&gt;。此类实现&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; &lt;/a&gt; ABC。</target>
        </trans-unit>
        <trans-unit id="5ba830af2baa220c63058bd688a4c963ad3b97c2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;, similar to &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt;, that supports combining both synchronous and asynchronous context managers, as well as having coroutines for cleanup logic.</source>
          <target state="translated">类似于&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;异步上下文管理器&lt;/a&gt;，它支持将同步上下文管理器和异步上下文管理器组合在一起，并具有协程以进行清理逻辑。</target>
        </trans-unit>
        <trans-unit id="a33f8c504da439806ad6f5c27e7d7aa8cddd8ff2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;Asynchronous Context Managers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc7eac6c4b47b2315d64959d3cca85f620cb794" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa2efd6271fd8c9504c26e450ee4186fd02e58f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for objects representing a file system path, e.g. &lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt;&lt;code&gt;pathlib.PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358e988e76edb92a04a829658d6e0b9e4671e17d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; to provide the ability to read &lt;em&gt;resources&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64448c03d49b3734a0c2bef8a552c0cddb79f909" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for built-in modules. All known built-in modules are listed in &lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt;&lt;code&gt;sys.builtin_module_names&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b140912525c1a36c9a7a36ad6e3498b34061acd3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for frozen modules. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c37a084fd05a1723cae4dcbce9bafda6d05463" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;, similar to &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt;, that supports combining both synchronous and asynchronous context managers, as well as having coroutines for cleanup logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1e4da468b2701c8321a708c9ecb7fa13e7e244" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_algorithms#Examples&quot;&gt;LRU (least recently used) cache&lt;/a&gt; works best when the most recent calls are the best predictors of upcoming calls (for example, the most popular articles on a news server tend to change each day). The cache&amp;rsquo;s size limit assures that the cache does not grow without bound on long-running processes such as web servers.</source>
          <target state="translated">一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_algorithms#Examples&quot;&gt;LRU（最近最少使用）缓存&lt;/a&gt;时，最近通话是即将到来的呼叫的最佳预测效果最好（例如，新闻服务器上的最流行的文章往往会改变每一天）。缓存的大小限制可确保缓存不会在不受限制的长时间运行的进程（例如Web服务器）上增长。</target>
        </trans-unit>
        <trans-unit id="0cbb6b0513c86e9d2a7dcccebb18fe2a4dff0ec6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&quot;&gt;LRU (least recently used) cache&lt;/a&gt; works best when the most recent calls are the best predictors of upcoming calls (for example, the most popular articles on a news server tend to change each day). The cache&amp;rsquo;s size limit assures that the cache does not grow without bound on long-running processes such as web servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3761bc9891cb807e2bd71dcdb229acbbbd262ea3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; input stream, ready to read from the start of the optional input data.</source>
          <target state="translated">一个&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;输入流，准备从可选输入数据的开始阅读。</target>
        </trans-unit>
        <trans-unit id="134b8c5f8672fe5893203afb4343e752db19a0c9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;'AF_INET'&lt;/code&gt; address is a tuple of the form &lt;code&gt;(hostname, port)&lt;/code&gt; where &lt;em&gt;hostname&lt;/em&gt; is a string and &lt;em&gt;port&lt;/em&gt; is an integer.</source>
          <target state="translated">一个 &lt;code&gt;'AF_INET'&lt;/code&gt; 地址是以下形式的元组 &lt;code&gt;(hostname, port)&lt;/code&gt; ，其中&lt;em&gt;主机名&lt;/em&gt;是一个字符串，&lt;em&gt;端口&lt;/em&gt;是一个整数。</target>
        </trans-unit>
        <trans-unit id="728c7bfe4ba1acdb2c72fa346ca49007566679c3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;'AF_UNIX'&lt;/code&gt; address is a string representing a filename on the filesystem.</source>
          <target state="translated">一个 &lt;code&gt;'AF_UNIX'&lt;/code&gt; 地址是代表文件系统中的文件名的字符串。</target>
        </trans-unit>
        <trans-unit id="279c56929f7657d41eb016d797accbea5fc43126" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTTPError&lt;/code&gt; exception raised as a security consideration if the HTTPRedirectHandler is presented with a redirected URL which is not an HTTP, HTTPS or FTP URL.</source>
          <target state="translated">一个 &lt;code&gt;HTTPError&lt;/code&gt; 提出为安全考虑异常，如果是HTTPRedirectHandler的提出了一个的重定向URL这不是HTTP，HTTPS和FTP URL。</target>
        </trans-unit>
        <trans-unit id="33219ca499b092a52f7abbdd6ce7f57c5fcff6f7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async def&lt;/code&gt; function definition. Has the same fields as &lt;a href=&quot;#ast.FunctionDef&quot;&gt;&lt;code&gt;FunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e15d34d18efcaf549913dce3621961594f1b7ca" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;await&lt;/code&gt; expression. &lt;code&gt;value&lt;/code&gt; is what it waits for. Only valid in the body of an &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt;&lt;code&gt;AsyncFunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3fcacb835ee81a42ed8d1456cd79b0226a380e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; instance holds the headers from an HTTP response. It is implemented using the &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">一个 &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; 实例保持从HTTP响应的报头。它是使用&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;类实现的。</target>
        </trans-unit>
        <trans-unit id="3f556ab229a8f8a3a47ed35d148d0d0e441a49a6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; statement. &lt;code&gt;test&lt;/code&gt; holds a single node, such as a &lt;a href=&quot;#ast.Compare&quot;&gt;&lt;code&gt;Compare&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;orelse&lt;/code&gt; each hold a list of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64e19d30a6b038f871b1a0ba266542e0cf44731" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__abs__&lt;/code&gt; that is covariant in its return type.</source>
          <target state="translated">具有一个抽象方法 &lt;code&gt;__abs__&lt;/code&gt; 的ABC，它的返回类型是协变的。</target>
        </trans-unit>
        <trans-unit id="d1781ec94a5b61e39438eca65acc12f99677f117" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__bytes__&lt;/code&gt;.</source>
          <target state="translated">具有一个抽象方法 &lt;code&gt;__bytes__&lt;/code&gt; 的ABC 。</target>
        </trans-unit>
        <trans-unit id="b0fc1ecd30f8b9047835f4fbca4de0c1a7114ddd" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__complex__&lt;/code&gt;.</source>
          <target state="translated">具有一种抽象方法 &lt;code&gt;__complex__&lt;/code&gt; 的ABC 。</target>
        </trans-unit>
        <trans-unit id="0cc0d8a21ea5d1cfd983b9cd9cc3577a029a5d40" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__float__&lt;/code&gt;.</source>
          <target state="translated">具有一种抽象方法 &lt;code&gt;__float__&lt;/code&gt; 的ABC 。</target>
        </trans-unit>
        <trans-unit id="5a96e7a759cdcee0e8a671529f6684f0284b3c73" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__index__&lt;/code&gt;.</source>
          <target state="translated">具有一种抽象方法 &lt;code&gt;__index__&lt;/code&gt; 的ABC 。</target>
        </trans-unit>
        <trans-unit id="79db425b6df47a0eb8f4b913a4b8f04661c96e98" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__int__&lt;/code&gt;.</source>
          <target state="translated">具有一种抽象方法 &lt;code&gt;__int__&lt;/code&gt; 的ABC 。</target>
        </trans-unit>
        <trans-unit id="15ea43b80301cadc8e24d4d28cf8330de4a4c022" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__round__&lt;/code&gt; that is covariant in its return type.</source>
          <target state="translated">具有一个抽象方法 &lt;code&gt;__round__&lt;/code&gt; 的ABC，它的返回类型是协变的。</target>
        </trans-unit>
        <trans-unit id="d47c45aeccb0981a58aa461b9dad821d712d95bc" translate="yes" xml:space="preserve">
          <source>An Event object manages an internal flag that can be set to &lt;em&gt;true&lt;/em&gt; with the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method and reset to &lt;em&gt;false&lt;/em&gt; with the &lt;a href=&quot;#asyncio.Event.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method blocks until the flag is set to &lt;em&gt;true&lt;/em&gt;. The flag is set to &lt;em&gt;false&lt;/em&gt; initially.</source>
          <target state="translated">事件对象管理可被设置为一个内部标志&lt;em&gt;真正&lt;/em&gt;与&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;方法和复位为&lt;em&gt;假&lt;/em&gt;与&lt;a href=&quot;#asyncio.Event.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;方法。的&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;方法将阻塞，直到该标志被设置为&lt;em&gt;真&lt;/em&gt;。该标志最初设置为&lt;em&gt;false&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="33c1328176988806c7acc0aff05cc07892efc2ee" translate="yes" xml:space="preserve">
          <source>An HMAC object has the following methods:</source>
          <target state="translated">一个HMAC对象有以下方法:</target>
        </trans-unit>
        <trans-unit id="96ce959eac9c1efc4346b40a6c2b0fcdb09eb53b" translate="yes" xml:space="preserve">
          <source>An HTTP Extension Framework &lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;, Section 7 (Experimental)</source>
          <target state="translated">HTTP扩展框架&lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;第7节（实验性）</target>
        </trans-unit>
        <trans-unit id="db46c1af527bc8802a0694ac6abd0bc630b63030" translate="yes" xml:space="preserve">
          <source>An HTTP Extension Framework &lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-61&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;, Section 7 (Experimental)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2501160a58b3e46f799c91de6330ed1424f8f7c4" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code for Indicating Hints &lt;a href=&quot;https://tools.ietf.org/html/rfc8297.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 8297&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586cd579fe48ea0181edb6aee914365f538aa9a9" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles &lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">报告法律障碍的HTTP状态代码&lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b53d4a75ae59ffea5b1a33aa114bbecf5009f795" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles &lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950ad3d1cdc9b45ddd459fc6e7dc06daf0425f0b" translate="yes" xml:space="preserve">
          <source>An HTTP status code as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;. This numeric value corresponds to a value found in the dictionary of codes as found in &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.responses&quot;&gt;&lt;code&gt;http.server.BaseHTTPRequestHandler.responses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2616中&lt;/strong&gt;&lt;/a&gt;定义的HTTP状态代码。此数字值对应于在&lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.responses&quot;&gt; &lt;code&gt;http.server.BaseHTTPRequestHandler.responses&lt;/code&gt; 中&lt;/a&gt;找到的代码字典中的值。</target>
        </trans-unit>
        <trans-unit id="0fd6615738f7a41f38401d20b6960d63cc413cb5" translate="yes" xml:space="preserve">
          <source>An SSL context holds various data longer-lived than single SSL connections, such as SSL configuration options, certificate(s) and private key(s). It also manages a cache of SSL sessions for server-side sockets, in order to speed up repeated connections from the same clients.</source>
          <target state="translated">SSL上下文保存着比单个SSL连接寿命更长的各种数据,如SSL配置选项、证书和私钥。它还为服务器端套接字管理SSL会话的缓存,以加快同一客户的重复连接。</target>
        </trans-unit>
        <trans-unit id="76cf9150b9af7f68ed4e620f15b7b416606b07f7" translate="yes" xml:space="preserve">
          <source>An SSLObject communicates with the outside world using memory buffers. The class &lt;a href=&quot;#ssl.MemoryBIO&quot;&gt;&lt;code&gt;MemoryBIO&lt;/code&gt;&lt;/a&gt; provides a memory buffer that can be used for this purpose. It wraps an OpenSSL memory BIO (Basic IO) object:</source>
          <target state="translated">SSLObject使用内存缓冲区与外界通信。&lt;a href=&quot;#ssl.MemoryBIO&quot;&gt; &lt;code&gt;MemoryBIO&lt;/code&gt; &lt;/a&gt;类提供了可用于此目的的内存缓冲区。它包装一个OpenSSL内存BIO（基本IO）对象：</target>
        </trans-unit>
        <trans-unit id="a466897649a3d651921f5fa00e86176f05ce65c2" translate="yes" xml:space="preserve">
          <source>An XML declaration was found somewhere other than the start of the input data.</source>
          <target state="translated">在输入数据的开头以外的某个地方发现了一个XML声明。</target>
        </trans-unit>
        <trans-unit id="2f6e529d041ed7501f54f3d2eb8b240dc32017aa" translate="yes" xml:space="preserve">
          <source>An abbreviation for &amp;ldquo;derive window&amp;rdquo;, &lt;a href=&quot;#curses.window.derwin&quot;&gt;&lt;code&gt;derwin()&lt;/code&gt;&lt;/a&gt; is the same as calling &lt;a href=&quot;#curses.window.subwin&quot;&gt;&lt;code&gt;subwin()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;begin_y&lt;/em&gt; and &lt;em&gt;begin_x&lt;/em&gt; are relative to the origin of the window, rather than relative to the entire screen. Return a window object for the derived window.</source>
          <target state="translated">&amp;ldquo;派生窗口&amp;rdquo;的缩写&lt;a href=&quot;#curses.window.derwin&quot;&gt; &lt;code&gt;derwin()&lt;/code&gt; &lt;/a&gt;与调用&lt;a href=&quot;#curses.window.subwin&quot;&gt; &lt;code&gt;subwin()&lt;/code&gt; &lt;/a&gt;相同，除了&lt;em&gt;begin_y&lt;/em&gt;和&lt;em&gt;begin_x&lt;/em&gt;相对于窗口的原点而不是相对于整个屏幕。返回派生窗口的窗口对象。</target>
        </trans-unit>
        <trans-unit id="e10c1add34316ae69c55a9723388948395613133" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loading arbitrary resources from the storage back-end.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;的抽象基类，它实现了可选的&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;协议，用于从存储后端加载任意资源。</target>
        </trans-unit>
        <trans-unit id="3c00c78ac6821af3449c4a38de1c0d33c74f95d2" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loaders that inspect modules.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;的抽象基类，为检查模块的加载程序实现了可选的&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;协议。</target>
        </trans-unit>
        <trans-unit id="940dc0b3afc6e45c33bbd105502b6ee876696cec" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for the exact definition for a loader.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;的抽象基类。有关加载程序的确切定义，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7401f395dccd11d677211d9563b9e95eb89ebab5" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loading arbitrary resources from the storage back-end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0db0a7b142974ca4ce772e7260ab0b495fe83a" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loaders that inspect modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e97f3876374a37e56d4245e3852f67bf0f985f" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for the exact definition for a loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db9b27bf89080da856677605e14657460be5647" translate="yes" xml:space="preserve">
          <source>An abstract base class for asyncio policies.</source>
          <target state="translated">一个asyncio策略的抽象基类。</target>
        </trans-unit>
        <trans-unit id="b462ad15f20b8da0d5b31b0986af332c0c7b0e96" translate="yes" xml:space="preserve">
          <source>An abstract base class for implementing source (and optionally bytecode) file loading. The class inherits from both &lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt;&lt;code&gt;ResourceLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt;&lt;code&gt;ExecutionLoader&lt;/code&gt;&lt;/a&gt;, requiring the implementation of:</source>
          <target state="translated">用于实现源（和可选的字节码）文件加载的抽象基类。该类继承自&lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt; &lt;code&gt;ResourceLoader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt; &lt;code&gt;ExecutionLoader&lt;/code&gt; &lt;/a&gt;，需要实现：</target>
        </trans-unit>
        <trans-unit id="c0dc52b90a16c5199a8601d18484021f8b780efd" translate="yes" xml:space="preserve">
          <source>An abstract base class for resource readers capable of serving the &lt;code&gt;files&lt;/code&gt; interface. Subclasses ResourceReader and provides concrete implementations of the ResourceReader&amp;rsquo;s abstract methods. Therefore, any loader supplying TraversableReader also supplies ResourceReader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2021dfdbcfaef781d0d06f712def8d7955c0628e" translate="yes" xml:space="preserve">
          <source>An abstract base class for time zone information objects. These are used by the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; classes to provide a customizable notion of time adjustment (for example, to account for time zone and/or daylight saving time).</source>
          <target state="translated">时区信息对象的抽象基类。这些被使用的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;的类来提供时间调整的可定制的概念（例如，以考虑到时区和/或夏令时）。</target>
        </trans-unit>
        <trans-unit id="41c1eeca19930aa837c9177b8ebdce0b081bc67f" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;发现者&lt;/a&gt;的抽象基类。</target>
        </trans-unit>
        <trans-unit id="cfd3e5d07b9f0593a253ce92bd9938e6c4961954" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt;. For compatibility, this is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;元路径查找器&lt;/a&gt;的抽象基类。为了兼容性，这是&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="a589cb6dfdfee9aae19397d6a303891c9da74964" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. Though it bears some similarities to &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;MetaPathFinder&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;PathEntryFinder&lt;/code&gt; is meant for use only within the path-based import subsystem provided by &lt;code&gt;PathFinder&lt;/code&gt;. This ABC is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt; for compatibility reasons only.</source>
          <target state="translated">表示&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;路径入口查找器&lt;/a&gt;的抽象基类。虽然它具有一些相似之处&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;MetaPathFinder&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;PathEntryFinder&lt;/code&gt; 是为仅在所提供的基于路径的进口子系统使用 &lt;code&gt;PathFinder&lt;/code&gt; 。仅出于兼容性原因，此ABC是&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="41486f4a3356c2fa47f9cd992060772ba5c1e998" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e7d3d824aac467d8e2c0c2433ae146ca49b9e6" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt;. For compatibility, this is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07e60929ea850cec3390065ad4623c92cfcfcb9" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. Though it bears some similarities to &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;MetaPathFinder&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;PathEntryFinder&lt;/code&gt; is meant for use only within the path-based import subsystem provided by &lt;code&gt;PathFinder&lt;/code&gt;. This ABC is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt; for compatibility reasons only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9af4121f78134bb685216fbf44bd4f5d826951" translate="yes" xml:space="preserve">
          <source>An abstract base class which inherits from &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;InspectLoader&lt;/code&gt;&lt;/a&gt; that, when implemented, helps a module to be executed as a script. The ABC represents an optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">从&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;InspectLoader&lt;/code&gt; &lt;/a&gt;继承的抽象基类，在实现时可以帮助将模块作为脚本执行。ABC代表可选的&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;协议。</target>
        </trans-unit>
        <trans-unit id="11de885f0ab5a2d6a8da413f025f1f42a92914a8" translate="yes" xml:space="preserve">
          <source>An abstract base class which inherits from &lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt;&lt;code&gt;ResourceLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt;&lt;code&gt;ExecutionLoader&lt;/code&gt;&lt;/a&gt;, providing concrete implementations of &lt;a href=&quot;#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;ResourceLoader.get_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt;&lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt; &lt;code&gt;ResourceLoader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt; &lt;code&gt;ExecutionLoader&lt;/code&gt; &lt;/a&gt;继承的抽象基类，提供&lt;a href=&quot;#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;ResourceLoader.get_data()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt; &lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="955770255554b096c2a2d0d00989cc8cb2114744" translate="yes" xml:space="preserve">
          <source>An abstract class that provides methods to execute calls asynchronously. It should not be used directly, but through its concrete subclasses.</source>
          <target state="translated">一个抽象类,它提供了异步执行调用的方法。它不应该直接使用,而是通过它的具体子类来使用。</target>
        </trans-unit>
        <trans-unit id="f134861215475c0febc28a88cff9f900d434fd5d" translate="yes" xml:space="preserve">
          <source>An abstract example would be the following to ensure correct resource management:</source>
          <target state="translated">一个抽象的例子是,为了确保正确的资源管理。</target>
        </trans-unit>
        <trans-unit id="7c833ccaac11f4d73ed6358d2404695fb39851cf" translate="yes" xml:space="preserve">
          <source>An abstract method for finding a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the specified module. Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;, this method was meant for use in &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; and in the path-based import subsystem.</source>
          <target state="translated">查找指定模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;的抽象方法。该方法最初在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302中&lt;/strong&gt;&lt;/a&gt;指定，旨在用于&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;和基于路径的导入子系统。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
